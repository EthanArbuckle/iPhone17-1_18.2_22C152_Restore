unint64_t sub_1C10EDA14(uint64_t a1)
{
  unint64_t result;

  result = sub_1C10EDA3C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C10EDA3C()
{
  unint64_t result = qword_1EA1AB5A8;
  if (!qword_1EA1AB5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB5A8);
  }
  return result;
}

unint64_t sub_1C10EDA90(void *a1)
{
  a1[1] = sub_1BFF2F918();
  a1[2] = sub_1BFE2563C();
  unint64_t result = sub_1C10EDAC8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C10EDAC8()
{
  unint64_t result = qword_1EA1AB5B0;
  if (!qword_1EA1AB5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB5B0);
  }
  return result;
}

uint64_t sub_1C10EDB1C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C10EDB28(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionEnum()
{
  return &type metadata for FormatOptionEnum;
}

uint64_t SharingPuzzleTypeActivityTypeProvider.supportedActivityTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SharingPuzzleTypeActivityTypeProvider.__allocating_init(supportedActivityTypes:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t SharingPuzzleTypeActivityTypeProvider.init(supportedActivityTypes:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t SharingPuzzleTypeActivityTypeProvider.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SharingPuzzleTypeActivityTypeProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of SharingPuzzleTypeActivityTypeProviderType.supportedActivityTypes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for SharingPuzzleTypeActivityTypeProvider()
{
  return self;
}

uint64_t method lookup function for SharingPuzzleTypeActivityTypeProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingPuzzleTypeActivityTypeProvider);
}

uint64_t dispatch thunk of SharingPuzzleTypeActivityTypeProvider.__allocating_init(supportedActivityTypes:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t PuzzleMetadata.allowedStorefrontIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleMetadata.authors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleMetadata.behaviorFlags.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t PuzzleMetadata.blockedStorefrontIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleMetadata.dataResourceID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMetadata.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMetadata.difficulty.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t PuzzleMetadata.relatedPuzzleIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleMetadata.isDraft.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t PuzzleMetadata.isPaid.getter()
{
  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t PuzzleMetadata.language.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMetadata.minNewsVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMetadata.liverpooledAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PuzzleMetadata();
  return sub_1BFF97A18(v1 + *(int *)(v3 + 64), a1, (uint64_t (*)(void))sub_1BFF97C40);
}

uint64_t type metadata accessor for PuzzleMetadata()
{
  uint64_t result = qword_1EA1AB5D8;
  if (!qword_1EA1AB5D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PuzzleMetadata.publishDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PuzzleMetadata();
  return sub_1BFF97A18(v1 + *(int *)(v3 + 68), a1, (uint64_t (*)(void))sub_1BFF97C40);
}

uint64_t PuzzleMetadata.puzzleTypeID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PuzzleMetadata() + 72));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMetadata.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PuzzleMetadata() + 76));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMetadata.teaserConfiguration.getter()
{
  type metadata accessor for PuzzleMetadata();
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleMetadata.thumbnailLarge.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PuzzleMetadata() + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMetadata.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PuzzleMetadata() + 88));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMetadata.init(allowedStorefrontIDs:authors:behaviorFlags:blockedStorefrontIDs:dataResourceID:description:difficulty:isDraft:isPaid:language:minNewsVersion:liverpooledAt:publishDate:puzzleTypeID:relatedPuzzleIDs:subtitle:teaserConfiguration:thumbnailLarge:title:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, long long a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(unsigned char *)(a9 + 80) = a11;
  *(unsigned char *)(a9 + 81) = a12;
  *(_OWORD *)(a9 + 88) = a13;
  *(void *)(a9 + 104) = a14;
  *(void *)(a9 + 112) = a15;
  v28 = (int *)type metadata accessor for PuzzleMetadata();
  sub_1BFCB311C(a16, a9 + v28[16]);
  uint64_t result = sub_1BFCB311C(a17, a9 + v28[17]);
  v30 = (void *)(a9 + v28[18]);
  void *v30 = a18;
  v30[1] = a19;
  *(void *)(a9 + 72) = a20;
  v31 = (void *)(a9 + v28[19]);
  void *v31 = a21;
  v31[1] = a22;
  *(void *)(a9 + v28[20]) = a23;
  v32 = (void *)(a9 + v28[21]);
  void *v32 = a24;
  v32[1] = a25;
  v33 = (void *)(a9 + v28[22]);
  void *v33 = a26;
  v33[1] = a27;
  return result;
}

unint64_t sub_1C10EE0C0(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x73726F68747561;
      break;
    case 2:
      unint64_t result = 0x726F697661686562;
      break;
    case 4:
      unint64_t result = 0x6F73655261746164;
      break;
    case 5:
      unint64_t result = 0x7470697263736564;
      break;
    case 6:
      unint64_t result = 0x6C75636966666964;
      break;
    case 7:
      unint64_t result = 0x74666172447369;
      break;
    case 8:
      unint64_t result = 0x646961507369;
      break;
    case 9:
      unint64_t result = 0x65676175676E616CLL;
      break;
    case 10:
      unint64_t result = 0x567377654E6E696DLL;
      break;
    case 11:
      unint64_t result = 0x6F6F70726576696CLL;
      break;
    case 12:
      unint64_t result = 0x446873696C627570;
      break;
    case 13:
      unint64_t result = 0x7954656C7A7A7570;
      break;
    case 14:
      unint64_t result = 0xD000000000000010;
      break;
    case 15:
      unint64_t result = 0x656C746974627573;
      break;
    case 16:
      unint64_t result = 0xD000000000000013;
      break;
    case 17:
      unint64_t result = 0x69616E626D756874;
      break;
    case 18:
      unint64_t result = 0x656C746974;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C10EE338()
{
  return sub_1C10EE0C0(*v0);
}

uint64_t sub_1C10EE340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C10F08B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C10EE368(uint64_t a1)
{
  unint64_t v2 = sub_1C10EF100();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C10EE3A4(uint64_t a1)
{
  unint64_t v2 = sub_1C10EF100();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  sub_1C10EF0A4();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PuzzleMetadata();
  MEMORY[0x1F4188790](v9);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  v68 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1C10EF100();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  }
  v65 = v11;
  uint64_t v66 = v6;
  v64 = (int *)v9;
  sub_1BFED9C20();
  char v69 = 0;
  sub_1BFDEF88C();
  sub_1C152065C();
  v14 = v65;
  *(void *)v65 = v70;
  char v69 = 1;
  sub_1C152065C();
  v14[1] = v70;
  LOBYTE(v70) = 2;
  uint64_t v63 = 0;
  uint64_t v15 = sub_1C152063C();
  if (v16) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = v15;
  }
  v14[2] = v17;
  char v69 = 3;
  sub_1C152065C();
  v14[3] = v70;
  LOBYTE(v70) = 4;
  v14[4] = sub_1C152060C();
  v14[5] = v18;
  LOBYTE(v70) = 5;
  v14[6] = sub_1C152060C();
  v14[7] = v19;
  LOBYTE(v70) = 6;
  uint64_t v20 = sub_1C152067C();
  if (v21) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = v20;
  }
  v14[8] = v22;
  LOBYTE(v70) = 7;
  uint64_t v23 = sub_1C152063C();
  BOOL v26 = (v24 & 1) == 0 && v23 != 0;
  v65[80] = v26;
  LOBYTE(v70) = 8;
  uint64_t v27 = sub_1C152063C();
  BOOL v30 = (v28 & 1) == 0 && v27 != 0;
  v65[81] = v30;
  LOBYTE(v70) = 9;
  uint64_t v31 = sub_1C152060C();
  v32 = v65;
  *((void *)v65 + 11) = v31;
  *((void *)v32 + 12) = v33;
  LOBYTE(v70) = 10;
  uint64_t v34 = sub_1C152060C();
  uint64_t v36 = 3157561;
  if (v35) {
    uint64_t v36 = v34;
  }
  unint64_t v37 = 0xE300000000000000;
  if (v35) {
    unint64_t v37 = v35;
  }
  v38 = v65;
  *((void *)v65 + 13) = v36;
  *((void *)v38 + 14) = v37;
  LOBYTE(v70) = 11;
  sub_1C152062C();
  v40 = &v65[v64[16]];
  if (v39)
  {
    uint64_t v42 = sub_1C151631C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v40, 1, 1, v42);
  }
  else
  {
    sub_1C151628C();
    uint64_t v41 = sub_1C151631C();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 0, 1, v41);
  }
  LOBYTE(v70) = 12;
  sub_1C152062C();
  v44 = &v65[v64[17]];
  if (v43)
  {
    uint64_t v46 = sub_1C151631C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v44, 1, 1, v46);
  }
  else
  {
    sub_1C151628C();
    uint64_t v45 = sub_1C151631C();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 0, 1, v45);
  }
  LOBYTE(v70) = 13;
  uint64_t v47 = sub_1C152060C();
  if (v48) {
    uint64_t v49 = v47;
  }
  else {
    uint64_t v49 = 0;
  }
  unint64_t v50 = 0xE000000000000000;
  if (v48) {
    unint64_t v50 = v48;
  }
  v51 = (uint64_t *)&v65[v64[18]];
  uint64_t *v51 = v49;
  v51[1] = v50;
  char v69 = 14;
  sub_1C152065C();
  *((void *)v65 + 9) = v70;
  LOBYTE(v70) = 15;
  uint64_t v52 = sub_1C152060C();
  v53 = (uint64_t *)&v65[v64[19]];
  uint64_t *v53 = v52;
  v53[1] = v54;
  sub_1C10EF154();
  char v69 = 16;
  sub_1C10EF1BC();
  sub_1C152065C();
  *(void *)&v65[v64[20]] = v70;
  LOBYTE(v70) = 17;
  uint64_t v55 = sub_1C152060C();
  v56 = (uint64_t *)&v65[v64[21]];
  uint64_t *v56 = v55;
  v56[1] = v57;
  LOBYTE(v70) = 18;
  uint64_t v58 = sub_1C152060C();
  uint64_t v60 = v59;
  (*(void (**)(char *, uint64_t))(v66 + 8))(v8, v5);
  uint64_t v61 = (uint64_t)v65;
  v62 = (uint64_t *)&v65[v64[22]];
  uint64_t *v62 = v58;
  v62[1] = v60;
  sub_1BFF97A18(v61, v67, (uint64_t (*)(void))type metadata accessor for PuzzleMetadata);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  return sub_1BFE54890(v61, (uint64_t (*)(void))type metadata accessor for PuzzleMetadata);
}

void sub_1C10EF0A4()
{
  if (!qword_1EA1AB5B8)
  {
    sub_1C10EF100();
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AB5B8);
    }
  }
}

unint64_t sub_1C10EF100()
{
  unint64_t result = qword_1EA1AB5C0;
  if (!qword_1EA1AB5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB5C0);
  }
  return result;
}

void sub_1C10EF154()
{
  if (!qword_1EA1AB5C8)
  {
    sub_1C03F901C();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AB5C8);
    }
  }
}

unint64_t sub_1C10EF1BC()
{
  unint64_t result = qword_1EA1AB5D0;
  if (!qword_1EA1AB5D0)
  {
    sub_1C10EF154();
    sub_1C10EF234();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB5D0);
  }
  return result;
}

unint64_t sub_1C10EF234()
{
  unint64_t result = qword_1EA19B298;
  if (!qword_1EA19B298)
  {
    sub_1C03F901C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19B298);
  }
  return result;
}

uint64_t sub_1C10EF29C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleMetadata.init(from:)(a1, a2);
}

uint64_t initializeBufferWithCopyOfBuffer for PuzzleMetadata(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    uint64_t v9 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v9;
    uint64_t v10 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v10;
    uint64_t v11 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = a2[9];
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    *(unsigned char *)(a1 + 81) = *((unsigned char *)a2 + 81);
    uint64_t v12 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v12;
    uint64_t v13 = a2[14];
    uint64_t v14 = a3[16];
    __dst = (void *)(a1 + v14);
    v40 = (char *)a2 + v14;
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v13;
    uint64_t v15 = sub_1C151631C();
    uint64_t v41 = *(void *)(v15 - 8);
    char v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v40, 1, v15))
    {
      sub_1BFF97C40();
      memcpy(__dst, v40, *(void *)(*(void *)(v17 - 8) + 64));
      uint64_t v18 = v41;
    }
    else
    {
      uint64_t v18 = v41;
      (*(void (**)(void *, char *, uint64_t))(v41 + 16))(__dst, v40, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v19 = a3[17];
    uint64_t v20 = (void *)(v7 + v19);
    char v21 = (char *)a2 + v19;
    if (v16((char *)a2 + v19, 1, v15))
    {
      sub_1BFF97C40();
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v20, v21, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v20, 0, 1, v15);
    }
    uint64_t v23 = a3[18];
    uint64_t v24 = a3[19];
    v25 = (void *)(v7 + v23);
    BOOL v26 = (uint64_t *)((char *)a2 + v23);
    uint64_t v27 = v26[1];
    void *v25 = *v26;
    v25[1] = v27;
    char v28 = (void *)(v7 + v24);
    v29 = (uint64_t *)((char *)a2 + v24);
    uint64_t v30 = v29[1];
    void *v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = a3[21];
    *(void *)(v7 + a3[20]) = *(uint64_t *)((char *)a2 + a3[20]);
    v32 = (void *)(v7 + v31);
    uint64_t v33 = (uint64_t *)((char *)a2 + v31);
    uint64_t v34 = v33[1];
    void *v32 = *v33;
    v32[1] = v34;
    uint64_t v35 = a3[22];
    uint64_t v36 = (void *)(v7 + v35);
    unint64_t v37 = (uint64_t *)((char *)a2 + v35);
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for PuzzleMetadata(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 64);
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 68);
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PuzzleMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  uint64_t v11 = *(void *)(a2 + 112);
  uint64_t v12 = a3[16];
  __dst = (void *)(a1 + v12);
  uint64_t v38 = (const void *)(a2 + v12);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  uint64_t v13 = sub_1C151631C();
  uint64_t v39 = *(void *)(v13 - 8);
  uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v38, 1, v13))
  {
    sub_1BFF97C40();
    memcpy(__dst, v38, *(void *)(*(void *)(v15 - 8) + 64));
    uint64_t v16 = v39;
  }
  else
  {
    uint64_t v16 = v39;
    (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(__dst, v38, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v13);
  }
  uint64_t v17 = a3[17];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  if (v14((const void *)(a2 + v17), 1, v13))
  {
    sub_1BFF97C40();
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v18, v19, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v13);
  }
  uint64_t v21 = a3[18];
  uint64_t v22 = a3[19];
  uint64_t v23 = (void *)(a1 + v21);
  uint64_t v24 = (void *)(a2 + v21);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  BOOL v26 = (void *)(a1 + v22);
  uint64_t v27 = (void *)(a2 + v22);
  uint64_t v28 = v27[1];
  *BOOL v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = a3[21];
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  uint64_t v32 = v31[1];
  void *v30 = *v31;
  v30[1] = v32;
  uint64_t v33 = a3[22];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PuzzleMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[16];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1BFF97C40();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[17];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  int v18 = v11((void *)(a1 + v15), 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    sub_1BFF97C40();
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  uint64_t v21 = a3[18];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[19];
  uint64_t v25 = (void *)(a1 + v24);
  BOOL v26 = (void *)(a2 + v24);
  void *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[21];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  void *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[22];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  void *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PuzzleMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v9 = a3[16];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v12 = sub_1C151631C();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    sub_1BFF97C40();
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[17];
  uint64_t v17 = (void *)(a1 + v16);
  int v18 = (const void *)(a2 + v16);
  if (v14((const void *)(a2 + v16), 1, v12))
  {
    sub_1BFF97C40();
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v17, v18, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  *(_OWORD *)(a1 + v20) = *(_OWORD *)(a2 + v20);
  uint64_t v21 = a3[21];
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  *(_OWORD *)(a1 + a3[22]) = *(_OWORD *)(a2 + a3[22]);
  return a1;
}

uint64_t assignWithTake for PuzzleMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[16];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_1C151631C();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    sub_1BFF97C40();
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = a3[17];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  int v24 = v17((void *)(a1 + v21), 1, v15);
  int v25 = v17(v23, 1, v15);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v22, v23, v15);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v22, v15);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    sub_1BFF97C40();
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v22, v23, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
LABEL_13:
  uint64_t v27 = a3[18];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  void *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[19];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (uint64_t *)(a2 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  void *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[21];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (uint64_t *)(a2 + v37);
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  void *v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[22];
  char v43 = (void *)(a1 + v42);
  v44 = (uint64_t *)(a2 + v42);
  uint64_t v46 = *v44;
  uint64_t v45 = v44[1];
  *char v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C10F0454);
}

uint64_t sub_1C10F0454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 112);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1BFF97C40();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 64);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C10F0518);
}

uint64_t sub_1C10F0518(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 112) = (a2 - 1);
  }
  else
  {
    sub_1BFF97C40();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 64);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C10F05C0()
{
  sub_1BFF97C40();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for PuzzleMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *unint64_t result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10F0770);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 18;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleMetadata.CodingKeys()
{
  return &type metadata for PuzzleMetadata.CodingKeys;
}

unint64_t sub_1C10F07AC()
{
  unint64_t result = qword_1EA1AB5E8;
  if (!qword_1EA1AB5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB5E8);
  }
  return result;
}

unint64_t sub_1C10F0804()
{
  unint64_t result = qword_1EA1AB5F0;
  if (!qword_1EA1AB5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB5F0);
  }
  return result;
}

unint64_t sub_1C10F085C()
{
  unint64_t result = qword_1EA1AB5F8;
  if (!qword_1EA1AB5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB5F8);
  }
  return result;
}

uint64_t sub_1C10F08B0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001C1634BF0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73726F68747561 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F697661686562 && a2 == 0xED00007367616C46 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1634C10 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F73655261746164 && a2 == 0xEE00444965637275 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6C75636966666964 && a2 == 0xEA00000000007974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x74666172447369 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x646961507369 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x567377654E6E696DLL && a2 == 0xEE006E6F69737265 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6F6F70726576696CLL && a2 == 0xED0000744164656CLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x446873696C627570 && a2 == 0xEB00000000657461 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x7954656C7A7A7570 && a2 == 0xEC00000044496570 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1634C30 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1634C50 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x69616E626D756874 && a2 == 0xEE00656772614C6CLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 18;
    }
    else {
      return 19;
    }
  }
}

uint64_t sub_1C10F111C()
{
  uint64_t v1 = v0;
  uint64_t v27 = sub_1C1516E3C();
  uint64_t v2 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v26 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v5 = MEMORY[0x1F4188790](v4).n128_u64[0];
  uint64_t v7 = (char *)&v23 - v6;
  id v8 = objc_msgSend(v1, sel_topicsConfig, v5);
  sub_1C10F1458();
  unint64_t v9 = sub_1C151EBCC();

  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC868];
LABEL_12:
    swift_bridgeObjectRelease();
    return v14;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C15204BC();
  uint64_t v10 = result;
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  if (v10 >= 1)
  {
    uint64_t v12 = 0;
    unint64_t v23 = v9 & 0xC000000000000001;
    uint64_t v13 = (void (**)(char *, char *, uint64_t))(v2 + 32);
    uint64_t v14 = MEMORY[0x1E4FBC868];
    uint64_t v24 = v10;
    unint64_t v25 = v9;
    do
    {
      if (v23) {
        id v15 = (id)MEMORY[0x1C18C7CB0](v12, v9);
      }
      else {
        id v15 = *(id *)(v9 + 8 * v12 + 32);
      }
      uint64_t v16 = v15;
      ++v12;
      id v17 = objc_msgSend(v15, sel_topicID, v23);
      uint64_t v18 = sub_1C151E62C();
      uint64_t v20 = v19;

      objc_msgSend(v16, sel_capAtBaseline);
      objc_msgSend(v16, sel_halfLifeCoefficientOverride);
      objc_msgSend(v16, sel_limitInGroup);
      objc_msgSend(v16, sel_publisherTopicWeight);
      objc_msgSend(v16, sel_scoreMultiplier);
      objc_msgSend(v16, sel_shouldLimitInGroup);
      objc_msgSend(v16, sel_tagWeight);
      objc_msgSend(v16, sel_useHalfLifeCoefficientOverride);
      sub_1C1516E2C();
      uint64_t v21 = (uint64_t)v26;
      (*v13)(v26, v7, v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v28 = v14;
      sub_1C1069DD4(v21, v18, v20, isUniquelyReferenced_nonNull_native);
      uint64_t v14 = v28;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v9 = v25;
    }
    while (v24 != v12);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C10F1458()
{
  unint64_t result = qword_1EB860D58;
  if (!qword_1EB860D58)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB860D58);
  }
  return result;
}

uint64_t FeedJournalGroupResultKind.rawValue.getter()
{
  uint64_t result = 1954047342;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1953718636;
      break;
    case 2:
      uint64_t result = 1819242352;
      break;
    case 3:
      uint64_t result = 0x646570706F7264;
      break;
    case 4:
      uint64_t result = 0x7972746572;
      break;
    case 5:
      uint64_t result = 1885956979;
      break;
    case 6:
      uint64_t result = 1701736302;
      break;
    default:
      return result;
  }
  return result;
}

NewsFeed::FeedJournalGroupResultKind_optional __swiftcall FeedJournalGroupResultKind.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C10F159C(unsigned __int8 *a1, char *a2)
{
  return sub_1C14932EC(*a1, *a2);
}

uint64_t sub_1C10F15A8()
{
  return sub_1C0450D10();
}

uint64_t sub_1C10F15B4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C10F1690()
{
  return sub_1C0450D10();
}

NewsFeed::FeedJournalGroupResultKind_optional sub_1C10F1698(Swift::String *a1)
{
  return FeedJournalGroupResultKind.init(rawValue:)(*a1);
}

void sub_1C10F16A4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1954047342;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 1953718636;
      goto LABEL_3;
    case 2:
      *a1 = 1819242352;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x646570706F7264;
      a1[1] = 0xE700000000000000;
      break;
    case 4:
      *a1 = 0x7972746572;
      a1[1] = 0xE500000000000000;
      break;
    case 5:
      *a1 = 1885956979;
      a1[1] = 0xE400000000000000;
      break;
    case 6:
      *a1 = 1701736302;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE400000000000000;
      break;
  }
}

uint64_t FeedJournalGroupResultKind.description.getter()
{
  sub_1BFF27ECC();
  uint64_t v0 = sub_1C151FE5C();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_1C10F186C()
{
  unint64_t result = qword_1EA1AB600;
  if (!qword_1EA1AB600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB600);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedJournalGroupResultKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10F1990);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedJournalGroupResultKind()
{
  return &type metadata for FeedJournalGroupResultKind;
}

uint64_t sub_1C10F19C8(uint64_t a1)
{
  sub_1BFE450A8(0, &qword_1EB871370, MEMORY[0x1E4FABA30]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)v16 - v5;
  v16[1] = a1;
  swift_getKeyPath();
  sub_1BFE455E4();
  sub_1C1517C3C();
  sub_1BFE44640();
  sub_1BFE450A8(0, &qword_1EB8712A8, MEMORY[0x1E4FAB678]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
  unint64_t v12 = v11 + v10;
  uint64_t v13 = *MEMORY[0x1E4FAB5F0];
  sub_1BFE450A8(0, &qword_1EB871298, MEMORY[0x1E4FAB618]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  (*(void (**)(unint64_t, void, uint64_t))(v9 + 104))(v12, *MEMORY[0x1E4FAB620], v8);
  sub_1BFE45238(&qword_1EB871200, &qword_1EB871208, MEMORY[0x1E4FAB4D0]);
  sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1C10F1CFC(uint64_t a1, uint64_t a2)
{
  sub_1BFE450A8(0, &qword_1EB871370, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)&v15[-v7];
  uint64_t v17 = a1;
  uint64_t v9 = swift_allocObject();
  unint64_t v10 = (void *)(a2 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 24));
  uint64_t v11 = v10[3];
  uint64_t v12 = v10[4];
  __swift_project_boxed_opaque_existential_1(v10, v11);
  *(double *)(v9 + 16) = (*(double (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  uint64_t *v8 = v9;
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FABA08], v5);
  uint64_t v16 = a2;
  uint64_t v13 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB538];
  sub_1C10F2768(0, &qword_1EB871288, MEMORY[0x1E4FAB538]);
  sub_1BFE45238(&qword_1EB871280, &qword_1EB871288, v13);
  sub_1C151731C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C10F1F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a2;
  sub_1BFE450A8(0, &qword_1EB871370, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v40 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v37 - v6);
  uint64_t v38 = a1;
  uint64_t v44 = a1;
  swift_getKeyPath();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = type metadata accessor for HeadlineViewLayout.Context(0);
  unint64_t v10 = (void *)(a2 + *(int *)(v9 + 24));
  uint64_t v11 = v10[3];
  uint64_t v12 = v10[4];
  __swift_project_boxed_opaque_existential_1(v10, v11);
  *(double *)(v8 + 16) = (*(double (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  *uint64_t v7 = v8;
  uint64_t v13 = *MEMORY[0x1E4FABA08];
  uint64_t v14 = v40;
  uint64_t v37 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v40 + 104);
  v37(v7, v13, v5);
  id v15 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C10F2768(0, &qword_1EB871208, MEMORY[0x1E4FAB4D0]);
  uint64_t v17 = v16;
  uint64_t v18 = sub_1BFE45238(&qword_1EB871200, &qword_1EB871208, v15);
  uint64_t v19 = sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  uint64_t v42 = v18;
  uint64_t v43 = v17;
  uint64_t v39 = v19;
  sub_1C151737C();
  swift_release();
  uint64_t v20 = *(void (**)(uint64_t *, uint64_t))(v14 + 8);
  uint64_t v21 = v5;
  v20(v7, v5);
  uint64_t v22 = v41 + *(int *)(v9 + 20);
  uint64_t result = type metadata accessor for FeedHeadline(0);
  uint64_t v24 = (unsigned __int8 *)(v22 + *(int *)(result + 40));
  if (v24[1] != 1 || *v24 <= 1u)
  {
    uint64_t v25 = v38;
    uint64_t v44 = v38;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = 0x4010000000000000;
    *uint64_t v7 = v26;
    v37(v7, *MEMORY[0x1E4FABA00], v5);
    sub_1C151738C();
    v20(v7, v5);
    uint64_t v44 = v25;
    swift_getKeyPath();
    uint64_t v27 = v10[3];
    uint64_t v28 = v10[4];
    __swift_project_boxed_opaque_existential_1(v10, v27);
    (*(void (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
    sub_1BFE455E4();
    sub_1C1517C3C();
    sub_1BFE44640();
    sub_1BFE450A8(0, &qword_1EB8712A8, MEMORY[0x1E4FAB678]);
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 - 8);
    unint64_t v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1C1529AE0;
    unint64_t v34 = v33 + v32;
    uint64_t v35 = *MEMORY[0x1E4FAB610];
    sub_1BFE450A8(0, &qword_1EB871298, MEMORY[0x1E4FAB618]);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 104))(v34, v35, v36);
    (*(void (**)(unint64_t, void, uint64_t))(v31 + 104))(v34, *MEMORY[0x1E4FAB620], v30);
    sub_1C151737C();
    swift_release();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t *, uint64_t))v20)(v7, v21);
  }
  return result;
}

uint64_t sub_1C10F2424()
{
  return swift_deallocObject();
}

uint64_t sub_1C10F2434()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_13Tm()
{
  uint64_t v1 = type metadata accessor for HeadlineViewLayout.Context(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  unint64_t v3 = v0 + v2 + *(int *)(v1 + 20);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v5 = v4[10];
  unint64_t v6 = v3 + v5 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  uint64_t v7 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v8 = sub_1C151631C();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);

    unint64_t v9 = v6 + *(int *)(v7 + 28);
    uint64_t v10 = sub_1C1515FDC();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  unint64_t v11 = v3 + v4[11];
  uint64_t v12 = sub_1C151D2DC();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  if (*(void *)(v3 + v4[12] + 8) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v3 + v4[13]) >= 3uLL) {
    swift_unknownObjectRelease();
  }

  __swift_destroy_boxed_opaque_existential_1(v0 + v2 + *(int *)(v1 + 24));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C10F2768(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for HeadlineViewLayout;
    v8[1] = &type metadata for HeadlineViewLayout.Attributes;
    v8[2] = sub_1BFE455E4();
    v8[3] = sub_1BFE4774C();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C10F27EC(uint64_t a1)
{
  return sub_1C10F1F0C(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V7()
{
  return &type metadata for A12_V7;
}

uint64_t sub_1C10F2818(void *a1)
{
  uint64_t v3 = v1;
  sub_1C10F5CCC(0, &qword_1EA1AB6A8, (uint64_t (*)(void))sub_1C10F5C78, (uint64_t)&type metadata for A12_V7.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C10F5C78();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C10F55CC(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C10F2A60(uint64_t a1)
{
  unint64_t v2 = sub_1C10F5C78();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C10F2A9C(uint64_t a1)
{
  unint64_t v2 = sub_1C10F5C78();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C10F2AD8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C10F59C8(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C10F2B20(void *a1)
{
  return sub_1C10F2818(a1);
}

uint64_t sub_1C10F2B38()
{
  sub_1C10F56EC();
  return sub_1C151798C();
}

uint64_t sub_1C10F2BB4@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C10F5CCC(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C10F2C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a2;
  v53 = a3;
  uint64_t v56 = sub_1C151635C();
  uint64_t v6 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v76 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v53 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v57 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  uint64_t v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v65 = a1;
  sub_1BFF1AFA4(a1, v57, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v60 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v55 = sub_1C151633C();
  uint64_t v54 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  v74 = &type metadata for A12_V7;
  unint64_t v20 = sub_1C0186488();
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v66 = sub_1C1520FAC();
  uint64_t v67 = v22;
  uint64_t v70 = 95;
  unint64_t v71 = 0xE100000000000000;
  uint64_t v68 = 45;
  unint64_t v69 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v54;
  *uint64_t v26 = v55;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v72, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C(v57, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v28, 0, 1, v59);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v29, 0, 1, v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  sub_1BFFFC630(v17, v18);
  v74 = &type metadata for A12_V7;
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  sub_1BFF1AFA4(v61, v76, (uint64_t (*)(void))v60);
  sub_1C0019370(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v31 = (void *)(v30 + 16);
  swift_beginAccess();
  unint64_t v32 = *(void **)(v30 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v30 + 16) = v32;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v32 = sub_1BFFB83AC(0, v32[2] + 1, 1, v32);
    void *v31 = v32;
  }
  unint64_t v35 = v32[2];
  unint64_t v34 = v32[3];
  if (v35 >= v34 >> 1)
  {
    unint64_t v32 = sub_1BFFB83AC((void *)(v34 > 1), v35 + 1, 1, v32);
    void *v31 = v32;
  }
  v32[2] = v35 + 1;
  uint64_t v36 = &v32[2 * v35];
  v36[4] = sub_1C064667C;
  v36[5] = 0;
  swift_endAccess();
  uint64_t v37 = v64;
  uint64_t v38 = sub_1C001E608((uint64_t)&unk_1F1B83270, 0, 0, v30, 4, 0, 0, 0);
  if (v37)
  {
    swift_release();
    swift_release();
    sub_1BFF1F104(v76, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  }
  else
  {
    uint64_t v39 = v38;
    swift_release();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v41 = (void *)(v40 + 16);
    swift_beginAccess();
    uint64_t v42 = *(void **)(v40 + 16);
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v40 + 16) = v42;
    if ((v43 & 1) == 0)
    {
      uint64_t v42 = sub_1BFFB83AC(0, v42[2] + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    unint64_t v45 = v42[2];
    unint64_t v44 = v42[3];
    if (v45 >= v44 >> 1)
    {
      uint64_t v42 = sub_1BFFB83AC((void *)(v44 > 1), v45 + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    v42[2] = v45 + 1;
    uint64_t v46 = &v42[2 * v45];
    v46[4] = sub_1C064667C;
    v46[5] = 0;
    swift_endAccess();
    uint64_t v48 = sub_1C001E608((uint64_t)&unk_1F1B83298, 0, 0, v40, 0, 0, 0, 0);
    swift_release();
    uint64_t v66 = v39;
    sub_1C0018900(v48);
    uint64_t v49 = v66;
    uint64_t v50 = type metadata accessor for A12_V7.Bound();
    v51 = v53;
    v53[3] = v50;
    v51[4] = sub_1C10F55CC(&qword_1EA1AB618, (void (*)(uint64_t))type metadata accessor for A12_V7.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v51);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v72, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v76, (uint64_t)boxed_opaque_existential_0 + *(int *)(v50 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v50 + 28)) = v49;
  }
  return result;
}

double sub_1C10F3414@<D0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v47 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  MEMORY[0x1F4188790](v3);
  *(void *)&long long v45 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0019370(0, (unint64_t *)&qword_1EB87A800, (uint64_t (*)(uint64_t))sub_1C00737F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v6 = type metadata accessor for A12_V7.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(void *)(v7 + *(int *)(v8 + 40));
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(int *)(v8 + 32);
  uint64_t v44 = v7;
  double v12 = *(double *)(v7 + v11);
  sub_1BFC66384(v10 + 16, (uint64_t)&v52);
  sub_1BFC66384(v10 + 56, (uint64_t)v51);
  double v13 = v12 * *(double *)(v10 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t v14 = swift_initStackObject();
  sub_1BFC773DC(&v52, v14 + 16);
  sub_1BFC773DC(v51, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v50[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v50, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  uint64_t v15 = *(void *)(v9 + 16);
  sub_1BFC66384(v15 + 16, (uint64_t)v51);
  sub_1BFC66384(v15 + 56, (uint64_t)v50);
  double v16 = v12 * *(double *)(v15 + 96);
  uint64_t v17 = swift_initStackObject();
  sub_1BFC773DC(v51, v17 + 16);
  sub_1BFC773DC(v50, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v49[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v49, (uint64_t *)&v52);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  uint64_t v18 = sub_1BFEB3714((uint64_t)&v52, *(void *)(*(void *)(v2 + *(int *)(v6 + 28)) + 16) - 1);
  *(void *)&long long v52 = inited;
  sub_1BFEB37F8(v18);
  uint64_t v19 = v52;
  uint64_t v46 = v2;
  v48[2] = v2;
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C06472C0(v20, v19, (void (*)(char *, uint64_t))sub_1C10F5614, (uint64_t)v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v21 + 16);
  sub_1C1520B6C();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v23 = swift_dynamicCastClass();
  if (!v23)
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = MEMORY[0x1E4FBC860];
  }
  uint64_t v24 = *(void *)(v23 + 16);
  swift_release();
  if (v24 == v22 - (v22 != 0))
  {
    uint64_t v25 = swift_dynamicCastClass();
    if (!v25)
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v25 = sub_1C00B2130(v21, v21 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80)), v22 != 0, (2 * v22) | 1);
  }
  swift_bridgeObjectRelease();
  *(void *)&long long v52 = v25;
  sub_1C0019370(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  uint64_t v27 = v26;
  sub_1C10F561C(&qword_1EA197690);
  uint64_t v41 = v27;
  sub_1C151F0BC();
  swift_release();
  uint64_t v28 = *MEMORY[0x1E4FAB6D8];
  uint64_t v29 = sub_1C151759C();
  uint64_t v30 = v45;
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v45, v28, v29);
  uint64_t v31 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v42 + 104))(v30, *MEMORY[0x1E4FAB8F0], v43);
  MEMORY[0x1F4188790](v31);
  sub_1C10F57A4(0, &qword_1EA1AB638, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  sub_1C1517BEC();
  swift_bridgeObjectRelease();
  uint64_t v32 = sub_1C1517BFC();
  long long v45 = v52;
  uint64_t v33 = v53;
  uint64_t v34 = v54;
  *(void *)&long long v52 = v21;
  *(void *)&v51[0] = v55;
  MEMORY[0x1F4188790](v32);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1C10F561C((unint64_t *)&qword_1EB879E10);
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v52 = v35;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v36 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = v47;
  *uint64_t v47 = 0;
  double result = *(double *)&v45;
  *(_OWORD *)(v37 + 8) = v45;
  *((void *)v37 + 3) = v33;
  *((void *)v37 + 4) = v34;
  uint64_t v39 = MEMORY[0x1E4FBC860];
  *((void *)v37 + 5) = v36;
  *((void *)v37 + 6) = v39;
  return result;
}

uint64_t sub_1C10F3B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C10F3C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C10F5CCC(0, &qword_1EA1AB650, (uint64_t (*)(void))sub_1C10F5698, (uint64_t)&type metadata for A12_V7.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)&v14[-v9];
  uint64_t v17 = a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 12;
  *uint64_t v10 = v11;
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FABA10], v7);
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  double v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C10F57A4(0, &qword_1EA1AB658, MEMORY[0x1E4FAB6F0]);
  sub_1C10F5760(&qword_1EA1AB660, &qword_1EA1AB658, v12);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C10F3DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v57 = a2;
  sub_1C10F5CCC(0, &qword_1EA1AB650, (uint64_t (*)(void))sub_1C10F5698, (uint64_t)&type metadata for A12_V7.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v42 - v7);
  uint64_t v59 = a1;
  uint64_t v9 = sub_1C151729C();
  uint64_t v10 = swift_allocBox();
  uint64_t v11 = *(void *)(v9 - 8);
  double v12 = *(void (**)(void))(v11 + 104);
  unsigned int v48 = *MEMORY[0x1E4FAB4E8];
  uint64_t v49 = v9;
  uint64_t v51 = v11 + 104;
  long long v52 = (void (*)(uint64_t, void, uint64_t))v12;
  v12(v13);
  uint64_t *v8 = v10;
  unsigned int v14 = *MEMORY[0x1E4FAB940];
  uint64_t v54 = *(void (**)(uint64_t *))(v6 + 104);
  unsigned int v50 = v14;
  v54(v8);
  uint64_t v15 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C10F57A4(0, &qword_1EA1AB668, MEMORY[0x1E4FAB4D0]);
  uint64_t v17 = v16;
  uint64_t v18 = sub_1C10F5760(&qword_1EA1AB670, &qword_1EA1AB668, v15);
  sub_1C151738C();
  uint64_t v21 = *(void (**)(uint64_t *))(v6 + 8);
  uint64_t v20 = v6 + 8;
  uint64_t v19 = v21;
  ((void (*)(uint64_t *, uint64_t))v21)(v8, v5);
  uint64_t v53 = a1;
  uint64_t v59 = a1;
  sub_1C0386118();
  uint64_t v23 = v22;
  uint64_t v24 = swift_allocBox();
  uint64_t v26 = (char *)v25 + *(int *)(v23 + 48);
  void *v25 = 7;
  uint64_t v27 = *MEMORY[0x1E4FAB8C8];
  uint64_t v28 = sub_1C1517A7C();
  uint64_t v29 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v26, v27, v28);
  uint64_t *v8 = v24;
  uint64_t v30 = v5;
  uint64_t v31 = v54;
  ((void (*)(uint64_t *, void, uint64_t))v54)(v8, *MEMORY[0x1E4FAB960], v5);
  uint64_t v58 = v57;
  sub_1C151731C();
  uint64_t result = ((uint64_t (*)(uint64_t *, uint64_t))v21)(v8, v5);
  uint64_t v33 = *(void *)(v55 + 16);
  if (v33)
  {
    swift_bridgeObjectRetain();
    uint64_t v46 = v19;
    uint64_t v47 = v18;
    uint64_t v34 = 0;
    unsigned int v44 = *MEMORY[0x1E4FAB9E0];
    uint64_t v57 = v20;
    uint64_t v42 = v29;
    uint64_t v43 = v5;
    uint64_t v45 = v33;
    do
    {
      uint64_t v56 = *(void *)(v55 + 8 * v34++ + 32);
      uint64_t v35 = v53;
      uint64_t v59 = v53;
      uint64_t v36 = v49;
      uint64_t v37 = swift_allocBox();
      v52(v38, v48, v36);
      uint64_t *v8 = v37;
      ((void (*)(uint64_t *, void, uint64_t))v31)(v8, v50, v30);
      swift_bridgeObjectRetain();
      sub_1C151738C();
      uint64_t v39 = v46;
      ((void (*)(uint64_t *, uint64_t))v46)(v8, v30);
      uint64_t v59 = v35;
      uint64_t v40 = ((uint64_t (*)(uint64_t *, void, uint64_t))v31)(v8, v44, v30);
      MEMORY[0x1F4188790](v40);
      sub_1C151731C();
      uint64_t v41 = v45;
      uint64_t v31 = v54;
      uint64_t v30 = v43;
      v39(v8);
      swift_bridgeObjectRelease();
    }
    while (v41 != v34);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C10F42E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C10F5CCC(0, &qword_1EA1AB650, (uint64_t (*)(void))sub_1C10F5698, (uint64_t)&type metadata for A12_V7.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v30 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAB9E0], v12);
  if (*(void *)(a2 + 16))
  {
    sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    uint64_t v29 = KeyPath;
    uint64_t v18 = qword_1F1B8A1E8;
    uint64_t v19 = (char *)v6 + v4[5];
    uint64_t v20 = *MEMORY[0x1E4FAB8C8];
    uint64_t v21 = sub_1C1517A7C();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v28 = v12;
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 104))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v21);
    uint64_t v24 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = v18;
    *(uint64_t *)((char *)v6 + v4[6]) = 0;
    *(uint64_t *)((char *)v6 + v4[7]) = (uint64_t)v24;
    id v25 = v24;
    sub_1C04B9C70((uint64_t)v10, (uint64_t)v6);
    sub_1BFF1F104((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    uint64_t v26 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C10F57A4(0, &qword_1EA1AB668, MEMORY[0x1E4FAB4D0]);
    sub_1C10F5760(&qword_1EA1AB670, &qword_1EA1AB668, v26);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C10F46D0(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  sub_1C10F5CCC(0, &qword_1EA1AB650, (uint64_t (*)(void))sub_1C10F5698, (uint64_t)&type metadata for A12_V7.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v16 - v7);
  uint64_t v20 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  uint64_t *v8 = v9;
  uint64_t v10 = *MEMORY[0x1E4FABA10];
  uint64_t v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  uint64_t v19 = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C10F57A4(0, &qword_1EA1AB668, MEMORY[0x1E4FAB4D0]);
  sub_1C10F5760(&qword_1EA1AB670, &qword_1EA1AB668, v12);
  sub_1C151734C();
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  uint64_t v20 = v17;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 6;
  uint64_t *v8 = v14;
  v11(v8, v10, v5);
  uint64_t v18 = v16;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1C10F4974(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C10F5CCC(0, &qword_1EA1AB650, (uint64_t (*)(void))sub_1C10F5698, (uint64_t)&type metadata for A12_V7.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x4060E00000000000;
  uint64_t *v11 = v12;
  uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB958], v8);
  if (*(void *)(a2 + 16))
  {
    uint64_t v14 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v15 = a2 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v16 = v4[5];
    v28[0] = v8;
    uint64_t v17 = (char *)v6 + v16;
    uint64_t v18 = *MEMORY[0x1E4FAB8C8];
    uint64_t v19 = sub_1C1517A7C();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    uint64_t v21 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = 0;
    *(void *)((char *)v6 + v4[6]) = 0;
    *(void *)((char *)v6 + v4[7]) = v21;
    double v22 = *MEMORY[0x1E4FB2848];
    double v23 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v24 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v25 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BFF1F104((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C10F57A4(0, &qword_1EA1AB668, MEMORY[0x1E4FAB4D0]);
    sub_1C10F5760(&qword_1EA1AB670, &qword_1EA1AB668, v27);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, void))(v9 + 8))(v11, v28[0]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C10F4D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C10F5CCC(0, &qword_1EA1AB650, (uint64_t (*)(void))sub_1C10F5698, (uint64_t)&type metadata for A12_V7.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x4060E00000000000;
  uint64_t *v11 = v12;
  uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB958], v8);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v15 = a2
        + *(void *)(v14 + 72)
        + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v16 = v4[5];
    v28[0] = v8;
    uint64_t v17 = (char *)v6 + v16;
    uint64_t v18 = *MEMORY[0x1E4FAB8C8];
    uint64_t v19 = sub_1C1517A7C();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    uint64_t v21 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = 0;
    *(void *)((char *)v6 + v4[6]) = 0;
    *(void *)((char *)v6 + v4[7]) = v21;
    double v22 = *MEMORY[0x1E4FB2848];
    double v23 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v24 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v25 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BFF1F104((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C10F57A4(0, &qword_1EA1AB668, MEMORY[0x1E4FAB4D0]);
    sub_1C10F5760(&qword_1EA1AB670, &qword_1EA1AB668, v27);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, void))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1C10F5108@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A12_V7.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C10F51F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C10F2C70(a1, a2, a3);
}

uint64_t sub_1C10F5210()
{
  return sub_1C12BC430();
}

unint64_t sub_1C10F5220(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C10F5250();
  unint64_t result = sub_1C10F52A4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C10F5250()
{
  unint64_t result = qword_1EA1AB608;
  if (!qword_1EA1AB608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB608);
  }
  return result;
}

unint64_t sub_1C10F52A4()
{
  unint64_t result = qword_1EA1AB610;
  if (!qword_1EA1AB610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB610);
  }
  return result;
}

uint64_t type metadata accessor for A12_V7.Bound()
{
  uint64_t result = qword_1EA1AB620;
  if (!qword_1EA1AB620) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C10F5344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C10F5358);
}

uint64_t sub_1C10F5358(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C10F5408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C10F541C);
}

void *sub_1C10F541C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C10F54C4()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C10F5574(uint64_t a1)
{
  uint64_t result = sub_1C10F55CC(&qword_1EA1AB630, (void (*)(uint64_t))type metadata accessor for A12_V7.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C10F55CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C10F5614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C10F3B38(a1, a2, a3);
}

uint64_t sub_1C10F561C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0019370(255, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C10F5690(uint64_t a1)
{
  return sub_1C10F3C08(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1C10F5698()
{
  unint64_t result = qword_1EA1AB640;
  if (!qword_1EA1AB640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB640);
  }
  return result;
}

unint64_t sub_1C10F56EC()
{
  unint64_t result = qword_1EA1AB648;
  if (!qword_1EA1AB648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB648);
  }
  return result;
}

uint64_t sub_1C10F5740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C10F5108(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C10F5748()
{
  return swift_deallocObject();
}

uint64_t sub_1C10F5758(uint64_t a1)
{
  return sub_1C10F3DF8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C10F5760(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C10F57A4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C10F57A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V7.Layout;
    v8[1] = &type metadata for A12_V7.Layout.Attributes;
    v8[2] = sub_1C10F5698();
    v8[3] = sub_1C10F56EC();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C10F5828(uint64_t a1)
{
  return sub_1C10F42E0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C10F5830(uint64_t a1)
{
  return sub_1C10F46D0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C10F5838(uint64_t a1)
{
  return sub_1C10F4974(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C10F5840(uint64_t a1)
{
  return sub_1C10F4D2C(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V7.Layout.Attributes()
{
  return &type metadata for A12_V7.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V7.Layout()
{
  return &type metadata for A12_V7.Layout;
}

unint64_t sub_1C10F586C()
{
  unint64_t result = qword_1EA1AB678;
  if (!qword_1EA1AB678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB678);
  }
  return result;
}

unint64_t sub_1C10F58C4()
{
  unint64_t result = qword_1EA1AB680;
  if (!qword_1EA1AB680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB680);
  }
  return result;
}

unint64_t sub_1C10F591C()
{
  unint64_t result = qword_1EA1AB688;
  if (!qword_1EA1AB688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB688);
  }
  return result;
}

unint64_t sub_1C10F5974()
{
  unint64_t result = qword_1EA1AB690;
  if (!qword_1EA1AB690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB690);
  }
  return result;
}

uint64_t sub_1C10F59C8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C10F5CCC(0, &qword_1EA1AB698, (uint64_t (*)(void))sub_1C10F5C78, (uint64_t)&type metadata for A12_V7.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C10F5C78();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C10F55CC(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C10F5C78()
{
  unint64_t result = qword_1EA1AB6A0;
  if (!qword_1EA1AB6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB6A0);
  }
  return result;
}

void sub_1C10F5CCC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for A12_V7.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10F5E00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V7.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V7.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C10F5E3C()
{
  unint64_t result = qword_1EA1AB6B0;
  if (!qword_1EA1AB6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB6B0);
  }
  return result;
}

unint64_t sub_1C10F5E94()
{
  unint64_t result = qword_1EA1AB6B8;
  if (!qword_1EA1AB6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB6B8);
  }
  return result;
}

unint64_t sub_1C10F5EEC()
{
  unint64_t result = qword_1EA1AB6C0;
  if (!qword_1EA1AB6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB6C0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatDeviceOrientation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10F600CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatDeviceOrientation()
{
  return &type metadata for DebugFormatDeviceOrientation;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatDevice(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 30 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 30) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE1)
  {
    unsigned int v6 = ((a2 - 226) >> 8) + 1;
    *unint64_t result = a2 + 30;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10F6110);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 30;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatDevice()
{
  return &type metadata for DebugFormatDevice;
}

unint64_t sub_1C10F614C()
{
  unint64_t result = qword_1EA1AB6C8;
  if (!qword_1EA1AB6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB6C8);
  }
  return result;
}

uint64_t sub_1C10F61A0@<X0>(void *a1@<X1>, unsigned __int8 a2@<W2>, uint64_t a3@<X8>, double a4@<D2>, double a5@<D4>, double a6@<D5>, double a7@<D6>, double a8@<D7>)
{
  double v28 = a8;
  double v29 = a7;
  double v30 = a6;
  double v31 = a5;
  double v26 = a4;
  uint64_t v32 = a3;
  uint64_t v27 = sub_1C151794C();
  uint64_t v10 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1C151709C();
  swift_release();
  char v13 = v33;
  objc_msgSend(a1, sel_bounds);
  sub_1C10F7A10(a2, a1);
  if (a2 >= 0x17u)
  {
    if (a2 - 23 >= 6)
    {
      uint64_t v15 = MEMORY[0x1E4FBC870];
      goto LABEL_6;
    }
    uint64_t v14 = &unk_1F1B658D8;
  }
  else
  {
    uint64_t v14 = &unk_1F1B65900;
  }
  uint64_t v15 = sub_1C00B8358((uint64_t)v14);
LABEL_6:
  sub_1C0453EF0(v13, v15);
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(a1, sel_traitCollection);
  MEMORY[0x1F4188790](v16);
  uint64_t v17 = (void *)sub_1C151F5CC();

  objc_msgSend(a1, sel_layoutMargins);
  if (a2 < 0x17u || a2 - 23 < 6)
  {
    sub_1C151F2CC();
    sub_1C151F2BC();
  }
  sub_1C1517D4C();
  sub_1C151F7EC();
  v25[1] = v19;
  v25[2] = v18;
  sub_1C151F7DC();
  double v26 = v20;
  v25[0] = v21;
  id v22 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v22, sel_nativeBounds);

  objc_msgSend(self, sel_userInterfaceLayoutDirectionForSemanticContentAttribute_, objc_msgSend(a1, sel_semanticContentAttribute));
  id v23 = objc_msgSend(v17, sel_preferredContentSizeCategory);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FAB820], v27);
  return sub_1C151763C();
}

uint64_t sub_1C10F65B8(unsigned __int8 a1)
{
  if (a1 < 0x17u) {
    return sub_1C00B8358((uint64_t)&unk_1F1B65900);
  }
  if (a1 - 23 >= 6) {
    return MEMORY[0x1E4FBC870];
  }
  return sub_1C00B8358((uint64_t)&unk_1F1B658D8);
}

uint64_t sub_1C10F65F0(uint64_t a1, char a2)
{
  uint64_t v3 = sub_1C151CEFC();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151CF3C();
  MEMORY[0x1C18C6FF0]();
  sub_1C151CEEC();
  MEMORY[0x1C18C7000](v5);
  sub_1C151CF0C();
  MEMORY[0x1C18C6FF0]();
  sub_1C151CEEC();
  MEMORY[0x1C18C7000](v5);
  sub_1C151CF2C();
  MEMORY[0x1C18C6FF0]();
  sub_1C151CEEC();
  MEMORY[0x1C18C7000](v5);
  uint64_t result = sub_1C10F7CD8(a2);
  if (result >> 6 && result >> 6 != 1)
  {
    if (result != 128) {
      return result;
    }
  }
  else
  {
    MEMORY[0x1C18C6FF0]();
    sub_1C151CEAC();
    uint64_t v7 = MEMORY[0x1C18C7000](v5);
    MEMORY[0x1C18C6FF0](v7);
    sub_1C151CE7C();
    uint64_t result = MEMORY[0x1C18C7000](v5);
  }
  MEMORY[0x1C18C6FF0](result);
  sub_1C151CE8C();
  return MEMORY[0x1C18C7000](v5);
}

unint64_t sub_1C10F67E4(char a1)
{
  unint64_t result = 0x5320656E6F685069;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x5820656E6F685069;
      break;
    case 2:
      unint64_t result = 0x5820656E6F685069;
      break;
    case 3:
      return result;
    case 4:
      unint64_t result = 0x3120656E6F685069;
      break;
    case 5:
      unint64_t result = 0x3120656E6F685069;
      break;
    case 6:
    case 10:
    case 14:
    case 18:
    case 22:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x3120656E6F685069;
      break;
    case 8:
      unint64_t result = 0x3120656E6F685069;
      break;
    case 9:
      unint64_t result = 0x3120656E6F685069;
      break;
    case 11:
      unint64_t result = 0x3120656E6F685069;
      break;
    case 12:
      unint64_t result = 0x3120656E6F685069;
      break;
    case 13:
      unint64_t result = 0x3120656E6F685069;
      break;
    case 15:
      unint64_t result = 0x3120656E6F685069;
      break;
    case 16:
      unint64_t result = 0x3120656E6F685069;
      break;
    case 17:
      unint64_t result = 0x3120656E6F685069;
      break;
    case 19:
      unint64_t result = 0x3120656E6F685069;
      break;
    case 20:
      unint64_t result = 0x3120656E6F685069;
      break;
    case 21:
      unint64_t result = 0x3120656E6F685069;
      break;
    case 23:
      unint64_t result = 1684099177;
      break;
    case 24:
      unint64_t result = 0x7269412064615069;
      break;
    case 25:
      unint64_t result = 0x6E694D2064615069;
      break;
    case 26:
    case 27:
    case 28:
      unint64_t result = 0x6F72502064615069;
      break;
    case 29:
      unint64_t result = 6512973;
      break;
    case 30:
      unint64_t result = 0x20746E6572727543;
      break;
    default:
      unint64_t result = 0x5820656E6F685069;
      break;
  }
  return result;
}

uint64_t sub_1C10F6BCC(uint64_t a1, uint64_t a2, char a3)
{
  swift_retain();
  sub_1C151709C();
  swift_release();
  uint64_t v5 = (void *)sub_1C01A17DC(v8);
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  id v6 = v5;
  sub_1C151CECC();
  swift_retain();
  sub_1C151709C();
  swift_release();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  sub_1C151CE9C();
  swift_retain();
  sub_1C151709C();
  swift_release();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  sub_1C151CEBC();
  swift_retain();
  sub_1C151709C();
  swift_release();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  sub_1C151CE6C();
  uint64_t result = sub_1C10F7CD8(a3);
  if (result >> 6 && result >> 6 != 1)
  {
    if (result != 128) {
      return result;
    }
    __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
    sub_1C151CEAC();
    __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
    sub_1C151CE7C();
    __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  }
  return sub_1C151CE8C();
}

uint64_t sub_1C10F6E80(char a1)
{
  uint64_t result = 0x7258656E6F685069;
  switch(a1)
  {
    case 1:
    case 2:
      uint64_t result = 0x7358656E6F685069;
      break;
    case 3:
      uint64_t result = 0x4553656E6F685069;
      break;
    case 4:
      uint64_t result = 0x3131656E6F685069;
      break;
    case 5:
      uint64_t result = 0x3131656E6F685069;
      break;
    case 6:
      uint64_t result = 0x3131656E6F685069;
      break;
    case 7:
      uint64_t result = 0x3231656E6F685069;
      break;
    case 8:
      uint64_t result = 0x3231656E6F685069;
      break;
    case 9:
      uint64_t result = 0x3231656E6F685069;
      break;
    case 10:
      uint64_t result = 0x3231656E6F685069;
      break;
    case 11:
      uint64_t result = 0x3331656E6F685069;
      break;
    case 12:
      uint64_t result = 0x3331656E6F685069;
      break;
    case 13:
      uint64_t result = 0x3331656E6F685069;
      break;
    case 14:
      uint64_t result = 0x3331656E6F685069;
      break;
    case 15:
      uint64_t result = 0x3431656E6F685069;
      break;
    case 16:
      uint64_t result = 0x3431656E6F685069;
      break;
    case 17:
      uint64_t result = 0x3431656E6F685069;
      break;
    case 18:
      uint64_t result = 0x3431656E6F685069;
      break;
    case 19:
      uint64_t result = 0x3531656E6F685069;
      break;
    case 20:
      uint64_t result = 0x3531656E6F685069;
      break;
    case 21:
      uint64_t result = 0x3531656E6F685069;
      break;
    case 22:
      uint64_t result = 0x3531656E6F685069;
      break;
    case 23:
      uint64_t result = 1684099177;
      break;
    case 24:
      uint64_t result = 0x72694164615069;
      break;
    case 25:
      uint64_t result = 0x696E694D64615069;
      break;
    case 26:
    case 27:
    case 28:
      uint64_t result = 0x5F6F725064615069;
      break;
    case 29:
      uint64_t result = 6513005;
      break;
    case 30:
      uint64_t result = 0x6465727265666E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C10F71B4(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1C10F6E80(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C10F6E80(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C10F7240()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C10F6E80(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C10F72A4()
{
  sub_1C10F6E80(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C10F72F8()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C10F6E80(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C10F7358@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C10F7C30();
  *a1 = result;
  return result;
}

uint64_t sub_1C10F7388@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C10F6E80(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1C10F73B4(void *a1@<X8>)
{
  *a1 = &unk_1F1B69E00;
}

uint64_t sub_1C10F73C4(uint64_t a1)
{
  unint64_t v2 = sub_1C10F7C84();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C10F7418(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C10F7C84();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C10F7474(uint64_t a1)
{
  unint64_t v2 = sub_1C10F7C84();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

uint64_t sub_1C10F74C8()
{
  return sub_1C0293CE4(&qword_1EA1AB6D0, &qword_1EA1AB6D8);
}

unint64_t sub_1C10F74FC()
{
  unint64_t result = qword_1EA1AB6E0;
  if (!qword_1EA1AB6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB6E0);
  }
  return result;
}

unint64_t sub_1C10F7550()
{
  return sub_1C10F67E4(*v0);
}

uint64_t sub_1C10F7558(char *a1, char *a2)
{
  return sub_1C147D410(*a1, *a2);
}

uint64_t sub_1C10F7564@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C10F75C4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7469617274726F70;
  if (*v1) {
    uint64_t v2 = 0x70616373646E616CLL;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xE900000000000065;
  }
  *a1 = v2;
  a1[1] = v3;
}

void sub_1C10F7608(void *a1@<X8>)
{
  *a1 = &unk_1F1B6BEC8;
}

uint64_t sub_1C10F7618(uint64_t a1)
{
  unint64_t v2 = sub_1C10F79BC();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C10F766C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C10F79BC();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C10F76C8(uint64_t a1)
{
  unint64_t v2 = sub_1C10F79BC();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

uint64_t sub_1C10F771C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C10F777C()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C10F77CC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10F7854()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C10F78C8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C10F794C()
{
  return sub_1C0293CE4(&qword_1EA1AB6E8, &qword_1EA1AB6F0);
}

uint64_t sub_1C10F797C()
{
  if (*v0) {
    return 0x70616373646E614CLL;
  }
  else {
    return 0x7469617274726F50;
  }
}

unint64_t sub_1C10F79BC()
{
  unint64_t result = qword_1EA1AB6F8;
  if (!qword_1EA1AB6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB6F8);
  }
  return result;
}

double sub_1C10F7A10(char a1, id a2)
{
  double result = 375.0;
  switch(a1)
  {
    case 1:
    case 4:
    case 5:
    case 8:
    case 12:
      return 375.0;
    case 3:
      return result;
    case 7:
    case 9:
    case 11:
    case 13:
      uint64_t v5 = 0x600000000000;
      goto LABEL_8;
    case 10:
    case 14:
      uint64_t v6 = 0xE00000000000;
      goto LABEL_10;
    case 15:
    case 17:
    case 19:
    case 21:
      uint64_t v5 = 0x900000000000;
LABEL_8:
      *(void *)&double result = v5 & 0xFFFFFFFFFFFFLL | 0x4078000000000000;
      return result;
    case 16:
    case 18:
    case 20:
    case 22:
      uint64_t v6 = 0xC00000000000;
LABEL_10:
      *(void *)&double result = v6 & 0xFFFFFFFFFFFFLL | 0x407A000000000000;
      return result;
    case 23:
      uint64_t v8 = 0x500000000000;
      goto LABEL_13;
    case 24:
      uint64_t v8 = 0xA00000000000;
LABEL_13:
      *(void *)&double result = v8 & 0xFFFFFFFFFFFFLL | 0x4089000000000000;
      break;
    case 25:
      double result = 744.0;
      break;
    case 26:
    case 27:
      double result = 834.0;
      break;
    case 28:
      double result = 1024.0;
      break;
    case 29:
    case 30:
      objc_msgSend(a2, sel_bounds, 375.0, 667.0, v2, v3);
      double result = v7;
      break;
    default:
      double result = 414.0;
      break;
  }
  return result;
}

uint64_t sub_1C10F7C30()
{
  unint64_t v0 = sub_1C1520C8C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1F) {
    return 31;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C10F7C84()
{
  unint64_t result = qword_1EA1AB700;
  if (!qword_1EA1AB700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB700);
  }
  return result;
}

uint64_t sub_1C10F7CD8(char a1)
{
  return byte_1C15C9016[a1];
}

uint64_t sub_1C10F7CEC(uint64_t a1)
{
  return sub_1C10F6BCC(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t *sub_1C10F7CF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for DebugFormatTestSuiteScopeResult();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v11 = (void *)a2[3];
        a1[3] = (uint64_t)v11;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v12 = v11;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        uint64_t v14 = a2[3];
        a1[2] = a2[2];
        a1[3] = v14;
        uint64_t v15 = a2[5];
        a1[4] = a2[4];
        a1[5] = v15;
        *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
        a1[7] = a2[7];
        id v16 = a2 + 8;
        unint64_t v17 = a2[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v90 = v8;
        uint64_t v91 = v7;
        if (v17 <= 2)
        {
          *((_OWORD *)a1 + 4) = *v16;
        }
        else
        {
          *((unsigned char *)a1 + 64) = *(unsigned char *)v16;
          a1[9] = v17;
          swift_bridgeObjectRetain();
        }
        uint64_t v18 = a2[11];
        a1[10] = a2[10];
        a1[11] = v18;
        uint64_t v19 = a2[13];
        a1[12] = a2[12];
        a1[13] = v19;
        uint64_t v20 = a2[15];
        a1[14] = a2[14];
        a1[15] = v20;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
        uint64_t v21 = a2[18];
        a1[17] = a2[17];
        a1[18] = v21;
        uint64_t v89 = type metadata accessor for DebugFormatTestCaseResult(0);
        uint64_t v22 = *(int *)(v89 + 24);
        v92 = (char *)a1 + v22;
        v88 = a2;
        id v23 = (char *)a2 + v22;
        type metadata accessor for DebugFormatTestCaseResult.Result(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
            uint64_t v44 = *((void *)v23 + 1);
            *(void *)v92 = *(void *)v23;
            *((void *)v92 + 1) = v44;
            uint64_t v45 = *((void *)v23 + 3);
            *((void *)v92 + 2) = *((void *)v23 + 2);
            *((void *)v92 + 3) = v45;
            uint64_t v46 = *((void *)v23 + 5);
            *((void *)v92 + 4) = *((void *)v23 + 4);
            *((void *)v92 + 5) = v46;
            v92[48] = v23[48];
            *((void *)v92 + 7) = *((void *)v23 + 7);
            uint64_t v47 = v23 + 64;
            unint64_t v48 = *((void *)v23 + 9);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v48 <= 2)
            {
              *((_OWORD *)v92 + 4) = *v47;
            }
            else
            {
              v92[64] = *(unsigned char *)v47;
              *((void *)v92 + 9) = v48;
              swift_bridgeObjectRetain();
            }
            uint64_t v66 = *((void *)v23 + 11);
            *((void *)v92 + 10) = *((void *)v23 + 10);
            *((void *)v92 + 11) = v66;
            uint64_t v67 = *((void *)v23 + 13);
            *((void *)v92 + 12) = *((void *)v23 + 12);
            *((void *)v92 + 13) = v67;
            uint64_t v68 = *((void *)v23 + 15);
            *((void *)v92 + 14) = *((void *)v23 + 14);
            *((void *)v92 + 15) = v68;
            v92[128] = v23[128];
            uint64_t v69 = *((void *)v23 + 18);
            *((void *)v92 + 17) = *((void *)v23 + 17);
            *((void *)v92 + 18) = v69;
            *((void *)v92 + 19) = *((void *)v23 + 19);
            long long v70 = *(_OWORD *)(v23 + 184);
            *(_OWORD *)(v92 + 184) = v70;
            uint64_t v83 = v70;
            v80 = **(void (***)(char *, char *, uint64_t))(v70 - 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            v80(v92 + 160, v23 + 160, v83);
            *((void *)v92 + 25) = *((void *)v23 + 25);
            long long v71 = *(_OWORD *)(v23 + 232);
            *(_OWORD *)(v92 + 232) = v71;
            uint64_t v72 = v71;
            unsigned __int8 v73 = **(void (***)(char *, char *, uint64_t))(v71 - 8);
            swift_retain();
            v73(v92 + 208, v23 + 208, v72);
            uint64_t v74 = *((void *)v23 + 32);
            *((void *)v92 + 31) = *((void *)v23 + 31);
            *((void *)v92 + 32) = v74;
            uint64_t v75 = *((void *)v23 + 34);
            *((void *)v92 + 33) = *((void *)v23 + 33);
            *((void *)v92 + 34) = v75;
            uint64_t v76 = *((void *)v23 + 36);
            *((void *)v92 + 35) = *((void *)v23 + 35);
            *((void *)v92 + 36) = v76;
            v77 = (void *)*((void *)v23 + 37);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            id v78 = v77;
            *((void *)v92 + 37) = v77;
            break;
          default:
            long long v24 = *(_OWORD *)(v23 + 24);
            *(_OWORD *)(v92 + 24) = v24;
            (**(void (***)(char *, char *))(v24 - 8))(v92, v23);
            v86 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
            v87 = v23;
            uint64_t v25 = v86[5];
            double v26 = &v92[v25];
            uint64_t v27 = &v23[v25];
            uint64_t v28 = sub_1C151772C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
            double v29 = (int *)type metadata accessor for GroupLayoutContext();
            uint64_t v30 = v29[5];
            double v31 = &v26[v30];
            uint64_t v32 = &v27[v30];
            uint64_t v33 = sub_1C151757C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
            uint64_t v34 = v29[6];
            uint64_t v35 = &v26[v34];
            uint64_t v36 = &v27[v34];
            *(_OWORD *)uint64_t v35 = *(_OWORD *)&v27[v34];
            v35[16] = v27[v34 + 16];
            *(_WORD *)(v35 + 17) = *(_WORD *)&v27[v34 + 17];
            v35[19] = v27[v34 + 19];
            *((_DWORD *)v35 + 5) = *(_DWORD *)&v27[v34 + 20];
            unint64_t v37 = *(void *)&v27[v34 + 24];
            if (v37 >= 2) {
              unint64_t v37 = swift_bridgeObjectRetain();
            }
            *((void *)v35 + 3) = v37;
            uint64_t v85 = type metadata accessor for FeedLayoutSolverOptions(0);
            uint64_t v38 = *(int *)(v85 + 36);
            uint64_t v39 = &v35[v38];
            uint64_t v40 = &v36[v38];
            uint64_t v41 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
            uint64_t v42 = *(void *)(v41 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
            {
              sub_1C01BB2C0();
              memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
            }
            else
            {
              uint64_t v49 = sub_1C151B62C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v39, v40, v49);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
            }
            *(void *)&v35[*(int *)(v85 + 40)] = *(void *)&v36[*(int *)(v85 + 40)];
            *(void *)&v26[v29[7]] = *(void *)&v27[v29[7]];
            *(void *)&v26[v29[8]] = *(void *)&v27[v29[8]];
            v26[v29[9]] = v27[v29[9]];
            *(void *)&v26[v29[10]] = *(void *)&v27[v29[10]];
            v26[v29[11]] = v27[v29[11]];
            *(void *)&v26[v29[12]] = *(void *)&v27[v29[12]];
            uint64_t v50 = v86[6];
            uint64_t v51 = &v92[v50];
            long long v52 = &v87[v50];
            char *v51 = v87[v50];
            uint64_t v53 = (uint64_t)&v87[v50 + 8];
            long long v54 = *(_OWORD *)&v87[v50 + 32];
            *((_OWORD *)v51 + 2) = v54;
            uint64_t v55 = v54;
            uint64_t v56 = **(void (***)(char *, uint64_t, uint64_t))(v54 - 8);
            swift_retain();
            swift_retain();
            v56(v51 + 8, v53, v55);
            uint64_t v57 = *((void *)v52 + 7);
            *((void *)v51 + 6) = *((void *)v52 + 6);
            *((void *)v51 + 7) = v57;
            uint64_t v58 = *((void *)v52 + 9);
            *((void *)v51 + 8) = *((void *)v52 + 8);
            *((void *)v51 + 9) = v58;
            *((void *)v51 + 10) = *((void *)v52 + 10);
            v51[88] = v52[88];
            *((void *)v51 + 12) = *((void *)v52 + 12);
            uint64_t v59 = (int *)type metadata accessor for GroupLayoutBindingContext();
            uint64_t v60 = v59[13];
            v82 = &v52[v60];
            v84 = &v51[v60];
            uint64_t v61 = sub_1C151787C();
            v81 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v81(v84, v82, v61);
            *(void *)&v51[v59[14]] = *(void *)&v52[v59[14]];
            *(void *)&v51[v59[15]] = *(void *)&v52[v59[15]];
            v51[v59[16]] = v52[v59[16]];
            *(void *)&v51[v59[17]] = *(void *)&v52[v59[17]];
            *(void *)&v51[v59[18]] = *(void *)&v52[v59[18]];
            *(void *)&v51[v59[19]] = *(void *)&v52[v59[19]];
            uint64_t v62 = v86[7];
            uint64_t v63 = &v92[v62];
            uint64_t v64 = &v87[v62];
            *uint64_t v63 = *v64;
            *(_OWORD *)(v63 + 8) = *(_OWORD *)(v64 + 8);
            *(_OWORD *)(v63 + 24) = *(_OWORD *)(v64 + 24);
            uint64_t v65 = *((void *)v64 + 6);
            *((void *)v63 + 5) = *((void *)v64 + 5);
            *((void *)v63 + 6) = v65;
            *(void *)&v92[v86[8]] = *(void *)&v87[v86[8]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
        }
        uint64_t v8 = v90;
        uint64_t v7 = v91;
        swift_storeEnumTagMultiPayload();
        *(uint64_t *)((char *)a1 + *(int *)(v89 + 28)) = *(uint64_t *)((char *)v88 + *(int *)(v89 + 28));
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

void sub_1C10F86B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_12:
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 72) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(type metadata accessor for DebugFormatTestCaseResult(0) + 24);
      type metadata accessor for DebugFormatTestCaseResult.Result(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          __swift_destroy_boxed_opaque_existential_1(v3);
          uint64_t v4 = type metadata accessor for DebugFormatTestCaseLayout();
          uint64_t v5 = v3 + *(int *)(v4 + 20);
          uint64_t v6 = sub_1C151772C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
          uint64_t v7 = type metadata accessor for GroupLayoutContext();
          uint64_t v8 = v5 + *(int *)(v7 + 20);
          uint64_t v9 = sub_1C151757C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
          uint64_t v10 = v5 + *(int *)(v7 + 24);
          if (*(void *)(v10 + 24) >= 2uLL) {
            swift_bridgeObjectRelease();
          }
          uint64_t v11 = v10 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
          uint64_t v12 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
          {
            uint64_t v13 = sub_1C151B62C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
          }
          swift_release();
          swift_release();
          uint64_t v14 = v3 + *(int *)(v4 + 24);
          __swift_destroy_boxed_opaque_existential_1(v14 + 8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v15 = v14 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
          uint64_t v16 = sub_1C151787C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_12;
        case 2u:
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v3 + 72) >= 3uLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1(v3 + 160);
          swift_release();
          __swift_destroy_boxed_opaque_existential_1(v3 + 208);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          unint64_t v17 = *(void **)(v3 + 296);

          break;
        default:
          return;
      }
    }
  }
}

void *sub_1C10F8B48(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v9 = (void *)a2[3];
      a1[3] = v9;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v10 = v9;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      uint64_t v13 = a2[5];
      a1[4] = a2[4];
      a1[5] = v13;
      *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
      a1[7] = a2[7];
      uint64_t v14 = a2 + 8;
      unint64_t v15 = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v90 = v6;
      uint64_t v89 = v7;
      if (v15 <= 2)
      {
        *((_OWORD *)a1 + 4) = *v14;
      }
      else
      {
        *((unsigned char *)a1 + 64) = *(unsigned char *)v14;
        a1[9] = v15;
        swift_bridgeObjectRetain();
      }
      uint64_t v16 = a2[11];
      a1[10] = a2[10];
      a1[11] = v16;
      uint64_t v17 = a2[13];
      a1[12] = a2[12];
      a1[13] = v17;
      uint64_t v18 = a2[15];
      a1[14] = a2[14];
      a1[15] = v18;
      *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
      uint64_t v19 = a2[18];
      a1[17] = a2[17];
      a1[18] = v19;
      uint64_t v88 = type metadata accessor for DebugFormatTestCaseResult(0);
      uint64_t v20 = *(int *)(v88 + 24);
      uint64_t v91 = (char *)a1 + v20;
      v87 = a2;
      uint64_t v21 = (char *)a2 + v20;
      type metadata accessor for DebugFormatTestCaseResult.Result(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
          uint64_t v42 = *((void *)v21 + 1);
          *(void *)uint64_t v91 = *(void *)v21;
          *((void *)v91 + 1) = v42;
          uint64_t v43 = *((void *)v21 + 3);
          *((void *)v91 + 2) = *((void *)v21 + 2);
          *((void *)v91 + 3) = v43;
          uint64_t v44 = *((void *)v21 + 5);
          *((void *)v91 + 4) = *((void *)v21 + 4);
          *((void *)v91 + 5) = v44;
          v91[48] = v21[48];
          *((void *)v91 + 7) = *((void *)v21 + 7);
          uint64_t v45 = v91 + 64;
          uint64_t v46 = v21 + 64;
          unint64_t v47 = *((void *)v21 + 9);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v47 >= 2)
          {
            if (v47 == 2)
            {
              *uint64_t v45 = *v46;
            }
            else
            {
              v91[64] = *(unsigned char *)v46;
              *((void *)v91 + 9) = v47;
              swift_bridgeObjectRetain();
            }
          }
          else
          {
            *uint64_t v45 = *v46;
          }
          uint64_t v65 = *((void *)v21 + 11);
          *((void *)v91 + 10) = *((void *)v21 + 10);
          *((void *)v91 + 11) = v65;
          uint64_t v66 = *((void *)v21 + 13);
          *((void *)v91 + 12) = *((void *)v21 + 12);
          *((void *)v91 + 13) = v66;
          uint64_t v67 = *((void *)v21 + 15);
          *((void *)v91 + 14) = *((void *)v21 + 14);
          *((void *)v91 + 15) = v67;
          v91[128] = v21[128];
          uint64_t v68 = *((void *)v21 + 18);
          *((void *)v91 + 17) = *((void *)v21 + 17);
          *((void *)v91 + 18) = v68;
          *((void *)v91 + 19) = *((void *)v21 + 19);
          long long v69 = *(_OWORD *)(v21 + 184);
          *(_OWORD *)(v91 + 184) = v69;
          uint64_t v83 = v69;
          v80 = **(void (***)(char *, char *, uint64_t))(v69 - 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          v80(v91 + 160, v21 + 160, v83);
          *((void *)v91 + 25) = *((void *)v21 + 25);
          long long v70 = *(_OWORD *)(v21 + 232);
          *(_OWORD *)(v91 + 232) = v70;
          uint64_t v71 = v70;
          uint64_t v72 = **(void (***)(char *, char *, uint64_t))(v70 - 8);
          swift_retain();
          v72(v91 + 208, v21 + 208, v71);
          uint64_t v73 = *((void *)v21 + 32);
          *((void *)v91 + 31) = *((void *)v21 + 31);
          *((void *)v91 + 32) = v73;
          uint64_t v74 = *((void *)v21 + 34);
          *((void *)v91 + 33) = *((void *)v21 + 33);
          *((void *)v91 + 34) = v74;
          uint64_t v75 = *((void *)v21 + 36);
          *((void *)v91 + 35) = *((void *)v21 + 35);
          *((void *)v91 + 36) = v75;
          uint64_t v76 = (void *)*((void *)v21 + 37);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          id v77 = v76;
          *((void *)v91 + 37) = v76;
          break;
        default:
          long long v22 = *(_OWORD *)(v21 + 24);
          *(_OWORD *)(v91 + 24) = v22;
          (**(void (***)(char *, char *))(v22 - 8))(v91, v21);
          uint64_t v85 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
          v86 = v21;
          uint64_t v23 = v85[5];
          long long v24 = &v91[v23];
          uint64_t v25 = &v21[v23];
          uint64_t v26 = sub_1C151772C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
          uint64_t v27 = (int *)type metadata accessor for GroupLayoutContext();
          uint64_t v28 = v27[5];
          double v29 = &v24[v28];
          uint64_t v30 = &v25[v28];
          uint64_t v31 = sub_1C151757C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
          uint64_t v32 = v27[6];
          uint64_t v33 = &v24[v32];
          uint64_t v34 = &v25[v32];
          *(_OWORD *)uint64_t v33 = *(_OWORD *)&v25[v32];
          v33[16] = v25[v32 + 16];
          *(_WORD *)(v33 + 17) = *(_WORD *)&v25[v32 + 17];
          v33[19] = v25[v32 + 19];
          *((_DWORD *)v33 + 5) = *(_DWORD *)&v25[v32 + 20];
          unint64_t v35 = *(void *)&v25[v32 + 24];
          if (v35 >= 2) {
            unint64_t v35 = swift_bridgeObjectRetain();
          }
          *((void *)v33 + 3) = v35;
          uint64_t v84 = type metadata accessor for FeedLayoutSolverOptions(0);
          uint64_t v36 = *(int *)(v84 + 36);
          unint64_t v37 = &v33[v36];
          uint64_t v38 = &v34[v36];
          uint64_t v39 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
          uint64_t v40 = *(void *)(v39 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
          {
            sub_1C01BB2C0();
            memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
          }
          else
          {
            uint64_t v48 = sub_1C151B62C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v37, v38, v48);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
          }
          *(void *)&v33[*(int *)(v84 + 40)] = *(void *)&v34[*(int *)(v84 + 40)];
          *(void *)&v24[v27[7]] = *(void *)&v25[v27[7]];
          *(void *)&v24[v27[8]] = *(void *)&v25[v27[8]];
          v24[v27[9]] = v25[v27[9]];
          *(void *)&v24[v27[10]] = *(void *)&v25[v27[10]];
          v24[v27[11]] = v25[v27[11]];
          *(void *)&v24[v27[12]] = *(void *)&v25[v27[12]];
          uint64_t v49 = v85[6];
          uint64_t v50 = &v91[v49];
          uint64_t v51 = &v86[v49];
          *uint64_t v50 = v86[v49];
          uint64_t v52 = (uint64_t)&v86[v49 + 8];
          long long v53 = *(_OWORD *)&v86[v49 + 32];
          *((_OWORD *)v50 + 2) = v53;
          uint64_t v54 = v53;
          uint64_t v55 = **(void (***)(char *, uint64_t, uint64_t))(v53 - 8);
          swift_retain();
          swift_retain();
          v55(v50 + 8, v52, v54);
          uint64_t v56 = *((void *)v51 + 7);
          *((void *)v50 + 6) = *((void *)v51 + 6);
          *((void *)v50 + 7) = v56;
          uint64_t v57 = *((void *)v51 + 9);
          *((void *)v50 + 8) = *((void *)v51 + 8);
          *((void *)v50 + 9) = v57;
          *((void *)v50 + 10) = *((void *)v51 + 10);
          v50[88] = v51[88];
          *((void *)v50 + 12) = *((void *)v51 + 12);
          uint64_t v58 = (int *)type metadata accessor for GroupLayoutBindingContext();
          uint64_t v59 = v58[13];
          v81 = &v51[v59];
          v82 = &v50[v59];
          uint64_t v60 = sub_1C151787C();
          v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v79(v82, v81, v60);
          *(void *)&v50[v58[14]] = *(void *)&v51[v58[14]];
          *(void *)&v50[v58[15]] = *(void *)&v51[v58[15]];
          v50[v58[16]] = v51[v58[16]];
          *(void *)&v50[v58[17]] = *(void *)&v51[v58[17]];
          *(void *)&v50[v58[18]] = *(void *)&v51[v58[18]];
          *(void *)&v50[v58[19]] = *(void *)&v51[v58[19]];
          uint64_t v61 = v85[7];
          uint64_t v62 = &v91[v61];
          uint64_t v63 = &v86[v61];
          char *v62 = *v63;
          *(_OWORD *)(v62 + 8) = *(_OWORD *)(v63 + 8);
          *(_OWORD *)(v62 + 24) = *(_OWORD *)(v63 + 24);
          uint64_t v64 = *((void *)v63 + 6);
          *((void *)v62 + 5) = *((void *)v63 + 5);
          *((void *)v62 + 6) = v64;
          *(void *)&v91[v85[8]] = *(void *)&v86[v85[8]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
      }
      uint64_t v6 = v90;
      uint64_t v7 = v89;
      swift_storeEnumTagMultiPayload();
      *(void *)((char *)a1 + *(int *)(v88 + 28)) = *(void *)((char *)v87 + *(int *)(v88 + 28));
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

uint64_t sub_1C10F94F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v11 = *(void **)(a2 + 24);
        *(void *)(a1 + 24) = v11;
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v12 = v11;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        unint64_t v15 = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v126 = v6;
        uint64_t v123 = v7;
        if (v15 <= 2)
        {
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        }
        else
        {
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          swift_bridgeObjectRetain();
        }
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        uint64_t v122 = type metadata accessor for DebugFormatTestCaseResult(0);
        uint64_t v17 = *(int *)(v122 + 24);
        uint64_t v119 = a1;
        uint64_t v127 = a1 + v17;
        uint64_t v121 = a2;
        uint64_t v18 = (void *)(a2 + v17);
        type metadata accessor for DebugFormatTestCaseResult.Result(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v19 = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
            *(void *)uint64_t v127 = *v18;
            *(void *)(v127 + 8) = v18[1];
            *(void *)(v127 + 16) = v18[2];
            *(void *)(v127 + 24) = v18[3];
            *(void *)(v127 + 32) = v18[4];
            *(void *)(v127 + 40) = v18[5];
            *(unsigned char *)(v127 + 48) = *((unsigned char *)v18 + 48);
            *(void *)(v127 + 56) = v18[7];
            unint64_t v42 = v18[9];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v42 <= 2)
            {
              *(_OWORD *)(v127 + 64) = *((_OWORD *)v18 + 4);
            }
            else
            {
              *(unsigned char *)(v127 + 64) = *((unsigned char *)v18 + 64);
              *(void *)(v127 + 72) = v18[9];
              swift_bridgeObjectRetain();
            }
            a1 = v119;
            *(void *)(v127 + 80) = v19[10];
            *(void *)(v127 + 88) = v19[11];
            *(void *)(v127 + 96) = v19[12];
            *(void *)(v127 + 104) = v19[13];
            *(void *)(v127 + 112) = v19[14];
            *(void *)(v127 + 120) = v19[15];
            *(unsigned char *)(v127 + 128) = *((unsigned char *)v19 + 128);
            *(void *)(v127 + 136) = v19[17];
            *(void *)(v127 + 144) = v19[18];
            *(void *)(v127 + 152) = v19[19];
            __dstb = v19 + 20;
            uint64_t v56 = v19;
            uint64_t v57 = v19[23];
            *(void *)(v127 + 184) = v57;
            *(void *)(v127 + 192) = v56[24];
            v109 = **(void (***)(uint64_t, void *, uint64_t))(v57 - 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            v109(v127 + 160, __dstb, v57);
            *(void *)(v127 + 200) = v56[25];
            uint64_t v58 = v56[29];
            *(void *)(v127 + 232) = v58;
            *(void *)(v127 + 240) = v56[30];
            uint64_t v59 = **(void (***)(uint64_t, void *, uint64_t))(v58 - 8);
            swift_retain();
            v59(v127 + 208, v56 + 26, v58);
            *(void *)(v127 + 248) = v56[31];
            *(void *)(v127 + 256) = v56[32];
            *(void *)(v127 + 264) = v56[33];
            *(void *)(v127 + 272) = v56[34];
            *(void *)(v127 + 280) = v56[35];
            *(void *)(v127 + 288) = v56[36];
            uint64_t v60 = (void *)v56[37];
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            id v61 = v60;
            *(void *)(v127 + 296) = v60;
            break;
          default:
            uint64_t v20 = v18[3];
            *(void *)(v127 + 24) = v20;
            *(void *)(v127 + 32) = v18[4];
            (**(void (***)(uint64_t, void *))(v20 - 8))(v127, v18);
            uint64_t v21 = type metadata accessor for DebugFormatTestCaseLayout();
            uint64_t v22 = *(int *)(v21 + 20);
            uint64_t v23 = v127 + v22;
            v114 = (int *)v21;
            __dst = v18;
            long long v24 = (char *)v18 + v22;
            uint64_t v25 = sub_1C151772C();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
            uint64_t v26 = (int *)type metadata accessor for GroupLayoutContext();
            uint64_t v27 = v26[5];
            uint64_t v28 = v23 + v27;
            double v29 = &v24[v27];
            uint64_t v30 = sub_1C151757C();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
            uint64_t v31 = v26[6];
            uint64_t v32 = v23 + v31;
            uint64_t v33 = &v24[v31];
            long long v34 = *(_OWORD *)&v24[v31];
            *(unsigned char *)(v32 + 16) = v24[v31 + 16];
            *(_OWORD *)uint64_t v32 = v34;
            LOBYTE(v31) = v24[v31 + 19];
            *(_WORD *)(v32 + 17) = *(_WORD *)(v33 + 17);
            *(unsigned char *)(v32 + 19) = v31;
            *(_WORD *)(v32 + 20) = *((_WORD *)v33 + 10);
            *(_WORD *)(v32 + 22) = *((_WORD *)v33 + 11);
            unint64_t v35 = *((void *)v33 + 3);
            if (v35 >= 2) {
              unint64_t v35 = swift_bridgeObjectRetain();
            }
            *(void *)(v32 + 24) = v35;
            uint64_t v112 = type metadata accessor for FeedLayoutSolverOptions(0);
            uint64_t v36 = *(int *)(v112 + 36);
            unint64_t v37 = (void *)(v32 + v36);
            uint64_t v38 = &v33[v36];
            uint64_t v39 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
            uint64_t v40 = *(void *)(v39 - 8);
            a1 = v119;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
            {
              sub_1C01BB2C0();
              memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
            }
            else
            {
              uint64_t v43 = sub_1C151B62C();
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v37, v38, v43);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
            }
            *(void *)(v32 + *(int *)(v112 + 40)) = *(void *)&v33[*(int *)(v112 + 40)];
            *(void *)(v23 + v26[7]) = *(void *)&v24[v26[7]];
            *(void *)(v23 + v26[8]) = *(void *)&v24[v26[8]];
            *(unsigned char *)(v23 + v26[9]) = v24[v26[9]];
            *(void *)(v23 + v26[10]) = *(void *)&v24[v26[10]];
            *(unsigned char *)(v23 + v26[11]) = v24[v26[11]];
            *(void *)(v23 + v26[12]) = *(void *)&v24[v26[12]];
            uint64_t v44 = v114[6];
            uint64_t v45 = v127 + v44;
            uint64_t v46 = &__dst[v44];
            *(unsigned char *)uint64_t v45 = __dst[v44];
            uint64_t v47 = *(void *)&__dst[v44 + 32];
            *(void *)(v45 + 32) = v47;
            *(void *)(v45 + 40) = *(void *)&__dst[v44 + 40];
            uint64_t v48 = **(void (***)(uint64_t, char *, uint64_t))(v47 - 8);
            swift_retain();
            swift_retain();
            v48(v45 + 8, v46 + 8, v47);
            *(void *)(v45 + 48) = *((void *)v46 + 6);
            *(void *)(v45 + 56) = *((void *)v46 + 7);
            *(void *)(v45 + 64) = *((void *)v46 + 8);
            *(void *)(v45 + 72) = *((void *)v46 + 9);
            *(void *)(v45 + 80) = *((void *)v46 + 10);
            *(unsigned char *)(v45 + 88) = v46[88];
            *(void *)(v45 + 96) = *((void *)v46 + 12);
            uint64_t v49 = (int *)type metadata accessor for GroupLayoutBindingContext();
            uint64_t v50 = v49[13];
            v106 = &v46[v50];
            uint64_t v108 = v45 + v50;
            uint64_t v51 = sub_1C151787C();
            v105 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v51 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v105(v108, v106, v51);
            *(void *)(v45 + v49[14]) = *(void *)&v46[v49[14]];
            *(void *)(v45 + v49[15]) = *(void *)&v46[v49[15]];
            *(unsigned char *)(v45 + v49[16]) = v46[v49[16]];
            *(void *)(v45 + v49[17]) = *(void *)&v46[v49[17]];
            *(void *)(v45 + v49[18]) = *(void *)&v46[v49[18]];
            *(void *)(v45 + v49[19]) = *(void *)&v46[v49[19]];
            uint64_t v52 = v114[7];
            uint64_t v53 = v127 + v52;
            uint64_t v54 = &__dst[v52];
            *(unsigned char *)uint64_t v53 = *v54;
            long long v55 = *(_OWORD *)(v54 + 8);
            *(_OWORD *)(v53 + 24) = *(_OWORD *)(v54 + 24);
            *(_OWORD *)(v53 + 8) = v55;
            *(void *)(v53 + 40) = *((void *)v54 + 5);
            *(void *)(v53 + 48) = *((void *)v54 + 6);
            *(void *)(v127 + v114[8]) = *(void *)&__dst[v114[8]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
        }
        uint64_t v6 = v126;
        uint64_t v7 = v123;
        swift_storeEnumTagMultiPayload();
        *(void *)(a1 + *(int *)(v122 + 28)) = *(void *)(v121 + *(int *)(v122 + 28));
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
LABEL_7:
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_1C0C615DC(a1);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_1C0C615DC(a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v13 = *(void **)(a2 + 24);
      *(void *)(a1 + 24) = v13;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v14 = v13;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      unint64_t v16 = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16 <= 2)
      {
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      }
      else
      {
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
      }
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      uint64_t v124 = type metadata accessor for DebugFormatTestCaseResult(0);
      uint64_t v63 = *(int *)(v124 + 24);
      uint64_t v128 = a1 + v63;
      uint64_t v64 = a2 + v63;
      type metadata accessor for DebugFormatTestCaseResult.Result(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v125 = v64;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
          *(void *)uint64_t v128 = *(void *)v64;
          *(void *)(v128 + 8) = *(void *)(v64 + 8);
          *(void *)(v128 + 16) = *(void *)(v64 + 16);
          *(void *)(v128 + 24) = *(void *)(v64 + 24);
          *(void *)(v128 + 32) = *(void *)(v64 + 32);
          *(void *)(v128 + 40) = *(void *)(v64 + 40);
          *(unsigned char *)(v128 + 48) = *(unsigned char *)(v64 + 48);
          *(void *)(v128 + 56) = *(void *)(v64 + 56);
          unint64_t v86 = *(void *)(v64 + 72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v86 <= 2)
          {
            *(_OWORD *)(v128 + 64) = *(_OWORD *)(v64 + 64);
          }
          else
          {
            *(unsigned char *)(v128 + 64) = *(unsigned char *)(v64 + 64);
            *(void *)(v128 + 72) = *(void *)(v64 + 72);
            swift_bridgeObjectRetain();
          }
          *(void *)(v128 + 80) = *(void *)(v64 + 80);
          *(void *)(v128 + 88) = *(void *)(v64 + 88);
          *(void *)(v128 + 96) = *(void *)(v64 + 96);
          *(void *)(v128 + 104) = *(void *)(v64 + 104);
          *(void *)(v128 + 112) = *(void *)(v64 + 112);
          *(void *)(v128 + 120) = *(void *)(v64 + 120);
          *(unsigned char *)(v128 + 128) = *(unsigned char *)(v64 + 128);
          *(void *)(v128 + 136) = *(void *)(v64 + 136);
          *(void *)(v128 + 144) = *(void *)(v64 + 144);
          *(void *)(v128 + 152) = *(void *)(v64 + 152);
          uint64_t v100 = *(void *)(v64 + 184);
          *(void *)(v128 + 184) = v100;
          *(void *)(v128 + 192) = *(void *)(v64 + 192);
          v111 = **(void (***)(uint64_t, uint64_t, uint64_t))(v100 - 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          v111(v128 + 160, v64 + 160, v100);
          *(void *)(v128 + 200) = *(void *)(v64 + 200);
          uint64_t v101 = *(void *)(v64 + 232);
          *(void *)(v128 + 232) = v101;
          *(void *)(v128 + 240) = *(void *)(v64 + 240);
          v102 = **(void (***)(uint64_t, uint64_t, uint64_t))(v101 - 8);
          swift_retain();
          v102(v128 + 208, v64 + 208, v101);
          *(void *)(v128 + 248) = *(void *)(v64 + 248);
          *(void *)(v128 + 256) = *(void *)(v64 + 256);
          *(void *)(v128 + 264) = *(void *)(v64 + 264);
          *(void *)(v128 + 272) = *(void *)(v64 + 272);
          *(void *)(v128 + 280) = *(void *)(v64 + 280);
          *(void *)(v128 + 288) = *(void *)(v64 + 288);
          v103 = *(void **)(v64 + 296);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          id v104 = v103;
          *(void *)(v128 + 296) = v103;
          break;
        default:
          uint64_t v65 = *(void *)(v64 + 24);
          *(void *)(v128 + 24) = v65;
          *(void *)(v128 + 32) = *(void *)(v64 + 32);
          (**(void (***)(uint64_t, uint64_t))(v65 - 8))(v128, v64);
          v120 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
          uint64_t v66 = v120[5];
          uint64_t v67 = v128 + v66;
          uint64_t v68 = v64 + v66;
          uint64_t v69 = sub_1C151772C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
          long long v70 = (int *)type metadata accessor for GroupLayoutContext();
          uint64_t v71 = v70[5];
          uint64_t v72 = v67 + v71;
          uint64_t v73 = v68 + v71;
          uint64_t v74 = sub_1C151757C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
          uint64_t v75 = v70[6];
          uint64_t v76 = v67 + v75;
          uint64_t v77 = v68 + v75;
          long long v78 = *(_OWORD *)(v68 + v75);
          *(unsigned char *)(v76 + 16) = *(unsigned char *)(v68 + v75 + 16);
          *(_OWORD *)uint64_t v76 = v78;
          LOBYTE(v75) = *(unsigned char *)(v68 + v75 + 19);
          *(_WORD *)(v76 + 17) = *(_WORD *)(v77 + 17);
          *(unsigned char *)(v76 + 19) = v75;
          *(_WORD *)(v76 + 20) = *(_WORD *)(v77 + 20);
          *(_WORD *)(v76 + 22) = *(_WORD *)(v77 + 22);
          unint64_t v79 = *(void *)(v77 + 24);
          if (v79 >= 2) {
            unint64_t v79 = swift_bridgeObjectRetain();
          }
          *(void *)(v76 + 24) = v79;
          uint64_t v80 = type metadata accessor for FeedLayoutSolverOptions(0);
          uint64_t v81 = *(int *)(v80 + 36);
          uint64_t v115 = v80;
          __dsta = (void *)(v76 + v81);
          v82 = (const void *)(v77 + v81);
          uint64_t v83 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
          uint64_t v84 = *(void *)(v83 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
          {
            sub_1C01BB2C0();
            memcpy(__dsta, v82, *(void *)(*(void *)(v85 - 8) + 64));
          }
          else
          {
            uint64_t v87 = sub_1C151B62C();
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v87 - 8) + 16))(__dsta, v82, v87);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v84 + 56))(__dsta, 0, 1, v83);
          }
          *(void *)(v76 + *(int *)(v115 + 40)) = *(void *)(v77 + *(int *)(v115 + 40));
          *(void *)(v67 + v70[7]) = *(void *)(v68 + v70[7]);
          *(void *)(v67 + v70[8]) = *(void *)(v68 + v70[8]);
          *(unsigned char *)(v67 + v70[9]) = *(unsigned char *)(v68 + v70[9]);
          *(void *)(v67 + v70[10]) = *(void *)(v68 + v70[10]);
          *(unsigned char *)(v67 + v70[11]) = *(unsigned char *)(v68 + v70[11]);
          *(void *)(v67 + v70[12]) = *(void *)(v68 + v70[12]);
          uint64_t v88 = v120[6];
          uint64_t v89 = v128 + v88;
          uint64_t v90 = v125 + v88;
          *(unsigned char *)uint64_t v89 = *(unsigned char *)(v125 + v88);
          uint64_t v91 = *(void *)(v125 + v88 + 32);
          *(void *)(v89 + 32) = v91;
          *(void *)(v89 + 40) = *(void *)(v125 + v88 + 40);
          v92 = **(void (***)(uint64_t, uint64_t, uint64_t))(v91 - 8);
          swift_retain();
          swift_retain();
          v92(v89 + 8, v90 + 8, v91);
          *(void *)(v89 + 48) = *(void *)(v90 + 48);
          *(void *)(v89 + 56) = *(void *)(v90 + 56);
          *(void *)(v89 + 64) = *(void *)(v90 + 64);
          *(void *)(v89 + 72) = *(void *)(v90 + 72);
          *(void *)(v89 + 80) = *(void *)(v90 + 80);
          *(unsigned char *)(v89 + 88) = *(unsigned char *)(v90 + 88);
          *(void *)(v89 + 96) = *(void *)(v90 + 96);
          v93 = (int *)type metadata accessor for GroupLayoutBindingContext();
          uint64_t v94 = v93[13];
          uint64_t v110 = v90 + v94;
          uint64_t v113 = v89 + v94;
          uint64_t v95 = sub_1C151787C();
          v107 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v107(v113, v110, v95);
          *(void *)(v89 + v93[14]) = *(void *)(v90 + v93[14]);
          *(void *)(v89 + v93[15]) = *(void *)(v90 + v93[15]);
          *(unsigned char *)(v89 + v93[16]) = *(unsigned char *)(v90 + v93[16]);
          *(void *)(v89 + v93[17]) = *(void *)(v90 + v93[17]);
          *(void *)(v89 + v93[18]) = *(void *)(v90 + v93[18]);
          *(void *)(v89 + v93[19]) = *(void *)(v90 + v93[19]);
          uint64_t v96 = v120[7];
          uint64_t v97 = v128 + v96;
          uint64_t v98 = v125 + v96;
          *(unsigned char *)uint64_t v97 = *(unsigned char *)v98;
          long long v99 = *(_OWORD *)(v98 + 8);
          *(_OWORD *)(v97 + 24) = *(_OWORD *)(v98 + 24);
          *(_OWORD *)(v97 + 8) = v99;
          *(void *)(v97 + 40) = *(void *)(v98 + 40);
          *(void *)(v97 + 48) = *(void *)(v98 + 48);
          *(void *)(v128 + v120[8]) = *(void *)(v125 + v120[8]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      *(void *)(a1 + *(int *)(v124 + 28)) = *(void *)(a2 + *(int *)(v124 + 28));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_OWORD *sub_1C10FA8F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
LABEL_15:
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
    long long v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    a1[8] = a2[8];
    long long v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    long long v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    long long v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    *((void *)a1 + 18) = *((void *)a2 + 18);
    uint64_t v12 = type metadata accessor for DebugFormatTestCaseResult(0);
    uint64_t v13 = *(int *)(v12 + 24);
    id v14 = (char *)a1 + v13;
    unint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v70 = v12;
      long long v36 = *((_OWORD *)v15 + 1);
      *(_OWORD *)id v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v36;
      *((void *)v14 + 4) = *((void *)v15 + 4);
      uint64_t v68 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      uint64_t v37 = v68[5];
      uint64_t v69 = v14;
      uint64_t v20 = &v14[v37];
      uint64_t v71 = v15;
      uint64_t v21 = &v15[v37];
      uint64_t v38 = sub_1C151772C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v20, v21, v38);
      uint64_t v23 = (int *)type metadata accessor for GroupLayoutContext();
      uint64_t v39 = v23[5];
      uint64_t v40 = &v20[v39];
      uint64_t v41 = &v21[v39];
      uint64_t v42 = sub_1C151757C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
      uint64_t v43 = v23[6];
      double v29 = &v20[v43];
      uint64_t v30 = &v21[v43];
      *(_OWORD *)double v29 = *(_OWORD *)&v21[v43];
      v29[16] = v21[v43 + 16];
      *(_WORD *)(v29 + 17) = *(_WORD *)&v21[v43 + 17];
      v29[19] = v21[v43 + 19];
      *((_DWORD *)v29 + 5) = *(_DWORD *)&v21[v43 + 20];
      *((void *)v29 + 3) = *(void *)&v21[v43 + 24];
      uint64_t v65 = type metadata accessor for FeedLayoutSolverOptions(0);
      uint64_t v44 = *(int *)(v65 + 36);
      uint64_t v67 = &v29[v44];
      uint64_t v45 = &v30[v44];
      uint64_t v46 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      uint64_t v64 = *(void *)(v46 - 8);
      uint64_t v66 = v45;
      uint64_t v47 = v45;
      uint64_t v35 = v46;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v47, 1, v46))
      {
LABEL_10:
        sub_1C01BB2C0();
        memcpy(v67, v66, *(void *)(*(void *)(v48 - 8) + 64));
LABEL_13:
        *(void *)&v29[*(int *)(v65 + 40)] = *(void *)&v30[*(int *)(v65 + 40)];
        *(void *)&v20[v23[7]] = *(void *)&v21[v23[7]];
        *(void *)&v20[v23[8]] = *(void *)&v21[v23[8]];
        v20[v23[9]] = v21[v23[9]];
        *(void *)&v20[v23[10]] = *(void *)&v21[v23[10]];
        v20[v23[11]] = v21[v23[11]];
        *(void *)&v20[v23[12]] = *(void *)&v21[v23[12]];
        uint64_t v50 = v68[6];
        uint64_t v51 = &v69[v50];
        uint64_t v52 = &v71[v50];
        char *v51 = v71[v50];
        *(_OWORD *)(v51 + 8) = *(_OWORD *)&v71[v50 + 8];
        *(_OWORD *)(v51 + 24) = *(_OWORD *)&v71[v50 + 24];
        *((void *)v51 + 5) = *(void *)&v71[v50 + 40];
        long long v53 = *(_OWORD *)&v71[v50 + 64];
        *((_OWORD *)v51 + 3) = *(_OWORD *)&v71[v50 + 48];
        *((_OWORD *)v51 + 4) = v53;
        *((void *)v51 + 10) = *(void *)&v71[v50 + 80];
        v51[88] = v71[v50 + 88];
        *((void *)v51 + 12) = *(void *)&v71[v50 + 96];
        uint64_t v54 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v55 = v54[13];
        uint64_t v56 = &v51[v55];
        uint64_t v57 = &v52[v55];
        uint64_t v58 = sub_1C151787C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
        *(void *)&v51[v54[14]] = *(void *)&v52[v54[14]];
        *(void *)&v51[v54[15]] = *(void *)&v52[v54[15]];
        v51[v54[16]] = v52[v54[16]];
        *(void *)&v51[v54[17]] = *(void *)&v52[v54[17]];
        *(void *)&v51[v54[18]] = *(void *)&v52[v54[18]];
        *(void *)&v51[v54[19]] = *(void *)&v52[v54[19]];
        uint64_t v59 = v68[7];
        uint64_t v60 = &v69[v59];
        id v61 = &v71[v59];
        long long v62 = *((_OWORD *)v61 + 1);
        *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
        *((_OWORD *)v60 + 1) = v62;
        *((_OWORD *)v60 + 2) = *((_OWORD *)v61 + 2);
        *((void *)v60 + 6) = *((void *)v61 + 6);
        *(void *)&v69[v68[8]] = *(void *)&v71[v68[8]];
        swift_storeEnumTagMultiPayload();
        uint64_t v12 = v70;
        goto LABEL_14;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_14:
        *(void *)((char *)a1 + *(int *)(v12 + 28)) = *(void *)((char *)a2 + *(int *)(v12 + 28));
        swift_storeEnumTagMultiPayload();
        goto LABEL_15;
      }
      uint64_t v70 = v12;
      long long v18 = *((_OWORD *)v15 + 1);
      *(_OWORD *)id v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v18;
      *((void *)v14 + 4) = *((void *)v15 + 4);
      uint64_t v68 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      uint64_t v19 = v68[5];
      uint64_t v69 = v14;
      uint64_t v20 = &v14[v19];
      uint64_t v71 = v15;
      uint64_t v21 = &v15[v19];
      uint64_t v22 = sub_1C151772C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      uint64_t v23 = (int *)type metadata accessor for GroupLayoutContext();
      uint64_t v24 = v23[5];
      uint64_t v25 = &v20[v24];
      uint64_t v26 = &v21[v24];
      uint64_t v27 = sub_1C151757C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      uint64_t v28 = v23[6];
      double v29 = &v20[v28];
      uint64_t v30 = &v21[v28];
      *(_OWORD *)double v29 = *(_OWORD *)&v21[v28];
      v29[16] = v21[v28 + 16];
      *(_WORD *)(v29 + 17) = *(_WORD *)&v21[v28 + 17];
      v29[19] = v21[v28 + 19];
      *((_DWORD *)v29 + 5) = *(_DWORD *)&v21[v28 + 20];
      *((void *)v29 + 3) = *(void *)&v21[v28 + 24];
      uint64_t v65 = type metadata accessor for FeedLayoutSolverOptions(0);
      uint64_t v31 = *(int *)(v65 + 36);
      uint64_t v67 = &v29[v31];
      uint64_t v32 = &v30[v31];
      uint64_t v33 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      uint64_t v64 = *(void *)(v33 - 8);
      uint64_t v66 = v32;
      long long v34 = v32;
      uint64_t v35 = v33;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v34, 1, v33)) {
        goto LABEL_10;
      }
    }
    uint64_t v49 = sub_1C151B62C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v67, v66, v49);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v67, 0, 1, v35);
    goto LABEL_13;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1C10FB1FC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  uint64_t v7 = *(void *)(v6 - 8);
  long long v8 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(v7 + 64));
LABEL_30:
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        return a1;
      }
      long long v12 = a2[7];
      a1[6] = a2[6];
      a1[7] = v12;
      a1[8] = a2[8];
      long long v13 = a2[3];
      a1[2] = a2[2];
      a1[3] = v13;
      long long v14 = a2[5];
      a1[4] = a2[4];
      a1[5] = v14;
      long long v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      *((void *)a1 + 18) = *((void *)a2 + 18);
      uint64_t v16 = type metadata accessor for DebugFormatTestCaseResult(0);
      uint64_t v17 = *(int *)(v16 + 24);
      long long v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v134 = v16;
        long long v68 = *((_OWORD *)v19 + 1);
        *(_OWORD *)long long v18 = *(_OWORD *)v19;
        *((_OWORD *)v18 + 1) = v68;
        *((void *)v18 + 4) = *((void *)v19 + 4);
        v130 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
        uint64_t v69 = v130[5];
        v133 = v18;
        uint64_t v24 = &v18[v69];
        v136 = v19;
        uint64_t v25 = &v19[v69];
        uint64_t v70 = sub_1C151772C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v24, v25, v70);
        uint64_t v27 = (int *)type metadata accessor for GroupLayoutContext();
        uint64_t v71 = v27[5];
        uint64_t v72 = &v24[v71];
        uint64_t v73 = &v25[v71];
        uint64_t v74 = sub_1C151757C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
        uint64_t v75 = v27[6];
        uint64_t v33 = &v24[v75];
        long long v34 = &v25[v75];
        *(_OWORD *)uint64_t v33 = *(_OWORD *)&v25[v75];
        v33[16] = v25[v75 + 16];
        *(_WORD *)(v33 + 17) = *(_WORD *)&v25[v75 + 17];
        v33[19] = v25[v75 + 19];
        *((_DWORD *)v33 + 5) = *(_DWORD *)&v25[v75 + 20];
        *((void *)v33 + 3) = *(void *)&v25[v75 + 24];
        uint64_t v76 = type metadata accessor for FeedLayoutSolverOptions(0);
        uint64_t v77 = *(int *)(v76 + 36);
        uint64_t v126 = v76;
        __dst = &v33[v77];
        long long v78 = &v34[v77];
        uint64_t v79 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
        uint64_t v122 = *(void *)(v79 - 8);
        __src = v78;
        uint64_t v80 = v78;
        uint64_t v40 = v79;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v80, 1, v79))
        {
LABEL_21:
          sub_1C01BB2C0();
          memcpy(__dst, __src, *(void *)(*(void *)(v81 - 8) + 64));
LABEL_28:
          *(void *)&v33[*(int *)(v126 + 40)] = *(void *)&v34[*(int *)(v126 + 40)];
          *(void *)&v24[v27[7]] = *(void *)&v25[v27[7]];
          *(void *)&v24[v27[8]] = *(void *)&v25[v27[8]];
          v24[v27[9]] = v25[v27[9]];
          *(void *)&v24[v27[10]] = *(void *)&v25[v27[10]];
          v24[v27[11]] = v25[v27[11]];
          *(void *)&v24[v27[12]] = *(void *)&v25[v27[12]];
          uint64_t v94 = v130[6];
          uint64_t v95 = &v133[v94];
          uint64_t v96 = &v136[v94];
          *uint64_t v95 = v136[v94];
          *(_OWORD *)(v95 + 8) = *(_OWORD *)&v136[v94 + 8];
          *(_OWORD *)(v95 + 24) = *(_OWORD *)&v136[v94 + 24];
          *((void *)v95 + 5) = *(void *)&v136[v94 + 40];
          long long v97 = *(_OWORD *)&v136[v94 + 64];
          *((_OWORD *)v95 + 3) = *(_OWORD *)&v136[v94 + 48];
          *((_OWORD *)v95 + 4) = v97;
          *((void *)v95 + 10) = *(void *)&v136[v94 + 80];
          v95[88] = v136[v94 + 88];
          *((void *)v95 + 12) = *(void *)&v136[v94 + 96];
          uint64_t v98 = (int *)type metadata accessor for GroupLayoutBindingContext();
          uint64_t v99 = v98[13];
          uint64_t v100 = &v95[v99];
          uint64_t v101 = &v96[v99];
          uint64_t v102 = sub_1C151787C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
          *(void *)&v95[v98[14]] = *(void *)&v96[v98[14]];
          *(void *)&v95[v98[15]] = *(void *)&v96[v98[15]];
          v95[v98[16]] = v96[v98[16]];
          *(void *)&v95[v98[17]] = *(void *)&v96[v98[17]];
          *(void *)&v95[v98[18]] = *(void *)&v96[v98[18]];
          *(void *)&v95[v98[19]] = *(void *)&v96[v98[19]];
          uint64_t v103 = v130[7];
          id v104 = &v133[v103];
          v105 = &v136[v103];
          long long v106 = *((_OWORD *)v105 + 1);
          *(_OWORD *)id v104 = *(_OWORD *)v105;
          *((_OWORD *)v104 + 1) = v106;
          *((_OWORD *)v104 + 2) = *((_OWORD *)v105 + 2);
          *((void *)v104 + 6) = *((void *)v105 + 6);
          *(void *)&v133[v130[8]] = *(void *)&v136[v130[8]];
          swift_storeEnumTagMultiPayload();
          uint64_t v16 = v134;
          goto LABEL_29;
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_29:
          *(void *)((char *)a1 + *(int *)(v16 + 28)) = *(void *)((char *)a2 + *(int *)(v16 + 28));
          swift_storeEnumTagMultiPayload();
          goto LABEL_30;
        }
        uint64_t v134 = v16;
        long long v22 = *((_OWORD *)v19 + 1);
        *(_OWORD *)long long v18 = *(_OWORD *)v19;
        *((_OWORD *)v18 + 1) = v22;
        *((void *)v18 + 4) = *((void *)v19 + 4);
        v130 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
        uint64_t v23 = v130[5];
        v133 = v18;
        uint64_t v24 = &v18[v23];
        v136 = v19;
        uint64_t v25 = &v19[v23];
        uint64_t v26 = sub_1C151772C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        uint64_t v27 = (int *)type metadata accessor for GroupLayoutContext();
        uint64_t v28 = v27[5];
        double v29 = &v24[v28];
        uint64_t v30 = &v25[v28];
        uint64_t v31 = sub_1C151757C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
        uint64_t v32 = v27[6];
        uint64_t v33 = &v24[v32];
        long long v34 = &v25[v32];
        *(_OWORD *)uint64_t v33 = *(_OWORD *)&v25[v32];
        v33[16] = v25[v32 + 16];
        *(_WORD *)(v33 + 17) = *(_WORD *)&v25[v32 + 17];
        v33[19] = v25[v32 + 19];
        *((_DWORD *)v33 + 5) = *(_DWORD *)&v25[v32 + 20];
        *((void *)v33 + 3) = *(void *)&v25[v32 + 24];
        uint64_t v35 = type metadata accessor for FeedLayoutSolverOptions(0);
        uint64_t v36 = *(int *)(v35 + 36);
        uint64_t v126 = v35;
        __dst = &v33[v36];
        uint64_t v37 = &v34[v36];
        uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
        uint64_t v122 = *(void *)(v38 - 8);
        __src = v37;
        uint64_t v39 = v37;
        uint64_t v40 = v38;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v39, 1, v38)) {
          goto LABEL_21;
        }
      }
      uint64_t v93 = sub_1C151B62C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(__dst, __src, v93);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(__dst, 0, 1, v40);
      goto LABEL_28;
    }
    goto LABEL_7;
  }
  if (!v10)
  {
    if (a1 == a2) {
      return a1;
    }
    sub_1C0C615DC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      size_t v11 = *(void *)(v7 + 64);
      goto LABEL_8;
    }
    long long v41 = a2[7];
    a1[6] = a2[6];
    a1[7] = v41;
    a1[8] = a2[8];
    long long v42 = a2[3];
    a1[2] = a2[2];
    a1[3] = v42;
    long long v43 = a2[5];
    a1[4] = a2[4];
    a1[5] = v43;
    long long v44 = a2[1];
    *a1 = *a2;
    a1[1] = v44;
    *((void *)a1 + 18) = *((void *)a2 + 18);
    uint64_t v45 = type metadata accessor for DebugFormatTestCaseResult(0);
    uint64_t v46 = *(int *)(v45 + 24);
    uint64_t v47 = (char *)a1 + v46;
    uint64_t v48 = (char *)a2 + v46;
    uint64_t v49 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
    int v50 = swift_getEnumCaseMultiPayload();
    if (v50 == 1)
    {
      uint64_t v137 = v45;
      long long v82 = *((_OWORD *)v48 + 1);
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      *((_OWORD *)v47 + 1) = v82;
      *((void *)v47 + 4) = *((void *)v48 + 4);
      v131 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      v132 = v48;
      uint64_t v83 = v131[5];
      v135 = v47;
      long long v53 = &v47[v83];
      uint64_t v54 = &v48[v83];
      uint64_t v84 = sub_1C151772C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v53, v54, v84);
      uint64_t v56 = (int *)type metadata accessor for GroupLayoutContext();
      uint64_t v85 = v56[5];
      unint64_t v86 = &v53[v85];
      uint64_t v87 = &v54[v85];
      uint64_t v88 = sub_1C151757C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
      uint64_t v89 = v56[6];
      long long v62 = &v53[v89];
      uint64_t v63 = &v54[v89];
      *(_OWORD *)long long v62 = *(_OWORD *)&v54[v89];
      v62[16] = v54[v89 + 16];
      *(_WORD *)(v62 + 17) = *(_WORD *)&v54[v89 + 17];
      v62[19] = v54[v89 + 19];
      *((_DWORD *)v62 + 5) = *(_DWORD *)&v54[v89 + 20];
      *((void *)v62 + 3) = *(void *)&v54[v89 + 24];
      uint64_t v90 = type metadata accessor for FeedLayoutSolverOptions(0);
      uint64_t v91 = *(int *)(v90 + 36);
      uint64_t v127 = &v62[v91];
      __dsta = (int *)v90;
      uint64_t v66 = &v63[v91];
      uint64_t v67 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      uint64_t v123 = *(void *)(v67 - 8);
      __srca = v66;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v66, 1, v67))
      {
LABEL_25:
        sub_1C01BB2C0();
        memcpy(v127, __srca, *(void *)(*(void *)(v92 - 8) + 64));
LABEL_33:
        *(void *)&v62[__dsta[10]] = *(void *)&v63[__dsta[10]];
        *(void *)&v53[v56[7]] = *(void *)&v54[v56[7]];
        *(void *)&v53[v56[8]] = *(void *)&v54[v56[8]];
        v53[v56[9]] = v54[v56[9]];
        *(void *)&v53[v56[10]] = *(void *)&v54[v56[10]];
        v53[v56[11]] = v54[v56[11]];
        *(void *)&v53[v56[12]] = *(void *)&v54[v56[12]];
        uint64_t v109 = v131[6];
        uint64_t v110 = &v135[v109];
        v111 = &v132[v109];
        *uint64_t v110 = v132[v109];
        *(_OWORD *)(v110 + 8) = *(_OWORD *)&v132[v109 + 8];
        *(_OWORD *)(v110 + 24) = *(_OWORD *)&v132[v109 + 24];
        *((void *)v110 + 5) = *(void *)&v132[v109 + 40];
        long long v112 = *(_OWORD *)&v132[v109 + 64];
        *((_OWORD *)v110 + 3) = *(_OWORD *)&v132[v109 + 48];
        *((_OWORD *)v110 + 4) = v112;
        *((void *)v110 + 10) = *(void *)&v132[v109 + 80];
        v110[88] = v132[v109 + 88];
        *((void *)v110 + 12) = *(void *)&v132[v109 + 96];
        uint64_t v113 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v114 = v113[13];
        uint64_t v115 = &v110[v114];
        v116 = &v111[v114];
        uint64_t v117 = sub_1C151787C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v115, v116, v117);
        *(void *)&v110[v113[14]] = *(void *)&v111[v113[14]];
        *(void *)&v110[v113[15]] = *(void *)&v111[v113[15]];
        v110[v113[16]] = v111[v113[16]];
        *(void *)&v110[v113[17]] = *(void *)&v111[v113[17]];
        *(void *)&v110[v113[18]] = *(void *)&v111[v113[18]];
        *(void *)&v110[v113[19]] = *(void *)&v111[v113[19]];
        uint64_t v118 = v131[7];
        uint64_t v119 = &v135[v118];
        v120 = &v132[v118];
        long long v121 = *((_OWORD *)v120 + 1);
        *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
        *((_OWORD *)v119 + 1) = v121;
        *((_OWORD *)v119 + 2) = *((_OWORD *)v120 + 2);
        *((void *)v119 + 6) = *((void *)v120 + 6);
        *(void *)&v135[v131[8]] = *(void *)&v132[v131[8]];
        swift_storeEnumTagMultiPayload();
        uint64_t v45 = v137;
        goto LABEL_34;
      }
    }
    else
    {
      if (v50)
      {
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
LABEL_34:
        *(void *)((char *)a1 + *(int *)(v45 + 28)) = *(void *)((char *)a2 + *(int *)(v45 + 28));
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v137 = v45;
      long long v51 = *((_OWORD *)v48 + 1);
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      *((_OWORD *)v47 + 1) = v51;
      *((void *)v47 + 4) = *((void *)v48 + 4);
      v131 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      v132 = v48;
      uint64_t v52 = v131[5];
      v135 = v47;
      long long v53 = &v47[v52];
      uint64_t v54 = &v48[v52];
      uint64_t v55 = sub_1C151772C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
      uint64_t v56 = (int *)type metadata accessor for GroupLayoutContext();
      uint64_t v57 = v56[5];
      uint64_t v58 = &v53[v57];
      uint64_t v59 = &v54[v57];
      uint64_t v60 = sub_1C151757C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
      uint64_t v61 = v56[6];
      long long v62 = &v53[v61];
      uint64_t v63 = &v54[v61];
      *(_OWORD *)long long v62 = *(_OWORD *)&v54[v61];
      v62[16] = v54[v61 + 16];
      *(_WORD *)(v62 + 17) = *(_WORD *)&v54[v61 + 17];
      v62[19] = v54[v61 + 19];
      *((_DWORD *)v62 + 5) = *(_DWORD *)&v54[v61 + 20];
      *((void *)v62 + 3) = *(void *)&v54[v61 + 24];
      uint64_t v64 = type metadata accessor for FeedLayoutSolverOptions(0);
      uint64_t v65 = *(int *)(v64 + 36);
      uint64_t v127 = &v62[v65];
      __dsta = (int *)v64;
      uint64_t v66 = &v63[v65];
      uint64_t v67 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      uint64_t v123 = *(void *)(v67 - 8);
      __srca = v66;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v66, 1, v67)) {
        goto LABEL_25;
      }
    }
    uint64_t v108 = sub_1C151B62C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 32))(v127, v66, v108);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v127, 0, 1, v67);
    goto LABEL_33;
  }
  sub_1C0C615DC((uint64_t)a1);
LABEL_7:
  size_t v11 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
  memcpy(a1, a2, v11);
  return a1;
}

uint64_t sub_1C10FC320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C10FC334);
}

uint64_t sub_1C10FC334(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C10FC3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C10FC3B4);
}

uint64_t sub_1C10FC3B4(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1C10FC434(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_1C10FC49C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for DebugFormatTestSuiteResultItem()
{
  uint64_t result = qword_1EA1AB708;
  if (!qword_1EA1AB708) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C10FC558()
{
  uint64_t result = type metadata accessor for DebugFormatTestSuiteScopeResult();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t ShareLinkProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ShareLinkProviderType.shareLink(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  int v9 = (char *)&v34 - v8;
  MEMORY[0x1F4188790](v10);
  long long v12 = (char *)&v34 - v11;
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v18 = MEMORY[0x1F4188790](v17).n128_u64[0];
  uint64_t v20 = (char *)&v34 - v19;
  if (objc_msgSend(a1, sel_contentType, v18) != (id)1)
  {
    uint64_t v34 = a2;
    id v21 = objc_msgSend(a1, sel_articleID);
    if (!v21)
    {
      sub_1C151E62C();
      id v21 = (id)sub_1C151E5EC();
      swift_bridgeObjectRelease();
    }
    id v22 = objc_msgSend(a1, sel_routeURL);
    if (v22)
    {
      sub_1C1515F1C();

      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v16, v13);
      uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v23(v12, 0, 1, v13);
      int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
      uint64_t v35 = v23;
      if (v24 == 1)
      {
        id v22 = 0;
      }
      else
      {
        id v22 = (id)sub_1C1515E9C();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
      }
    }
    else
    {
      uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v35(v12, 1, 1, v13);
    }
    id v25 = objc_msgSend(self, sel_nss_NewsURLForArticleID_routeURL_, v21, v22);

    if (v25)
    {
      sub_1C1515F1C();

      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v26(v9, v16, v13);
      v35(v9, 0, 1, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) != 1)
      {
        v26(v20, v9, v13);
        id v27 = objc_msgSend(a1, sel_sourceChannel);
        if (!v27 || (unsigned int v28 = objc_msgSend(v27, sel_isPublic), swift_unknownObjectRelease(), v28))
        {
          uint64_t v29 = v34;
          v26((char *)v34, v20, v13);
          return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v35)(v29, 0, 1, v13);
        }
        (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
        goto LABEL_16;
      }
    }
    else
    {
      v35(v9, 1, 1, v13);
    }
    sub_1C002F608((uint64_t)v9);
LABEL_16:
    a2 = v34;
  }
  id v31 = objc_msgSend(a1, sel_contentURL);
  if (v31)
  {
    uint64_t v32 = v31;
    sub_1C1515F1C();

    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v33 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v6, v33, 1, v13);
  return sub_1C002F694((uint64_t)v6, a2);
}

uint64_t sub_1C10FCA8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ShareLinkProviderType.shareLink(for:)(a1, a2);
}

uint64_t ShareLinkProvider.deinit()
{
  return v0;
}

uint64_t ShareLinkProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C10FCABC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C097AEF4(a1, a2);
}

uint64_t dispatch thunk of ShareLinkProviderType.shareLink(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for ShareLinkProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ShareLinkProvider);
}

uint64_t dispatch thunk of ShareLinkProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

double sub_1C10FCB20(double **a1, uint64_t a2, void *a3)
{
  id v23 = a3;
  uint64_t v3 = *a1;
  CGFloat v4 = (*a1)[13];
  MEMORY[0x1F4188790](a1);
  CGFloat v5 = v3[17];
  uint64_t v6 = sub_1C151B1CC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int v9 = (char *)&v22 - v8;
  CGFloat v10 = v3[16];
  v24.x = v3[12];
  v24.y = v4;
  v25.width = v10;
  v25.height = v5;
  sub_1C151A79C();
  sub_1C151A7AC();
  sub_1C151B1BC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1BFC845BC(0, &qword_1EB872828);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC((long long *)&v24, (uint64_t)v27);
    uint64_t v11 = v28;
    uint64_t v12 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v12 + 8))(v30, v11, v12);
    sub_1BFF5984C((uint64_t)v30, (uint64_t)&v24);
    id v13 = v23;
    if (v26 == 1)
    {
      objc_msgSend(v23, sel_frame);
    }
    else
    {
      CGPoint v16 = v24;
      CGSize v17 = v25;
      objc_msgSend(v23, sel_frame);
      CGFloat MinX = CGRectGetMinX(v31);
      objc_msgSend(v13, sel_frame);
      CGFloat MinY = CGRectGetMinY(v32);
      v33.origin = v16;
      v33.size = v17;
      unint64_t v20 = (unint64_t)CGRectOffset(v33, MinX, MinY);
    }
    double v15 = *(double *)&v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    uint64_t v26 = 0;
    CGPoint v24 = (CGPoint)0;
    CGSize v25 = (CGSize)0;
    sub_1BFE4D118((uint64_t)&v24, &qword_1EB886070, &qword_1EB872828);
    objc_msgSend(v23, sel_frame);
    return v14;
  }
  return v15;
}

uint64_t sub_1C10FCE6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C15195AC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  CGFloat v5 = (id *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for FeedEngagementBanner();
  sub_1C151957C();
  int v6 = (*(uint64_t (**)(id *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E4F7EBE8])
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F7AD98];
LABEL_11:
    uint64_t v9 = *v7;
    uint64_t v10 = sub_1C151D75C();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);
    uint64_t v12 = a1;
    uint64_t v13 = v9;
    return v11(v12, v13, v10);
  }
  int v8 = v6;
  if (v6 == *MEMORY[0x1E4F7EBF0])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v5, v2);

    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F7ADA0];
    goto LABEL_11;
  }
  if (v6 == *MEMORY[0x1E4F7EC00])
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F7ADB0];
    goto LABEL_11;
  }
  if (v6 == *MEMORY[0x1E4F7EC08])
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F7ADB8];
    goto LABEL_11;
  }
  if (v6 == *MEMORY[0x1E4F7EBF8])
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F7ADA8];
    goto LABEL_11;
  }
  int v15 = *MEMORY[0x1E4F7EC18];
  uint64_t v10 = sub_1C151D75C();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);
  if (v8 != v15)
  {
    v11(a1, *MEMORY[0x1E4F7ADA0], v10);
    return (*(uint64_t (**)(id *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v13 = *MEMORY[0x1E4F7ADC0];
  uint64_t v12 = a1;
  return v11(v12, v13, v10);
}

uint64_t FormatNumberFormatRoundingMode.rawValue.getter()
{
  uint64_t result = 0x676E696C696563;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x726F6F6C66;
      break;
    case 2:
      uint64_t result = 1853321060;
      break;
    case 3:
      uint64_t result = 28789;
      break;
    case 4:
      uint64_t result = 0x6E657645666C6168;
      break;
    case 5:
      uint64_t result = 0x6E776F44666C6168;
      break;
    case 6:
      uint64_t result = 0x7055666C6168;
      break;
    default:
      return result;
  }
  return result;
}

NewsFeed::FormatNumberFormatRoundingMode_optional __swiftcall FormatNumberFormatRoundingMode.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C10FD1FC(unsigned __int8 *a1, char *a2)
{
  return sub_1C14956EC(*a1, *a2);
}

unint64_t sub_1C10FD20C()
{
  unint64_t result = qword_1EA1AB718;
  if (!qword_1EA1AB718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB718);
  }
  return result;
}

uint64_t sub_1C10FD260()
{
  return sub_1C045140C();
}

uint64_t sub_1C10FD26C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C10FD368()
{
  return sub_1C045140C();
}

NewsFeed::FormatNumberFormatRoundingMode_optional sub_1C10FD370(Swift::String *a1)
{
  return FormatNumberFormatRoundingMode.init(rawValue:)(*a1);
}

void sub_1C10FD37C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x676E696C696563;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x726F6F6C66;
      goto LABEL_3;
    case 2:
      *a1 = 1853321060;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 28789;
      a1[1] = 0xE200000000000000;
      break;
    case 4:
      *a1 = 0x6E657645666C6168;
      a1[1] = 0xE800000000000000;
      break;
    case 5:
      *a1 = 0x6E776F44666C6168;
      a1[1] = 0xE800000000000000;
      break;
    case 6:
      *a1 = 0x7055666C6168;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1C10FD45C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C10FD48C();
  unint64_t result = sub_1C10FD4E0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C10FD48C()
{
  unint64_t result = qword_1EA1AB720;
  if (!qword_1EA1AB720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB720);
  }
  return result;
}

unint64_t sub_1C10FD4E0()
{
  unint64_t result = qword_1EA1AB728;
  if (!qword_1EA1AB728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB728);
  }
  return result;
}

unint64_t sub_1C10FD534(uint64_t a1)
{
  unint64_t result = sub_1C10FD55C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C10FD55C()
{
  unint64_t result = qword_1EA1AB730;
  if (!qword_1EA1AB730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB730);
  }
  return result;
}

unint64_t sub_1C10FD5B0(void *a1)
{
  a1[1] = sub_1C086C914();
  a1[2] = sub_1C0902DC4();
  unint64_t result = sub_1C10FD20C();
  a1[3] = result;
  return result;
}

uint64_t sub_1C10FD5E8()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C10FD648(void *a1)
{
  return FormatNumberFormatRoundingMode.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FormatNumberFormatRoundingMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10FD72CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatNumberFormatRoundingMode()
{
  return &type metadata for FormatNumberFormatRoundingMode;
}

uint64_t sub_1C10FD764(uint64_t a1, uint64_t a2)
{
  return sub_1C00E1D34(*(void *)(*(void *)a1 + 16), *(void *)(*(void *)a2 + 16));
}

ValueMetadata *type metadata accessor for FormatAccessibilityData()
{
  return &type metadata for FormatAccessibilityData;
}

uint64_t FormatTextNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, char a15, uint64_t a16, uint64_t *a17, uint64_t a18, uint64_t a19)
{
  uint64_t v27 = swift_allocObject();
  FormatTextNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
  return v27;
}

uint64_t FormatTextNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t FormatTextNodeLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTextNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTextNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatTextNodeLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t FormatTextNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatTextNodeLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 104);
  return swift_retain();
}

uint64_t FormatTextNodeLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 112);
}

unint64_t FormatTextNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 120);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatTextNodeLayoutAttributes.isUserInteractionEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 128) = a1;
  return result;
}

uint64_t (*FormatTextNodeLayoutAttributes.isUserInteractionEnabled.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatTextNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatTextNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 152);
  *(void *)a1 = *(void *)(v1 + 144);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatTextNodeLayoutAttributes.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTextNodeLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C10FDA50(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6E65644965646F6ELL;
      break;
    case 3:
      unint64_t result = 0x656D617266;
      break;
    case 4:
      unint64_t result = 0x656C797473;
      break;
    case 5:
      unint64_t result = 0x676E697A69736572;
      break;
    case 6:
      unint64_t result = 0x7865646E497ALL;
      break;
    case 7:
      unint64_t result = 0x696C696269736976;
      break;
    case 8:
      unint64_t result = 0xD000000000000018;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 1701667182;
      break;
    case 12:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C10FDBE8()
{
  return sub_1C10FDA50(*v0);
}

uint64_t sub_1C10FDBF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C10FF274(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C10FDC18(uint64_t a1)
{
  unint64_t v2 = sub_1C10FEC50();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C10FDC54(uint64_t a1)
{
  unint64_t v2 = sub_1C10FEC50();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatTextNodeLayoutAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C10FED34(0, &qword_1EA1AB738, (uint64_t (*)(void))sub_1C10FEC50, (uint64_t)&type metadata for FormatTextNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C10FEC50();
  sub_1C1520F0C();
  LOBYTE(v15) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    LOBYTE(v15) = 1;
    sub_1C15207CC();
    LOBYTE(v15) = 2;
    sub_1C15207CC();
    long long v10 = *(_OWORD *)(v3 + 80);
    long long v15 = *(_OWORD *)(v3 + 64);
    long long v16 = v10;
    LOBYTE(v13) = 3;
    type metadata accessor for CGRect(0);
    sub_1BFE4C658(&qword_1EA197288, 255, type metadata accessor for CGRect);
    sub_1C152080C();
    *(void *)&long long v15 = *(void *)(v3 + 96);
    LOBYTE(v13) = 4;
    type metadata accessor for FormatTextNodeStyle();
    sub_1BFE4C658(&qword_1EB866970, 255, (void (*)(uint64_t))type metadata accessor for FormatTextNodeStyle);
    sub_1C152078C();
    *(void *)&long long v15 = *(void *)(v3 + 104);
    LOBYTE(v13) = 5;
    sub_1C026063C();
    sub_1C152078C();
    LOBYTE(v15) = 6;
    sub_1C15207FC();
    *(void *)&long long v15 = *(void *)(v3 + 120);
    LOBYTE(v13) = 7;
    sub_1C009DA10();
    sub_1C152080C();
    swift_beginAccess();
    if ((*(unsigned char *)(v3 + 128) & 1) == 0)
    {
      LOBYTE(v13) = 8;
      char v17 = 0;
      sub_1C10FECA4();
      sub_1C1520BAC();
    }
    uint64_t v13 = *(void *)(v3 + 136);
    char v17 = 9;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BFE4C658(&qword_1EA198B58, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C152080C();
    char v11 = *(unsigned char *)(v3 + 152);
    uint64_t v13 = *(void *)(v3 + 144);
    char v14 = v11;
    char v17 = 10;
    sub_1BFDD5084();
    sub_1C152078C();
    LOBYTE(v13) = 11;
    sub_1C152074C();
    uint64_t v13 = *(void *)(v3 + 176);
    char v17 = 12;
    sub_1C10FED34(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    sub_1C10FED9C(&qword_1EA198B68, (void (*)(void))sub_1C0260690);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FormatTextNodeLayoutAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatTextNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatTextNodeLayoutAttributes.init(from:)(void *a1)
{
  sub_1C10FED34(0, &qword_1EA1AB750, (uint64_t (*)(void))sub_1C10FEC50, (uint64_t)&type metadata for FormatTextNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v19 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v18 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C10FEC50();
  uint64_t v7 = v20;
  sub_1C1520EBC();
  if (v7)
  {
    swift_deallocPartialClassInstance();
    uint64_t v13 = (uint64_t)a1;
  }
  else
  {
    unint64_t v20 = a1;
    uint64_t v8 = v19;
    LOBYTE(v21) = 0;
    *(void *)(v1 + 16) = sub_1C152069C();
    *(void *)(v1 + 24) = v9;
    LOBYTE(v21) = 1;
    *(void *)(v1 + 32) = sub_1C152069C();
    *(void *)(v1 + 40) = v10;
    LOBYTE(v21) = 2;
    *(void *)(v1 + 48) = sub_1C152069C();
    *(void *)(v1 + 56) = v11;
    type metadata accessor for CGRect(0);
    char v24 = 3;
    sub_1BFE4C658(&qword_1EB87A290, 255, type metadata accessor for CGRect);
    v18[1] = 0;
    sub_1C15206EC();
    long long v12 = v22;
    *(_OWORD *)(v1 + 64) = v21;
    *(_OWORD *)(v1 + 80) = v12;
    type metadata accessor for FormatTextNodeStyle();
    char v24 = 4;
    sub_1BFE4C658(&qword_1EB8890A0, 255, (void (*)(uint64_t))type metadata accessor for FormatTextNodeStyle);
    sub_1C152065C();
    *(void *)(v1 + 96) = v21;
    char v24 = 5;
    sub_1C0260F28();
    sub_1C152065C();
    *(void *)(v1 + 104) = v21;
    LOBYTE(v21) = 6;
    *(void *)(v1 + 112) = sub_1C15206DC();
    char v24 = 7;
    sub_1BFE3D540();
    sub_1C15206EC();
    *(void *)(v1 + 120) = v21;
    LOBYTE(v21) = 8;
    v18[0] = v6;
    if (sub_1C152071C())
    {
      char v24 = 8;
      sub_1C15206EC();
      char v15 = v23;
    }
    else
    {
      char v15 = 1;
    }
    *(unsigned char *)(v1 + 128) = v15;
    type metadata accessor for FormatContextLayoutOptions();
    char v24 = 9;
    sub_1BFE4C658(&qword_1EA198B88, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C15206EC();
    *(void *)(v1 + 136) = v21;
    char v24 = 10;
    sub_1BFE3CF9C();
    sub_1C152065C();
    char v16 = BYTE8(v21);
    *(void *)(v1 + 144) = v21;
    *(unsigned char *)(v1 + 152) = v16;
    LOBYTE(v21) = 11;
    *(void *)(v1 + 160) = sub_1C152060C();
    *(void *)(v1 + 168) = v17;
    sub_1C10FED34(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    char v24 = 12;
    sub_1C10FED9C(&qword_1EA198B90, (void (*)(void))sub_1C0261020);
    sub_1C15206EC();
    (*(void (**)(void, uint64_t))(v8 + 8))(v18[0], v4);
    uint64_t v13 = (uint64_t)v20;
    *(void *)(v1 + 176) = v21;
  }
  __swift_destroy_boxed_opaque_existential_1(v13);
  return v1;
}

uint64_t sub_1C10FEA5C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C10FEA68@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatTextNodeLayoutAttributes.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C10FEAC0(void *a1)
{
  return FormatTextNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C10FEAE4(uint64_t a1, uint64_t a2)
{
  sub_1BFE4C658(&qword_1EA1A9420, a2, (void (*)(uint64_t))type metadata accessor for FormatTextNodeLayoutAttributes);
  return sub_1C151798C();
}

uint64_t sub_1C10FEB90(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C10FEBEC()
{
  sub_1BFEF89EC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120));
  return swift_deallocObject();
}

unint64_t sub_1C10FEC50()
{
  unint64_t result = qword_1EA1AB740;
  if (!qword_1EA1AB740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB740);
  }
  return result;
}

unint64_t sub_1C10FECA4()
{
  unint64_t result = qword_1EA1AB748;
  if (!qword_1EA1AB748)
  {
    sub_1C10FED34(255, &qword_1EA1AB738, (uint64_t (*)(void))sub_1C10FEC50, (uint64_t)&type metadata for FormatTextNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB748);
  }
  return result;
}

void sub_1C10FED34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C10FED9C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C10FED34(255, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C10FEE40(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C658(&qword_1EA1AB758, a2, (void (*)(uint64_t))type metadata accessor for FormatTextNodeLayoutAttributes);
}

uint64_t sub_1C10FEE88(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C658(&qword_1EA1A9378, a2, (void (*)(uint64_t))type metadata accessor for FormatTextNodeLayoutAttributes);
}

uint64_t sub_1C10FEED0(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C658(&qword_1EA1A93D0, a2, (void (*)(uint64_t))type metadata accessor for FormatTextNodeLayoutAttributes);
}

uint64_t sub_1C10FEF18(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C658(&qword_1EA1AB760, a2, (void (*)(uint64_t))type metadata accessor for FormatTextNodeLayoutAttributes);
}

uint64_t sub_1C10FEF60@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 128);
  return result;
}

uint64_t sub_1C10FEFA8(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 128) = v2;
  return result;
}

uint64_t method lookup function for FormatTextNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatTextNodeLayoutAttributes);
}

uint64_t dispatch thunk of FormatTextNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of FormatTextNodeLayoutAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

unsigned char *storeEnumTagSinglePayload for FormatTextNodeLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C10FF134);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTextNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatTextNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1C10FF170()
{
  unint64_t result = qword_1EA1AB768;
  if (!qword_1EA1AB768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB768);
  }
  return result;
}

unint64_t sub_1C10FF1C8()
{
  unint64_t result = qword_1EA1AB770;
  if (!qword_1EA1AB770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB770);
  }
  return result;
}

unint64_t sub_1C10FF220()
{
  unint64_t result = qword_1EA1AB778;
  if (!qword_1EA1AB778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB778);
  }
  return result;
}

uint64_t sub_1C10FF274(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1605370 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C1608ED0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1608D00 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C16050E0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1608F10)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

double EmptyViewSupplementaryLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t EmptyViewSupplementaryLayoutAttributes.kind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed38EmptyViewSupplementaryLayoutAttributes_kind;
  uint64_t v4 = sub_1C151C1FC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

double *EmptyViewSupplementaryLayoutAttributes.__allocating_init(kind:frame:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  unint64_t v10 = (double *)swift_allocObject();
  uint64_t v11 = (char *)v10 + OBJC_IVAR____TtC8NewsFeed38EmptyViewSupplementaryLayoutAttributes_kind;
  uint64_t v12 = sub_1C151C1FC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a1, v12);
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  return v10;
}

uint64_t EmptyViewSupplementaryLayoutAttributes.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed38EmptyViewSupplementaryLayoutAttributes_kind;
  uint64_t v2 = sub_1C151C1FC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1C10FF91C(uint64_t a1)
{
  uint64_t v2 = sub_1BFC3B4A8(&qword_1EB8795B8);
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t sub_1C10FF974()
{
  return type metadata accessor for EmptyViewSupplementaryLayoutAttributes();
}

uint64_t method lookup function for EmptyViewSupplementaryLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EmptyViewSupplementaryLayoutAttributes);
}

uint64_t dispatch thunk of EmptyViewSupplementaryLayoutAttributes.__allocating_init(kind:frame:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

ValueMetadata *type metadata accessor for FormatLayoutOption()
{
  return &type metadata for FormatLayoutOption;
}

unint64_t sub_1C10FF9B8(void *a1)
{
  a1[1] = sub_1BFD2C2FC();
  a1[2] = sub_1BFD74764();
  unint64_t result = sub_1C10FF9F0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C10FF9F0()
{
  unint64_t result = qword_1EA1AB780;
  if (!qword_1EA1AB780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB780);
  }
  return result;
}

unint64_t sub_1C10FFA44(uint64_t a1)
{
  unint64_t result = sub_1C10FFA6C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C10FFA6C()
{
  unint64_t result = qword_1EA1AB788;
  if (!qword_1EA1AB788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB788);
  }
  return result;
}

uint64_t sub_1C10FFAC0()
{
  uint64_t v0 = sub_1C151F52C();
  MEMORY[0x1F4188790](v0);
  uint64_t v1 = sub_1C151F55C();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151E1DC();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1BFE4597C();
  sub_1C151E1CC();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCC68], v1);
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1BFCBD184((unint64_t *)&unk_1EB87A1A0, MEMORY[0x1E4FBCC10]);
  sub_1C006480C(0);
  sub_1BFCBD184((unint64_t *)&qword_1EB879FC0, sub_1C006480C);
  sub_1C151FFBC();
  uint64_t result = sub_1C151F5AC();
  qword_1EB93C2A8 = result;
  return result;
}

uint64_t sub_1C10FFD14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FeatureAvailability();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for FeatureAvailability;
  *a1 = result;
  return result;
}

uint64_t sub_1C10FFD5C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB896228);
  uint64_t result = sub_1C151819C();
  if (v9)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BFC9DBE8(0, &qword_1EB87BD68);
    uint64_t result = sub_1C151818C();
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = type metadata accessor for IssueService();
      uint64_t v7 = swift_allocObject();
      uint64_t result = sub_1BFC773DC(&v8, v7 + 16);
      *(void *)(v7 + 56) = v5;
      a2[3] = v6;
      a2[4] = (uint64_t)&protocol witness table for IssueService;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C10FFE68@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC9DBE8(0, &qword_1EB87A190);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t OperationFactory = type metadata accessor for IssuesFetchOperationFactory();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    a2[3] = OperationFactory;
    a2[4] = (uint64_t)&off_1F1C20D40;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C10FFF00@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A130);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for ResourceService();
    uint64_t result = swift_allocObject();
    *(unsigned char *)(result + 24) = 2;
    *(void *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&protocol witness table for ResourceService;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C10FFFA0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB897880);
  uint64_t result = sub_1C151819C();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for FormatBackgroundFeedPluginFactory();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_1BFC773DC(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&protocol witness table for FormatBackgroundFeedPluginFactory;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1100054@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatBackgroundLayoutSolver();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    type metadata accessor for FormatLayoutViewFactory();
    uint64_t result = sub_1C151818C();
    if (result)
    {
      uint64_t v6 = result;
      uint64_t v7 = type metadata accessor for FormatBackgroundLayoutManager();
      long long v8 = (void *)swift_allocObject();
      sub_1C0091AEC(0, &qword_1EB863E18, (uint64_t (*)(uint64_t))sub_1C11020A0, MEMORY[0x1E4FAB060]);
      swift_allocObject();
      uint64_t result = sub_1C1518E9C();
      v8[3] = v6;
      void v8[4] = result;
      v8[2] = v5;
      a2[3] = v7;
      a2[4] = &protocol witness table for FormatBackgroundLayoutManager;
      *a2 = v8;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1100184(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C00924C0(0, qword_1EB894BD0, (uint64_t)&type metadata for GroupLayoutInventory, (uint64_t)&protocol witness table for GroupLayoutInventory, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FeedLayoutSolver);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8953F0);
  uint64_t result = sub_1C151819C();
  if (!v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatDecorationProviderFactory();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v4 = result;
    type metadata accessor for FormatBackgroundLayoutSolver();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    sub_1BFC773DC(&v6, v5 + 24);
    *(void *)(v5 + 64) = v4;
    return v5;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1C11002D4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C151688C();
  uint64_t result = sub_1C151818C();
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1100328@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C007F628(a1, &qword_1EB8633B8, (uint64_t)&protocol witness table for FCOfflineModeMonitor, a2);
}

uint64_t sub_1C1100344@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v4 - 8);
  long long v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v8 = MEMORY[0x1F4188790](v7).n128_u64[0];
  unint64_t v10 = (char *)&v17 - v9;
  id v11 = objc_msgSend(self, sel_authTokenBaseURLForConfiguration_, objc_msgSend(a1, sel_appConfiguration, v8));
  if (v11)
  {
    uint64_t v12 = v11;
    sub_1C1515F1C();

    uint64_t v13 = sub_1C1515FDC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 0, 1, v13);
  }
  else
  {
    uint64_t v13 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  }
  sub_1C002F694((uint64_t)v6, (uint64_t)v10);
  sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) == 1)
  {
    swift_unknownObjectRelease();
    sub_1C002F608((uint64_t)v10);
    uint64_t v15 = 1;
  }
  else
  {
    sub_1C1515EDC();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
    uint64_t v15 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a2, v15, 1, v13);
}

uint64_t sub_1C1100588@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0091AEC(0, (unint64_t *)&qword_1EB871190, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  long long v6 = &v13[-v5 - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8971B0);
  uint64_t result = sub_1C151819C();
  if (v14)
  {
    uint64_t v8 = type metadata accessor for LatestPuzzleProvider();
    uint64_t v9 = swift_allocObject();
    sub_1BFC66384((uint64_t)v13, v9 + 16);
    sub_1C151667C();
    uint64_t v10 = sub_1C15166BC();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10);
    if (result != 1)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
      uint64_t result = (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(v9 + OBJC_IVAR____TtC8NewsFeed20LatestPuzzleProvider_timeZone, v6, v10);
      a2[3] = v8;
      a2[4] = (uint64_t)&off_1F1BE60B8;
      *a2 = v9;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1100760@<X0>(void *a1@<X0>, char **a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, &qword_1EB890170);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8971B0);
  uint64_t result = sub_1C151819C();
  if (!v11)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A270);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    long long v6 = (void *)result;
    uint64_t v7 = (objc_class *)type metadata accessor for PuzzleHistoryService();
    id v8 = objc_allocWithZone(v7);
    uint64_t v9 = sub_1C11D4630(v5, (uint64_t)v10, v6);

    uint64_t result = swift_unknownObjectRelease();
    a2[3] = (char *)v7;
    a2[4] = (char *)&off_1F1C1BD50;
    *a2 = v9;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1C11008BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB871540);
  uint64_t result = sub_1C151819C();
  if (!v13)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A270);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8971B0);
  uint64_t result = sub_1C151819C();
  if (!v11)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB897400);
  uint64_t result = sub_1C151819C();
  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC9DBE8(0, &qword_1EB881480);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    long long v6 = (void *)result;
    type metadata accessor for PuzzleGameCenterService();
    swift_allocObject();
    id v7 = sub_1C10BCB24((uint64_t)v12, v5, (uint64_t)v10, (uint64_t)v8, v6);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t result = sub_1BFD9CA80((unint64_t *)&unk_1EB884AE0, (void (*)(uint64_t))type metadata accessor for PuzzleGameCenterService);
    *a2 = v7;
    a2[1] = result;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1C1100AF0(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFCB6824(0, &qword_1EB871438);
  uint64_t result = sub_1C151819C();
  if (v4)
  {
    sub_1BFC773DC(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1C1518B1C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1100BC0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB897400);
  uint64_t result = sub_1C151819C();
  uint64_t v4 = v18;
  if (v18)
  {
    uint64_t v5 = type metadata accessor for PuzzleStatsProcessor();
    uint64_t v6 = v19;
    id v7 = __swift_project_boxed_opaque_existential_1(v17, v18);
    v16[3] = v4;
    uint64_t v8 = *(void *)(v6 + 8);
    v16[4] = v8;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v16);
    uint64_t v10 = *(void (**)(char *, uint64_t *, uint64_t, __n128))(*(void *)(v4 - 8) + 16);
    uint64_t v11 = ((uint64_t (*)(uint64_t *, void *, uint64_t))v10)(boxed_opaque_existential_0, v7, v4);
    __n128 v12 = MEMORY[0x1F4188790](v11);
    uint64_t v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    v10(v14, boxed_opaque_existential_0, v4, v12);
    uint64_t v15 = sub_1C0076668((uint64_t)v14, v5, v4, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1F1C1BF08;
    *a2 = v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1100D40@<X0>(uint64_t *a1@<X8>)
{
  sub_1C0091AEC(0, &qword_1EB884888, MEMORY[0x1E4FBD360], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - v3;
  uint64_t v5 = type metadata accessor for PuzzleStatsStateStore();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = sub_1C15198DC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
  sub_1BFD9C9B4();
  swift_allocObject();
  uint64_t result = sub_1C151874C();
  *(void *)(v6 + 16) = result;
  a1[3] = v5;
  a1[4] = (uint64_t)&off_1F1BECFB0;
  *a1 = v6;
  return result;
}

uint64_t sub_1C1100E9C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A270);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB897400);
  uint64_t result = sub_1C151819C();
  if (!v36[3])
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8971B0);
  uint64_t result = sub_1C151819C();
  if (!v35)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB884B68);
  uint64_t result = sub_1C151819C();
  uint64_t v6 = v32;
  if (!v32)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v7 = v33;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB884B10);
  uint64_t result = sub_1C151819C();
  if (!v31)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB884B48);
  uint64_t result = sub_1C151819C();
  if (!v29)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v26 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87B080);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v8 = (void *)result;
    uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
    __n128 v10 = MEMORY[0x1F4188790](v9);
    __n128 v12 = (uint64_t *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v13 + 16))(v12, v10);
    uint64_t v14 = *v12;
    uint64_t v15 = type metadata accessor for PuzzleStatsProcessor();
    v27[4] = &off_1F1C1BF08;
    void v27[3] = v15;
    v27[0] = v14;
    uint64_t v16 = type metadata accessor for PuzzleStatsService();
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v15);
    __n128 v19 = MEMORY[0x1F4188790](v18);
    long long v21 = (uint64_t *)((char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v22 + 16))(v21, v19);
    id v23 = sub_1BFCC9404(v5, v36, (uint64_t)v34, v6, v7, *v21, (uint64_t)v28, v8, v17);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    char v24 = v26;
    v26[3] = v16;
    v24[4] = &off_1F1B9AC80;
    *char v24 = v23;
    return result;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1C1101304@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB897400);
  uint64_t result = sub_1C151819C();
  if (!v14)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB884AC0);
  uint64_t result = sub_1C151819C();
  if (!v12)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB884AB0);
  uint64_t result = sub_1C151819C();
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB884BC8);
  uint64_t result = sub_1C151819C();
  if (v8)
  {
    uint64_t v5 = type metadata accessor for PuzzleImageShareAttributeProvider();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 176) = 0;
    sub_1BFC773DC(&v13, v6 + 16);
    sub_1BFC773DC(&v11, v6 + 56);
    sub_1BFC773DC(&v9, v6 + 96);
    uint64_t result = sub_1BFC773DC(&v7, v6 + 136);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1F1C01A90;
    *a2 = v6;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1C11014DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87B080);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for FeedUserInfo();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&protocol witness table for FeedUserInfo;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1101574(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFC9DBE8(0, &qword_1EB87A190);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v4 = result;
  uint64_t v5 = type metadata accessor for HeadlineReferenceService();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  uint64_t v39 = v5;
  uint64_t v40 = sub_1BFD9CA80(&qword_1EB85BE98, (void (*)(uint64_t))type metadata accessor for HeadlineReferenceService);
  *(void *)&long long v38 = v6;
  sub_1C15186BC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = result;
  uint64_t v8 = type metadata accessor for IssueReferenceService();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  uint64_t v39 = v8;
  uint64_t v40 = sub_1BFD9CA80(qword_1EB85EBF0, (void (*)(uint64_t))type metadata accessor for IssueReferenceService);
  *(void *)&long long v38 = v9;
  sub_1C15186BC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFC39268(0, (unint64_t *)&unk_1EB87A180);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v10 = result;
  uint64_t v11 = type metadata accessor for TagReferenceService();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  uint64_t v39 = v11;
  uint64_t v40 = sub_1BFD9CA80((unint64_t *)&unk_1EB85BAB0, (void (*)(uint64_t))type metadata accessor for TagReferenceService);
  *(void *)&long long v38 = v12;
  sub_1C15186BC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A120);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v13 = result;
  uint64_t v14 = type metadata accessor for AssetReferenceService();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  uint64_t v39 = v14;
  uint64_t v40 = sub_1BFD9CA80(&qword_1EB85BBE0, (void (*)(uint64_t))type metadata accessor for AssetReferenceService);
  *(void *)&long long v38 = v15;
  sub_1C15186BC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = result;
  uint64_t v17 = type metadata accessor for AssetManagerReferenceService();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v16;
  uint64_t v39 = v17;
  uint64_t v40 = sub_1BFD9CA80(&qword_1EB8684B8, (void (*)(uint64_t))type metadata accessor for AssetManagerReferenceService);
  *(void *)&long long v38 = v18;
  sub_1C15186BC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFC39268(0, (unint64_t *)&unk_1EB87A250);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v19 = result;
  uint64_t v20 = type metadata accessor for SubscriptionReferenceService();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v19;
  uint64_t v39 = v20;
  uint64_t v40 = sub_1BFD9CA80(&qword_1EB85C0A8, (void (*)(uint64_t))type metadata accessor for SubscriptionReferenceService);
  *(void *)&long long v38 = v21;
  sub_1C15186BC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A130);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v22 = result;
  uint64_t v23 = type metadata accessor for CloudContextReferenceService();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v22;
  uint64_t v39 = v23;
  uint64_t v40 = sub_1BFD9CA80(&qword_1EB85BFD8, (void (*)(uint64_t))type metadata accessor for CloudContextReferenceService);
  *(void *)&long long v38 = v24;
  sub_1C15186BC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFCB6824(0, &qword_1EB894738);
  uint64_t result = sub_1C151819C();
  if (!v39)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v25 = type metadata accessor for FeedWeatherReferenceService();
  uint64_t v26 = swift_allocObject();
  sub_1BFC773DC(&v38, v26 + 16);
  uint64_t v39 = v25;
  uint64_t v40 = sub_1BFD9CA80(&qword_1EB85B2D0, (void (*)(uint64_t))type metadata accessor for FeedWeatherReferenceService);
  *(void *)&long long v38 = v26;
  sub_1C15186BC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87B080);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v27 = result;
  uint64_t v28 = type metadata accessor for UserInfoReferenceService();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v27;
  uint64_t v39 = v28;
  uint64_t v40 = sub_1BFD9CA80(&qword_1EB867820, (void (*)(uint64_t))type metadata accessor for UserInfoReferenceService);
  *(void *)&long long v38 = v29;
  sub_1C15186BC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFCB6824(0, &qword_1EB8971B0);
  uint64_t result = sub_1C151819C();
  if (!v39)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v30 = type metadata accessor for PuzzleReferenceService();
  uint64_t v31 = swift_allocObject();
  sub_1BFC773DC(&v38, v31 + 16);
  uint64_t v39 = v30;
  uint64_t v40 = sub_1BFD9CA80(&qword_1EB867268, (void (*)(uint64_t))type metadata accessor for PuzzleReferenceService);
  *(void *)&long long v38 = v31;
  sub_1C15186BC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t result = sub_1C151819C();
  if (!v39)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v32 = type metadata accessor for PuzzleTypeReferenceService();
  uint64_t v33 = swift_allocObject();
  sub_1BFC773DC(&v38, v33 + 16);
  uint64_t v39 = v32;
  uint64_t v40 = sub_1BFD9CA80((unint64_t *)&unk_1EB867F90, (void (*)(uint64_t))type metadata accessor for PuzzleTypeReferenceService);
  *(void *)&long long v38 = v33;
  sub_1C15186BC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFCB6824(0, &qword_1EB884980);
  uint64_t result = sub_1C151819C();
  if (!v39)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB895310);
  uint64_t result = sub_1C151819C();
  if (v37)
  {
    uint64_t v34 = type metadata accessor for FeedSponsorshipAdReferenceService();
    uint64_t v35 = swift_allocObject();
    sub_1BFC773DC(&v38, v35 + 16);
    sub_1BFC773DC(&v36, v35 + 56);
    uint64_t v39 = v34;
    uint64_t v40 = sub_1BFD9CA80(&qword_1EB862CF8, (void (*)(uint64_t))type metadata accessor for FeedSponsorshipAdReferenceService);
    *(void *)&long long v38 = v35;
    sub_1C15186BC();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C1101EE8()
{
  type metadata accessor for NetworkEventHandler();
  sub_1C1518AFC();
  return swift_release();
}

uint64_t sub_1C1101F58(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFC39268(0, &qword_1EB884C28);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v2 = result;
    type metadata accessor for NetworkEventHandler();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v2;
    *(_DWORD *)(result + 24) = 24;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1101FE0()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C1102018@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1100344(*(void **)(v1 + 16), a1);
}

uint64_t sub_1C1102020()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1C1102058()
{
  return sub_1C11002D4((void *)(v0 + 16));
}

uint64_t sub_1C1102060()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C1102098@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C0D6459C(*(uint64_t (**)(void))(v1 + 16), a1);
}

void sub_1C11020A0(uint64_t a1)
{
}

void static FormatCodingHeaderSupplementaryKindStrategy.defaultValue.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t static FormatCodingHeaderSupplementaryKindStrategy.shouldEncode(wrappedValue:)(unsigned char *a1)
{
  if (*a1)
  {
    char v1 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    char v2 = v1 ^ 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  return v2 & 1;
}

unint64_t sub_1C110214C(uint64_t a1)
{
  unint64_t result = sub_1C1102174();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1102174()
{
  unint64_t result = qword_1EA1AB790;
  if (!qword_1EA1AB790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB790);
  }
  return result;
}

uint64_t sub_1C11021D0(unsigned char *a1)
{
  if (*a1)
  {
    char v1 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    char v2 = v1 ^ 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  return v2 & 1;
}

ValueMetadata *type metadata accessor for FormatCodingHeaderSupplementaryKindStrategy()
{
  return &type metadata for FormatCodingHeaderSupplementaryKindStrategy;
}

uint64_t FeedGroupConfigSidecar.subtype.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedGroupConfigSidecar.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedGroupConfigSidecar() + 20);
  return sub_1C0348588(v3, a1);
}

uint64_t FeedGroupConfigSidecar.init(subtype:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (uint64_t)a4 + *(int *)(type metadata accessor for FeedGroupConfigSidecar() + 20);
  return sub_1C0BABFB0(a3, v5);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedGroupConfigSidecar(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v36 = *a2;
    *a1 = *a2;
    uint64_t v37 = v36 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *uint64_t v7 = *(uint64_t *)((char *)a2 + v6);
    v7[1] = v9;
    uint64_t v10 = (int *)type metadata accessor for FormatContent(0);
    uint64_t v11 = v10[5];
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = &v8[v11];
    uint64_t v14 = sub_1C151631C();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    uint64_t v16 = v10[6];
    uint64_t v17 = (void *)((char *)v7 + v16);
    uint64_t v18 = &v8[v16];
    uint64_t v40 = *((void *)v18 + 1);
    *uint64_t v17 = *(void *)v18;
    v17[1] = v40;
    uint64_t v19 = v10[7];
    uint64_t v20 = (void *)((char *)v7 + v19);
    uint64_t v21 = &v8[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *uint64_t v20 = *(void *)v21;
    v20[1] = v22;
    uint64_t v23 = v10[8];
    uint64_t v24 = (void *)((char *)v7 + v23);
    uint64_t v25 = &v8[v23];
    uint64_t v26 = *((void *)v25 + 1);
    *uint64_t v24 = *(void *)v25;
    v24[1] = v26;
    uint64_t v27 = v10[9];
    uint64_t v28 = (void *)((char *)v7 + v27);
    uint64_t v29 = &v8[v27];
    uint64_t v30 = *((void *)v29 + 1);
    void *v28 = *(void *)v29;
    v28[1] = v30;
    uint64_t v31 = v10[10];
    __dst = (char *)v7 + v31;
    uint64_t v32 = &v8[v31];
    uint64_t v33 = sub_1C151D6DC();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39(v32, 1, v33))
    {
      sub_1BFEE3854(0);
      memcpy(__dst, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v32, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
    }
    *(void *)((char *)v7 + v10[11]) = *(void *)&v8[v10[11]];
    *(void *)((char *)v7 + v10[12]) = *(void *)&v8[v10[12]];
    *(void *)((char *)v7 + v10[13]) = *(void *)&v8[v10[13]];
    *(void *)((char *)v7 + v10[14]) = *(void *)&v8[v10[14]];
    *(void *)((char *)v7 + v10[15]) = *(void *)&v8[v10[15]];
    *(void *)((char *)v7 + v10[16]) = *(void *)&v8[v10[16]];
    *(void *)((char *)v7 + v10[17]) = *(void *)&v8[v10[17]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  return (uint64_t *)v37;
}

uint64_t destroy for FeedGroupConfigSidecar(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for FormatContent(0);
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v7 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v4 + *(int *)(v5 + 40);
  uint64_t v9 = sub_1C151D6DC();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FeedGroupConfigSidecar(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = *(void *)((char *)a2 + v4 + 8);
  *uint64_t v5 = *(void *)((char *)a2 + v4);
  v5[1] = v7;
  uint64_t v8 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v9 = v8[5];
  uint64_t v10 = (char *)v5 + v9;
  uint64_t v11 = &v6[v9];
  uint64_t v12 = sub_1C151631C();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  uint64_t v14 = v8[6];
  uint64_t v15 = (void *)((char *)v5 + v14);
  uint64_t v16 = &v6[v14];
  uint64_t v36 = *((void *)v16 + 1);
  *uint64_t v15 = *(void *)v16;
  v15[1] = v36;
  uint64_t v17 = v8[7];
  uint64_t v18 = (void *)((char *)v5 + v17);
  uint64_t v19 = &v6[v17];
  uint64_t v20 = *((void *)v19 + 1);
  *uint64_t v18 = *(void *)v19;
  v18[1] = v20;
  uint64_t v21 = v8[8];
  uint64_t v22 = (void *)((char *)v5 + v21);
  uint64_t v23 = &v6[v21];
  uint64_t v24 = *((void *)v23 + 1);
  *uint64_t v22 = *(void *)v23;
  v22[1] = v24;
  uint64_t v25 = v8[9];
  uint64_t v26 = (void *)((char *)v5 + v25);
  uint64_t v27 = &v6[v25];
  uint64_t v28 = *((void *)v27 + 1);
  *uint64_t v26 = *(void *)v27;
  v26[1] = v28;
  uint64_t v29 = v8[10];
  __dst = (char *)v5 + v29;
  uint64_t v30 = &v6[v29];
  uint64_t v31 = sub_1C151D6DC();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35(v30, 1, v31))
  {
    sub_1BFEE3854(0);
    memcpy(__dst, v30, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(__dst, v30, v31);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
  }
  *(void *)((char *)v5 + v8[11]) = *(void *)&v6[v8[11]];
  *(void *)((char *)v5 + v8[12]) = *(void *)&v6[v8[12]];
  *(void *)((char *)v5 + v8[13]) = *(void *)&v6[v8[13]];
  *(void *)((char *)v5 + v8[14]) = *(void *)&v6[v8[14]];
  *(void *)((char *)v5 + v8[15]) = *(void *)&v6[v8[15]];
  *(void *)((char *)v5 + v8[16]) = *(void *)&v6[v8[16]];
  *(void *)((char *)v5 + v8[17]) = *(void *)&v6[v8[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FeedGroupConfigSidecar(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v36 = a1;
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  *uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[1] = *(void *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = (void *)((char *)v7 + v14);
  uint64_t v16 = &v8[v14];
  *uint64_t v15 = *(void *)v16;
  v15[1] = *((void *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v9[7];
  uint64_t v18 = (void *)((char *)v7 + v17);
  uint64_t v19 = &v8[v17];
  *uint64_t v18 = *(void *)v19;
  v18[1] = *((void *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = v9[8];
  uint64_t v21 = (void *)((char *)v7 + v20);
  uint64_t v22 = &v8[v20];
  *uint64_t v21 = *(void *)v22;
  v21[1] = *((void *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = v9[9];
  uint64_t v24 = (void *)((char *)v7 + v23);
  uint64_t v25 = &v8[v23];
  *uint64_t v24 = *(void *)v25;
  v24[1] = *((void *)v25 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = v9[10];
  uint64_t v27 = (char *)v7 + v26;
  uint64_t v28 = &v8[v26];
  uint64_t v29 = sub_1C151D6DC();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  int v32 = v31(v27, 1, v29);
  int v33 = v31(v28, 1, v29);
  if (!v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v27, v28, v29);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
    goto LABEL_6;
  }
  if (v33)
  {
LABEL_6:
    sub_1BFEE3854(0);
    memcpy(v27, v28, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
LABEL_7:
  *(void *)((char *)v7 + v9[11]) = *(void *)&v8[v9[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v9[12]) = *(void *)&v8[v9[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v9[13]) = *(void *)&v8[v9[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v9[14]) = *(void *)&v8[v9[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v9[15]) = *(void *)&v8[v9[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v9[16]) = *(void *)&v8[v9[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v9[17]) = *(void *)&v8[v9[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v36;
}

_OWORD *initializeWithTake for FeedGroupConfigSidecar(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  *(_OWORD *)((char *)a1 + v4) = *(_OWORD *)((char *)a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = &v5[v8];
  uint64_t v10 = &v6[v8];
  uint64_t v11 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(_OWORD *)&v5[v7[6]] = *(_OWORD *)&v6[v7[6]];
  *(_OWORD *)&v5[v7[7]] = *(_OWORD *)&v6[v7[7]];
  *(_OWORD *)&v5[v7[8]] = *(_OWORD *)&v6[v7[8]];
  *(_OWORD *)&v5[v7[9]] = *(_OWORD *)&v6[v7[9]];
  uint64_t v12 = v7[10];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  uint64_t v15 = sub_1C151D6DC();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1BFEE3854(0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(void *)&v5[v7[11]] = *(void *)&v6[v7[11]];
  *(void *)&v5[v7[12]] = *(void *)&v6[v7[12]];
  *(void *)&v5[v7[13]] = *(void *)&v6[v7[13]];
  *(void *)&v5[v7[14]] = *(void *)&v6[v7[14]];
  *(void *)&v5[v7[15]] = *(void *)&v6[v7[15]];
  *(void *)&v5[v7[16]] = *(void *)&v6[v7[16]];
  *(void *)&v5[v7[17]] = *(void *)&v6[v7[17]];
  return a1;
}

void *assignWithTake for FeedGroupConfigSidecar(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v46 = a1;
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
  void *v8 = *(void *)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = v11[6];
  uint64_t v17 = (void *)((char *)v8 + v16);
  uint64_t v18 = &v9[v16];
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = v11[7];
  uint64_t v22 = (void *)((char *)v8 + v21);
  uint64_t v23 = &v9[v21];
  uint64_t v25 = *(void *)v23;
  uint64_t v24 = *((void *)v23 + 1);
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = v11[8];
  uint64_t v27 = (void *)((char *)v8 + v26);
  uint64_t v28 = &v9[v26];
  uint64_t v30 = *(void *)v28;
  uint64_t v29 = *((void *)v28 + 1);
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = v11[9];
  int v32 = (void *)((char *)v8 + v31);
  int v33 = &v9[v31];
  uint64_t v35 = *(void *)v33;
  uint64_t v34 = *((void *)v33 + 1);
  void *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = v11[10];
  uint64_t v37 = (char *)v8 + v36;
  long long v38 = &v9[v36];
  uint64_t v39 = sub_1C151D6DC();
  uint64_t v40 = *(void *)(v39 - 8);
  long long v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
  int v42 = v41(v37, 1, v39);
  int v43 = v41(v38, 1, v39);
  if (!v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 40))(v37, v38, v39);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v37, v39);
    goto LABEL_6;
  }
  if (v43)
  {
LABEL_6:
    sub_1BFEE3854(0);
    memcpy(v37, v38, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
LABEL_7:
  *(void *)((char *)v8 + v11[11]) = *(void *)&v9[v11[11]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v8 + v11[12]) = *(void *)&v9[v11[12]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v8 + v11[13]) = *(void *)&v9[v11[13]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v8 + v11[14]) = *(void *)&v9[v11[14]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v8 + v11[15]) = *(void *)&v9[v11[15]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v8 + v11[16]) = *(void *)&v9[v11[16]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v8 + v11[17]) = *(void *)&v9[v11[17]];
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t sub_1C1103320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FormatContent(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C11033D0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FormatContent(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t dispatch thunk of FeedGroupConfigSidecarConvertible.sidecar.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1C1103564@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v5 = (void *)v2[1];
  uint64_t v46 = *(void *)(a1 + 16);
  if (v46)
  {
    uint64_t v44 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    uint64_t v45 = a1;
    while (1)
    {
      unint64_t v8 = *(void *)(a1 + 8 * v6 + 32);
      uint64_t v47 = v6 + 1;
      sub_1C1243530(v8, &v51);
      uint64_t v10 = v51;
      uint64_t v9 = v52;
      uint64_t v11 = v54;
      uint64_t v12 = v55;
      uint64_t v13 = v56;
      unint64_t v14 = v57;
      uint64_t v49 = v54;
      uint64_t v15 = v53;
      if (v57 >> 59 == 16)
      {
        uint64_t v48 = v53;
      }
      else
      {
        uint64_t v48 = *(void *)(v51 + 32);
        uint64_t v11 = *(void *)(v51 + 40);
      }
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF94FE4(v10, v9, v15, v49, v12, v13, v14);
      if (v5[2])
      {
        unint64_t v16 = sub_1BFEF2D8C(v48, v11);
        uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
        if (v18)
        {
          uint64_t v17 = *(void **)(v5[7] + 8 * v16);
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRelease();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v17 = sub_1BFF9514C(0, v17[2] + 1, 1, v17);
      }
      unint64_t v20 = v17[2];
      unint64_t v19 = v17[3];
      if (v20 >= v19 >> 1) {
        uint64_t v17 = sub_1BFF9514C((void *)(v19 > 1), v20 + 1, 1, v17);
      }
      v17[2] = v20 + 1;
      v17[v20 + 4] = v8;
      sub_1C1243530(v8, &v51);
      uint64_t v21 = v51;
      uint64_t v22 = v52;
      uint64_t v23 = v53;
      uint64_t v24 = v54;
      uint64_t v26 = v55;
      uint64_t v25 = v56;
      unint64_t v27 = v57;
      uint64_t v50 = v53;
      uint64_t v28 = v54;
      if (v57 >> 59 != 16)
      {
        uint64_t v23 = *(void *)(v51 + 32);
        uint64_t v24 = *(void *)(v51 + 40);
      }
      swift_bridgeObjectRetain();
      sub_1BFF94FE4(v21, v22, v50, v28, v26, v25, v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v31 = sub_1BFEF2D8C(v23, v24);
      uint64_t v32 = v5[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33))
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        sub_1C1520CFC();
        __break(1u);
        JUMPOUT(0x1C110392CLL);
      }
      char v35 = v30;
      if (v5[3] >= v34)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if ((v30 & 1) == 0) {
            goto LABEL_24;
          }
        }
        else
        {
          sub_1C106B690();
          if ((v35 & 1) == 0) {
            goto LABEL_24;
          }
        }
      }
      else
      {
        sub_1BFF956C8(v34, isUniquelyReferenced_nonNull_native);
        unint64_t v36 = sub_1BFEF2D8C(v23, v24);
        if ((v35 & 1) != (v37 & 1)) {
          goto LABEL_37;
        }
        unint64_t v31 = v36;
        if ((v35 & 1) == 0)
        {
LABEL_24:
          v5[(v31 >> 6) + 8] |= 1 << v31;
          long long v38 = (uint64_t *)(v5[6] + 16 * v31);
          uint64_t *v38 = v23;
          v38[1] = v24;
          *(void *)(v5[7] + 8 * v31) = v17;
          uint64_t v39 = v5[2];
          BOOL v40 = __OFADD__(v39, 1);
          uint64_t v41 = v39 + 1;
          if (v40) {
            goto LABEL_36;
          }
          v5[2] = v41;
          swift_bridgeObjectRetain();
          goto LABEL_4;
        }
      }
      uint64_t v7 = v5[7];
      swift_bridgeObjectRelease();
      *(void *)(v7 + 8 * v31) = v17;
LABEL_4:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v47;
      a1 = v45;
      if (v46 == v47)
      {
        swift_bridgeObjectRelease();
        *a2 = v44;
        a2[1] = v5;
        goto LABEL_32;
      }
    }
  }
  *a2 = v4;
  a2[1] = v5;
  swift_bridgeObjectRetain();
LABEL_32:
  return swift_bridgeObjectRetain();
}

uint64_t FormatNodeStyleCollection.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BFCFCDCC();
  sub_1BFCFCE5C(&qword_1EB85C3B0, &qword_1EB85B6C0);
  sub_1C1520B2C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

BOOL FormatNodeStyleCollection.isEmpty.getter()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

NewsFeed::FormatNodeStyleCollection __swiftcall FormatNodeStyleCollection.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v3 = (void *)sub_1C018CFE4(MEMORY[0x1E4FBC860]);
  *uint64_t v1 = v2;
  v1[1] = v3;
  result.styleSourcesByClass._rawValue = v4;
  result.styles._rawValue = v3;
  return result;
}

unint64_t sub_1C1103AEC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  unint64_t result = sub_1C018CFE4(MEMORY[0x1E4FBC860]);
  *a1 = v2;
  a1[1] = result;
  return result;
}

__n128 sub_1C1103B20(unint64_t *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v7[4] = *(_OWORD *)(a2 + 64);
  v7[5] = v3;
  uint64_t v8 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  void v7[2] = *(_OWORD *)(a2 + 32);
  v7[3] = v5;
  sub_1BFF77B8C(a1, (uint64_t)v7, *v2);
  return result;
}

ValueMetadata *type metadata accessor for FormatNodeStyleCollection()
{
  return &type metadata for FormatNodeStyleCollection;
}

uint64_t sub_1C1103B78()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for FeedLayoutDirection()
{
  return &type metadata for FeedLayoutDirection;
}

uint64_t LayeredMediaViewModel.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LayeredMediaViewModel.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LayeredMediaViewModel()
{
  return self;
}

uint64_t method lookup function for LayeredMediaViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LayeredMediaViewModel);
}

uint64_t _s8NewsFeed15FormatMenuImageO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  if ((v4 & 0x2000000000000000) != 0)
  {
    if ((v7 & 0x2000000000000000) != 0)
    {
      uint64_t v11 = *a2;
      uint64_t v12 = v3;
      sub_1C0007EEC(v6, v5, v7);
      sub_1C0007EEC(v3, v2, v4);
      sub_1C0007EEC(v3, v2, v4);
      sub_1C0007EEC(v6, v5, v7);
      char v8 = static FormatSyncImageContent.== infix(_:_:)(&v12, (unint64_t *)&v11);
      goto LABEL_7;
    }
  }
  else if ((v7 & 0x2000000000000000) == 0)
  {
    sub_1C0007EEC(*a2, a2[1], v7);
    sub_1C0007EEC(v3, v2, v4);
    sub_1C0007EEC(v3, v2, v4);
    sub_1C0007EEC(v6, v5, v7);
    char v8 = sub_1C125C908(v3, v2, v4, v6, v5, v7);
LABEL_7:
    char v9 = v8;
    sub_1C0007E9C(v3, v2, v4);
    sub_1C0007E9C(v6, v5, v7);
    sub_1C0007E9C(v6, v5, v7);
    sub_1C0007E9C(v3, v2, v4);
    return v9 & 1;
  }
  sub_1C0007EEC(*a1, v2, v4);
  sub_1C0007EEC(v6, v5, v7);
  sub_1C0007E9C(v3, v2, v4);
  sub_1C0007E9C(v6, v5, v7);
  char v9 = 0;
  return v9 & 1;
}

unint64_t sub_1C1103E20(uint64_t a1)
{
  unint64_t result = sub_1C1103E48();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1103E48()
{
  unint64_t result = qword_1EA1AB798;
  if (!qword_1EA1AB798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB798);
  }
  return result;
}

unint64_t sub_1C1103E9C(void *a1)
{
  a1[1] = sub_1BFC9B1BC();
  a1[2] = sub_1BFFEF5C0();
  unint64_t result = sub_1C1103ED4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C1103ED4()
{
  unint64_t result = qword_1EA1AB7A0;
  if (!qword_1EA1AB7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB7A0);
  }
  return result;
}

uint64_t destroy for FormatMenuImage(uint64_t *a1)
{
  return sub_1C0007E9C(*a1, a1[1], a1[2]);
}

uint64_t *_s8NewsFeed15FormatMenuImageOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  sub_1C0007EEC(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for FormatMenuImage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  sub_1C0007EEC(*a2, v4, v5);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_1C0007E9C(v6, v7, v8);
  return a1;
}

uint64_t *assignWithTake for FormatMenuImage(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v5 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_1C0007E9C(v4, v6, v5);
  return a1;
}

uint64_t sub_1C1104024(uint64_t a1)
{
  return (*(void *)(a1 + 16) >> 61) & 1;
}

uint64_t sub_1C1104030(uint64_t result)
{
  *(void *)(result + 16) &= ~0x2000000000000000uLL;
  return result;
}

void *sub_1C1104040(void *result, char a2)
{
  unint64_t v2 = result[2] & 0xCFFFFFFFFFFFFFF8 | ((unint64_t)(a2 & 1) << 61);
  *result &= 0xCFFFFFFFFFFFFFF8;
  result[2] = v2;
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuImage()
{
  return &type metadata for FormatMenuImage;
}

id SharingPuzzleTypeURLActivityItemSource.__allocating_init(puzzleType:linkPresentationSource:)(void *a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  id v6 = sub_1C1104808(a1, a2);
  swift_unknownObjectRelease();
  swift_release();
  return v6;
}

id SharingPuzzleTypeURLActivityItemSource.init(puzzleType:linkPresentationSource:)(void *a1, uint64_t a2)
{
  id v2 = sub_1C1104808(a1, a2);
  swift_unknownObjectRelease();
  swift_release();
  return v2;
}

id SharingPuzzleTypeURLActivityItemSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SharingPuzzleTypeURLActivityItemSource.init()()
{
}

id SharingPuzzleTypeURLActivityItemSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_OWORD *SharingPuzzleTypeURLActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(uint64_t a1@<X8>)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0025B10(v1 + OBJC_IVAR____TtC8NewsFeed38SharingPuzzleTypeURLActivityItemSource_puzzleTypeURL, (uint64_t)v5);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    unint64_t result = (_OWORD *)sub_1C002F608((uint64_t)v5);
    *(void *)(a1 + 24) = MEMORY[0x1E4FBB1A0];
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0xE000000000000000;
  }
  else
  {
    uint64_t v11 = v6;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v10);
    (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_0, v5, v6);
    return sub_1BFF993A8(v10, (_OWORD *)a1);
  }
  return result;
}

uint64_t SharingPuzzleTypeURLActivityItemSource.activityViewController(_:itemForActivityType:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v8 = sub_1C151E62C();
    uint64_t v10 = v9;
    if (v8 == sub_1C151E62C() && v10 == v11)
    {
      uint64_t result = swift_bridgeObjectRelease_n();
      goto LABEL_10;
    }
    char v13 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v13)
    {
LABEL_10:
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return result;
    }
  }
  sub_1C0025B10(v2 + OBJC_IVAR____TtC8NewsFeed38SharingPuzzleTypeURLActivityItemSource_puzzleTypeURL, (uint64_t)v7);
  uint64_t v15 = sub_1C1515FDC();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v7, 1, v15) == 1)
  {
    uint64_t result = sub_1C002F608((uint64_t)v7);
    goto LABEL_10;
  }
  *(void *)(a2 + 24) = v15;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v16 + 32))(boxed_opaque_existential_0, v7, v15);
}

LPLinkMetadata_optional __swiftcall SharingPuzzleTypeURLActivityItemSource.activityViewControllerLinkMetadata(_:)(UIActivityViewController *a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed38SharingPuzzleTypeURLActivityItemSource_linkPresentationSource))
  {
    sub_1C1518CEC();
    uint64_t v2 = (objc_class *)objc_msgSend(v5, sel_linkMetadata);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v4 = v2;
  result.value.super.isa = v4;
  result.is_nil = v3;
  return result;
}

id sub_1C1104808(void *a1, uint64_t a2)
{
  Swift::Bool v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v3;
  id v11 = objc_msgSend(a1, sel_identifier);
  if (!v11)
  {
    sub_1C151E62C();
    id v11 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v12 = objc_msgSend(self, sel_nss_NewsURLForPuzzleTypeID_, v11);

  if (v12)
  {
    sub_1C1515F1C();

    uint64_t v13 = sub_1C1515FDC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 0, 1, v13);
  }
  else
  {
    uint64_t v14 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  }
  sub_1C002F694((uint64_t)v9, (uint64_t)&v10[OBJC_IVAR____TtC8NewsFeed38SharingPuzzleTypeURLActivityItemSource_puzzleTypeURL]);
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed38SharingPuzzleTypeURLActivityItemSource_linkPresentationSource] = a2;
  swift_retain();

  v16.receiver = v10;
  v16.super_class = ObjectType;
  return objc_msgSendSuper2(&v16, sel_init);
}

uint64_t sub_1C11049CC()
{
  return type metadata accessor for SharingPuzzleTypeURLActivityItemSource();
}

uint64_t type metadata accessor for SharingPuzzleTypeURLActivityItemSource()
{
  uint64_t result = qword_1EA1AB7C0;
  if (!qword_1EA1AB7C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C1104A20()
{
  sub_1BFF00BEC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for SharingPuzzleTypeURLActivityItemSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingPuzzleTypeURLActivityItemSource);
}

uint64_t dispatch thunk of SharingPuzzleTypeURLActivityItemSource.__allocating_init(puzzleType:linkPresentationSource:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C1104AE4()
{
  uint64_t v1 = type metadata accessor for FormatOption();
  uint64_t v169 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  v201 = (uint64_t *)((char *)&v166 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v3);
  uint64_t v200 = (uint64_t)&v166 - v4;
  sub_1C0181BEC(0);
  uint64_t v184 = v5;
  uint64_t v207 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v166 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v166 - v9);
  uint64_t v11 = type metadata accessor for FeedWebEmbed();
  uint64_t v179 = *(void *)(v11 - 8);
  uint64_t v180 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v168 = (uint64_t)&v166 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FeedWeather(0);
  uint64_t v175 = *(void *)(v13 - 8);
  uint64_t v176 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v167 = (uint64_t)&v166 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FeedHeadline(0);
  uint64_t v171 = *(void *)(v15 - 8);
  uint64_t v172 = v15;
  MEMORY[0x1F4188790](v15);
  v166 = (void **)((char *)&v166 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C01F08F0(0);
  MEMORY[0x1F4188790](v17 - 8);
  unint64_t v19 = (char *)&v166 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v195 = (uint64_t)&v166 - v21;
  sub_1C01F0924(0);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v174 = (uint64_t)&v166 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v166 - v25;
  sub_1BFFFCF8C(0);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v170 = (uint64_t)&v166 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v194 = (uint64_t)&v166 - v30;
  swift_retain();
  sub_1C0D33E3C((uint64_t)v231, 0.0, 0.0, 22.0, 22.0);
  swift_release();
  v197 = v0;
  uint64_t v31 = v0[8];
  uint64_t v32 = *(void *)(v31 + 16);
  v183 = v7;
  v177 = v19;
  if (v32 && (unint64_t v33 = sub_1BFEF2D8C(0x6974704F64656546, 0xEE007473694C6E6FLL), (v34 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(v31 + 56) + 40 * v33, (uint64_t)&v228);
  }
  else
  {
    uint64_t v230 = 0;
    long long v228 = 0u;
    long long v229 = 0u;
  }
  sub_1BFEE7E48(0, (unint64_t *)&qword_1EB872210, (unint64_t *)&qword_1EB872200, (uint64_t)&protocol descriptor for FeedGroupItemType, MEMORY[0x1E4FBB718]);
  int v35 = swift_dynamicCast();
  if (v35) {
    uint64_t v36 = *((void *)&v224 + 1);
  }
  else {
    uint64_t v36 = 0;
  }
  if (v35) {
    uint64_t v37 = v224;
  }
  else {
    uint64_t v37 = 0;
  }
  uint64_t v38 = v197[8];
  if (*(void *)(v38 + 16) && (unint64_t v39 = sub_1BFEF2D8C(0x756F724764656546, 0xEC00000067615470), (v40 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(v38 + 56) + 40 * v39, (uint64_t)&v228);
  }
  else
  {
    uint64_t v230 = 0;
    long long v228 = 0u;
    long long v229 = 0u;
  }
  int v41 = swift_dynamicCast();
  int v43 = (void *)*((void *)&v224 + 1);
  uint64_t v42 = v224;
  int v44 = v225;
  if (!v41) {
    int v44 = 0;
  }
  int v190 = v44;
  if (!v41) {
    int v43 = 0;
  }
  v189 = v43;
  if (!v41) {
    uint64_t v42 = 0;
  }
  v192 = (void *)v42;
  uint64_t v45 = v197[8];
  if (*(void *)(v45 + 16) && (unint64_t v46 = sub_1BFEF2D8C(0x7573734964656546, 0xE900000000000065), (v47 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(v45 + 56) + 40 * v46, (uint64_t)v226);
  }
  else
  {
    uint64_t v227 = 0;
    memset(v226, 0, sizeof(v226));
  }
  if (swift_dynamicCast())
  {
    nullsub_1();
  }
  else
  {
    sub_1C01B3C58(&v224);
    sub_1C1107B84((uint64_t)&v224, (uint64_t)&v228, (uint64_t (*)(void))sub_1C0181CE0);
  }
  sub_1C1107B84((uint64_t)&v228, (uint64_t)&v224, (uint64_t (*)(void))sub_1C0181CE0);
  uint64_t v48 = v197;
  sub_1C1106ACC((uint64_t)v197, 0x6461654864656546, 0xEC000000656E696CLL, type metadata accessor for FeedHeadline, v194);
  sub_1C1106ACC((uint64_t)v48, 0x7461655764656546, 0xEB00000000726568, type metadata accessor for FeedWeather, (uint64_t)v26);
  sub_1C1106ACC((uint64_t)v48, 0x4562655764656546, 0xEC0000006465626DLL, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed, v195);
  uint64_t v49 = v48[8];
  uint64_t v50 = *(void *)(v49 + 16);
  v202 = v10;
  v193 = v26;
  if (v50 && (unint64_t v51 = sub_1BFEF2D8C(0x6373654464656546, 0xEE00726F74706972), (v52 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(v49 + 56) + 40 * v51, (uint64_t)&v216);
  }
  else
  {
    *(void *)&long long v218 = 0;
    long long v216 = 0u;
    long long v217 = 0u;
  }
  if (swift_dynamicCast()) {
    uint64_t v53 = (void *)v208;
  }
  else {
    uint64_t v53 = 0;
  }
  uint64_t v54 = v197[8];
  if (*(void *)(v54 + 16) && (unint64_t v55 = sub_1BFEF2D8C(0x726F705364656546, 0xEF746E6576457374), (v56 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(v54 + 56) + 40 * v55, (uint64_t)&v216);
  }
  else
  {
    *(void *)&long long v218 = 0;
    long long v216 = 0u;
    long long v217 = 0u;
  }
  if (swift_dynamicCast())
  {
    uint64_t v57 = *((void *)&v208 + 1);
    uint64_t v186 = v208;
    long long v187 = v209;
    int v188 = v210;
  }
  else
  {
    int v188 = 0;
    long long v187 = 0uLL;
    uint64_t v57 = 0;
    uint64_t v186 = 0;
  }
  uint64_t v191 = v57;
  if (v37)
  {
    swift_bridgeObjectRetain();
    uint64_t v58 = swift_bridgeObjectRetain();
    sub_1BFDB3960(v58);
  }
  else
  {
    uint64_t v37 = MEMORY[0x1E4FBC860];
    uint64_t v36 = MEMORY[0x1E4FBC860];
  }
  *(void *)&long long v216 = v37;
  sub_1BFF5DA4C(0, (unint64_t *)&unk_1EB879D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBB320]);
  sub_1C0B3ADC0();
  uint64_t v59 = sub_1C151E92C();
  uint64_t v173 = 0;
  swift_bridgeObjectRelease();
  *(void *)&long long v216 = v36;
  sub_1BFEDB748(v59);
  v185 = (void *)v216;
  sub_1C01B2D70();
  uint64_t v181 = swift_allocObject();
  *(_OWORD *)(v181 + 16) = xmmword_1C1527210;
  sub_1BFF5DA4C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
  unint64_t v60 = (*(unsigned __int8 *)(v207 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v207 + 80);
  uint64_t v207 = *(void *)(v207 + 72);
  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_1C15341B0;
  uint64_t v178 = v61;
  unint64_t v203 = v60;
  long long v62 = (void *)(v61 + v60);
  sub_1BFEE7E48(0, (unint64_t *)&qword_1EA1974C0, (unint64_t *)&qword_1EA1974E0, (uint64_t)&protocol descriptor for FormatInspectionGroupable, MEMORY[0x1E4FBBE00]);
  uint64_t v196 = v63;
  uint64_t v64 = swift_allocObject();
  long long v199 = xmmword_1C1529AE0;
  *(_OWORD *)(v64 + 16) = xmmword_1C1529AE0;
  id v182 = v53;
  if (v53)
  {
    id v65 = v53;
    id v66 = FCFeedDescriptor.feedTag.getter();
    uint64_t v67 = sub_1C0CD6684((uint64_t)v231, v66);

    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v67 = sub_1C131B79C(MEMORY[0x1E4FBC860]);
  }
  long long v68 = v192;
  *(void *)(v64 + 56) = &type metadata for FormatInspection;
  *(void *)(v64 + 64) = &off_1F1C29D30;
  *(void *)(v64 + 32) = v67;
  uint64_t v69 = sub_1C0233FC8(v64);
  swift_setDeallocating();
  uint64_t v198 = sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v70 = sub_1C131B79C(v69);
  swift_bridgeObjectRelease();
  sub_1C042F458(1684366662, 0xE400000000000000, (uint64_t)v70, 0, 0, v62);
  uint64_t v71 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v72 = *(void *)(v71 - 8);
  v205 = *(void (**)(void *, void, uint64_t))(v72 + 56);
  uint64_t v206 = v71;
  uint64_t v204 = v72 + 56;
  v205(v62, 0, 1);
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = v199;
  if (v68)
  {
    uint64_t v74 = v189;
    sub_1C1107D48((uint64_t)v68, v189);
    uint64_t v75 = sub_1C0CD6684((uint64_t)v231, v68);
    sub_1C0E8C974((uint64_t)v68, v74);
  }
  else
  {
    uint64_t v75 = sub_1C131B79C(MEMORY[0x1E4FBC860]);
  }
  uint64_t v76 = (void *)((char *)v62 + v207);
  *(void *)(v73 + 56) = &type metadata for FormatInspection;
  *(void *)(v73 + 64) = &off_1F1C29D30;
  *(void *)(v73 + 32) = v75;
  uint64_t v77 = sub_1C0233FC8(v73);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  long long v78 = sub_1C131B79C(v77);
  swift_bridgeObjectRelease();
  sub_1C042F458(6775124, 0xE300000000000000, (uint64_t)v78, 0, 0, v76);
  ((void (*)(void *, void, uint64_t, uint64_t))v205)(v76, 0, 1, v206);
  uint64_t v79 = swift_allocObject();
  *(_OWORD *)(v79 + 16) = v199;
  sub_1C1107B84((uint64_t)&v224, (uint64_t)&v216, (uint64_t (*)(void))sub_1C0181CE0);
  if (sub_1C00A0A24((uint64_t *)&v216) == 1)
  {
    uint64_t v80 = (uint64_t)sub_1C131B79C(MEMORY[0x1E4FBC860]);
  }
  else
  {
    long long v214 = v222;
    v215[0] = v223[0];
    *(_OWORD *)((char *)v215 + 9) = *(_OWORD *)((char *)v223 + 9);
    long long v210 = v218;
    long long v211 = v219;
    long long v212 = v220;
    long long v213 = v221;
    long long v208 = v216;
    long long v209 = v217;
    sub_1C1107CDC((uint64_t)&v224, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1C0FC6CAC);
    uint64_t v80 = sub_1C0FE5F00((uint64_t)v231, &v208);
    sub_1C1107CDC((uint64_t)&v224, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1C01B3BB8);
  }
  uint64_t v81 = (void *)((char *)v62 + 2 * v207);
  *(void *)(v79 + 56) = &type metadata for FormatInspection;
  *(void *)(v79 + 64) = &off_1F1C29D30;
  *(void *)(v79 + 32) = v80;
  uint64_t v82 = sub_1C0233FC8(v79);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v83 = sub_1C131B79C(v82);
  swift_bridgeObjectRelease();
  sub_1C042F458(0x6575737349, 0xE500000000000000, (uint64_t)v83, 0, 0, v81);
  ((void (*)(void *, void, uint64_t, uint64_t))v205)(v81, 0, 1, v206);
  uint64_t v84 = swift_allocObject();
  *(_OWORD *)(v84 + 16) = v199;
  uint64_t v85 = v170;
  sub_1C1107DF4(v194, v170, (uint64_t (*)(void))sub_1BFFFCF8C);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v171 + 48))(v85, 1, v172) == 1)
  {
    sub_1BFF2413C(v85, (uint64_t (*)(void))sub_1BFFFCF8C);
    uint64_t v86 = (uint64_t)sub_1C131B79C(MEMORY[0x1E4FBC860]);
  }
  else
  {
    uint64_t v87 = v166;
    sub_1C1107B84(v85, (uint64_t)v166, type metadata accessor for FeedHeadline);
    uint64_t v86 = sub_1C00FF850(v231, v87);
    sub_1BFF2413C((uint64_t)v87, type metadata accessor for FeedHeadline);
  }
  uint64_t v88 = (void *)((char *)v62 + 3 * v207);
  *(void *)(v84 + 56) = &type metadata for FormatInspection;
  *(void *)(v84 + 64) = &off_1F1C29D30;
  *(void *)(v84 + 32) = v86;
  uint64_t v89 = sub_1C0233FC8(v84);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v90 = sub_1C131B79C(v89);
  swift_bridgeObjectRelease();
  sub_1C042F458(0x656E696C64616548, 0xE800000000000000, (uint64_t)v90, 0, 0, v88);
  ((void (*)(void *, void, uint64_t, uint64_t))v205)(v88, 0, 1, v206);
  uint64_t v91 = swift_allocObject();
  *(_OWORD *)(v91 + 16) = v199;
  uint64_t v92 = v191;
  if (v191)
  {
    uint64_t v93 = v186;
    *(void *)&long long v208 = v186;
    *((void *)&v208 + 1) = v191;
    long long v209 = v187;
    LOBYTE(v210) = v188 & 1;
    sub_1C1107C98(v186, v191);
    uint64_t v94 = sub_1C0DBCFA0((uint64_t)v231, &v208);
    sub_1C1107C54(v93, v92);
  }
  else
  {
    uint64_t v94 = sub_1C131B79C(MEMORY[0x1E4FBC860]);
  }
  uint64_t v95 = (void *)((char *)v62 + 4 * v207);
  *(void *)(v91 + 56) = &type metadata for FormatInspection;
  *(void *)(v91 + 64) = &off_1F1C29D30;
  *(void *)(v91 + 32) = v94;
  uint64_t v96 = sub_1C0233FC8(v91);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  long long v97 = sub_1C131B79C(v96);
  swift_bridgeObjectRelease();
  sub_1C042F458(0x45207374726F7053, 0xEC000000746E6576, (uint64_t)v97, 0, 0, v95);
  ((void (*)(void *, void, uint64_t, uint64_t))v205)(v95, 0, 1, v206);
  uint64_t v98 = swift_allocObject();
  *(_OWORD *)(v98 + 16) = v199;
  uint64_t v99 = v174;
  sub_1C1107DF4((uint64_t)v193, v174, (uint64_t (*)(void))sub_1C01F0924);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v175 + 48))(v99, 1, v176) == 1)
  {
    sub_1BFF2413C(v99, (uint64_t (*)(void))sub_1C01F0924);
    uint64_t v100 = sub_1C131B79C(MEMORY[0x1E4FBC860]);
  }
  else
  {
    uint64_t v101 = v167;
    sub_1C1107B84(v99, v167, type metadata accessor for FeedWeather);
    uint64_t v100 = sub_1C03A0BB4((uint64_t)v231, v101);
    sub_1BFF2413C(v101, type metadata accessor for FeedWeather);
  }
  uint64_t v102 = (void *)((char *)v62 + 5 * v207);
  *(void *)(v98 + 56) = &type metadata for FormatInspection;
  *(void *)(v98 + 64) = &off_1F1C29D30;
  *(void *)(v98 + 32) = v100;
  uint64_t v103 = sub_1C0233FC8(v98);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v104 = sub_1C131B79C(v103);
  swift_bridgeObjectRelease();
  sub_1C042F458(0x72656874616557, 0xE700000000000000, (uint64_t)v104, 0, 0, v102);
  ((void (*)(void *, void, uint64_t, uint64_t))v205)(v102, 0, 1, v206);
  uint64_t v105 = swift_allocObject();
  *(_OWORD *)(v105 + 16) = v199;
  uint64_t v106 = (uint64_t)v177;
  sub_1C1107DF4(v195, (uint64_t)v177, (uint64_t (*)(void))sub_1C01F08F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v179 + 48))(v106, 1, v180) == 1)
  {
    sub_1BFF2413C(v106, (uint64_t (*)(void))sub_1C01F08F0);
    v107 = sub_1C131B79C(MEMORY[0x1E4FBC860]);
  }
  else
  {
    uint64_t v108 = v168;
    sub_1C1107B84(v106, v168, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    v107 = sub_1C1034278(v231, v108);
    sub_1BFF2413C(v108, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  }
  uint64_t v109 = (void *)((char *)v62 + 6 * v207);
  *(void *)(v105 + 56) = &type metadata for FormatInspection;
  *(void *)(v105 + 64) = &off_1F1C29D30;
  *(void *)(v105 + 32) = v107;
  uint64_t v110 = sub_1C0233FC8(v105);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v111 = sub_1C131B79C(v110);
  swift_bridgeObjectRelease();
  sub_1C042F458(0x6465626D45626557, 0xE800000000000000, (uint64_t)v111, 0, 0, v109);
  ((void (*)(void *, void, uint64_t, uint64_t))v205)(v109, 0, 1, v206);
  uint64_t v112 = swift_allocObject();
  uint64_t v113 = (void *)v112;
  *(_OWORD *)(v112 + 16) = v199;
  uint64_t v114 = v185;
  int64_t v115 = v185[2];
  if (v115)
  {
    uint64_t v180 = v112 + 32;
    *(void *)&long long v208 = MEMORY[0x1E4FBC860];
    sub_1C05F62D0(0, v115, 0);
    uint64_t v116 = (uint64_t)v114
         + ((*(unsigned __int8 *)(v169 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v169 + 80));
    uint64_t v117 = *(void *)(v169 + 72);
    uint64_t v118 = v202;
    do
    {
      uint64_t v119 = v200;
      sub_1C1107DF4(v116, v200, (uint64_t (*)(void))type metadata accessor for FormatOption);
      v120 = v201;
      sub_1C1107DF4(v119, (uint64_t)v201, (uint64_t (*)(void))type metadata accessor for FormatOption);
      sub_1C0AF5D04(v120, v118);
      ((void (*)(uint64_t *, void, uint64_t, uint64_t))v205)(v118, 0, 1, v206);
      sub_1BFF2413C(v119, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v121 = v208;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F62D0(0, *(void *)(v121 + 16) + 1, 1);
        uint64_t v121 = v208;
      }
      unint64_t v123 = *(void *)(v121 + 16);
      unint64_t v122 = *(void *)(v121 + 24);
      if (v123 >= v122 >> 1)
      {
        sub_1C05F62D0(v122 > 1, v123 + 1, 1);
        uint64_t v121 = v208;
      }
      *(void *)(v121 + 16) = v123 + 1;
      uint64_t v124 = v121 + v203 + v123 * v207;
      uint64_t v118 = v202;
      sub_1C1107B84((uint64_t)v202, v124, (uint64_t (*)(void))sub_1C0181BEC);
      v116 += v117;
      --v115;
    }
    while (v115);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v121 = MEMORY[0x1E4FBC860];
  }
  uint64_t v125 = (void *)((char *)&v62[v207] - v207);
  sub_1C09BCFA4(0x736E6F6974704FLL, 0xE700000000000000, 0, 0, v121, v232);
  swift_bridgeObjectRelease();
  v113[7] = &type metadata for FormatInspectionGroup;
  v113[8] = &off_1F1BDEC90;
  uint64_t v126 = swift_allocObject();
  v113[4] = v126;
  long long v127 = v232[1];
  *(_OWORD *)(v126 + 16) = v232[0];
  *(_OWORD *)(v126 + 32) = v127;
  *(void *)(v126 + 48) = v233;
  uint64_t v128 = sub_1C0233FC8((uint64_t)v113);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v129 = sub_1C131B79C(v128);
  swift_bridgeObjectRelease();
  sub_1C042F458(0x736E6F6974704FLL, 0xE700000000000000, (uint64_t)v129, 0, 0, v125);
  ((void (*)(void *, void, uint64_t, uint64_t))v205)(v125, 0, 1, v206);
  uint64_t v130 = swift_allocObject();
  *(_OWORD *)(v130 + 16) = v199;
  uint64_t v131 = v197[4];
  uint64_t v132 = v197[5];
  __swift_project_boxed_opaque_existential_1(v197 + 1, v131);
  uint64_t v133 = (*(uint64_t (**)(uint64_t, uint64_t))(v132 + 80))(v131, v132);
  uint64_t v134 = sub_1BFE71F8C(v133);
  swift_bridgeObjectRelease();
  *(void *)&long long v208 = v134;
  swift_retain();
  uint64_t v135 = v173;
  sub_1BFFCDDC4((uint64_t *)&v208);
  if (v135)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v196 = 0;
    swift_release();
    uint64_t v136 = v208;
    int64_t v137 = *(void *)(v208 + 16);
    v138 = v183;
    if (v137)
    {
      uint64_t v180 = v130;
      v185 = v62;
      *(void *)&long long v208 = MEMORY[0x1E4FBC860];
      sub_1C05F62D0(0, v137, 0);
      uint64_t v139 = v208;
      v202 = (uint64_t *)type metadata accessor for FormatInspectionItem.Value(0);
      uint64_t v140 = *(v202 - 1);
      v141 = *(uint64_t **)(v140 + 56);
      uint64_t v200 = v140 + 56;
      v201 = v141;
      v142 = v138 + 1;
      uint64_t v179 = v136;
      v143 = (uint64_t *)(v136 + 40);
      long long v199 = xmmword_1C157D0F0;
      do
      {
        uint64_t v144 = *v143;
        uint64_t v145 = v206;
        v146 = (void *)((char *)v138 + *(int *)(v206 + 24));
        void *v146 = *(v143 - 1);
        v146[1] = v144;
        uint64_t v147 = (uint64_t)v202;
        swift_storeEnumTagMultiPayload();
        ((void (*)(void *, void, uint64_t, uint64_t))v201)(v146, 0, 1, v147);
        _OWORD *v138 = v199;
        void *v142 = 0;
        v142[1] = 0;
        v148 = (char *)v138 + *(int *)(v145 + 28);
        *(void *)v148 = 0;
        *((void *)v148 + 1) = 0;
        v148[16] = -1;
        ((void (*)(_OWORD *, void, uint64_t, uint64_t))v205)(v138, 0, 1, v145);
        *(void *)&long long v208 = v139;
        uint64_t v149 = (uint64_t)v138;
        unint64_t v150 = *(void *)(v139 + 16);
        unint64_t v151 = *(void *)(v139 + 24);
        swift_bridgeObjectRetain();
        if (v150 >= v151 >> 1)
        {
          sub_1C05F62D0(v151 > 1, v150 + 1, 1);
          uint64_t v139 = v208;
        }
        v143 += 2;
        *(void *)(v139 + 16) = v150 + 1;
        sub_1C1107B84(v149, v139 + v203 + v150 * v207, (uint64_t (*)(void))sub_1C0181BEC);
        --v137;
        v138 = (_OWORD *)v149;
      }
      while (v137);
      swift_release();
      long long v62 = v185;
      uint64_t v130 = v180;
    }
    else
    {
      swift_release();
      uint64_t v139 = MEMORY[0x1E4FBC860];
    }
    v152 = &v62[v207];
    sub_1C09BCFA4(0x726F7463656C6553, 0xE900000000000073, 0, 0, v139, v234);
    swift_bridgeObjectRelease();
    *(void *)(v130 + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(v130 + 64) = &off_1F1BDEC90;
    uint64_t v153 = swift_allocObject();
    *(void *)(v130 + 32) = v153;
    long long v154 = v234[1];
    *(_OWORD *)(v153 + 16) = v234[0];
    *(_OWORD *)(v153 + 32) = v154;
    *(void *)(v153 + 48) = v235;
    uint64_t v155 = sub_1C0233FC8(v130);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v156 = sub_1C131B79C(v155);
    swift_bridgeObjectRelease();
    sub_1C042F458(0x726F7463656C6553, 0xE900000000000073, (uint64_t)v156, 0, 0, v152);
    ((void (*)(void *, void, uint64_t, uint64_t))v205)(v152, 0, 1, v206);
    sub_1C09BCFA4(0x70756F7247, 0xE500000000000000, 0, 0, v178, &v208);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v157 = (void *)v181;
    *(void *)(v181 + 56) = &type metadata for FormatInspectionGroup;
    v157[8] = &off_1F1BDEC90;
    uint64_t v158 = swift_allocObject();
    v157[4] = v158;
    long long v159 = v209;
    *(_OWORD *)(v158 + 16) = v208;
    *(_OWORD *)(v158 + 32) = v159;
    *(void *)(v158 + 48) = v210;
    uint64_t v160 = v197[10];
    MEMORY[0x1F4188790](v158);
    *(&v166 - 2) = (void *)v161;
    swift_bridgeObjectRetain();
    uint64_t v162 = sub_1C018573C((void (*)(void *__return_ptr, void *))sub_1C1107C34, (uint64_t)(&v166 - 4), v160);
    swift_bridgeObjectRelease();
    v163 = sub_1C131B79C(v162);
    swift_bridgeObjectRelease();
    v157[12] = &type metadata for FormatInspection;
    v157[13] = &off_1F1C29D30;
    v157[9] = v163;
    v164 = sub_1C131B79C((uint64_t)v157);
    swift_setDeallocating();
    sub_1BFEE7E48(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0, (uint64_t)&protocol descriptor for FormatInspectionGroupable, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1C1107C54(v186, v191);

    sub_1C1107CDC((uint64_t)&v224, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1C01B3BB8);
    sub_1C0E8C974((uint64_t)v192, v189);
    sub_1C0167828((uint64_t)v231);
    sub_1BFF2413C(v195, (uint64_t (*)(void))sub_1C01F08F0);
    sub_1BFF2413C((uint64_t)v193, (uint64_t (*)(void))sub_1C01F0924);
    sub_1BFF2413C(v194, (uint64_t (*)(void))sub_1BFFFCF8C);
    return (uint64_t)v164;
  }
  return result;
}

uint64_t sub_1C1106754(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v2 + OBJC_IVAR____TtC8NewsFeed39DebugFormatBindingDetailsViewController_bindings;
  swift_beginAccess();
  sub_1C1107D90(a1, v7);
  swift_endAccess();
  sub_1C1107DF4(v7, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v8 = sub_1C1104AE4();
  sub_1BFF2413C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v9 = sub_1C131B4D4(v8);
  swift_bridgeObjectRelease();
  *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = v9;
  swift_bridgeObjectRelease();
  sub_1C0CF0E84();
  return sub_1BFF2413C(a1, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
}

void sub_1C11068F8()
{
}

uint64_t sub_1C1106928()
{
  sub_1BFF2413C(v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatBindingDetailsViewController_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  return swift_release();
}

uint64_t sub_1C11069DC()
{
  return type metadata accessor for DebugFormatBindingDetailsViewController();
}

uint64_t type metadata accessor for DebugFormatBindingDetailsViewController()
{
  uint64_t result = qword_1EA1AB7D8;
  if (!qword_1EA1AB7D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1106A30()
{
  uint64_t result = type metadata accessor for GroupLayoutBindingContext();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C1106ACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 64);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1BFEF2D8C(a2, a3), (v9 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(v7 + 56) + 40 * v8, (uint64_t)v13);
  }
  else
  {
    uint64_t v14 = 0;
    memset(v13, 0, sizeof(v13));
  }
  sub_1BFEE7E48(0, (unint64_t *)&qword_1EB872210, (unint64_t *)&qword_1EB872200, (uint64_t)&protocol descriptor for FeedGroupItemType, MEMORY[0x1E4FBB718]);
  uint64_t v10 = a4(0);
  int v11 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a5, v11 ^ 1u, 1, v10);
}

uint64_t sub_1C1106BD8@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v90 = a3;
  uint64_t v4 = type metadata accessor for FormatOption();
  uint64_t v85 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v96 = (uint64_t *)((char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  *(void *)&long long v95 = (char *)&v83 - v7;
  sub_1C0181BEC(0);
  uint64_t v89 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  int v11 = (long long *)((char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v83 - v13);
  long long v15 = a1[1];
  v113[0] = *a1;
  v113[1] = v15;
  long long v16 = a1[3];
  v113[2] = a1[2];
  long long v114 = v16;
  sub_1BFF5DA4C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = *(void *)(v9 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C152A660;
  uint64_t v88 = v19;
  unint64_t v100 = v18;
  unint64_t v20 = v19 + v18;
  uint64_t v21 = *((void *)&v113[0] + 1);
  uint64_t v22 = *(void *)&v113[0];
  uint64_t v23 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v24 = (char *)(v20 + *(int *)(v23 + 24));
  *(void *)uint64_t v24 = v22;
  *((void *)v24 + 1) = v21;
  uint64_t v25 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v98 = *(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56);
  uint64_t v99 = v25;
  uint64_t v97 = v26 + 56;
  v98(v24, 0, 1, v25);
  *(_OWORD *)unint64_t v20 = xmmword_1C15BE9D0;
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  unint64_t v27 = v20 + *(int *)(v23 + 28);
  *(void *)unint64_t v27 = 0;
  *(void *)(v27 + 8) = 0;
  *(unsigned char *)(v27 + 16) = -1;
  uint64_t v28 = *(void *)(v23 - 8);
  uint64_t v116 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(v28 + 56);
  uint64_t v103 = v28 + 56;
  v116(v20, 0, 1, v23);
  unint64_t v94 = v20;
  uint64_t v101 = v17;
  uint64_t v86 = (void *)(v20 + v17);
  sub_1BFEE7E48(0, (unint64_t *)&qword_1EA1974C0, (unint64_t *)&qword_1EA1974E0, (uint64_t)&protocol descriptor for FormatInspectionGroupable, MEMORY[0x1E4FBBE00]);
  uint64_t v92 = v29;
  uint64_t inited = swift_initStackObject();
  long long v91 = xmmword_1C1529AE0;
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  type metadata accessor for GroupLayoutBindingContext();
  uint64_t v31 = v93;
  sub_1BFFD14FC((uint64_t)v113);
  swift_bridgeObjectRetain();
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = v102;
  uint64_t v34 = sub_1C110792C(v32, (uint64_t)v113);
  sub_1BFFD147C((uint64_t)v113);
  swift_bridgeObjectRelease();
  v104[2] = v31;
  v104[3] = v113;
  uint64_t v35 = sub_1C1107758(v34, (void (*)(uint64_t))sub_1C1107D88, (uint64_t)v104);
  uint64_t v87 = v33;
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(0x736D657449, 0xE500000000000000, 0, 0, v35, v105);
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v36 = swift_allocObject();
  *(void *)(inited + 32) = v36;
  *(void *)(v36 + 48) = v106;
  long long v37 = v105[1];
  *(_OWORD *)(v36 + 16) = v105[0];
  *(_OWORD *)(v36 + 32) = v37;
  uint64_t v38 = sub_1C0233FC8(inited);
  swift_setDeallocating();
  uint64_t v93 = sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
  swift_arrayDestroy();
  unint64_t v39 = sub_1C131B79C(v38);
  swift_bridgeObjectRelease();
  char v40 = v86;
  sub_1C042F458(0x736D657449, 0xE500000000000000, (uint64_t)v39, 0, 0, v86);
  uint64_t v102 = v23;
  v116((unint64_t)v40, 0, 1, v23);
  uint64_t v41 = swift_initStackObject();
  uint64_t v42 = (void *)v41;
  *(_OWORD *)(v41 + 16) = v91;
  uint64_t v86 = (void *)(v41 + 32);
  uint64_t v43 = v114;
  v115[0] = v114;
  int64_t v44 = *(void *)(v114 + 16);
  uint64_t v45 = MEMORY[0x1E4FBC860];
  if (v44)
  {
    uint64_t v84 = (void *)v41;
    *(void *)&v111[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F62D0(0, v44, 0);
    uint64_t v46 = v43 + ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80));
    uint64_t v47 = *(void *)(v85 + 72);
    do
    {
      uint64_t v48 = v95;
      sub_1C1107DF4(v46, v95, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v49 = v96;
      sub_1C1107DF4(v48, (uint64_t)v96, (uint64_t (*)(void))type metadata accessor for FormatOption);
      sub_1C0AF5D04(v49, v14);
      v116((unint64_t)v14, 0, 1, v102);
      sub_1BFF2413C(v48, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v45 = *(void *)&v111[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F62D0(0, *(void *)(v45 + 16) + 1, 1);
        uint64_t v45 = *(void *)&v111[0];
      }
      unint64_t v51 = *(void *)(v45 + 16);
      unint64_t v50 = *(void *)(v45 + 24);
      if (v51 >= v50 >> 1)
      {
        sub_1C05F62D0(v50 > 1, v51 + 1, 1);
        uint64_t v45 = *(void *)&v111[0];
      }
      *(void *)(v45 + 16) = v51 + 1;
      sub_1C1107B84((uint64_t)v14, v45 + v100 + v51 * v101, (uint64_t (*)(void))sub_1C0181BEC);
      v46 += v47;
      --v44;
    }
    while (v44);
    sub_1BFCA59C8((uint64_t)v115);
    uint64_t v42 = v84;
  }
  char v52 = (void *)(v94 + 2 * v101);
  sub_1C09BCFA4(0x736E6F6974704FLL, 0xE700000000000000, 0, 0, v45, v107);
  swift_bridgeObjectRelease();
  v42[7] = &type metadata for FormatInspectionGroup;
  v42[8] = &off_1F1BDEC90;
  uint64_t v53 = swift_allocObject();
  v42[4] = v53;
  *(void *)(v53 + 48) = v108;
  long long v54 = v107[1];
  *(_OWORD *)(v53 + 16) = v107[0];
  *(_OWORD *)(v53 + 32) = v54;
  uint64_t v55 = sub_1C0233FC8((uint64_t)v42);
  swift_setDeallocating();
  swift_arrayDestroy();
  char v56 = sub_1C131B79C(v55);
  swift_bridgeObjectRelease();
  sub_1C042F458(0x736E6F6974704FLL, 0xE700000000000000, (uint64_t)v56, 0, 0, v52);
  v116((unint64_t)v52, 0, 1, v102);
  uint64_t v57 = swift_initStackObject();
  *(_OWORD *)(v57 + 16) = v91;
  uint64_t v58 = swift_bridgeObjectRetain();
  uint64_t v59 = sub_1BFE71F8C(v58);
  swift_bridgeObjectRelease();
  *(void *)&v111[0] = v59;
  swift_retain();
  uint64_t v60 = v87;
  sub_1BFFCDDC4((uint64_t *)v111);
  if (v60)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v92 = 0;
    swift_release();
    uint64_t v61 = *(void *)&v111[0];
    int64_t v62 = *(void *)(*(void *)&v111[0] + 16);
    if (v62)
    {
      *(void *)&long long v91 = v57;
      *(void *)&v111[0] = MEMORY[0x1E4FBC860];
      sub_1C05F62D0(0, v62, 0);
      uint64_t v63 = *(void *)&v111[0];
      uint64_t v96 = (uint64_t *)(v11 + 1);
      uint64_t v87 = v61;
      uint64_t v64 = (uint64_t *)(v61 + 40);
      long long v95 = xmmword_1C157D0F0;
      do
      {
        uint64_t v65 = *v64;
        uint64_t v66 = v102;
        uint64_t v67 = (char *)v11 + *(int *)(v102 + 24);
        *(void *)uint64_t v67 = *(v64 - 1);
        *((void *)v67 + 1) = v65;
        long long v68 = v11;
        uint64_t v69 = v99;
        swift_storeEnumTagMultiPayload();
        uint64_t v70 = v69;
        int v11 = v68;
        v98(v67, 0, 1, v70);
        long long *v68 = v95;
        uint64_t v71 = v96;
        *uint64_t v96 = 0;
        v71[1] = 0;
        uint64_t v72 = (char *)v68 + *(int *)(v66 + 28);
        *(void *)uint64_t v72 = 0;
        *((void *)v72 + 1) = 0;
        v72[16] = -1;
        v116((unint64_t)v68, 0, 1, v66);
        *(void *)&v111[0] = v63;
        unint64_t v74 = *(void *)(v63 + 16);
        unint64_t v73 = *(void *)(v63 + 24);
        swift_bridgeObjectRetain();
        if (v74 >= v73 >> 1)
        {
          sub_1C05F62D0(v73 > 1, v74 + 1, 1);
          uint64_t v63 = *(void *)&v111[0];
        }
        v64 += 2;
        *(void *)(v63 + 16) = v74 + 1;
        sub_1C1107B84((uint64_t)v68, v63 + v100 + v74 * v101, (uint64_t (*)(void))sub_1C0181BEC);
        --v62;
      }
      while (v62);
      swift_release();
      uint64_t v57 = v91;
    }
    else
    {
      swift_release();
      uint64_t v63 = MEMORY[0x1E4FBC860];
    }
    uint64_t v75 = (void *)(v94 + 3 * v101);
    sub_1C09BCFA4(0x726F7463656C6553, 0xE900000000000073, 0, 0, v63, v109);
    swift_bridgeObjectRelease();
    *(void *)(v57 + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(v57 + 64) = &off_1F1BDEC90;
    uint64_t v76 = swift_allocObject();
    *(void *)(v57 + 32) = v76;
    *(void *)(v76 + 48) = v110;
    long long v77 = v109[1];
    *(_OWORD *)(v76 + 16) = v109[0];
    *(_OWORD *)(v76 + 32) = v77;
    uint64_t v78 = sub_1C0233FC8(v57);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v79 = sub_1C131B79C(v78);
    swift_bridgeObjectRelease();
    sub_1C042F458(0x726F7463656C6553, 0xE900000000000073, (uint64_t)v79, 0, 0, v75);
    v116((unint64_t)v75, 0, 1, v102);
    sub_1C09BCFA4(1953459283, 0xE400000000000000, 0, 0, v88, v111);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v80 = v90;
    v90[3] = (uint64_t)&type metadata for FormatInspectionGroup;
    v80[4] = (uint64_t)&off_1F1BDEC90;
    uint64_t result = swift_allocObject();
    *uint64_t v80 = result;
    long long v82 = v111[1];
    *(_OWORD *)(result + 16) = v111[0];
    *(_OWORD *)(result + 32) = v82;
    *(void *)(result + 48) = v112;
  }
  return result;
}

uint64_t sub_1C1107700@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, void *a3@<X8>)
{
  sub_1C062C9B8((void *)(a1 + 32), 1, *a2, a2[1], (uint64_t)v5);
  return sub_1C043977C(0, 0xE000000000000000, (uint64_t)v5, a3);
}

uint64_t sub_1C1107758(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  v17[1] = a3;
  sub_1C0181BEC(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    v17[0] = v3;
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C05F62D0(0, v10, 0);
    uint64_t v11 = v18;
    uint64_t v12 = a1 + 32;
    do
    {
      a2(v12);
      uint64_t v13 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 0, 1, v13);
      uint64_t v18 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      unint64_t v14 = *(void *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C05F62D0(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v18;
      }
      *(void *)(v11 + 16) = v15 + 1;
      sub_1C1107B84((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15, (uint64_t (*)(void))sub_1C0181BEC);
      v12 += 72;
      --v10;
    }
    while (v10);
  }
  return v11;
}

uint64_t sub_1C110792C(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v36 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = 0;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      sub_1BFEA78F0(v25 + 72 * v5, (uint64_t)v32);
      uint64_t v6 = *(void *)(a2 + 16);
      __swift_project_boxed_opaque_existential_1(&v33, *((uint64_t *)&v34 + 1));
      uint64_t v7 = sub_1C151811C();
      uint64_t v9 = v8;
      if (*(void *)(v6 + 16))
      {
        uint64_t v10 = v7;
        sub_1C1520DBC();
        sub_1C151E77C();
        uint64_t v11 = sub_1C1520E0C();
        uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v13 = v11 & ~v12;
        uint64_t v14 = v6 + 56;
        if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
        {
          uint64_t v15 = *(void *)(v6 + 48);
          long long v16 = (void *)(v15 + 16 * v13);
          BOOL v17 = *v16 == v10 && v16[1] == v9;
          if (v17 || (sub_1C1520A9C() & 1) != 0)
          {
LABEL_12:
            swift_bridgeObjectRelease();
            long long v29 = v33;
            long long v30 = v34;
            uint64_t v31 = v35;
            long long v27 = v32[0];
            long long v28 = v32[1];
            uint64_t v18 = v36;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1BFEA81DC(0, *(void *)(v18 + 16) + 1, 1);
              uint64_t v18 = v36;
            }
            unint64_t v20 = *(void *)(v18 + 16);
            unint64_t v19 = *(void *)(v18 + 24);
            if (v20 >= v19 >> 1)
            {
              sub_1BFEA81DC(v19 > 1, v20 + 1, 1);
              uint64_t v18 = v36;
            }
            *(void *)(v18 + 16) = v20 + 1;
            uint64_t v21 = v18 + 72 * v20;
            *(_OWORD *)(v21 + 32) = v27;
            *(void *)(v21 + 96) = v31;
            *(_OWORD *)(v21 + 64) = v29;
            *(_OWORD *)(v21 + 80) = v30;
            *(_OWORD *)(v21 + 48) = v28;
            goto LABEL_4;
          }
          uint64_t v22 = ~v12;
          while (1)
          {
            unint64_t v13 = (v13 + 1) & v22;
            if (((*(void *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
              break;
            }
            uint64_t v23 = (void *)(v15 + 16 * v13);
            BOOL v24 = *v23 == v10 && v23[1] == v9;
            if (v24 || (sub_1C1520A9C() & 1) != 0) {
              goto LABEL_12;
            }
          }
        }
      }
      swift_bridgeObjectRelease();
      sub_1BFEA73C8((uint64_t)v32);
LABEL_4:
      if (++v5 == v4) {
        return v36;
      }
    }
  }
  return result;
}

uint64_t sub_1C1107B84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1107BEC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C1107C34@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1106BD8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C1107C54(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C1107C98(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_1C1107CDC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 136);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), v4);
  return a1;
}

uint64_t sub_1C1107D48(uint64_t result, void *a2)
{
  if (result)
  {
    id v2 = a2;
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_1C1107D88@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C1107700(a1, *(uint64_t **)(v2 + 24), a2);
}

uint64_t sub_1C1107D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GroupLayoutBindingContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1107DF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t FeedCohortConfiguration.considerPublisherTopicAggregates.getter()
{
  return *v0;
}

double FeedCohortConfiguration.dilutionFactor.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t FeedCohortConfiguration.enableUndampening.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

double FeedCohortConfiguration.favoritedBoost.getter()
{
  return *(double *)(v0 + 24);
}

double FeedCohortConfiguration.globalWeight.getter()
{
  return *(double *)(v0 + 32);
}

double FeedCohortConfiguration.globalWeightHalfLife.getter()
{
  return *(double *)(v0 + 40);
}

double FeedCohortConfiguration.globalWeightInitialMultiplier.getter()
{
  return *(double *)(v0 + 48);
}

double FeedCohortConfiguration.paddingFactor.getter()
{
  return *(double *)(v0 + 56);
}

double FeedCohortConfiguration.preBaselineCurvature.getter()
{
  return *(double *)(v0 + 64);
}

double FeedCohortConfiguration.postBaselineCurvature.getter()
{
  return *(double *)(v0 + 72);
}

uint64_t FeedCohortConfiguration.undampenOnlyAboveBaselineMembership.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

double FeedCohortConfiguration.userBaseline.getter()
{
  return *(double *)(v0 + 88);
}

uint64_t FeedCohortConfiguration.useRelativePersonalizationValue.getter()
{
  return *(unsigned __int8 *)(v0 + 96);
}

unint64_t sub_1C1107EC4(char a1)
{
  unint64_t result = 0xD000000000000020;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F6974756C6964;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x657469726F766166;
      break;
    case 4:
      unint64_t result = 0x65576C61626F6C67;
      break;
    case 5:
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 7:
      unint64_t result = 0x46676E6964646170;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0xD000000000000023;
      break;
    case 11:
      unint64_t result = 0x6573614272657375;
      break;
    case 12:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C1108068()
{
  return sub_1C1107EC4(*v0);
}

uint64_t sub_1C1108070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1108DC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1108098(uint64_t a1)
{
  unint64_t v2 = sub_1C11084BC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11080D4(uint64_t a1)
{
  unint64_t v2 = sub_1C11084BC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedCohortConfiguration.encode(to:)(void *a1)
{
  sub_1C11088D8(0, &qword_1EA1AB7E8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v19 - v6;
  uint64_t v22 = *(void *)(v1 + 8);
  int v8 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v12 = *(void *)(v1 + 40);
  uint64_t v11 = *(void *)(v1 + 48);
  uint64_t v14 = *(void *)(v1 + 56);
  uint64_t v13 = *(void *)(v1 + 64);
  uint64_t v15 = *(void *)(v1 + 72);
  int v20 = *(unsigned __int8 *)(v1 + 80);
  int v21 = v8;
  uint64_t v16 = *(void *)(v1 + 88);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11084BC();
  sub_1C1520F0C();
  char v36 = 0;
  uint64_t v17 = v23;
  sub_1C15207DC();
  if (!v17)
  {
    uint64_t v23 = v9;
    v19[6] = v12;
    v19[7] = v10;
    v19[4] = v14;
    v19[5] = v11;
    v19[2] = v15;
    v19[3] = v13;
    v19[1] = v16;
    char v35 = 1;
    sub_1C15207EC();
    char v34 = 2;
    sub_1C15207DC();
    char v33 = 3;
    sub_1C15207EC();
    char v32 = 4;
    sub_1C15207EC();
    char v31 = 5;
    sub_1C15207EC();
    char v30 = 6;
    sub_1C15207EC();
    char v29 = 7;
    sub_1C15207EC();
    char v28 = 8;
    sub_1C15207EC();
    char v27 = 9;
    sub_1C15207EC();
    char v26 = 10;
    sub_1C15207DC();
    char v25 = 11;
    sub_1C15207EC();
    char v24 = 12;
    sub_1C15207DC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C11084BC()
{
  unint64_t result = qword_1EA1AB7F0;
  if (!qword_1EA1AB7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB7F0);
  }
  return result;
}

uint64_t FeedCohortConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C11088D8(0, &qword_1EA1AB7F8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11084BC();
  sub_1C1520EBC();
  if (!v2)
  {
    char v46 = 0;
    char v10 = sub_1C15206AC();
    char v45 = 1;
    sub_1C15206BC();
    uint64_t v12 = v11;
    char v44 = 2;
    char v13 = sub_1C15206AC();
    char v43 = 3;
    sub_1C15206BC();
    uint64_t v15 = v14;
    char v42 = 4;
    sub_1C15206BC();
    uint64_t v17 = v16;
    char v41 = 5;
    sub_1C15206BC();
    uint64_t v19 = v18;
    char v40 = 6;
    sub_1C15206BC();
    uint64_t v21 = v20;
    char v39 = 7;
    sub_1C15206BC();
    uint64_t v23 = v22;
    char v38 = 8;
    sub_1C15206BC();
    uint64_t v25 = v24;
    char v37 = 9;
    sub_1C15206BC();
    uint64_t v27 = v26;
    char v36 = 10;
    int v33 = sub_1C15206AC();
    char v35 = 11;
    sub_1C15206BC();
    uint64_t v32 = v28;
    char v34 = 12;
    char v30 = sub_1C15206AC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(unsigned char *)a2 = v10 & 1;
    *(void *)(a2 + 8) = v12;
    *(unsigned char *)(a2 + 16) = v13 & 1;
    *(void *)(a2 + 24) = v15;
    *(void *)(a2 + 32) = v17;
    *(void *)(a2 + 40) = v19;
    *(void *)(a2 + 48) = v21;
    *(void *)(a2 + 56) = v23;
    *(void *)(a2 + 64) = v25;
    *(void *)(a2 + 72) = v27;
    *(unsigned char *)(a2 + 80) = v33 & 1;
    *(void *)(a2 + 88) = v32;
    *(unsigned char *)(a2 + 96) = v30 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C11088D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C11084BC();
    unint64_t v7 = a3(a1, &type metadata for FeedCohortConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C110893C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedCohortConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1C1108954(void *a1)
{
  return FeedCohortConfiguration.encode(to:)(a1);
}

double cohortConfiguration(from:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v4 = objc_msgSend(a1, sel_considerPublisherTopicAggregates);
  objc_msgSend(a1, sel_dilutionFactor);
  double v26 = v5;
  unsigned __int8 v6 = objc_msgSend(a1, sel_enableUndampening);
  objc_msgSend(a1, sel_favoritedBoost);
  uint64_t v8 = v7;
  objc_msgSend(a1, sel_globalWeight);
  uint64_t v10 = v9;
  objc_msgSend(a1, sel_globalWeightHalfLife);
  uint64_t v12 = v11;
  objc_msgSend(a1, sel_globalWeightInitialMultiplier);
  uint64_t v14 = v13;
  objc_msgSend(a1, sel_paddingFactor);
  uint64_t v16 = v15;
  objc_msgSend(a1, sel_preBaselineCurvature);
  uint64_t v18 = v17;
  objc_msgSend(a1, sel_postBaselineCurvature);
  uint64_t v20 = v19;
  unsigned __int8 v21 = objc_msgSend(a1, sel_undampenOnlyAboveBaselineMembership);
  objc_msgSend(a1, sel_userBaseline);
  uint64_t v23 = v22;
  unsigned __int8 v24 = objc_msgSend(a1, sel_useRelativePersonalizationValue);
  *(unsigned char *)a2 = v4;
  double result = v26;
  *(double *)(a2 + 8) = v26;
  *(unsigned char *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v8;
  *(void *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v12;
  *(void *)(a2 + 48) = v14;
  *(void *)(a2 + 56) = v16;
  *(void *)(a2 + 64) = v18;
  *(void *)(a2 + 72) = v20;
  *(unsigned char *)(a2 + 80) = v21;
  *(void *)(a2 + 88) = v23;
  *(unsigned char *)(a2 + 96) = v24;
  return result;
}

uint64_t getEnumTagSinglePayload for FeedCohortConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[97]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedCohortConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)double result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 97) = 0;
    }
    if (a2) {
      *(unsigned char *)double result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedCohortConfiguration()
{
  return &type metadata for FeedCohortConfiguration;
}

unsigned char *storeEnumTagSinglePayload for FeedCohortConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *double result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1108C80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedCohortConfiguration.CodingKeys()
{
  return &type metadata for FeedCohortConfiguration.CodingKeys;
}

unint64_t sub_1C1108CBC()
{
  unint64_t result = qword_1EA1AB800;
  if (!qword_1EA1AB800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB800);
  }
  return result;
}

unint64_t sub_1C1108D14()
{
  unint64_t result = qword_1EA1AB808;
  if (!qword_1EA1AB808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB808);
  }
  return result;
}

unint64_t sub_1C1108D6C()
{
  unint64_t result = qword_1EA1AB810;
  if (!qword_1EA1AB810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB810);
  }
  return result;
}

uint64_t sub_1C1108DC0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000020 && a2 == 0x80000001C1635080 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6974756C6964 && a2 == 0xEE00726F74636146 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C16350B0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657469726F766166 && a2 == 0xEE0074736F6F4264 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65576C61626F6C67 && a2 == 0xEC00000074686769 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C16350D0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001C16350F0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x46676E6964646170 && a2 == 0xED0000726F746361 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1635110 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C1635130 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001C1635150 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6573614272657375 && a2 == 0xEC000000656E696CLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001C1635180)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

void sub_1C1109348()
{
  uint64_t v1 = sub_1C151677C();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unsigned int v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v5 = (void *)(v0 + OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_entries);
  swift_beginAccess();
  if (!(*v5 >> 62))
  {
    if (!*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      return;
    }
LABEL_3:
    swift_retain();
    sub_1C151894C();
    swift_release();
    if (v10[7] != 1) {
      return;
    }
    unsigned int v6 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_tableView);
    if (*v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (!__OFSUB__(v9, 1)) {
        goto LABEL_6;
      }
    }
    else if (!__OFSUB__(*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10), 1))
    {
LABEL_6:
      MEMORY[0x1C18BE280]();
      uint64_t v7 = (void *)sub_1C151670C();
      (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
      objc_msgSend(v6, sel_scrollToRowAtIndexPath_atScrollPosition_animated_, v7, 3, 0);

      return;
    }
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (v8) {
    goto LABEL_3;
  }
}

void sub_1C1109550()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_unfilteredEntries];
  if (*(void *)(*(void *)&v0[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_filter] + 16))
  {
    uint64_t v2 = v0;
    unint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C110C318(v3, (uint64_t)v2);

    char v5 = (uint64_t *)&v2[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_entries];
    swift_beginAccess();
    *char v5 = v4;
  }
  else
  {
    unsigned int v6 = &v0[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_entries];
    swift_beginAccess();
    *(void *)unsigned int v6 = v1;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_tableView], sel_reloadData);
  sub_1C1109348();
}

uint64_t sub_1C1109640(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_filter);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 1;
  }
  uint64_t v4 = *(void *)(v2 + 32);
  uint64_t v14 = v2 + 32;
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 1;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v6 = 1;
  uint64_t v15 = v2;
  uint64_t v13 = v3;
LABEL_4:
  unint64_t v16 = v6;
  swift_bridgeObjectRetain();
  unint64_t v7 = 0;
  uint64_t v8 = v4 + 40;
  uint64_t v9 = v5 - 1;
  char v10 = 1;
  uint64_t v17 = v4;
  while (1)
  {
    if ((v10 & 1) == 0) {
      goto LABEL_12;
    }
    sub_1BFF27ECC();
    swift_bridgeObjectRetain();
    if (sub_1C151FF0C()) {
      break;
    }
    char v11 = sub_1C151FF0C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v17;
    if (v11) {
      goto LABEL_10;
    }
LABEL_12:
    if (v9 == v7)
    {
      swift_bridgeObjectRelease();
      if (v16 == v13)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
      if (v16 >= *(void *)(v15 + 16)) {
        goto LABEL_23;
      }
      uint64_t v4 = *(void *)(v14 + 8 * v16);
      uint64_t v6 = v16 + 1;
      uint64_t v5 = *(void *)(v4 + 16);
      if (!v5)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      goto LABEL_4;
    }
    char v10 = 0;
LABEL_5:
    ++v7;
    v8 += 16;
    if (v7 >= *(void *)(v4 + 16))
    {
      __break(1u);
LABEL_23:
      __break(1u);
      JUMPOUT(0x1C11098E8);
    }
  }
  swift_bridgeObjectRelease();
LABEL_10:
  if (v9 != v7)
  {
    char v10 = 1;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return 1;
}

id sub_1C11098F8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void **)&v4[*a1];
  if (v6)
  {
    id v7 = *(id *)&v4[*a1];
  }
  else
  {
    uint64_t v9 = (void *)sub_1C151E5EC();
    id v10 = objc_msgSend(self, sel_systemImageNamed_, v9);

    uint64_t v11 = *a4;
    id v12 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    uint64_t v13 = v4;
    id v14 = objc_msgSend(v12, sel_initWithImage_style_target_action_, v10, 0, v13, v11);

    uint64_t v15 = *(void **)&v4[v5];
    *(void *)&v4[v5] = v14;
    id v7 = v14;

    uint64_t v6 = 0;
  }
  id v16 = v6;
  return v7;
}

id sub_1C1109A08()
{
  uint64_t v1 = v0;
  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v17, sel_viewDidLoad);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_tableView];
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_secondarySystemBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v4);

  objc_msgSend(v2, sel_setDataSource_, v1);
  objc_msgSend(v2, sel_setDelegate_, v1);
  objc_msgSend(v2, sel_setAlwaysBounceVertical_, 1);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, sel_setTableFooterView_, v5);

  sub_1BFC39268(0, (unint64_t *)&qword_1EA1A17E0);
  sub_1C151F26C();
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    id v7 = result;
    objc_msgSend(result, sel_addSubview_, v2);

    uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_searchBar];
    uint64_t v9 = (void *)sub_1C151E5EC();
    objc_msgSend(v8, sel_setPlaceholder_, v9);

    id v10 = objc_msgSend(v3, sel_systemBlueColor);
    objc_msgSend(v8, sel_setTintColor_, v10);

    swift_retain();
    sub_1C151709C();
    swift_release();
    uint64_t v11 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setText_, v11);

    id v12 = objc_msgSend(v8, sel_searchTextField);
    objc_msgSend(v12, sel_setAutocorrectionType_, 1);

    id v13 = objc_msgSend(v8, sel_searchTextField);
    objc_msgSend(v13, sel_setAutocapitalizationType_, 0);

    id v14 = (void *)sub_1C151E5EC();
    id v15 = objc_msgSend(self, sel_systemImageNamed_, v14);

    objc_msgSend(v8, sel_setImage_forSearchBarIcon_state_, v15, 0, 0);
    objc_msgSend(v8, sel_setDelegate_, v1);
    swift_retain();
    sub_1C15170BC();
    swift_release();
    sub_1C151708C();
    swift_release();
    if (qword_1EA1943D0 != -1) {
      swift_once();
    }
    swift_retain();
    sub_1C151896C();
    swift_release();
    sub_1C151891C();
    swift_release();
    swift_retain();
    sub_1C151896C();
    swift_release();
    swift_allocObject();
    id v16 = sub_1C11098F8(&OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController____lazy_storage___nowBarButtonItem, 0xD000000000000014, 0x80000001C16352E0, (uint64_t *)&selRef_doNow);
    swift_unknownObjectWeakInit();

    sub_1C151891C();
    swift_release();
    swift_release();
    swift_retain();
    sub_1C15170BC();
    swift_release();
    sub_1C151708C();
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1109F28(uint64_t isEscapingClosureAtFileLocation, unsigned __int8 *a2)
{
  int v3 = *a2;
  unint64_t v4 = MEMORY[0x1E4FBC860];
  unint64_t v21 = MEMORY[0x1E4FBC860];
  if (v3) {
    goto LABEL_8;
  }
  id v5 = sub_1C0DB9D3C();
  uint64_t v6 = sub_1C0DB9D68();
  if (v4 >> 62) {
    goto LABEL_24;
  }
  if (__OFADD__(*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10), 2)) {
    goto LABEL_26;
  }
LABEL_4:
  sub_1BFE6D3C0();
  sub_1C151EBEC();
  unint64_t v4 = (unint64_t)v5;
  MEMORY[0x1C18C66D0]();
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_27;
  }
  while (1)
  {
    sub_1C151ECEC();
    sub_1C151EBEC();
    id v7 = v6;
    MEMORY[0x1C18C66D0]();
    if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();

    unint64_t v4 = v21;
LABEL_8:
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
    id v9 = sub_1C11098F8(&OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController____lazy_storage___clearLogBarButtonItem, 0x6873617274, 0xE500000000000000, (uint64_t *)&selRef_doClearLog);
    id v10 = sub_1C11098F8(&OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController____lazy_storage___nowBarButtonItem, 0xD000000000000014, 0x80000001C16352E0, (uint64_t *)&selRef_doNow);
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithCustomView_, *(void *)(isEscapingClosureAtFileLocation+ OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_searchBar));
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (!__OFADD__(v18, 4))
      {
LABEL_10:
        sub_1BFE6D3C0();
        sub_1C151EBEC();
        unint64_t v4 = (unint64_t)v8;
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          goto LABEL_11;
        }
        goto LABEL_22;
      }
    }
    else if (!__OFADD__(*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10), 4))
    {
      goto LABEL_10;
    }
    __break(1u);
LABEL_22:
    sub_1C151EC8C();
LABEL_11:
    sub_1C151ECEC();
    sub_1C151EBEC();
    id v12 = v9;
    MEMORY[0x1C18C66D0]();
    if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
    id v13 = v10;
    MEMORY[0x1C18C66D0]();
    if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
    id v14 = v11;
    MEMORY[0x1C18C66D0]();
    if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();

    unint64_t v4 = self;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = isEscapingClosureAtFileLocation;
    *(void *)(v15 + 24) = &v21;
    uint64_t v6 = (void *)swift_allocObject();
    _OWORD v6[2] = sub_1C110CB7C;
    v6[3] = v15;
    aBlock[4] = sub_1BFC81768;
    aBlock[5] = v6;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BFC81740;
    aBlock[3] = &block_descriptor_87;
    id v5 = _Block_copy(aBlock);
    id v16 = (id)isEscapingClosureAtFileLocation;
    swift_retain();
    swift_release();
    objc_msgSend((id)v4, sel_performWithoutAnimation_, v5);
    _Block_release(v5);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!__OFADD__(v19, 2)) {
      goto LABEL_4;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    sub_1C151EC8C();
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1C110A46C(void *a1)
{
  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  swift_bridgeObjectRetain();
  id v2 = (id)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setToolbarItems_, v2);
}

uint64_t sub_1C110A500(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C15193EC();
  swift_release();
  return swift_release();
}

void sub_1C110A5C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C18C9C60](v3);
  if (v4)
  {
    id v5 = (void *)v4;
    *(void *)(v4 + OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_unfilteredEntries) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1C1109550();
  }
}

void sub_1C110A640(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  if (*a2 == 1)
  {
    swift_beginAccess();
    uint64_t v4 = MEMORY[0x1C18C9C60](v3);
    if (v4)
    {
      id v5 = (void *)v4;
      uint64_t v6 = (void *)sub_1C151E5EC();
      id v7 = objc_msgSend(self, sel_systemImageNamed_, v6);

      objc_msgSend(v5, sel_setImage_, v7);
    }
    sub_1C1109348();
  }
  else
  {
    swift_beginAccess();
    uint64_t v8 = MEMORY[0x1C18C9C60](v3);
    if (v8)
    {
      id v9 = (void *)v8;
      id v10 = (void *)sub_1C151E5EC();
      id v11 = objc_msgSend(self, sel_systemImageNamed_, v10);

      objc_msgSend(v9, sel_setImage_, v11);
    }
  }
}

void sub_1C110A7A4(uint64_t a1)
{
  *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_filter) = sub_1C04000F0();
  swift_bridgeObjectRelease();
  sub_1C1109550();
}

uint64_t sub_1C110A920()
{
  return swift_release();
}

uint64_t type metadata accessor for DebugFormatLogViewController()
{
  return self;
}

uint64_t sub_1C110AC7C()
{
  unint64_t v1 = sub_1C151675C();
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_entries);
  uint64_t result = swift_beginAccess();
  uint64_t v4 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    if ((v1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v1 < *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v5 = *(void *)(v4 + 8 * v1 + 32);
      swift_retain();
      goto LABEL_5;
    }
    __break(1u);
    return result;
  }
  uint64_t v5 = MEMORY[0x1C18C7CB0](v1);
LABEL_5:
  swift_endAccess();
  sub_1BFC39268(0, (unint64_t *)&qword_1EA1A17E0);
  uint64_t v6 = (void *)sub_1C151F24C();
  uint64_t v7 = *(void *)(v5 + 24);
  id v8 = v6;
  id v9 = sub_1C060B1C4(v7);
  objc_msgSend(v8, sel_setBackgroundColor_, v9);

  id v10 = objc_msgSend(v8, sel_textLabel);
  if (v10)
  {
    id v11 = v10;
    objc_msgSend(v10, sel_setNumberOfLines_, 0);
  }
  id v12 = objc_msgSend(v8, sel_textLabel);
  if (v12)
  {
    id v13 = v12;
    objc_msgSend(v12, sel_setAttributedText_, *(void *)(v5 + 16));
  }
  if (*(void *)(v5 + 24) >= 5uLL) {
    uint64_t v14 = 3;
  }
  else {
    uint64_t v14 = 0;
  }
  objc_msgSend(v8, sel_setSelectionStyle_, v14);
  id v15 = objc_msgSend(v8, sel_accessoryView);
  if (!v15) {
    goto LABEL_15;
  }
  id v16 = v15;
  self;
  id v17 = (id)swift_dynamicCastObjCClass();
  if (!v17)
  {

LABEL_15:
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithFrame_, 0.0, 0.0, 12.0, 12.0);
  }
  uint64_t v18 = *(void **)(v5 + 24);
  if ((unint64_t)v18 >= 5)
  {
    id v20 = v18;
    unint64_t v21 = (void *)sub_1C151E5EC();
    id v19 = objc_msgSend(self, sel_systemImageNamed_, v21);

    sub_1C02317E4(v18);
  }
  else
  {
    id v19 = 0;
  }
  objc_msgSend(v17, sel_setImage_, v19);

  id v22 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v17, sel_setTintColor_, v22);

  objc_msgSend(v8, sel_setAccessoryView_, v17);
  swift_release();

  return (uint64_t)v8;
}

uint64_t sub_1C110B084(void *a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = sub_1C151675C();
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_entries);
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = MEMORY[0x1C18C7CB0](v4);
    goto LABEL_5;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v4 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v8 = *(void *)(v7 + 8 * v4 + 32);
    swift_retain();
LABEL_5:
    swift_endAccess();
    id v9 = *(void **)(v8 + 16);
    objc_msgSend(a1, sel_bounds);
    sub_1C151F7EC();
    objc_msgSend(v9, sel_boundingRectWithSize_options_context_, 1, 0);
    CGRectGetHeight(v10);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C110B2A4()
{
  uint64_t result = sub_1C151F33C();
  if (result)
  {
    swift_retain();
    sub_1C151894C();
    uint64_t result = swift_release();
    if ((v1 & 1) == 0)
    {
      swift_retain();
      sub_1C151895C();
      return swift_release();
    }
  }
  return result;
}

void sub_1C110B3A4(uint64_t a1, char a2)
{
  if (a2 & 1) == 0 && (sub_1C151F33C())
  {
    swift_retain();
    sub_1C151894C();
    swift_release();
    if ((v2 & 1) == 0)
    {
      swift_retain();
      sub_1C151895C();
      swift_release();
    }
  }
}

void sub_1C110B530(void *a1)
{
  uint64_t v3 = v1;
  sub_1C110CA04();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (void *)((char *)v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = (void *)sub_1C151670C();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v8, 0);

  unint64_t v9 = sub_1C151675C();
  CGRect v10 = &v3[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_entries];
  swift_beginAccess();
  uint64_t v11 = *(void *)v10;
  if ((*(void *)v10 & 0xC000000000000001) != 0)
  {
    uint64_t v12 = MEMORY[0x1C18C7CB0](v9);
    goto LABEL_5;
  }
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_49;
  }
  if (v9 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v12 = *(void *)(v11 + 8 * v9 + 32);
  swift_retain();
LABEL_5:
  swift_endAccess();
  char v2 = *(void **)(v12 + 24);
  switch((unint64_t)v2)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      swift_release();
      return;
    default:
      uint64_t v142 = *(void *)(v12 + 24);
      sub_1C0231470(v2);
      id v13 = v2;
      uint64_t v14 = v2;
      unint64_t v15 = sub_1C017F734();
      char v16 = swift_dynamicCast();
      id v17 = &async function pointer to dispatch thunk of PuzzleGameCenterServiceType.invalidate();
      uint64_t v118 = v3;
      if (v16)
      {
        uint64_t v18 = v138;
        if (v141 >> 60 == 12)
        {
          long long v114 = v137;
          uint64_t v111 = v139;
          uint64_t v112 = v140;
          uint64_t v116 = v15;
          uint64_t v117 = (void *)(v141 & 0xFFFFFFFFFFFFFFFLL);
          uint64_t v113 = *(void **)&v118[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_editor];
          uint64_t v19 = *(void *)((char *)v113 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_formatManager);
          uint64_t v20 = *(void *)(v19 + 16);
          swift_retain();
          uint64_t v115 = v20;
          sub_1C1517E7C();
          swift_beginAccess();
          uint64_t v21 = *(void *)(v19 + 40);
          if (*(void *)(v21 + 16))
          {
            swift_bridgeObjectRetain();
            unint64_t v22 = sub_1BFEF2D8C((uint64_t)v114, v18);
            if (v23)
            {
              unsigned __int8 v24 = (long long *)(*(void *)(v21 + 56) + (v22 << 7));
              long long v26 = v24[2];
              unsigned long long v25 = v24[3];
              long long v27 = v24[1];
              long long v124 = *v24;
              long long v125 = v27;
              long long v126 = v26;
              unsigned long long v127 = v25;
              long long v28 = v24[4];
              long long v29 = v24[5];
              long long v30 = v24[7];
              *(_OWORD *)&v129[16] = v24[6];
              *(_OWORD *)&v129[32] = v30;
              long long v128 = v28;
              *(_OWORD *)v129 = v29;
              memmove(&v130, v24, 0x80uLL);
              nullsub_1();
              sub_1C0B8CEF4(&v124);
            }
            else
            {
              sub_1C017F2B4(&v130);
            }
          }
          else
          {
            sub_1C017F2B4(&v130);
            swift_bridgeObjectRetain();
          }
          sub_1C09CFC44((uint64_t)&v130, (uint64_t)&v137);
          swift_endAccess();
          swift_bridgeObjectRelease();
          sub_1C1517E8C();
          swift_release();
          sub_1C09CFC44((uint64_t)&v137, (uint64_t)&v130);
          if (sub_1C0263AB8((uint64_t)&v130) == 1)
          {

            swift_bridgeObjectRelease();
          }
          else
          {
            if (v136)
            {
              uint64_t v32 = v133;
              unint64_t v31 = v134;
              uint64_t v119 = v114;
              uint64_t v120 = v18;
              uint64_t v121 = v111;
              uint64_t v122 = v112;
              sub_1C017F5CC(v133, v134, (uint64_t *)&v119, v117, (uint64_t *)&v124);
              swift_bridgeObjectRelease();
              uint64_t v111 = v125;
              long long v114 = (void *)*((void *)&v124 + 1);
              uint64_t v112 = v124;
              uint64_t v115 = *((void *)&v125 + 1);
              v110[1] = v135;
              long long v124 = v130;
              *(void *)&long long v125 = v131;
              BYTE8(v125) = v132;
              *(void *)&long long v126 = v32;
              *((void *)&v126 + 1) = v31;
              unsigned long long v127 = __PAIR128__((unint64_t)v114, v112);
              *(void *)&long long v128 = v111;
              *((void *)&v128 + 1) = v115;
              *(void *)v129 = v135;
              *(_OWORD *)&v129[8] = __PAIR128__((unint64_t)v114, v112);
              *(void *)&v129[24] = v111;
              *(void *)&v129[32] = v115;
              *(void *)&v129[40] = v2;
              nullsub_1();
              sub_1C09CFC44((uint64_t)&v124, (uint64_t)&v119);
              swift_bridgeObjectRetain();
              sub_1C0231470(v2);
              swift_bridgeObjectRetain_n();
              int v33 = v2;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain();
              sub_1C151895C();
              swift_release();
              sub_1BFEFDD10(0, &qword_1EA1A5250, (uint64_t)&type metadata for FormatSourceMap, MEMORY[0x1E4FBBE00]);
              uint64_t v34 = swift_allocObject();
              *(_OWORD *)(v34 + 16) = xmmword_1C1529AE0;
              uint64_t v35 = v111;
              char v36 = (void *)v112;
              uint64_t v37 = (uint64_t)v114;
              *(void *)(v34 + 32) = v112;
              *(void *)(v34 + 40) = v37;
              uint64_t v38 = v115;
              *(void *)(v34 + 48) = v35;
              *(void *)(v34 + 56) = v38;
              uint64_t v119 = (void *)v34;
              swift_retain();
              sub_1C151895C();
              swift_release();
              uint64_t v119 = v36;
              uint64_t v120 = (uint64_t)v114;
              uint64_t v121 = v35;
              id v17 = (void *)&async function pointer to dispatch thunk of PuzzleGameCenterServiceType.invalidate();
              uint64_t v122 = v115;
              unint64_t v123 = v2;
              swift_bridgeObjectRetain();
              char v39 = v2;
              swift_retain();
              sub_1C151895C();
              swift_release();
              LOBYTE(v119) = 1;
              swift_retain();
              sub_1C151895C();
              swift_release();

              swift_bridgeObjectRelease();
            }
            else
            {

              swift_bridgeObjectRelease();
            }
            sub_1C02F6040((uint64_t)&v137);
          }
          uint64_t v3 = v118;
        }
        else
        {
          sub_1C017F78C((uint64_t)v137, v138, v139, v140, v141);
          uint64_t v3 = v118;
        }
      }
      int64_t v137 = v2;
      char v40 = v2;
      uint64_t v41 = type metadata accessor for FormatLayoutError();
      int v42 = swift_dynamicCast();
      char v43 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
      if (!v42)
      {
        v43(v7, 1, 1, v41);
        uint64_t v65 = (uint64_t (*)(void))sub_1C110CA04;
LABEL_30:
        sub_1C110CA5C((uint64_t)v7, v65);
        goto LABEL_31;
      }
      v43(v7, 0, 1, v41);
      if (swift_getEnumCaseMultiPayload() != 65)
      {
        uint64_t v65 = (uint64_t (*)(void))type metadata accessor for FormatLayoutError;
        goto LABEL_30;
      }
      uint64_t v45 = *v7;
      char v44 = (void *)v7[1];
      uint64_t v46 = *(void *)(*v7 + 16);
      if (v46)
      {
        uint64_t v116 = *v7;
        uint64_t v117 = v44;
        uint64_t v47 = (uint64_t *)(v45 + 32 * v46);
        uint64_t v48 = v3;
        uint64_t v49 = *v47;
        uint64_t v50 = v47[1];
        uint64_t v51 = v47[2];
        uint64_t v111 = v47[3];
        uint64_t v112 = v51;
        long long v114 = *(void **)&v48[v17[260]];
        uint64_t v52 = *(void *)((char *)v114 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_formatManager);
        uint64_t v53 = *(void *)(v52 + 16);
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v115 = v53;
        sub_1C1517E7C();
        swift_beginAccess();
        uint64_t v54 = *(void *)(v52 + 40);
        uint64_t v55 = *(void *)(v54 + 16);
        uint64_t v113 = (void *)v49;
        if (v55)
        {
          swift_bridgeObjectRetain();
          unint64_t v56 = sub_1BFEF2D8C(v49, v50);
          if (v57)
          {
            uint64_t v58 = (long long *)(*(void *)(v54 + 56) + (v56 << 7));
            long long v60 = v58[2];
            unsigned long long v59 = v58[3];
            long long v61 = v58[1];
            long long v124 = *v58;
            long long v125 = v61;
            long long v126 = v60;
            unsigned long long v127 = v59;
            long long v62 = v58[4];
            long long v63 = v58[5];
            long long v64 = v58[7];
            *(_OWORD *)&v129[16] = v58[6];
            *(_OWORD *)&v129[32] = v64;
            long long v128 = v62;
            *(_OWORD *)v129 = v63;
            memmove(&v130, v58, 0x80uLL);
            nullsub_1();
            sub_1C0B8CEF4(&v124);
          }
          else
          {
            sub_1C017F2B4(&v130);
          }
        }
        else
        {
          sub_1C017F2B4(&v130);
          swift_bridgeObjectRetain();
        }
        sub_1C09CFC44((uint64_t)&v130, (uint64_t)&v137);
        swift_endAccess();
        swift_bridgeObjectRelease();
        sub_1C1517E8C();
        swift_release();
        sub_1C09CFC44((uint64_t)&v137, (uint64_t)&v130);
        if (sub_1C0263AB8((uint64_t)&v130) == 1)
        {
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          uint64_t v3 = v118;
          goto LABEL_31;
        }
        uint64_t v84 = v133;
        unint64_t v83 = v134;
        uint64_t v119 = v113;
        uint64_t v120 = v50;
        uint64_t v121 = v112;
        uint64_t v122 = v111;
        uint64_t v85 = v117;
        sub_1C017F5CC(v133, v134, (uint64_t *)&v119, v117, (uint64_t *)&v124);
        swift_bridgeObjectRelease();
        uint64_t v3 = (char *)*((void *)&v124 + 1);
        long long v86 = v125;
        uint64_t v112 = v135;
        uint64_t v113 = (void *)v124;
        long long v124 = v130;
        *(void *)&long long v125 = v131;
        BYTE8(v125) = v132;
        *(void *)&long long v126 = v84;
        *((void *)&v126 + 1) = v83;
        *(void *)&unsigned long long v127 = v113;
        *((void *)&v127 + 1) = v3;
        long long v128 = v86;
        *(_OWORD *)v129 = __PAIR128__((unint64_t)v113, v135);
        *(void *)&v129[16] = v3;
        *(_OWORD *)&v129[24] = v86;
        uint64_t v115 = *((void *)&v86 + 1);
        uint64_t v111 = v86;
        *(void *)&v129[40] = v85;
        nullsub_1();
        unint64_t v87 = *(void *)((char *)v114 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__sourceFile);
        sub_1C09CFC44((uint64_t)&v124, (uint64_t)&v119);
        swift_bridgeObjectRetain_n();
        id v88 = v85;
        swift_bridgeObjectRetain();
        id v89 = v85;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        unint64_t v9 = v87;
        sub_1C151895C();
        swift_release();
        uint64_t v90 = sub_1C0E82E9C(1, v116);
        unint64_t v94 = (v93 >> 1) - v92;
        if (!__OFSUB__(v93 >> 1, v92))
        {
          uint64_t v116 = v91;
          BOOL v95 = __OFADD__(v94, 1);
          uint64_t v96 = v94 + 1;
          if (!v95)
          {
            uint64_t v97 = v90;
            uint64_t v98 = v92;
            unint64_t v99 = v93;
            uint64_t v119 = sub_1C0EE2410(0, v96 & ~(v96 >> 63), 0, MEMORY[0x1E4FBC860]);
            uint64_t v100 = swift_unknownObjectRetain();
            sub_1C104AD20(v100, v116, v98, v99);
            unint64_t v9 = (unint64_t)v119;
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v112 = v97;
            if (isUniquelyReferenced_nonNull_native)
            {
LABEL_44:
              uint64_t v102 = v113;
              unint64_t v104 = *(void *)(v9 + 16);
              unint64_t v103 = *(void *)(v9 + 24);
              if (v104 >= v103 >> 1) {
                unint64_t v9 = (unint64_t)sub_1C0EE2410((void *)(v103 > 1), v104 + 1, 1, (void *)v9);
              }
              *(void *)(v9 + 16) = v104 + 1;
              uint64_t v105 = (void *)(v9 + 32 * v104);
              v105[4] = v102;
              v105[5] = v3;
              uint64_t v106 = v111;
              uint64_t v107 = v115;
              v105[6] = v111;
              v105[7] = v107;
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v119 = (void *)v9;
              swift_retain();
              sub_1C151895C();
              swift_release();
              uint64_t v119 = v113;
              uint64_t v120 = (uint64_t)v3;
              uint64_t v121 = v106;
              uint64_t v122 = v115;
              uint64_t v108 = v117;
              unint64_t v123 = v117;
              swift_bridgeObjectRetain();
              id v109 = v108;
              swift_retain();
              sub_1C151895C();
              swift_release();
              LOBYTE(v119) = 1;
              swift_retain();
              sub_1C151895C();
              swift_release();

              swift_bridgeObjectRelease();
              sub_1C02F6040((uint64_t)&v137);
              uint64_t v3 = v118;
              id v17 = (void *)&async function pointer to dispatch thunk of PuzzleGameCenterServiceType.invalidate();
              goto LABEL_31;
            }
LABEL_52:
            unint64_t v9 = (unint64_t)sub_1C0EE2410(0, *(void *)(v9 + 16) + 1, 1, (void *)v9);
            goto LABEL_44;
          }
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }

      swift_bridgeObjectRelease();
LABEL_31:
      uint64_t v66 = v2;
      uint64_t v67 = sub_1C01A95D4(v2);
      long long v68 = sub_1C01ACCE8(v67);
      uint64_t v70 = v69;
      sub_1C02317E4(v2);
      uint64_t v71 = *(void *)&v3[v17[260]];
      id v72 = objc_allocWithZone((Class)type metadata accessor for DebugFormatErrorViewController());
      swift_retain();
      id v73 = v68;
      swift_bridgeObjectRetain();
      id v74 = sub_1C11E2324(v71, v68, v70);

      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v75 = (void *)sub_1C151670C();
      id v76 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v75);

      id v77 = objc_msgSend(v76, sel_accessoryView);
      if (!v77) {
        id v77 = v76;
      }
      id v78 = objc_allocWithZone((Class)type metadata accessor for DebugNavigationController());
      uint64_t v117 = v74;
      id v79 = objc_msgSend(v78, sel_initWithRootViewController_, v74);
      objc_msgSend(v79, sel_setModalPresentationStyle_, 7);
      id v80 = objc_msgSend(v79, sel_popoverPresentationController);
      objc_msgSend(v80, sel_setSourceView_, v77);

      id v81 = objc_msgSend(v79, sel_popoverPresentationController);
      if (v81)
      {
        long long v82 = v81;
        objc_msgSend(v81, sel_setPermittedArrowDirections_, 3);
      }
      objc_msgSend(v79, sel_setPreferredContentSize_, 540.0, 620.0);
      objc_msgSend(v118, sel_presentViewController_animated_completion_, v79, 1, 0);
      sub_1C02317E4(v2);

      swift_release();
      swift_bridgeObjectRelease();
      sub_1C02317E4(v2);
      return;
  }
}

uint64_t sub_1C110C318(unint64_t a1, uint64_t a2)
{
  unint64_t v4 = a1;
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_18:
    uint64_t v5 = sub_1C15204BC();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      unint64_t v6 = 0;
      unint64_t v7 = v4 & 0xC000000000000001;
      uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
      uint64_t v13 = v5;
      unint64_t v14 = v4;
      while (1)
      {
        if (v7)
        {
          uint64_t v9 = MEMORY[0x1C18C7CB0](v6, v4);
          unint64_t v10 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
LABEL_14:
            __break(1u);
LABEL_15:
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            return a2;
          }
        }
        else
        {
          if (v6 >= *(void *)(v8 + 16))
          {
            __break(1u);
            goto LABEL_18;
          }
          uint64_t v9 = *(void *)(v4 + 8 * v6 + 32);
          swift_retain();
          unint64_t v10 = v6 + 1;
          if (__OFADD__(v6, 1)) {
            goto LABEL_14;
          }
        }
        uint64_t v15 = v9;
        char v11 = sub_1C1109640((uint64_t)&v15, a2);
        if (v2) {
          goto LABEL_15;
        }
        if (v11)
        {
          sub_1C152025C();
          sub_1C152029C();
          sub_1C15202AC();
          sub_1C152026C();
          uint64_t v5 = v13;
          unint64_t v4 = v14;
        }
        else
        {
          swift_release();
        }
        ++v6;
        if (v10 == v5)
        {
          a2 = v16;
          goto LABEL_20;
        }
      }
    }
  }
  a2 = MEMORY[0x1E4FBC860];
LABEL_20:
  swift_bridgeObjectRelease();
  return a2;
}

id sub_1C110C4C0(uint64_t a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_styler;
  type metadata accessor for DebugFormatStyler();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)&v1[v4] = v5;
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_tableView;
  id v7 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  uint64_t v8 = v1;
  *(void *)&v1[v6] = objc_msgSend(v7, sel_initWithFrame_style_, 0, 0.0, 0.0, 0.0, 0.0);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_entries] = MEMORY[0x1E4FBC860];
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_unfilteredEntries] = v9;
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_filter;
  *(void *)&v8[v10] = sub_1C04000F0();
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController____lazy_storage___nowBarButtonItem] = 0;
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController____lazy_storage___clearLogBarButtonItem] = 0;
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_searchBar;
  *(void *)&v8[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BF0]), sel_initWithFrame_, 0.0, 0.0, 200.0, 44.0);
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_throttler;
  sub_1C151888C();
  uint64_t v19 = sub_1C151887C();
  sub_1C0B439C0();
  swift_allocObject();
  *(void *)&v8[v12] = sub_1C15193DC();
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_editor] = a1;
  uint64_t v13 = (objc_class *)type metadata accessor for DebugFormatConsolePaneDisplayController();
  unint64_t v14 = (char *)objc_allocWithZone(v13);
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneDebuggerButtonItem] = 0;
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneLoggerButtonItem] = 0;
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController_editor] = a1;
  v18.receiver = v14;
  v18.super_class = v13;
  swift_retain_n();
  id v15 = objc_msgSendSuper2(&v18, sel_init);
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C151708C();
  swift_release();

  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_consolePaneDisplayController] = v15;
  v17.receiver = v8;
  v17.super_class = ObjectType;
  return objc_msgSendSuper2(&v17, sel_initWithNibName_bundle_, 0, 0);
}

void sub_1C110C730()
{
  char v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_styler;
  type metadata accessor for DebugFormatStyler();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)&v1[v2] = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_tableView;
  *(void *)&v1[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D00]), sel_initWithFrame_style_, 0, 0.0, 0.0, 0.0, 0.0);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_entries] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_unfilteredEntries] = v5;
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_filter;
  *(void *)&v1[v6] = sub_1C04000F0();
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController____lazy_storage___nowBarButtonItem] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController____lazy_storage___clearLogBarButtonItem] = 0;
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_searchBar;
  *(void *)&v1[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BF0]), sel_initWithFrame_, 0.0, 0.0, 200.0, 44.0);
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed28DebugFormatLogViewController_throttler;
  sub_1C151888C();
  sub_1C151887C();
  sub_1C0B439C0();
  swift_allocObject();
  *(void *)&v1[v8] = sub_1C15193DC();

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C110C8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C15154CC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1;
  uint64_t v13 = a2;
  sub_1C15153DC();
  sub_1BFF27ECC();
  uint64_t v8 = sub_1C151FE9C();
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v12 = v8;
  uint64_t v13 = v10;
  swift_retain();
  sub_1C15170AC();
  return swift_release();
}

void sub_1C110CA04()
{
  if (!qword_1EB85B950)
  {
    type metadata accessor for FormatLayoutError();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85B950);
    }
  }
}

uint64_t sub_1C110CA5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C110CABC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C110CAF4(uint64_t a1, unsigned char *a2)
{
  sub_1C110A640(a1, a2, v2);
}

uint64_t sub_1C110CAFC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C110CB3C()
{
  sub_1C110A5C0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C110CB44()
{
  return swift_deallocObject();
}

void sub_1C110CB7C()
{
  sub_1C110A46C(*(void **)(v0 + 16));
}

uint64_t sub_1C110CB84()
{
  return swift_deallocObject();
}

id sub_1C110CB98()
{
  uint64_t v1 = *(void **)(v0 + 80);
  if (v1)
  {
    id v2 = *(id *)(v0 + 80);
  }
  else
  {
    type metadata accessor for FormatDisplayLinkAnimation.Container();
    uint64_t v3 = swift_allocObject();
    swift_weakInit();
    *(void *)(v3 + 24) = 0;
    *(unsigned char *)(v3 + 32) = 1;
    id v4 = objc_allocWithZone((Class)type metadata accessor for FormatDisplayLinkObject());
    swift_retain();
    *(void *)(v3 + 40) = objc_msgSend(v4, sel_init);
    swift_weakAssign();
    swift_release();
    id v5 = objc_msgSend(self, sel_displayLinkWithTarget_selector_, v3, sel_updateWithDisplayLink_);
    swift_release();
    uint64_t v6 = *(void **)(v0 + 80);
    *(void *)(v0 + 80) = v5;
    id v2 = v5;

    uint64_t v1 = 0;
  }
  id v7 = v1;
  return v2;
}

void *sub_1C110CC9C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v30 = a5;
  uint64_t v11 = sub_1C151635C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[10] = 0;
  sub_1C151634C();
  uint64_t v15 = sub_1C151633C();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  _OWORD v6[2] = v15;
  v6[3] = v17;
  v6[4] = a1;
  v6[5] = a2;
  id v18 = objc_allocWithZone((Class)type metadata accessor for FormatDisplayLinkObject());
  id v19 = a1;
  v6[6] = objc_msgSend(v18, sel_init);
  v6[7] = a3;
  uint64_t v20 = v30;
  v6[8] = a4;
  v6[9] = v20;
  id v21 = a3;
  swift_retain();
  id v22 = sub_1C110CB98();
  objc_msgSend(v22, sel_setPaused_, 1);

  id v23 = sub_1C110CB98();
  id v24 = objc_msgSend(self, sel_mainRunLoop);
  objc_msgSend(v23, sel_addToRunLoop_forMode_, v24, *MEMORY[0x1E4F1C4B0]);

  unsigned long long v25 = (void *)v6[6];
  id v26 = v19;
  id v27 = v25;
  objc_msgSend(v21, sel_applyForTime_presentationObject_modelObject_, v27, v26, 0.0);

  swift_release();
  return v6;
}

id *sub_1C110CEB0()
{
  id v1 = sub_1C110CB98();
  objc_msgSend(v1, sel_invalidate);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t sub_1C110CF20()
{
  sub_1C110CEB0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatDisplayLinkAnimation()
{
  return self;
}

id sub_1C110CF78(void *a1)
{
  uint64_t v2 = v1;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    return objc_msgSend(a1, sel_invalidate);
  }
  uint64_t v5 = Strong;
  if (*(unsigned char *)(v1 + 32) != 1)
  {
    double v7 = *(double *)(v1 + 24);
    objc_msgSend(a1, sel_timestamp);
    double v9 = v8 - v7;
    objc_msgSend(*(id *)(v5 + 56), sel_duration);
    double v11 = v9 / v10;
    BOOL v12 = v10 <= 0.0;
    double v13 = 1.0;
    if (v12) {
      double v11 = 1.0;
    }
    if (v11 <= 1.0) {
      double v13 = v11;
    }
    if (v13 < 0.0) {
      double v14 = 0.0;
    }
    else {
      double v14 = v13;
    }
    uint64_t v15 = *(void *)(v1 + 40);
    uint64_t v16 = (void *)(v15 + OBJC_IVAR____TtC8NewsFeed23FormatDisplayLinkObject_storage);
    swift_beginAccess();
    *uint64_t v16 = MEMORY[0x1E4FBC868];
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)(v5 + 56), sel_applyForTime_presentationObject_modelObject_, v15, *(void *)(v5 + 48), v14);
    uint64_t v17 = self;
    objc_msgSend(v17, sel_begin);
    objc_msgSend(v17, sel_setDisableActions_, 1);
    id v18 = *(id *)(v5 + 32);
    sub_1C1081050(v18);

    unint64_t v19 = *(void *)(v5 + 40);
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      id result = (id)sub_1C15204BC();
      uint64_t v20 = (uint64_t)result;
      if (!result) {
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain();
      if (!v20) {
        goto LABEL_28;
      }
    }
    if (v20 < 1)
    {
      __break(1u);
      return result;
    }
    for (uint64_t i = 0; i != v20; ++i)
    {
      if ((v19 & 0xC000000000000001) != 0) {
        id v22 = (id)MEMORY[0x1C18C7CB0](i, v19);
      }
      else {
        id v22 = *(id *)(v19 + 8 * i + 32);
      }
      id v23 = v22;
      sub_1C1081050(v22);
    }
LABEL_28:
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_commit);
    if (v14 >= 1.0)
    {
      *(void *)(v2 + 24) = 1;
      *(unsigned char *)(v2 + 32) = 1;
      objc_msgSend(a1, sel_invalidate);
      id v26 = *(void (**)(uint64_t))(v5 + 64);
      swift_retain();
      v26(v5);
      swift_release();
    }
    return (id)swift_release();
  }
  if (*(void *)(v1 + 24))
  {
    objc_msgSend(a1, sel_invalidate);
    return (id)swift_release();
  }
  objc_msgSend(a1, sel_timestamp);
  uint64_t v25 = v24;
  id result = (id)swift_release();
  *(void *)(v1 + 24) = v25;
  *(unsigned char *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1C110D2D4()
{
  swift_weakDestroy();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatDisplayLinkAnimation.Container()
{
  return self;
}

ValueMetadata *type metadata accessor for FormatDisplayLinkAnimation.Container.State()
{
  return &type metadata for FormatDisplayLinkAnimation.Container.State;
}

uint64_t FormatLayeredMediaFilter.layeredMediaFilter(contextLayoutOptions:)@<X0>(uint64_t a1@<X0>, id (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v7 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v8 = v2[2];
  if ((v8 & 0xF000000000000007) == 0xF000000000000007)
  {
    uint64_t v17 = a2;
    sub_1BFDC11A4(v7);
    sub_1BFEF683C(v6);
    uint64_t v9 = sub_1BFEF683C(v8);
    double v10 = 0.0;
  }
  else
  {
    sub_1BFDC11A4(v7);
    sub_1BFEF683C(v6);
    sub_1BFEF683C(v8);
    sub_1BFEF683C(v8);
    double v11 = FormatFloat.value(contextLayoutOptions:)(a1);
    if (v3)
    {
      sub_1BFDC11BC(v7);
      sub_1BFEF68C0(v6);
      sub_1BFEF68C0(v8);
      return sub_1BFEF68C0(v8);
    }
    double v10 = v11;
    uint64_t v17 = a2;
    uint64_t v9 = sub_1BFEF68C0(v8);
  }
  double v13 = 0.0;
  if ((v6 & 0xF000000000000007) != 0xF000000000000007)
  {
    swift_retain();
    double v14 = FormatFloat.value(contextLayoutOptions:)(a1);
    if (v3)
    {
      sub_1BFDC11BC(v7);
      sub_1BFEF68C0(v6);
      sub_1BFEF68C0(v8);
      return sub_1BFEF68C0(v6);
    }
    double v13 = v14;
    uint64_t v9 = sub_1BFEF68C0(v6);
  }
  if ((~v7 & 0xF000000000000007) != 0) {
    Class v15 = FormatColor.color.getter(v9);
  }
  else {
    Class v15 = 0;
  }
  uint64_t v16 = swift_allocObject();
  *(double *)(v16 + 16) = v10;
  *(unsigned char *)(v16 + 24) = (v8 & 0xF000000000000007) == 0xF000000000000007;
  *(double *)(v16 + 32) = v13;
  *(unsigned char *)(v16 + 40) = (v6 & 0xF000000000000007) == 0xF000000000000007;
  *(void *)(v16 + 48) = v15;
  sub_1BFDC11BC(v7);
  sub_1BFEF68C0(v6);
  uint64_t result = sub_1BFEF68C0(v8);
  *uint64_t v17 = sub_1C110D644;
  v17[1] = (id (*)(uint64_t))v16;
  return result;
}

BOOL static FormatLayeredMediaFilter.== infix(_:_:)(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a2 + 2);
  long long v7 = *a1;
  uint64_t v8 = v2;
  long long v5 = *a2;
  uint64_t v6 = v3;
  return _s8NewsFeed24FormatLayeredMediaFilterO10MonochromeV2eeoiySbAE_AEtFZ_0((uint64_t *)&v7, (uint64_t *)&v5);
}

BOOL sub_1C110D598(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a2 + 2);
  long long v7 = *a1;
  uint64_t v8 = v2;
  long long v5 = *a2;
  uint64_t v6 = v3;
  return _s8NewsFeed24FormatLayeredMediaFilterO10MonochromeV2eeoiySbAE_AEtFZ_0((uint64_t *)&v7, (uint64_t *)&v5);
}

uint64_t FormatLayeredMediaFilter.Monochrome.color.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  return sub_1BFDC11A4(v2);
}

uint64_t FormatLayeredMediaFilter.Monochrome.amount.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  *a1 = v2;
  return sub_1BFEF683C(v2);
}

uint64_t FormatLayeredMediaFilter.Monochrome.brightnessAdjustment.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *a1 = v2;
  return sub_1BFEF683C(v2);
}

uint64_t sub_1C110D60C()
{
  return swift_deallocObject();
}

id sub_1C110D644(uint64_t a1)
{
  return sub_1C12038F0(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(void **)(v1 + 48));
}

BOOL _s8NewsFeed24FormatLayeredMediaFilterO10MonochromeV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  if ((~*a1 & 0xF000000000000007) == 0)
  {
    if ((~v6 & 0xF000000000000007) == 0) {
      goto LABEL_8;
    }
LABEL_6:
    sub_1BFDC11A4(v6);
    sub_1BFDC11BC(v3);
    sub_1BFDC11BC(v6);
    return 0;
  }
  uint64_t v14 = *a1;
  if ((~v6 & 0xF000000000000007) == 0)
  {
    swift_retain();
    goto LABEL_6;
  }
  uint64_t v13 = v6;
  swift_retain_n();
  char v8 = static FormatColor.== infix(_:_:)(&v14, (unint64_t *)&v13);
  swift_release();
  sub_1BFDC11BC(v3);
  if ((v8 & 1) == 0) {
    return 0;
  }
LABEL_8:
  if ((~v2 & 0xF000000000000007) != 0)
  {
    uint64_t v14 = v2;
    if ((~v5 & 0xF000000000000007) != 0)
    {
      uint64_t v13 = v5;
      swift_retain_n();
      char v10 = static FormatFloat.== infix(_:_:)(&v14, (unint64_t *)&v13);
      swift_release();
      sub_1BFEF68C0(v2);
      if ((v10 & 1) == 0) {
        return 0;
      }
      goto LABEL_15;
    }
    swift_retain();
LABEL_13:
    sub_1BFEF683C(v5);
    sub_1BFEF68C0(v2);
    uint64_t v9 = v5;
LABEL_21:
    sub_1BFEF68C0(v9);
    return 0;
  }
  if ((~v5 & 0xF000000000000007) != 0) {
    goto LABEL_13;
  }
LABEL_15:
  if ((~v4 & 0xF000000000000007) == 0)
  {
    if ((~v7 & 0xF000000000000007) == 0) {
      return 1;
    }
    goto LABEL_20;
  }
  uint64_t v14 = v4;
  if ((~v7 & 0xF000000000000007) == 0)
  {
    swift_retain();
LABEL_20:
    sub_1BFEF683C(v7);
    sub_1BFEF68C0(v4);
    uint64_t v9 = v7;
    goto LABEL_21;
  }
  uint64_t v13 = v7;
  swift_retain_n();
  char v12 = static FormatFloat.== infix(_:_:)(&v14, (unint64_t *)&v13);
  swift_release();
  sub_1BFEF68C0(v4);
  return (v12 & 1) != 0;
}

unint64_t sub_1C110D824(uint64_t a1)
{
  unint64_t result = sub_1C110D84C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C110D84C()
{
  unint64_t result = qword_1EA1AB940;
  if (!qword_1EA1AB940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB940);
  }
  return result;
}

uint64_t sub_1C110D8A0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C110D9F0(a1, a2, a3, (uint64_t (*)(void))sub_1C0070518, (uint64_t (*)(void))sub_1C007056C, (uint64_t (*)(void))sub_1C110D8E0);
}

unint64_t sub_1C110D8E0()
{
  unint64_t result = qword_1EA1AB948;
  if (!qword_1EA1AB948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB948);
  }
  return result;
}

unint64_t sub_1C110D934(uint64_t a1)
{
  unint64_t result = sub_1C110D95C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C110D95C()
{
  unint64_t result = qword_1EA1AB950;
  if (!qword_1EA1AB950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB950);
  }
  return result;
}

uint64_t sub_1C110D9B0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C110D9F0(a1, a2, a3, (uint64_t (*)(void))sub_1BFC8C3F4, (uint64_t (*)(void))sub_1C00705D8, (uint64_t (*)(void))sub_1C110DA44);
}

uint64_t sub_1C110D9F0(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C110DA44()
{
  unint64_t result = qword_1EA1AB958;
  if (!qword_1EA1AB958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB958);
  }
  return result;
}

uint64_t sub_1C110DA9C(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for FormatLayeredMediaFilter()
{
  return &type metadata for FormatLayeredMediaFilter;
}

void *_s8NewsFeed24FormatLayeredMediaFilterO10MonochromeVwca_0(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = *a2 & 0xF000000000000007;
  if ((~*a1 & 0xF000000000000007) == 0)
  {
    if (v5 != 0xF000000000000007)
    {
      *a1 = v4;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v5 == 0xF000000000000007)
  {
    sub_1C036EDB0((uint64_t)a1);
    uint64_t v4 = *a2;
LABEL_6:
    *a1 = v4;
    goto LABEL_8;
  }
  *a1 = v4;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v6 = a1 + 1;
  uint64_t v7 = a2[1];
  unint64_t v8 = v7 & 0xF000000000000007;
  if ((~a1[1] & 0xF000000000000007) == 0)
  {
    if (v8 != 0xF000000000000007)
    {
      *uint64_t v6 = v7;
      swift_retain();
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v8 == 0xF000000000000007)
  {
    sub_1C110DA9C((uint64_t)(a1 + 1));
    uint64_t v7 = a2[1];
LABEL_13:
    *uint64_t v6 = v7;
    goto LABEL_15;
  }
  *uint64_t v6 = v7;
  swift_retain();
  swift_release();
LABEL_15:
  uint64_t v9 = a1 + 2;
  uint64_t v10 = a2[2];
  unint64_t v11 = v10 & 0xF000000000000007;
  if ((~a1[2] & 0xF000000000000007) != 0)
  {
    if (v11 != 0xF000000000000007)
    {
      *uint64_t v9 = v10;
      swift_retain();
      swift_release();
      return a1;
    }
    sub_1C110DA9C((uint64_t)(a1 + 2));
    uint64_t v10 = a2[2];
    goto LABEL_20;
  }
  if (v11 == 0xF000000000000007)
  {
LABEL_20:
    *uint64_t v9 = v10;
    return a1;
  }
  *uint64_t v9 = v10;
  swift_retain();
  return a1;
}

void *_s8NewsFeed24FormatLayeredMediaFilterO10MonochromeVwta_0(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if ((~*a1 & 0xF000000000000007) == 0) {
    goto LABEL_4;
  }
  if ((~v4 & 0xF000000000000007) == 0)
  {
    sub_1C036EDB0((uint64_t)a1);
LABEL_4:
    *a1 = v4;
    goto LABEL_6;
  }
  *a1 = v4;
  swift_release();
LABEL_6:
  unint64_t v5 = a1 + 1;
  uint64_t v6 = a2[1];
  if ((~a1[1] & 0xF000000000000007) == 0)
  {
LABEL_9:
    *unint64_t v5 = v6;
    goto LABEL_11;
  }
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1C110DA9C((uint64_t)(a1 + 1));
    goto LABEL_9;
  }
  *unint64_t v5 = v6;
  swift_release();
LABEL_11:
  uint64_t v7 = a1 + 2;
  uint64_t v8 = a2[2];
  if ((~a1[2] & 0xF000000000000007) != 0)
  {
    if ((~v8 & 0xF000000000000007) != 0)
    {
      *uint64_t v7 = v8;
      swift_release();
      return a1;
    }
    sub_1C110DA9C((uint64_t)(a1 + 2));
  }
  *uint64_t v7 = v8;
  return a1;
}

ValueMetadata *type metadata accessor for FormatLayeredMediaFilter.Monochrome()
{
  return &type metadata for FormatLayeredMediaFilter.Monochrome;
}

void *sub_1C110DD58(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  if ((v1 & 0xF000000000000007) == 0xD000000000000007)
  {
    uint64_t v2 = MEMORY[0x1E4FBC860];
    return sub_1C131B79C(v2);
  }
  else
  {
    uint64_t v4 = a1[2];
    uint64_t v5 = *a1;
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFF9E398(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFF9E398(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v6);
    sub_1C0181BEC(0);
    uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 72);
    unint64_t v9 = (*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C152A660;
    sub_1BFDC11A4(v5);
    sub_1BFEF683C(v1);
    sub_1BFEF683C(v4);
    sub_1C0433600(1701869908, 0xE400000000000000, 0x6F7268636F6E6F4DLL, 0xEA0000000000656DLL, (void *)(v10 + v9));
    uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
    char v12 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    v12(v10 + v9, 0, 1, v11);
    sub_1C0433BC8(0x726F6C6F43, 0xE500000000000000, v5, (void *)(v10 + v9 + v8));
    v12(v10 + v9 + v8, 0, 1, v11);
    sub_1BFDC11A4(v5);
    sub_1BFEF683C(v1);
    sub_1C043854C(0x746E756F6D41, 0xE600000000000000, v1, (void *)(v10 + v9 + 2 * v8));
    v12(v10 + v9 + 2 * v8, 0, 1, v11);
    sub_1BFEF683C(v4);
    sub_1C043854C(0xD000000000000017, 0x80000001C1635440, v4, (void *)(v10 + v9 + 3 * v8));
    v12(v10 + v9 + 3 * v8, 0, 1, v11);
    sub_1C09BCFA4(0x7265746C6946, 0xE600000000000000, 0, 0, v10, v17);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(inited + 64) = &off_1F1BDEC90;
    uint64_t v13 = swift_allocObject();
    *(void *)(inited + 32) = v13;
    *(void *)(v13 + 48) = v18;
    long long v14 = v17[1];
    *(_OWORD *)(v13 + 16) = v17[0];
    *(_OWORD *)(v13 + 32) = v14;
    Class v15 = sub_1C131B79C(inited);
    swift_setDeallocating();
    sub_1C01004A4(0);
    swift_arrayDestroy();
    sub_1C110E184(v5, v1, v4);
    return v15;
  }
}

uint64_t sub_1C110E13C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C110E184(uint64_t result, uint64_t a2, uint64_t a3)
{
  if ((a2 & 0xF000000000000007) != 0xD000000000000007)
  {
    sub_1BFDC11BC(result);
    sub_1BFEF68C0(a2);
    return sub_1BFEF68C0(a3);
  }
  return result;
}

uint64_t sub_1C110E1E0()
{
  sub_1C110E5BC();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C110E618(0, &qword_1EB86F9F8, (void (*)(void))sub_1C04561E0);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB86FA38 = result;
  return result;
}

uint64_t static Commands.User.notificationsState.getter()
{
  return sub_1BFC387A8(qword_1EB86FA48);
}

uint64_t sub_1C110E324()
{
  sub_1C110E5BC();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C110E618(0, &qword_1EB86F9F0, (void (*)(void))sub_1C019EB6C);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB86FA20 = result;
  return result;
}

uint64_t static Commands.User.familyStatusState.getter()
{
  return sub_1BFC387A8(&qword_1EB86FA30);
}

uint64_t sub_1C110E468()
{
  sub_1C110E5BC();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C110E618(0, &qword_1EB86F9E8, (void (*)(void))sub_1C0A427F0);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB86FA08 = result;
  return result;
}

uint64_t static Commands.User.newslettersState.getter()
{
  return sub_1BFC387A8(&qword_1EB86FA18);
}

ValueMetadata *type metadata accessor for Commands.User()
{
  return &type metadata for Commands.User;
}

void sub_1C110E5BC()
{
  if (!qword_1EB87C870)
  {
    unint64_t v0 = sub_1C151C98C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87C870);
    }
  }
}

void sub_1C110E618(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1C151A23C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t SportsBracketDataVisualization.__allocating_init(competitorTags:umcCanonicalId:leagueTag:championshipTag:embedUrl:urlDataSources:events:metadata:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t *a10)
{
  uint64_t v17 = swift_allocObject();
  SportsBracketDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:championshipTag:embedUrl:urlDataSources:events:metadata:config:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  return v17;
}

uint64_t SportsBracketDataVisualization.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsBracketDataVisualization.competitorTags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsBracketDataVisualization.umcCanonicalId.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsBracketDataVisualization.leagueTag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsBracketDataVisualization.championshipTag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsBracketDataVisualization.embedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C025C6EC(&OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_embedUrl, a1);
}

uint64_t SportsBracketDataVisualization.urlDataSources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsBracketDataVisualization.events.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsBracketDataVisualization.metadata.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_metadata);
  *a1 = v2;
  return sub_1C09D27BC(v2);
}

uint64_t SportsBracketDataVisualization.config.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 8);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 16);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 24);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 32);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 40);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1C025C670(v2, v3);
}

uint64_t SportsBracketDataVisualization.configuredEmbedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C025C6EC(&OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_configuredEmbedUrl, a1);
}

void *SportsBracketDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:championshipTag:embedUrl:urlDataSources:events:metadata:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t *a10)
{
  uint64_t v47 = a7;
  uint64_t v48 = a8;
  uint64_t v54 = a6;
  uint64_t v55 = a1;
  uint64_t v56 = a5;
  uint64_t v14 = sub_1C1515FDC();
  __n128 v15 = MEMORY[0x1F4188790](v14);
  uint64_t v50 = a3;
  uint64_t v51 = (uint64_t)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = *a9;
  uint64_t v18 = *a10;
  uint64_t v17 = a10[1];
  uint64_t v20 = a10[2];
  uint64_t v19 = a10[3];
  uint64_t v21 = a10[4];
  uint64_t v22 = a10[5];
  uint64_t v23 = v54;
  v10[4] = v55;
  v10[5] = a2;
  uint64_t v49 = a2;
  uint64_t v24 = v17;
  v10[6] = a3;
  v10[7] = a4;
  uint64_t v55 = a4;
  unsigned char v10[8] = v56;
  uint64_t v52 = v26;
  uint64_t v53 = v25;
  (*(void (**)(uint64_t, uint64_t, __n128))(v26 + 16))((uint64_t)v10 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_embedUrl, v23, v15);
  uint64_t v27 = 0;
  *(void *)((char *)v10 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_urlDataSources) = v47;
  *(void *)((char *)v10 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_events) = v48;
  *(void *)((char *)v10 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_metadata) = v44;
  long long v28 = (void *)((char *)v10 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config);
  uint64_t *v28 = v18;
  v28[1] = v24;
  void v28[2] = v20;
  v28[3] = v19;
  v28[4] = v21;
  v28[5] = v22;
  uint64_t v29 = v18;
  uint64_t v57 = v18;
  uint64_t v58 = v24;
  uint64_t v59 = v20;
  uint64_t v60 = v19;
  uint64_t v30 = v19;
  uint64_t v61 = v21;
  uint64_t v62 = v22;
  uint64_t v31 = v22;
  if (v24 && v20) {
    uint64_t v27 = swift_unknownObjectRetain();
  }
  uint64_t v32 = (void *)v27;
  uint64_t v43 = v18;
  uint64_t v45 = v30;
  uint64_t v46 = v21;
  sub_1C025C670(v18, v24);
  swift_unknownObjectRetain();
  uint64_t v33 = v50;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v34 = v54;
  uint64_t v35 = sub_1C0B9CF88(v49, v33, v54, (uint64_t)&v57, v32);
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v10[2] = v35;
  uint64_t v10[3] = v37;
  uint64_t v57 = v29;
  uint64_t v58 = v24;
  uint64_t v59 = v20;
  uint64_t v60 = v45;
  uint64_t v61 = v46;
  uint64_t v62 = v31;
  uint64_t v38 = v51;
  sub_1C0B98938(v34, &v57, 0xD000000000000018, 0x80000001C16354E0, v51);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v40 = v52;
  uint64_t v39 = v53;
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v34, v53);
  sub_1C025EF94(v43, v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))((uint64_t)v10 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_configuredEmbedUrl, v38, v39);
  return v10;
}

uint64_t SportsBracketDataVisualization.with(metadata:)(uint64_t *a1)
{
  uint64_t v3 = sub_1C1515FDC();
  __n128 v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v6;
  uint64_t v7 = *a1;
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[6];
  uint64_t v33 = v1[5];
  uint64_t v11 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v30 = v8;
  uint64_t v31 = v10;
  (*(void (**)(char *, uint64_t, __n128))(v12 + 16))(v6, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_embedUrl, v4);
  uint64_t v29 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_urlDataSources);
  uint64_t v13 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_events);
  uint64_t v14 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config);
  uint64_t v26 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 8);
  uint64_t v27 = v14;
  uint64_t v15 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 16);
  uint64_t v16 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 24);
  uint64_t v18 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 32);
  uint64_t v17 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 40);
  v34[0] = v14;
  v34[1] = v26;
  v34[2] = v15;
  v34[3] = v16;
  v34[4] = v18;
  v34[5] = v17;
  uint64_t v35 = v7;
  uint64_t v28 = swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t v19 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v20 = v31;
  swift_unknownObjectRetain();
  uint64_t v21 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C025C670(v27, v26);
  uint64_t v22 = v21;
  uint64_t v23 = v28;
  SportsBracketDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:championshipTag:embedUrl:urlDataSources:events:metadata:config:)(v19, v33, v9, v11, v20, (uint64_t)v32, v22, v13, &v35, v34);
  return v23;
}

uint64_t SportsBracketDataVisualization.with(config:)(void *a1)
{
  uint64_t v3 = sub_1C1515FDC();
  __n128 v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v6;
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v9 = a1[3];
  v23[0] = *a1;
  v23[1] = v8;
  uint64_t v10 = a1[4];
  uint64_t v11 = a1[5];
  uint64_t v12 = v1[4];
  v23[2] = v9;
  uint64_t v24 = v12;
  uint64_t v29 = v1[5];
  uint64_t v25 = v1[6];
  uint64_t v26 = v7;
  uint64_t v13 = v1[8];
  uint64_t v27 = v1[7];
  (*(void (**)(char *, uint64_t, __n128))(v14 + 16))(v6, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_embedUrl, v4);
  uint64_t v15 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_urlDataSources);
  uint64_t v16 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_events);
  uint64_t v17 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_metadata);
  v30[5] = v11;
  uint64_t v31 = v17;
  v30[0] = v23[0];
  v30[1] = v7;
  v30[2] = v8;
  v30[3] = v9;
  v30[4] = v10;
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = v24;
  swift_bridgeObjectRetain();
  uint64_t v20 = v25;
  swift_bridgeObjectRetain();
  uint64_t v21 = v27;
  swift_unknownObjectRetain();
  sub_1C09D27BC(v17);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SportsBracketDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:championshipTag:embedUrl:urlDataSources:events:metadata:config:)(v19, v29, v20, v21, v13, (uint64_t)v28, v15, v16, &v31, v30);
  return v18;
}

uint64_t SportsBracketDataVisualization.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  SportsBracketDataVisualization.init(from:)(a1);
  return v2;
}

char *SportsBracketDataVisualization.init(from:)(void *a1)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v61 = v2;
  uint64_t v62 = v4;
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v56 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v52 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v53 = (char *)v50 - v8;
  sub_1C1111230(0, (unint64_t *)&unk_1EB863F70, (uint64_t (*)(uint64_t))sub_1C0B9BC74, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v54 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v50 - v12;
  sub_1C1111294(0);
  uint64_t v57 = *(void *)(v14 - 8);
  uint64_t v58 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v60 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1111568(0, &qword_1EA1AB968, (uint64_t (*)(void))sub_1C11112C8, (uint64_t)&type metadata for SportsBracketDataVisualization.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v17 = v16;
  uint64_t v59 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v50 - v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11112C8();
  uint64_t v20 = v1;
  uint64_t v21 = v61;
  sub_1C1520EBC();
  if (v21)
  {
    swift_deallocPartialClassInstance();
    uint64_t v49 = (uint64_t)a1;
  }
  else
  {
    uint64_t v22 = v57;
    uint64_t v23 = v13;
    uint64_t v61 = a1;
    LOBYTE(v63) = 0;
    sub_1C111131C((unint64_t *)&unk_1EB863EF0, sub_1C1111294);
    uint64_t v24 = v58;
    sub_1C15206EC();
    uint64_t v25 = v60;
    sub_1C151948C();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v24);
    *((void *)v20 + 4) = v63;
    LOBYTE(v63) = 1;
    uint64_t v26 = v19;
    uint64_t v27 = v17;
    *((void *)v20 + 5) = sub_1C152069C();
    *((void *)v20 + 6) = v28;
    sub_1C0B9BC74(0);
    uint64_t v30 = v29;
    LOBYTE(v63) = 5;
    sub_1C111131C((unint64_t *)&unk_1EB863F50, sub_1C0B9BC74);
    uint64_t v31 = (uint64_t)v23;
    uint64_t v32 = v30;
    sub_1C152065C();
    uint64_t v60 = v26;
    uint64_t v58 = v27;
    uint64_t v33 = *(void *)(v30 - 8);
    uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
    v50[1] = v33 + 48;
    uint64_t v51 = v34;
    if (v34(v31, 1, v32) == 1)
    {
      sub_1C09D5D58(v31);
      uint64_t v35 = 0;
    }
    else
    {
      sub_1C151948C();
      uint64_t v35 = v63;
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
    }
    uint64_t v36 = (uint64_t)v54;
    *((void *)v20 + 7) = v35;
    LOBYTE(v63) = 6;
    uint64_t v57 = 0;
    sub_1C152065C();
    if (v51(v36, 1, v32) == 1)
    {
      sub_1C09D5D58(v36);
      uint64_t v37 = 0;
    }
    else
    {
      sub_1C151948C();
      uint64_t v37 = v63;
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v36, v32);
    }
    uint64_t v38 = v55;
    uint64_t v39 = v56;
    uint64_t v40 = v53;
    *((void *)v20 + 8) = v37;
    LOBYTE(v63) = 2;
    sub_1C111131C((unint64_t *)&unk_1EB871120, MEMORY[0x1E4F276F0]);
    sub_1C15206EC();
    uint64_t v41 = v39;
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
    v42(&v20[OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_embedUrl], v40, v41);
    sub_1C00BB894(0);
    char v66 = 3;
    sub_1C1111398(&qword_1EB86B2E0, sub_1C00BB894, (void (*)(void))sub_1C1111364);
    sub_1C15206EC();
    *(void *)&v20[OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_urlDataSources] = v63;
    sub_1C04452FC(0);
    char v66 = 4;
    sub_1C1111398((unint64_t *)&unk_1EA1AB980, sub_1C04452FC, (void (*)(void))sub_1C1111408);
    sub_1C15206EC();
    *(void *)&v20[OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_events] = v63;
    char v66 = 7;
    sub_1C111143C();
    sub_1C152065C();
    *(void *)&v20[OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_metadata] = v63;
    char v66 = 8;
    sub_1C025F15C();
    sub_1C152065C();
    uint64_t v54 = v20;
    uint64_t v43 = &v20[OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config];
    long long v44 = v64;
    *(_OWORD *)uint64_t v43 = v63;
    *((_OWORD *)v43 + 1) = v44;
    *((_OWORD *)v43 + 2) = v65;
    LOBYTE(v63) = 9;
    uint64_t v45 = sub_1C152069C();
    uint64_t v46 = v54;
    *((void *)v54 + 2) = v45;
    *((void *)v46 + 3) = v47;
    LOBYTE(v63) = 10;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v58);
    uint64_t v20 = v54;
    v42(&v54[OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_configuredEmbedUrl], v52, v56);
    uint64_t v49 = (uint64_t)v61;
  }
  __swift_destroy_boxed_opaque_existential_1(v49);
  return v20;
}

uint64_t SportsBracketDataVisualization.encode(to:)(void *a1)
{
  sub_1C1111230(0, (unint64_t *)&unk_1EB863F70, (uint64_t (*)(uint64_t))sub_1C0B9BC74, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v30 = (uint64_t)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v31 = (uint64_t)&v30 - v5;
  uint64_t v6 = sub_1C151829C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1111294(0);
  uint64_t v35 = v10;
  uint64_t v33 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1111568(0, (unint64_t *)&unk_1EA1AB9A0, (uint64_t (*)(void))sub_1C11112C8, (uint64_t)&type metadata for SportsBracketDataVisualization.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v34 = v13;
  uint64_t v32 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v30 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11112C8();
  sub_1C1520F0C();
  *(void *)&long long v38 = *(void *)(v37 + 32);
  uint64_t v16 = qword_1EB85E820;
  swift_bridgeObjectRetain_n();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB85AAB0);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v17, v6);
  MEMORY[0x1F4188790](v18);
  sub_1C0258630();
  *(&v30 - 2) = v19;
  *(&v30 - 1) = sub_1C111131C((unint64_t *)&unk_1EB86B320, (void (*)(uint64_t))sub_1C0258630);
  swift_getKeyPath();
  sub_1C15194AC();
  swift_bridgeObjectRelease();
  LOBYTE(v38) = 0;
  sub_1C111131C(&qword_1EB863EE8, sub_1C1111294);
  uint64_t v21 = v34;
  uint64_t v20 = v35;
  uint64_t v22 = v36;
  sub_1C152080C();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v20);
  if (!v22)
  {
    uint64_t v23 = v37;
    LOBYTE(v38) = 1;
    sub_1C15207CC();
    uint64_t v24 = swift_unknownObjectRetain();
    uint64_t v25 = v31;
    sub_1C09D3C50(v24, v31);
    LOBYTE(v38) = 5;
    sub_1C0B9BC74(0);
    sub_1C111131C((unint64_t *)&unk_1EB863F40, sub_1C0B9BC74);
    sub_1C152078C();
    sub_1C09D5D58(v25);
    uint64_t v26 = swift_unknownObjectRetain();
    uint64_t v27 = v30;
    sub_1C09D3C50(v26, v30);
    LOBYTE(v38) = 6;
    sub_1C152078C();
    sub_1C09D5D58(v27);
    LOBYTE(v38) = 2;
    sub_1C1515FDC();
    sub_1C111131C((unint64_t *)&unk_1EB8710F0, MEMORY[0x1E4F276F0]);
    sub_1C152080C();
    *(void *)&long long v38 = *(void *)(v23 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_urlDataSources);
    char v41 = 3;
    sub_1C00BB894(0);
    sub_1C1111398((unint64_t *)&qword_1EB86B2D0, sub_1C00BB894, (void (*)(void))sub_1C11114AC);
    sub_1C152080C();
    *(void *)&long long v38 = *(void *)(v23 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_events);
    char v41 = 4;
    sub_1C04452FC(0);
    sub_1C1111398(&qword_1EA1AB9B0, sub_1C04452FC, (void (*)(void))sub_1C11114E0);
    sub_1C152078C();
    long long v29 = *(_OWORD *)(v23 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 16);
    long long v38 = *(_OWORD *)(v23 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config);
    long long v39 = v29;
    long long v40 = *(_OWORD *)(v23 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 32);
    char v41 = 8;
    sub_1C025F3F0();
    sub_1C152078C();
    LOBYTE(v38) = 9;
    sub_1C15207CC();
    LOBYTE(v38) = 10;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v15, v21);
}

unint64_t sub_1C111039C(char a1)
{
  unint64_t result = 0x74697465706D6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F6E6143636D75;
      break;
    case 2:
      unint64_t result = 0x6C72556465626D65;
      break;
    case 3:
      unint64_t result = 0x53617461446C7275;
      break;
    case 4:
      unint64_t result = 0x73746E657665;
      break;
    case 5:
      unint64_t result = 0x615465756761656CLL;
      break;
    case 6:
      unint64_t result = 0x6E6F69706D616863;
      break;
    case 7:
      unint64_t result = 0x617461646174656DLL;
      break;
    case 8:
      unint64_t result = 0x6769666E6F63;
      break;
    case 9:
      unint64_t result = 0x696669746E656469;
      break;
    case 10:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C1110528(char a1)
{
  unint64_t result = 0x74697465706D6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F6E6143636D75;
      break;
    case 2:
      unint64_t result = 0x6C72556465626D65;
      break;
    case 3:
      unint64_t result = 0x53617461446C7275;
      break;
    case 4:
      unint64_t result = 0x73746E657665;
      break;
    case 5:
      unint64_t result = 0x615465756761656CLL;
      break;
    case 6:
      unint64_t result = 0x6E6F69706D616863;
      break;
    case 7:
      unint64_t result = 0x617461646174656DLL;
      break;
    case 8:
      unint64_t result = 0x6769666E6F63;
      break;
    case 9:
      unint64_t result = 0x696669746E656469;
      break;
    case 10:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C11106B4(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1C111039C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C111039C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C1110740()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C111039C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C11107A4()
{
  sub_1C111039C(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C11107F8()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C111039C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C1110858@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C1111B48();
  *a1 = result;
  return result;
}

unint64_t sub_1C1110888@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C111039C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C11108B4()
{
  return sub_1C1110528(*v0);
}

uint64_t sub_1C11108BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C1111B48();
  *a1 = result;
  return result;
}

uint64_t sub_1C11108E4(uint64_t a1)
{
  unint64_t v2 = sub_1C11112C8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1110920(uint64_t a1)
{
  unint64_t v2 = sub_1C11112C8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsBracketDataVisualization.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_embedUrl;
  uint64_t v2 = sub_1C1515FDC();
  unint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C09D5D48(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_metadata));
  sub_1C025EF94(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config), *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 8));
  v3(v0 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_configuredEmbedUrl, v2);
  return v0;
}

uint64_t SportsBracketDataVisualization.__deallocating_deinit()
{
  SportsBracketDataVisualization.deinit();
  return swift_deallocClassInstance();
}

char *sub_1C1110ABC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = SportsBracketDataVisualization.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C1110B14(void *a1)
{
  return SportsBracketDataVisualization.encode(to:)(a1);
}

uint64_t static SportsBracketDataVisualization.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t SportsBracketDataVisualizationMetadata.backingTag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsBracketDataVisualizationMetadata.init(backingTag:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t SportsBracketDataVisualizationMetadata.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v21 = a2;
  sub_1C1111230(0, (unint64_t *)&unk_1EB863F70, (uint64_t (*)(uint64_t))sub_1C0B9BC74, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v22 = (uint64_t)&v21 - v5;
  sub_1C1111568(0, &qword_1EA1AB9B8, (uint64_t (*)(void))sub_1C1111514, (uint64_t)&type metadata for SportsBracketDataVisualizationMetadata.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v21 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1111514();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v11 = v8;
    uint64_t v12 = v21;
    sub_1C0B9BC74(0);
    uint64_t v14 = v13;
    sub_1C111131C((unint64_t *)&unk_1EB863F50, sub_1C0B9BC74);
    sub_1C152065C();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v22, 1, v14) == 1)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v7);
      sub_1C09D5D58(v22);
      *uint64_t v12 = 0;
    }
    else
    {
      uint64_t v16 = v22;
      sub_1C151948C();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v7);
      uint64_t v17 = v23;
      uint64_t v18 = v16;
      uint64_t v19 = v21;
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
      *uint64_t v19 = v17;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t SportsBracketDataVisualizationMetadata.encode(to:)(void *a1)
{
  sub_1C1111230(0, (unint64_t *)&unk_1EB863F70, (uint64_t (*)(uint64_t))sub_1C0B9BC74, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v12 - v3;
  sub_1C1111568(0, (unint64_t *)&unk_1EA1AB9C8, (uint64_t (*)(void))sub_1C1111514, (uint64_t)&type metadata for SportsBracketDataVisualizationMetadata.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1111514();
  sub_1C1520F0C();
  uint64_t v10 = swift_unknownObjectRetain();
  sub_1C09D3C50(v10, (uint64_t)v4);
  sub_1C0B9BC74(0);
  sub_1C111131C((unint64_t *)&unk_1EB863F40, sub_1C0B9BC74);
  sub_1C152078C();
  sub_1C09D5D58((uint64_t)v4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C11110DC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1C1111130@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1C1111188(uint64_t a1)
{
  unint64_t v2 = sub_1C1111514();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11111C4(uint64_t a1)
{
  unint64_t v2 = sub_1C1111514();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C1111200@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SportsBracketDataVisualizationMetadata.init(from:)(a1, a2);
}

uint64_t sub_1C1111218(void *a1)
{
  return SportsBracketDataVisualizationMetadata.encode(to:)(a1);
}

void sub_1C1111230(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1111294(uint64_t a1)
{
}

unint64_t sub_1C11112C8()
{
  unint64_t result = qword_1EA1AB970;
  if (!qword_1EA1AB970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB970);
  }
  return result;
}

uint64_t sub_1C111131C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1111364()
{
  return sub_1C111131C(&qword_1EB86A8C0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource);
}

uint64_t sub_1C1111398(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1111408()
{
  return sub_1C111131C((unint64_t *)&unk_1EB868798, (void (*)(uint64_t))type metadata accessor for SportsScoreDataVisualization);
}

unint64_t sub_1C111143C()
{
  unint64_t result = qword_1EA1AB990;
  if (!qword_1EA1AB990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB990);
  }
  return result;
}

uint64_t sub_1C1111494()
{
  return 16;
}

__n128 sub_1C11114A0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C11114AC()
{
  return sub_1C111131C((unint64_t *)&unk_1EB86A8B0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource);
}

uint64_t sub_1C11114E0()
{
  return sub_1C111131C(&qword_1EB868790, (void (*)(uint64_t))type metadata accessor for SportsScoreDataVisualization);
}

unint64_t sub_1C1111514()
{
  unint64_t result = qword_1EA1AB9C0;
  if (!qword_1EA1AB9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB9C0);
  }
  return result;
}

void sub_1C1111568(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C11115D0()
{
  return type metadata accessor for SportsBracketDataVisualization();
}

uint64_t type metadata accessor for SportsBracketDataVisualization()
{
  uint64_t result = qword_1EB88DB68;
  if (!qword_1EB88DB68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1111624()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SportsBracketDataVisualization(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SportsBracketDataVisualization);
}

uint64_t dispatch thunk of SportsBracketDataVisualization.__allocating_init(competitorTags:umcCanonicalId:leagueTag:championshipTag:embedUrl:urlDataSources:events:metadata:config:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of SportsBracketDataVisualization.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

ValueMetadata *type metadata accessor for SportsBracketDataVisualizationMetadata()
{
  return &type metadata for SportsBracketDataVisualizationMetadata;
}

unsigned char *storeEnumTagSinglePayload for SportsBracketDataVisualizationMetadata.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C11117FCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsBracketDataVisualizationMetadata.CodingKeys()
{
  return &type metadata for SportsBracketDataVisualizationMetadata.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SportsBracketDataVisualization.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1111900);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsBracketDataVisualization.CodingKeys()
{
  return &type metadata for SportsBracketDataVisualization.CodingKeys;
}

unint64_t sub_1C111193C()
{
  unint64_t result = qword_1EA1AB9D8;
  if (!qword_1EA1AB9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB9D8);
  }
  return result;
}

unint64_t sub_1C1111994()
{
  unint64_t result = qword_1EA1AB9E0;
  if (!qword_1EA1AB9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB9E0);
  }
  return result;
}

unint64_t sub_1C11119EC()
{
  unint64_t result = qword_1EA1AB9E8;
  if (!qword_1EA1AB9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB9E8);
  }
  return result;
}

unint64_t sub_1C1111A44()
{
  unint64_t result = qword_1EA1AB9F0;
  if (!qword_1EA1AB9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB9F0);
  }
  return result;
}

unint64_t sub_1C1111A9C()
{
  unint64_t result = qword_1EA1AB9F8;
  if (!qword_1EA1AB9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AB9F8);
  }
  return result;
}

unint64_t sub_1C1111AF4()
{
  unint64_t result = qword_1EA1ABA00;
  if (!qword_1EA1ABA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABA00);
  }
  return result;
}

uint64_t sub_1C1111B48()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

void sub_1C1111B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *a4;
  char v11 = *((unsigned char *)a4 + 8);
  char v12 = *((unsigned char *)a4 + 9);
  sub_1C151932C();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  *(void *)(v13 + 32) = v10;
  *(unsigned char *)(v13 + 40) = v11;
  *(unsigned char *)(v13 + 41) = v12;
  *(void *)(v13 + 48) = a6;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v14 = (void *)sub_1C1518E7C();
  sub_1C1518FFC();
  swift_release();
  swift_release();

  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = v10;
  *(unsigned char *)(v15 + 32) = v11;
  *(unsigned char *)(v15 + 33) = v12;
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v16 = (void *)sub_1C1518E7C();
  sub_1C151903C();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1C1111D34(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  if (a1)
  {
    uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_followingManager + 24);
    uint64_t v12 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_followingManager + 32);
    __swift_project_boxed_opaque_existential_1((void *)(a2 + OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_followingManager), v11);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(v12 + 32))(a3, a4 & 1, a5, v11, v12);
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_followingManager + 24);
    uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_followingManager + 32);
    __swift_project_boxed_opaque_existential_1((void *)(a2 + OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_followingManager), v6);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a3, v6, v7);
  }
}

uint64_t sub_1C1111E04()
{
  if (qword_1EB87B190 != -1) {
    swift_once();
  }
  swift_unknownObjectRetain();
  sub_1C151AD8C();
  return swift_unknownObjectRelease();
}

void sub_1C1111EE4(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1BFFDEB20();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C152C7F0;
  uint64_t v5 = sub_1C151C99C();
  uint64_t v7 = v6;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1BFE9C558();
  *(void *)(v4 + 64) = v9;
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  id v10 = objc_msgSend(a3, sel_identifier);
  uint64_t v11 = sub_1C151E62C();
  uint64_t v13 = v12;

  *(void *)(v4 + 96) = v8;
  *(void *)(v4 + 104) = v9;
  *(void *)(v4 + 72) = v11;
  *(void *)(v4 + 80) = v13;
  swift_getErrorValue();
  uint64_t v14 = sub_1C1520D3C();
  *(void *)(v4 + 136) = v8;
  *(void *)(v4 + 144) = v9;
  *(void *)(v4 + 112) = v14;
  *(void *)(v4 + 120) = v15;
  sub_1BFCCB57C();
  uint64_t v16 = (void *)sub_1C151FD3C();
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
}

void sub_1C11120B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unsigned __int8 *a5, uint64_t a6)
{
}

id sub_1C11120E0@<X0>(void *a1@<X3>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*(id *)(*v2 + OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_subscriptionController), sel_hasSubscriptionToTag_, *a1);
  *a2 = result ^ 1;
  return result;
}

uint64_t sub_1C1112128(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  return sub_1C1112310(a4) & 1;
}

uint64_t sub_1C1112310(void **a1)
{
  unint64_t v2 = *a1;
  id v3 = objc_msgSend(self, sel_mainBundle);
  id v4 = objc_msgSend(v3, sel_bundleIdentifier);

  if (!v4) {
    return 0;
  }
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;

  if (v5 == 0x6C7070612E6D6F63 && v7 == 0xEE007377656E2E65)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed23FollowingCommandHandler_subscriptionController);
    uint64_t ObjectType = swift_getObjectType();
    id v13 = objc_msgSend(v2, sel_identifier);
    if (!v13)
    {
      sub_1C151E62C();
      id v13 = (id)sub_1C151E5EC();
      swift_bridgeObjectRelease();
    }
    unsigned __int8 v14 = objc_msgSend(v11, sel_isChannelPermanentForTagID_, v13);

    if ((v14 & 1) == 0
      && !FCTagProviding.isSection.getter(ObjectType)
      && (objc_msgSend(v2, sel_isSportsEvent) & 1) == 0
      && (objc_msgSend(v2, sel_isMySports) & 1) == 0)
    {
      return objc_msgSend(v2, sel_disableFollow) ^ 1;
    }
    return 0;
  }
  char v9 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if (v9) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1C11124EC()
{
  return sub_1C1111D34(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1C1112528()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C1112570()
{
  return sub_1C1111E04();
}

uint64_t sub_1C11125AC()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1C11125EC(uint64_t a1)
{
  sub_1C1111EE4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t FormatModelFactory.__allocating_init(factory:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 96), a1);
  return v2;
}

uint64_t FormatModelFactory.createFormatModels(from:context:namespace:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v5 = *(void *)(*(void *)v4 + 88);
  uint64_t v6 = *(void *)(*(void *)v4 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_1C151FD8C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v25 - v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v5 + 24))(v25, v26, v27, v28, v6, v5, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return MEMORY[0x1E4FBC860];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v11, AssociatedTypeWitness);
    sub_1C11129DC();
    uint64_t v18 = *(void *)(type metadata accessor for FormatModel() - 8);
    unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C1529AE0;
    sub_1C0C92B68();
    uint64_t v21 = (uint64_t *)(v17 + v19 + *(int *)(v20 + 48));
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v21[3] = AssociatedTypeWitness;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v21);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 16))(boxed_opaque_existential_0, v16, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, AssociatedTypeWitness);
  }
  return v17;
}

void sub_1C11129DC()
{
  if (!qword_1EB86BA98)
  {
    type metadata accessor for FormatModel();
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86BA98);
    }
  }
}

uint64_t FormatModelFactory.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  return v0;
}

uint64_t FormatModelFactory.__deallocating_deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  return swift_deallocClassInstance();
}

uint64_t sub_1C1112B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FormatModelFactory.createFormatModels(from:context:namespace:)(a1, a2, a3, a4);
}

uint64_t dispatch thunk of FormatModelSubFactoryType.model(for:context:namespace:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t method lookup function for FormatModelFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatModelFactory);
}

uint64_t dispatch thunk of FormatModelFactory.__allocating_init(factory:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t FormatViewNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t FormatViewNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 80);
  *a1 = v3;
  return sub_1BFE6FA30(v3);
}

uint64_t FormatViewNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatViewNode.zIndex.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 72);
}

uint64_t FormatViewNode.isUserInteractionEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t FormatViewNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1C1112D20(uint64_t a1)
{
  uint64_t v3 = *(void *)a1;
  if (!*(void *)a1)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (!v4) {
      goto LABEL_10;
    }
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  sub_1C1517EFC();
  sub_1BFF493E4(v16, v3);
  if (v1) {
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
LABEL_5:
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    sub_1BFF493E4(v16, v4);
    if (v1) {
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
LABEL_10:
  uint64_t v5 = *(void *)(a1 + 24);
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    sub_1BFF493E4(v16, v5);
    if (v1)
    {
LABEL_12:
      swift_release();
      sub_1C00F6854(a1);
      swift_bridgeObjectRelease();
LABEL_13:
      swift_release();
      return;
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  sub_1C1114A50(a1 + 32, (uint64_t)&v17, (uint64_t)&qword_1EB85ED28, (uint64_t)&type metadata for FormatMediaTimingFillMode, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFC77FBC);
  sub_1C1114A50((uint64_t)&v17, (uint64_t)&v18, (uint64_t)&qword_1EB85ED28, (uint64_t)&type metadata for FormatMediaTimingFillMode, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFC77FBC);
  uint64_t v6 = (id *)MEMORY[0x1E4F39F98];
  id v7 = 0;
  switch(v18)
  {
    case 1:
      goto LABEL_20;
    case 2:
      uint64_t v6 = (id *)MEMORY[0x1E4F39FA0];
      goto LABEL_20;
    case 3:
      uint64_t v6 = (id *)MEMORY[0x1E4F39FB0];
      goto LABEL_20;
    case 4:
      goto LABEL_21;
    default:
      uint64_t v6 = (id *)MEMORY[0x1E4F39FA8];
LABEL_20:
      id v7 = *v6;
      id v8 = *v6;
LABEL_21:
      uint64_t v9 = *(void *)(a1 + 40);
      if (v9)
      {
        swift_bridgeObjectRetain();
        sub_1C1517EFC();
        sub_1BFF493E4(v16, v9);
        if (v1) {
          goto LABEL_26;
        }
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v10 = *(void *)(a1 + 48);
        if (!v10) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v10 = *(void *)(a1 + 48);
        if (!v10) {
          goto LABEL_30;
        }
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      sub_1BFF493E4(v16, v10);
      if (v1)
      {
LABEL_26:
        swift_release();
        sub_1C00F6854(a1);
        swift_bridgeObjectRelease();
        swift_release();

        return;
      }
      swift_bridgeObjectRelease();
      swift_release();
LABEL_30:
      int v11 = *(unsigned __int8 *)(a1 + 72);
      if (v11 == 255)
      {
        sub_1C00F6854(a1);
LABEL_35:
        sub_1C151A8BC();
        goto LABEL_13;
      }
      unsigned __int8 v14 = *(unsigned char *)(a1 + 72);
      uint64_t v12 = *(void *)(a1 + 64);
      uint64_t v13 = *(void *)(a1 + 56);
      sub_1BFE94AB4(v13, v12, v11 & 1);
      sub_1C1517EFC();
      FormatBoolean.value(contextLayoutOptions:)(v15);
      swift_release();
      sub_1C00F6854(a1);
      if (!v1)
      {
        sub_1BFFC879C(v13, v12, v14);
        goto LABEL_35;
      }
      swift_release();

      sub_1BFFC879C(v13, v12, v14);
      return;
  }
}

uint64_t sub_1C1113200(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)a1;
  if (!*(void *)a1)
  {
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      goto LABEL_8;
    }
LABEL_5:
    type metadata accessor for FormatDecorationContext();
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    sub_1BFF493E4(v21, v6);
    if (v2) {
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v7 = *(void *)(a1 + 24);
    if (!v7) {
      goto LABEL_14;
    }
    goto LABEL_9;
  }
  type metadata accessor for FormatDecorationContext();
  swift_bridgeObjectRetain();
  sub_1C1517EFC();
  sub_1BFF493E4(v21, v5);
  if (v2) {
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  uint64_t v7 = *(void *)(a1 + 24);
  if (!v7) {
    goto LABEL_14;
  }
LABEL_9:
  type metadata accessor for FormatDecorationContext();
  swift_bridgeObjectRetain();
  sub_1C1517EFC();
  sub_1BFF493E4(v21, v7);
  if (v2)
  {
LABEL_10:
    swift_release();
    sub_1C00F6854(a1);
    sub_1BFF471F4(a2, (uint64_t (*)(void))type metadata accessor for FormatDecorationContext);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
LABEL_14:
  sub_1C1114A50(a1 + 32, (uint64_t)&v23, (uint64_t)&qword_1EB85ED28, (uint64_t)&type metadata for FormatMediaTimingFillMode, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFC77FBC);
  sub_1C1114A50((uint64_t)&v23, (uint64_t)&v24, (uint64_t)&qword_1EB85ED28, (uint64_t)&type metadata for FormatMediaTimingFillMode, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFC77FBC);
  uint64_t v9 = (id *)MEMORY[0x1E4F39F98];
  id v10 = 0;
  switch(v24)
  {
    case 1:
      goto LABEL_18;
    case 2:
      uint64_t v9 = (id *)MEMORY[0x1E4F39FA0];
      goto LABEL_18;
    case 3:
      uint64_t v9 = (id *)MEMORY[0x1E4F39FB0];
      goto LABEL_18;
    case 4:
      goto LABEL_19;
    default:
      uint64_t v9 = (id *)MEMORY[0x1E4F39FA8];
LABEL_18:
      id v10 = *v9;
      id v11 = *v9;
LABEL_19:
      uint64_t v12 = *(void *)(a1 + 40);
      if (v12)
      {
        type metadata accessor for FormatDecorationContext();
        swift_bridgeObjectRetain();
        sub_1C1517EFC();
        sub_1BFF493E4(v21, v12);
        if (v2)
        {
          swift_release();
          sub_1C00F6854(a1);

          sub_1BFF471F4(a2, (uint64_t (*)(void))type metadata accessor for FormatDecorationContext);
          return swift_bridgeObjectRelease();
        }
        unint64_t v19 = v10;
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v13 = *(void *)(a1 + 48);
        if (!v13) {
          goto LABEL_28;
        }
      }
      else
      {
        unint64_t v19 = v10;
        uint64_t v13 = *(void *)(a1 + 48);
        if (!v13) {
          goto LABEL_28;
        }
      }
      type metadata accessor for FormatDecorationContext();
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      sub_1BFF493E4(v21, v13);
      if (v2)
      {
        swift_release();
        sub_1C00F6854(a1);

        sub_1BFF471F4(a2, (uint64_t (*)(void))type metadata accessor for FormatDecorationContext);
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_release();
LABEL_28:
      int v14 = *(unsigned __int8 *)(a1 + 72);
      if (v14 == 255)
      {
        sub_1C00F6854(a1);
      }
      else
      {
        uint64_t v16 = *(void *)(a1 + 56);
        uint64_t v15 = *(void *)(a1 + 64);
        unsigned __int8 v18 = *(unsigned char *)(a1 + 72);
        char v17 = v14 & 1;
        char v22 = v14 & 1;
        type metadata accessor for FormatDecorationContext();
        sub_1BFE94AB4(v16, v15, v17);
        sub_1C1517EFC();
        FormatBoolean.value(contextLayoutOptions:)(v20);
        swift_release();
        sub_1C00F6854(a1);
        if (v2)
        {

          sub_1BFF471F4(a2, (uint64_t (*)(void))type metadata accessor for FormatDecorationContext);
          return sub_1BFE94AD4(v16, v15, v22);
        }
        sub_1BFFC879C(v16, v15, v18);
      }
      sub_1C151A8BC();
      uint64_t result = sub_1BFF471F4(a2, (uint64_t (*)(void))type metadata accessor for FormatDecorationContext);
      break;
  }
  return result;
}

uint64_t sub_1C11137C8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v31 = a3;
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FormatMicaNodeArchive();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v30 - v18;
  if (a2 >> 62)
  {
    if (a2 >> 62 == 1)
    {
      uint64_t v20 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v21 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain_n();
      sub_1C11137C8(a1, v20);
      swift_release();
      if (v4)
      {
        return swift_release_n();
      }
      else
      {
        uint64_t v28 = v32;
        swift_retain();
        sub_1C11137C8(a1, v21);
        swift_release_n();
        swift_release();
        uint64_t v29 = v32;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v28;
        *(void *)(result + 24) = v29;
        void *v31 = result | 0x8000000000000000;
      }
    }
    else
    {
      uint64_t v26 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v27 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C026E028(&v32, a1, v26, v27);
      sub_1C11137C8(a1, v32);
      swift_bridgeObjectRelease();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    uint64_t v23 = swift_projectBox();
    sub_1BFF47254(v23, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatMicaNodeArchive);
    sub_1BFF47254((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatMicaNodeArchive);
    sub_1C0AB0F8C((uint64_t)v16, (uint64_t)v13);
    sub_1C003B0FC(a1, (uint64_t)v10);
    sub_1BFF471F4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatURL);
    if (!v3)
    {
      uint64_t v24 = swift_allocBox();
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v25, v10, v7);
      void *v31 = v24;
    }
    return sub_1BFF471F4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatMicaNodeArchive);
  }
  return result;
}

uint64_t sub_1C1113B50@<X0>(char *a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v31 = a3;
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FormatMicaNodeArchive();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v30 - v18;
  if (a2 >> 62)
  {
    if (a2 >> 62 == 1)
    {
      uint64_t v20 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v21 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain_n();
      sub_1C1113B50(a1, v20);
      swift_release();
      if (v4)
      {
        return swift_release_n();
      }
      else
      {
        uint64_t v28 = v32;
        swift_retain();
        sub_1C1113B50(a1, v21);
        swift_release_n();
        swift_release();
        uint64_t v29 = v32;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v28;
        *(void *)(result + 24) = v29;
        void *v31 = result | 0x8000000000000000;
      }
    }
    else
    {
      uint64_t v26 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v27 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C0276360(v26, v27, &v32);
      sub_1C1113B50(a1, v32);
      swift_bridgeObjectRelease();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    uint64_t v23 = swift_projectBox();
    sub_1BFF47254(v23, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatMicaNodeArchive);
    sub_1BFF47254((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatMicaNodeArchive);
    sub_1C0AB0F8C((uint64_t)v16, (uint64_t)v13);
    sub_1C103C93C(a1, (uint64_t)v10);
    sub_1BFF471F4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatURL);
    if (!v3)
    {
      uint64_t v24 = swift_allocBox();
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v25, v10, v7);
      void *v31 = v24;
    }
    return sub_1BFF471F4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatMicaNodeArchive);
  }
  return result;
}

uint64_t FormatViewNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatViewNode.identifier.modify())()
{
  return j__swift_endAccess;
}

unint64_t FormatViewNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 32);
  *a1 = v2;
  return sub_1BFF35EA4(v2);
}

uint64_t FormatViewNode.resize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatViewNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatViewNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatViewNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatViewNode.animation.getter()
{
  return swift_retain();
}

uint64_t FormatViewNode.zIndex.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*FormatViewNode.zIndex.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t FormatViewNode.visibility.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 80);
  *(void *)(v1 + 80) = v2;
  return sub_1BFF0056C(v3);
}

uint64_t (*FormatViewNode.visibility.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatViewNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 88) = a1;
  return result;
}

uint64_t (*FormatViewNode.isUserInteractionEnabled.modify())()
{
  return j_j__swift_endAccess;
}

void FormatViewNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 104);
  *(void *)a1 = *(void *)(v1 + 96);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t sub_1C111421C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 112) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatViewNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 112) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatViewNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatViewNode.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatViewNode.__allocating_init(identifier:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, char a10, uint64_t *a11, unint64_t a12, unint64_t a13, uint64_t a14)
{
  uint64_t v19 = swift_allocObject();
  FormatViewNode.init(identifier:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, __PAIR128__(a13, a12), a14);
  return v19;
}

uint64_t FormatViewNode.deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatViewNode.__deallocating_deinit()
{
  FormatViewNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C111449C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFFE8A40(&qword_1EA1ABA30, a2, (void (*)(uint64_t))type metadata accessor for FormatViewNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C11144F4(void *a1, uint64_t a2)
{
  a1[1] = sub_1BFFE8A40(&qword_1EB87DC80, a2, (void (*)(uint64_t))type metadata accessor for FormatViewNode);
  a1[2] = sub_1BFFE8A40(&qword_1EB85FD90, v3, (void (*)(uint64_t))type metadata accessor for FormatViewNode);
  uint64_t result = sub_1BFFE8A40(&qword_1EA1ABA38, v4, (void (*)(uint64_t))type metadata accessor for FormatViewNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C11145A0(void *a1, void *a2)
{
  return static FormatViewNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C11145AC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFFE8A40(&qword_1EA1ABA40, a2, (void (*)(uint64_t))type metadata accessor for FormatViewNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C1114624@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1114674@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C11146C4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 72);
  return result;
}

uint64_t sub_1C111470C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 72) = v2;
  return result;
}

unint64_t sub_1C1114750@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 80);
  *a2 = v4;
  return sub_1BFE6FA30(v4);
}

uint64_t sub_1C11147A0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 88);
  return result;
}

uint64_t sub_1C11147E8(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 88) = v2;
  return result;
}

uint64_t sub_1C111482C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 112);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatViewNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatViewNode);
}

uint64_t dispatch thunk of FormatViewNode.__allocating_init(identifier:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1C11148D0()
{
  sub_1BFF05BFC(0, (unint64_t *)&qword_1EB871380, MEMORY[0x1E4FABA40]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  swift_bridgeObjectRelease();
  swift_unownedRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C1114A18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C1114A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1C1114AC0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C1114B24()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

id CGFloat.number.getter(double a1)
{
  float v1 = a1;
  id v2 = objc_allocWithZone(NSNumber);
  *(float *)&double v3 = v1;
  return objc_msgSend(v2, sel_initWithFloat_, v3);
}

id Int.number.getter(uint64_t a1)
{
  id v2 = objc_allocWithZone(NSNumber);
  return objc_msgSend(v2, sel_initWithInteger_, a1);
}

double sub_1C1114BFC@<D0>(double *a1@<X0>, double *a2@<X1>, double *a3@<X8>)
{
  double result = *a1 / *a2;
  *a3 = result;
  return result;
}

double sub_1C1114C10(double *a1, double *a2)
{
  double result = *a1 / *a2;
  *a1 = result;
  return result;
}

id sub_1C1114C24()
{
  float v1 = *v0;
  id v2 = objc_allocWithZone(NSNumber);
  *(float *)&double v3 = v1;
  return objc_msgSend(v2, sel_initWithFloat_, v3);
}

unint64_t sub_1C1114C70(uint64_t a1)
{
  unint64_t result = sub_1C1114C98();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1114C98()
{
  unint64_t result = qword_1EB87C6A8;
  if (!qword_1EB87C6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87C6A8);
  }
  return result;
}

void *sub_1C1114CEC@<X0>(void *result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3 = *a2;
  if (*a2)
  {
    if (*result != 0x8000000000000000 || v3 != -1)
    {
      *a3 = *result / v3;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t *sub_1C1114D1C(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a2)
  {
    uint64_t v3 = *result;
    if (v2 != -1 || v3 != 0x8000000000000000)
    {
      *unint64_t result = v3 / v2;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1C1114D4C()
{
  uint64_t v1 = *v0;
  id v2 = objc_allocWithZone(NSNumber);
  return objc_msgSend(v2, sel_initWithInteger_, v1);
}

uint64_t dispatch thunk of static FormatEquationValue./ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of static FormatEquationValue./= infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FormatEquationValue.number.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

id CategoryColorPalette.foregroundColor.getter()
{
  return *v0;
}

id CategoryColorPalette.backgroundColor.getter()
{
  return *(id *)(v0 + 8);
}

id CategoryColorPalette.selectedForegroundColor.getter()
{
  return *(id *)(v0 + 16);
}

id CategoryColorPalette.selectedBackgroundColor.getter()
{
  return *(id *)(v0 + 24);
}

id CategoryColorPalette.pillForegroundColor.getter()
{
  return *(id *)(v0 + 32);
}

id CategoryColorPalette.pillBackgroundColor.getter()
{
  return *(id *)(v0 + 40);
}

id CategoryColorPalette.pillSelectedForegroundColor.getter()
{
  return *(id *)(v0 + 48);
}

id CategoryColorPalette.pillSelectedBackgroundColor.getter()
{
  return *(id *)(v0 + 56);
}

void __swiftcall CategoryColorPalette.init(foregroundColor:backgroundColor:selectedForegroundColor:selectedBackgroundColor:pillForegroundColor:pillBackgroundColor:pillSelectedForegroundColor:pillSelectedBackgroundColor:)(NewsFeed::CategoryColorPalette *__return_ptr retstr, UIColor foregroundColor, UIColor backgroundColor, UIColor selectedForegroundColor, UIColor selectedBackgroundColor, UIColor pillForegroundColor, UIColor pillBackgroundColor, UIColor pillSelectedForegroundColor, UIColor pillSelectedBackgroundColor)
{
  retstr->foregroundColor = foregroundColor;
  retstr->backgroundColor = backgroundColor;
  retstr->selectedForegroundColor = selectedForegroundColor;
  retstr->selectedBackgroundColor = selectedBackgroundColor;
  retstr->pillForegroundColor = pillForegroundColor;
  retstr->pillBackgroundColor = pillBackgroundColor;
  retstr->pillSelectedForegroundColor = pillSelectedForegroundColor;
  retstr->pillSelectedBackgroundColor = pillSelectedBackgroundColor;
}

void sub_1C1114E24()
{
  uint64_t v0 = self;
  id v12 = objc_msgSend(v0, sel_labelColor);
  id v11 = objc_msgSend(v0, sel_clearColor);
  id v10 = objc_msgSend(v0, sel_systemPinkColor);
  id v1 = objc_msgSend(v0, sel_secondarySystemBackgroundColor);
  id v2 = objc_msgSend(v0, sel_labelColor);
  id v3 = objc_msgSend(v0, sel_secondarySystemBackgroundColor);
  id v4 = objc_msgSend(v0, sel_whiteColor);
  id v5 = objc_msgSend(v0, sel_blackColor);
  id v6 = objc_msgSend(v0, sel_ts_dynamicColor_withDarkStyleVariant_, v4, v5);

  id v7 = objc_msgSend(v0, sel_blackColor);
  id v8 = objc_msgSend(v0, sel_whiteColor);
  id v9 = objc_msgSend(v0, sel_ts_dynamicColor_withDarkStyleVariant_, v7, v8);

  qword_1EB85E600 = (uint64_t)v12;
  *(void *)algn_1EB85E608 = v11;
  qword_1EB85E610 = (uint64_t)v10;
  unk_1EB85E618 = v1;
  qword_1EB85E620 = (uint64_t)v2;
  unk_1EB85E628 = v3;
  qword_1EB85E630 = (uint64_t)v6;
  unk_1EB85E638 = v9;
}

id static CategoryColorPalette.default.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB85EB30 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EB85E600;
  id v3 = *(void **)algn_1EB85E608;
  id v4 = (void *)qword_1EB85E610;
  id v5 = (void *)unk_1EB85E618;
  id v6 = (void *)qword_1EB85E620;
  id v7 = (void *)unk_1EB85E628;
  id v9 = (void *)qword_1EB85E630;
  uint64_t v8 = unk_1EB85E638;
  id v18 = (id)unk_1EB85E638;
  *a1 = qword_1EB85E600;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v9;
  a1[7] = v8;
  id v10 = v2;
  id v11 = v3;
  id v12 = v4;
  id v13 = v5;
  id v14 = v6;
  id v15 = v7;
  id v16 = v9;
  return v18;
}

void destroy for CategoryColorPalette(uint64_t a1)
{
  id v2 = *(void **)(a1 + 56);
}

void *initializeWithCopy for CategoryColorPalette(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  id v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = *(void **)(a2 + 16);
  id v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  id v7 = *(void **)(a2 + 32);
  uint64_t v8 = *(void **)(a2 + 40);
  a1[4] = v7;
  a1[5] = v8;
  id v9 = *(void **)(a2 + 48);
  id v10 = *(void **)(a2 + 56);
  a1[6] = v9;
  a1[7] = v10;
  id v11 = v3;
  id v12 = v4;
  id v13 = v5;
  id v14 = v6;
  id v15 = v7;
  id v16 = v8;
  id v17 = v9;
  id v18 = v10;
  return a1;
}

uint64_t assignWithCopy for CategoryColorPalette(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 16);
  id v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  id v13 = *(void **)(a2 + 24);
  id v14 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v13;
  id v15 = v13;

  id v16 = *(void **)(a2 + 32);
  id v17 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v16;
  id v18 = v16;

  uint64_t v19 = *(void **)(a2 + 40);
  uint64_t v20 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v19;
  id v21 = v19;

  char v22 = *(void **)(a2 + 48);
  uint64_t v23 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v22;
  id v24 = v22;

  uint64_t v25 = *(void **)(a2 + 56);
  uint64_t v26 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v25;
  id v27 = v25;

  return a1;
}

uint64_t assignWithTake for CategoryColorPalette(uint64_t a1, _OWORD *a2)
{
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  id v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  id v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];

  id v7 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = a2[3];

  return a1;
}

ValueMetadata *type metadata accessor for CategoryColorPalette()
{
  return &type metadata for CategoryColorPalette;
}

uint64_t FormatWeatherConditionCode.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F64616E726F74;
      break;
    case 2:
      uint64_t result = 0x6C616369706F7274;
      break;
    case 3:
      uint64_t result = 0x6E61636972727568;
      break;
    case 4:
      uint64_t result = 0xD000000000000013;
      break;
    case 5:
      uint64_t result = 0x737265646E756874;
      break;
    case 6:
    case 0xF:
    case 0x20:
    case 0x24:
      uint64_t result = 0xD000000000000010;
      break;
    case 7:
      uint64_t result = 0xD000000000000011;
      break;
    case 8:
      uint64_t result = 0xD000000000000011;
      break;
    case 9:
    case 0xB:
      uint64_t result = 0x676E697A65657266;
      break;
    case 0xA:
      uint64_t result = 0x656C7A7A697264;
      break;
    case 0xC:
      uint64_t result = 0x737265776F6873;
      break;
    case 0xD:
      uint64_t result = 1852399986;
      break;
    case 0xE:
      uint64_t result = 0x72756C46776F6E73;
      break;
    case 0x10:
      uint64_t result = 0x53676E69776F6C62;
      break;
    case 0x11:
      uint64_t result = 2003791475;
      break;
    case 0x12:
      uint64_t result = 1818845544;
      break;
    case 0x13:
      uint64_t result = 0x7465656C73;
      break;
    case 0x14:
      uint64_t result = 1953723748;
      break;
    case 0x15:
      uint64_t result = 0x7967676F66;
      break;
    case 0x16:
      uint64_t result = 1702519144;
      break;
    case 0x17:
      uint64_t result = 0x796B6F6D73;
      break;
    case 0x18:
      uint64_t result = 0x7972657473756C62;
      break;
    case 0x19:
      uint64_t result = 0x79646E6977;
      break;
    case 0x1A:
      uint64_t result = 1684828003;
      break;
    case 0x1B:
      uint64_t result = 0x7964756F6C63;
      break;
    case 0x1C:
      unsigned int v2 = 1953722221;
      goto LABEL_28;
    case 0x1D:
      unsigned int v2 = 1953653104;
LABEL_28:
      uint64_t result = v2 | 0x6C43796C00000000;
      break;
    case 0x1E:
      uint64_t result = 0x7261656C63;
      break;
    case 0x1F:
      uint64_t result = 0x6C43796C74736F6DLL;
      break;
    case 0x21:
      uint64_t result = 7630696;
      break;
    case 0x22:
      uint64_t result = 0xD000000000000015;
      break;
    case 0x23:
      uint64_t result = 0xD000000000000016;
      break;
    case 0x25:
      uint64_t result = 0x6961527976616568;
      break;
    case 0x26:
      uint64_t result = 0xD000000000000014;
      break;
    case 0x27:
      uint64_t result = 0x6F6E537976616568;
      break;
    case 0x28:
      uint64_t result = 0x6472617A7A696C62;
      break;
    case 0x29:
      uint64_t result = 0xD000000000000016;
      break;
    case 0x2A:
      uint64_t result = 0x7453676E6F727473;
      break;
    case 0x2B:
      uint64_t result = 0x7272756C466E7573;
      break;
    case 0x2C:
      uint64_t result = 0x65776F68536E7573;
      break;
    case 0x2D:
      uint64_t result = 0x694D7972746E6977;
      break;
    default:
      return result;
  }
  return result;
}

NewsFeed::FormatWeatherConditionCode_optional __swiftcall FormatWeatherConditionCode.init(rawValue:)(Swift::String rawValue)
{
  unsigned int v2 = v1;
  uint64_t v3 = sub_1C1520C8C();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 28;
  switch(v3)
  {
    case 0:
      goto LABEL_30;
    case 1:
      char v5 = 1;
      goto LABEL_30;
    case 2:
      char v5 = 2;
      goto LABEL_30;
    case 3:
      char v5 = 3;
      goto LABEL_30;
    case 4:
      char v5 = 4;
      goto LABEL_30;
    case 5:
      char v5 = 5;
      goto LABEL_30;
    case 6:
      char v5 = 6;
      goto LABEL_30;
    case 7:
      char v5 = 7;
      goto LABEL_30;
    case 8:
      char v5 = 8;
      goto LABEL_30;
    case 9:
      char v5 = 9;
      goto LABEL_30;
    case 10:
      char v5 = 10;
      goto LABEL_30;
    case 11:
      char v5 = 11;
      goto LABEL_30;
    case 12:
      char v5 = 12;
      goto LABEL_30;
    case 13:
      char v5 = 13;
      goto LABEL_30;
    case 14:
      char v5 = 14;
      goto LABEL_30;
    case 15:
      char v5 = 15;
      goto LABEL_30;
    case 16:
      char v5 = 16;
      goto LABEL_30;
    case 17:
      char v5 = 17;
      goto LABEL_30;
    case 18:
      char v5 = 18;
      goto LABEL_30;
    case 19:
      char v5 = 19;
      goto LABEL_30;
    case 20:
      char v5 = 20;
      goto LABEL_30;
    case 21:
      char v5 = 21;
      goto LABEL_30;
    case 22:
      char v5 = 22;
      goto LABEL_30;
    case 23:
      char v5 = 23;
      goto LABEL_30;
    case 24:
      char v5 = 24;
      goto LABEL_30;
    case 25:
      char v5 = 25;
      goto LABEL_30;
    case 26:
      char v5 = 26;
      goto LABEL_30;
    case 27:
      char v5 = 27;
LABEL_30:
      char v6 = v5;
      break;
    case 28:
      break;
    case 29:
      char v6 = 29;
      break;
    case 30:
      char v6 = 30;
      break;
    case 31:
      char v6 = 31;
      break;
    case 32:
      char v6 = 32;
      break;
    case 33:
      char v6 = 33;
      break;
    case 34:
      char v6 = 34;
      break;
    case 35:
      char v6 = 35;
      break;
    case 36:
      char v6 = 36;
      break;
    case 37:
      char v6 = 37;
      break;
    case 38:
      char v6 = 38;
      break;
    case 39:
      char v6 = 39;
      break;
    case 40:
      char v6 = 40;
      break;
    case 41:
      char v6 = 41;
      break;
    case 42:
      char v6 = 42;
      break;
    case 43:
      char v6 = 43;
      break;
    case 44:
      char v6 = 44;
      break;
    case 45:
      char v6 = 45;
      break;
    default:
      char v6 = 46;
      break;
  }
  *unsigned int v2 = v6;
  return result;
}

uint64_t sub_1C1115AD8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C147E994(*a1, *a2);
}

uint64_t sub_1C1115AE4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C1115B4C()
{
  FormatWeatherConditionCode.rawValue.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1115BB0()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatWeatherConditionCode_optional sub_1C1115C14(Swift::String *a1)
{
  return FormatWeatherConditionCode.init(rawValue:)(*a1);
}

uint64_t sub_1C1115C20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatWeatherConditionCode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C1115C48()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C1115CA8(void *a1)
{
  return FormatWeatherConditionCode.encode(to:)(a1);
}

uint64_t FormatWeatherConditionCode.description.getter()
{
  return FormatWeatherConditionCode.rawValue.getter();
}

unint64_t sub_1C1115CF8()
{
  unint64_t result = qword_1EA1ABA48;
  if (!qword_1EA1ABA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABA48);
  }
  return result;
}

unint64_t sub_1C1115D4C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C1115D7C();
  unint64_t result = sub_1C1115DD0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C1115D7C()
{
  unint64_t result = qword_1EA1ABA50;
  if (!qword_1EA1ABA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABA50);
  }
  return result;
}

unint64_t sub_1C1115DD0()
{
  unint64_t result = qword_1EA1ABA58;
  if (!qword_1EA1ABA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABA58);
  }
  return result;
}

unint64_t sub_1C1115E24(uint64_t a1)
{
  unint64_t result = sub_1C1115E4C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1115E4C()
{
  unint64_t result = qword_1EA1ABA60;
  if (!qword_1EA1ABA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABA60);
  }
  return result;
}

unint64_t sub_1C1115EA0(void *a1)
{
  a1[1] = sub_1C1115ED8();
  a1[2] = sub_1C1115F2C();
  unint64_t result = sub_1C1115CF8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C1115ED8()
{
  unint64_t result = qword_1EA1ABA68;
  if (!qword_1EA1ABA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABA68);
  }
  return result;
}

unint64_t sub_1C1115F2C()
{
  unint64_t result = qword_1EA1ABA70;
  if (!qword_1EA1ABA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABA70);
  }
  return result;
}

uint64_t sub_1C1115F80()
{
  return FormatWeatherConditionCode.rawValue.getter();
}

uint64_t getEnumTagSinglePayload for FormatWeatherConditionCode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD3) {
    goto LABEL_17;
  }
  if (a2 + 45 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 45) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 45;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 45;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 45;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x2E;
  int v8 = v6 - 46;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FormatWeatherConditionCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 45 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 45) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD2)
  {
    unsigned int v6 = ((a2 - 211) >> 8) + 1;
    *unint64_t result = a2 + 45;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1116110);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 45;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatWeatherConditionCode()
{
  return &type metadata for FormatWeatherConditionCode;
}

uint64_t GapViewRenderer.render(context:with:in:)(uint64_t a1, double *a2, uint64_t a3)
{
  double v4 = a2[4];
  double v5 = a2[5];
  double v6 = a2[6];
  double v7 = a2[7];
  sub_1BFC66384(a1 + 56, (uint64_t)v12);
  int v8 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed7GapView_activityIndicatorView);
  objc_msgSend(v8, sel_setFrame_, v4, v5, v6, v7);
  uint64_t v9 = v13;
  uint64_t v10 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  (*(void (**)(void *, uint64_t, uint64_t))(v10 + 8))(v8, v9, v10);
  objc_msgSend(v8, sel_startAnimating);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
}

uint64_t GapViewRenderer.deinit()
{
  return v0;
}

uint64_t GapViewRenderer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of GapViewRendererType.render(context:with:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for GapViewRenderer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GapViewRenderer);
}

BOOL static FormatTagBinding.Text.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C1116270(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C11162F4(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1C00539BC(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C00539BC(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C1116380()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C00539BC(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C11163E4()
{
  sub_1C00539BC(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1116438()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C00539BC(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

void sub_1C1116498(void *a1@<X8>)
{
  *a1 = &unk_1F1B64798;
}

uint64_t FormatTagBinding.Text.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatTagBinding.Text.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C1116520()
{
  unint64_t result = qword_1EA1ABA78;
  if (!qword_1EA1ABA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABA78);
  }
  return result;
}

unint64_t sub_1C1116574(uint64_t a1)
{
  unint64_t result = sub_1C08B89EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C111659C(void *a1)
{
  a1[1] = sub_1BFCF5D14();
  a1[2] = sub_1BFD1A5D8();
  unint64_t result = sub_1C1116520();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatTagBinding.Text()
{
  return &type metadata for FormatTagBinding.Text;
}

ValueMetadata *_s4TextO10CodingTypeOMa_5()
{
  return &_s4TextO10CodingTypeON_5;
}

uint64_t sub_1C111661C()
{
  return sub_1C1117D44(&qword_1EA1ABA80, (void (*)(uint64_t))sub_1C1116664);
}

void sub_1C1116664()
{
  if (!qword_1EA1ABA88)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ABA88);
    }
  }
}

unint64_t sub_1C11166C0()
{
  unint64_t result = qword_1EA1ABA90;
  if (!qword_1EA1ABA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABA90);
  }
  return result;
}

uint64_t sub_1C1116714@<X0>(unsigned char *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  switch(*a1)
  {
    case 1:
      char v13 = 1;
      swift_unknownObjectRetain();
      uint64_t v6 = a3;
      unint64_t v7 = 1701667150;
      unint64_t v5 = 0xE400000000000000;
      break;
    case 2:
      char v13 = 2;
      swift_unknownObjectRetain();
      uint64_t v6 = a3;
      unint64_t v7 = 0x2079616C70736944;
      goto LABEL_6;
    case 3:
      char v13 = 3;
      swift_unknownObjectRetain();
      uint64_t v6 = a3;
      unint64_t v7 = 0x20746361706D6F43;
LABEL_6:
      unint64_t v5 = 0xEC000000656D614ELL;
      break;
    case 4:
      char v13 = 4;
      swift_unknownObjectRetain();
      unint64_t v7 = 0xD000000000000014;
      char v8 = "Compact Display Name";
      goto LABEL_24;
    case 5:
      char v13 = 5;
      swift_unknownObjectRetain();
      uint64_t v6 = a3;
      unint64_t v7 = 0x614E2070756F7247;
      unint64_t v5 = 0xEA0000000000656DLL;
      break;
    case 6:
      char v13 = 6;
      swift_unknownObjectRetain();
      uint64_t v6 = a3;
      uint64_t v9 = 0x656372756F53;
      goto LABEL_20;
    case 7:
      char v13 = 7;
      swift_unknownObjectRetain();
      uint64_t v10 = "UMC Canonical ID";
      goto LABEL_17;
    case 8:
      char v13 = 8;
      swift_unknownObjectRetain();
      unint64_t v7 = 0xD00000000000001BLL;
      char v8 = "Sports Location Description";
      goto LABEL_24;
    case 9:
      char v13 = 9;
      swift_unknownObjectRetain();
      unint64_t v7 = 0xD000000000000017;
      char v8 = "Sports Name Abbrevation";
      goto LABEL_24;
    case 0xA:
      char v13 = 10;
      swift_unknownObjectRetain();
      unint64_t v7 = 0xD000000000000013;
      char v8 = "Sports Primary Name";
      goto LABEL_24;
    case 0xB:
      char v13 = 11;
      swift_unknownObjectRetain();
      unint64_t v7 = 0xD000000000000015;
      char v8 = "Sports Secondary Name";
      goto LABEL_24;
    case 0xC:
      char v13 = 12;
      swift_unknownObjectRetain();
      unint64_t v7 = 0xD00000000000001BLL;
      char v8 = "Sports Secondary Short Name";
      goto LABEL_24;
    case 0xD:
      char v13 = 13;
      swift_unknownObjectRetain();
      uint64_t v10 = "Sports Full Name";
LABEL_17:
      unint64_t v5 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      uint64_t v6 = a3;
      unint64_t v7 = 0xD000000000000010;
      break;
    case 0xE:
      char v13 = 14;
      swift_unknownObjectRetain();
      uint64_t v6 = a3;
      unint64_t v7 = 0x4E207374726F7053;
      unint64_t v5 = 0xEF656D616E6B6369;
      break;
    case 0xF:
      char v13 = 15;
      swift_unknownObjectRetain();
      uint64_t v6 = a3;
      uint64_t v9 = 0x7374726F7053;
LABEL_20:
      unint64_t v7 = v9 & 0xFFFFFFFFFFFFLL | 0x5420000000000000;
      unint64_t v5 = 0xEB00000000657079;
      break;
    case 0x10:
      char v13 = 16;
      swift_unknownObjectRetain();
      unint64_t v7 = 0xD000000000000018;
      char v8 = "Sports Type Display Name";
      goto LABEL_24;
    case 0x11:
      char v13 = 17;
      swift_unknownObjectRetain();
      unint64_t v7 = 0xD000000000000023;
      char v8 = "Sports Type Pluralized Display Name";
      goto LABEL_24;
    case 0x12:
      char v13 = 18;
      swift_unknownObjectRetain();
      unint64_t v7 = 0xD000000000000012;
      char v8 = "Sports League Type";
LABEL_24:
      unint64_t v5 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      uint64_t v6 = a3;
      break;
    case 0x13:
      char v13 = 19;
      swift_unknownObjectRetain();
      uint64_t v6 = a3;
      unint64_t v7 = 0x656C746974627553;
      unint64_t v5 = 0xE800000000000000;
      break;
    case 0x14:
      char v13 = 20;
      swift_unknownObjectRetain();
      uint64_t v6 = a3;
      unint64_t v7 = 0x656E697A6167614DLL;
      unint64_t v5 = 0xEE0065726E654720;
      break;
    case 0x15:
      char v13 = 21;
      swift_unknownObjectRetain();
      uint64_t v6 = a3;
      unint64_t v7 = 0x65676175676E614CLL;
      unint64_t v5 = 0xE800000000000000;
      break;
    case 0x16:
      char v13 = 22;
      swift_unknownObjectRetain();
      unint64_t v5 = 0xEA00000000006E6FLL;
      uint64_t v6 = a3;
      unint64_t v7 = 0x6974616D6F747541;
      break;
    default:
      char v13 = 0;
      swift_unknownObjectRetain();
      unint64_t v5 = 0xEA00000000007265;
      uint64_t v6 = a3;
      unint64_t v7 = 0x696669746E656449;
      break;
  }
  sub_1C1116C44(v7, v5, a2, &v13, v6);
  uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a3, 0, 1, v11);
}

uint64_t sub_1C1116C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X3>, void *a5@<X8>)
{
  LOBYTE(v14) = *a4;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = sub_1BFFDCA34(a3, (void (*)(uint64_t))sub_1C01B4D28, 0, &v14, ObjectType);
  uint64_t v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v12 = v10 & 0xFFFFFFFFFFFFLL;
  }
  if (v12)
  {
    *(void *)&long long v14 = v10;
    *((void *)&v14 + 1) = v11;
    *((void *)&v15 + 1) = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v14 = 0u;
    long long v15 = 0u;
  }
  sub_1C042F9B0(a1, a2, (uint64_t)&v14, a5);
  return swift_unknownObjectRelease();
}

uint64_t sub_1C1116D18@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  switch(*a1)
  {
    case 1:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      uint64_t v12 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 1;
      uint64_t ObjectType = swift_getObjectType();
      long long v14 = (void *)swift_unknownObjectRetain();
      uint64_t v15 = sub_1BFFDCA34(v14, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, ObjectType);
      uint64_t v17 = v16;
      swift_unknownObjectRelease();
      *uint64_t v12 = v15;
      v12[1] = v17;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 1701667182;
      unint64_t v11 = 0xE400000000000000;
      goto LABEL_25;
    case 2:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      id v18 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 2;
      uint64_t v19 = swift_getObjectType();
      uint64_t v20 = (void *)swift_unknownObjectRetain();
      uint64_t v21 = sub_1BFFDCA34(v20, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v19);
      uint64_t v23 = v22;
      swift_unknownObjectRelease();
      *id v18 = v21;
      v18[1] = v23;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0x4E79616C70736964;
      goto LABEL_6;
    case 3:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      id v24 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 3;
      uint64_t v25 = swift_getObjectType();
      uint64_t v26 = (void *)swift_unknownObjectRetain();
      uint64_t v27 = sub_1BFFDCA34(v26, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v25);
      uint64_t v29 = v28;
      swift_unknownObjectRelease();
      *id v24 = v27;
      v24[1] = v29;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0x4E746361706D6F63;
LABEL_6:
      unint64_t v11 = 0xEB00000000656D61;
      goto LABEL_25;
    case 4:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      uint64_t v30 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 4;
      uint64_t v31 = swift_getObjectType();
      uint64_t v32 = (void *)swift_unknownObjectRetain();
      uint64_t v33 = sub_1BFFDCA34(v32, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v31);
      uint64_t v35 = v34;
      swift_unknownObjectRelease();
      uint64_t *v30 = v33;
      v30[1] = v35;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0xD000000000000012;
      uint64_t v36 = "compactDisplayName";
      goto LABEL_24;
    case 5:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      uint64_t v37 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 5;
      uint64_t v38 = swift_getObjectType();
      long long v39 = (void *)swift_unknownObjectRetain();
      uint64_t v40 = sub_1BFFDCA34(v39, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v38);
      uint64_t v42 = v41;
      swift_unknownObjectRelease();
      *uint64_t v37 = v40;
      v37[1] = v42;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0x6D614E70756F7267;
      unint64_t v11 = 0xE900000000000065;
      goto LABEL_25;
    case 6:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      uint64_t v43 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 6;
      uint64_t v44 = swift_getObjectType();
      uint64_t v45 = (void *)swift_unknownObjectRetain();
      uint64_t v46 = sub_1BFFDCA34(v45, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v44);
      uint64_t v48 = v47;
      swift_unknownObjectRelease();
      *uint64_t v43 = v46;
      v43[1] = v48;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v49 = 0x656372756F73;
      goto LABEL_20;
    case 7:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      uint64_t v50 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 7;
      uint64_t v51 = swift_getObjectType();
      uint64_t v52 = (void *)swift_unknownObjectRetain();
      uint64_t v53 = sub_1BFFDCA34(v52, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v51);
      uint64_t v55 = v54;
      swift_unknownObjectRelease();
      *uint64_t v50 = v53;
      v50[1] = v55;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0x6E6F6E6143434D55;
      unint64_t v11 = 0xEE0044496C616369;
      goto LABEL_25;
    case 8:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      uint64_t v56 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 8;
      uint64_t v57 = swift_getObjectType();
      uint64_t v58 = (void *)swift_unknownObjectRetain();
      uint64_t v59 = sub_1BFFDCA34(v58, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v57);
      uint64_t v61 = v60;
      swift_unknownObjectRelease();
      uint64_t *v56 = v59;
      v56[1] = v61;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0xD000000000000019;
      uint64_t v36 = "sportsLocationDescription";
      goto LABEL_24;
    case 9:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      uint64_t v62 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 9;
      uint64_t v63 = swift_getObjectType();
      long long v64 = (void *)swift_unknownObjectRetain();
      uint64_t v65 = sub_1BFFDCA34(v64, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v63);
      uint64_t v67 = v66;
      swift_unknownObjectRelease();
      uint64_t *v62 = v65;
      v62[1] = v67;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0xD000000000000015;
      uint64_t v36 = "sportsNameAbbrevation";
      goto LABEL_24;
    case 0xA:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      long long v68 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 10;
      uint64_t v69 = swift_getObjectType();
      uint64_t v70 = (void *)swift_unknownObjectRetain();
      uint64_t v71 = sub_1BFFDCA34(v70, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v69);
      uint64_t v73 = v72;
      swift_unknownObjectRelease();
      uint64_t *v68 = v71;
      v68[1] = v73;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0xD000000000000011;
      uint64_t v36 = "sportsPrimaryName";
      goto LABEL_24;
    case 0xB:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      id v74 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 11;
      uint64_t v75 = swift_getObjectType();
      id v76 = (void *)swift_unknownObjectRetain();
      uint64_t v77 = sub_1BFFDCA34(v76, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v75);
      uint64_t v79 = v78;
      swift_unknownObjectRelease();
      uint64_t *v74 = v77;
      v74[1] = v79;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0xD000000000000013;
      uint64_t v36 = "sportsSecondaryName";
      goto LABEL_24;
    case 0xC:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      id v80 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 12;
      uint64_t v81 = swift_getObjectType();
      long long v82 = (void *)swift_unknownObjectRetain();
      uint64_t v83 = sub_1BFFDCA34(v82, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v81);
      uint64_t v85 = v84;
      swift_unknownObjectRelease();
      *id v80 = v83;
      v80[1] = v85;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0xD000000000000018;
      uint64_t v36 = "sportsSecondaryShortName";
      goto LABEL_24;
    case 0xD:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      long long v86 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 13;
      uint64_t v87 = swift_getObjectType();
      id v88 = (void *)swift_unknownObjectRetain();
      uint64_t v89 = sub_1BFFDCA34(v88, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v87);
      uint64_t v91 = v90;
      swift_unknownObjectRelease();
      uint64_t *v86 = v89;
      v86[1] = v91;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0x75467374726F7073;
      unsigned int v92 = 1632529516;
      goto LABEL_18;
    case 0xE:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      unint64_t v93 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 14;
      uint64_t v94 = swift_getObjectType();
      BOOL v95 = (void *)swift_unknownObjectRetain();
      uint64_t v96 = sub_1BFFDCA34(v95, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v94);
      uint64_t v98 = v97;
      swift_unknownObjectRelease();
      uint64_t *v93 = v96;
      v93[1] = v98;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0x694E7374726F7073;
      unsigned int v92 = 1634626403;
LABEL_18:
      unint64_t v11 = v92 | 0xEE00656D00000000;
      goto LABEL_25;
    case 0xF:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      unint64_t v99 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 15;
      uint64_t v100 = swift_getObjectType();
      uint64_t v101 = (void *)swift_unknownObjectRetain();
      uint64_t v102 = sub_1BFFDCA34(v101, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v100);
      uint64_t v104 = v103;
      swift_unknownObjectRelease();
      *unint64_t v99 = v102;
      v99[1] = v104;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v49 = 0x7374726F7073;
LABEL_20:
      uint64_t v10 = v49 & 0xFFFFFFFFFFFFLL | 0x7954000000000000;
      unint64_t v11 = 0xEA00000000006570;
      goto LABEL_25;
    case 0x10:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      uint64_t v105 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 16;
      uint64_t v106 = swift_getObjectType();
      uint64_t v107 = (void *)swift_unknownObjectRetain();
      uint64_t v108 = sub_1BFFDCA34(v107, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v106);
      uint64_t v110 = v109;
      swift_unknownObjectRelease();
      uint64_t *v105 = v108;
      v105[1] = v110;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0xD000000000000015;
      uint64_t v36 = "sportsTypeDisplayName";
      goto LABEL_24;
    case 0x11:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      uint64_t v111 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 17;
      uint64_t v112 = swift_getObjectType();
      uint64_t v113 = (void *)swift_unknownObjectRetain();
      uint64_t v114 = sub_1BFFDCA34(v113, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v112);
      uint64_t v116 = v115;
      swift_unknownObjectRelease();
      uint64_t *v111 = v114;
      v111[1] = v116;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0xD00000000000001FLL;
      uint64_t v36 = "sportsTypePluralizedDisplayName";
      goto LABEL_24;
    case 0x12:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      uint64_t v117 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 18;
      uint64_t v118 = swift_getObjectType();
      uint64_t v119 = (void *)swift_unknownObjectRetain();
      uint64_t v120 = sub_1BFFDCA34(v119, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v118);
      uint64_t v122 = v121;
      swift_unknownObjectRelease();
      *uint64_t v117 = v120;
      v117[1] = v122;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0xD000000000000010;
      uint64_t v36 = "sportsLeagueType";
LABEL_24:
      unint64_t v11 = (unint64_t)(v36 - 32) | 0x8000000000000000;
      goto LABEL_25;
    case 0x13:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      int64_t v137 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 19;
      uint64_t v138 = swift_getObjectType();
      uint64_t v139 = (void *)swift_unknownObjectRetain();
      uint64_t v140 = sub_1BFFDCA34(v139, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v138);
      uint64_t v142 = v141;
      swift_unknownObjectRelease();
      *int64_t v137 = v140;
      v137[1] = v142;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0x656C746974627573;
      unint64_t v11 = 0xE800000000000000;
      goto LABEL_25;
    case 0x14:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      long long v124 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 20;
      uint64_t v125 = swift_getObjectType();
      long long v126 = (void *)swift_unknownObjectRetain();
      uint64_t v127 = sub_1BFFDCA34(v126, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v125);
      uint64_t v129 = v128;
      swift_unknownObjectRelease();
      *long long v124 = v127;
      v124[1] = v129;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0x656E697A6167616DLL;
      unint64_t v11 = 0xED000065726E6547;
      goto LABEL_25;
    case 0x15:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      long long v130 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 21;
      uint64_t v131 = swift_getObjectType();
      char v132 = (void *)swift_unknownObjectRetain();
      uint64_t v133 = sub_1BFFDCA34(v132, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v131);
      uint64_t v135 = v134;
      swift_unknownObjectRelease();
      uint64_t *v130 = v133;
      v130[1] = v135;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0x65676175676E616CLL;
      unint64_t v11 = 0xE800000000000000;
      goto LABEL_25;
    case 0x16:
      uint64_t v136 = type metadata accessor for FormatJsonKeyValue();
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))(a2, 1, 1, v136);
    default:
      uint64_t v3 = type metadata accessor for FormatJsonKeyValue();
      uint64_t v4 = (uint64_t *)((char *)a2 + *(int *)(v3 + 20));
      char v143 = 0;
      uint64_t v5 = swift_getObjectType();
      uint64_t v6 = (void *)swift_unknownObjectRetain();
      uint64_t v7 = sub_1BFFDCA34(v6, (void (*)(uint64_t))sub_1C01B4D28, 0, &v143, v5);
      uint64_t v9 = v8;
      swift_unknownObjectRelease();
      *uint64_t v4 = v7;
      v4[1] = v9;
      type metadata accessor for FormatJson();
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = 0x696669746E656469;
      unint64_t v11 = 0xEA00000000007265;
LABEL_25:
      *a2 = v10;
      a2[1] = v11;
      return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a2, 0, 1, v3);
  }
}

double sub_1C1117BF4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD v6[2] = a1;
  uint64_t v3 = sub_1C0182048((void (*)(char *))sub_1C1117D8C, (uint64_t)v6, (uint64_t)&unk_1F1B64798);
  sub_1C09BCFA4(1954047316, 0xE400000000000000, 0, 0, v3, v7);
  swift_bridgeObjectRelease();
  double result = *(double *)v7;
  long long v5 = v7[1];
  *(_OWORD *)a2 = v7[0];
  *(_OWORD *)(a2 + 16) = v5;
  *(void *)(a2 + 32) = v8;
  return result;
}

void sub_1C1117C94()
{
  if (!qword_1EB866A58)
  {
    sub_1C1117CF0();
    unint64_t v0 = type metadata accessor for FormatCellAutomation();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB866A58);
    }
  }
}

unint64_t sub_1C1117CF0()
{
  unint64_t result = qword_1EB865B20;
  if (!qword_1EB865B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865B20);
  }
  return result;
}

uint64_t sub_1C1117D44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1117D8C@<X0>(unsigned char *a1@<X0>, void *a2@<X8>)
{
  return sub_1C1116714(a1, *(void **)(v2 + 16), a2);
}

unsigned char *storeEnumTagSinglePayload for DebugFormatCacheKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1117E78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCacheKind()
{
  return &type metadata for DebugFormatCacheKind;
}

unint64_t sub_1C1117EB4()
{
  unint64_t result = qword_1EA1ABA98;
  if (!qword_1EA1ABA98)
  {
    sub_1C1117F0C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABA98);
  }
  return result;
}

void sub_1C1117F0C()
{
  if (!qword_1EA1ABAA0)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ABAA0);
    }
  }
}

uint64_t sub_1C1117F64@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C1117FC4(void *a1@<X8>)
{
  *a1 = &unk_1F1B6A930;
}

unint64_t sub_1C1117FD8()
{
  unint64_t result = qword_1EA1ABAA8;
  if (!qword_1EA1ABAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABAA8);
  }
  return result;
}

id FormatLayoutViewToken.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id FormatLayoutViewToken.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed21FormatLayoutViewToken_children] = MEMORY[0x1E4FBC860];
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

id FormatLayoutViewToken.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *assignWithCopy for DebugFormatFileTreeView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for DebugFormatFileTreeView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatFileTreeView()
{
  return &type metadata for DebugFormatFileTreeView;
}

uint64_t sub_1C111817C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C1118198()
{
  uint64_t v0 = type metadata accessor for DebugFormatCacheFile();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v74 = (uint64_t)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C111AA48(0, (unint64_t *)&qword_1EA1A5240, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v78 = (uint64_t)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v67 - v7;
  id v76 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v1 + 56);
  uint64_t v77 = v1 + 56;
  v76((char *)&v67 - v7, 1, 1, v0, v6);
  uint64_t v75 = type metadata accessor for DebugFormatFileTreeItem();
  uint64_t v9 = swift_allocObject();
  sub_1C151634C();
  uint64_t v10 = (void *)(v9 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name);
  *uint64_t v10 = 47;
  v10[1] = 0xE100000000000000;
  swift_beginAccess();
  LOBYTE(v90) = 1;
  sub_1C151CF5C();
  swift_endAccess();
  sub_1C0314CAC((uint64_t)v8, v9 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_cacheFile);
  uint64_t v68 = v9;
  uint64_t v67 = (uint64_t *)(v9 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
  *uint64_t v67 = MEMORY[0x1E4FBC860];
  uint64_t v79 = v0;
  uint64_t result = sub_1C151EC4C();
  uint64_t v72 = *(void *)(result + 16);
  if (!v72)
  {
LABEL_66:
    swift_bridgeObjectRelease();
    uint64_t v59 = v67;
    swift_beginAccess();
    uint64_t v60 = *v59;
    uint64_t v61 = v68;
    swift_setDeallocating();
    uint64_t v62 = v61 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_id;
    uint64_t v63 = sub_1C151635C();
    long long v64 = *(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8);
    swift_bridgeObjectRetain();
    v64(v62, v63);
    sub_1C101129C(v61 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_cacheFile);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v65 = v61 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem__isExpanded;
    sub_1C111AF58(0, (unint64_t *)&qword_1EA1AA418, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC70]);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8))(v65, v66);
    swift_deallocClassInstance();
    return v60;
  }
  unint64_t v12 = 0;
  unint64_t v71 = result + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v70 = v1;
  uint64_t v69 = result;
  while (1)
  {
    if (v12 >= *(void *)(result + 16)) {
      goto LABEL_70;
    }
    uint64_t v14 = *(void *)(v1 + 72);
    unint64_t v73 = v12;
    sub_1C0C7A164(v71 + v14 * v12, v74);
    uint64_t v90 = 47;
    unint64_t v91 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1BFF27ECC();
    uint64_t v15 = sub_1C151FF1C();
    swift_bridgeObjectRelease();
    unint64_t v16 = *(void *)(v15 + 16);
    if (v16) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_4:
    unint64_t v13 = v73 + 1;
    sub_1C111A838(v74);
    unint64_t v12 = v13;
    uint64_t v1 = v70;
    uint64_t result = v69;
    if (v13 == v72) {
      goto LABEL_66;
    }
  }
  uint64_t v83 = v15 + 32;
  id v80 = (void *)(v15 + 32 * v16);
  uint64_t v17 = v68;
  swift_retain();
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v18 = 0;
  unint64_t v81 = v16;
  uint64_t v82 = v15;
  while (1)
  {
    if (v18 >= *(void *)(v15 + 16)) {
      goto LABEL_68;
    }
    unint64_t v88 = v18;
    uint64_t v21 = (unint64_t *)(v83 + 32 * v18);
    unint64_t v23 = *v21;
    unint64_t v22 = v21[1];
    unint64_t v24 = v21[2];
    unint64_t v25 = v21[3];
    uint64_t v26 = (void *)(v17 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
    swift_beginAccess();
    uint64_t v27 = *v26;
    uint64_t v28 = *v26 >> 62;
    long long v86 = v26;
    uint64_t v87 = v17;
    if (v28)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1C15204BC();
    }
    else
    {
      uint64_t v29 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
    }
    unint64_t v84 = v23;
    unint64_t v85 = v22;
    unint64_t v30 = v23 >> 16;
    unint64_t v31 = v22 >> 16;
    if (!v29) {
      goto LABEL_52;
    }
    if ((v27 & 0xC000000000000001) != 0)
    {
      uint64_t v32 = MEMORY[0x1C18C7CB0](0, v27);
    }
    else
    {
      uint64_t v32 = *(void *)(v27 + 32);
      swift_retain();
    }
    uint64_t v33 = *(void *)(v32 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name);
    unint64_t v34 = *(void *)(v32 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8);
    uint64_t v35 = (v34 & 0x2000000000000000) != 0 ? HIBYTE(v34) & 0xF : v33 & 0xFFFFFFFFFFFFLL;
    BOOL v36 = v33 == v24 && v34 == v25;
    BOOL v37 = v36 && v30 == 0;
    BOOL v38 = v37 && v35 == v31;
    if (!v38 && (sub_1C152087C() & 1) == 0) {
      break;
    }
LABEL_8:
    unint64_t v19 = v81;
    uint64_t v15 = v82;
    unint64_t v20 = v88;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    uint64_t v17 = v32;
LABEL_9:
    unint64_t v18 = v20 + 1;
    if (v18 == v19)
    {
      swift_bridgeObjectRelease_n();
      swift_release();
      goto LABEL_4;
    }
  }
  swift_release();
  if (v29 == 1)
  {
LABEL_52:
    uint64_t result = swift_bridgeObjectRelease_n();
    unint64_t v19 = v81;
    uint64_t v15 = v82;
    if (v81 > *(void *)(v82 + 16)) {
      goto LABEL_69;
    }
    if (v24 == v80[2] && v25 == v80[3] && v30 == *v80 >> 16 && v31 == v80[1] >> 16 || (sub_1C152087C() & 1) != 0)
    {
      uint64_t v49 = MEMORY[0x1C18C6220](v84, v85, v24, v25);
      uint64_t v51 = v50;
      swift_bridgeObjectRelease();
      uint64_t v52 = v78;
      sub_1C0C7A164(v74, v78);
      uint64_t v53 = v52;
      uint64_t v54 = 0;
    }
    else
    {
      uint64_t v49 = MEMORY[0x1C18C6220](v84, v85, v24, v25);
      uint64_t v51 = v55;
      swift_bridgeObjectRelease();
      uint64_t v52 = v78;
      uint64_t v53 = v78;
      uint64_t v54 = 1;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v76)(v53, v54, 1, v79);
    uint64_t v17 = swift_allocObject();
    sub_1C151634C();
    uint64_t v56 = (uint64_t *)(v17 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name);
    uint64_t *v56 = v49;
    v56[1] = v51;
    swift_beginAccess();
    char v89 = 1;
    sub_1C151CF5C();
    swift_endAccess();
    unint64_t v20 = v88;
    uint64_t v57 = v86;
    sub_1C0314CAC(v52, v17 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_cacheFile);
    *(void *)(v17 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children) = MEMORY[0x1E4FBC860];
    swift_beginAccess();
    uint64_t v58 = swift_retain();
    MEMORY[0x1C18C66D0](v58);
    if (*(void *)((*v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
    swift_endAccess();
    uint64_t result = swift_release();
    goto LABEL_9;
  }
  uint64_t v39 = 5;
  while (1)
  {
    uint64_t v40 = v39 - 4;
    if ((v27 & 0xC000000000000001) == 0) {
      break;
    }
    uint64_t result = MEMORY[0x1C18C7CB0](v39 - 4, v27);
    uint64_t v32 = result;
    BOOL v41 = __OFADD__(v40, 1);
    uint64_t v42 = v39 - 3;
    if (v41) {
      goto LABEL_67;
    }
LABEL_37:
    uint64_t v43 = *(void *)(v32 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name);
    unint64_t v44 = *(void *)(v32 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8);
    if ((v44 & 0x2000000000000000) != 0) {
      uint64_t v45 = HIBYTE(v44) & 0xF;
    }
    else {
      uint64_t v45 = v43 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v48 = v43 == v24 && v44 == v25 && v30 == 0 && v45 == v31;
    if (v48 || (sub_1C152087C() & 1) != 0) {
      goto LABEL_8;
    }
    swift_release();
    ++v39;
    if (v42 == v29) {
      goto LABEL_52;
    }
  }
  uint64_t v32 = *(void *)(v27 + 8 * v39);
  uint64_t result = swift_retain();
  BOOL v41 = __OFADD__(v40, 1);
  uint64_t v42 = v39 - 3;
  if (!v41) {
    goto LABEL_37;
  }
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
  return result;
}

uint64_t sub_1C1118B60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v5 = sub_1C151DCFC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C111A894();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C111AD34();
  uint64_t v27 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  sub_1C111A914();
  sub_1C111ABC0();
  sub_1C151DF8C();
  sub_1C151DCEC();
  sub_1C111B148(&qword_1EA1ABAF0, (void (*)(uint64_t))sub_1C111A894);
  sub_1C151E09C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  id v18 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t v19 = MEMORY[0x1C18C5C00](v18);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = v19;
  swift_retain();
  uint64_t v21 = sub_1C151DC5C();
  uint64_t v23 = v27;
  uint64_t v22 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v28, v17, v27);
  swift_release();
  sub_1C111AE68(0, &qword_1EA1ABAF8, (void (*)(uint64_t))sub_1C111AD34, (void (*)(uint64_t))sub_1C111AEDC);
  unint64_t v25 = (uint64_t *)(v22 + *(int *)(v24 + 36));
  uint64_t *v25 = KeyPath;
  v25[1] = v21;
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v23);
}

uint64_t sub_1C1118EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v14 = a3;
  sub_1C111A914();
  uint64_t v13 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C151CF6C();
  swift_release();
  swift_release();
  swift_release();
  if (v15 < 0 || (v15 & 0x4000000000000000) != 0)
  {
    unint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v9 = (uint64_t)sub_1C00B3D64(v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v15 = v9;
  sub_1C111947C(&v15);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  sub_1C111AA48(0, &qword_1EA196790, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatFileTreeItem, MEMORY[0x1E4FBB320]);
  sub_1C111AE68(0, &qword_1EA1ABAC8, (void (*)(uint64_t))sub_1C111AAAC, (void (*)(uint64_t))sub_1C111AB2C);
  sub_1C0F45454();
  sub_1C111B148((unint64_t *)&qword_1EA1A9198, MEMORY[0x1E4F27990]);
  sub_1C111AC30();
  swift_retain();
  sub_1C151E12C();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v14, v8, v13);
}

uint64_t sub_1C1119190@<X0>(uint64_t a1@<X8>)
{
  sub_1C111AAAC();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DebugFormatFileTreeModel();
  sub_1C111B148((unint64_t *)&qword_1EA1A63D8, (void (*)(uint64_t))type metadata accessor for DebugFormatFileTreeModel);
  swift_retain();
  swift_retain();
  uint64_t v7 = sub_1C151DCBC();
  uint64_t v9 = v8;
  type metadata accessor for DebugFormatFileTreeItem();
  sub_1C111B148(&qword_1EA1A90D8, (void (*)(uint64_t))type metadata accessor for DebugFormatFileTreeItem);
  uint64_t v10 = sub_1C151DCBC();
  v15[0] = v7;
  v15[1] = v9;
  v15[2] = v10;
  v15[3] = v11;
  sub_1C151DC4C();
  sub_1C0F45948();
  sub_1C151E06C();
  swift_release();
  swift_release();
  v15[0] = sub_1C151E0BC();
  swift_retain();
  uint64_t v12 = sub_1C151E11C();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(a1, v6, v3);
  swift_release();
  sub_1C111AE68(0, &qword_1EA1ABAC8, (void (*)(uint64_t))sub_1C111AAAC, (void (*)(uint64_t))sub_1C111AB2C);
  *(void *)(a1 + *(int *)(v13 + 36)) = v12;
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1C111940C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1118B60(*v1, v1[1], a1);
}

uint64_t sub_1C1119414@<X0>(void *a1@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 47;
  a1[1] = 0xE100000000000000;
  return result;
}

uint64_t sub_1C111947C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1BFEAF960(v2);
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1C11195F4(v6);
  return sub_1C152026C();
}

uint64_t sub_1C11194F8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C151CF6C();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C1119578()
{
  return sub_1C151CF7C();
}

uint64_t sub_1C11195F4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C152086C();
  uint64_t v136 = v3;
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_209;
    }
    if ((unint64_t)v3 < 2) {
      return result;
    }
    uint64_t v8 = (void *)*a1;
    uint64_t v9 = -1;
    uint64_t v10 = 1;
    uint64_t v11 = (void *)*a1;
    while (1)
    {
      int64_t v137 = v11;
      uint64_t v140 = v10;
      uint64_t v12 = v8[v10];
      uint64_t v141 = v9;
      while (1)
      {
        uint64_t v13 = *v11;
        uint64_t v14 = (void *)(v12 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
        swift_beginAccess();
        if (*v14 >> 62)
        {
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v15 = sub_1C15204BC();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v15 = *(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          swift_retain();
        }
        uint64_t v16 = (unint64_t *)(v13 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
        swift_beginAccess();
        unint64_t v17 = *v16;
        if (v17 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v18 = sub_1C15204BC();
          swift_bridgeObjectRelease();
          if (v15)
          {
LABEL_18:
            if (!v18) {
              goto LABEL_29;
            }
            goto LABEL_23;
          }
        }
        else
        {
          uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v15) {
            goto LABEL_18;
          }
        }
        if (v18) {
          break;
        }
LABEL_23:
        if (*(void *)(v13 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name) != *(void *)(v12 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name)
          || *(void *)(v13 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8) != *(void *)(v12 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8))
        {
          char v20 = sub_1C1520A9C();
          swift_release();
          uint64_t result = swift_release();
          if (v20) {
            goto LABEL_12;
          }
          goto LABEL_30;
        }
LABEL_29:
        swift_release();
        uint64_t result = swift_release();
LABEL_30:
        if (!v8) {
          goto LABEL_213;
        }
        uint64_t v21 = *v11;
        uint64_t v12 = v11[1];
        void *v11 = v12;
        v11[1] = v21;
        --v11;
        if (__CFADD__(v9++, 1)) {
          goto LABEL_12;
        }
      }
      swift_release();
      uint64_t result = swift_release();
LABEL_12:
      uint64_t v10 = v140 + 1;
      uint64_t v11 = v137 + 1;
      uint64_t v9 = v141 - 1;
      if (v140 + 1 == v136) {
        return result;
      }
    }
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_218;
  }
  uint64_t v132 = result;
  uint64_t v129 = a1;
  if (v3 < 2)
  {
    uint64_t v23 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v143 = MEMORY[0x1E4FBC860];
    uint64_t v139 = (char *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v26 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_175:
      if (v26 >= 2)
      {
        uint64_t v122 = *v129;
        do
        {
          unint64_t v123 = v26 - 2;
          if (v26 < 2) {
            goto LABEL_204;
          }
          if (!v122) {
            goto LABEL_217;
          }
          long long v124 = v23;
          uint64_t v125 = *(void *)&v23[16 * v123 + 32];
          uint64_t v126 = *(void *)&v23[16 * v26 + 24];
          sub_1C111A2AC((char *)(v122 + 8 * v125), (char *)(v122 + 8 * *(void *)&v23[16 * v26 + 16]), v122 + 8 * v126, v139);
          if (v1) {
            break;
          }
          if (v126 < v125) {
            goto LABEL_205;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v124 = sub_1C063604C((uint64_t)v124);
          }
          if (v123 >= *((void *)v124 + 2)) {
            goto LABEL_206;
          }
          uint64_t v127 = &v124[16 * v123 + 32];
          *(void *)uint64_t v127 = v125;
          *((void *)v127 + 1) = v126;
          unint64_t v128 = *((void *)v124 + 2);
          if (v26 > v128) {
            goto LABEL_207;
          }
          memmove(&v124[16 * v26 + 16], &v124[16 * v26 + 32], 16 * (v128 - v26));
          uint64_t v23 = v124;
          *((void *)v124 + 2) = v128 - 1;
          unint64_t v26 = v128 - 1;
        }
        while (v128 > 2);
      }
LABEL_186:
      swift_bridgeObjectRelease();
      *(void *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1C151EBEC();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    type metadata accessor for DebugFormatFileTreeItem();
    uint64_t v7 = sub_1C151ECCC();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    uint64_t v139 = (char *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v143 = v7;
  }
  uint64_t v24 = 0;
  uint64_t v25 = *a1;
  uint64_t v130 = *a1 - 8;
  uint64_t v131 = *a1 + 16;
  uint64_t v23 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v142 = *a1;
LABEL_38:
  uint64_t v27 = v24++;
  uint64_t v138 = v27;
  if (v24 >= v3) {
    goto LABEL_89;
  }
  uint64_t v133 = v23;
  uint64_t v28 = *(void *)(v25 + 8 * v24);
  uint64_t v29 = *(void *)(v25 + 8 * v27);
  uint64_t v30 = (unint64_t *)(v28 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
  swift_beginAccess();
  unint64_t v31 = *v30;
  if (v31 >> 62)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_retain();
  }
  uint64_t v33 = (unint64_t *)(v29 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
  swift_beginAccess();
  unint64_t v34 = *v33;
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v32)
    {
LABEL_43:
      if (!v35)
      {
        swift_release();
        swift_release();
        int v36 = 1;
        goto LABEL_56;
      }
      goto LABEL_49;
    }
  }
  else
  {
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v32) {
      goto LABEL_43;
    }
  }
  if (v35)
  {
    swift_release();
    swift_release();
    int v36 = 0;
    goto LABEL_56;
  }
LABEL_49:
  if (*(void *)(v29 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name) == *(void *)(v28
                                                                                               + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name)
    && *(void *)(v29 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8) == *(void *)(v28 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8))
  {
    int v38 = 0;
  }
  else
  {
    int v38 = sub_1C1520A9C();
  }
  swift_release();
  swift_release();
  int v36 = v38 ^ 1;
LABEL_56:
  uint64_t v24 = v27 + 2;
  if (v27 + 2 >= v3)
  {
    uint64_t v23 = v133;
    uint64_t v25 = v142;
    if (v36)
    {
LABEL_81:
      if (v24 < v27) {
        goto LABEL_212;
      }
LABEL_82:
      if (v27 < v24)
      {
        uint64_t v50 = (uint64_t *)(v130 + 8 * v24);
        uint64_t v51 = v24;
        uint64_t v52 = v27;
        uint64_t v53 = (uint64_t *)(v25 + 8 * v27);
        do
        {
          if (v52 != --v51)
          {
            if (!v25) {
              goto LABEL_216;
            }
            uint64_t v54 = *v53;
            uint64_t *v53 = *v50;
            *uint64_t v50 = v54;
          }
          ++v52;
          --v50;
          ++v53;
        }
        while (v52 < v51);
      }
    }
LABEL_89:
    if (v24 >= v3) {
      goto LABEL_124;
    }
LABEL_90:
    if (__OFSUB__(v24, v27)) {
      goto LABEL_208;
    }
    if (v24 - v27 >= v132) {
      goto LABEL_124;
    }
    if (__OFADD__(v27, v132)) {
      goto LABEL_210;
    }
    if (v27 + v132 >= v3) {
      uint64_t v55 = v3;
    }
    else {
      uint64_t v55 = v27 + v132;
    }
    if (v55 < v27)
    {
LABEL_211:
      __break(1u);
      goto LABEL_212;
    }
    if (v24 == v55) {
      goto LABEL_124;
    }
    uint64_t v134 = v23;
    uint64_t v135 = v55;
    uint64_t v56 = (uint64_t *)(v130 + 8 * v24);
LABEL_102:
    uint64_t v57 = *(void *)(v25 + 8 * v24);
    uint64_t v58 = v27;
    uint64_t v59 = v56;
    while (1)
    {
      uint64_t v60 = *v59;
      uint64_t v61 = (unint64_t *)(v57 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
      swift_beginAccess();
      unint64_t v62 = *v61;
      if (v62 >> 62)
      {
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v63 = sub_1C15204BC();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v63 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_retain();
        swift_retain();
      }
      long long v64 = (unint64_t *)(v60 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
      swift_beginAccess();
      unint64_t v65 = *v64;
      if (v65 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v66 = sub_1C15204BC();
        swift_bridgeObjectRelease();
        if (v63)
        {
LABEL_107:
          if (!v66) {
            goto LABEL_118;
          }
          goto LABEL_112;
        }
      }
      else
      {
        uint64_t v66 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v63) {
          goto LABEL_107;
        }
      }
      if (v66)
      {
        swift_release();
        swift_release();
LABEL_100:
        uint64_t v25 = v142;
LABEL_101:
        ++v24;
        ++v56;
        uint64_t v27 = v138;
        if (v24 != v135) {
          goto LABEL_102;
        }
        uint64_t v24 = v135;
        uint64_t v23 = v134;
LABEL_124:
        if (v24 < v27) {
          goto LABEL_203;
        }
        uint64_t v70 = v23;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v23 = v70;
        }
        else {
          uint64_t v23 = sub_1C0634CC8(0, *((void *)v70 + 2) + 1, 1, v70);
        }
        unint64_t v72 = *((void *)v23 + 2);
        unint64_t v71 = *((void *)v23 + 3);
        unint64_t v26 = v72 + 1;
        uint64_t v25 = v142;
        if (v72 >= v71 >> 1)
        {
          uint64_t v121 = sub_1C0634CC8((char *)(v71 > 1), v72 + 1, 1, v23);
          uint64_t v25 = v142;
          uint64_t v23 = v121;
        }
        *((void *)v23 + 2) = v26;
        unint64_t v73 = v23 + 32;
        uint64_t v74 = &v23[16 * v72 + 32];
        *(void *)uint64_t v74 = v138;
        *((void *)v74 + 1) = v24;
        if (v72)
        {
          while (2)
          {
            unint64_t v75 = v26 - 1;
            if (v26 >= 4)
            {
              id v80 = &v73[16 * v26];
              uint64_t v81 = *((void *)v80 - 8);
              uint64_t v82 = *((void *)v80 - 7);
              BOOL v86 = __OFSUB__(v82, v81);
              uint64_t v83 = v82 - v81;
              if (v86) {
                goto LABEL_192;
              }
              uint64_t v85 = *((void *)v80 - 6);
              uint64_t v84 = *((void *)v80 - 5);
              BOOL v86 = __OFSUB__(v84, v85);
              uint64_t v78 = v84 - v85;
              char v79 = v86;
              if (v86) {
                goto LABEL_193;
              }
              unint64_t v87 = v26 - 2;
              unint64_t v88 = &v73[16 * v26 - 32];
              uint64_t v90 = *(void *)v88;
              uint64_t v89 = *((void *)v88 + 1);
              BOOL v86 = __OFSUB__(v89, v90);
              uint64_t v91 = v89 - v90;
              if (v86) {
                goto LABEL_195;
              }
              BOOL v86 = __OFADD__(v78, v91);
              uint64_t v92 = v78 + v91;
              if (v86) {
                goto LABEL_198;
              }
              if (v92 >= v83)
              {
                uint64_t v110 = &v73[16 * v75];
                uint64_t v112 = *(void *)v110;
                uint64_t v111 = *((void *)v110 + 1);
                BOOL v86 = __OFSUB__(v111, v112);
                uint64_t v113 = v111 - v112;
                if (v86) {
                  goto LABEL_202;
                }
                BOOL v103 = v78 < v113;
              }
              else
              {
LABEL_143:
                if (v79) {
                  goto LABEL_194;
                }
                unint64_t v87 = v26 - 2;
                unint64_t v93 = &v73[16 * v26 - 32];
                uint64_t v95 = *(void *)v93;
                uint64_t v94 = *((void *)v93 + 1);
                BOOL v96 = __OFSUB__(v94, v95);
                uint64_t v97 = v94 - v95;
                char v98 = v96;
                if (v96) {
                  goto LABEL_197;
                }
                unint64_t v99 = &v73[16 * v75];
                uint64_t v101 = *(void *)v99;
                uint64_t v100 = *((void *)v99 + 1);
                BOOL v86 = __OFSUB__(v100, v101);
                uint64_t v102 = v100 - v101;
                if (v86) {
                  goto LABEL_200;
                }
                if (__OFADD__(v97, v102)) {
                  goto LABEL_201;
                }
                if (v97 + v102 < v78) {
                  goto LABEL_155;
                }
                BOOL v103 = v78 < v102;
              }
              if (v103) {
                unint64_t v75 = v87;
              }
            }
            else
            {
              if (v26 == 3)
              {
                uint64_t v77 = *((void *)v23 + 4);
                uint64_t v76 = *((void *)v23 + 5);
                BOOL v86 = __OFSUB__(v76, v77);
                uint64_t v78 = v76 - v77;
                char v79 = v86;
                goto LABEL_143;
              }
              uint64_t v104 = *((void *)v23 + 4);
              uint64_t v105 = *((void *)v23 + 5);
              BOOL v86 = __OFSUB__(v105, v104);
              uint64_t v97 = v105 - v104;
              char v98 = v86;
LABEL_155:
              if (v98) {
                goto LABEL_196;
              }
              uint64_t v106 = &v73[16 * v75];
              uint64_t v108 = *(void *)v106;
              uint64_t v107 = *((void *)v106 + 1);
              BOOL v86 = __OFSUB__(v107, v108);
              uint64_t v109 = v107 - v108;
              if (v86) {
                goto LABEL_199;
              }
              if (v109 < v97) {
                goto LABEL_37;
              }
            }
            unint64_t v114 = v75 - 1;
            if (v75 - 1 >= v26)
            {
              __break(1u);
LABEL_189:
              __break(1u);
LABEL_190:
              __break(1u);
LABEL_191:
              __break(1u);
LABEL_192:
              __break(1u);
LABEL_193:
              __break(1u);
LABEL_194:
              __break(1u);
LABEL_195:
              __break(1u);
LABEL_196:
              __break(1u);
LABEL_197:
              __break(1u);
LABEL_198:
              __break(1u);
LABEL_199:
              __break(1u);
LABEL_200:
              __break(1u);
LABEL_201:
              __break(1u);
LABEL_202:
              __break(1u);
LABEL_203:
              __break(1u);
LABEL_204:
              __break(1u);
LABEL_205:
              __break(1u);
LABEL_206:
              __break(1u);
LABEL_207:
              __break(1u);
LABEL_208:
              __break(1u);
LABEL_209:
              __break(1u);
LABEL_210:
              __break(1u);
              goto LABEL_211;
            }
            if (!v25) {
              goto LABEL_215;
            }
            uint64_t v115 = v23;
            uint64_t v116 = &v73[16 * v114];
            uint64_t v117 = *(void *)v116;
            uint64_t v118 = &v73[16 * v75];
            uint64_t v119 = *((void *)v118 + 1);
            sub_1C111A2AC((char *)(v25 + 8 * *(void *)v116), (char *)(v25 + 8 * *(void *)v118), v25 + 8 * v119, v139);
            if (v1) {
              goto LABEL_186;
            }
            if (v119 < v117) {
              goto LABEL_189;
            }
            if (v75 > *((void *)v115 + 2)) {
              goto LABEL_190;
            }
            *(void *)uint64_t v116 = v117;
            *(void *)&v73[16 * v114 + 8] = v119;
            unint64_t v120 = *((void *)v115 + 2);
            if (v75 >= v120) {
              goto LABEL_191;
            }
            unint64_t v26 = v120 - 1;
            memmove(&v73[16 * v75], v118 + 16, 16 * (v120 - 1 - v75));
            uint64_t v23 = v115;
            *((void *)v115 + 2) = v120 - 1;
            uint64_t v25 = v142;
            if (v120 <= 2) {
              goto LABEL_37;
            }
            continue;
          }
        }
        unint64_t v26 = 1;
LABEL_37:
        uint64_t v3 = v136;
        if (v24 >= v136) {
          goto LABEL_175;
        }
        goto LABEL_38;
      }
LABEL_112:
      if (*(void *)(v60 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name) != *(void *)(v57 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name)
        || *(void *)(v60 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8) != *(void *)(v57 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8))
      {
        char v68 = sub_1C1520A9C();
        swift_release();
        swift_release();
        if (v68) {
          goto LABEL_100;
        }
        goto LABEL_119;
      }
LABEL_118:
      swift_release();
      swift_release();
LABEL_119:
      uint64_t v25 = v142;
      if (!v142) {
        goto LABEL_214;
      }
      uint64_t v69 = *v59;
      uint64_t v57 = v59[1];
      *uint64_t v59 = v57;
      v59[1] = v69;
      --v59;
      if (v24 == ++v58) {
        goto LABEL_101;
      }
    }
  }
  uint64_t v39 = (uint64_t *)(v131 + 8 * v27);
  while (1)
  {
    uint64_t v40 = *(v39 - 1);
    uint64_t v41 = *v39;
    uint64_t v42 = (unint64_t *)(*v39 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
    swift_beginAccess();
    unint64_t v43 = *v42;
    if (v43 >> 62)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1C15204BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_retain();
    }
    uint64_t v45 = (unint64_t *)(v40 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
    swift_beginAccess();
    unint64_t v46 = *v45;
    if (v46 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v44)
      {
LABEL_64:
        if (!v47) {
          goto LABEL_58;
        }
        goto LABEL_71;
      }
    }
    else
    {
      uint64_t v47 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v44) {
        goto LABEL_64;
      }
    }
    if (v47) {
      break;
    }
LABEL_71:
    if (*(void *)(v40 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name) == *(void *)(v41
                                                                                                 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name)
      && *(void *)(v40 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8) == *(void *)(v41 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8))
    {
LABEL_58:
      swift_release();
      swift_release();
      if ((v36 & 1) == 0)
      {
        uint64_t v3 = v136;
        uint64_t v27 = v138;
        uint64_t v23 = v133;
        uint64_t v25 = v142;
        if (v24 >= v136) {
          goto LABEL_124;
        }
        goto LABEL_90;
      }
      goto LABEL_59;
    }
    int v49 = sub_1C1520A9C();
    swift_release();
    swift_release();
    if (((v36 ^ v49) & 1) == 0)
    {
      uint64_t v3 = v136;
      goto LABEL_80;
    }
LABEL_59:
    ++v24;
    ++v39;
    if (v136 == v24)
    {
      uint64_t v3 = v136;
      uint64_t v24 = v136;
LABEL_80:
      uint64_t v23 = v133;
      uint64_t v25 = v142;
      uint64_t v27 = v138;
      if ((v36 & 1) == 0) {
        goto LABEL_89;
      }
      goto LABEL_81;
    }
  }
  swift_release();
  swift_release();
  if ((v36 & 1) == 0) {
    goto LABEL_59;
  }
  uint64_t v3 = v136;
  uint64_t v27 = v138;
  uint64_t v23 = v133;
  uint64_t v25 = v142;
  if (v24 >= v138) {
    goto LABEL_82;
  }
LABEL_212:
  __break(1u);
LABEL_213:
  __break(1u);
LABEL_214:
  __break(1u);
LABEL_215:
  __break(1u);
LABEL_216:
  __break(1u);
LABEL_217:
  __break(1u);
LABEL_218:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C111A2AC(char *__src, char *a2, unint64_t a3, char *a4)
{
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = a2 - __src;
  int64_t v8 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v8 = a2 - __src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v50 = __src;
  int v49 = a4;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7) {
      goto LABEL_75;
    }
    if (a4 != a2 || &a2[8 * v12] <= a4) {
      memmove(a4, a2, 8 * v12);
    }
    unint64_t v26 = &a4[8 * v12];
    BOOL v48 = v26;
    uint64_t v50 = v5;
    if (v6 >= v5 || v10 < 8)
    {
LABEL_74:
      sub_1C0635DA8((void **)&v50, (const void **)&v49, &v48);
      return 1;
    }
    uint64_t v27 = (char *)(a3 - 8);
    uint64_t v28 = v5;
    unint64_t v43 = v6;
    while (1)
    {
      uint64_t v45 = v26;
      uint64_t v47 = v5;
      uint64_t v30 = *((void *)v26 - 1);
      v26 -= 8;
      uint64_t v29 = v30;
      uint64_t v32 = *((void *)v28 - 1);
      v28 -= 8;
      uint64_t v31 = v32;
      uint64_t v33 = (void *)(v29 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
      swift_beginAccess();
      if (*v33 >> 62)
      {
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v34 = sub_1C15204BC();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v34 = *(void *)((*v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_retain();
        swift_retain();
      }
      uint64_t v35 = (void *)(v31 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
      swift_beginAccess();
      if (*v35 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v36 = sub_1C15204BC();
        swift_bridgeObjectRelease();
        BOOL v37 = v27 + 8;
        if (v34)
        {
LABEL_50:
          if (!v36) {
            goto LABEL_65;
          }
          goto LABEL_56;
        }
      }
      else
      {
        uint64_t v36 = *(void *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
        BOOL v37 = v27 + 8;
        if (v34) {
          goto LABEL_50;
        }
      }
      if (v36)
      {
        swift_release();
        swift_release();
        unint64_t v38 = (unint64_t)v43;
        uint64_t v39 = v47;
        goto LABEL_61;
      }
LABEL_56:
      if (*(void *)(v31 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name) == *(void *)(v29 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name)
        && *(void *)(v31 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8) == *(void *)(v29 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8))
      {
LABEL_65:
        swift_release();
        swift_release();
        unint64_t v38 = (unint64_t)v43;
        uint64_t v39 = v47;
LABEL_66:
        unint64_t v26 = v45;
        if (v37 != v39 || v27 >= v39) {
          *(void *)uint64_t v27 = *(void *)v28;
        }
        uint64_t v50 = v28;
        goto LABEL_70;
      }
      char v41 = sub_1C1520A9C();
      swift_release();
      swift_release();
      unint64_t v38 = (unint64_t)v43;
      uint64_t v39 = v47;
      if ((v41 & 1) == 0) {
        goto LABEL_66;
      }
LABEL_61:
      BOOL v48 = v26;
      if (v37 >= v45 && v27 < v45 && v37 == v45)
      {
        uint64_t v28 = v39;
      }
      else
      {
        *(void *)uint64_t v27 = *(void *)v26;
        uint64_t v28 = v39;
      }
LABEL_70:
      if ((unint64_t)v28 > v38)
      {
        v27 -= 8;
        uint64_t v5 = v28;
        if (v26 > a4) {
          continue;
        }
      }
      goto LABEL_74;
    }
  }
  if (v7 >= -7)
  {
    if (a4 != __src || &__src[8 * v9] <= a4) {
      memmove(a4, __src, 8 * v9);
    }
    unint64_t v46 = &a4[8 * v9];
    BOOL v48 = v46;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      uint64_t v13 = a4;
      while (1)
      {
        uint64_t v14 = v6;
        uint64_t v15 = v5;
        uint64_t v16 = *(void *)v5;
        uint64_t v17 = *(void *)v13;
        uint64_t v18 = (void *)(v16 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
        swift_beginAccess();
        if (*v18 >> 62)
        {
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v19 = sub_1C15204BC();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v19 = *(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          swift_retain();
        }
        char v20 = (void *)(v17 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_children);
        swift_beginAccess();
        if (*v20 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v21 = sub_1C15204BC();
          swift_bridgeObjectRelease();
          if (!v19)
          {
LABEL_21:
            if (v21)
            {
              swift_release();
              swift_release();
LABEL_28:
              uint64_t v24 = v14;
              if (v14 != v13) {
                *(void *)uint64_t v14 = *(void *)v13;
              }
              v13 += 8;
              int v49 = v13;
              uint64_t v25 = v15;
              goto LABEL_36;
            }
            goto LABEL_23;
          }
        }
        else
        {
          uint64_t v21 = *(void *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v19) {
            goto LABEL_21;
          }
        }
        if (!v21) {
          goto LABEL_31;
        }
LABEL_23:
        if (*(void *)(v17 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name) == *(void *)(v16 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name)
          && *(void *)(v17 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8) == *(void *)(v16 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_name + 8))
        {
LABEL_31:
          swift_release();
          swift_release();
          goto LABEL_32;
        }
        char v23 = sub_1C1520A9C();
        swift_release();
        swift_release();
        if (v23) {
          goto LABEL_28;
        }
LABEL_32:
        uint64_t v25 = v15 + 8;
        uint64_t v24 = v14;
        if (v14 < v15 || v14 >= v25 || v14 != v15) {
          *(void *)uint64_t v14 = *(void *)v15;
        }
LABEL_36:
        uint64_t v6 = v24 + 8;
        if (v13 < v46)
        {
          uint64_t v5 = v25;
          if ((unint64_t)v25 < a3) {
            continue;
          }
        }
        uint64_t v50 = v6;
        goto LABEL_74;
      }
    }
    goto LABEL_74;
  }
LABEL_75:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C111A838(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatCacheFile();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C111A894()
{
  if (!qword_1EA1ABAB8)
  {
    sub_1C111A914();
    sub_1C111ABC0();
    unint64_t v0 = sub_1C151DF9C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ABAB8);
    }
  }
}

void sub_1C111A914()
{
  if (!qword_1EA1ABAC0)
  {
    sub_1C111AA48(255, &qword_1EA196790, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatFileTreeItem, MEMORY[0x1E4FBB320]);
    sub_1C151635C();
    sub_1C111AE68(255, &qword_1EA1ABAC8, (void (*)(uint64_t))sub_1C111AAAC, (void (*)(uint64_t))sub_1C111AB2C);
    sub_1C0F45454();
    sub_1C111B148((unint64_t *)&qword_1EA1A9198, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1C151E14C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ABAC0);
    }
  }
}

void sub_1C111AA48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C111AAAC()
{
  if (!qword_1EA1ABAD0)
  {
    sub_1C0F45948();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA1ABAD0);
    }
  }
}

void sub_1C111AB2C()
{
  if (!qword_1EA1A9180)
  {
    sub_1C151DF2C();
    sub_1C111B148(&qword_1EA1A9188, MEMORY[0x1E4F3DC98]);
    unint64_t v0 = sub_1C151DF0C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A9180);
    }
  }
}

unint64_t sub_1C111ABC0()
{
  unint64_t result = qword_1EA1ABAD8;
  if (!qword_1EA1ABAD8)
  {
    sub_1C111A914();
    sub_1C111AC30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABAD8);
  }
  return result;
}

unint64_t sub_1C111AC30()
{
  unint64_t result = qword_1EA1ABAE0;
  if (!qword_1EA1ABAE0)
  {
    sub_1C111AE68(255, &qword_1EA1ABAC8, (void (*)(uint64_t))sub_1C111AAAC, (void (*)(uint64_t))sub_1C111AB2C);
    sub_1C0F45948();
    swift_getOpaqueTypeConformance2();
    sub_1C111B148((unint64_t *)&qword_1EA1A91D8, (void (*)(uint64_t))sub_1C111AB2C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABAE0);
  }
  return result;
}

void sub_1C111AD34()
{
  if (!qword_1EA1ABAE8)
  {
    sub_1C111A894();
    sub_1C151DCFC();
    sub_1C111B148(&qword_1EA1ABAF0, (void (*)(uint64_t))sub_1C111A894);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA1ABAE8);
    }
  }
}

uint64_t sub_1C111AE08@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1118EC8(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1C111AE10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C151DD7C();
  *a1 = result;
  return result;
}

uint64_t sub_1C111AE3C()
{
  return sub_1C151DD8C();
}

void sub_1C111AE68(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_1C151DD2C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C111AEDC()
{
  if (!qword_1EA1ABB00)
  {
    sub_1C111AF58(255, &qword_1EA1ABB08, MEMORY[0x1E4F3C810], MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C151DF3C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ABB00);
    }
  }
}

void sub_1C111AF58(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C111AFAC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C111AFE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1119190(a1);
}

unint64_t sub_1C111AFF0()
{
  unint64_t result = qword_1EA1ABB10;
  if (!qword_1EA1ABB10)
  {
    sub_1C111AE68(255, &qword_1EA1ABAF8, (void (*)(uint64_t))sub_1C111AD34, (void (*)(uint64_t))sub_1C111AEDC);
    sub_1C111A894();
    sub_1C151DCFC();
    sub_1C111B148(&qword_1EA1ABAF0, (void (*)(uint64_t))sub_1C111A894);
    swift_getOpaqueTypeConformance2();
    sub_1C111B148(&qword_1EA1ABB18, (void (*)(uint64_t))sub_1C111AEDC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABB10);
  }
  return result;
}

uint64_t sub_1C111B148(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of LayeredMediaAssetHandlesProviderType.assetHandles(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1C111B1A4@<X0>(uint64_t a1@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for LayeredMediaImageVariant();
  MEMORY[0x1F4188790](*(void *)(v6 - 8));
  unint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (double *)((char *)&v24 - v10);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (double *)((char *)&v24 - v14);
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v25 = v13;
  if (v16)
  {
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    sub_1C0BA1CE8(v17, (uint64_t)&v24 - v14);
    double v18 = *a2 * 0.5;
    uint64_t v19 = *(void *)(v25 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C0BA1CE8(v17, (uint64_t)v11);
      if (vabdd_f64(v18, v11[1]) >= vabdd_f64(v18, v15[1])) {
        uint64_t v20 = (uint64_t)v15;
      }
      else {
        uint64_t v20 = (uint64_t)v11;
      }
      sub_1C0BA1CE8(v20, (uint64_t)v8);
      sub_1C111C28C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for LayeredMediaImageVariant);
      sub_1C111C28C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for LayeredMediaImageVariant);
      sub_1C111C224((uint64_t)v8, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for LayeredMediaImageVariant);
      v17 += v19;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    sub_1C111C224((uint64_t)v15, a3, (uint64_t (*)(void))type metadata accessor for LayeredMediaImageVariant);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(a3, 0, 1, v6);
  }
  else
  {
    if (qword_1EB85E5D8 != -1) {
      swift_once();
    }
    id v22 = (id)qword_1EB93C270;
    sub_1C151F36C();
    sub_1C15197BC();

    char v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
    return v23(a3, 1, 1, v6);
  }
}

uint64_t sub_1C111B490(void *a1)
{
  sub_1C111BFB0();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (id *)((char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v86 - v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v94 = (uint64_t *)((char *)&v86 - v9);
  uint64_t v106 = type metadata accessor for LayeredMediaImageVariant();
  uint64_t v10 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v12 = (id *)((char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (id *)((char *)&v86 - v14);
  *(void *)&double v17 = MEMORY[0x1F4188790](v16).n128_u64[0];
  uint64_t v19 = (id *)((char *)&v86 - v18);
  id v20 = objc_msgSend(a1, sel_layeredCoverJSON, v17);
  uint64_t v21 = MEMORY[0x1E4FBC860];
  if (v20)
  {
    id v22 = v20;
    uint64_t v91 = v19;
    uint64_t v92 = v7;
    uint64_t v90 = v15;
    uint64_t v23 = sub_1C151E62C();
    uint64_t v25 = v24;

    id v26 = objc_msgSend(a1, sel_identifier);
    uint64_t v27 = sub_1C151E62C();
    uint64_t v29 = v28;

    type metadata accessor for LayeredMediaParser();
    uint64_t v30 = (void *)swift_allocObject();
    v30[2] = v27;
    v30[3] = v29;
    v30[4] = v23;
    v30[5] = v25;
    LayeredMediaParser.parse()((uint64_t)&v124);
    unint64_t v93 = v12;
    uint64_t v88 = v10;
    uint64_t v89 = v30;
    BOOL v96 = v4;
    uint64_t v31 = *((void *)&v124 + 1);
    long long v32 = v125;
    uint64_t v33 = v126;
    uint64_t v34 = v127;
    uint64_t v35 = v129;
    uint64_t v105 = v130;
    uint64_t v87 = v132;
    uint64_t v36 = v133;
    uint64_t v103 = v124;
    uint64_t v104 = v134;
    uint64_t v135 = v21;
    uint64_t v100 = v133;
    long long v101 = v125;
    uint64_t v108 = v126;
    uint64_t v109 = v128;
    uint64_t v98 = v127;
    uint64_t v99 = v129;
    uint64_t v97 = *((void *)&v124 + 1);
    int v102 = v131;
    if (v131 < 0)
    {
      uint64_t v48 = v127;
      int v49 = v107;
      uint64_t v50 = v129;
      uint64_t v51 = v107[5];
      uint64_t v95 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))(v107 + 2);
      __swift_project_boxed_opaque_existential_1(v107 + 2, v51);
      uint64_t v52 = v103;
      *(void *)&long long v124 = v103;
      *((void *)&v124 + 1) = v31;
      long long v125 = v32;
      uint64_t v126 = v33;
      uint64_t v127 = v48;
      uint64_t v128 = v109;
      uint64_t v129 = v50;
      uint64_t v53 = v104;
      uint64_t v130 = v105;
      char v131 = v102;
      uint64_t v40 = v87;
      uint64_t v132 = v87;
      uint64_t v133 = v36;
      uint64_t v134 = v104;
      uint64_t v54 = sub_1C03BE600(v103, v31, (uint64_t)&v124);
      long long v55 = *(_OWORD *)(v49 + 19);
      long long v143 = *(_OWORD *)(v49 + 17);
      long long v144 = v55;
      uint64_t v145 = v49[21];
      uint64_t v42 = v49[17];
      uint64_t v43 = v49[18];
      uint64_t v44 = v49[19];
      uint64_t v45 = v49[20];
      uint64_t v46 = v49[21];
      sub_1C111C008(v54, (double *)&v143, v136);
      swift_bridgeObjectRelease();
      sub_1C111C224((uint64_t)v136, (uint64_t)&v137, (uint64_t (*)(void))sub_1C111C1CC);
      uint64_t v56 = v31;
      uint64_t v57 = v53;
      if (v137)
      {
        long long v140 = v138;
        long long v141 = v139;
        id v58 = v137;
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();

        long long v142 = v141;
        sub_1BFF5E6C8((uint64_t)&v142);
      }
      uint64_t v59 = v107;
      __swift_project_boxed_opaque_existential_1(v95, v107[5]);
      *(void *)&long long v124 = v52;
      *((void *)&v124 + 1) = v56;
      uint64_t v60 = *((void *)&v101 + 1);
      uint64_t v61 = v101;
      long long v125 = v101;
      uint64_t v62 = v108;
      uint64_t v126 = v108;
      uint64_t v127 = v98;
      uint64_t v128 = v109;
      uint64_t v129 = v99;
      uint64_t v130 = v105;
      char v131 = v102;
      uint64_t v132 = v40;
      uint64_t v133 = v100;
      uint64_t v134 = v57;
      uint64_t v63 = sub_1C03BE478(v101, *((uint64_t *)&v101 + 1), (uint64_t)&v124);
      __swift_project_boxed_opaque_existential_1(v59 + 7, v59[10]);
      long long v124 = v143;
      long long v125 = v144;
      uint64_t v126 = v145;
      uint64_t v64 = (uint64_t)v92;
      sub_1C0BFBE4C(v63, (uint64_t)&v124, (uint64_t)v92);
      swift_bridgeObjectRelease();
      uint64_t v95 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
      if (v95(v64, 1, v106) == 1)
      {
        sub_1C111C28C(v64, (uint64_t (*)(void))sub_1C111BFB0);
      }
      else
      {
        uint64_t v84 = v90;
        sub_1C111C224(v64, (uint64_t)v90, (uint64_t (*)(void))type metadata accessor for LayeredMediaImageVariant);
        uint64_t v94 = *v84;
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
        sub_1C111C28C((uint64_t)v84, (uint64_t (*)(void))type metadata accessor for LayeredMediaImageVariant);
      }
      uint64_t v39 = v109;
      uint64_t v68 = *(void *)(v40 + 16);
      if (v68) {
        goto LABEL_15;
      }
    }
    else
    {
      char v37 = v131;
      unint64_t v38 = v107;
      __swift_project_boxed_opaque_existential_1(v107 + 2, v107[5]);
      *(void *)&long long v124 = v103;
      *((void *)&v124 + 1) = v31;
      long long v125 = v32;
      uint64_t v126 = v33;
      uint64_t v127 = v34;
      uint64_t v39 = v109;
      uint64_t v128 = v109;
      uint64_t v129 = v35;
      uint64_t v130 = v105;
      char v131 = v37;
      uint64_t v40 = v87;
      uint64_t v132 = v87;
      uint64_t v133 = v36;
      uint64_t v134 = v104;
      uint64_t v41 = sub_1C03BE478(v103, v31, (uint64_t)&v124);
      __swift_project_boxed_opaque_existential_1(v38 + 7, v38[10]);
      uint64_t v42 = v38[17];
      uint64_t v43 = v38[18];
      uint64_t v44 = v38[19];
      uint64_t v45 = v38[20];
      uint64_t v46 = v38[21];
      *(void *)&long long v124 = v42;
      *((void *)&v124 + 1) = v43;
      *(void *)&long long v125 = v44;
      *((void *)&v125 + 1) = v45;
      uint64_t v126 = v46;
      uint64_t v47 = v94;
      sub_1C0BFBE4C(v41, (uint64_t)&v124, (uint64_t)v94);
      swift_bridgeObjectRelease();
      uint64_t v95 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
      if (v95((uint64_t)v47, 1, v106) == 1)
      {
        sub_1C111C28C((uint64_t)v47, (uint64_t (*)(void))sub_1C111BFB0);
      }
      else
      {
        uint64_t v65 = (uint64_t)v47;
        uint64_t v66 = v91;
        sub_1C111C224(v65, (uint64_t)v91, (uint64_t (*)(void))type metadata accessor for LayeredMediaImageVariant);
        id v67 = *v66;
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
        sub_1C111C28C((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for LayeredMediaImageVariant);
        uint64_t v39 = v109;
      }
      uint64_t v62 = v108;
      uint64_t v60 = *((void *)&v101 + 1);
      uint64_t v61 = v101;
      uint64_t v68 = *(void *)(v40 + 16);
      if (v68)
      {
LABEL_15:
        uint64_t v94 = v107 + 2;
        uint64_t v69 = v40;
        uint64_t v70 = v107 + 7;
        unint64_t v71 = (long long *)(v69 + 32);
        uint64_t v72 = v69;
        swift_bridgeObjectRetain();
        uint64_t v73 = v68 - 1;
        uint64_t v74 = v100;
        while (1)
        {
          sub_1C0E1D788(v71, v122);
          sub_1C0E1D788(v122, v123);
          unint64_t v75 = v107;
          __swift_project_boxed_opaque_existential_1(v94, v107[5]);
          long long v76 = v123[0];
          uint64_t v110 = v103;
          uint64_t v111 = v97;
          long long v112 = v101;
          uint64_t v113 = v108;
          uint64_t v114 = v98;
          uint64_t v115 = v109;
          uint64_t v116 = v99;
          uint64_t v117 = v105;
          char v118 = v102;
          uint64_t v119 = v72;
          uint64_t v120 = v74;
          uint64_t v121 = v104;
          sub_1C0E1D788(v122, &v124);
          sub_1C0E1D998(&v124);
          uint64_t v77 = sub_1C03BE478(v76, *((uint64_t *)&v76 + 1), (uint64_t)&v110);
          __swift_project_boxed_opaque_existential_1(v70, v75[10]);
          uint64_t v110 = v42;
          uint64_t v111 = v43;
          *(void *)&long long v112 = v44;
          *((void *)&v112 + 1) = v45;
          uint64_t v113 = v46;
          uint64_t v78 = v96;
          sub_1C0BFBE4C(v77, (uint64_t)&v110, (uint64_t)v96);
          swift_bridgeObjectRelease();
          if (v95((uint64_t)v78, 1, v106) == 1)
          {
            sub_1C0E1DA18(v122);
            char v79 = (uint64_t (*)(void))sub_1C111BFB0;
          }
          else
          {
            uint64_t v80 = (uint64_t)v78;
            uint64_t v78 = v93;
            sub_1C111C224(v80, (uint64_t)v93, (uint64_t (*)(void))type metadata accessor for LayeredMediaImageVariant);
            id v81 = *v78;
            MEMORY[0x1C18C66D0]();
            if (*(void *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C151EC8C();
            }
            sub_1C151ECEC();
            sub_1C151EBEC();
            sub_1C0E1DA18(v122);
            char v79 = (uint64_t (*)(void))type metadata accessor for LayeredMediaImageVariant;
          }
          sub_1C111C28C((uint64_t)v78, v79);
          uint64_t v74 = v100;
          uint64_t v83 = v108;
          uint64_t v82 = v109;
          if (!v73) {
            break;
          }
          --v73;
          v71 += 8;
        }
        swift_release();
        swift_bridgeObjectRelease();
        sub_1C09A1858(v103, v97, v101, *((uint64_t *)&v101 + 1), v83, v98, v82, v99, v105, v102);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
    swift_release();
    sub_1C09A1858(v103, v97, v61, v60, v62, v98, v39, v99, v105, v102);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_29:
    swift_bridgeObjectRelease();
    return v135;
  }
  return v21;
}

uint64_t sub_1C111BF20()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LayeredMediaAssetHandlesProvider()
{
  return self;
}

uint64_t sub_1C111BF8C(void *a1)
{
  return sub_1C111B490(a1);
}

void sub_1C111BFB0()
{
  if (!qword_1EB85D860)
  {
    type metadata accessor for LayeredMediaImageVariant();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85D860);
    }
  }
}

void sub_1C111C008(uint64_t a1@<X0>, double *a2@<X1>, double *a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = (double *)(a1 + 64);
    double v6 = *(double *)(a1 + 64);
    double v7 = *a2 * 0.5;
    uint64_t v9 = *(void *)(a1 + 48);
    uint64_t v8 = *(void *)(a1 + 56);
    double v10 = *(double *)(a1 + 40);
    id v11 = *(id *)(a1 + 32);
    swift_bridgeObjectRetain_n();
    id v12 = v11;
    swift_bridgeObjectRetain();
    uint64_t v19 = v12;
    double v13 = v6;
    uint64_t v14 = v12;
    do
    {
      double v15 = *(v5 - 3);
      if (vabdd_f64(v7, v15) < vabdd_f64(v7, v10))
      {
        uint64_t v8 = *((void *)v5 - 1);
        double v16 = *v5;
        uint64_t v9 = *((void *)v5 - 2);
        id v17 = *((id *)v5 - 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();

        uint64_t v14 = v17;
        double v10 = v15;
        double v13 = v16;
      }
      v5 += 5;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1EB85E5D8 != -1) {
      swift_once();
    }
    id v18 = (id)qword_1EB93C270;
    sub_1C151F36C();
    sub_1C15197BC();

    uint64_t v14 = 0;
    uint64_t v9 = 0;
    uint64_t v8 = 0;
    double v13 = 0.0;
    double v10 = 0.0;
  }
  *(void *)a3 = v14;
  a3[1] = v10;
  *((void *)a3 + 2) = v9;
  *((void *)a3 + 3) = v8;
  a3[4] = v13;
}

void sub_1C111C1CC()
{
  if (!qword_1EB85D8C0)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85D8C0);
    }
  }
}

uint64_t sub_1C111C224(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C111C28C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C111C2EC(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v2;
    if (!v15)
    {
      int64_t v2 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v2);
      if (!v15)
      {
        int64_t v2 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v2);
        if (!v15)
        {
          int64_t v2 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v2);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v9 = __clz(__rbit64(v15)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = *(void *)(v1 + 48) + 24 * v9;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *(void *)(v10 + 8);
    unsigned __int8 v13 = *(unsigned char *)(v10 + 16);
    sub_1C02CE324(*(void *)v10, v12, v13);
    sub_1C02B6D90((uint64_t)v17, v11, v12, v13);
    uint64_t result = sub_1C015FB90(v17[0], v17[1], v18);
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v2 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v2);
        ++v16;
        if (v15) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v16;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_1C111C48C(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    uint64_t result = sub_1BFE4EA54(&v13, *(void *)(*(void *)(v1 + 48) + 8 * v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

void FormatContextLayoutOptions.feedKind.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

double FormatContextLayoutOptions.scale.getter()
{
  return *(double *)(v0 + 24);
}

double FormatContextLayoutOptions.scaleFactor.getter()
{
  return *(double *)(v0 + 32);
}

uint64_t FormatContextLayoutOptions.options.getter()
{
  return swift_retain();
}

unint64_t sub_1C111C60C()
{
  unint64_t result = 0x646E694B64656566;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x656C616373;
      break;
    case 2:
      unint64_t result = 0x636146656C616373;
      break;
    case 3:
      unint64_t result = 0x736E6F6974706FLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C111C6C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C111D3D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C111C6E8(uint64_t a1)
{
  unint64_t v2 = sub_1C111CA44();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C111C724(uint64_t a1)
{
  unint64_t v2 = sub_1C111CA44();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatContextLayoutOptions.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatContextLayoutOptions.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C111CEB4(0, &qword_1EA1ABB20, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C111CA44();
  sub_1C1520F0C();
  LOBYTE(v11) = *(unsigned char *)(v3 + 16);
  char v12 = 0;
  sub_1C111CA98();
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + 24);
    char v12 = 1;
    sub_1BFDC74E8();
    sub_1C152080C();
    uint64_t v11 = *(void *)(v3 + 32);
    char v12 = 2;
    sub_1C152080C();
    uint64_t v11 = *(void *)(v3 + 40);
    char v12 = 3;
    type metadata accessor for FormatOptionCollection();
    sub_1C111CF6C(&qword_1EA1ABB38);
    sub_1C152080C();
    uint64_t v11 = *(void *)(v3 + 56);
    char v12 = 4;
    sub_1BFEBC4B4();
    sub_1BFE38978((unint64_t *)&qword_1EB85C4F0);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C111CA44()
{
  unint64_t result = qword_1EA1ABB28;
  if (!qword_1EA1ABB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABB28);
  }
  return result;
}

unint64_t sub_1C111CA98()
{
  unint64_t result = qword_1EA1ABB30;
  if (!qword_1EA1ABB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABB30);
  }
  return result;
}

uint64_t FormatContextLayoutOptions.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatContextLayoutOptions.init(from:)(a1);
  return v2;
}

uint64_t *FormatContextLayoutOptions.init(from:)(void *a1)
{
  uint64_t v10 = *v1;
  sub_1C111CEB4(0, &qword_1EA1ABB40, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v10 - v7;
  v1[6] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C111CA44();
  sub_1C1520EBC();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v12 = 0;
    sub_1C111CF18();
    sub_1C15206EC();
    *((unsigned char *)v1 + 16) = v11;
    char v12 = 1;
    sub_1BFE7E344();
    sub_1C15206EC();
    v1[3] = v11;
    char v12 = 2;
    sub_1C15206EC();
    v1[4] = v11;
    type metadata accessor for FormatOptionCollection();
    char v12 = 3;
    sub_1C111CF6C(&qword_1EA1ABB50);
    sub_1C15206EC();
    v1[5] = v11;
    sub_1BFEBC4B4();
    char v12 = 4;
    sub_1BFE38978((unint64_t *)&qword_1EB87A020);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v1[7] = v11;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1C111CEB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C111CA44();
    unint64_t v7 = a3(a1, &type metadata for FormatContextLayoutOptions.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C111CF18()
{
  unint64_t result = qword_1EA1ABB48;
  if (!qword_1EA1ABB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABB48);
  }
  return result;
}

uint64_t sub_1C111CF6C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatOptionCollection();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1C111CFB0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatContextLayoutOptions.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C111D008(void *a1)
{
  return FormatContextLayoutOptions.encode(to:)(a1);
}

uint64_t method lookup function for FormatContextLayoutOptions(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatContextLayoutOptions);
}

uint64_t dispatch thunk of FormatContextLayoutOptions.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

unsigned char *storeEnumTagSinglePayload for FormatContextLayoutOptions.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C111D138);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContextLayoutOptions.CodingKeys()
{
  return &type metadata for FormatContextLayoutOptions.CodingKeys;
}

unint64_t sub_1C111D174()
{
  unint64_t result = qword_1EA1ABB58;
  if (!qword_1EA1ABB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABB58);
  }
  return result;
}

unint64_t sub_1C111D1CC()
{
  unint64_t result = qword_1EA1ABB60;
  if (!qword_1EA1ABB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABB60);
  }
  return result;
}

unint64_t sub_1C111D224()
{
  unint64_t result = qword_1EA1ABB68;
  if (!qword_1EA1ABB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABB68);
  }
  return result;
}

void sub_1C111D278(uint64_t a1)
{
}

void sub_1C111D2A8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), void (*a4)(char *, char *))
{
  uint64_t v7 = a2(0) - 8;
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v17 - v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v16 = *(void *)(v11 + 72);
    do
    {
      sub_1BFED3AEC(v15, (uint64_t)v9, a3);
      a4(v13, v9);
      sub_1BFECFCE4((uint64_t)v13, a3);
      v15 += v16;
      --v14;
    }
    while (v14);
  }
}

uint64_t sub_1C111D3D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x646E694B64656566 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x636146656C616373 && a2 == 0xEB00000000726F74 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C16358E0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1C111D600(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedGroupItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1C111D664(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C151757C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151772C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1C111D76C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1C151772C();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t sub_1C111D814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_1C111D8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1C111D984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1C111DA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1C111DAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C111DB08);
}

uint64_t sub_1C111DB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151757C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_1C151772C();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1C111DC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C111DC14);
}

uint64_t sub_1C111DC14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1C151757C();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1C151772C();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for DebugFormatEditorLayoutContext()
{
  uint64_t result = qword_1EA1ABB70;
  if (!qword_1EA1ABB70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C111DD64()
{
  uint64_t result = sub_1C151757C();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151772C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t FeedGroupPaidVisibility.description.getter()
{
  uint64_t result = 1684627792;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x646961706E55;
      break;
    case 2:
      uint64_t result = 1752461122;
      break;
    case 3:
      uint64_t result = 0x7265687469654ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FeedGroupPaidVisibility.rawValue.getter()
{
  uint64_t result = 1684627824;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x646961706E75;
      break;
    case 2:
      uint64_t result = 1752461154;
      break;
    case 3:
      uint64_t result = 0x7265687469656ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C111DF20()
{
  unint64_t result = qword_1EA1ABB80;
  if (!qword_1EA1ABB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABB80);
  }
  return result;
}

uint64_t sub_1C111DF74()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C111E038()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C111E0E4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C111E1B4(unsigned __int8 *a1, char *a2)
{
  return sub_1C1493DDC(*a1, *a2);
}

uint64_t sub_1C111E1C0()
{
  uint64_t result = 1684627792;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x646961706E55;
      break;
    case 2:
      uint64_t result = 1752461122;
      break;
    case 3:
      uint64_t result = 0x7265687469654ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t static FormatBlockExpression.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

unint64_t sub_1C111E290(uint64_t a1)
{
  unint64_t result = sub_1C111E2B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C111E2B8()
{
  unint64_t result = qword_1EA1ABB88;
  if (!qword_1EA1ABB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABB88);
  }
  return result;
}

unint64_t sub_1C111E30C(void *a1)
{
  a1[1] = sub_1BFE66420();
  a1[2] = sub_1C08FC094();
  unint64_t result = sub_1C111E344();
  a1[3] = result;
  return result;
}

unint64_t sub_1C111E344()
{
  unint64_t result = qword_1EA1ABB90;
  if (!qword_1EA1ABB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABB90);
  }
  return result;
}

uint64_t sub_1C111E398(void *a1)
{
  return FormatBlockExpression.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatBlockExpression()
{
  return &type metadata for FormatBlockExpression;
}

void FormatSourceItemTip.tipSource(from:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v5 = sub_1C151CE3C();
  uint64_t v15 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v2;
  uint64_t v10 = *((void *)v2 + 1);
  uint64_t v9 = *((void *)v2 + 2);
  char v11 = v2[24];
  char v16 = *v2;
  sub_1C133FE68(a1, (uint64_t)v7);
  if (!v3)
  {
    char v16 = v8;
    uint64_t v17 = v10;
    uint64_t v18 = v9;
    char v19 = v11;
    uint64_t v12 = type metadata accessor for FormatSourceItemTipSource();
    uint64_t v13 = v20;
    sub_1C111E504(a1, v20 + *(int *)(v12 + 20));
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v13, v7, v5);
  }
}

uint64_t sub_1C111E504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C111F268();
  uint64_t v93 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v80 = (BOOL *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v79 = (BOOL *)&v74 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v89 = (BOOL *)&v74 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v78 = (BOOL *)&v74 - v12;
  uint64_t v13 = sub_1C151A29C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v77 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v84 = (char *)&v74 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v85 = (char *)&v74 - v19;
  MEMORY[0x1F4188790](v20);
  long long v76 = (char *)&v74 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v74 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v74 - v26;
  MEMORY[0x1F4188790](v28);
  unint64_t v75 = (char *)&v74 - v29;
  uint64_t v30 = *(void *)(v2 + 8);
  uint64_t v31 = *(void *)(v2 + 16);
  char v32 = *(unsigned char *)(v2 + 24);
  uint64_t v94 = 0;
  sub_1C111F2D4(&qword_1EB890B48);
  sub_1C1520F9C();
  if (v32)
  {
    sub_1C00F64A4(v30, v31, 1);
    uint64_t v33 = sub_1C0271AEC(a1, v30, v31);
    sub_1C00F64E0(v30, v31, 1);
    uint64_t v30 = v33;
  }
  else
  {
    sub_1C00F64A4(v30, v31, 0);
  }
  uint64_t v74 = v30;
  uint64_t v34 = *(void *)(v30 + 16);
  if (v34)
  {
    uint64_t v35 = (unsigned __int8 *)(v74 + 32);
    uint64_t v36 = (void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v87 = (void (**)(BOOL *, char *, uint64_t))(v14 + 32);
    uint64_t v88 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v86 = (v14 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    uint64_t v91 = a2;
    uint64_t v92 = (void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v82 = v27;
    uint64_t v83 = v24;
    do
    {
      int v43 = *v35++;
      int v42 = v43;
      if (v43)
      {
        if (v42 == 1)
        {
          uint64_t v44 = v24;
          uint64_t v45 = (BOOL *)v76;
          sub_1C151A28C();
          uint64_t v46 = *v36;
          (*v36)(v44, a2, v13);
          uint64_t v47 = sub_1C111F2D4(&qword_1EA1ABBA8);
          sub_1C151FF6C();
          sub_1C111F2D4(&qword_1EA1ABBB0);
          char v48 = sub_1C151E5CC();
          int v49 = &v79[*(int *)(v93 + 48)];
          BOOL v50 = (v48 & 1) == 0;
          *char v79 = v50;
          if (v48)
          {
            uint64_t v51 = *v87;
            (*v87)(v49, v85, v13);
            uint64_t v52 = (void (**)(BOOL *, uint64_t))v88;
          }
          else
          {
            uint64_t v90 = (unsigned __int8 *)v47;
            uint64_t v52 = (void (**)(BOOL *, uint64_t))v88;
            (*v88)(v85, v13);
            v46((char *)v49, (uint64_t)v45, v13);
            v46(v44, (uint64_t)v45, v13);
            sub_1C151FF8C();
            uint64_t v51 = *v87;
          }
          uint64_t v69 = &v89[*(int *)(v93 + 48)];
          *uint64_t v89 = v50;
          v51(v69, (char *)v49, v13);
          uint64_t v70 = *v52;
          (*v52)(v69, v13);
          v70(v45, v13);
          a2 = v91;
          uint64_t v36 = v92;
          uint64_t v27 = v82;
          uint64_t v24 = v83;
        }
        else
        {
          uint64_t v90 = v35;
          uint64_t v59 = v84;
          sub_1C151A26C();
          uint64_t v60 = *v36;
          (*v36)(v24, a2, v13);
          uint64_t v61 = sub_1C111F2D4(&qword_1EA1ABBA8);
          uint64_t v62 = v24;
          uint64_t v63 = v77;
          sub_1C151FF6C();
          sub_1C111F2D4(&qword_1EA1ABBB0);
          char v64 = sub_1C151E5CC();
          uint64_t v65 = &v80[*(int *)(v93 + 48)];
          BOOL v66 = (v64 & 1) == 0;
          *uint64_t v80 = v66;
          if (v64)
          {
            id v67 = *v87;
            (*v87)(v65, v63, v13);
            uint64_t v24 = v62;
            uint64_t v68 = (void (**)(BOOL *, uint64_t))v88;
          }
          else
          {
            uint64_t v81 = v61;
            uint64_t v68 = (void (**)(BOOL *, uint64_t))v88;
            (*v88)(v63, v13);
            v60((char *)v65, (uint64_t)v59, v13);
            v60(v62, (uint64_t)v59, v13);
            sub_1C151FF8C();
            id v67 = *v87;
            uint64_t v24 = v62;
          }
          unint64_t v71 = &v89[*(int *)(v93 + 48)];
          *uint64_t v89 = v66;
          v67(v71, (char *)v65, v13);
          uint64_t v72 = *v68;
          (*v68)(v71, v13);
          v72((BOOL *)v84, v13);
          uint64_t v35 = v90;
          a2 = v91;
          uint64_t v27 = v82;
          uint64_t v36 = v92;
        }
      }
      else
      {
        uint64_t v90 = v35;
        uint64_t v53 = (BOOL *)v75;
        sub_1C151A27C();
        uint64_t v54 = *v36;
        (*v36)(v24, a2, v13);
        uint64_t v81 = sub_1C111F2D4(&qword_1EA1ABBA8);
        sub_1C151FF6C();
        sub_1C111F2D4(&qword_1EA1ABBB0);
        char v55 = sub_1C151E5CC();
        uint64_t v56 = &v78[*(int *)(v93 + 48)];
        BOOL v57 = (v55 & 1) == 0;
        *uint64_t v78 = v57;
        id v58 = v27;
        if (v55)
        {
          uint64_t v39 = *v87;
          (*v87)(v56, v27, v13);
          unint64_t v38 = (void (**)(BOOL *, uint64_t))v88;
        }
        else
        {
          char v37 = v24;
          unint64_t v38 = (void (**)(BOOL *, uint64_t))v88;
          (*v88)(v58, v13);
          v54((char *)v56, (uint64_t)v53, v13);
          v54(v37, (uint64_t)v53, v13);
          sub_1C151FF8C();
          uint64_t v39 = *v87;
        }
        uint64_t v27 = v58;
        uint64_t v40 = &v89[*(int *)(v93 + 48)];
        *uint64_t v89 = v57;
        v39(v40, (char *)v56, v13);
        uint64_t v41 = *v38;
        (*v38)(v40, v13);
        v41(v53, v13);
        uint64_t v35 = v90;
        a2 = v91;
        uint64_t v36 = v92;
        uint64_t v24 = v83;
      }
      --v34;
    }
    while (v34);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C111EDA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSourceItemTip.init(from:)(a1, a2);
}

uint64_t sub_1C111EDC0(void *a1)
{
  return FormatSourceItemTip.encode(to:)(a1);
}

BOOL _s8NewsFeed19FormatSourceItemTipV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  uint64_t v4 = *((void *)a1 + 1);
  uint64_t v3 = *((void *)a1 + 2);
  char v5 = a1[24];
  unsigned int v6 = *a2;
  uint64_t v8 = *((void *)a2 + 1);
  uint64_t v7 = *((void *)a2 + 2);
  char v9 = a2[24];
  switch((v2 >> 4) & 3)
  {
    case 1u:
      int v12 = (v6 ^ v2) & 1;
      BOOL v13 = (v6 & 0x30) == 16;
      goto LABEL_11;
    case 2u:
      int v12 = (v6 ^ v2) & 1;
      BOOL v13 = (v6 & 0x30) == 32;
LABEL_11:
      if (!v13 || v12 != 0) {
        return 0;
      }
      goto LABEL_17;
    case 3u:
      if ((~v6 & 0x30) != 0) {
        return 0;
      }
LABEL_17:
      if (a1[24])
      {
        if (a2[24])
        {
          if (sub_1C00DFAAC(*((void *)a1 + 1), *((void *)a2 + 1)))
          {
            char v15 = sub_1C00E076C(v3, v7);
            uint64_t v16 = 1;
            sub_1C00F64A4(v8, v7, 1);
            sub_1C00F64A4(v4, v3, 1);
            sub_1C00F64E0(v4, v3, 1);
            sub_1C00F64E0(v8, v7, 1);
            if (v15) {
              return v16;
            }
            return 0;
          }
          char v9 = 1;
          char v5 = 1;
        }
LABEL_26:
        sub_1C00F64A4(v8, v7, v9);
        sub_1C00F64A4(v4, v3, v5);
        sub_1C00F64E0(v4, v3, v5);
        sub_1C00F64E0(v8, v7, v9);
        return 0;
      }
      if (a2[24]) {
        goto LABEL_26;
      }
      BOOL v17 = sub_1C00DFAAC(*((void *)a1 + 1), *((void *)a2 + 1));
      sub_1C00F64A4(v8, v7, 0);
      sub_1C00F64A4(v4, v3, 0);
      sub_1C00F64E0(v4, v3, 0);
      sub_1C00F64E0(v8, v7, 0);
      return v17;
    default:
      if ((v6 & 0x30) == 0)
      {
        switch(v2 >> 6)
        {
          case 1u:
            int v12 = (v6 ^ v2) & 1;
            BOOL v13 = (v6 & 0xC0) == 64;
            goto LABEL_11;
          case 2u:
            int v12 = (v6 ^ v2) & 1;
            BOOL v13 = (v6 & 0xC0) == 128;
            goto LABEL_11;
          case 3u:
            if (v6 < 0xC0) {
              return 0;
            }
            goto LABEL_17;
          default:
            int v10 = (v6 ^ v2) & 1;
            if (v6 > 0x3F || v10 != 0) {
              return 0;
            }
            goto LABEL_17;
        }
      }
      return 0;
  }
}

unint64_t sub_1C111F03C(uint64_t a1)
{
  unint64_t result = sub_1C111F064();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C111F064()
{
  unint64_t result = qword_1EA1ABB98;
  if (!qword_1EA1ABB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABB98);
  }
  return result;
}

unint64_t sub_1C111F0B8(void *a1)
{
  a1[1] = sub_1C08B4C6C();
  a1[2] = sub_1C08EFD4C();
  unint64_t result = sub_1C111F0F0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C111F0F0()
{
  unint64_t result = qword_1EA1ABBA0;
  if (!qword_1EA1ABBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABBA0);
  }
  return result;
}

uint64_t destroy for FormatSourceItemTip(uint64_t a1)
{
  return sub_1C00F64E0(*(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for FormatSourceItemTip(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  sub_1C00F64A4(v3, v4, v5);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatSourceItemTip(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  sub_1C00F64A4(v3, v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_1C00F64E0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatSourceItemTip(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v3 = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = v3;
  sub_1C00F64E0(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatSourceItemTip()
{
  return &type metadata for FormatSourceItemTip;
}

void sub_1C111F268()
{
  if (!qword_1EB892C48)
  {
    sub_1C151A29C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB892C48);
    }
  }
}

uint64_t sub_1C111F2D4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C151A29C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V20()
{
  return &type metadata for A12_V20;
}

uint64_t sub_1C111F328(void *a1)
{
  uint64_t v3 = v1;
  sub_1C1124098(0, &qword_1EA1ABC68, (uint64_t (*)(void))sub_1C1124044, (uint64_t)&type metadata for A12_V20.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1124044();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C1124100(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C111F570(uint64_t a1)
{
  unint64_t v2 = sub_1C1124044();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C111F5AC(uint64_t a1)
{
  unint64_t v2 = sub_1C1124044();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C111F5E8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C1123D94(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C111F630(void *a1)
{
  return sub_1C111F328(a1);
}

uint64_t sub_1C111F648()
{
  sub_1C1123A04();
  return sub_1C151798C();
}

uint64_t sub_1C111F6C4@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C1124098(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C111F780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v53 = a3;
  uint64_t v56 = sub_1C151635C();
  uint64_t v6 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v76 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v53 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v57 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  BOOL v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v65 = a1;
  sub_1BFF1AFA4(a1, v57, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v60 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v55 = sub_1C151633C();
  uint64_t v54 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  uint64_t v74 = &type metadata for A12_V20;
  unint64_t v20 = sub_1C0186A70();
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v66 = sub_1C1520FAC();
  uint64_t v67 = v22;
  uint64_t v70 = 95;
  unint64_t v71 = 0xE100000000000000;
  uint64_t v68 = 45;
  unint64_t v69 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v54;
  *uint64_t v26 = v55;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v72, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C(v57, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v28, 0, 1, v59);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v29, 0, 1, v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  sub_1BFFFC630(v17, v18);
  uint64_t v74 = &type metadata for A12_V20;
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  sub_1BFF1AFA4(v61, v76, (uint64_t (*)(void))v60);
  sub_1C00191E0(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v31 = (void *)(v30 + 16);
  swift_beginAccess();
  char v32 = *(void **)(v30 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v30 + 16) = v32;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    char v32 = sub_1BFFB83AC(0, v32[2] + 1, 1, v32);
    void *v31 = v32;
  }
  unint64_t v35 = v32[2];
  unint64_t v34 = v32[3];
  if (v35 >= v34 >> 1)
  {
    char v32 = sub_1BFFB83AC((void *)(v34 > 1), v35 + 1, 1, v32);
    void *v31 = v32;
  }
  _OWORD v32[2] = v35 + 1;
  uint64_t v36 = &v32[2 * v35];
  v36[4] = sub_1C064667C;
  v36[5] = 0;
  swift_endAccess();
  uint64_t v37 = v64;
  uint64_t v38 = sub_1C001E608((uint64_t)&unk_1F1B83678, 0, 0, v30, 4, 0, 0, 0);
  if (v37)
  {
    swift_release();
    swift_release();
    sub_1BFF1F284(v76, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  }
  else
  {
    uint64_t v39 = v38;
    swift_release();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v41 = (void *)(v40 + 16);
    swift_beginAccess();
    int v42 = *(void **)(v40 + 16);
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v40 + 16) = v42;
    if ((v43 & 1) == 0)
    {
      int v42 = sub_1BFFB83AC(0, v42[2] + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    unint64_t v45 = v42[2];
    unint64_t v44 = v42[3];
    if (v45 >= v44 >> 1)
    {
      int v42 = sub_1BFFB83AC((void *)(v44 > 1), v45 + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    v42[2] = v45 + 1;
    uint64_t v46 = &v42[2 * v45];
    v46[4] = sub_1C064667C;
    v46[5] = 0;
    swift_endAccess();
    uint64_t v48 = sub_1C001E608((uint64_t)&unk_1F1B836A0, 0, 0, v40, 0, 0, 0, 0);
    swift_release();
    uint64_t v66 = v39;
    sub_1C0018900(v48);
    uint64_t v49 = v66;
    uint64_t v50 = type metadata accessor for A12_V20.Bound();
    uint64_t v51 = v53;
    v53[3] = v50;
    v51[4] = sub_1C1124100(&qword_1EA1ABBC8, (void (*)(uint64_t))type metadata accessor for A12_V20.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v51);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v72, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v76, (uint64_t)boxed_opaque_existential_0 + *(int *)(v50 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v50 + 28)) = v49;
  }
  return result;
}

double sub_1C111FF24@<D0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v49 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  MEMORY[0x1F4188790](v3);
  *(void *)&long long v48 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00191E0(0, (unint64_t *)&qword_1EB87A800, (uint64_t (*)(uint64_t))sub_1C00737F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v6 = type metadata accessor for A12_V20.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(void *)(v7 + *(int *)(v8 + 40));
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(int *)(v8 + 32);
  uint64_t v47 = v7;
  double v12 = *(double *)(v7 + v11);
  sub_1BFC66384(v10 + 16, (uint64_t)&v54);
  sub_1BFC66384(v10 + 56, (uint64_t)v53);
  double v13 = v12 * *(double *)(v10 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t v14 = swift_initStackObject();
  sub_1BFC773DC(&v54, v14 + 16);
  sub_1BFC773DC(v53, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v52[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v52, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  uint64_t v15 = *(void *)(v9 + 16);
  sub_1BFC66384(v15 + 16, (uint64_t)v53);
  sub_1BFC66384(v15 + 56, (uint64_t)v52);
  double v16 = v12 * *(double *)(v15 + 96);
  uint64_t v17 = swift_initStackObject();
  sub_1BFC773DC(v53, v17 + 16);
  sub_1BFC773DC(v52, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v51[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v51, (uint64_t *)&v54);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  uint64_t v18 = sub_1BFEB3714((uint64_t)&v54, *(void *)(*(void *)(v2 + *(int *)(v6 + 28)) + 16) - 1);
  *(void *)&long long v54 = inited;
  sub_1BFEB37F8(v18);
  uint64_t v19 = v54;
  void v50[2] = v2;
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C06472C0(v20, v19, (void (*)(char *, uint64_t))sub_1C112399C, (uint64_t)v50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v22 = *(void *)(v21 + 16);
  if (v22 >= 4) {
    uint64_t v23 = 4;
  }
  else {
    uint64_t v23 = *(void *)(v21 + 16);
  }
  sub_1C1520B6C();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v24 = swift_dynamicCastClass();
  if (!v24)
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = MEMORY[0x1E4FBC860];
  }
  uint64_t v25 = *(void *)(v24 + 16);
  swift_release();
  if (v25 == v22 - v23)
  {
    uint64_t v26 = swift_dynamicCastClass();
    if (!v26)
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v42 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v26 = sub_1C00B2130(v21, v21 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80)), v23, (2 * v22) | 1);
  }
  swift_bridgeObjectRelease();
  *(void *)&long long v54 = v26;
  sub_1C00191E0(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  uint64_t v28 = v27;
  sub_1C0385FC4(&qword_1EA197690);
  uint64_t v44 = v28;
  sub_1C151F0BC();
  swift_release();
  uint64_t v29 = *MEMORY[0x1E4FAB6D8];
  uint64_t v30 = sub_1C151759C();
  uint64_t v31 = v48;
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v48, v29, v30);
  uint64_t v32 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v45 + 104))(v31, *MEMORY[0x1E4FAB8F0], v46);
  MEMORY[0x1F4188790](v32);
  *(&v44 - 4) = v21;
  *(&v44 - 3) = v2;
  sub_1C1123AC0(0, &qword_1EA1ABBE8, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  sub_1C1517BEC();
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_1C1517BFC();
  long long v48 = v54;
  uint64_t v34 = v55;
  uint64_t v35 = v56;
  *(void *)&long long v54 = v21;
  *(void *)&v53[0] = v57;
  MEMORY[0x1F4188790](v33);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1C0385FC4((unint64_t *)&qword_1EB879E10);
  uint64_t v36 = sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v43 = v36;
  uint64_t v37 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v54 = v37;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v38 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = v49;
  *uint64_t v49 = 0;
  double result = *(double *)&v48;
  *(_OWORD *)(v39 + 8) = v48;
  *((void *)v39 + 3) = v34;
  *((void *)v39 + 4) = v35;
  uint64_t v41 = MEMORY[0x1E4FBC860];
  *((void *)v39 + 5) = v38;
  *((void *)v39 + 6) = v41;
  return result;
}

uint64_t sub_1C1120648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C1120718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C1124098(0, &qword_1EA1ABC00, (uint64_t (*)(void))sub_1C11239B0, (uint64_t)&type metadata for A12_V20.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  double v12 = (uint64_t *)&v16[-v11];
  uint64_t v20 = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 12;
  *double v12 = v13;
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FABA10], v9);
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C1123AC0(0, &qword_1EA1ABC08, MEMORY[0x1E4FAB6F0]);
  sub_1C1123A7C(&qword_1EA1ABC10, &qword_1EA1ABC08, v14);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1C1120918(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *, char *), uint64_t a4)
{
  uint64_t v49 = a4;
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  sub_1C1124098(0, &qword_1EA1ABC00, (uint64_t (*)(void))sub_1C11239B0, (uint64_t)&type metadata for A12_V20.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v6 = v5;
  uint64_t v7 = *((void *)v5 - 1);
  MEMORY[0x1F4188790](v5);
  long long v48 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (void *)((char *)v36 - v10);
  uint64_t v55 = a1;
  uint64_t v12 = sub_1C151729C();
  uint64_t v13 = swift_allocBox();
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v15 = *(void (**)(void))(v14 + 104);
  unsigned int v41 = *MEMORY[0x1E4FAB4E8];
  uint64_t v40 = v12;
  uint64_t v46 = v14 + 104;
  uint64_t v47 = (void (*)(uint64_t, void, uint64_t))v15;
  v15(v16);
  uint64_t *v11 = v13;
  uint64_t v17 = v7 + 104;
  uint64_t v18 = *(void (**)(uint64_t *))(v7 + 104);
  unsigned int v45 = *MEMORY[0x1E4FAB940];
  v18(v11);
  uint64_t v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C1123AC0(0, &qword_1EA1ABC18, MEMORY[0x1E4FAB4D0]);
  uint64_t v21 = v20;
  uint64_t v22 = sub_1C1123A7C(&qword_1EA1ABC20, &qword_1EA1ABC18, v19);
  sub_1C151738C();
  uint64_t v24 = *(void (**)(uint64_t *, char *))(v7 + 8);
  uint64_t v23 = v7 + 8;
  v24(v11, v6);
  uint64_t v43 = a1;
  uint64_t v55 = a1;
  uint64_t v25 = v48;
  unsigned int v42 = *MEMORY[0x1E4FAB9E0];
  v18((uint64_t *)v48);
  uint64_t v52 = v50;
  uint64_t v53 = v51;
  uint64_t v44 = v22;
  sub_1C151731C();
  long long v48 = v6;
  uint64_t v26 = v24;
  uint64_t result = ((uint64_t (*)(char *, char *))v24)(v25, v6);
  if (*(void *)(v49 + 16))
  {
    uint64_t v39 = *(void *)(v49 + 16);
    swift_bridgeObjectRetain();
    uint64_t v38 = v23;
    uint64_t v28 = 0;
    v36[1] = v17;
    uint64_t v37 = v18;
    uint64_t v51 = v26;
    uint64_t v29 = v48;
    v36[0] = v21;
    uint64_t v30 = v43;
    uint64_t v31 = v37;
    do
    {
      uint64_t v50 = *(void *)(v49 + 8 * v28++ + 32);
      uint64_t v54 = v30;
      uint64_t v32 = v40;
      uint64_t v33 = swift_allocBox();
      v47(v34, v41, v32);
      uint64_t *v11 = v33;
      ((void (*)(uint64_t *, void, char *))v31)(v11, v45, v29);
      swift_bridgeObjectRetain();
      sub_1C151738C();
      v51(v11, v29);
      uint64_t v54 = v30;
      uint64_t v35 = ((uint64_t (*)(uint64_t *, void, char *))v31)(v11, v42, v29);
      MEMORY[0x1F4188790](v35);
      sub_1C151731C();
      uint64_t v29 = v48;
      v51(v11, v48);
      swift_bridgeObjectRelease();
    }
    while (v39 != v28);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C1120DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a1;
  uint64_t v30 = a3;
  uint64_t v26 = a2;
  sub_1C1124098(0, &qword_1EA1ABC00, (uint64_t (*)(void))sub_1C11239B0, (uint64_t)&type metadata for A12_V20.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v25 - v7);
  uint64_t v34 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  uint64_t *v8 = v9;
  unsigned int v28 = *MEMORY[0x1E4FABA10];
  uint64_t v27 = *(void (**)(uint64_t *))(v6 + 104);
  v27(v8);
  sub_1C1123B5C();
  sub_1C1124098(0, &qword_1EA1ABC30, (uint64_t (*)(void))sub_1C11239B0, (uint64_t)&type metadata for A12_V20.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
  unint64_t v15 = v14 + v13;
  sub_1C003F3A8();
  uint64_t v17 = (void *)(v15 + *(int *)(v16 + 48));
  uint64_t v18 = *MEMORY[0x1E4FAB7E0];
  uint64_t v19 = sub_1C151789C();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v15, v18, v19);
  *uint64_t v17 = 0x6C6F437468676972;
  v17[1] = 0xEB000000006E6D75;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v15, *MEMORY[0x1E4FAB5B0], v11);
  uint64_t v20 = v26;
  uint64_t v33 = v26;
  uint64_t v21 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C1123AC0(0, &qword_1EA1ABC18, MEMORY[0x1E4FAB4D0]);
  sub_1C1123A7C(&qword_1EA1ABC20, &qword_1EA1ABC18, v21);
  sub_1C151734C();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v22(v8, v5);
  uint64_t v34 = v29;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 6;
  uint64_t *v8 = v23;
  ((void (*)(uint64_t *, void, uint64_t))v27)(v8, v28, v5);
  uint64_t v31 = v20;
  uint64_t v32 = v30;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v22)(v8, v5);
}

uint64_t sub_1C11211CC(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x1F4188790](v3);
  unsigned int v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1124098(0, &qword_1EA1ABC00, (uint64_t (*)(void))sub_1C11239B0, (uint64_t)&type metadata for A12_V20.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v44 = v43;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *MEMORY[0x1E4FAB9E0];
  uint64_t v43 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v20, v16);
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v36 = v5;
  uint64_t v37 = v16;
  sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v21 = qword_1F1B8A210;
  uint64_t v22 = (char *)v10 + v8[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v10 = v21;
  *(uint64_t *)((char *)v10 + v8[6]) = 0;
  uint64_t v27 = *v26;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v14;
  *(&v35 - 3) = (uint64_t)v10;
  unint64_t v34 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v39 + 104))(v41, *MEMORY[0x1E4FAB8F8], v40, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v36);
  sub_1BFF1F284((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F284((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C1123AC0(0, &qword_1EA1ABC18, MEMORY[0x1E4FAB4D0]);
  sub_1C1123A7C(&qword_1EA1ABC20, &qword_1EA1ABC18, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v37);
}

uint64_t sub_1C11217B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v79 = a3;
  uint64_t v75 = a2;
  uint64_t v65 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v65);
  uint64_t v66 = &v59[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C1124098(0, &qword_1EA1ABC00, (uint64_t (*)(void))sub_1C11239B0, (uint64_t)&type metadata for A12_V20.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  __n128 v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (uint64_t *)&v59[-v10];
  uint64_t v82 = a1;
  uint64_t v12 = *MEMORY[0x1E4FABA28];
  unint64_t v69 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 104);
  uint64_t v80 = v8 + 104;
  ((void (*)(unsigned char *, uint64_t, uint64_t, __n128))v69)(&v59[-v10], v12, v7, v9);
  sub_1C1123B5C();
  uint64_t v74 = v13;
  sub_1C1124098(0, &qword_1EA1ABC30, (uint64_t (*)(void))sub_1C11239B0, (uint64_t)&type metadata for A12_V20.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v15 = v14;
  uint64_t v77 = v14;
  uint64_t v16 = *(void *)(*(void *)(v14 - 8) + 72);
  uint64_t v17 = *(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
  uint64_t v18 = *(void *)(v14 - 8);
  uint64_t v19 = (v17 + 32) & ~v17;
  uint64_t v71 = v19;
  uint64_t v72 = v17 | 7;
  uint64_t v73 = v19 + v16;
  uint64_t v20 = swift_allocObject();
  long long v70 = xmmword_1C1529AE0;
  *(_OWORD *)(v20 + 16) = xmmword_1C1529AE0;
  uint64_t v21 = *MEMORY[0x1E4FAB638];
  uint64_t v22 = *(uint64_t (**)(double *, void, uint64_t))(v18 + 104);
  uint64_t v76 = v18 + 104;
  uint64_t v78 = v22;
  v22((double *)(v20 + v19), v21, v15);
  uint64_t v81 = a2;
  uint64_t v23 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C1123AC0(0, &qword_1EA1ABC18, MEMORY[0x1E4FAB4D0]);
  uint64_t v25 = v24;
  uint64_t v58 = sub_1C1123A7C(&qword_1EA1ABC20, &qword_1EA1ABC18, v23);
  sub_1C151731C();
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void (**)(uint64_t *, uint64_t))(v8 + 8);
  v26(v11, v7);
  uint64_t v82 = a1;
  uint64_t v27 = sub_1C151729C();
  uint64_t v28 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x1E4FAB4E8], v27);
  uint64_t *v11 = v28;
  uint64_t v30 = v69;
  v69(v11, *MEMORY[0x1E4FAB940], v7);
  uint64_t v64 = v25;
  uint64_t v63 = v58;
  sub_1C151738C();
  uint64_t v67 = v8 + 8;
  uint64_t v62 = (uint64_t (*)(uint64_t *, uint64_t))v26;
  v26(v11, v7);
  uint64_t v82 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1C0386118();
  uint64_t v32 = v31;
  uint64_t v33 = swift_allocBox();
  uint64_t v35 = (char *)v34 + *(int *)(v32 + 48);
  *unint64_t v34 = 2;
  uint64_t v36 = *MEMORY[0x1E4FAB8C8];
  uint64_t v37 = sub_1C1517A7C();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 104);
  unsigned int v60 = v36;
  v39(v35, v36, v37);
  uint64_t *v11 = v33;
  uint64_t v40 = *MEMORY[0x1E4FAB960];
  uint64_t v68 = v7;
  v30(v11, v40, v7);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = v70;
  uint64_t v42 = (double *)(v41 + v71);
  uint64_t v43 = v79 + *(int *)(type metadata accessor for A12_V20.Bound() + 24);
  *uint64_t v42 = *(double *)(v43 + *(int *)(type metadata accessor for GroupLayoutContext() + 32)) * 135.0;
  uint64_t v44 = v42;
  uint64_t v45 = v75;
  uint64_t result = v78(v44, *MEMORY[0x1E4FAB670], v77);
  if (*(void *)(v45 + 16) < 4uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v47 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v48 = v45
        + 3 * *(void *)(v47 + 72)
        + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
    uint64_t v49 = v65;
    uint64_t v50 = v66;
    uint64_t v51 = &v66[*(int *)(v65 + 20)];
    v39(v51, v60, v37);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v51, 0, 1, v37);
    uint64_t v52 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v50 = 0;
    *(void *)((char *)v50 + *(int *)(v49 + 24)) = 0;
    *(void *)((char *)v50 + *(int *)(v49 + 28)) = v52;
    double v53 = *MEMORY[0x1E4FB2848];
    double v54 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v55 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v56 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v57 = v52;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v48, (uint64_t)v50, v53, v54, v55, v56);
    sub_1BFF1F284((uint64_t)v50, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return v62(v11, v68);
  }
  return result;
}

uint64_t sub_1C1121EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  sub_1C1124098(0, &qword_1EA1ABC00, (uint64_t (*)(void))sub_1C11239B0, (uint64_t)&type metadata for A12_V20.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v16 - v7);
  uint64_t v20 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 3;
  uint64_t *v8 = v9;
  uint64_t v10 = *MEMORY[0x1E4FABA10];
  uint64_t v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  uint64_t v19 = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C1123AC0(0, &qword_1EA1ABC18, MEMORY[0x1E4FAB4D0]);
  sub_1C1123A7C(&qword_1EA1ABC20, &qword_1EA1ABC18, v12);
  sub_1C151734C();
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  uint64_t v20 = v17;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 3;
  uint64_t *v8 = v14;
  v11(v8, v10, v5);
  uint64_t v18 = v16;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1C1122190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1124098(0, &qword_1EA1ABC00, (uint64_t (*)(void))sub_1C11239B0, (uint64_t)&type metadata for A12_V20.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ *(void *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  void *v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 5;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F284((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F284((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C1123AC0(0, &qword_1EA1ABC18, MEMORY[0x1E4FAB4D0]);
  sub_1C1123A7C(&qword_1EA1ABC20, &qword_1EA1ABC18, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C112276C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1124098(0, &qword_1EA1ABC00, (uint64_t (*)(void))sub_1C11239B0, (uint64_t)&type metadata for A12_V20.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (*(void *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(void *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  void *v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 5;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F284((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F284((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C1123AC0(0, &qword_1EA1ABC18, MEMORY[0x1E4FAB4D0]);
  sub_1C1123A7C(&qword_1EA1ABC20, &qword_1EA1ABC18, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

void sub_1C1122D48(uint64_t a1, uint64_t a2)
{
  sub_1C1124098(0, &qword_1EA1ABC00, (uint64_t (*)(void))sub_1C11239B0, (uint64_t)&type metadata for A12_V20.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v15 - v7);
  uint64_t v19 = a2;
  uint64_t v9 = *(void *)(a2 + 16);
  if (v9)
  {
    uint64_t v10 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v11 = v19 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v18 = *(void *)(v10 + 72);
    unsigned int v17 = *MEMORY[0x1E4FABA10];
    uint64_t v15 = (void (**)(uint64_t *, uint64_t))(v6 + 8);
    uint64_t v16 = (uint64_t (**)(uint64_t *, void, uint64_t))(v6 + 104);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v20 = a1;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 6;
      uint64_t *v8 = v12;
      uint64_t v13 = (*v16)(v8, v17, v5);
      MEMORY[0x1F4188790](v13);
      uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C1123AC0(0, &qword_1EA1ABC18, MEMORY[0x1E4FAB4D0]);
      sub_1C1123A7C(&qword_1EA1ABC20, &qword_1EA1ABC18, v14);
      sub_1C151734C();
      (*v15)(v8, v5);
      v11 += v18;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C1123024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a2;
  uint64_t v5 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v36 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C1124098(0, &qword_1EA1ABC00, (uint64_t (*)(void))sub_1C11239B0, (uint64_t)&type metadata for A12_V20.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (uint64_t *)((char *)&v35 - v14);
  uint64_t v40 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0x4060E00000000000;
  *uint64_t v15 = v17;
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAB958], v12);
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v39 = v13;
  uint64_t v37 = KeyPath;
  if (v18)
  {
    uint64_t v19 = a3;
    uint64_t v35 = v12;
    uint64_t v20 = a3 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
    uint64_t v21 = *(void *)(v36 + 72);
    uint64_t v36 = v19;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BFF1AFA4(v20, (uint64_t)v7, type metadata accessor for HeadlineViewLayout.Context);
      uint64_t v22 = *(void *)&v7[*(int *)(v5 + 20) + 32];
      sub_1BFF1F284((uint64_t)v7, type metadata accessor for HeadlineViewLayout.Context);
      if ((v22 & 4) == 0) {
        break;
      }
      v20 += v21;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = qword_1F1B8A238;
LABEL_7:
    uint64_t v12 = v35;
  }
  uint64_t v23 = (char *)v10 + v8[5];
  uint64_t v24 = *MEMORY[0x1E4FAB8C8];
  uint64_t v25 = sub_1C1517A7C();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  uint64_t v27 = (void *)*MEMORY[0x1E4FB27D0];
  *uint64_t v10 = v18;
  *(uint64_t *)((char *)v10 + v8[6]) = 0;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v27;
  double v28 = *MEMORY[0x1E4FB2848];
  double v29 = *(double *)(MEMORY[0x1E4FB2848] + 8);
  double v30 = *(double *)(MEMORY[0x1E4FB2848] + 16);
  double v31 = *(double *)(MEMORY[0x1E4FB2848] + 24);
  id v32 = v27;
  _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v38, (uint64_t)v10, v28, v29, v30, v31);
  sub_1BFF1F284((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  uint64_t v33 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C1123AC0(0, &qword_1EA1ABC18, MEMORY[0x1E4FAB4D0]);
  sub_1C1123A7C(&qword_1EA1ABC20, &qword_1EA1ABC18, v33);
  sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v39 + 8))(v15, v12);
}

uint64_t sub_1C11234D8@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A12_V20.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C11235C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C111F780(a1, a2, a3);
}

uint64_t sub_1C11235E0()
{
  return sub_1C12BC310();
}

unint64_t sub_1C11235F0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C1123620();
  unint64_t result = sub_1C1123674();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C1123620()
{
  unint64_t result = qword_1EA1ABBB8;
  if (!qword_1EA1ABBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABBB8);
  }
  return result;
}

unint64_t sub_1C1123674()
{
  unint64_t result = qword_1EA1ABBC0;
  if (!qword_1EA1ABBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABBC0);
  }
  return result;
}

uint64_t type metadata accessor for A12_V20.Bound()
{
  uint64_t result = qword_1EA1ABBD0;
  if (!qword_1EA1ABBD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1123714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1123728);
}

uint64_t sub_1C1123728(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C11237D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C11237EC);
}

void *sub_1C11237EC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C1123894()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C1123944(uint64_t a1)
{
  uint64_t result = sub_1C1124100(&qword_1EA1ABBE0, (void (*)(uint64_t))type metadata accessor for A12_V20.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C112399C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C1120648(a1, a2, a3);
}

uint64_t sub_1C11239A4(uint64_t a1)
{
  return sub_1C1120718(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1C11239B0()
{
  unint64_t result = qword_1EA1ABBF0;
  if (!qword_1EA1ABBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABBF0);
  }
  return result;
}

unint64_t sub_1C1123A04()
{
  unint64_t result = qword_1EA1ABBF8;
  if (!qword_1EA1ABBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABBF8);
  }
  return result;
}

uint64_t sub_1C1123A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C11234D8(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C1123A60()
{
  return swift_deallocObject();
}

uint64_t sub_1C1123A70(uint64_t a1)
{
  return sub_1C1120918(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *, char *))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1C1123A7C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1123AC0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1123AC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V20.Layout;
    v8[1] = &type metadata for A12_V20.Layout.Attributes;
    v8[2] = sub_1C11239B0();
    v8[3] = sub_1C1123A04();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C1123B44(uint64_t a1)
{
  return sub_1C1120DB0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C1123B4C(uint64_t a1)
{
  sub_1C1122D48(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C1123B54(uint64_t a1)
{
  return sub_1C1123024(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C1123B5C()
{
  if (!qword_1EA1ABC28)
  {
    sub_1C1124098(255, &qword_1EA1ABC30, (uint64_t (*)(void))sub_1C11239B0, (uint64_t)&type metadata for A12_V20.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ABC28);
    }
  }
}

uint64_t sub_1C1123BEC(uint64_t a1)
{
  return sub_1C11211CC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C1123BF4(uint64_t a1)
{
  return sub_1C11217B0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C1123BFC(uint64_t a1)
{
  return sub_1C1121EEC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C1123C04(uint64_t a1)
{
  return sub_1C1122190(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C1123C0C(uint64_t a1)
{
  return sub_1C112276C(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V20.Layout.Attributes()
{
  return &type metadata for A12_V20.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V20.Layout()
{
  return &type metadata for A12_V20.Layout;
}

unint64_t sub_1C1123C38()
{
  unint64_t result = qword_1EA1ABC38;
  if (!qword_1EA1ABC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABC38);
  }
  return result;
}

unint64_t sub_1C1123C90()
{
  unint64_t result = qword_1EA1ABC40;
  if (!qword_1EA1ABC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABC40);
  }
  return result;
}

unint64_t sub_1C1123CE8()
{
  unint64_t result = qword_1EA1ABC48;
  if (!qword_1EA1ABC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABC48);
  }
  return result;
}

unint64_t sub_1C1123D40()
{
  unint64_t result = qword_1EA1ABC50;
  if (!qword_1EA1ABC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABC50);
  }
  return result;
}

uint64_t sub_1C1123D94@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C1124098(0, &qword_1EA1ABC58, (uint64_t (*)(void))sub_1C1124044, (uint64_t)&type metadata for A12_V20.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1124044();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C1124100(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  uint64_t v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C1124044()
{
  unint64_t result = qword_1EA1ABC60;
  if (!qword_1EA1ABC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABC60);
  }
  return result;
}

void sub_1C1124098(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C1124100(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A12_V20.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1124214);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V20.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V20.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C1124250()
{
  unint64_t result = qword_1EA1ABC70;
  if (!qword_1EA1ABC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABC70);
  }
  return result;
}

unint64_t sub_1C11242A8()
{
  unint64_t result = qword_1EA1ABC78;
  if (!qword_1EA1ABC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABC78);
  }
  return result;
}

unint64_t sub_1C1124300()
{
  unint64_t result = qword_1EA1ABC80;
  if (!qword_1EA1ABC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABC80);
  }
  return result;
}

NewsFeed::FeedNativeAdContext __swiftcall FeedNativeAdContext.init(identifierToReplace:nativeAdIdentifier:)(Swift::String identifierToReplace, Swift::String nativeAdIdentifier)
{
  *uint64_t v2 = identifierToReplace;
  v2[1] = nativeAdIdentifier;
  result.nativeAdIdentifier = nativeAdIdentifier;
  result.identifierToReplace = identifierToReplace;
  return result;
}

uint64_t FeedNativeAdModel.model.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FeedNativeAdModel.context.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  int v3 = (void *)(v2 + *(int *)(a1 + 36));
  uint64_t v4 = v3[1];
  uint64_t v5 = v3[2];
  uint64_t v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 FeedNativeAdModel.init(model:nativeAdContext:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __n128 v9 = *a2;
  unint64_t v5 = a2[1].n128_u64[0];
  unint64_t v6 = a2[1].n128_u64[1];
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v7 = (__n128 *)(a4 + *(int *)(type metadata accessor for FeedNativeAdModel() + 36));
  __n128 result = v9;
  *uint64_t v7 = v9;
  v7[1].n128_u64[0] = v5;
  v7[1].n128_u64[1] = v6;
  return result;
}

uint64_t static FeedNativeAdModel.== infix(_:_:)()
{
  return sub_1C151E5CC() & 1;
}

uint64_t sub_1C11244AC()
{
  return static FeedNativeAdModel.== infix(_:_:)();
}

uint64_t FeedNativeAdContext.identifierToReplace.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedNativeAdContext.nativeAdIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t *sub_1C1124518(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v10 = *v11;
    v10[1] = v11[1];
    v10[2] = v11[2];
    uint64_t v10[3] = v11[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C1124634(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C11246AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  _OWORD v7[2] = v8[2];
  v7[3] = v8[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C112474C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  _OWORD v7[2] = v8[2];
  v7[3] = v8[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C1124800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  long long v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  return a1;
}

uint64_t sub_1C112487C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  _OWORD v7[2] = v8[2];
  v7[3] = v8[3];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C1124920(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C1124A6CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1C1124A80(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFE0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFE0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFE0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 32);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1C1124C64);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            void v18[2] = 0;
            v18[3] = 0;
            *uint64_t v18 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            v18[1] = a2 - 1;
          }
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

BOOL static FormatContentError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatContentError.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatContentError.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C1124D18()
{
  unint64_t result = qword_1EA1ABC88;
  if (!qword_1EA1ABC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABC88);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatContentError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1124E38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentError()
{
  return &type metadata for FormatContentError;
}

uint64_t destroy for FormatStateMachineBinding(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  char v6 = *(unsigned char *)(a1 + 80);
  return sub_1BFEC41E8(v2, v3, v4, v5, v6);
}

uint64_t initializeWithCopy for FormatStateMachineBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 72);
  char v10 = *(unsigned char *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF429DC(v6, v7, v8, v9, v10);
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 80) = v10;
  return a1;
}

uint64_t assignWithCopy for FormatStateMachineBinding(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v2[2];
  *(void *)(a1 + 24) = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = v2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = v2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[6];
  uint64_t v5 = v2[7];
  uint64_t v6 = v2[8];
  uint64_t v7 = v2[9];
  LOBYTE(v2) = *((unsigned char *)v2 + 80);
  sub_1BFF429DC(v4, v5, v6, v7, (char)v2);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = *(void *)(a1 + 72);
  char v12 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 80) = (_BYTE)v2;
  sub_1BFEC41E8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FormatStateMachineBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 80);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 72);
  char v10 = *(unsigned char *)(a1 + 80);
  long long v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 80) = v5;
  sub_1BFEC41E8(v6, v7, v8, v9, v10);
  return a1;
}

ValueMetadata *type metadata accessor for FormatStateMachineBinding()
{
  return &type metadata for FormatStateMachineBinding;
}

uint64_t sub_1C11250F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDirectionalGradient.init(from:)(a1, a2);
}

uint64_t sub_1C1125110(void *a1)
{
  return FormatDirectionalGradient.encode(to:)(a1);
}

uint64_t _s8NewsFeed25FormatDirectionalGradientO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1C00F6034(a1, (uint64_t)v48);
  sub_1C00F6034(a2, (uint64_t)v49);
  sub_1C00F6034((uint64_t)v48, (uint64_t)v50);
  sub_1C00F6034((uint64_t)v49, (uint64_t)&v51);
  sub_1C00F6034((uint64_t)v48, (uint64_t)v52);
  if (sub_1C00F6090((uint64_t)v52) == 1)
  {
    uint64_t v3 = (long long *)sub_1C00F609C((uint64_t)v52);
    sub_1C00F6034((uint64_t)v49, (uint64_t)v47);
    int v4 = sub_1C00F6090((uint64_t)v47);
    char v5 = (long long *)sub_1C00F609C((uint64_t)v47);
    if (v4 == 1)
    {
      long long v6 = v3[5];
      long long v43 = v3[4];
      long long v44 = v6;
      long long v7 = v3[7];
      long long v45 = v3[6];
      long long v46 = v7;
      long long v8 = v3[1];
      long long v39 = *v3;
      long long v40 = v8;
      long long v9 = v3[3];
      long long v41 = v3[2];
      long long v42 = v9;
      long long v10 = v5[5];
      long long v35 = v5[4];
      long long v36 = v10;
      long long v11 = v5[7];
      long long v37 = v5[6];
      long long v38 = v11;
      long long v12 = v5[1];
      long long v31 = *v5;
      long long v32 = v12;
      long long v13 = v5[3];
      long long v33 = v5[2];
      long long v34 = v13;
      sub_1BFE99F10(v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C00F5C0C);
      sub_1BFE99F10(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C00F5C0C);
      sub_1BFE99F10(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C00F5C0C);
      sub_1BFE99F10(v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C00F5C0C);
      char v14 = _s8NewsFeed20FormatRadialGradientV2eeoiySbAC_ACtFZ_0(&v39, &v31);
LABEL_7:
      char v26 = v14;
      sub_1C00F60AC((uint64_t)v50);
      sub_1BFE99F10(v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C00F5DC0);
      sub_1BFE99F10(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C00F5DC0);
      return v26 & 1;
    }
  }
  else
  {
    int v15 = (uint64_t *)sub_1C00F609C((uint64_t)v52);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = v15[2];
    uint64_t v19 = v15[3];
    uint64_t v20 = v15[4];
    uint64_t v21 = v15[5];
    uint64_t v22 = v15[6];
    uint64_t v23 = v15[7];
    sub_1C00F6034((uint64_t)v49, (uint64_t)v47);
    int v24 = sub_1C00F6090((uint64_t)v47);
    uint64_t v25 = sub_1C00F609C((uint64_t)v47);
    if (v24 != 1)
    {
      uint64_t v27 = *(void *)v25;
      uint64_t v28 = *(void *)(v25 + 8);
      *(void *)&long long v39 = v16;
      *((void *)&v39 + 1) = v17;
      *(void *)&long long v40 = v18;
      *((void *)&v40 + 1) = v19;
      *(void *)&long long v41 = v20;
      *((void *)&v41 + 1) = v21;
      *(void *)&long long v42 = v22;
      *((void *)&v42 + 1) = v23;
      *(void *)&long long v31 = v27;
      *((void *)&v31 + 1) = v28;
      long long v29 = *(_OWORD *)(v25 + 32);
      long long v32 = *(_OWORD *)(v25 + 16);
      long long v33 = v29;
      long long v34 = *(_OWORD *)(v25 + 48);
      sub_1BFE99F10(v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C00F5C0C);
      sub_1BFE99F10(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C00F5C0C);
      sub_1BFE99F10(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C00F5C0C);
      sub_1BFE99F10(v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C00F5C0C);
      char v14 = _s8NewsFeed14FormatGradientV2eeoiySbAC_ACtFZ_0((uint64_t)&v39, (uint64_t)&v31);
      goto LABEL_7;
    }
  }
  sub_1BFE99F10(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C00F5C0C);
  sub_1BFE99F10(v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C00F5C0C);
  sub_1C00F60AC((uint64_t)v50);
  char v26 = 0;
  return v26 & 1;
}

unint64_t sub_1C11253B8(uint64_t a1)
{
  unint64_t result = sub_1C11253E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C11253E0()
{
  unint64_t result = qword_1EA1ABC90;
  if (!qword_1EA1ABC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABC90);
  }
  return result;
}

unint64_t sub_1C1125434(void *a1)
{
  a1[1] = sub_1C088ED78();
  a1[2] = sub_1C08F90A0();
  unint64_t result = sub_1C112546C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C112546C()
{
  unint64_t result = qword_1EA1ABC98;
  if (!qword_1EA1ABC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABC98);
  }
  return result;
}

uint64_t sub_1C11254C0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 104) = *(void *)(result + 104) & 1 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for FormatDirectionalGradient()
{
  return &type metadata for FormatDirectionalGradient;
}

uint64_t FormatComputedContext.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t FormatComputedContext.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatComputedContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatComputedContext);
}

uint64_t method lookup function for FormatComputed(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatComputed);
}

uint64_t FeedActionSender.action.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1125578(v1, a1);
}

uint64_t sub_1C1125578(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id FeedActionSender.sourceView.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for FeedActionSender() + 20));
  return v1;
}

uint64_t type metadata accessor for FeedActionSender()
{
  uint64_t result = qword_1EA1ABCA0;
  if (!qword_1EA1ABCA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FeedActionSender(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_26:
      uint64_t v34 = *(int *)(a3 + 20);
      long long v35 = *(void **)((char *)a2 + v34);
      *(void *)((char *)a1 + v34) = v35;
      id v36 = v35;
      return a1;
    }
    uint64_t v8 = type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(a2, 1, v18))
      {
        sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        uint64_t v23 = a2[1];
        *a1 = *a2;
        a1[1] = v23;
        uint64_t v24 = *(int *)(v18 + 20);
        long long v39 = (char *)a1 + v24;
        uint64_t v40 = v19;
        uint64_t v25 = (char *)a2 + v24;
        uint64_t v26 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v27 = *(void *)(v26 - 8);
        uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
        uint64_t v29 = v26;
        swift_bridgeObjectRetain();
        __dsta = v25;
        if (v28(v25, 1, v29))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v39, v25, *(void *)(*(void *)(v30 - 8) + 64));
          uint64_t v31 = v40;
        }
        else
        {
          uint64_t v38 = v29;
          uint64_t v32 = sub_1C1515FDC();
          uint64_t v33 = *(void *)(v32 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v33 + 48))(__dsta, 2, v32))
          {
            memcpy(v39, __dsta, *(void *)(v27 + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(v33 + 16))(v39, __dsta, v32);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v39, 0, 2, v32);
          }
          uint64_t v31 = v40;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v39, 0, 1, v38);
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(a1, 0, 1, v18);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_25:
        swift_storeEnumTagMultiPayload();
        goto LABEL_26;
      }
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      __dst = (char *)a1 + v11;
      long long v12 = (char *)a2 + v11;
      uint64_t v13 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v14 = *(void *)(v13 - 8);
      int v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      if (v15(v12, 1, v13))
      {
        sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(__dst, v12, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        uint64_t v21 = sub_1C1515FDC();
        uint64_t v22 = *(void *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 2, v21))
        {
          memcpy(__dst, v12, *(void *)(v14 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v12, v21);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 2, v21);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_25;
  }
  uint64_t v17 = *a2;
  *a1 = *a2;
  a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

void destroy for FeedActionSender(uint64_t a1, uint64_t a2)
{
  type metadata accessor for FeedAction(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = type metadata accessor for FormatPurchaseLandingPageData();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(a1, 1, v6)) {
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      uint64_t v5 = *(int *)(v6 + 20);
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      uint64_t v5 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
    }
    uint64_t v7 = a1 + v5;
    uint64_t v8 = type metadata accessor for FormatPostPurchaseData();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
    {
      uint64_t v9 = sub_1C1515FDC();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 2, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
      }
    }
  }
LABEL_10:
  uint64_t v11 = *(void **)(a1 + *(int *)(a2 + 20));
}

void *initializeWithCopy for FeedActionSender(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FeedAction(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
      {
        sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        uint64_t v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        uint64_t v22 = *(int *)(v16 + 20);
        long long v37 = (char *)a1 + v22;
        uint64_t v38 = v17;
        uint64_t v23 = (char *)a2 + v22;
        uint64_t v24 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v25 = *(void *)(v24 - 8);
        uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
        uint64_t v27 = v24;
        swift_bridgeObjectRetain();
        __dsta = v23;
        if (v26(v23, 1, v27))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v37, v23, *(void *)(*(void *)(v28 - 8) + 64));
          uint64_t v29 = v38;
        }
        else
        {
          uint64_t v36 = v27;
          uint64_t v30 = sub_1C1515FDC();
          uint64_t v31 = *(void *)(v30 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v31 + 48))(__dsta, 2, v30))
          {
            memcpy(v37, __dsta, *(void *)(v25 + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(v31 + 16))(v37, __dsta, v30);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v37, 0, 2, v30);
          }
          uint64_t v29 = v38;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v37, 0, 1, v36);
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(a1, 0, 1, v16);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_23:
        swift_storeEnumTagMultiPayload();
        goto LABEL_24;
      }
      uint64_t v41 = a3;
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      __dst = (char *)a1 + v10;
      uint64_t v11 = (char *)a2 + v10;
      uint64_t v12 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      if (v14(v11, 1, v12))
      {
        sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
        a3 = v41;
      }
      else
      {
        uint64_t v19 = sub_1C1515FDC();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 2, v19))
        {
          memcpy(__dst, v11, *(void *)(v13 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v11, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 2, v19);
        }
        a3 = v41;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_23;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_24:
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = *(void **)((char *)a2 + v32);
  *(void *)((char *)a1 + v32) = v33;
  id v34 = v33;
  return a1;
}

void *assignWithCopy for FeedActionSender(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C1126928((uint64_t)a1);
    uint64_t v6 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for FormatPurchaseData(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v15 = type metadata accessor for FormatPurchaseLandingPageData();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
        {
          sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v20 = *(int *)(v15 + 20);
          uint64_t v36 = (char *)a1 + v20;
          uint64_t v37 = v16;
          uint64_t v21 = (char *)a2 + v20;
          uint64_t v22 = type metadata accessor for FormatPostPurchaseData();
          uint64_t v23 = *(void *)(v22 - 8);
          uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
          uint64_t v25 = v22;
          swift_bridgeObjectRetain();
          __dsta = v21;
          if (v24(v21, 1, v25))
          {
            sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v36, v21, *(void *)(*(void *)(v26 - 8) + 64));
            uint64_t v27 = v37;
          }
          else
          {
            uint64_t v35 = v25;
            uint64_t v28 = sub_1C1515FDC();
            uint64_t v29 = *(void *)(v28 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v29 + 48))(__dsta, 2, v28))
            {
              memcpy(v36, __dsta, *(void *)(v23 + 64));
            }
            else
            {
              (*(void (**)(char *, void *, uint64_t))(v29 + 16))(v36, __dsta, v28);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v36, 0, 2, v28);
            }
            uint64_t v27 = v37;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v36, 0, 1, v35);
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(a1, 0, 1, v15);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_24:
          swift_storeEnumTagMultiPayload();
          goto LABEL_25;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        __dst = (char *)a1 + v9;
        uint64_t v10 = (char *)a2 + v9;
        uint64_t v11 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v12 = *(void *)(v11 - 8);
        uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
        swift_bridgeObjectRetain();
        if (v13(v10, 1, v11))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          uint64_t v18 = sub_1C1515FDC();
          uint64_t v19 = *(void *)(v18 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 2, v18))
          {
            memcpy(__dst, v10, *(void *)(v12 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v10, v18);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 2, v18);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
        }
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
LABEL_25:
  uint64_t v30 = *(int *)(a3 + 20);
  uint64_t v31 = *(void **)((char *)a2 + v30);
  uint64_t v32 = *(void **)((char *)a1 + v30);
  *(void *)((char *)a1 + v30) = v31;
  id v33 = v31;

  return a1;
}

uint64_t sub_1C1126928(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedAction(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for FeedActionSender(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FeedAction(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
      {
        sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v19 = *(int *)(v15 + 20);
        __dsta = (char *)a1 + v19;
        uint64_t v20 = (char *)a2 + v19;
        uint64_t v21 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v22 = *(void *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(__dsta, v20, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          uint64_t v24 = sub_1C1515FDC();
          uint64_t v28 = *(void *)(v24 - 8);
          uint64_t v29 = v24;
          if ((*(unsigned int (**)(char *, uint64_t))(v28 + 48))(v20, 2))
          {
            uint64_t v25 = v20;
            uint64_t v26 = __dsta;
            memcpy(__dsta, v25, *(void *)(v22 + 64));
          }
          else
          {
            uint64_t v26 = __dsta;
            (*(void (**)(void))(v28 + 32))();
            (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dsta, 0, 2, v29);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v21);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_23:
        swift_storeEnumTagMultiPayload();
        goto LABEL_24;
      }
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        uint64_t v18 = sub_1C1515FDC();
        __dst = *(void (***)(void *, const void *, uint64_t))(v18 - 8);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))__dst[6])(v11, 2, v18))
        {
          memcpy(v10, v11, *(void *)(v13 + 64));
        }
        else
        {
          __dst[4](v10, v11, v18);
          ((void (*)(char *, void, uint64_t, uint64_t))__dst[7])(v10, 0, 2, v18);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_23;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_24:
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_OWORD *assignWithTake for FeedActionSender(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C1126928((uint64_t)a1);
    uint64_t v6 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for FormatPurchaseData(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v15 = type metadata accessor for FormatPurchaseLandingPageData();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
        {
          sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v19 = *(int *)(v15 + 20);
          __dsta = (char *)a1 + v19;
          uint64_t v20 = (char *)a2 + v19;
          uint64_t v21 = type metadata accessor for FormatPostPurchaseData();
          uint64_t v22 = *(void *)(v21 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
          {
            sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(__dsta, v20, *(void *)(*(void *)(v23 - 8) + 64));
          }
          else
          {
            uint64_t v24 = sub_1C1515FDC();
            uint64_t v30 = *(void *)(v24 - 8);
            uint64_t v31 = v24;
            if ((*(unsigned int (**)(char *, uint64_t))(v30 + 48))(v20, 2))
            {
              uint64_t v25 = v20;
              uint64_t v26 = __dsta;
              memcpy(__dsta, v25, *(void *)(v22 + 64));
            }
            else
            {
              uint64_t v26 = __dsta;
              (*(void (**)(void))(v30 + 32))();
              (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(__dsta, 0, 2, v31);
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v21);
          }
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_24:
          swift_storeEnumTagMultiPayload();
          goto LABEL_25;
        }
        *a1 = *a2;
        uint64_t v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          uint64_t v18 = sub_1C1515FDC();
          __dst = *(void (***)(void *, const void *, uint64_t))(v18 - 8);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))__dst[6])(v11, 2, v18))
          {
            memcpy(v10, v11, *(void *)(v13 + 64));
          }
          else
          {
            __dst[4](v10, v11, v18);
            ((void (*)(char *, void, uint64_t, uint64_t))__dst[7])(v10, 0, 2, v18);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
LABEL_25:
  uint64_t v27 = *(int *)(a3 + 20);
  uint64_t v28 = *(void **)((char *)a1 + v27);
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);

  return a1;
}

uint64_t getEnumTagSinglePayload for FeedActionSender(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1127430);
}

uint64_t sub_1C1127430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FeedAction(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for FeedActionSender(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1127504);
}

uint64_t sub_1C1127504(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FeedAction(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C11275C0()
{
  uint64_t result = type metadata accessor for FeedAction(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FormatFrameNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:contentIdentifier:frame:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  *(void *)(result + 48) = a5;
  *(void *)(result + 56) = a6;
  *(double *)(result + 64) = a7;
  *(double *)(result + 72) = a8;
  *(double *)(result + 80) = a9;
  *(double *)(result + 88) = a10;
  return result;
}

uint64_t FormatFrameNodeLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatFrameNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatFrameNodeLayoutAttributes.contentIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatFrameNodeLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t FormatFrameNodeLayoutAttributes.init(identifier:layoutIdentifier:contentIdentifier:frame:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10)
{
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = a3;
  *(void *)(v10 + 40) = a4;
  *(void *)(v10 + 48) = a5;
  *(void *)(v10 + 56) = a6;
  *(double *)(v10 + 64) = a7;
  *(double *)(v10 + 72) = a8;
  *(double *)(v10 + 80) = a9;
  *(double *)(v10 + 88) = a10;
  return v10;
}

unint64_t sub_1C11277A0()
{
  unint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x656D617266;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C112783C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1128460(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1127864(uint64_t a1)
{
  unint64_t v2 = sub_1C1127B6C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11278A0(uint64_t a1)
{
  unint64_t v2 = sub_1C1127B6C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatFrameNodeLayoutAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatFrameNodeLayoutAttributes.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatFrameNodeLayoutAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C1127F30(0, &qword_1EA1ABCB0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1127B6C();
  sub_1C1520F0C();
  LOBYTE(v13) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1C15207CC();
    LOBYTE(v13) = 2;
    sub_1C15207CC();
    long long v10 = *(_OWORD *)(v3 + 80);
    long long v13 = *(_OWORD *)(v3 + 64);
    long long v14 = v10;
    v12[15] = 3;
    type metadata accessor for CGRect(0);
    sub_1BFE4C6A0(&qword_1EA197288, 255, type metadata accessor for CGRect);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C1127B6C()
{
  unint64_t result = qword_1EA1ABCB8;
  if (!qword_1EA1ABCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABCB8);
  }
  return result;
}

uint64_t FormatFrameNodeLayoutAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatFrameNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatFrameNodeLayoutAttributes.init(from:)(void *a1)
{
  sub_1C1127F30(0, &qword_1EA1ABCC0, MEMORY[0x1E4FBBDC0]);
  uint64_t v16 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1127B6C();
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v5;
    LOBYTE(v17) = 0;
    uint64_t v9 = v16;
    *(void *)(v1 + 16) = sub_1C152069C();
    *(void *)(v1 + 24) = v10;
    LOBYTE(v17) = 1;
    *(void *)(v1 + 32) = sub_1C152069C();
    *(void *)(v1 + 40) = v11;
    LOBYTE(v17) = 2;
    *(void *)(v1 + 48) = sub_1C152069C();
    *(void *)(v1 + 56) = v12;
    type metadata accessor for CGRect(0);
    char v19 = 3;
    sub_1BFE4C6A0(&qword_1EB87A290, 255, type metadata accessor for CGRect);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    long long v14 = v18;
    *(_OWORD *)(v1 + 64) = v17;
    *(_OWORD *)(v1 + 80) = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1C1127F30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C1127B6C();
    unint64_t v7 = a3(a1, &type metadata for FormatFrameNodeLayoutAttributes.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C1127F94(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C6A0(&qword_1EA1ABCC8, a2, (void (*)(uint64_t))type metadata accessor for FormatFrameNodeLayoutAttributes);
}

uint64_t type metadata accessor for FormatFrameNodeLayoutAttributes()
{
  return self;
}

uint64_t sub_1C1128000(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C6A0(&qword_1EA1A9370, a2, (void (*)(uint64_t))type metadata accessor for FormatFrameNodeLayoutAttributes);
}

uint64_t sub_1C1128048(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C6A0(&qword_1EA1A93C8, a2, (void (*)(uint64_t))type metadata accessor for FormatFrameNodeLayoutAttributes);
}

uint64_t sub_1C1128090(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C6A0(&qword_1EA1ABCD0, a2, (void (*)(uint64_t))type metadata accessor for FormatFrameNodeLayoutAttributes);
}

uint64_t sub_1C11280D8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatFrameNodeLayoutAttributes.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C1128130(void *a1)
{
  return FormatFrameNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C1128154(uint64_t a1, uint64_t a2)
{
  sub_1BFE4C6A0(&qword_1EA1A9418, a2, (void (*)(uint64_t))type metadata accessor for FormatFrameNodeLayoutAttributes);
  return sub_1C151798C();
}

uint64_t method lookup function for FormatFrameNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatFrameNodeLayoutAttributes);
}

uint64_t dispatch thunk of FormatFrameNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:contentIdentifier:frame:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatFrameNodeLayoutAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

unsigned char *storeEnumTagSinglePayload for FormatFrameNodeLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1128320);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFrameNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatFrameNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1C112835C()
{
  unint64_t result = qword_1EA1ABCD8;
  if (!qword_1EA1ABCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABCD8);
  }
  return result;
}

unint64_t sub_1C11283B4()
{
  unint64_t result = qword_1EA1ABCE0;
  if (!qword_1EA1ABCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABCE0);
  }
  return result;
}

unint64_t sub_1C112840C()
{
  unint64_t result = qword_1EA1ABCE8;
  if (!qword_1EA1ABCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABCE8);
  }
  return result;
}

uint64_t sub_1C1128460(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1605370 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C1620870 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t FeedGroupGroupingRulesOverrides.maxInaccessibleHeadlines.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRulesOverrides.maxEvergreenHeadlines.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRulesOverrides.maxPublisherOccurrences.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRulesOverrides.maxAIGCHeadlines.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRulesOverrides.topicDiversity.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRulesOverrides.minTagCTRRelativeToBaseline.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRulesOverrides.maxInaccessibleHeadlinesDepthTransform.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRulesOverrides.maxEvergreenHeadlinesDepthTransform.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRulesOverrides.maxPublisherOccurrencesDepthTransform.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRulesOverrides.maxAIGCHeadlinesDepthTransform.getter()
{
  return swift_retain();
}

uint64_t FeedGroupGroupingRulesOverrides.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C1129950(0, &qword_1EB8701C0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1128A7C();
  sub_1C1520EBC();
  if (!v2)
  {
    sub_1BFDC6E38();
    char v26 = 0;
    sub_1BFCD3F88(&qword_1EB8866D8, (void (*)(uint64_t))sub_1BFDC6E38);
    uint64_t v25 = v7;
    sub_1C15205FC();
    uint64_t v24 = v27;
    char v26 = 1;
    sub_1C15205FC();
    uint64_t v23 = v27;
    char v26 = 2;
    sub_1C15205FC();
    uint64_t v22 = v27;
    char v26 = 3;
    sub_1C15205FC();
    uint64_t v21 = v27;
    sub_1C0087D7C();
    char v26 = 4;
    sub_1BFCD3F88(&qword_1EB865350, (void (*)(uint64_t))sub_1C0087D7C);
    sub_1C15205FC();
    uint64_t v20 = v27;
    sub_1BFDC6EB0();
    char v26 = 5;
    sub_1BFCD3F88(&qword_1EB8866C8, (void (*)(uint64_t))sub_1BFDC6EB0);
    sub_1C15205FC();
    uint64_t v19 = v27;
    sub_1BFCD407C();
    char v26 = 6;
    sub_1BFCD3F88(&qword_1EB862CB0, (void (*)(uint64_t))sub_1BFCD407C);
    sub_1C15205FC();
    uint64_t v18 = v27;
    char v26 = 7;
    sub_1C15205FC();
    uint64_t v17 = v27;
    char v26 = 8;
    sub_1C15205FC();
    uint64_t v10 = v27;
    char v26 = 9;
    sub_1C15205FC();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v6);
    uint64_t v11 = v27;
    uint64_t v12 = v23;
    *a2 = v24;
    a2[1] = v12;
    uint64_t v13 = v21;
    a2[2] = v22;
    a2[3] = v13;
    uint64_t v14 = v19;
    a2[4] = v20;
    a2[5] = v14;
    uint64_t v15 = v17;
    a2[6] = v18;
    a2[7] = v15;
    a2[8] = v10;
    a2[9] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1C1128A7C()
{
  unint64_t result = qword_1EB870168;
  if (!qword_1EB870168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870168);
  }
  return result;
}

unint64_t sub_1C1128AD4(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x7669446369706F74;
      break;
    case 5:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000026;
      break;
    case 7:
      unint64_t result = 0xD000000000000023;
      break;
    case 8:
      unint64_t result = 0xD000000000000025;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C1128BF8()
{
  return sub_1C1128AD4(*v0);
}

uint64_t sub_1C1128C00(uint64_t a1)
{
  unint64_t v2 = sub_1C1128A7C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1128C3C(uint64_t a1)
{
  unint64_t v2 = sub_1C1128A7C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedGroupGroupingRulesOverrides.encode(to:)(void *a1)
{
  sub_1C1129950(0, &qword_1EA1ABCF0, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v26 = v1[2];
  uint64_t v27 = v9;
  uint64_t v11 = v1[3];
  uint64_t v24 = v1[4];
  uint64_t v25 = v11;
  uint64_t v12 = v1[5];
  uint64_t v22 = v1[6];
  uint64_t v23 = v12;
  uint64_t v13 = v1[7];
  uint64_t v20 = v1[8];
  uint64_t v21 = v13;
  uint64_t v19 = v1[9];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1128A7C();
  sub_1C1520F0C();
  uint64_t v29 = v10;
  uint64_t v14 = v8;
  char v28 = 0;
  sub_1BFDC6E38();
  sub_1BFCD3F88(qword_1EB865388, (void (*)(uint64_t))sub_1BFDC6E38);
  sub_1C152078C();
  if (!v2)
  {
    uint64_t v16 = v25;
    uint64_t v15 = v26;
    uint64_t v17 = v24;
    uint64_t v29 = v27;
    char v28 = 1;
    sub_1C152078C();
    uint64_t v29 = v15;
    char v28 = 2;
    sub_1C152078C();
    uint64_t v29 = v16;
    char v28 = 3;
    sub_1C152078C();
    uint64_t v29 = v17;
    char v28 = 4;
    sub_1C0087D7C();
    sub_1BFCD3F88(&qword_1EB865348, (void (*)(uint64_t))sub_1C0087D7C);
    sub_1C152078C();
    uint64_t v29 = v23;
    char v28 = 5;
    sub_1BFDC6EB0();
    sub_1BFCD3F88(&qword_1EB865380, (void (*)(uint64_t))sub_1BFDC6EB0);
    sub_1C152078C();
    uint64_t v29 = v22;
    char v28 = 6;
    sub_1BFCD407C();
    sub_1BFCD3F88(&qword_1EB862CA8, (void (*)(uint64_t))sub_1BFCD407C);
    sub_1C152078C();
    uint64_t v29 = v21;
    char v28 = 7;
    sub_1C152078C();
    uint64_t v29 = v20;
    char v28 = 8;
    sub_1C152078C();
    uint64_t v29 = v19;
    char v28 = 9;
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v14, v5);
}

uint64_t sub_1C11290E4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FeedGroupGroupingRulesOverrides.init(from:)(a1, a2);
}

uint64_t sub_1C11290FC(void *a1)
{
  return FeedGroupGroupingRulesOverrides.encode(to:)(a1);
}

uint64_t _s8NewsFeed0B27GroupGroupingRulesOverridesV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  uint64_t v11 = a1[8];
  uint64_t v10 = a1[9];
  uint64_t v13 = *a2;
  uint64_t v12 = a2[1];
  uint64_t v15 = a2[2];
  uint64_t result = a2[3];
  uint64_t v17 = a2[4];
  uint64_t v16 = a2[5];
  uint64_t v19 = a2[6];
  uint64_t v18 = a2[7];
  uint64_t v21 = a2[8];
  uint64_t v20 = a2[9];
  if (v2)
  {
    if (!v13) {
      return 0;
    }
    if (*(void *)(v2 + 16) != *(void *)(v13 + 16)) {
      return 0;
    }
    uint64_t v22 = *(void *)(v2 + 24);
    uint64_t v57 = v9;
    uint64_t v23 = a2[8];
    uint64_t v24 = v11;
    uint64_t v25 = a2[9];
    uint64_t v26 = v10;
    uint64_t v27 = *(void *)(v13 + 24);
    uint64_t v91 = a2[7];
    uint64_t v80 = a2[5];
    uint64_t v85 = a2[6];
    uint64_t v68 = a2[4];
    uint64_t v72 = v6;
    uint64_t v62 = a2[3];
    uint64_t v65 = v7;
    uint64_t v76 = v8;
    uint64_t v58 = v4;
    uint64_t v60 = v5;
    uint64_t v56 = a2[2];
    swift_retain();
    swift_retain();
    uint64_t v28 = v27;
    uint64_t v10 = v26;
    uint64_t v20 = v25;
    uint64_t v11 = v24;
    uint64_t v21 = v23;
    uint64_t v9 = v57;
    LOBYTE(v22) = sub_1C00F2DD4(v22, v28);
    swift_release();
    swift_release();
    uint64_t v15 = v56;
    uint64_t v4 = v58;
    uint64_t v5 = v60;
    uint64_t result = v62;
    uint64_t v7 = v65;
    uint64_t v17 = v68;
    uint64_t v6 = v72;
    uint64_t v16 = v80;
    uint64_t v19 = v85;
    uint64_t v8 = v76;
    uint64_t v18 = v91;
    if ((v22 & 1) == 0) {
      return 0;
    }
  }
  else if (v13)
  {
    return 0;
  }
  if (v3)
  {
    if (!v12) {
      return 0;
    }
    if (*(void *)(v3 + 16) != *(void *)(v12 + 16)) {
      return 0;
    }
    uint64_t v29 = *(void *)(v3 + 24);
    uint64_t v30 = *(void *)(v12 + 24);
    uint64_t v92 = v18;
    uint64_t v81 = v16;
    uint64_t v86 = v19;
    uint64_t v69 = v17;
    uint64_t v73 = v6;
    uint64_t v63 = result;
    uint64_t v66 = v7;
    uint64_t v77 = v8;
    uint64_t v59 = v4;
    uint64_t v61 = v5;
    uint64_t v31 = v15;
    swift_retain();
    swift_retain();
    LOBYTE(v29) = sub_1C00F2DD4(v29, v30);
    swift_release();
    swift_release();
    uint64_t v15 = v31;
    uint64_t v4 = v59;
    uint64_t v5 = v61;
    uint64_t result = v63;
    uint64_t v7 = v66;
    uint64_t v17 = v69;
    uint64_t v6 = v73;
    uint64_t v16 = v81;
    uint64_t v19 = v86;
    uint64_t v8 = v77;
    uint64_t v18 = v92;
    if ((v29 & 1) == 0) {
      return 0;
    }
  }
  else if (v12)
  {
    return 0;
  }
  if (v4)
  {
    if (!v15) {
      return 0;
    }
    if (*(void *)(v4 + 16) != *(void *)(v15 + 16)) {
      return 0;
    }
    uint64_t v32 = *(void *)(v4 + 24);
    uint64_t v33 = *(void *)(v15 + 24);
    uint64_t v93 = v18;
    uint64_t v82 = v16;
    uint64_t v87 = v19;
    uint64_t v70 = v17;
    uint64_t v74 = v6;
    uint64_t v64 = result;
    uint64_t v67 = v7;
    uint64_t v78 = v8;
    uint64_t v34 = v5;
    swift_retain();
    swift_retain();
    LOBYTE(v32) = sub_1C00F2DD4(v32, v33);
    swift_release();
    swift_release();
    uint64_t result = v64;
    uint64_t v7 = v67;
    uint64_t v5 = v34;
    uint64_t v17 = v70;
    uint64_t v6 = v74;
    uint64_t v16 = v82;
    uint64_t v19 = v87;
    uint64_t v8 = v78;
    uint64_t v18 = v93;
    if ((v32 & 1) == 0) {
      return 0;
    }
  }
  else if (v15)
  {
    return 0;
  }
  if (!v5)
  {
    if (result) {
      return 0;
    }
LABEL_27:
    if (v7)
    {
      if (!v17) {
        return 0;
      }
      uint64_t v95 = v18;
      uint64_t v84 = v16;
      uint64_t v89 = v19;
      uint64_t v38 = v17;
      uint64_t v39 = v8;
      uint64_t v40 = v6;
      swift_retain();
      uint64_t v41 = swift_retain();
      char v42 = sub_1C03BF2E8(v41, v38);
      swift_release();
      swift_release();
      uint64_t v16 = v84;
      uint64_t v19 = v89;
      uint64_t v6 = v40;
      uint64_t v8 = v39;
      uint64_t v18 = v95;
      if ((v42 & 1) == 0) {
        return 0;
      }
    }
    else if (v17)
    {
      return 0;
    }
    if (v6)
    {
      if (!v16) {
        return 0;
      }
      if (*(double *)(v6 + 16) != *(double *)(v16 + 16)) {
        return 0;
      }
      unint64_t v43 = *(void *)(v6 + 24);
      uint64_t v44 = *(void *)(v16 + 24);
      uint64_t v96 = v18;
      uint64_t v90 = v19;
      uint64_t v45 = v8;
      swift_retain();
      swift_retain();
      LOBYTE(v43) = sub_1C00F309C(v43, v44);
      swift_release();
      swift_release();
      uint64_t v19 = v90;
      uint64_t v8 = v45;
      uint64_t v18 = v96;
      if ((v43 & 1) == 0) {
        return 0;
      }
    }
    else if (v16)
    {
      return 0;
    }
    uint64_t v46 = v9;
    uint64_t v47 = v21;
    uint64_t v48 = v11;
    if (v8)
    {
      if (!v19) {
        return 0;
      }
      uint64_t v49 = v8;
      uint64_t v50 = v18;
      uint64_t v51 = v19;
      sub_1C1516D9C();
      sub_1BFCD3F88(&qword_1EB8628D0, MEMORY[0x1E4FB7810]);
      swift_retain();
      swift_retain();
      if ((sub_1C151E5CC() & 1) == 0) {
        goto LABEL_49;
      }
      char v52 = sub_1C00F1B28(*(void *)(v49 + *(void *)(*(void *)v49 + 120)), *(void *)(v51 + *(void *)(*(void *)v51 + 120)));
      swift_release();
      swift_release();
      if ((v52 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t v50 = v18;
      if (v19) {
        return 0;
      }
    }
    if (!v46)
    {
      if (v50) {
        return 0;
      }
LABEL_51:
      if (v48)
      {
        if (!v47) {
          return 0;
        }
        sub_1C1516D9C();
        sub_1BFCD3F88(&qword_1EB8628D0, MEMORY[0x1E4FB7810]);
        swift_retain();
        swift_retain();
        if ((sub_1C151E5CC() & 1) == 0) {
          goto LABEL_49;
        }
        char v54 = sub_1C00F1B28(*(void *)(v48 + *(void *)(*(void *)v48 + 120)), *(void *)(v47 + *(void *)(*(void *)v47 + 120)));
        swift_release();
        swift_release();
        if ((v54 & 1) == 0) {
          return 0;
        }
      }
      else if (v47)
      {
        return 0;
      }
      if (!v10) {
        return !v20;
      }
      if (v20)
      {
        sub_1C1516D9C();
        sub_1BFCD3F88(&qword_1EB8628D0, MEMORY[0x1E4FB7810]);
        swift_retain();
        swift_retain();
        if (sub_1C151E5CC())
        {
          char v55 = sub_1C00F1B28(*(void *)(v10 + *(void *)(*(void *)v10 + 120)), *(void *)(v20 + *(void *)(*(void *)v20 + 120)));
          swift_release();
          swift_release();
          return (v55 & 1) != 0;
        }
        goto LABEL_49;
      }
      return 0;
    }
    if (!v50) {
      return 0;
    }
    sub_1C1516D9C();
    sub_1BFCD3F88(&qword_1EB8628D0, MEMORY[0x1E4FB7810]);
    swift_retain();
    swift_retain();
    if (sub_1C151E5CC())
    {
      char v53 = sub_1C00F1B28(*(void *)(v46 + *(void *)(*(void *)v46 + 120)), *(void *)(v50 + *(void *)(*(void *)v50 + 120)));
      swift_release();
      swift_release();
      if ((v53 & 1) == 0) {
        return 0;
      }
      goto LABEL_51;
    }
LABEL_49:
    swift_release();
    swift_release();
    return 0;
  }
  if (result)
  {
    if (*(void *)(v5 + 16) != *(void *)(result + 16)) {
      return 0;
    }
    uint64_t v35 = *(void *)(v5 + 24);
    uint64_t v36 = *(void *)(result + 24);
    uint64_t v94 = v18;
    uint64_t v83 = v16;
    uint64_t v88 = v19;
    uint64_t v71 = v17;
    uint64_t v75 = v6;
    uint64_t v79 = v8;
    uint64_t v37 = v7;
    swift_retain();
    swift_retain();
    LOBYTE(v35) = sub_1C00F2DD4(v35, v36);
    swift_release();
    swift_release();
    uint64_t v17 = v71;
    uint64_t v6 = v75;
    uint64_t v7 = v37;
    uint64_t v16 = v83;
    uint64_t v19 = v88;
    uint64_t v8 = v79;
    uint64_t v18 = v94;
    if ((v35 & 1) == 0) {
      return 0;
    }
    goto LABEL_27;
  }
  return result;
}

void sub_1C1129950(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C1128A7C();
    unint64_t v7 = a3(a1, &type metadata for FeedGroupGroupingRulesOverrides.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void *assignWithCopy for FeedGroupGroupingRulesOverrides(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGroupGroupingRulesOverrides(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedGroupGroupingRulesOverrides(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupGroupingRulesOverrides()
{
  return &type metadata for FeedGroupGroupingRulesOverrides;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupGroupingRulesOverrides.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1129C74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupGroupingRulesOverrides.CodingKeys()
{
  return &type metadata for FeedGroupGroupingRulesOverrides.CodingKeys;
}

unint64_t sub_1C1129CB0()
{
  unint64_t result = qword_1EA1ABCF8;
  if (!qword_1EA1ABCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABCF8);
  }
  return result;
}

unint64_t sub_1C1129D08()
{
  unint64_t result = qword_1EB870178;
  if (!qword_1EB870178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870178);
  }
  return result;
}

unint64_t sub_1C1129D60()
{
  unint64_t result = qword_1EB870170;
  if (!qword_1EB870170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870170);
  }
  return result;
}

unint64_t sub_1C1129DB4(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 5:
      unint64_t result = 0x676E6970756F7267;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 7:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 8:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C1129EB0(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 5:
      unint64_t result = 0x676E6970756F7267;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 7:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 8:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C1129FAC(unsigned __int8 *a1, char *a2)
{
  return sub_1C1492C68(*a1, *a2);
}

uint64_t sub_1C1129FB8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C112A000()
{
  return sub_1C044B7E0();
}

uint64_t sub_1C112A008()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C112A04C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C112BE40();
  *a1 = result;
  return result;
}

unint64_t sub_1C112A07C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C1129DB4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C112A0A8()
{
  return sub_1C1129EB0(*v0);
}

uint64_t sub_1C112A0B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C112BE40();
  *a1 = result;
  return result;
}

uint64_t sub_1C112A0D8(uint64_t a1)
{
  unint64_t v2 = sub_1C112A7B0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C112A114(uint64_t a1)
{
  unint64_t v2 = sub_1C112A7B0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedGroupClusteringKnobsOverrides.minNumberOfItems.getter()
{
  return swift_retain();
}

uint64_t FeedGroupClusteringKnobsOverrides.maxNumberOfItems.getter()
{
  return swift_retain();
}

uint64_t FeedGroupClusteringKnobsOverrides.bundleArticleQuotas.getter()
{
  return swift_retain();
}

uint64_t FeedGroupClusteringKnobsOverrides.explicitSlotBundleArticleQuotas.getter()
{
  return swift_retain();
}

uint64_t FeedGroupClusteringKnobsOverrides.groupingRules.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[4];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  uint64_t v6 = v1[8];
  uint64_t v7 = v1[9];
  uint64_t v8 = v1[10];
  uint64_t v9 = v1[11];
  uint64_t v10 = v1[12];
  uint64_t v11 = v1[13];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  return sub_1C00C8EAC(v2);
}

uint64_t FeedGroupClusteringKnobsOverrides.minNumberOfItemsDepthTransform.getter()
{
  return swift_retain();
}

uint64_t FeedGroupClusteringKnobsOverrides.maxNumberOfItemsDepthTransform.getter()
{
  return swift_retain();
}

uint64_t FeedGroupClusteringKnobsOverrides.splittingConfiguration.getter()
{
  return swift_retain();
}

__n128 FeedGroupClusteringKnobsOverrides.init(minNumberOfItems:maxNumberOfItems:bundleArticleQuotas:explicitSlotBundleArticleQuotas:groupingRules:minNumberOfItemsDepthTransform:maxNumberOfItemsDepthTransform:splittingConfiguration:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  long long v9 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)a5;
  *(_OWORD *)(a9 + 48) = v9;
  long long v10 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(a9 + 80) = v10;
  __n128 result = *(__n128 *)(a5 + 64);
  *(__n128 *)(a9 + 96) = result;
  *(void *)(a9 + 112) = a6;
  *(void *)(a9 + 120) = a7;
  *(void *)(a9 + 128) = a8;
  return result;
}

uint64_t FeedGroupClusteringKnobsOverrides.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C112A754();
  uint64_t v6 = v5;
  uint64_t v50 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v23 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C112A7B0();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v33 = 0;
  uint64_t v34 = a1;
  sub_1BFDC6E38();
  LOBYTE(v39) = 0;
  sub_1BFCD3FD0(&qword_1EB8866D8, (void (*)(uint64_t))sub_1BFDC6E38);
  sub_1C15205FC();
  uint64_t v32 = v49;
  LOBYTE(v39) = 1;
  sub_1C15205FC();
  uint64_t v31 = v48;
  sub_1C00C8FD4();
  LOBYTE(v39) = 3;
  sub_1BFCD3FD0(&qword_1EB865338, (void (*)(uint64_t))sub_1C00C8FD4);
  sub_1C15205FC();
  uint64_t v13 = v46;
  uint64_t v14 = v50;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v8, v11, v6);
  if (v13)
  {
    uint64_t v23 = *(void (**)(char *, uint64_t))(v14 + 8);
    v23(v8, v6);
    uint64_t v24 = v13;
    uint64_t v47 = v13;
  }
  else
  {
    LOBYTE(v39) = 2;
    sub_1C15205FC();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v14 + 8);
    v23(v8, v6);
    uint64_t v24 = v47;
  }
  sub_1C112A804();
  LOBYTE(v39) = 4;
  sub_1BFCD3FD0(&qword_1EB862CC0, (void (*)(uint64_t))sub_1C112A804);
  sub_1C15205FC();
  uint64_t v50 = v45;
  LOBYTE(v38) = 5;
  sub_1C112AA7C();
  sub_1C15205FC();
  long long v30 = v39;
  long long v29 = v40;
  long long v28 = v41;
  long long v27 = v42;
  uint64_t v26 = v43;
  uint64_t v25 = v44;
  sub_1BFCD407C();
  LOBYTE(v37) = 6;
  sub_1BFCD3FD0(&qword_1EB862CB0, (void (*)(uint64_t))sub_1BFCD407C);
  sub_1C15205FC();
  uint64_t v15 = v38;
  LOBYTE(v36) = 7;
  sub_1C15205FC();
  uint64_t v16 = v37;
  sub_1C00C91E8();
  char v35 = 8;
  sub_1BFCD3FD0(&qword_1EB862C88, (void (*)(uint64_t))sub_1C00C91E8);
  sub_1C15205FC();
  v23(v11, v6);
  uint64_t v17 = v36;
  uint64_t v18 = v31;
  *(void *)a2 = v32;
  *(void *)(a2 + 8) = v18;
  uint64_t v19 = v50;
  *(void *)(a2 + 16) = v24;
  *(void *)(a2 + 24) = v19;
  long long v20 = v29;
  *(_OWORD *)(a2 + 32) = v30;
  *(_OWORD *)(a2 + 48) = v20;
  long long v21 = v27;
  *(_OWORD *)(a2 + 64) = v28;
  *(_OWORD *)(a2 + 80) = v21;
  uint64_t v22 = v25;
  *(void *)(a2 + 96) = v26;
  *(void *)(a2 + 104) = v22;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  *(void *)(a2 + 128) = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

void sub_1C112A754()
{
  if (!qword_1EB8634E0)
  {
    sub_1C112A7B0();
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8634E0);
    }
  }
}

unint64_t sub_1C112A7B0()
{
  unint64_t result = qword_1EB862CD8;
  if (!qword_1EB862CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862CD8);
  }
  return result;
}

void sub_1C112A804()
{
  if (!qword_1EB862CC8)
  {
    sub_1C112A91C();
    sub_1C112A9DC(&qword_1EB8632D0, (void (*)(void))sub_1C112A974);
    sub_1C112A9DC(&qword_1EB8632C0, (void (*)(void))sub_1C112A9A8);
    sub_1C112A9DC(&qword_1EB8632C8, (void (*)(void))sub_1C112AA48);
    unint64_t v0 = type metadata accessor for FeedGroupKnobsRuleValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB862CC8);
    }
  }
}

void sub_1C112A91C()
{
  if (!qword_1EB8632B8)
  {
    type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota();
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8632B8);
    }
  }
}

uint64_t sub_1C112A974()
{
  return sub_1BFCD3FD0(&qword_1EB862D10, (void (*)(uint64_t))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
}

uint64_t sub_1C112A9A8()
{
  return sub_1BFCD3FD0(&qword_1EB862D00, (void (*)(uint64_t))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
}

uint64_t sub_1C112A9DC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C112A91C();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C112AA48()
{
  return sub_1BFCD3FD0(&qword_1EB862D08, (void (*)(uint64_t))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
}

unint64_t sub_1C112AA7C()
{
  unint64_t result = qword_1EB8654C8;
  if (!qword_1EB8654C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8654C8);
  }
  return result;
}

uint64_t sub_1C112AAD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedGroupClusteringKnobsOverrides.init(from:)(a1, a2);
}

BOOL _s8NewsFeed0B29GroupClusteringKnobsOverridesV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v8 = a1[7];
  uint64_t v7 = a1[8];
  uint64_t v10 = a1[9];
  uint64_t v9 = a1[10];
  uint64_t v12 = a1[11];
  uint64_t v11 = a1[12];
  uint64_t v13 = a1[14];
  uint64_t v134 = a1[13];
  uint64_t v15 = a1[15];
  uint64_t v14 = a1[16];
  uint64_t v16 = *a2;
  uint64_t v17 = a2[1];
  uint64_t v137 = a2[2];
  uint64_t v139 = a1[2];
  uint64_t v135 = a2[3];
  uint64_t v136 = a1[3];
  uint64_t v18 = a2[4];
  uint64_t v19 = a2[5];
  uint64_t v20 = a2[7];
  uint64_t v21 = a2[8];
  uint64_t v22 = a2[9];
  uint64_t v23 = a2[10];
  uint64_t v24 = a2[11];
  uint64_t v133 = a2[12];
  uint64_t v132 = a2[13];
  uint64_t v25 = a2[14];
  uint64_t v26 = a2[15];
  uint64_t v27 = a2[16];
  if (*a1)
  {
    if (!v16) {
      return 0;
    }
    uint64_t v125 = a2[4];
    uint64_t v128 = a2[5];
    if (*(void *)(v2 + 16) != *(void *)(v16 + 16)) {
      return 0;
    }
    uint64_t v119 = a1[11];
    uint64_t v124 = a2[6];
    uint64_t v28 = *(void *)(v2 + 24);
    uint64_t v59 = a1[14];
    uint64_t v60 = a2[9];
    uint64_t v29 = a2[15];
    uint64_t v30 = a1[15];
    uint64_t v31 = a2[16];
    uint64_t v32 = a1[16];
    uint64_t v33 = *(void *)(v16 + 24);
    uint64_t v64 = a2[14];
    uint64_t v68 = a2[7];
    uint64_t v109 = a1[9];
    uint64_t v114 = a1[10];
    uint64_t v96 = a1[7];
    uint64_t v100 = a1[8];
    uint64_t v88 = a1[5];
    uint64_t v92 = a1[6];
    uint64_t v104 = a1[12];
    uint64_t v78 = a2[10];
    uint64_t v83 = a2[11];
    uint64_t v73 = a2[8];
    swift_retain();
    swift_retain();
    uint64_t v34 = v33;
    uint64_t v14 = v32;
    uint64_t v27 = v31;
    uint64_t v15 = v30;
    uint64_t v26 = v29;
    uint64_t v13 = v59;
    LOBYTE(v28) = sub_1C00F2DD4(v28, v34);
    swift_release();
    swift_release();
    uint64_t v20 = v68;
    uint64_t v21 = v73;
    uint64_t v22 = v60;
    uint64_t v25 = v64;
    uint64_t v23 = v78;
    uint64_t v24 = v83;
    uint64_t v11 = v104;
    uint64_t v6 = v88;
    uint64_t v5 = v92;
    uint64_t v8 = v96;
    uint64_t v7 = v100;
    uint64_t v10 = v109;
    uint64_t v9 = v114;
    uint64_t v12 = v119;
    uint64_t v18 = v125;
    uint64_t v19 = v128;
    if ((v28 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v124 = a2[6];
    if (v16) {
      return 0;
    }
  }
  if (v3)
  {
    if (!v17) {
      return 0;
    }
    uint64_t v126 = v18;
    uint64_t v129 = v19;
    if (*(void *)(v3 + 16) != *(void *)(v17 + 16)) {
      return 0;
    }
    uint64_t v36 = *(void *)(v3 + 24);
    uint64_t v37 = *(void *)(v17 + 24);
    uint64_t v65 = v25;
    uint64_t v69 = v20;
    uint64_t v115 = v9;
    uint64_t v120 = v12;
    uint64_t v105 = v11;
    uint64_t v110 = v10;
    uint64_t v97 = v8;
    uint64_t v101 = v7;
    uint64_t v89 = v6;
    uint64_t v93 = v5;
    uint64_t v79 = v23;
    uint64_t v84 = v24;
    uint64_t v38 = v22;
    uint64_t v74 = v21;
    swift_retain();
    swift_retain();
    LOBYTE(v36) = sub_1C00F2DD4(v36, v37);
    swift_release();
    swift_release();
    uint64_t v20 = v69;
    uint64_t v21 = v74;
    uint64_t v22 = v38;
    uint64_t v23 = v79;
    uint64_t v24 = v84;
    uint64_t v11 = v105;
    uint64_t v6 = v89;
    uint64_t v5 = v93;
    uint64_t v8 = v97;
    uint64_t v7 = v101;
    uint64_t v10 = v110;
    uint64_t v9 = v115;
    uint64_t v12 = v120;
    uint64_t v25 = v65;
    uint64_t v18 = v126;
    uint64_t v19 = v129;
    if ((v36 & 1) == 0) {
      return 0;
    }
  }
  else if (v17)
  {
    return 0;
  }
  if (v139)
  {
    if (!v137) {
      return 0;
    }
    uint64_t v66 = v25;
    uint64_t v70 = v20;
    uint64_t v116 = v9;
    uint64_t v121 = v12;
    uint64_t v106 = v11;
    uint64_t v111 = v10;
    uint64_t v98 = v8;
    uint64_t v102 = v7;
    uint64_t v90 = v6;
    uint64_t v94 = v5;
    uint64_t v80 = v23;
    uint64_t v85 = v24;
    uint64_t v61 = v22;
    uint64_t v75 = v21;
    uint64_t v39 = v19;
    uint64_t v40 = v18;
    swift_retain();
    uint64_t v41 = swift_retain();
    char v42 = sub_1C03BF1D8(v41, v137);
    swift_release();
    swift_release();
    uint64_t v18 = v40;
    uint64_t v19 = v39;
    uint64_t v20 = v70;
    uint64_t v21 = v75;
    uint64_t v22 = v61;
    uint64_t v25 = v66;
    uint64_t v23 = v80;
    uint64_t v24 = v85;
    uint64_t v11 = v106;
    uint64_t v6 = v90;
    uint64_t v5 = v94;
    uint64_t v8 = v98;
    uint64_t v7 = v102;
    uint64_t v10 = v111;
    uint64_t v9 = v116;
    uint64_t v12 = v121;
    if ((v42 & 1) == 0) {
      return 0;
    }
  }
  else if (v137)
  {
    return 0;
  }
  if (!v136)
  {
    if (!v135) {
      goto LABEL_25;
    }
    return 0;
  }
  if (!v135) {
    return 0;
  }
  uint64_t v127 = v18;
  uint64_t v130 = v19;
  uint64_t v71 = v20;
  uint64_t v76 = v21;
  uint64_t v62 = v22;
  uint64_t v81 = v23;
  uint64_t v86 = v24;
  uint64_t v107 = v11;
  uint64_t v91 = v6;
  uint64_t v95 = v5;
  uint64_t v99 = v8;
  uint64_t v103 = v7;
  uint64_t v112 = v10;
  uint64_t v117 = v9;
  uint64_t v122 = v12;
  uint64_t v43 = v25;
  uint64_t v44 = v26;
  uint64_t v45 = *(void *)(v136 + 16);
  uint64_t v46 = *(void *)(v135 + 16);
  swift_retain();
  swift_retain();
  if ((sub_1C00F21C0(v45, v46) & 1) == 0)
  {
    swift_release();
LABEL_30:
    swift_release();
    return 0;
  }
  char v47 = sub_1C00F1EF8(*(void *)(v136 + 24), *(void *)(v135 + 24));
  swift_release();
  swift_release();
  uint64_t v26 = v44;
  uint64_t v25 = v43;
  uint64_t v9 = v117;
  uint64_t v12 = v122;
  uint64_t v11 = v107;
  uint64_t v10 = v112;
  uint64_t v8 = v99;
  uint64_t v7 = v103;
  uint64_t v6 = v91;
  uint64_t v5 = v95;
  uint64_t v23 = v81;
  uint64_t v24 = v86;
  uint64_t v22 = v62;
  uint64_t v20 = v71;
  uint64_t v21 = v76;
  uint64_t v18 = v127;
  uint64_t v19 = v130;
  if ((v47 & 1) == 0) {
    return 0;
  }
LABEL_25:
  if (v4 == 1)
  {
    BOOL v48 = v18 == 1;
    uint64_t v49 = v18;
    uint64_t v50 = v124;
    if (!v48) {
      goto LABEL_33;
    }
  }
  else
  {
    uint64_t v141 = v4;
    uint64_t v142 = v6;
    uint64_t v143 = v5;
    uint64_t v144 = v8;
    uint64_t v145 = v7;
    uint64_t v146 = v10;
    uint64_t v147 = v9;
    uint64_t v148 = v12;
    uint64_t v149 = v11;
    uint64_t v150 = v134;
    uint64_t v118 = v9;
    uint64_t v123 = v12;
    uint64_t v108 = v11;
    uint64_t v113 = v10;
    uint64_t v51 = v7;
    uint64_t v52 = v5;
    uint64_t v53 = v6;
    if (v18 == 1)
    {
      uint64_t v72 = v20;
      uint64_t v77 = v21;
      uint64_t v82 = v23;
      uint64_t v87 = v24;
      uint64_t v63 = v22;
      uint64_t v131 = v19;
      uint64_t v54 = v8;
      uint64_t v49 = 1;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v19 = v131;
      uint64_t v20 = v72;
      uint64_t v21 = v77;
      uint64_t v22 = v63;
      uint64_t v23 = v82;
      uint64_t v24 = v87;
      uint64_t v12 = v123;
      uint64_t v9 = v118;
      uint64_t v10 = v113;
      uint64_t v7 = v51;
      uint64_t v8 = v54;
      uint64_t v5 = v52;
      uint64_t v6 = v53;
      uint64_t v11 = v108;
      uint64_t v50 = v124;
LABEL_33:
      uint64_t v141 = v4;
      uint64_t v142 = v6;
      uint64_t v143 = v5;
      uint64_t v144 = v8;
      uint64_t v145 = v7;
      uint64_t v146 = v10;
      uint64_t v147 = v9;
      uint64_t v148 = v12;
      uint64_t v149 = v11;
      uint64_t v150 = v134;
      uint64_t v151 = v49;
      uint64_t v152 = v19;
      uint64_t v153 = v50;
      uint64_t v154 = v20;
      uint64_t v155 = v21;
      uint64_t v156 = v22;
      uint64_t v157 = v23;
      uint64_t v158 = v24;
      uint64_t v159 = v133;
      uint64_t v160 = v132;
      sub_1C00C8EAC(v49);
      sub_1C112BE8C(&v141);
      return 0;
    }
    v140[0] = v18;
    v140[1] = v19;
    v140[2] = v124;
    v140[3] = v20;
    v140[4] = v21;
    v140[5] = v22;
    v140[6] = v23;
    v140[7] = v24;
    v140[8] = v133;
    v140[9] = v132;
    uint64_t v67 = v25;
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    char v138 = static FeedGroupGroupingRulesOverrides.== infix(_:_:)(&v141, v140);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1C00C65A8(v4);
    uint64_t v25 = v67;
    if ((v138 & 1) == 0) {
      return 0;
    }
  }
  if (v13)
  {
    if (!v25) {
      return 0;
    }
    uint64_t v55 = v25;
    sub_1C1516D9C();
    sub_1BFCD3FD0(&qword_1EB8628D0, MEMORY[0x1E4FB7810]);
    swift_retain();
    swift_retain();
    if ((sub_1C151E5CC() & 1) == 0) {
      goto LABEL_56;
    }
    char v56 = sub_1C00F1B28(*(void *)(v13 + *(void *)(*(void *)v13 + 120)), *(void *)(v55 + *(void *)(*(void *)v55 + 120)));
    swift_release();
    swift_release();
    if ((v56 & 1) == 0) {
      return 0;
    }
  }
  else if (v25)
  {
    return 0;
  }
  if (!v15)
  {
    if (v26) {
      return 0;
    }
    goto LABEL_48;
  }
  if (!v26) {
    return 0;
  }
  sub_1C1516D9C();
  sub_1BFCD3FD0(&qword_1EB8628D0, MEMORY[0x1E4FB7810]);
  swift_retain();
  swift_retain();
  if ((sub_1C151E5CC() & 1) == 0)
  {
LABEL_56:
    swift_release();
    goto LABEL_30;
  }
  char v57 = sub_1C00F1B28(*(void *)(v15 + *(void *)(*(void *)v15 + 120)), *(void *)(v26 + *(void *)(*(void *)v26 + 120)));
  swift_release();
  swift_release();
  if ((v57 & 1) == 0) {
    return 0;
  }
LABEL_48:
  if (!v14) {
    return !v27;
  }
  if (!v27) {
    return 0;
  }
  sub_1C1516D2C();
  sub_1BFCD3FD0(&qword_1EB8628A8, MEMORY[0x1E4FB77E8]);
  swift_retain();
  swift_retain();
  if ((sub_1C151E5CC() & 1) == 0) {
    goto LABEL_56;
  }
  char v58 = sub_1C00F1AE0(*(void *)(v14 + *(void *)(*(void *)v14 + 120)), *(void *)(v27 + *(void *)(*(void *)v27 + 120)));
  swift_release();
  swift_release();
  return (v58 & 1) != 0;
}

uint64_t destroy for FeedGroupClusteringKnobsOverrides(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(a1 + 32) != 1)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for FeedGroupClusteringKnobsOverrides(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v5;
  uint64_t v7 = a2 + 4;
  uint64_t v6 = a2[4];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v6 == 1)
  {
    long long v8 = v7[3];
    *(_OWORD *)(a1 + 64) = v7[2];
    *(_OWORD *)(a1 + 80) = v8;
    *(_OWORD *)(a1 + 96) = v7[4];
    long long v9 = v7[1];
    *(_OWORD *)(a1 + 32) = *v7;
    *(_OWORD *)(a1 + 48) = v9;
  }
  else
  {
    uint64_t v10 = a2[5];
    uint64_t v11 = a2[6];
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v10;
    uint64_t v12 = a2[7];
    uint64_t v13 = a2[8];
    *(void *)(a1 + 48) = v11;
    *(void *)(a1 + 56) = v12;
    uint64_t v14 = a2[9];
    uint64_t v15 = a2[10];
    *(void *)(a1 + 64) = v13;
    *(void *)(a1 + 72) = v14;
    uint64_t v17 = a2[11];
    uint64_t v16 = a2[12];
    *(void *)(a1 + 80) = v15;
    *(void *)(a1 + 88) = v17;
    uint64_t v20 = a2[13];
    *(void *)(a1 + 96) = v16;
    *(void *)(a1 + 104) = v20;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  uint64_t v18 = a2[15];
  *(void *)(a1 + 112) = a2[14];
  *(void *)(a1 + 120) = v18;
  *(void *)(a1 + 128) = a2[16];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FeedGroupClusteringKnobsOverrides(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v4 = (_OWORD *)(a1 + 32);
  uint64_t v6 = (_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) == 1)
  {
    if (v5 == 1)
    {
      *uint64_t v4 = *v6;
      long long v7 = *(_OWORD *)(a2 + 48);
      long long v8 = *(_OWORD *)(a2 + 64);
      long long v9 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v9;
      *(_OWORD *)(a1 + 48) = v7;
      *(_OWORD *)(a1 + 64) = v8;
    }
    else
    {
      *(void *)(a1 + 32) = v5;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
    }
  }
  else if (v5 == 1)
  {
    sub_1C112B994(a1 + 32);
    *uint64_t v4 = *v6;
    long long v10 = *(_OWORD *)(a2 + 96);
    long long v12 = *(_OWORD *)(a2 + 48);
    long long v11 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v10;
    *(_OWORD *)(a1 + 48) = v12;
    *(_OWORD *)(a1 + 64) = v11;
  }
  else
  {
    *(void *)(a1 + 32) = v5;
    swift_retain();
    swift_release();
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_retain();
    swift_release();
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_retain();
    swift_release();
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_retain();
    swift_release();
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_retain();
    swift_release();
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_retain();
    swift_release();
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_retain();
    swift_release();
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_retain();
    swift_release();
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_retain();
    swift_release();
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_retain();
    swift_release();
  }
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_retain();
  swift_release();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C112B994(uint64_t a1)
{
  return a1;
}

void *assignWithTake for FeedGroupClusteringKnobsOverrides(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  uint64_t v4 = a2[4];
  if (a1[4] != 1)
  {
    if (v4 != 1)
    {
      a1[4] = v4;
      swift_release();
      a1[5] = a2[5];
      swift_release();
      a1[6] = a2[6];
      swift_release();
      a1[7] = a2[7];
      swift_release();
      a1[8] = a2[8];
      swift_release();
      a1[9] = a2[9];
      swift_release();
      a1[10] = a2[10];
      swift_release();
      a1[11] = a2[11];
      swift_release();
      a1[12] = a2[12];
      swift_release();
      a1[13] = a2[13];
      swift_release();
      goto LABEL_6;
    }
    sub_1C112B994((uint64_t)(a1 + 4));
  }
  long long v5 = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 5) = v5;
  *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
  long long v6 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 3) = v6;
LABEL_6:
  a1[14] = a2[14];
  swift_release();
  a1[15] = a2[15];
  swift_release();
  a1[16] = a2[16];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGroupClusteringKnobsOverrides(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 136)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedGroupClusteringKnobsOverrides(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 136) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupClusteringKnobsOverrides.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C112BD00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupClusteringKnobsOverrides.CodingKeys()
{
  return &type metadata for FeedGroupClusteringKnobsOverrides.CodingKeys;
}

unint64_t sub_1C112BD3C()
{
  unint64_t result = qword_1EA1ABD00;
  if (!qword_1EA1ABD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABD00);
  }
  return result;
}

unint64_t sub_1C112BD94()
{
  unint64_t result = qword_1EB862CE8;
  if (!qword_1EB862CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862CE8);
  }
  return result;
}

unint64_t sub_1C112BDEC()
{
  unint64_t result = qword_1EB862CE0;
  if (!qword_1EB862CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862CE0);
  }
  return result;
}

uint64_t sub_1C112BE40()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t *sub_1C112BE8C(uint64_t *a1)
{
  uint64_t v3 = a1[10];
  sub_1C00C65A8(*a1);
  sub_1C00C65A8(v3);
  return a1;
}

uint64_t FeedCluster.tag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FeedCluster.headlines.getter()
{
  return swift_bridgeObjectRetain();
}

id FeedCluster.clusteringRules.getter()
{
  return *(id *)(v0 + 16);
}

id FeedCluster.replacing(headlines:titleModification:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  int v6 = *(unsigned __int8 *)(a2 + 16);
  id v7 = *(id *)v3;
  id v13 = *(id *)(v3 + 16);
  if (v6 == 255)
  {
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v8 = *(void *)a2;
    uint64_t v9 = *(void *)(a2 + 8);
    swift_bridgeObjectRetain();
    long long v10 = (void *)sub_1C151E5EC();
    if (v6) {
      id v11 = objc_msgSend(v7, sel_setTitleDisplaySuffixOverride_, v10);
    }
    else {
      id v11 = objc_msgSend(v7, sel_setTitleDisplayPrefixOverride_, v10);
    }
    id v7 = v11;

    sub_1C0F2D1B8(v8, v9, v6);
  }
  *a3 = v7;
  a3[1] = a1;
  a3[2] = v13;
  swift_bridgeObjectRetain();
  return v13;
}

ValueMetadata *type metadata accessor for FeedCluster()
{
  return &type metadata for FeedCluster;
}

ValueMetadata *type metadata accessor for FeedCluster.TitleModification()
{
  return &type metadata for FeedCluster.TitleModification;
}

unint64_t sub_1C112C074()
{
  unint64_t result = qword_1EA1ABD08;
  if (!qword_1EA1ABD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABD08);
  }
  return result;
}

id sub_1C112C0C8(char a1)
{
  switch(a1)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_4;
    case 3:
      goto LABEL_6;
    case 4:
      goto LABEL_8;
    default:
      uint64_t v1 = (void *)sub_1C151E5EC();
      id v2 = objc_msgSend(self, sel_systemImageNamed_, v1);

      if (v2) {
        return v2;
      }
      __break(1u);
LABEL_4:
      uint64_t v3 = (void *)sub_1C151E5EC();
      id v2 = objc_msgSend(self, sel_systemImageNamed_, v3);

      if (!v2)
      {
        __break(1u);
LABEL_6:
        unsigned int v4 = (void *)sub_1C151E5EC();
        id v2 = objc_msgSend(self, sel_systemImageNamed_, v4);

        if (!v2)
        {
          __break(1u);
LABEL_8:
          uint64_t v5 = (void *)sub_1C151E5EC();
          id v2 = objc_msgSend(self, sel_systemImageNamed_, v5);

          if (!v2)
          {
            __break(1u);
LABEL_10:
            int v6 = (void *)sub_1C151E5EC();
            id v2 = objc_msgSend(self, sel_systemImageNamed_, v6);

            if (!v2)
            {
              __break(1u);
              JUMPOUT(0x1C112C2B0);
            }
          }
        }
      }
      return v2;
  }
}

id sub_1C112C2C4(char a1)
{
  id v1 = objc_msgSend(self, *off_1E6418748[a1]);
  return v1;
}

uint64_t sub_1C112C318@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1C112C5D8(*a1);
  *a2 = result;
  return result;
}

void sub_1C112C344(void *a1@<X8>)
{
  *a1 = *v1 - 2;
}

uint64_t sub_1C112C354()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C112C39C()
{
  return sub_1C1520DCC();
}

uint64_t sub_1C112C3CC()
{
  return sub_1C1520E0C();
}

void sub_1C112C410(void *a1@<X8>)
{
  *a1 = &unk_1F1B6C410;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatTestCaseResultSeverity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C112C4ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTestCaseResultSeverity()
{
  return &type metadata for DebugFormatTestCaseResultSeverity;
}

unint64_t sub_1C112C528()
{
  unint64_t result = qword_1EA1ABD10;
  if (!qword_1EA1ABD10)
  {
    sub_1C112C580();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABD10);
  }
  return result;
}

void sub_1C112C580()
{
  if (!qword_1EA1ABD18)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ABD18);
    }
  }
}

uint64_t sub_1C112C5D8(uint64_t a1)
{
  if ((unint64_t)(a1 + 2) >= 5) {
    return 5;
  }
  else {
    return a1 + 2;
  }
}

uint64_t *sub_1C112C5EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    id v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C151928C();
    long long v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
    id v11 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
    v10(&v7[v11[5]], &v8[v11[5]], v9);
    uint64_t v12 = v11[6];
    id v13 = &v7[v12];
    uint64_t v14 = &v8[v12];
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)id v13 = *(void *)v14;
    *((void *)v13 + 1) = v15;
    v7[v11[7]] = v8[v11[7]];
    swift_bridgeObjectRetain();
  }
  return v5;
}

uint64_t type metadata accessor for DebugFormatFileDirectoryMetadata(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA1ABD30);
}

uint64_t sub_1C112C73C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C151928C();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v6(v4 + *(int *)(v7 + 20), v5);
  return swift_bridgeObjectRelease();
}

void *sub_1C112C7FC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C151928C();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  uint64_t v9 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v8(&v5[v9[5]], &v6[v9[5]], v7);
  uint64_t v10 = v9[6];
  id v11 = &v5[v10];
  uint64_t v12 = &v6[v10];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)id v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  v5[v9[7]] = v6[v9[7]];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C112C8E0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151928C();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  id v11 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v10(&v7[v11[5]], &v8[v11[5]], v9);
  uint64_t v12 = v11[6];
  uint64_t v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v11[7]] = v8[v11[7]];
  return a1;
}

void *sub_1C112C9E8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C151928C();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
  v8(v5, v6, v7);
  uint64_t v9 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v8(&v5[v9[5]], &v6[v9[5]], v7);
  *(_OWORD *)&v5[v9[6]] = *(_OWORD *)&v6[v9[6]];
  v5[v9[7]] = v6[v9[7]];
  return a1;
}

void *sub_1C112CAB8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151928C();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  id v11 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v10(&v7[v11[5]], &v8[v11[5]], v9);
  uint64_t v12 = v11[6];
  uint64_t v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v7[v11[7]] = v8[v11[7]];
  return a1;
}

uint64_t sub_1C112CBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C112CBBC);
}

uint64_t sub_1C112CBBC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    id v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C112CC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C112CC80);
}

void *sub_1C112CC80(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatFileDirectory(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA1ABD20);
}

uint64_t sub_1C112CD48()
{
  uint64_t result = type metadata accessor for DebugFormatFileDirectoryMetadata(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1C112CDE4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C151928C();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = a3[7];
    id v11 = (void *)((char *)a1 + v9);
    uint64_t v12 = (void *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    void *v11 = *v12;
    v11[1] = v13;
    *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C112CEEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)(a1 + v8);
  id v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C112CFA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1C112D074(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_1C112D120(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1C112D1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C112D1F4);
}

uint64_t sub_1C112D1F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C112D2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C112D2CC);
}

uint64_t sub_1C112D2CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C151928C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C112D38C()
{
  uint64_t result = sub_1C151928C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C112D42C(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  void v12[3] = a4;
  sub_1C112F7B4(0, &qword_1EA1ABDE0, (uint64_t (*)(void))sub_1C112F760, (uint64_t)&type metadata for DebugFormatFile.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C112F760();
  sub_1C1520F0C();
  char v16 = 0;
  uint64_t v10 = v13;
  sub_1C15207CC();
  if (!v10)
  {
    char v15 = 1;
    sub_1C15207EC();
    char v14 = 2;
    sub_1C15207DC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C112D608(void *a1)
{
  int v3 = v1;
  sub_1C112F7B4(0, &qword_1EA1ABD68, (uint64_t (*)(void))sub_1C112E9DC, (uint64_t)&type metadata for DebugFormatFileDirectory.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C112E9DC();
  sub_1C1520F0C();
  uint64_t v12 = *v3;
  v11[15] = 0;
  sub_1C112EA30();
  sub_1C112EB34(&qword_1EA1ABD70, (void (*)(void))sub_1C0B983E8);
  sub_1C152080C();
  if (!v2)
  {
    type metadata accessor for DebugFormatFileDirectory(0);
    v11[14] = 1;
    type metadata accessor for DebugFormatFileDirectoryMetadata(0);
    sub_1C112EA88(&qword_1EA1ABD78, (void (*)(uint64_t))type metadata accessor for DebugFormatFileDirectoryMetadata);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C112D848@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v23 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  MEMORY[0x1F4188790](v23);
  uint64_t v22 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C112F7B4(0, &qword_1EA1ABD40, (uint64_t (*)(void))sub_1C112E9DC, (uint64_t)&type metadata for DebugFormatFileDirectory.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v24 = v5;
  uint64_t v21 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for DebugFormatFileDirectory(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C112E9DC();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v19 = a1;
  uint64_t v11 = v10;
  uint64_t v13 = v21;
  uint64_t v12 = v22;
  sub_1C112EA30();
  char v26 = 0;
  sub_1C112EB34(&qword_1EA1ABD58, (void (*)(void))sub_1C0B980E8);
  uint64_t v14 = v24;
  sub_1C15206EC();
  uint64_t v18 = v11;
  void *v11 = v27;
  char v25 = 1;
  sub_1C112EA88(&qword_1EA1ABD60, (void (*)(uint64_t))type metadata accessor for DebugFormatFileDirectoryMetadata);
  uint64_t v15 = (uint64_t)v12;
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v14);
  uint64_t v16 = (uint64_t)v18;
  sub_1C112EAD0(v15, (uint64_t)v18 + *(int *)(v8 + 20));
  sub_1C112EBF4(v16, v20, type metadata accessor for DebugFormatFileDirectory);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return sub_1C112EC5C(v16, type metadata accessor for DebugFormatFileDirectory);
}

uint64_t sub_1C112DBE0(void *a1)
{
  uint64_t v3 = v1;
  sub_1C112F7B4(0, &qword_1EA1ABD90, (uint64_t (*)(void))sub_1C112EBA0, (uint64_t)&type metadata for DebugFormatFileDirectoryMetadata.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C112EBA0();
  sub_1C1520F0C();
  char v17 = 0;
  sub_1C151928C();
  sub_1C112EA88(&qword_1EB85C8B0, MEMORY[0x1E4FAB0A8]);
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
    char v16 = 1;
    sub_1C152080C();
    char v15 = 2;
    sub_1C15207CC();
    if ((*(unsigned char *)(v3 + *(int *)(v10 + 28)) & 1) == 0)
    {
      char v14 = 3;
      char v13 = 0;
      sub_1C112ECBC();
      sub_1C1520BAC();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C112DE58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v37 = sub_1C151928C();
  uint64_t v34 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v36 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v38 = (char *)&v30 - v5;
  sub_1C112F7B4(0, &qword_1EA1ABD80, (uint64_t (*)(void))sub_1C112EBA0, (uint64_t)&type metadata for DebugFormatFileDirectoryMetadata.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v35 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C112EBA0();
  uint64_t v13 = (uint64_t)v39;
  sub_1C1520EBC();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v14 = v36;
  uint64_t v32 = v10;
  uint64_t v39 = a1;
  char v45 = 0;
  sub_1C112EA88(&qword_1EB8714E8, MEMORY[0x1E4FAB0A8]);
  uint64_t v15 = v37;
  char v16 = v9;
  sub_1C15206EC();
  uint64_t v17 = v7;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  uint64_t v31 = v12;
  uint64_t v20 = v19;
  v19(v12, v38, v15);
  char v44 = 1;
  sub_1C15206EC();
  uint64_t v21 = v32;
  v20(&v31[*(int *)(v32 + 20)], v14, v15);
  char v43 = 2;
  uint64_t v22 = sub_1C152069C();
  uint64_t v24 = *(int *)(v21 + 24);
  uint64_t v25 = (uint64_t)v31;
  char v26 = (uint64_t *)&v31[v24];
  *char v26 = v22;
  v26[1] = v23;
  char v42 = 3;
  if (sub_1C152071C())
  {
    char v41 = 3;
    sub_1C15206EC();
    uint64_t v27 = v33;
    uint64_t v28 = v16;
    char v29 = v40;
  }
  else
  {
    uint64_t v28 = v16;
    char v29 = 1;
    uint64_t v27 = v33;
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v28, v17);
  *(unsigned char *)(v25 + *(int *)(v32 + 28)) = v29;
  sub_1C112EBF4(v25, v27, type metadata accessor for DebugFormatFileDirectoryMetadata);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return sub_1C112EC5C(v25, type metadata accessor for DebugFormatFileDirectoryMetadata);
}

uint64_t sub_1C112E37C()
{
  unint64_t v1 = 0x6D617473656D6974;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1752457584;
  }
}

uint64_t sub_1C112E3D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C112F524(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C112E400(uint64_t a1)
{
  unint64_t v2 = sub_1C112F760();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C112E43C(uint64_t a1)
{
  unint64_t v2 = sub_1C112F760();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1C112E478(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v7 = sub_1C112F2C8(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(double *)(a2 + 16) = v7;
    *(unsigned char *)(a2 + 24) = v6 & 1;
  }
}

uint64_t sub_1C112E4B0(void *a1)
{
  return sub_1C112D42C(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1C112E4D4(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a1 + 24);
  double v4 = *(double *)(a2 + 16);
  int v5 = *(unsigned __int8 *)(a2 + 24);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v2 != v4) {
      return 0;
    }
    return v3 ^ v5 ^ 1u;
  }
  char v7 = sub_1C1520A9C();
  uint64_t result = 0;
  if ((v7 & 1) != 0 && v2 == v4) {
    return v3 ^ v5 ^ 1u;
  }
  return result;
}

uint64_t sub_1C112E560()
{
  if (*v0) {
    return 0x617461646174656DLL;
  }
  else {
    return 0x73656C6966;
  }
}

uint64_t sub_1C112E598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C112F674(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C112E5C0(uint64_t a1)
{
  unint64_t v2 = sub_1C112E9DC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C112E5FC(uint64_t a1)
{
  unint64_t v2 = sub_1C112E9DC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C112E638@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C112D848(a1, a2);
}

uint64_t sub_1C112E650(void *a1)
{
  return sub_1C112D608(a1);
}

unint64_t sub_1C112E668()
{
  unint64_t result = 0x6556726576726573;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x655674616D726F66;
      break;
    case 2:
      unint64_t result = 0x636E617242746967;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C112E708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C112F81C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C112E730(uint64_t a1)
{
  unint64_t v2 = sub_1C112EBA0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C112E76C(uint64_t a1)
{
  unint64_t v2 = sub_1C112EBA0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C112E7A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C112DE58(a1, a2);
}

uint64_t sub_1C112E7C0(void *a1)
{
  return sub_1C112DBE0(a1);
}

uint64_t sub_1C112E7DC()
{
  return 0;
}

unint64_t sub_1C112E9DC()
{
  unint64_t result = qword_1EA1ABD48;
  if (!qword_1EA1ABD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABD48);
  }
  return result;
}

void sub_1C112EA30()
{
  if (!qword_1EA1ABD50)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ABD50);
    }
  }
}

uint64_t sub_1C112EA88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C112EAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C112EB34(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C112EA30();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C112EBA0()
{
  unint64_t result = qword_1EA1ABD88;
  if (!qword_1EA1ABD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABD88);
  }
  return result;
}

uint64_t sub_1C112EBF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C112EC5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1C112ECBC()
{
  unint64_t result = qword_1EA1ABD98;
  if (!qword_1EA1ABD98)
  {
    sub_1C112F7B4(255, &qword_1EA1ABD90, (uint64_t (*)(void))sub_1C112EBA0, (uint64_t)&type metadata for DebugFormatFileDirectoryMetadata.CodingKeys, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABD98);
  }
  return result;
}

uint64_t sub_1C112ED4C(uint64_t a1, uint64_t a2)
{
  if ((sub_1C151922C() & 1) != 0
    && (uint64_t v4 = type metadata accessor for DebugFormatFileDirectoryMetadata(0), (sub_1C151922C() & 1) != 0))
  {
    uint64_t v5 = *(int *)(v4 + 24);
    uint64_t v6 = *(void *)(a1 + v5);
    uint64_t v7 = *(void *)(a1 + v5 + 8);
    uint64_t v8 = (void *)(a2 + v5);
    BOOL v9 = v6 == *v8 && v7 == v8[1];
    if (v9 || (char v10 = sub_1C1520A9C(), v11 = 0, (v10 & 1) != 0)) {
      char v11 = *(unsigned char *)(a1 + *(int *)(v4 + 28)) ^ *(unsigned char *)(a2 + *(int *)(v4 + 28)) ^ 1;
    }
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatFileDirectoryMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C112EEC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatFileDirectoryMetadata.CodingKeys()
{
  return &type metadata for DebugFormatFileDirectoryMetadata.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatFileDirectory.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C112EFC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatFileDirectory.CodingKeys()
{
  return &type metadata for DebugFormatFileDirectory.CodingKeys;
}

uint64_t assignWithCopy for DebugFormatFile(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for DebugFormatFile(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatFile()
{
  return &type metadata for DebugFormatFile;
}

unint64_t sub_1C112F0BC()
{
  unint64_t result = qword_1EA1ABDA0;
  if (!qword_1EA1ABDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABDA0);
  }
  return result;
}

unint64_t sub_1C112F114()
{
  unint64_t result = qword_1EA1ABDA8;
  if (!qword_1EA1ABDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABDA8);
  }
  return result;
}

unint64_t sub_1C112F16C()
{
  unint64_t result = qword_1EA1ABDB0;
  if (!qword_1EA1ABDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABDB0);
  }
  return result;
}

unint64_t sub_1C112F1C4()
{
  unint64_t result = qword_1EA1ABDB8;
  if (!qword_1EA1ABDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABDB8);
  }
  return result;
}

unint64_t sub_1C112F21C()
{
  unint64_t result = qword_1EA1ABDC0;
  if (!qword_1EA1ABDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABDC0);
  }
  return result;
}

unint64_t sub_1C112F274()
{
  unint64_t result = qword_1EA1ABDC8;
  if (!qword_1EA1ABDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABDC8);
  }
  return result;
}

double sub_1C112F2C8(void *a1)
{
  sub_1C112F7B4(0, &qword_1EA1ABDD0, (uint64_t (*)(void))sub_1C112F760, (uint64_t)&type metadata for DebugFormatFile.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v11[-v7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C112F760();
  sub_1C1520EBC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v11[15] = 0;
    sub_1C152069C();
    v11[14] = 1;
    swift_bridgeObjectRetain();
    sub_1C15206BC();
    double v2 = v10;
    v11[13] = 2;
    sub_1C15206AC();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1C112F524(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1752457584 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C1635B60)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C112F674(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C6966 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1C112F760()
{
  unint64_t result = qword_1EA1ABDD8;
  if (!qword_1EA1ABDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABDD8);
  }
  return result;
}

void sub_1C112F7B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C112F81C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6556726576726573 && a2 == 0xED00006E6F697372;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x655674616D726F66 && a2 == 0xED00006E6F697372 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x636E617242746967 && a2 == 0xE900000000000068 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C1635B40)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unsigned char *storeEnumTagSinglePayload for DebugFormatFile.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C112FAECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatFile.CodingKeys()
{
  return &type metadata for DebugFormatFile.CodingKeys;
}

unint64_t sub_1C112FB28()
{
  unint64_t result = qword_1EA1ABDE8;
  if (!qword_1EA1ABDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABDE8);
  }
  return result;
}

unint64_t sub_1C112FB80()
{
  unint64_t result = qword_1EA1ABDF0;
  if (!qword_1EA1ABDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABDF0);
  }
  return result;
}

unint64_t sub_1C112FBD8()
{
  unint64_t result = qword_1EA1ABDF8;
  if (!qword_1EA1ABDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABDF8);
  }
  return result;
}

NewsFeed::FeedGroupMutingExemption_optional __swiftcall FeedGroupMutingExemption.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t FeedGroupMutingExemption.rawValue.getter()
{
  if (*v0) {
    return 0x74706D657865;
  }
  else {
    return 0x706D657845746F6ELL;
  }
}

uint64_t sub_1C112FCCC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C112FD50()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C112FDC0()
{
  return sub_1C1520E0C();
}

NewsFeed::FeedGroupMutingExemption_optional sub_1C112FE40(Swift::String *a1)
{
  return FeedGroupMutingExemption.init(rawValue:)(*a1);
}

void sub_1C112FE4C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x706D657845746F6ELL;
  if (*v1) {
    uint64_t v2 = 0x74706D657865;
  }
  unint64_t v3 = 0xE900000000000074;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C112FE8C(char *a1, char *a2)
{
  return sub_1C14938C8(*a1, *a2);
}

uint64_t sub_1C112FE98()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C112FEF8()
{
  return sub_1C151EAEC();
}

uint64_t FeedGroupMutingExemption.isExempt.getter()
{
  return *v0;
}

unint64_t sub_1C112FF54()
{
  unint64_t result = qword_1EA1ABE00;
  if (!qword_1EA1ABE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABE00);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupMutingExemption(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1130074);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unint64_t sub_1C113009C()
{
  unint64_t result = qword_1EB86F718;
  if (!qword_1EB86F718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F718);
  }
  return result;
}

uint64_t static FormatCodingZeroStrategy.defaultValue.getter()
{
  return sub_1C152044C();
}

BOOL static FormatCodingZeroStrategy.shouldEncode(wrappedValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C152044C();
  char v6 = sub_1C151E5CC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a2);
  return (v6 & 1) == 0;
}

uint64_t sub_1C1130208()
{
  return static FormatCodingZeroStrategy.defaultValue.getter();
}

BOOL sub_1C1130218(uint64_t a1, uint64_t a2)
{
  return static FormatCodingZeroStrategy.shouldEncode(wrappedValue:)(a1, *(void *)(a2 + 16));
}

uint64_t static FormatCodingOneStrategy.defaultValue.getter()
{
  return sub_1C1130280();
}

BOOL static FormatCodingOneStrategy.shouldEncode(wrappedValue:)(uint64_t a1, uint64_t a2)
{
  return sub_1C1130398(a1, a2);
}

uint64_t sub_1C1130250()
{
  return static FormatCodingOneStrategy.defaultValue.getter();
}

BOOL sub_1C1130260(uint64_t a1, uint64_t a2)
{
  return static FormatCodingOneStrategy.shouldEncode(wrappedValue:)(a1, *(void *)(a2 + 16));
}

uint64_t static FormatCodingSixteenStrategy.defaultValue.getter()
{
  return sub_1C1130280();
}

uint64_t sub_1C1130280()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  sub_1C1520CBC();
  return sub_1C1520A6C();
}

BOOL static FormatCodingSixteenStrategy.shouldEncode(wrappedValue:)(uint64_t a1, uint64_t a2)
{
  return sub_1C1130398(a1, a2);
}

BOOL sub_1C1130398(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  __n128 v4 = MEMORY[0x1F4188790](a1);
  char v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8(v7, v4);
  char v9 = sub_1C151E5CC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a2);
  return (v9 & 1) == 0;
}

uint64_t sub_1C1130490()
{
  return static FormatCodingSixteenStrategy.defaultValue.getter();
}

BOOL sub_1C11304A0(uint64_t a1, uint64_t a2)
{
  return static FormatCodingSixteenStrategy.shouldEncode(wrappedValue:)(a1, *(void *)(a2 + 16));
}

uint64_t static FormatCodingMaxIntStrategy.defaultValue.getter()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

BOOL static FormatCodingMaxIntStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  return a1 != 0x7FFFFFFFFFFFFFFFLL;
}

void sub_1C11304C8(void *a1@<X8>)
{
  *a1 = 0x7FFFFFFFFFFFFFFFLL;
}

BOOL sub_1C11304D4(void *a1)
{
  return *a1 != 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t static FormatCodingMaxInt32Strategy.defaultValue.getter()
{
  return 0x7FFFFFFFLL;
}

BOOL static FormatCodingMaxInt32Strategy.shouldEncode(wrappedValue:)(int a1)
{
  return a1 != 0x7FFFFFFF;
}

uint64_t sub_1C1130500(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C113053C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C1130578(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C11305B4()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1C11305C0()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1C11305CC()
{
  return MEMORY[0x1E4FBC180];
}

uint64_t sub_1C11305D8()
{
  return MEMORY[0x1E4FBC158];
}

void sub_1C11305E4(_DWORD *a1@<X8>)
{
  *a1 = 0x7FFFFFFF;
}

BOOL sub_1C11305F0(_DWORD *a1)
{
  return *a1 != 0x7FFFFFFF;
}

uint64_t type metadata accessor for FormatCodingZeroStrategy()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for FormatCodingOneStrategy()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for FormatCodingSixteenStrategy()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for FormatCodingMaxIntStrategy()
{
  return &type metadata for FormatCodingMaxIntStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingMaxInt32Strategy()
{
  return &type metadata for FormatCodingMaxInt32Strategy;
}

uint64_t FeedServiceFetchResult.emittedGroups.getter(unint64_t a1)
{
  uint64_t v1 = sub_1BFD009F8(a1);
  swift_retain();
  uint64_t v2 = sub_1C0401ADC(v1);
  swift_release();
  return v2;
}

unint64_t sub_1C11306E4(uint64_t *a1)
{
  type metadata accessor for FeedServiceFetchResult.Internal();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      type metadata accessor for FeedCursor();
      uint64_t v4 = *(uint64_t *)((char *)a1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      type metadata accessor for FeedCursorContainer();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v6 = swift_allocBox();
      uint64_t v8 = v7;
      uint64_t v9 = *(int *)(TupleTypeMetadata2 + 48);
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v7, a1, AssociatedTypeWitness);
      *(void *)(v8 + v9) = FeedCursorContainer.init(cursor:)(v4);
      return v6 | 0x4000000000000000;
    }
    else
    {
      uint64_t v17 = *a1;
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = FeedCursorContainer.init(cursor:)(v17);
      return v18 | 0x8000000000000000;
    }
  }
  else
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t v11 = swift_getAssociatedTypeWitness();
    type metadata accessor for FeedCursor();
    uint64_t v12 = *(uint64_t *)((char *)a1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
    type metadata accessor for FeedCursorContainer();
    uint64_t v13 = swift_getTupleTypeMetadata2();
    uint64_t v10 = swift_allocBox();
    uint64_t v15 = v14;
    uint64_t v16 = *(int *)(v13 + 48);
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 32))(v14, a1, v11);
    *(void *)(v15 + v16) = FeedCursorContainer.init(cursor:)(v12);
  }
  return v10;
}

uint64_t sub_1C11309F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t *sub_1C1130A2C(uint64_t *a1, uint64_t *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8) {
    unint64_t v7 = 8;
  }
  else {
    unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  int v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x1000F8) != 0 || (v7 | 1) > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
  }
  else
  {
    unsigned int v11 = *((unsigned __int8 *)a2 + v7);
    if ((v7 & 0xFFFFFFF8) != 0 && v11 >= 3) {
      unsigned int v11 = *(_DWORD *)a2 + 3;
    }
    if (v11 == 2)
    {
      *a1 = *a2;
      *((unsigned char *)a1 + v7) = 2;
    }
    else if (v11 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)a1 + v7) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)a1 + v7) = 0;
    }
  }
  swift_retain();
  return a1;
}

_DWORD *sub_1C1130C24(_DWORD *a1, _DWORD *a2)
{
  if (a1 != a2)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v6 = *(void *)(v5 + 64);
    if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8) {
      unint64_t v7 = 8;
    }
    else {
      unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    unsigned int v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 3 && (v7 & 0xFFFFFFF8) != 0) {
      unsigned int v8 = *a1 + 3;
    }
    if (v8 <= 1) {
      (*(void (**)(_DWORD *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    }
    swift_release();
    unsigned int v10 = *((unsigned __int8 *)a2 + v7);
    if ((v7 & 0xFFFFFFF8) != 0 && v10 >= 3) {
      unsigned int v10 = *a2 + 3;
    }
    if (v10 == 2)
    {
      *(void *)a1 = *(void *)a2;
    }
    else if (v10 == 1)
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      LOBYTE(v10) = 1;
    }
    else
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      LOBYTE(v10) = 0;
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
    *((unsigned char *)a1 + v7) = v10;
    swift_retain();
  }
  return a1;
}

void *sub_1C1130E48(void *a1, _DWORD *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (((v5 + 7) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8) {
    unint64_t v6 = 8;
  }
  else {
    unint64_t v6 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unsigned int v7 = *((unsigned __int8 *)a2 + v6);
  if (v7 >= 3 && (v6 & 0xFFFFFFF8) != 0) {
    unsigned int v7 = *a2 + 3;
  }
  if (!v7)
  {
    char v9 = 0;
LABEL_14:
    (*(void (**)(void *, _DWORD *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
    unsigned int v10 = (void *)(((unint64_t)a1 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
    a2 = (_DWORD *)(((unint64_t)a2 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
    goto LABEL_15;
  }
  if (v7 != 2)
  {
    char v9 = 1;
    goto LABEL_14;
  }
  char v9 = 2;
  unsigned int v10 = a1;
LABEL_15:
  *unsigned int v10 = *(void *)a2;
  *((unsigned char *)a1 + v6) = v9;
  return a1;
}

_DWORD *sub_1C1130FC0(_DWORD *a1, _DWORD *a2)
{
  if (a1 != a2)
  {
    uint64_t v3 = a2;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v6 = *(void *)(v5 + 64);
    if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8) {
      unint64_t v7 = 8;
    }
    else {
      unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    unsigned int v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 3 && (v7 & 0xFFFFFFF8) != 0) {
      unsigned int v8 = *a1 + 3;
    }
    if (v8 <= 1) {
      (*(void (**)(_DWORD *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    }
    swift_release();
    unsigned int v10 = *((unsigned __int8 *)v3 + v7);
    if ((v7 & 0xFFFFFFF8) != 0 && v10 >= 3) {
      unsigned int v10 = *v3 + 3;
    }
    if (v10)
    {
      if (v10 == 2)
      {
        char v12 = 2;
        uint64_t v13 = a1;
LABEL_24:
        *uint64_t v13 = *(void *)v3;
        *((unsigned char *)a1 + v7) = v12;
        return a1;
      }
      char v12 = 1;
    }
    else
    {
      char v12 = 0;
    }
    (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v5 + 32))(a1, v3, AssociatedTypeWitness);
    uint64_t v13 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v3 = (_DWORD *)(((unint64_t)v3 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    goto LABEL_24;
  }
  return a1;
}

uint64_t sub_1C11311A0(unsigned __int8 *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v5 = ((*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8) {
    unint64_t v5 = 8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_20;
  }
  uint64_t v6 = v5 | 1;
  char v7 = 8 * (v5 | 1);
  if ((v5 | 1) <= 3)
  {
    unsigned int v8 = (a2 + ~(-1 << v7) - 253) >> v7;
    if (v8 > 0xFFFE)
    {
      int v9 = *(_DWORD *)&a1[v6];
      if (!v9) {
        goto LABEL_20;
      }
      goto LABEL_13;
    }
    if (v8 > 0xFE)
    {
      int v9 = *(unsigned __int16 *)&a1[v6];
      if (!*(_WORD *)&a1[v6]) {
        goto LABEL_20;
      }
      goto LABEL_13;
    }
    if (!v8) {
      goto LABEL_20;
    }
  }
  int v9 = a1[v6];
  if (!a1[v6])
  {
LABEL_20:
    unsigned int v13 = a1[v5];
    if (v13 >= 3) {
      return (v13 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
LABEL_13:
  int v11 = (v9 - 1) << v7;
  if (v6 >= 4) {
    int v11 = 0;
  }
  if (v6 == 1) {
    int v12 = *a1;
  }
  else {
    int v12 = *(_DWORD *)a1;
  }
  return (v12 | v11) + 254;
}

void sub_1C1131314(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v7 = ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8) {
    unint64_t v7 = 8;
  }
  size_t v8 = v7 | 1;
  if (a3 < 0xFE)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = (a3 + ~(-1 << (8 * v8)) - 253) >> (8 * v8);
    if (v12 > 0xFFFE)
    {
      int v9 = 4;
    }
    else if (v12 >= 0xFF)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 != 0;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (a2 <= 0xFD)
  {
    switch(v9)
    {
      case 1:
        a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_24;
      case 2:
        *(_WORD *)&a1[v8] = 0;
        goto LABEL_23;
      case 3:
        goto LABEL_31;
      case 4:
        *(_DWORD *)&a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_24;
      default:
LABEL_23:
        if (a2) {
LABEL_24:
        }
          a1[v7] = -(char)a2;
        break;
    }
    return;
  }
  unsigned int v10 = a2 - 254;
  if (v8 < 4)
  {
    int v11 = (v10 >> (8 * v8)) + 1;
    v10 &= ~(-1 << (8 * v8));
    bzero(a1, v8);
    if (v8 == 1)
    {
      *a1 = v10;
      goto LABEL_20;
    }
  }
  else
  {
    bzero(a1, v7 | 1);
    int v11 = 1;
  }
  *(_DWORD *)a1 = v10;
LABEL_20:
  switch(v9)
  {
    case 1:
      a1[v8] = v11;
      break;
    case 2:
      *(_WORD *)&a1[v8] = v11;
      break;
    case 3:
LABEL_31:
      __break(1u);
      JUMPOUT(0x1C1131538);
    case 4:
      *(_DWORD *)&a1[v8] = v11;
      break;
    default:
      return;
  }
}

uint64_t sub_1C1131560(_DWORD *a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v3 = ((*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8) {
    unint64_t v3 = 8;
  }
  uint64_t result = *((unsigned __int8 *)a1 + v3);
  uint64_t v5 = v3 & 0xFFFFFFF8;
  if (result >= 3 && v5 != 0) {
    return (*a1 + 3);
  }
  return result;
}

void sub_1C113163C(_DWORD *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = ((*(void *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((*(void *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8) {
    size_t v6 = 8;
  }
  else {
    size_t v6 = v5;
  }
  if (a2 > 2)
  {
    *((unsigned char *)a1 + v6) = 3;
    bzero(a1, v6);
    *a1 = a2 - 3;
  }
  else
  {
    *((unsigned char *)a1 + v6) = a2;
  }
}

uint64_t static FormatTextContent.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v4 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1F4188790](v4);
  size_t v6 = (void *)((char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  int v9 = (void *)((char *)&v62 - v8);
  uint64_t v10 = *a1;
  unint64_t v11 = *a2;
  switch((unint64_t)*a1 >> 60)
  {
    case 1uLL:
      if (v11 >> 60 != 1) {
        goto LABEL_44;
      }
      goto LABEL_7;
    case 2uLL:
      if (v11 >> 60 != 2) {
        goto LABEL_44;
      }
LABEL_7:
      uint64_t v17 = v10 & 0xFFFFFFFFFFFFFFFLL;
      if (*(void *)(v17 + 16) == *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10)
        && *(void *)(v17 + 24) == *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x18))
      {
        goto LABEL_37;
      }
      return sub_1C1520A9C();
    case 3uLL:
      if (v11 >> 60 != 3) {
        goto LABEL_44;
      }
      uint64_t v20 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v21 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v22 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      *(void *)&long long v74 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      *(void *)&long long v65 = v21;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if ((static FormatTextContent.== infix(_:_:)(&v74, &v65) & 1) == 0) {
        goto LABEL_39;
      }
      char v23 = sub_1C00F4FB0(v20, v22);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      if ((v23 & 1) == 0) {
        goto LABEL_44;
      }
      goto LABEL_37;
    case 4uLL:
      if (v11 >> 60 != 4) {
        goto LABEL_44;
      }
      uint64_t v24 = v10 & 0xFFFFFFFFFFFFFFFLL;
      char v25 = *(unsigned char *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      char v26 = *(unsigned char *)(v24 + 24);
      uint64_t v27 = v11 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v28 = *(void *)(v27 + 16);
      char v29 = *(unsigned char *)(v27 + 24);
      char v30 = *(unsigned char *)(v27 + 48);
      *(void *)&long long v74 = *(void *)(v24 + 16);
      BYTE8(v74) = v26;
      long long v75 = *(_OWORD *)(v24 + 32);
      LOBYTE(v76) = v25;
      *(void *)&long long v65 = v28;
      BYTE8(v65) = v29;
      long long v66 = *(_OWORD *)(v27 + 32);
      LOBYTE(v67) = v30;
      swift_retain();
      swift_retain();
      char v16 = _s8NewsFeed24FormatTextNodeAttachmentV2eeoiySbAC_ACtFZ_0((uint64_t)&v74, (uint64_t)&v65);
      goto LABEL_25;
    case 5uLL:
      if (v11 >> 60 != 5) {
        goto LABEL_44;
      }
      uint64_t v32 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v31 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v33 = v11 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v34 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v35 = *(void *)(v33 + 24);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (sub_1C00F521C(v32, v34))
      {
        *(void *)&long long v74 = v31;
        *(void *)&long long v65 = v35;
        char v36 = static FormatTextContent.== infix(_:_:)(&v74, &v65);
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        return v36 & 1;
      }
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_44;
    case 6uLL:
      if (v11 >> 60 != 6) {
        goto LABEL_44;
      }
      uint64_t v37 = v11 & 0xFFFFFFFFFFFFFFFLL;
      long long v38 = *(_OWORD *)(v37 + 128);
      long long v71 = *(_OWORD *)(v37 + 112);
      long long v72 = v38;
      char v73 = *(unsigned char *)(v37 + 144);
      long long v39 = *(_OWORD *)(v37 + 64);
      long long v67 = *(_OWORD *)(v37 + 48);
      long long v68 = v39;
      long long v40 = *(_OWORD *)(v37 + 96);
      long long v69 = *(_OWORD *)(v37 + 80);
      long long v70 = v40;
      long long v41 = *(_OWORD *)(v37 + 32);
      long long v65 = *(_OWORD *)(v37 + 16);
      long long v66 = v41;
      long long v42 = *(_OWORD *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x80);
      long long v80 = *(_OWORD *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x70);
      long long v81 = v42;
      char v82 = *(unsigned char *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x90);
      long long v43 = *(_OWORD *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      long long v76 = *(_OWORD *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      long long v77 = v43;
      long long v44 = *(_OWORD *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x60);
      long long v78 = *(_OWORD *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x50);
      long long v79 = v44;
      long long v45 = *(_OWORD *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v74 = *(_OWORD *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      long long v75 = v45;
      swift_retain();
      swift_retain();
      char v16 = _s8NewsFeed20FormatTextNodeNumberV2eeoiySbAC_ACtFZ_0((uint64_t *)&v74, (uint64_t *)&v65);
      goto LABEL_25;
    case 7uLL:
      if (v11 >> 60 != 7) {
        goto LABEL_44;
      }
      uint64_t v46 = swift_projectBox();
      uint64_t v47 = swift_projectBox();
      sub_1C1132B20(v46, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
      sub_1C1132B20(v47, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
      *(void *)&long long v74 = *v9;
      *(void *)&long long v65 = *v6;
      swift_retain();
      swift_retain();
      if ((static FormatTextContent.== infix(_:_:)(&v74, &v65) & 1) != 0
        && (_s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)v9 + *(int *)(v4 + 20), (uint64_t)v6 + *(int *)(v4 + 20)) & 1) != 0)
      {
        sub_1C1132B88((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
        sub_1C1132B88((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
        swift_release();
        swift_release();
        char v36 = 1;
        return v36 & 1;
      }
      sub_1C1132B88((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
      sub_1C1132B88((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
      swift_release();
      goto LABEL_43;
    case 8uLL:
      if (v11 >> 60 != 8) {
        goto LABEL_44;
      }
      long long v52 = *(_OWORD *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      long long v63 = *(_OWORD *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      long long v64 = v52;
      long long v62 = *(_OWORD *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
      uint64_t v53 = (void *)(v11 & 0xFFFFFFFFFFFFFFFLL);
      uint64_t v54 = v53[2];
      uint64_t v55 = v53[3];
      uint64_t v56 = v53[4];
      uint64_t v57 = v53[5];
      uint64_t v58 = v53[6];
      uint64_t v59 = v53[7];
      uint64_t v60 = v53[8];
      *(void *)&long long v74 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      *(void *)&long long v65 = v54;
      swift_retain();
      swift_retain();
      if ((static FormatDateTime.== infix(_:_:)((unint64_t *)&v74, (unint64_t *)&v65) & 1) == 0)
      {
        swift_release();
        goto LABEL_43;
      }
      long long v74 = v64;
      long long v75 = v63;
      long long v76 = v62;
      *(void *)&long long v65 = v55;
      *((void *)&v65 + 1) = v56;
      *(void *)&long long v66 = v57;
      *((void *)&v66 + 1) = v58;
      *(void *)&long long v67 = v59;
      *((void *)&v67 + 1) = v60;
      BOOL v61 = _s8NewsFeed010FormatDateC0O2eeoiySbAC_ACtFZ_0((uint64_t *)&v74, (uint64_t *)&v65);
      swift_release();
      swift_release();
      if (!v61) {
        goto LABEL_44;
      }
      goto LABEL_37;
    case 9uLL:
      if (v11 >> 60 != 9) {
        goto LABEL_44;
      }
      uint64_t v48 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v49 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v50 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      *(void *)&long long v74 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      *((void *)&v74 + 1) = v48;
      *(void *)&long long v65 = v49;
      *((void *)&v65 + 1) = v50;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (static FormatTextContent.== infix(_:_:)(&v74, &v65))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v51 = sub_1C00F5204(v48, v50);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        if (v51)
        {
LABEL_37:
          char v36 = 1;
          return v36 & 1;
        }
      }
      else
      {
LABEL_39:
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
LABEL_43:
        swift_release();
      }
LABEL_44:
      char v36 = 0;
      return v36 & 1;
    default:
      if (v11 >> 60) {
        goto LABEL_44;
      }
      __int16 v12 = *(_WORD *)(v10 + 64);
      __int16 v13 = *(_WORD *)(v11 + 64);
      long long v14 = *(_OWORD *)(v10 + 32);
      long long v74 = *(_OWORD *)(v10 + 16);
      long long v75 = v14;
      long long v76 = *(_OWORD *)(v10 + 48);
      LOWORD(v77) = v12;
      long long v15 = *(_OWORD *)(v11 + 32);
      long long v65 = *(_OWORD *)(v11 + 16);
      long long v66 = v15;
      long long v67 = *(_OWORD *)(v11 + 48);
      LOWORD(v68) = v13;
      swift_retain();
      swift_retain();
      char v16 = _s8NewsFeed21FormatTextNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v74, (uint64_t)&v65);
LABEL_25:
      char v36 = v16;
      swift_release();
      swift_release();
      return v36 & 1;
  }
}

void sub_1C1131F08(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v4);
  size_t v6 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1F4188790](v7);
  int v9 = (void *)((char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *v1;
  switch((unint64_t)*v1 >> 60)
  {
    case 1uLL:
    case 2uLL:
      uint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      sub_1C0F4A608(v12, v13);
      goto LABEL_11;
    case 3uLL:
      uint64_t v16 = v10 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v17 = *(void *)(v16 + 24);
      *(void *)&long long v68 = *(void *)(v16 + 16);
      uint64_t v18 = v68 & 0xFFFFFFFFFFFFFFFLL;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C1131F08(a1);
      if (v2) {
        goto LABEL_23;
      }
      uint64_t v46 = *(void *)(v17 + 16);
      if (!v46) {
        goto LABEL_23;
      }
      uint64_t v66 = v18;
      swift_bridgeObjectRetain();
      uint64_t v67 = v17;
      uint64_t v47 = v17 + 64;
      do
      {
        uint64_t v48 = *(void *)(v47 - 8);
        *(void *)&long long v68 = *(void *)(v47 - 16);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1C1131F08(a1);
        swift_release();
        if (v48) {
          sub_1C05AB7D8(a1);
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        v47 += 40;
        --v46;
      }
      while (v46);
      swift_release();
      goto LABEL_35;
    case 4uLL:
      uint64_t v19 = v10 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v21 = *(void *)(v19 + 32);
      uint64_t v20 = *(void *)(v19 + 40);
      int v22 = *(unsigned __int8 *)(v19 + 48);
      *(void *)&long long v68 = *(void *)(v19 + 16);
      swift_retain();
      sub_1BFE94AB4(v21, v20, v22);
      sub_1C05B3588(a1);
      if (v2)
      {
        swift_release();
        sub_1BFE94AD4(v21, v20, v22);
      }
      else if (v22)
      {
        sub_1BFE94AB4(v21, v20, 1);
        uint64_t v49 = sub_1C00B857C((uint64_t)&unk_1F1B661E0);
        sub_1C0F49260(v21, v20, v49, 0);
        swift_bridgeObjectRelease();
        sub_1BFE94AD4(v21, v20, 1);
        swift_release();
        sub_1BFE94AD4(v21, v20, 1);
      }
      else
      {
        sub_1BFE94AD4(v21, v20, 0);
        swift_release();
        sub_1BFE94AD4(v21, v20, 0);
      }
      return;
    case 5uLL:
      uint64_t v23 = v10 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v25 = *(void *)(v23 + 16);
      uint64_t v24 = *(void *)(v23 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C058CD7C(a1, v25);
      if (!v2)
      {
        *(void *)&long long v68 = v24;
        sub_1C1131F08(a1);
      }
      swift_release();
LABEL_11:
      swift_bridgeObjectRelease();
      return;
    case 6uLL:
      uint64_t v26 = v10 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v27 = *(void *)(v26 + 16);
      int v28 = *(unsigned __int8 *)(v26 + 24);
      if (!v28)
      {
        uint64_t v51 = *(void *)(v27 + 16);
        if (!v51) {
          return;
        }
        sub_1C01EF338(v27, 0);
        swift_bridgeObjectRetain();
        long long v52 = (unsigned char *)(v27 + 40);
        while (1)
        {
          if ((*v52 & 1) == 0)
          {
            *(void *)&long long v68 = *((void *)v52 - 1);
            uint64_t v53 = v68;
            swift_retain_n();
            sub_1C02D349C(a1);
            if (v2)
            {
              sub_1BFF49984(v53, 0);
              sub_1BFF49984(v53, 0);
LABEL_49:
              sub_1C01EF35C(v27, 0);
              uint64_t v29 = v27;
              unsigned __int8 v30 = 0;
              goto LABEL_50;
            }
            sub_1BFF49984(v53, 0);
            sub_1BFF49984(v53, 0);
          }
          v52 += 16;
          if (!--v51) {
            goto LABEL_49;
          }
        }
      }
      if (v28 != 1) {
        return;
      }
      swift_bridgeObjectRetain();
      sub_1C059BA84(a1, v27);
      uint64_t v29 = v27;
      unsigned __int8 v30 = 1;
LABEL_50:
      sub_1C01EF35C(v29, v30);
      return;
    case 7uLL:
      uint64_t v31 = swift_projectBox();
      sub_1C1132B20(v31, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
      *(void *)&long long v68 = *v9;
      sub_1C1131F08(a1);
      if (!v2)
      {
        sub_1C1132B20((uint64_t)v9 + *(int *)(v7 + 20), (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatURL);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload)
        {
          if (EnumCaseMultiPayload == 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else if (!v6[24])
          {
            uint64_t v56 = *(void *)v6;
            uint64_t v55 = *((void *)v6 + 1);
            uint64_t v57 = *((void *)v6 + 2);
            *(void *)&long long v68 = v56;
            *((void *)&v68 + 1) = v55;
            *(void *)&long long v69 = v57;
            char v72 = 6;
            sub_1BFE86E48(v56, v55, v57, 0);
            uint64_t v58 = sub_1C12ECBDC((uint64_t *)&v68, &v72);
            swift_bridgeObjectRetain();
            sub_1C0F49260(v56, v55, v58, 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BFD7418C(v56, v55, v57, 0);
          }
        }
        else
        {
          sub_1C1132B88((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatURL);
        }
      }
      sub_1C1132B88((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
      return;
    case 8uLL:
      uint64_t v32 = (void *)(v10 & 0xFFFFFFFFFFFFFFFLL);
      unint64_t v33 = v32[2];
      if ((v33 >> 62) - 2 >= 2)
      {
        if (v33 >> 62)
        {
          uint64_t v54 = *(void *)((v33 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
          *(void *)&long long v68 = *(void *)((v33 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          *((void *)&v68 + 1) = v54;
          sub_1C05A98D8(a1);
        }
        else if (!*(unsigned char *)(v33 + 40))
        {
          uint64_t v34 = v32[3];
          uint64_t v35 = v32[5];
          uint64_t v65 = v32[4];
          uint64_t v66 = v35;
          uint64_t v36 = v32[7];
          uint64_t v37 = v32[8];
          uint64_t v38 = *(void *)(v33 + 24);
          uint64_t v39 = *(void *)(v33 + 32);
          uint64_t v40 = *(void *)(v33 + 16);
          uint64_t v67 = v32[6];
          *(void *)&long long v68 = v40;
          *((void *)&v68 + 1) = v38;
          *(void *)&long long v69 = v39;
          char v72 = 1;
          sub_1BFF58F10(v33);
          uint64_t v63 = v34;
          uint64_t v64 = v36;
          uint64_t v41 = v34;
          uint64_t v42 = v65;
          sub_1BFF523A4(v41, v65, v66);
          sub_1BFF58F10(v33);
          uint64_t v62 = v38;
          sub_1BFE86E48(v40, v38, v39, 0);
          uint64_t v43 = sub_1C12ECBDC((uint64_t *)&v68, &v72);
          if (v2)
          {
            sub_1BFF07CD8(v33);
            sub_1BFF07CD8(v33);
            sub_1BFF51C94(v63, v42, v66);
          }
          else
          {
            uint64_t v59 = v43;
            v61[1] = v37;
            uint64_t v60 = v62;
            swift_bridgeObjectRetain();
            sub_1C0F49260(v40, v60, v59, 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BFF07CD8(v33);
            sub_1BFF07CD8(v33);
            sub_1BFF51C94(v63, v65, v66);
          }
        }
      }
      return;
    case 9uLL:
      uint64_t v44 = v10 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v45 = *(void *)(v44 + 24);
      *(void *)&long long v68 = *(void *)(v44 + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C1131F08(a1);
      if (v2)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1C058CD50(a1, v45);
        swift_release();
LABEL_35:
        swift_bridgeObjectRelease_n();
      }
      return;
    default:
      __int16 v14 = *(_WORD *)(v10 + 64);
      long long v15 = *(_OWORD *)(v10 + 32);
      long long v68 = *(_OWORD *)(v10 + 16);
      long long v69 = v15;
      long long v70 = *(_OWORD *)(v10 + 48);
      __int16 v71 = v14;
      sub_1C02A26BC(a1);
      return;
  }
}

void sub_1C11327D0(uint64_t a1)
{
}

unint64_t sub_1C11327E8(uint64_t a1)
{
  unint64_t result = sub_1C007C6F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1132810()
{
  unint64_t result = qword_1EB8915A8;
  if (!qword_1EB8915A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8915A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTextContent()
{
  return &type metadata for FormatTextContent;
}

uint64_t sub_1C1132874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1BFF6236C(0, v4, 0);
    uint64_t v5 = v20;
    uint64_t v7 = a1 + 48;
    do
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1BFF41010(a2, a3, a4);
      uint64_t v10 = v9;
      char v12 = v11;
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t v14 = *(void *)(v20 + 16);
      unint64_t v13 = *(void *)(v20 + 24);
      if (v14 >= v13 >> 1) {
        sub_1BFF6236C(v13 > 1, v14 + 1, 1);
      }
      v7 += 24;
      *(void *)(v20 + 16) = v14 + 1;
      uint64_t v15 = v20 + 24 * v14;
      *(void *)(v15 + 32) = v8;
      *(void *)(v15 + 40) = v10;
      *(unsigned char *)(v15 + 48) = v12 & 1;
      --v4;
    }
    while (v4);
  }
  return v5;
}

uint64_t sub_1C11329B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1BFF6236C(0, v4, 0);
    uint64_t v5 = v20;
    uint64_t v7 = a1 + 64;
    do
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1BFF41010(a2, a3, a4);
      uint64_t v10 = v9;
      char v19 = v11;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      unint64_t v13 = *(void *)(v20 + 16);
      unint64_t v12 = *(void *)(v20 + 24);
      if (v13 >= v12 >> 1) {
        sub_1BFF6236C(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v20 + 16) = v13 + 1;
      uint64_t v14 = v20 + 24 * v13;
      *(void *)(v14 + 32) = v8;
      *(void *)(v14 + 40) = v10;
      *(unsigned char *)(v14 + 48) = v19 & 1;
      v7 += 40;
      --v4;
    }
    while (v4);
  }
  return v5;
}

uint64_t sub_1C1132B20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1132B88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for FormatAudioTrackBinding()
{
  return &type metadata for FormatAudioTrackBinding;
}

uint64_t FormatPackageInventory.name.getter()
{
  return sub_1C1132C14(&OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
}

uint64_t FormatPackageInventory.comment.getter()
{
  return sub_1C1132C14(&OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__comment);
}

uint64_t sub_1C1132C14(void *a1)
{
  uint64_t v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1C1132C68(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v8 = result;
    swift_bridgeObjectRetain();
    uint64_t v9 = (uint64_t *)(a3 + 48);
    do
    {
      uint64_t v10 = *(v9 - 2);
      if ((~v10 & 0xF000000000000007) != 0)
      {
        uint64_t v12 = *(v9 - 1);
        uint64_t v11 = *v9;
        uint64_t v18 = *(v9 - 2);
        long long v13 = *(_OWORD *)(a2 + 80);
        v16[4] = *(_OWORD *)(a2 + 64);
        uint64_t v16[5] = v13;
        uint64_t v17 = *(void *)(a2 + 96);
        long long v14 = *(_OWORD *)(a2 + 16);
        v16[0] = *(_OWORD *)a2;
        v16[1] = v14;
        long long v15 = *(_OWORD *)(a2 + 48);
        void v16[2] = *(_OWORD *)(a2 + 32);
        v16[3] = v15;
        sub_1BFDC11A4(v10);
        sub_1BFEF683C(v12);
        sub_1BFEF683C(v11);
        sub_1BFDC11A4(v10);
        sub_1BFEF683C(v12);
        sub_1BFEF683C(v11);
        sub_1BFDC11A4(v10);
        sub_1BFF79540(v8, (uint64_t)v16);
        sub_1BFDC11BC(v10);
        sub_1BFDC11BC(v10);
        sub_1BFEF68C0(v12);
        sub_1BFEF68C0(v11);
        sub_1BFDC11BC(v10);
        sub_1BFEF68C0(v12);
        sub_1BFEF68C0(v11);
        if (v4) {
          break;
        }
      }
      v9 += 3;
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C1132DBC(unint64_t *a1, long long *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1BFF81A84();
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    uint64_t v13 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v14 = *(void *)(v9 + 72);
    uint64_t v21 = a3;
    uint64_t v22 = v14;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1C1147A28(v13, (uint64_t)v11, (uint64_t (*)(void))sub_1BFF81A84);
      uint64_t v30 = *v11;
      long long v15 = a2[5];
      long long v27 = a2[4];
      long long v28 = v15;
      uint64_t v29 = *((void *)a2 + 12);
      long long v16 = a2[1];
      long long v23 = *a2;
      long long v24 = v16;
      long long v17 = a2[3];
      long long v25 = a2[2];
      long long v26 = v17;
      swift_retain();
      sub_1BFF0C6A0(a1, (uint64_t *)&v23);
      swift_release();
      if (v4) {
        break;
      }
      long long v18 = a2[5];
      long long v27 = a2[4];
      long long v28 = v18;
      uint64_t v29 = *((void *)a2 + 12);
      long long v19 = a2[1];
      long long v23 = *a2;
      long long v24 = v19;
      long long v20 = a2[3];
      long long v25 = a2[2];
      long long v26 = v20;
      sub_1BFF816A8(a1, &v23);
      uint64_t v4 = 0;
      sub_1C1147B04((uint64_t)v11, (uint64_t (*)(void))sub_1BFF81A84);
      v13 += v22;
      if (!--v12) {
        goto LABEL_7;
      }
    }
    sub_1C1147B04((uint64_t)v11, (uint64_t (*)(void))sub_1BFF81A84);
LABEL_7:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C1132FE0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v17 = result;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return result;
  }
  swift_bridgeObjectRetain();
  sub_1BFE9E08C(0, &qword_1EA19C020, (uint64_t)&type metadata for FormatSourceItemTipTrait, MEMORY[0x1E4FBB320]);
  uint64_t v8 = v7;
  sub_1C1149690();
  for (uint64_t i = (uint64_t *)(a3 + 48); ; i += 3)
  {
    uint64_t v24 = *i;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    if (swift_dynamicCast()) {
      break;
    }
    uint64_t v23 = 0;
    long long v21 = 0u;
    long long v22 = 0u;
    sub_1C1147B04((uint64_t)&v21, (uint64_t (*)(void))sub_1C11496E8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_4:
    if (!--v5) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v10 = v8;
  uint64_t v18 = v4;
  uint64_t v11 = *((void *)&v22 + 1);
  uint64_t v12 = v23;
  __swift_project_boxed_opaque_existential_1(&v21, *((uint64_t *)&v22 + 1));
  long long v13 = *(_OWORD *)(a2 + 80);
  v19[4] = *(_OWORD *)(a2 + 64);
  v19[5] = v13;
  uint64_t v20 = *(void *)(a2 + 96);
  long long v14 = *(_OWORD *)(a2 + 16);
  v19[0] = *(_OWORD *)a2;
  v19[1] = v14;
  long long v15 = *(_OWORD *)(a2 + 48);
  v19[2] = *(_OWORD *)(a2 + 32);
  v19[3] = v15;
  (*(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t))(v12 + 8))(v17, v19, v11, v12);
  uint64_t v4 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  if (!v18)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v10;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C11332A8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v8 = (unint64_t *)result;
    swift_bridgeObjectRetain();
    uint64_t v9 = a3 + 48;
    while (1)
    {
      uint64_t v15 = *(void *)(v9 - 16);
      long long v10 = *(_OWORD *)(a2 + 80);
      v13[4] = *(_OWORD *)(a2 + 64);
      v13[5] = v10;
      uint64_t v14 = *(void *)(a2 + 96);
      long long v11 = *(_OWORD *)(a2 + 16);
      v13[0] = *(_OWORD *)a2;
      v13[1] = v11;
      long long v12 = *(_OWORD *)(a2 + 48);
      _OWORD v13[2] = *(_OWORD *)(a2 + 32);
      v13[3] = v12;
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BFF0B0B8(v8, (uint64_t)v13);
      if (v4) {
        break;
      }
      v9 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v5) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1C11333C8(uint64_t result, long long *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return result;
  }
  uint64_t v7 = result;
  uint64_t v490 = v4;
  uint64_t v8 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  uint64_t v478 = v7;
  v479 = a2;
  uint64_t v448 = v5;
  uint64_t v457 = v8;
  while (2)
  {
    uint64_t v10 = v8 + 32 * v9;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *(void *)(v10 + 8);
    char v13 = *(unsigned char *)(v10 + 16);
    unint64_t v14 = *(void *)(v10 + 24);
    ++v9;
    switch(v14 >> 61)
    {
      case 1uLL:
        char v472 = *(unsigned char *)(v10 + 16);
        uint64_t v33 = *(void *)v10;
        uint64_t v34 = *(void *)(v10 + 8);
        uint64_t v36 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v35 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        unsigned __int8 v37 = *(unsigned char *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
        uint64_t v38 = *(void **)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
        int v39 = *(unsigned __int8 *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
        uint64_t v40 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x48);
        uint64_t v459 = v34;
        uint64_t v465 = v33;
        uint64_t v477 = v9;
        unsigned __int8 v452 = *(unsigned char *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
        unsigned __int8 v463 = v37;
        uint64_t v455 = v35;
        if (v39 == 255)
        {
          uint64_t v41 = a2;
          uint64_t v42 = v7;
          uint64_t v76 = v35;
          uint64_t v77 = v34;
          unsigned __int8 v78 = v37;
          uint64_t v47 = v40;
          sub_1BFF5B7E0(v33, v77, v472);
          swift_retain();
          sub_1C05DCF14(v36, v76, v78);
          uint64_t v48 = v38;
          unsigned __int8 v49 = -1;
        }
        else
        {
          v444 = *(void **)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
          if (v39)
          {
            uint64_t v443 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x48);
            uint64_t v79 = v38[3];
            uint64_t v80 = *(void *)(v79 + 16);
            if (v80)
            {
              sub_1C05DCF2C(v38, v39);
              sub_1BFF5B7E0(v465, v34, v472);
              swift_retain();
              sub_1C05DCF2C(v38, v39);
              sub_1C05DCF14(v36, v455, v463);
              sub_1C05DCF2C(v38, v39);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              long long v81 = (void **)(v79 + 56);
              uint64_t v82 = v490;
              do
              {
                uint64_t v84 = (uint64_t)*(v81 - 3);
                uint64_t v83 = (uint64_t)*(v81 - 2);
                char v85 = *((unsigned char *)v81 - 8);
                uint64_t v86 = *v81;
                sub_1BFF5B7E0(v84, v83, v85);
                sub_1BFC3D764();
                sub_1C1149690();
                id v87 = v86;
                if (swift_dynamicCast())
                {
                  uint64_t v490 = v82;
                  uint64_t v89 = *((void *)&v481 + 1);
                  uint64_t v88 = v482;
                  __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
                  long long v90 = v479[4];
                  long long v488 = v479[5];
                  uint64_t v489 = *((void *)v479 + 12);
                  long long v91 = v479[1];
                  long long v483 = *v479;
                  long long v484 = v91;
                  long long v92 = v479[2];
                  long long v486 = v479[3];
                  long long v487 = v90;
                  long long v485 = v92;
                  uint64_t v93 = v490;
                  (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v88 + 8))(v478, &v483, v89, v88);
                  uint64_t v82 = v93;
                  if (v93)
                  {
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                    sub_1BFF5B7CC(v84, v83, v85);
                    swift_bridgeObjectRelease();

                    sub_1C05DCEE4(v444, v452);
                    sub_1C05DCEE4(v444, v452);
                    sub_1C05DCEFC(v36, v455, v463);
                    sub_1C05DCEE4(v444, v452);
                    swift_bridgeObjectRelease();
                    sub_1BFF5B7CC(v465, v459, v472);
                    swift_bridgeObjectRelease();
                    return swift_release();
                  }
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                }
                else
                {
                  uint64_t v482 = 0;
                  long long v480 = 0u;
                  long long v481 = 0u;
                  sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
                }
                sub_1BFF5B7CC(v84, v83, v85);

                v81 += 4;
                --v80;
              }
              while (v80);
              swift_bridgeObjectRelease();
              uint64_t v132 = v459;
              uint64_t v133 = v465;
              uint64_t v38 = v444;
              uint64_t v5 = v448;
            }
            else
            {
              unsigned __int8 v145 = *(unsigned char *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
              sub_1C05DCF2C(v38, v39);
              uint64_t v133 = v465;
              uint64_t v132 = v34;
              sub_1BFF5B7E0(v465, v34, v472);
              swift_retain();
              sub_1C05DCF2C(v38, v145);
              sub_1C05DCF14(v36, v455, v463);
              sub_1C05DCF2C(v38, v145);
              swift_bridgeObjectRetain();
              uint64_t v82 = v490;
            }
            uint64_t v146 = (void *)v38[4];
            sub_1BFC3D764();
            sub_1C1149690();
            id v147 = v146;
            if (swift_dynamicCast())
            {
              uint64_t v148 = v82;
              uint64_t v149 = *((void *)&v481 + 1);
              uint64_t v150 = v482;
              __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
              long long v151 = v479[4];
              long long v488 = v479[5];
              uint64_t v489 = *((void *)v479 + 12);
              long long v152 = v479[1];
              long long v483 = *v479;
              long long v484 = v152;
              long long v153 = v479[2];
              long long v486 = v479[3];
              long long v487 = v151;
              long long v485 = v153;
              (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v150 + 8))(v478, &v483, v149, v150);
              if (v148)
              {
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                sub_1C05DCEE4(v444, v452);
                sub_1C05DCEE4(v444, v452);
                sub_1C05DCEFC(v36, v455, v463);
                sub_1C05DCEE4(v444, v452);
                swift_bridgeObjectRelease();
                uint64_t v408 = v133;
                uint64_t v409 = v132;
                goto LABEL_212;
              }
              uint64_t v490 = 0;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
              uint64_t v38 = v444;
            }
            else
            {
              uint64_t v490 = v82;
              uint64_t v482 = 0;
              long long v480 = 0u;
              long long v481 = 0u;
              sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
            }
            sub_1C05DCEE4(v38, v452);
            sub_1C05DCEE4(v38, v452);
            uint64_t v42 = v478;
            uint64_t v41 = v479;
            uint64_t v47 = v443;
LABEL_64:
            uint64_t v154 = v490;
            sub_1C1136FC4(v42, v41, v47);
            if (!v154)
            {
              sub_1C05DCEFC(v36, v455, v463);
              sub_1C05DCEE4(v38, v452);
              swift_bridgeObjectRelease();
              sub_1BFF5B7CC(v465, v459, v472);
              swift_release();
              uint64_t v9 = v477;
              uint64_t v7 = v42;
              a2 = v41;
              uint64_t v490 = 0;
              uint64_t v8 = v457;
              goto LABEL_4;
            }
            sub_1C05DCEFC(v36, v455, v463);
            sub_1C05DCEE4(v38, v452);
            swift_bridgeObjectRelease();
            uint64_t v408 = v465;
            uint64_t v409 = v459;
LABEL_212:
            sub_1BFF5B7CC(v408, v409, v472);
            swift_bridgeObjectRelease();
            return swift_release();
          }
          uint64_t v41 = a2;
          uint64_t v42 = v7;
          unsigned __int8 v43 = v39;
          uint64_t v44 = v35;
          uint64_t v45 = v34;
          unsigned __int8 v46 = v37;
          uint64_t v47 = v40;
          sub_1BFF5B7E0(v33, v45, v472);
          swift_retain();
          sub_1C05DCF14(v36, v44, v46);
          uint64_t v48 = v444;
          unsigned __int8 v49 = v43;
          uint64_t v38 = v444;
        }
        sub_1C05DCF2C(v48, v49);
        swift_bridgeObjectRetain();
        goto LABEL_64;
      case 2uLL:
        uint64_t v476 = v9;
        uint64_t v50 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        sub_1BFF5B7E0(v11, v12, v13);
        swift_retain();
        swift_retain();
        uint64_t v51 = a2;
        uint64_t v52 = v7;
        uint64_t v53 = v7;
        uint64_t v54 = v51;
        uint64_t v55 = v490;
        sub_1C11333C8(v53);
        if (v55)
        {
          swift_release();
          uint64_t v405 = v11;
LABEL_210:
          uint64_t v406 = v12;
          char v407 = v13;
          goto LABEL_232;
        }
        break;
      case 3uLL:
      case 4uLL:
        goto LABEL_4;
      default:
        if ((*(unsigned char *)(v14 + 48) & 1) == 0) {
          goto LABEL_4;
        }
        char v471 = *(unsigned char *)(v10 + 16);
        uint64_t v476 = v9;
        uint64_t v464 = *(void *)v10;
        uint64_t v16 = *(void *)(v14 + 16);
        uint64_t v15 = *(void *)(v14 + 24);
        char v17 = *(unsigned char *)(v14 + 32);
        uint64_t v18 = *(void **)(v14 + 40);
        uint64_t v19 = v18[3];
        uint64_t v20 = *(void *)(v19 + 16);
        char v451 = v17;
        uint64_t v449 = v15;
        if (v20)
        {
          sub_1C01DCFFC(v18, 1);
          sub_1C01DCFFC(v18, 1);
          uint64_t v458 = v12;
          sub_1BFF5B7E0(v464, v12, v471);
          swift_retain();
          sub_1C04B5340(v16, v15, v17);
          v442 = v18;
          sub_1C01DCFFC(v18, 1);
          swift_retain();
          swift_bridgeObjectRetain();
          long long v21 = (void **)(v19 + 56);
          uint64_t v462 = v16;
          do
          {
            uint64_t v23 = (uint64_t)*(v21 - 3);
            uint64_t v22 = (uint64_t)*(v21 - 2);
            char v24 = *((unsigned char *)v21 - 8);
            long long v25 = *v21;
            sub_1BFF5B7E0(v23, v22, v24);
            sub_1BFC3D764();
            sub_1C1149690();
            id v26 = v25;
            if (swift_dynamicCast())
            {
              uint64_t v27 = *((void *)&v481 + 1);
              uint64_t v28 = v482;
              __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
              long long v29 = v479[4];
              long long v488 = v479[5];
              uint64_t v489 = *((void *)v479 + 12);
              long long v30 = v479[1];
              long long v483 = *v479;
              long long v484 = v30;
              long long v31 = v479[2];
              long long v486 = v479[3];
              long long v487 = v29;
              long long v485 = v31;
              uint64_t v32 = v490;
              (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v28 + 8))(v478, &v483, v27, v28);
              uint64_t v490 = v32;
              if (v32)
              {
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                sub_1BFF5B7CC(v23, v22, v24);
                swift_bridgeObjectRelease();

                sub_1C01DD018(v442, 1);
                sub_1C01DD018(v442, 1);
                sub_1C04B5360(v462, v449, v451);
                sub_1C01DD018(v442, 1);
                swift_release();
                sub_1BFF5B7CC(v464, v458, v471);
                swift_bridgeObjectRelease();
                return swift_release();
              }
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
              sub_1BFF5B7CC(v23, v22, v24);

              uint64_t v16 = v462;
            }
            else
            {
              uint64_t v482 = 0;
              long long v480 = 0u;
              long long v481 = 0u;
              sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
              sub_1BFF5B7CC(v23, v22, v24);
            }
            v21 += 4;
            --v20;
          }
          while (v20);
          swift_bridgeObjectRelease();
          uint64_t v94 = v490;
          char v95 = v471;
          uint64_t v12 = v458;
          uint64_t v96 = v464;
          uint64_t v97 = v442;
        }
        else
        {
          sub_1C01DCFFC(v18, 1);
          sub_1C01DCFFC(v18, 1);
          uint64_t v124 = v15;
          uint64_t v96 = v464;
          char v95 = v471;
          sub_1BFF5B7E0(v464, v12, v471);
          swift_retain();
          sub_1C04B5340(v16, v124, v17);
          sub_1C01DCFFC(v18, 1);
          swift_retain();
          uint64_t v94 = v490;
          uint64_t v97 = v18;
        }
        uint64_t v125 = (void *)v97[4];
        sub_1BFC3D764();
        sub_1C1149690();
        id v126 = v125;
        if (swift_dynamicCast())
        {
          uint64_t v127 = *((void *)&v481 + 1);
          uint64_t v128 = v482;
          __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
          long long v129 = v479[4];
          long long v488 = v479[5];
          uint64_t v489 = *((void *)v479 + 12);
          long long v130 = v479[1];
          long long v483 = *v479;
          long long v484 = v130;
          long long v131 = v479[2];
          long long v486 = v479[3];
          long long v487 = v129;
          long long v485 = v131;
          (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v128 + 8))(v478, &v483, v127, v128);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
          sub_1C01DD018(v97, 1);
          sub_1C01DD018(v97, 1);
          sub_1C04B5360(v16, v449, v451);
          sub_1C01DD018(v97, 1);
          swift_release();
          sub_1BFF5B7CC(v96, v12, v95);
          if (v94)
          {
            swift_bridgeObjectRelease();
            return swift_release();
          }
          uint64_t v490 = 0;
        }
        else
        {
          uint64_t v490 = v94;
          uint64_t v482 = 0;
          long long v480 = 0u;
          long long v481 = 0u;
          sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
          sub_1C01DD018(v97, 1);
          sub_1C01DD018(v97, 1);
          sub_1C04B5360(v16, v449, v451);
          sub_1C01DD018(v97, 1);
          swift_release();
          sub_1BFF5B7CC(v96, v12, v95);
        }
LABEL_51:
        swift_release();
        uint64_t v7 = v478;
        a2 = v479;
        uint64_t v5 = v448;
        uint64_t v8 = v457;
        uint64_t v9 = v476;
        goto LABEL_4;
    }
    uint64_t v490 = 0;
    unint64_t v56 = *(void *)(v50 + 32);
    uint64_t v8 = v457;
    switch(v56 >> 61)
    {
      case 1uLL:
        uint64_t v98 = v11;
        uint64_t v99 = v56 & 0x1FFFFFFFFFFFFFFFLL;
        uint64_t v100 = *(void *)((v56 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v101 = *(void *)((v56 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        unsigned __int8 v102 = *(unsigned char *)((v56 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
        uint64_t v103 = *(void **)(v99 + 40);
        int v104 = *(unsigned __int8 *)(v99 + 48);
        uint64_t v105 = *(void *)(v99 + 72);
        uint64_t v466 = v98;
        unsigned __int8 v454 = *(unsigned char *)(v99 + 48);
        v456 = v103;
        unsigned __int8 v438 = v102;
        uint64_t v445 = v100;
        if (v104 == 255)
        {
          unsigned __int8 v155 = v102;
          uint64_t v156 = v100;
          swift_retain();
          uint64_t v157 = v156;
          uint64_t v109 = v105;
          sub_1C05DCF14(v157, v101, v155);
          sub_1C05DCF2C(v456, 0xFFu);
          goto LABEL_67;
        }
        uint64_t v426 = v101;
        uint64_t v432 = *(void *)(v99 + 72);
        if ((v104 & 1) == 0)
        {
          uint64_t v106 = *(void **)(v99 + 40);
          uint64_t v107 = v100;
          swift_retain();
          uint64_t v108 = v107;
          uint64_t v101 = v426;
          sub_1C05DCF14(v108, v426, v102);
          sub_1C05DCF2C(v106, v454);
          uint64_t v109 = v105;
LABEL_67:
          swift_bridgeObjectRetain();
          uint64_t v158 = v52;
LABEL_105:
          uint64_t v242 = v158;
          uint64_t v243 = v490;
          sub_1C1136FC4(v158, v479, v109);
          uint64_t v490 = v243;
          if (v243)
          {
            sub_1C05DCEFC(v445, v101, v438);
            sub_1C05DCEE4(v456, v454);
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            sub_1BFF5B7CC(v466, v12, v13);
            swift_bridgeObjectRelease();
            return swift_release();
          }
          sub_1C05DCEFC(v445, v101, v438);
          sub_1C05DCEE4(v456, v454);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          sub_1BFF5B7CC(v466, v12, v13);
          swift_release();
          uint64_t v5 = v448;
          uint64_t v9 = v476;
          a2 = v479;
          uint64_t v7 = v242;
LABEL_4:
          if (v9 == v5) {
            return swift_bridgeObjectRelease();
          }
          continue;
        }
        uint64_t v159 = v103[3];
        uint64_t v160 = *(void *)(v159 + 16);
        if (!v160)
        {
          unsigned __int8 v232 = *(unsigned char *)(v99 + 48);
          long long v220 = *(void **)(v99 + 40);
          sub_1C05DCF2C(v103, v104);
          swift_retain();
          sub_1C05DCF2C(v220, v232);
          sub_1C05DCF14(v445, v101, v102);
          sub_1C05DCF2C(v220, v232);
          swift_bridgeObjectRetain();
          uint64_t v165 = v490;
          goto LABEL_100;
        }
        uint64_t v460 = v12;
        char v473 = v13;
        unsigned __int8 v161 = *(unsigned char *)(v99 + 48);
        unsigned __int8 v162 = v102;
        v163 = *(void **)(v99 + 40);
        sub_1C05DCF2C(v103, v104);
        swift_retain();
        sub_1C05DCF2C(v163, v161);
        sub_1C05DCF14(v445, v426, v162);
        sub_1C05DCF2C(v163, v161);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v164 = (void **)(v159 + 56);
        uint64_t v165 = v490;
        while (2)
        {
          uint64_t v166 = (uint64_t)*(v164 - 3);
          uint64_t v167 = (uint64_t)*(v164 - 2);
          char v168 = *((unsigned char *)v164 - 8);
          uint64_t v169 = *v164;
          sub_1BFF5B7E0(v166, v167, v168);
          sub_1BFC3D764();
          sub_1C1149690();
          id v170 = v169;
          if (!swift_dynamicCast())
          {
            uint64_t v482 = 0;
            long long v480 = 0u;
            long long v481 = 0u;
            sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
            goto LABEL_71;
          }
          uint64_t v490 = v165;
          uint64_t v172 = *((void *)&v481 + 1);
          uint64_t v171 = v482;
          __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
          long long v173 = v479[4];
          long long v488 = v479[5];
          uint64_t v489 = *((void *)v479 + 12);
          long long v174 = v479[1];
          long long v483 = *v479;
          long long v484 = v174;
          long long v175 = v479[2];
          long long v486 = v479[3];
          long long v487 = v173;
          long long v485 = v175;
          uint64_t v176 = v490;
          (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v171 + 8))(v478, &v483, v172, v171);
          uint64_t v165 = v176;
          if (!v176)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
LABEL_71:
            sub_1BFF5B7CC(v166, v167, v168);

            v164 += 4;
            if (!--v160)
            {
              swift_bridgeObjectRelease();
              char v13 = v473;
              uint64_t v12 = v460;
              long long v220 = v456;
LABEL_100:
              uint64_t v233 = (void *)v220[4];
              sub_1BFC3D764();
              sub_1C1149690();
              id v234 = v233;
              if (swift_dynamicCast())
              {
                uint64_t v235 = *((void *)&v481 + 1);
                uint64_t v236 = v482;
                __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
                long long v237 = v479[4];
                long long v488 = v479[5];
                uint64_t v489 = *((void *)v479 + 12);
                long long v238 = v479[1];
                long long v483 = *v479;
                long long v484 = v238;
                long long v239 = v479[2];
                long long v486 = v479[3];
                long long v487 = v237;
                long long v485 = v239;
                (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v236 + 8))(v478, &v483, v235, v236);
                if (v165)
                {
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                  sub_1C05DCEE4(v456, v454);
                  sub_1C05DCEE4(v456, v454);
                  sub_1C05DCEFC(v445, v426, v438);
                  sub_1C05DCEE4(v456, v454);
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  uint64_t v405 = v466;
                  goto LABEL_210;
                }
                uint64_t v490 = 0;
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                unsigned __int8 v240 = v454;
                sub_1C05DCEE4(v456, v454);
                v241 = v456;
              }
              else
              {
                uint64_t v490 = v165;
                uint64_t v482 = 0;
                long long v480 = 0u;
                long long v481 = 0u;
                sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
                unsigned __int8 v240 = v454;
                sub_1C05DCEE4(v220, v454);
                v241 = v220;
              }
              sub_1C05DCEE4(v241, v240);
              uint64_t v158 = v478;
              uint64_t v8 = v457;
              uint64_t v101 = v426;
              uint64_t v109 = v432;
              goto LABEL_105;
            }
            continue;
          }
          break;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
        sub_1BFF5B7CC(v166, v167, v168);
        swift_bridgeObjectRelease();

        sub_1C05DCEE4(v456, v454);
        sub_1C05DCEE4(v456, v454);
        sub_1C05DCEFC(v445, v426, v438);
        sub_1C05DCEE4(v456, v454);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
LABEL_215:
        uint64_t v405 = v466;
        uint64_t v406 = v460;
        char v407 = v473;
LABEL_232:
        sub_1BFF5B7CC(v405, v406, v407);
        swift_bridgeObjectRelease();
        return swift_release();
      case 2uLL:
        uint64_t v461 = v12;
        char v110 = v13;
        uint64_t v111 = *(void *)((v56 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        swift_retain();
        swift_retain();
        uint64_t v112 = v54;
        uint64_t v113 = v490;
        sub_1C11333C8(v52);
        uint64_t v490 = v113;
        if (v113)
        {
          swift_release();
          swift_release();
          swift_release();
          uint64_t v208 = v461;
          goto LABEL_231;
        }
        unint64_t v114 = *(void *)(v111 + 32);
        uint64_t v115 = v52;
        switch(v114 >> 61)
        {
          case 1uLL:
            uint64_t v178 = v114 & 0x1FFFFFFFFFFFFFFFLL;
            uint64_t v179 = *(void *)((v114 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v180 = *(void *)((v114 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
            unsigned __int8 v181 = *(unsigned char *)((v114 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
            id v182 = *(void **)((v114 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
            int v183 = *(unsigned __int8 *)(v178 + 48);
            uint64_t v184 = *(void *)(v178 + 72);
            a2 = v112;
            unsigned __int8 v427 = *(unsigned char *)(v178 + 48);
            unsigned __int8 v447 = v181;
            uint64_t v434 = v179;
            uint64_t v440 = v180;
            if (v183 == 255)
            {
              v244 = v182;
              unsigned __int8 v245 = v181;
              uint64_t v246 = v179;
              swift_retain();
              unsigned __int8 v247 = v245;
              uint64_t v192 = v184;
              sub_1C05DCF14(v246, v180, v247);
              v193 = v244;
              uint64_t v194 = v244;
              unsigned __int8 v195 = -1;
              goto LABEL_109;
            }
            if ((v183 & 1) == 0)
            {
              unsigned __int8 v185 = *(unsigned char *)(v178 + 48);
              uint64_t v186 = v182;
              unsigned __int8 v187 = v181;
              char v188 = v110;
              uint64_t v189 = v179;
              swift_retain();
              uint64_t v190 = v189;
              char v110 = v188;
              unsigned __int8 v191 = v187;
              uint64_t v192 = v184;
              sub_1C05DCF14(v190, v180, v191);
              v193 = v186;
              uint64_t v194 = v186;
              unsigned __int8 v195 = v185;
LABEL_109:
              sub_1C05DCF2C(v194, v195);
              swift_bridgeObjectRetain();
              uint64_t v248 = v461;
              uint64_t v249 = v478;
              goto LABEL_110;
            }
            uint64_t v423 = *(void *)(v178 + 72);
            uint64_t v467 = v11;
            uint64_t v251 = v182[3];
            uint64_t v252 = *(void *)(v251 + 16);
            if (v252)
            {
              char v474 = v13;
              v253 = v182;
              sub_1C05DCF2C(v182, v183);
              swift_retain();
              sub_1C05DCF2C(v253, v183);
              sub_1C05DCF14(v434, v180, v447);
              sub_1C05DCF2C(v253, v183);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v254 = (void **)(v251 + 56);
              do
              {
                uint64_t v255 = (uint64_t)*(v254 - 3);
                uint64_t v256 = (uint64_t)*(v254 - 2);
                char v257 = *((unsigned char *)v254 - 8);
                v258 = *v254;
                sub_1BFF5B7E0(v255, v256, v257);
                sub_1BFC3D764();
                sub_1C1149690();
                id v259 = v258;
                if (swift_dynamicCast())
                {
                  uint64_t v261 = *((void *)&v481 + 1);
                  uint64_t v260 = v482;
                  __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
                  long long v262 = v479[4];
                  long long v488 = v479[5];
                  uint64_t v489 = *((void *)v479 + 12);
                  long long v263 = v479[1];
                  long long v483 = *v479;
                  long long v484 = v263;
                  long long v264 = v479[2];
                  long long v486 = v479[3];
                  long long v487 = v262;
                  long long v485 = v264;
                  uint64_t v265 = v490;
                  (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v260 + 8))(v478, &v483, v261, v260);
                  uint64_t v490 = v265;
                  if (v265)
                  {
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                    sub_1BFF5B7CC(v255, v256, v257);
                    swift_bridgeObjectRelease();

                    sub_1C05DCEE4(v253, v427);
                    sub_1C05DCEE4(v253, v427);
                    sub_1C05DCEFC(v434, v440, v447);
                    sub_1C05DCEE4(v253, v427);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_bridgeObjectRelease();
LABEL_222:
                    char v110 = v474;
                    uint64_t v208 = v461;
                    uint64_t v11 = v467;
LABEL_231:
                    uint64_t v405 = v11;
                    uint64_t v406 = v208;
                    char v407 = v110;
                    goto LABEL_232;
                  }
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                }
                else
                {
                  uint64_t v482 = 0;
                  long long v480 = 0u;
                  long long v481 = 0u;
                  sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
                }
                sub_1BFF5B7CC(v255, v256, v257);

                v254 += 4;
                --v252;
              }
              while (v252);
              swift_bridgeObjectRelease();
              uint64_t v294 = v490;
              char v110 = v474;
              uint64_t v208 = v461;
              v295 = v253;
            }
            else
            {
              v295 = v182;
              sub_1C05DCF2C(v182, v183);
              swift_retain();
              sub_1C05DCF2C(v295, v183);
              sub_1C05DCF14(v434, v180, v447);
              sub_1C05DCF2C(v295, v183);
              swift_bridgeObjectRetain();
              uint64_t v208 = v461;
              uint64_t v294 = v490;
            }
            v307 = (void *)v295[4];
            sub_1BFC3D764();
            sub_1C1149690();
            id v308 = v307;
            uint64_t v11 = v467;
            if (swift_dynamicCast())
            {
              v193 = v295;
              uint64_t v309 = *((void *)&v481 + 1);
              uint64_t v310 = v482;
              __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
              long long v311 = v479[4];
              long long v488 = v479[5];
              uint64_t v489 = *((void *)v479 + 12);
              long long v312 = v479[1];
              long long v483 = *v479;
              long long v484 = v312;
              long long v313 = v479[2];
              long long v486 = v479[3];
              long long v487 = v311;
              long long v485 = v313;
              (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v310 + 8))(v478, &v483, v309, v310);
              if (v294)
              {
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                sub_1C05DCEE4(v295, v427);
                sub_1C05DCEE4(v295, v427);
                sub_1C05DCEFC(v434, v440, v447);
                sub_1C05DCEE4(v295, v427);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                uint64_t v11 = v467;
                goto LABEL_231;
              }
              uint64_t v490 = 0;
              uint64_t v248 = v208;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
              sub_1C05DCEE4(v295, v427);
              sub_1C05DCEE4(v295, v427);
              uint64_t v249 = v478;
              a2 = v479;
              uint64_t v8 = v457;
              uint64_t v192 = v423;
              uint64_t v11 = v467;
            }
            else
            {
              uint64_t v490 = v294;
              uint64_t v248 = v208;
              uint64_t v482 = 0;
              long long v480 = 0u;
              long long v481 = 0u;
              sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
              sub_1C05DCEE4(v295, v427);
              v193 = v295;
              sub_1C05DCEE4(v295, v427);
              uint64_t v249 = v478;
              a2 = v479;
              uint64_t v8 = v457;
              uint64_t v192 = v423;
            }
LABEL_110:
            uint64_t v115 = v249;
            uint64_t v250 = v490;
            sub_1C1136FC4(v249, a2, v192);
            uint64_t v490 = v250;
            if (v250)
            {
              sub_1C05DCEFC(v434, v440, v447);
              sub_1C05DCEE4(v193, v427);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t v208 = v248;
              goto LABEL_231;
            }
            sub_1C05DCEFC(v434, v440, v447);
            sub_1C05DCEE4(v193, v427);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v208 = v248;
LABEL_198:
            sub_1BFF5B7CC(v11, v208, v110);
            swift_release();
            uint64_t v5 = v448;
            uint64_t v9 = v476;
            uint64_t v7 = v115;
            break;
          case 2uLL:
            uint64_t v196 = *(void *)((v114 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            swift_retain();
            swift_retain();
            uint64_t v197 = v52;
            a2 = v112;
            uint64_t v198 = v490;
            sub_1C11333C8(v197);
            uint64_t v490 = v198;
            if (v198)
            {
              swift_release();
              swift_release();
              swift_release();
              uint64_t v208 = v461;
              goto LABEL_230;
            }
            unint64_t v199 = *(void *)(v196 + 32);
            char v475 = v13;
            switch(v199 >> 61)
            {
              case 1uLL:
                uint64_t v267 = v199 & 0x1FFFFFFFFFFFFFFFLL;
                uint64_t v269 = *(void *)((v199 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                uint64_t v268 = *(void *)((v199 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
                unsigned __int8 v270 = *(unsigned char *)((v199 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
                v271 = *(void **)((v199 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
                int v272 = *(unsigned __int8 *)((v199 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
                uint64_t v273 = *(void *)(v267 + 72);
                uint64_t v418 = v268;
                unsigned __int8 v429 = v272;
                v441 = v271;
                unsigned __int8 v436 = v270;
                uint64_t v415 = v269;
                if (v272 == 255)
                {
                  unsigned __int8 v314 = v270;
                  uint64_t v315 = v268;
                  swift_retain();
                  unsigned __int8 v316 = v314;
                  uint64_t v275 = v273;
                  sub_1C05DCF14(v269, v315, v316);
                  sub_1C05DCF2C(v441, 0xFFu);
                  goto LABEL_148;
                }
                uint64_t v412 = *(void *)(v267 + 72);
                if ((v272 & 1) == 0)
                {
                  uint64_t v274 = v268;
                  swift_retain();
                  sub_1C05DCF14(v269, v274, v436);
                  sub_1C05DCF2C(v441, v272);
                  uint64_t v275 = v273;
LABEL_148:
                  swift_bridgeObjectRetain();
                  uint64_t v208 = v461;
                  char v110 = v475;
                  uint64_t v317 = v115;
                  goto LABEL_149;
                }
                uint64_t v468 = v11;
                uint64_t v319 = v271[3];
                uint64_t v320 = *(void *)(v319 + 16);
                if (v320)
                {
                  unsigned __int8 v321 = v272;
                  unsigned __int8 v322 = v272;
                  v323 = v271;
                  sub_1C05DCF2C(v271, v322);
                  swift_retain();
                  sub_1C05DCF2C(v323, v321);
                  sub_1C05DCF14(v269, v418, v436);
                  sub_1C05DCF2C(v323, v321);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v324 = (void **)(v319 + 56);
                  do
                  {
                    uint64_t v325 = (uint64_t)*(v324 - 3);
                    uint64_t v326 = (uint64_t)*(v324 - 2);
                    char v327 = *((unsigned char *)v324 - 8);
                    v328 = *v324;
                    sub_1BFF5B7E0(v325, v326, v327);
                    sub_1BFC3D764();
                    sub_1C1149690();
                    id v329 = v328;
                    if (swift_dynamicCast())
                    {
                      uint64_t v331 = *((void *)&v481 + 1);
                      uint64_t v330 = v482;
                      __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
                      long long v332 = v479[4];
                      long long v488 = v479[5];
                      uint64_t v489 = *((void *)v479 + 12);
                      long long v333 = v479[1];
                      long long v483 = *v479;
                      long long v484 = v333;
                      long long v334 = v479[2];
                      long long v486 = v479[3];
                      long long v487 = v332;
                      long long v485 = v334;
                      uint64_t v335 = v490;
                      (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v330 + 8))(v478, &v483, v331, v330);
                      uint64_t v490 = v335;
                      if (v335)
                      {
                        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                        sub_1BFF5B7CC(v325, v326, v327);
                        swift_bridgeObjectRelease();

                        sub_1C05DCEE4(v441, v429);
                        sub_1C05DCEE4(v441, v429);
                        sub_1C05DCEFC(v415, v418, v436);
                        sub_1C05DCEE4(v441, v429);
                        swift_release();
                        swift_release();
                        swift_bridgeObjectRelease();
                        swift_release();
                        swift_release();
LABEL_229:
                        char v110 = v475;
                        uint64_t v208 = v461;
                        uint64_t v11 = v468;
LABEL_230:
                        swift_release();
                        swift_release();
                        goto LABEL_231;
                      }
                      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                    }
                    else
                    {
                      uint64_t v482 = 0;
                      long long v480 = 0u;
                      long long v481 = 0u;
                      sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
                    }
                    sub_1BFF5B7CC(v325, v326, v327);

                    v324 += 4;
                    --v320;
                  }
                  while (v320);
                  swift_bridgeObjectRelease();
                  uint64_t v360 = v490;
                  char v110 = v475;
                  uint64_t v208 = v461;
                  v361 = v441;
                }
                else
                {
                  v361 = v271;
                  sub_1C05DCF2C(v271, v272);
                  swift_retain();
                  sub_1C05DCF2C(v361, v272);
                  sub_1C05DCF14(v269, v418, v436);
                  sub_1C05DCF2C(v361, v272);
                  swift_bridgeObjectRetain();
                  uint64_t v208 = v461;
                  char v110 = v475;
                  uint64_t v360 = v490;
                }
                v362 = (void *)v361[4];
                sub_1BFC3D764();
                sub_1C1149690();
                id v363 = v362;
                uint64_t v11 = v468;
                if (swift_dynamicCast())
                {
                  uint64_t v364 = *((void *)&v481 + 1);
                  uint64_t v365 = v482;
                  __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
                  long long v366 = v479[4];
                  long long v488 = v479[5];
                  uint64_t v489 = *((void *)v479 + 12);
                  long long v367 = v479[1];
                  long long v483 = *v479;
                  long long v484 = v367;
                  long long v368 = v479[2];
                  long long v486 = v479[3];
                  long long v487 = v366;
                  long long v485 = v368;
                  (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v365 + 8))(v478, &v483, v364, v365);
                  uint64_t v490 = v360;
                  if (v360)
                  {
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                    sub_1C05DCEE4(v441, v429);
                    sub_1C05DCEE4(v441, v429);
                    sub_1C05DCEFC(v415, v418, v436);
                    sub_1C05DCEE4(v441, v429);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_bridgeObjectRelease();
                    uint64_t v11 = v468;
                    goto LABEL_230;
                  }
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                  sub_1C05DCEE4(v441, v429);
                  sub_1C05DCEE4(v441, v429);
                  uint64_t v317 = v478;
                  a2 = v479;
                  uint64_t v8 = v457;
                  uint64_t v275 = v412;
                  uint64_t v11 = v468;
                }
                else
                {
                  uint64_t v490 = v360;
                  uint64_t v482 = 0;
                  long long v480 = 0u;
                  long long v481 = 0u;
                  sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
                  sub_1C05DCEE4(v361, v429);
                  sub_1C05DCEE4(v361, v429);
                  uint64_t v317 = v478;
                  a2 = v479;
                  uint64_t v8 = v457;
                  uint64_t v275 = v412;
                }
LABEL_149:
                uint64_t v115 = v317;
                uint64_t v318 = v490;
                sub_1C1136FC4(v317, a2, v275);
                uint64_t v490 = v318;
                if (v318)
                {
                  sub_1C05DCEFC(v415, v418, v436);
                  sub_1C05DCEE4(v441, v429);
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  goto LABEL_230;
                }
                sub_1C05DCEFC(v415, v418, v436);
                sub_1C05DCEE4(v441, v429);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
LABEL_197:
                swift_release();
                swift_release();
                break;
              case 2uLL:
                uint64_t v276 = *(void *)((v199 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                swift_retain();
                swift_retain();
                uint64_t v277 = v490;
                sub_1C11333C8(v115);
                uint64_t v490 = v277;
                if (v277)
                {
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  uint64_t v208 = v461;
                  goto LABEL_230;
                }
                unint64_t v278 = *(void *)(v276 + 32);
                uint64_t v208 = v461;
                switch(v278 >> 61)
                {
                  case 1uLL:
                    uint64_t v337 = v278 & 0x1FFFFFFFFFFFFFFFLL;
                    uint64_t v339 = *(void *)((v278 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                    uint64_t v338 = *(void *)((v278 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
                    unsigned __int8 v340 = *(unsigned char *)((v278 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
                    v341 = *(void **)((v278 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
                    int v342 = *(unsigned __int8 *)((v278 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
                    uint64_t v343 = *(void *)(v337 + 72);
                    v430 = v341;
                    uint64_t v425 = v343;
                    unsigned __int8 v420 = v342;
                    unsigned __int8 v411 = v340;
                    uint64_t v413 = v339;
                    uint64_t v417 = v338;
                    if (v342 == 255)
                    {
                      uint64_t v369 = v338;
                      uint64_t v370 = v339;
                      swift_retain();
                      uint64_t v371 = v369;
                      unsigned __int8 v347 = v411;
                      sub_1C05DCF14(v370, v371, v411);
                      sub_1C05DCF2C(v341, 0xFFu);
                      swift_bridgeObjectRetain();
                      char v110 = v475;
                    }
                    else
                    {
                      char v110 = v475;
                      if (v342)
                      {
                        uint64_t v470 = v11;
                        v374 = v430;
                        uint64_t v375 = v430[3];
                        uint64_t v376 = *(void *)(v375 + 16);
                        if (v376)
                        {
                          swift_retain();
                          sub_1C05DCF14(v413, v417, v411);
                          sub_1C05DCF2C(v430, v420);
                          swift_bridgeObjectRetain();
                          sub_1C05DCF2C(v430, v420);
                          swift_bridgeObjectRetain();
                          v377 = (void **)(v375 + 56);
                          uint64_t v378 = v490;
                          do
                          {
                            uint64_t v379 = (uint64_t)*(v377 - 3);
                            uint64_t v380 = (uint64_t)*(v377 - 2);
                            char v381 = *((unsigned char *)v377 - 8);
                            v382 = *v377;
                            sub_1BFF5B7E0(v379, v380, v381);
                            sub_1BFC3D764();
                            sub_1C1149690();
                            id v383 = v382;
                            if (swift_dynamicCast())
                            {
                              uint64_t v490 = v378;
                              uint64_t v385 = *((void *)&v481 + 1);
                              uint64_t v384 = v482;
                              __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
                              long long v386 = v479[4];
                              long long v488 = v479[5];
                              uint64_t v489 = *((void *)v479 + 12);
                              long long v387 = v479[1];
                              long long v483 = *v479;
                              long long v484 = v387;
                              long long v388 = v479[2];
                              long long v486 = v479[3];
                              long long v487 = v386;
                              long long v485 = v388;
                              uint64_t v389 = v490;
                              (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v384 + 8))(v478, &v483, v385, v384);
                              uint64_t v378 = v389;
                              if (v389)
                              {
                                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                                sub_1BFF5B7CC(v379, v380, v381);
                                swift_bridgeObjectRelease();

                                sub_1C05DCEE4(v430, v420);
                                sub_1C05DCEFC(v413, v417, v411);
                                sub_1C05DCEE4(v430, v420);
                                swift_release();
                                swift_release();
                                swift_release();
                                swift_bridgeObjectRelease();
                                char v110 = v475;
                                uint64_t v208 = v461;
                                uint64_t v11 = v470;
LABEL_245:
                                swift_release();
                                swift_release();
                                swift_release();
                                goto LABEL_230;
                              }
                              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                            }
                            else
                            {
                              uint64_t v482 = 0;
                              long long v480 = 0u;
                              long long v481 = 0u;
                              sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
                            }
                            sub_1BFF5B7CC(v379, v380, v381);

                            v377 += 4;
                            --v376;
                          }
                          while (v376);
                          swift_bridgeObjectRelease();
                          char v110 = v475;
                          uint64_t v208 = v461;
                          v374 = v430;
                        }
                        else
                        {
                          swift_retain();
                          sub_1C05DCF14(v413, v417, v411);
                          sub_1C05DCF2C(v430, v420);
                          swift_bridgeObjectRetain();
                          sub_1C05DCF2C(v430, v420);
                          uint64_t v378 = v490;
                        }
                        v398 = (void *)v374[4];
                        sub_1BFC3D764();
                        sub_1C1149690();
                        id v399 = v398;
                        uint64_t v11 = v470;
                        if (swift_dynamicCast())
                        {
                          uint64_t v400 = *((void *)&v481 + 1);
                          uint64_t v401 = v482;
                          __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
                          long long v402 = v479[4];
                          long long v488 = v479[5];
                          uint64_t v489 = *((void *)v479 + 12);
                          long long v403 = v479[1];
                          long long v483 = *v479;
                          long long v484 = v403;
                          long long v404 = v479[2];
                          long long v486 = v479[3];
                          long long v487 = v402;
                          long long v485 = v404;
                          (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v401 + 8))(v478, &v483, v400, v401);
                          uint64_t v490 = v378;
                          if (v378)
                          {
                            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                            sub_1C05DCEE4(v430, v420);
                            sub_1C05DCEFC(v413, v417, v411);
                            sub_1C05DCEE4(v430, v420);
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_bridgeObjectRelease();
                            uint64_t v11 = v470;
                            goto LABEL_245;
                          }
                          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                          sub_1C05DCEE4(v430, v420);
                          uint64_t v115 = v478;
                          a2 = v479;
                          uint64_t v8 = v457;
                          uint64_t v343 = v425;
                          uint64_t v11 = v470;
                          unsigned __int8 v347 = v411;
                        }
                        else
                        {
                          uint64_t v490 = v378;
                          uint64_t v482 = 0;
                          long long v480 = 0u;
                          long long v481 = 0u;
                          sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
                          sub_1C05DCEE4(v374, v420);
                          uint64_t v115 = v478;
                          a2 = v479;
                          uint64_t v8 = v457;
                          uint64_t v343 = v425;
                          unsigned __int8 v347 = v411;
                        }
                      }
                      else
                      {
                        uint64_t v344 = v338;
                        uint64_t v345 = v339;
                        swift_retain();
                        uint64_t v346 = v344;
                        unsigned __int8 v347 = v411;
                        sub_1C05DCF14(v345, v346, v411);
                        sub_1C05DCF2C(v430, v420);
                        swift_bridgeObjectRetain();
                      }
                    }
                    uint64_t v372 = v343;
                    uint64_t v373 = v490;
                    sub_1C1136FC4(v115, a2, v372);
                    uint64_t v490 = v373;
                    if (!v373)
                    {
                      sub_1C05DCEFC(v413, v417, v347);
                      sub_1C05DCEE4(v430, v420);
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_bridgeObjectRelease();
                      goto LABEL_197;
                    }
                    sub_1C05DCEFC(v413, v417, v347);
                    sub_1C05DCEE4(v430, v420);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_bridgeObjectRelease();
                    goto LABEL_245;
                  case 2uLL:
                    uint64_t v348 = *(void *)((v278 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                    swift_retain();
                    swift_retain();
                    uint64_t v349 = v490;
                    sub_1C11333C8(v115);
                    if (v349)
                    {
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                      goto LABEL_230;
                    }
                    *(void *)&long long v480 = *(void *)(v348 + 32);
                    long long v350 = a2[4];
                    long long v488 = a2[5];
                    uint64_t v489 = *((void *)a2 + 12);
                    long long v351 = a2[1];
                    long long v483 = *a2;
                    long long v484 = v351;
                    long long v352 = a2[2];
                    long long v486 = a2[3];
                    long long v487 = v350;
                    long long v485 = v352;
                    swift_retain();
                    sub_1C05CF9C4(v115, &v483);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    uint64_t v490 = 0;
                    uint64_t v115 = v478;
                    a2 = v479;
                    uint64_t v8 = v457;
                    goto LABEL_197;
                  case 3uLL:
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    goto LABEL_166;
                  case 4uLL:
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
LABEL_166:
                    swift_release();
                    goto LABEL_197;
                  default:
                    if (*(unsigned char *)(v278 + 48))
                    {
                      uint64_t v469 = v11;
                      uint64_t v279 = *(void *)(v278 + 16);
                      uint64_t v280 = *(void *)(v278 + 24);
                      char v281 = *(unsigned char *)(v278 + 32);
                      v282 = *(void **)(v278 + 40);
                      uint64_t v283 = *(void *)(v282[3] + 16);
                      uint64_t v416 = v279;
                      char v424 = v281;
                      uint64_t v419 = v280;
                      if (v283)
                      {
                        uint64_t v284 = v282[3];
                        sub_1C01DCFFC(v282, 1);
                        sub_1C01DCFFC(v282, 1);
                        swift_retain();
                        sub_1C04B5340(v279, v280, v281);
                        v410 = v282;
                        sub_1C01DCFFC(v282, 1);
                        swift_retain();
                        swift_bridgeObjectRetain();
                        v285 = (void **)(v284 + 56);
                        uint64_t v286 = v490;
                        do
                        {
                          uint64_t v296 = (uint64_t)*(v285 - 3);
                          uint64_t v297 = (uint64_t)*(v285 - 2);
                          char v298 = *((unsigned char *)v285 - 8);
                          v299 = *v285;
                          sub_1BFF5B7E0(v296, v297, v298);
                          sub_1BFC3D764();
                          sub_1C1149690();
                          id v300 = v299;
                          if (swift_dynamicCast())
                          {
                            uint64_t v490 = v286;
                            uint64_t v302 = *((void *)&v481 + 1);
                            uint64_t v301 = v482;
                            __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
                            long long v303 = v479[4];
                            long long v488 = v479[5];
                            uint64_t v489 = *((void *)v479 + 12);
                            long long v304 = v479[1];
                            long long v483 = *v479;
                            long long v484 = v304;
                            long long v305 = v479[2];
                            long long v486 = v479[3];
                            long long v487 = v303;
                            long long v485 = v305;
                            uint64_t v306 = v490;
                            (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v301 + 8))(v478, &v483, v302, v301);
                            uint64_t v286 = v306;
                            if (v306)
                            {
                              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                              sub_1BFF5B7CC(v296, v297, v298);
                              swift_bridgeObjectRelease();

                              sub_1C01DD018(v410, 1);
                              sub_1C01DD018(v410, 1);
                              sub_1C04B5360(v416, v419, v424);
                              sub_1C01DD018(v410, 1);
                              swift_release();
                              swift_release();
                              swift_release();
LABEL_239:
                              swift_release();
                              swift_release();
                              swift_release();
                              swift_release();
                              char v110 = v475;
                              uint64_t v208 = v461;
                              uint64_t v11 = v469;
                              goto LABEL_230;
                            }
                            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                          }
                          else
                          {
                            uint64_t v482 = 0;
                            long long v480 = 0u;
                            long long v481 = 0u;
                            sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
                          }
                          sub_1BFF5B7CC(v296, v297, v298);

                          v285 += 4;
                          --v283;
                        }
                        while (v283);
                        swift_bridgeObjectRelease();
                        char v110 = v475;
                        uint64_t v208 = v461;
                        v390 = v410;
                      }
                      else
                      {
                        sub_1C01DCFFC(v282, 1);
                        sub_1C01DCFFC(v282, 1);
                        swift_retain();
                        sub_1C04B5340(v279, v280, v281);
                        sub_1C01DCFFC(v282, 1);
                        swift_retain();
                        uint64_t v286 = v490;
                        v390 = v282;
                      }
                      v391 = (void *)v390[4];
                      sub_1BFC3D764();
                      sub_1C1149690();
                      id v392 = v391;
                      uint64_t v11 = v469;
                      if (swift_dynamicCast())
                      {
                        uint64_t v393 = *((void *)&v481 + 1);
                        uint64_t v394 = v482;
                        __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
                        long long v395 = v479[4];
                        long long v488 = v479[5];
                        uint64_t v489 = *((void *)v479 + 12);
                        long long v396 = v479[1];
                        long long v483 = *v479;
                        long long v484 = v396;
                        long long v397 = v479[2];
                        long long v486 = v479[3];
                        long long v487 = v395;
                        long long v485 = v397;
                        (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v394 + 8))(v478, &v483, v393, v394);
                        uint64_t v490 = v286;
                        if (v286)
                        {
                          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                          sub_1C01DD018(v390, 1);
                          sub_1C01DD018(v390, 1);
                          sub_1C04B5360(v416, v419, v424);
                          sub_1C01DD018(v390, 1);
                          swift_release();
                          swift_release();
                          swift_release();
                          goto LABEL_239;
                        }
                        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                        sub_1C01DD018(v390, 1);
                        sub_1C01DD018(v390, 1);
                        sub_1C04B5360(v416, v419, v424);
                        sub_1C01DD018(v390, 1);
                        swift_release();
                        swift_release();
                        swift_release();
                        uint64_t v115 = v478;
                        a2 = v479;
                        uint64_t v8 = v457;
                        uint64_t v11 = v469;
                      }
                      else
                      {
                        uint64_t v490 = v286;
                        uint64_t v482 = 0;
                        long long v480 = 0u;
                        long long v481 = 0u;
                        sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
                        sub_1C01DD018(v390, 1);
                        sub_1C01DD018(v390, 1);
                        sub_1C04B5360(v416, v419, v424);
                        sub_1C01DD018(v390, 1);
                        swift_release();
                        swift_release();
                        swift_release();
                        uint64_t v115 = v478;
                        a2 = v479;
                        uint64_t v8 = v457;
                      }
                      swift_release();
                    }
                    else
                    {
                      swift_release();
                      swift_release();
                    }
                    swift_release();
                    swift_release();
                    swift_release();
                    break;
                }
                goto LABEL_197;
              case 3uLL:
                goto LABEL_119;
              case 4uLL:
                swift_release();
                swift_release();
                swift_release();
                goto LABEL_130;
              default:
                if (*(unsigned char *)(v199 + 48))
                {
                  uint64_t v468 = v11;
                  uint64_t v201 = *(void *)(v199 + 16);
                  uint64_t v200 = *(void *)(v199 + 24);
                  char v202 = *(unsigned char *)(v199 + 32);
                  unint64_t v203 = *(void **)(v199 + 40);
                  uint64_t v204 = *(void *)(v203[3] + 16);
                  uint64_t v422 = v201;
                  char v435 = v202;
                  uint64_t v428 = v200;
                  if (v204)
                  {
                    uint64_t v205 = v203[3];
                    sub_1C01DCFFC(v203, 1);
                    sub_1C01DCFFC(v203, 1);
                    sub_1C04B5340(v201, v200, v202);
                    v414 = v203;
                    sub_1C01DCFFC(v203, 1);
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_retain();
                    uint64_t v206 = (void **)(v205 + 56);
                    uint64_t v207 = v490;
                    do
                    {
                      uint64_t v221 = (uint64_t)*(v206 - 3);
                      uint64_t v222 = (uint64_t)*(v206 - 2);
                      char v223 = *((unsigned char *)v206 - 8);
                      long long v224 = *v206;
                      sub_1BFF5B7E0(v221, v222, v223);
                      sub_1BFC3D764();
                      sub_1C1149690();
                      id v225 = v224;
                      if (swift_dynamicCast())
                      {
                        uint64_t v490 = v207;
                        uint64_t v227 = *((void *)&v481 + 1);
                        uint64_t v226 = v482;
                        __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
                        long long v228 = v479[4];
                        long long v488 = v479[5];
                        uint64_t v489 = *((void *)v479 + 12);
                        long long v229 = v479[1];
                        long long v483 = *v479;
                        long long v484 = v229;
                        long long v230 = v479[2];
                        long long v486 = v479[3];
                        long long v487 = v228;
                        long long v485 = v230;
                        uint64_t v231 = v490;
                        (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v226 + 8))(v478, &v483, v227, v226);
                        uint64_t v207 = v231;
                        if (v231)
                        {
                          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                          sub_1BFF5B7CC(v221, v222, v223);
                          swift_bridgeObjectRelease();

                          sub_1C01DD018(v414, 1);
                          sub_1C01DD018(v414, 1);
                          sub_1C04B5360(v422, v428, v435);
                          sub_1C01DD018(v414, 1);
                          swift_release();
                          swift_release();
                          swift_release();
                          swift_release();
                          swift_release();
                          goto LABEL_229;
                        }
                        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                      }
                      else
                      {
                        uint64_t v482 = 0;
                        long long v480 = 0u;
                        long long v481 = 0u;
                        sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
                      }
                      sub_1BFF5B7CC(v221, v222, v223);

                      v206 += 4;
                      --v204;
                    }
                    while (v204);
                    swift_bridgeObjectRelease();
                    char v110 = v475;
                    uint64_t v208 = v461;
                    v336 = v414;
                  }
                  else
                  {
                    sub_1C01DCFFC(v203, 1);
                    sub_1C01DCFFC(v203, 1);
                    sub_1C04B5340(v201, v200, v202);
                    sub_1C01DCFFC(v203, 1);
                    swift_retain();
                    swift_retain();
                    uint64_t v208 = v461;
                    char v110 = v475;
                    uint64_t v207 = v490;
                    v336 = v203;
                  }
                  v353 = (void *)v336[4];
                  sub_1BFC3D764();
                  sub_1C1149690();
                  id v354 = v353;
                  uint64_t v11 = v468;
                  if (swift_dynamicCast())
                  {
                    uint64_t v355 = *((void *)&v481 + 1);
                    uint64_t v356 = v482;
                    __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
                    long long v357 = v479[4];
                    long long v488 = v479[5];
                    uint64_t v489 = *((void *)v479 + 12);
                    long long v358 = v479[1];
                    long long v483 = *v479;
                    long long v484 = v358;
                    long long v359 = v479[2];
                    long long v486 = v479[3];
                    long long v487 = v357;
                    long long v485 = v359;
                    (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v356 + 8))(v478, &v483, v355, v356);
                    if (v207)
                    {
                      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                      sub_1C01DD018(v336, 1);
                      sub_1C01DD018(v336, 1);
                      sub_1C04B5360(v422, v428, v435);
                      sub_1C01DD018(v336, 1);
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                      uint64_t v11 = v468;
                      goto LABEL_230;
                    }
                    uint64_t v490 = 0;
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                    sub_1C01DD018(v336, 1);
                    sub_1C01DD018(v336, 1);
                    sub_1C04B5360(v422, v428, v435);
                    sub_1C01DD018(v336, 1);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    uint64_t v115 = v478;
                    a2 = v479;
                    uint64_t v8 = v457;
                    uint64_t v11 = v468;
                  }
                  else
                  {
                    uint64_t v490 = v207;
                    uint64_t v482 = 0;
                    long long v480 = 0u;
                    long long v481 = 0u;
                    sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
                    sub_1C01DD018(v336, 1);
                    sub_1C01DD018(v336, 1);
                    sub_1C04B5360(v422, v428, v435);
                    sub_1C01DD018(v336, 1);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    uint64_t v115 = v478;
                    a2 = v479;
                    uint64_t v8 = v457;
                  }
                }
                else
                {
LABEL_119:
                  swift_release();
                  swift_release();
LABEL_130:
                  swift_release();
                  uint64_t v208 = v461;
                }
                goto LABEL_197;
            }
            goto LABEL_198;
          case 3uLL:
            swift_release();
            swift_release();
            goto LABEL_86;
          case 4uLL:
            swift_release();
            swift_release();
            swift_release();
LABEL_86:
            swift_release();
            uint64_t v208 = v461;
            a2 = v112;
            goto LABEL_198;
          default:
            if (*(unsigned char *)(v114 + 48))
            {
              uint64_t v467 = v11;
              uint64_t v116 = *(void *)(v114 + 16);
              uint64_t v117 = *(void *)(v114 + 24);
              char v118 = *(unsigned char *)(v114 + 32);
              uint64_t v119 = *(void **)(v114 + 40);
              uint64_t v120 = *(void *)(v119[3] + 16);
              uint64_t v433 = v116;
              char v446 = v118;
              uint64_t v439 = v117;
              if (v120)
              {
                char v474 = v110;
                uint64_t v121 = v119[3];
                sub_1C01DCFFC(v119, 1);
                sub_1C01DCFFC(v119, 1);
                sub_1C04B5340(v116, v117, v118);
                v421 = v119;
                sub_1C01DCFFC(v119, 1);
                swift_retain();
                swift_bridgeObjectRetain();
                swift_retain();
                uint64_t v122 = (void **)(v121 + 56);
                uint64_t v123 = v490;
                do
                {
                  uint64_t v134 = (uint64_t)*(v122 - 3);
                  uint64_t v135 = (uint64_t)*(v122 - 2);
                  char v136 = *((unsigned char *)v122 - 8);
                  uint64_t v137 = *v122;
                  sub_1BFF5B7E0(v134, v135, v136);
                  sub_1BFC3D764();
                  sub_1C1149690();
                  id v138 = v137;
                  if (swift_dynamicCast())
                  {
                    uint64_t v490 = v123;
                    uint64_t v140 = *((void *)&v481 + 1);
                    uint64_t v139 = v482;
                    __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
                    long long v141 = v479[4];
                    long long v488 = v479[5];
                    uint64_t v489 = *((void *)v479 + 12);
                    long long v142 = v479[1];
                    long long v483 = *v479;
                    long long v484 = v142;
                    long long v143 = v479[2];
                    long long v486 = v479[3];
                    long long v487 = v141;
                    long long v485 = v143;
                    uint64_t v144 = v490;
                    (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v139 + 8))(v478, &v483, v140, v139);
                    uint64_t v123 = v144;
                    if (v144)
                    {
                      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                      sub_1BFF5B7CC(v134, v135, v136);
                      swift_bridgeObjectRelease();

                      sub_1C01DD018(v421, 1);
                      sub_1C01DD018(v421, 1);
                      sub_1C04B5360(v433, v439, v446);
                      sub_1C01DD018(v421, 1);
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                      goto LABEL_222;
                    }
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                  }
                  else
                  {
                    uint64_t v482 = 0;
                    long long v480 = 0u;
                    long long v481 = 0u;
                    sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
                  }
                  sub_1BFF5B7CC(v134, v135, v136);

                  v122 += 4;
                  --v120;
                }
                while (v120);
                swift_bridgeObjectRelease();
                char v110 = v474;
                uint64_t v208 = v461;
                v266 = v421;
              }
              else
              {
                sub_1C01DCFFC(v119, 1);
                sub_1C01DCFFC(v119, 1);
                sub_1C04B5340(v116, v117, v118);
                sub_1C01DCFFC(v119, 1);
                swift_retain();
                swift_retain();
                uint64_t v208 = v461;
                uint64_t v123 = v490;
                v266 = v119;
              }
              v287 = (void *)v266[4];
              sub_1BFC3D764();
              sub_1C1149690();
              id v288 = v287;
              uint64_t v11 = v467;
              if (swift_dynamicCast())
              {
                uint64_t v289 = *((void *)&v481 + 1);
                uint64_t v290 = v482;
                __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
                long long v291 = v479[4];
                long long v488 = v479[5];
                uint64_t v489 = *((void *)v479 + 12);
                long long v292 = v479[1];
                long long v483 = *v479;
                long long v484 = v292;
                long long v293 = v479[2];
                long long v486 = v479[3];
                long long v487 = v291;
                long long v485 = v293;
                (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v290 + 8))(v478, &v483, v289, v290);
                if (v123)
                {
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                  sub_1C01DD018(v266, 1);
                  sub_1C01DD018(v266, 1);
                  sub_1C04B5360(v433, v439, v446);
                  sub_1C01DD018(v266, 1);
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  uint64_t v11 = v467;
                  goto LABEL_231;
                }
                uint64_t v490 = 0;
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                sub_1C01DD018(v266, 1);
                sub_1C01DD018(v266, 1);
                sub_1C04B5360(v433, v439, v446);
                sub_1C01DD018(v266, 1);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v115 = v478;
                a2 = v479;
                uint64_t v8 = v457;
                uint64_t v11 = v467;
              }
              else
              {
                uint64_t v490 = v123;
                uint64_t v482 = 0;
                long long v480 = 0u;
                long long v481 = 0u;
                sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
                sub_1C01DD018(v266, 1);
                sub_1C01DD018(v266, 1);
                sub_1C04B5360(v433, v439, v446);
                sub_1C01DD018(v266, 1);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v115 = v478;
                a2 = v479;
                uint64_t v8 = v457;
              }
            }
            else
            {
              a2 = v112;
              swift_release();
              swift_release();
              swift_release();
              uint64_t v208 = v461;
            }
            goto LABEL_198;
        }
        goto LABEL_4;
      case 3uLL:
        goto LABEL_3;
      case 4uLL:
        swift_release();
        goto LABEL_3;
      default:
        if ((*(unsigned char *)(v56 + 48) & 1) == 0)
        {
LABEL_3:
          swift_release();
          sub_1BFF5B7CC(v11, v12, v13);
          swift_release();
          uint64_t v5 = v448;
          uint64_t v9 = v476;
          uint64_t v7 = v52;
          a2 = v54;
          goto LABEL_4;
        }
        uint64_t v466 = v11;
        uint64_t v57 = *(void *)(v56 + 16);
        uint64_t v58 = *(void *)(v56 + 24);
        char v59 = *(unsigned char *)(v56 + 32);
        uint64_t v60 = *(void **)(v56 + 40);
        uint64_t v61 = *(void *)(v60[3] + 16);
        char v453 = v59;
        uint64_t v450 = v58;
        if (v61)
        {
          uint64_t v460 = v12;
          char v473 = v13;
          uint64_t v62 = v60[3];
          sub_1C01DCFFC(v60, 1);
          sub_1C01DCFFC(v60, 1);
          uint64_t v431 = v57;
          sub_1C04B5340(v57, v58, v59);
          v437 = v60;
          sub_1C01DCFFC(v60, 1);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v63 = (void **)(v62 + 56);
          uint64_t v64 = v490;
          do
          {
            uint64_t v66 = (uint64_t)*(v63 - 3);
            uint64_t v65 = (uint64_t)*(v63 - 2);
            char v67 = *((unsigned char *)v63 - 8);
            long long v68 = *v63;
            sub_1BFF5B7E0(v66, v65, v67);
            sub_1BFC3D764();
            sub_1C1149690();
            id v69 = v68;
            if (swift_dynamicCast())
            {
              uint64_t v490 = v64;
              uint64_t v70 = *((void *)&v481 + 1);
              uint64_t v71 = v482;
              __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
              long long v72 = v479[4];
              long long v488 = v479[5];
              uint64_t v489 = *((void *)v479 + 12);
              long long v73 = v479[1];
              long long v483 = *v479;
              long long v484 = v73;
              long long v74 = v479[2];
              long long v486 = v479[3];
              long long v487 = v72;
              long long v485 = v74;
              uint64_t v75 = v490;
              (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v71 + 8))(v478, &v483, v70, v71);
              uint64_t v64 = v75;
              if (v75)
              {
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
                sub_1BFF5B7CC(v66, v65, v67);
                swift_bridgeObjectRelease();

                sub_1C01DD018(v437, 1);
                sub_1C01DD018(v437, 1);
                sub_1C04B5360(v431, v450, v453);
                sub_1C01DD018(v437, 1);
                swift_release();
                swift_release();
                swift_release();
                goto LABEL_215;
              }
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
            }
            else
            {
              uint64_t v482 = 0;
              long long v480 = 0u;
              long long v481 = 0u;
              sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
            }
            sub_1BFF5B7CC(v66, v65, v67);

            v63 += 4;
            --v61;
          }
          while (v61);
          swift_bridgeObjectRelease();
          char v13 = v473;
          uint64_t v12 = v460;
          uint64_t v177 = v431;
          uint64_t v60 = v437;
        }
        else
        {
          sub_1C01DCFFC(v60, 1);
          sub_1C01DCFFC(v60, 1);
          sub_1C04B5340(v57, v58, v59);
          sub_1C01DCFFC(v60, 1);
          swift_retain();
          swift_retain();
          uint64_t v64 = v490;
          uint64_t v177 = v57;
        }
        long long v209 = (void *)v60[4];
        sub_1BFC3D764();
        sub_1C1149690();
        id v210 = v209;
        long long v211 = v60;
        if (swift_dynamicCast())
        {
          uint64_t v212 = v177;
          long long v213 = v211;
          uint64_t v214 = *((void *)&v481 + 1);
          uint64_t v215 = v482;
          __swift_project_boxed_opaque_existential_1(&v480, *((uint64_t *)&v481 + 1));
          long long v216 = v479[4];
          long long v488 = v479[5];
          uint64_t v489 = *((void *)v479 + 12);
          long long v217 = v479[1];
          long long v483 = *v479;
          long long v484 = v217;
          long long v218 = v479[2];
          long long v486 = v479[3];
          long long v487 = v216;
          long long v485 = v218;
          (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v215 + 8))(v478, &v483, v214, v215);
          if (v64)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
            sub_1C01DD018(v213, 1);
            sub_1C01DD018(v213, 1);
            sub_1C04B5360(v212, v450, v453);
            sub_1C01DD018(v213, 1);
            swift_release();
            swift_release();
            swift_release();
            uint64_t v405 = v466;
            uint64_t v406 = v12;
            char v407 = v13;
            goto LABEL_232;
          }
          uint64_t v490 = 0;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v480);
          sub_1C01DD018(v213, 1);
          sub_1C01DD018(v213, 1);
          sub_1C04B5360(v212, v450, v453);
          sub_1C01DD018(v213, 1);
          swift_release();
          swift_release();
          swift_release();
          uint64_t v219 = v466;
        }
        else
        {
          uint64_t v490 = v64;
          uint64_t v482 = 0;
          long long v480 = 0u;
          long long v481 = 0u;
          sub_1C1147B04((uint64_t)&v480, (uint64_t (*)(void))sub_1C11496E8);
          sub_1C01DD018(v60, 1);
          sub_1C01DD018(v60, 1);
          sub_1C04B5360(v177, v450, v453);
          sub_1C01DD018(v60, 1);
          swift_release();
          swift_release();
          swift_release();
          uint64_t v219 = v466;
        }
        sub_1BFF5B7CC(v219, v12, v13);
        goto LABEL_51;
    }
  }
}

uint64_t sub_1C1136FC4(uint64_t result, long long *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v40 = result;
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v6 = a3 + 32;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v34 = v5;
    uint64_t v36 = v6;
    do
    {
      uint64_t v8 = v6 + 48 * v7;
      if (*(unsigned char *)(v8 + 32) == 1)
      {
        uint64_t v10 = *(void *)v8;
        uint64_t v9 = *(void *)(v8 + 8);
        char v11 = *(unsigned char *)(v8 + 16);
        uint64_t v12 = *(void **)(v8 + 24);
        uint64_t v13 = *(void *)(v12[3] + 16);
        uint64_t v38 = *(void *)v8;
        uint64_t v39 = v9;
        if (v13)
        {
          uint64_t v35 = v7;
          uint64_t v14 = v12[3];
          sub_1C01DCFFC(v12, 1);
          sub_1C01DCFFC(v12, 1);
          sub_1C04B5340(v10, v9, v11);
          unsigned __int8 v37 = v12;
          sub_1C01DCFFC(v12, 1);
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v15 = (void *)(v14 + 56);
          while (1)
          {
            uint64_t v16 = *(v15 - 3);
            uint64_t v17 = *(v15 - 2);
            char v18 = *((unsigned char *)v15 - 8);
            uint64_t v53 = (void *)*v15;
            uint64_t v19 = v53;
            sub_1BFF5B7E0(v16, v17, v18);
            sub_1BFC3D764();
            sub_1C1149690();
            id v20 = v19;
            if (swift_dynamicCast())
            {
              uint64_t v42 = v4;
              uint64_t v21 = *((void *)&v51 + 1);
              uint64_t v22 = v52;
              __swift_project_boxed_opaque_existential_1(&v50, *((uint64_t *)&v51 + 1));
              long long v23 = a2[5];
              long long v47 = a2[4];
              long long v48 = v23;
              uint64_t v49 = *((void *)a2 + 12);
              long long v24 = a2[1];
              long long v43 = *a2;
              long long v44 = v24;
              long long v25 = a2[3];
              long long v45 = a2[2];
              long long v46 = v25;
              (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v22 + 8))(v40, &v43, v21, v22);
              uint64_t v4 = v42;
              if (v42)
              {
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
                sub_1BFF5B7CC(v16, v17, v18);
                swift_bridgeObjectRelease();

                sub_1C01DD018(v37, 1);
                sub_1C01DD018(v37, 1);
                sub_1C04B5360(v38, v39, v11);
                sub_1C01DD018(v37, 1);
                swift_bridgeObjectRelease();
                return swift_release();
              }
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
            }
            else
            {
              uint64_t v52 = 0;
              long long v50 = 0u;
              long long v51 = 0u;
              sub_1C1147B04((uint64_t)&v50, (uint64_t (*)(void))sub_1C11496E8);
            }
            sub_1BFF5B7CC(v16, v17, v18);

            v15 += 4;
            if (!--v13)
            {
              swift_bridgeObjectRelease();
              uint64_t v5 = v34;
              uint64_t v7 = v35;
              uint64_t v12 = v37;
              goto LABEL_16;
            }
          }
        }
        sub_1C01DCFFC(v12, 1);
        sub_1C01DCFFC(v12, 1);
        sub_1C04B5340(v10, v9, v11);
        sub_1C01DCFFC(v12, 1);
        swift_retain();
LABEL_16:
        uint64_t v53 = (void *)v12[4];
        id v26 = v53;
        sub_1BFC3D764();
        sub_1C1149690();
        id v27 = v26;
        if (swift_dynamicCast())
        {
          uint64_t v28 = v12;
          uint64_t v29 = *((void *)&v51 + 1);
          uint64_t v30 = v52;
          __swift_project_boxed_opaque_existential_1(&v50, *((uint64_t *)&v51 + 1));
          long long v31 = a2[5];
          long long v47 = a2[4];
          long long v48 = v31;
          uint64_t v49 = *((void *)a2 + 12);
          long long v32 = a2[1];
          long long v43 = *a2;
          long long v44 = v32;
          long long v33 = a2[3];
          long long v45 = a2[2];
          long long v46 = v33;
          (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v30 + 8))(v40, &v43, v29, v30);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
          sub_1C01DD018(v28, 1);
          sub_1C01DD018(v28, 1);
          sub_1C04B5360(v38, v39, v11);
          sub_1C01DD018(v28, 1);
          if (v4)
          {
            swift_bridgeObjectRelease();
            return swift_release();
          }
        }
        else
        {
          uint64_t v52 = 0;
          long long v50 = 0u;
          long long v51 = 0u;
          sub_1C1147B04((uint64_t)&v50, (uint64_t (*)(void))sub_1C11496E8);
          sub_1C01DD018(v12, 1);
          sub_1C01DD018(v12, 1);
          sub_1C04B5360(v38, v39, v11);
          sub_1C01DD018(v12, 1);
        }
        swift_release();
        uint64_t v6 = v36;
      }
      ++v7;
    }
    while (v7 != v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C1137418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)(a3 + 56);
    do
    {
      uint64_t v6 = *(v5 - 3);
      uint64_t v7 = *(v5 - 2);
      char v8 = *((unsigned char *)v5 - 8);
      long long v24 = (void *)*v5;
      uint64_t v9 = v24;
      sub_1BFF5B7E0(v6, v7, v8);
      sub_1BFC3D764();
      sub_1C1149690();
      id v10 = v9;
      if (swift_dynamicCast())
      {
        uint64_t v11 = *((void *)&v22 + 1);
        uint64_t v12 = v23;
        __swift_project_boxed_opaque_existential_1(&v21, *((uint64_t *)&v22 + 1));
        long long v13 = *(_OWORD *)(a2 + 80);
        v19[4] = *(_OWORD *)(a2 + 64);
        v19[5] = v13;
        uint64_t v20 = *(void *)(a2 + 96);
        long long v14 = *(_OWORD *)(a2 + 16);
        v19[0] = *(_OWORD *)a2;
        v19[1] = v14;
        long long v15 = *(_OWORD *)(a2 + 48);
        v19[2] = *(_OWORD *)(a2 + 32);
        v19[3] = v15;
        (*(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t))(v12 + 8))(a1, v19, v11, v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
        sub_1BFF5B7CC(v6, v7, v8);
        if (v18)
        {
          swift_bridgeObjectRelease();

          return;
        }
      }
      else
      {
        uint64_t v23 = 0;
        long long v21 = 0u;
        long long v22 = 0u;
        sub_1C1147B04((uint64_t)&v21, (uint64_t (*)(void))sub_1C11496E8);
        sub_1BFF5B7CC(v6, v7, v8);
      }

      v5 += 4;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C113787C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return result;
  }
  uint64_t v6 = result;
  uint64_t v7 = (void *)(swift_bridgeObjectRetain() + 56);
  uint64_t v29 = v6;
  while (1)
  {
    if ((*v7 & 0x8000000000000000) == 0) {
      goto LABEL_6;
    }
    uint64_t v8 = *(v7 - 2);
    char v9 = *((unsigned char *)v7 - 8);
    uint64_t v10 = *(void *)((*v7 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v11 = *(void *)(v10 + 24);
    uint64_t v31 = *(v7 - 3);
    sub_1BFF5B7E0(v31, v8, v9);
    swift_retain();
    swift_retain();
    sub_1C113787C(v6, a2, v11);
    if (v4) {
      break;
    }
    uint64_t v12 = *(void *)(v10 + 32);
    if ((v12 & 0x8000000000000000) == 0) {
      goto LABEL_5;
    }
    uint64_t v13 = *(void *)((v12 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v14 = *(void *)(v13 + 24);
    swift_retain();
    swift_retain();
    sub_1C113787C(v6, a2, v14);
    uint64_t v15 = *(void *)(v13 + 32);
    if (v15 < 0)
    {
      uint64_t v16 = v6;
      uint64_t v17 = *(void *)((v15 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v27 = *(void *)(v17 + 24);
      swift_retain();
      swift_retain();
      sub_1C113787C(v16, a2, v27);
      uint64_t v18 = *(void *)(v17 + 32);
      if (v18 < 0)
      {
        uint64_t v19 = *(void *)((v18 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v20 = *(void *)(v19 + 24);
        swift_retain();
        uint64_t v28 = v19;
        swift_retain();
        uint64_t v6 = v29;
        sub_1C113787C(v29, a2, v20);
        uint64_t v21 = *(void *)(v28 + 32);
        if ((v21 & 0x8000000000000000) == 0)
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          goto LABEL_4;
        }
        uint64_t v22 = *(void *)((v21 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v26 = *(void *)(v22 + 24);
        swift_retain();
        swift_retain();
        sub_1C113787C(v29, a2, v26);
        uint64_t v34 = *(void *)(v22 + 32);
        long long v23 = *(_OWORD *)(a2 + 80);
        v32[4] = *(_OWORD *)(a2 + 64);
        v32[5] = v23;
        uint64_t v33 = *(void *)(a2 + 96);
        long long v24 = *(_OWORD *)(a2 + 16);
        v32[0] = *(_OWORD *)a2;
        v32[1] = v24;
        long long v25 = *(_OWORD *)(a2 + 48);
        _OWORD v32[2] = *(_OWORD *)(a2 + 32);
        v32[3] = v25;
        swift_retain();
        sub_1C05C60F4(v29, v32);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
      else
      {
        swift_release();
        swift_release();
      }
      swift_release();
      uint64_t v6 = v29;
    }
    else
    {
      swift_release();
    }
LABEL_4:
    swift_release();
LABEL_5:
    swift_release();
    sub_1BFF5B7CC(v31, v8, v9);
    swift_release();
LABEL_6:
    v7 += 4;
    if (!--v5) {
      return swift_bridgeObjectRelease();
    }
  }
  swift_release();
  sub_1BFF5B7CC(v31, v8, v9);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1137C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1137D0C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C1144990, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C1137C8C);
}

uint64_t sub_1C1137CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1137D0C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C11449D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C1137CCC);
}

uint64_t sub_1C1137D0C(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v27 = result;
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(a3 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = (uint64_t *)(a3 + 48); ; i += 3)
    {
      uint64_t v10 = *i;
      if (*i < 0)
      {
        uint64_t v12 = *(void *)((v10 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v11 = *(void *)((v10 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
        if (v12 < 0)
        {
          uint64_t v14 = *(void *)((v12 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v13 = *(void *)((v12 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
          if (v14 < 0)
          {
            uint64_t v25 = *(void *)((v12 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
            uint64_t v15 = v14 & 0x7FFFFFFFFFFFFFFFLL;
            uint64_t v16 = *(void *)(v15 + 16);
            uint64_t v17 = *(void *)(v15 + 24);
            if (v16 < 0)
            {
              uint64_t v24 = *(void *)(v15 + 24);
              uint64_t v18 = *(void *)((v16 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
              uint64_t v19 = *(void *)((v16 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
              if (v18 < 0)
              {
                uint64_t v21 = *(void *)((v18 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
                uint64_t v22 = *(void *)((v18 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                a4(v27, a2, v22, v21);
                if (v6)
                {
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  goto LABEL_30;
                }
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                uint64_t v20 = v19;
              }
              else
              {
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                uint64_t v20 = v19;
              }
              swift_bridgeObjectRetain();
              a5(v27, a2, v20);
              if (v6)
              {
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease_n();
LABEL_30:
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_31;
              }
              swift_release();
              swift_bridgeObjectRelease_n();
              swift_release();
              uint64_t v17 = v24;
            }
            else
            {
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
            }
            swift_bridgeObjectRetain();
            a5(v27, a2, v17);
            if (v6)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease_n();
              swift_release();
LABEL_31:
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_32;
            }
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_release();
            uint64_t v13 = v25;
          }
          else
          {
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRetain();
          a5(v27, a2, v13);
          if (v6)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease_n();
            swift_release();
LABEL_32:
            swift_bridgeObjectRelease();
            swift_release();
            return swift_bridgeObjectRelease();
          }
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_release();
        }
        else
        {
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain_n();
        }
        swift_bridgeObjectRetain();
        a5(v27, a2, v11);
        if (v6)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          return swift_release();
        }
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_release();
      }
      if (!--v7) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1C1138294(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    uint64_t v7 = result;
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v14 = *(void *)(a3 + 8 * v8 + 32);
      long long v9 = *(_OWORD *)(a2 + 80);
      _DWORD v12[4] = *(_OWORD *)(a2 + 64);
      v12[5] = v9;
      uint64_t v13 = *(void *)(a2 + 96);
      long long v10 = *(_OWORD *)(a2 + 16);
      v12[0] = *(_OWORD *)a2;
      v12[1] = v10;
      long long v11 = *(_OWORD *)(a2 + 48);
      _OWORD v12[2] = *(_OWORD *)(a2 + 32);
      void v12[3] = v11;
      swift_retain();
      sub_1BFF79540(v7, (uint64_t)v12);
      if (v3) {
        break;
      }
      ++v8;
      swift_release();
      if (v4 == v8) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1C113837C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v84 = (long long *)a2;
  long long v68 = a1;
  uint64_t v6 = type metadata accessor for FormatOption();
  uint64_t v62 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF14F38(0, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v53 - v11);
  uint64_t v13 = *(void *)(a3 + 16);
  if (v13)
  {
    uint64_t v14 = a3 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v15 = *(void *)(v10 + 72);
    swift_bridgeObjectRetain();
    uint64_t v16 = 0;
    char v59 = v8;
    uint64_t v56 = v13;
    uint64_t v58 = v14;
    uint64_t v57 = v15;
    while (1)
    {
      uint64_t v60 = v16;
      sub_1C1147A90(v14 + v15 * v16, (uint64_t)v12, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      uint64_t v18 = v12[10];
      uint64_t v17 = v12[11];
      uint64_t v64 = v12[14];
      uint64_t v61 = v12[15];
      uint64_t v19 = *(void *)(v18 + 16);
      uint64_t v63 = v17;
      if (v19) {
        break;
      }
LABEL_8:
      uint64_t v24 = *(void *)(v17 + 16);
      if (v24)
      {
        uint64_t v54 = v12;
        uint64_t v55 = a3;
        uint64_t v67 = v4;
        swift_bridgeObjectRetain_n();
        uint64_t v25 = (uint64_t *)(v17 + 48);
        while (1)
        {
          uint64_t v65 = v24;
          uint64_t v26 = *(v25 - 1);
          uint64_t v27 = *v25;
          uint64_t v28 = v25[1];
          uint64_t v29 = v25[2];
          uint64_t v30 = v25[3];
          unint64_t v31 = v25[4];
          uint64_t v32 = v25[5];
          uint64_t v69 = *(v25 - 2);
          uint64_t v70 = v26;
          uint64_t v71 = v27;
          uint64_t v72 = v28;
          uint64_t v73 = v29;
          uint64_t v74 = v30;
          unint64_t v75 = v31;
          uint64_t v76 = v32;
          long long v33 = v84[5];
          long long v81 = v84[4];
          long long v82 = v33;
          uint64_t v83 = *((void *)v84 + 12);
          long long v34 = v84[1];
          long long v77 = *v84;
          long long v78 = v34;
          long long v35 = v84[3];
          long long v79 = v84[2];
          long long v80 = v35;
          uint64_t v36 = v69;
          uint64_t v37 = v26;
          uint64_t v38 = v27;
          uint64_t v39 = v28;
          uint64_t v40 = v29;
          uint64_t v41 = v30;
          unint64_t v42 = v31;
          uint64_t v66 = v32;
          sub_1BFF95098(v69, v26, v27, v28, v29, v30, v31);
          uint64_t v43 = v67;
          sub_1C05D2144(v68, (uint64_t)&v77);
          uint64_t v67 = v43;
          if (v43) {
            break;
          }
          v25 += 8;
          sub_1BFF94FE4(v36, v37, v38, v39, v40, v41, v42);
          uint64_t v24 = v65 - 1;
          if (v65 == 1)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v4 = v67;
            a3 = v55;
            uint64_t v12 = v54;
            uint64_t v8 = v59;
            goto LABEL_13;
          }
        }
        sub_1BFF94FE4(v36, v37, v38, v39, v40, v41, v42);
        swift_bridgeObjectRelease_n();
        uint64_t v12 = v54;
        goto LABEL_24;
      }
LABEL_13:
      uint64_t v44 = *(void *)(v64 + 16);
      if (v44)
      {
        uint64_t v45 = v62;
        uint64_t v46 = v64 + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
        swift_bridgeObjectRetain_n();
        uint64_t v47 = *(void *)(v45 + 72);
        while (1)
        {
          sub_1C1147A28(v46, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v69 = *((void *)v8 + 2);
          long long v48 = v84[5];
          long long v81 = v84[4];
          long long v82 = v48;
          uint64_t v83 = *((void *)v84 + 12);
          long long v49 = v84[1];
          long long v77 = *v84;
          long long v78 = v49;
          long long v50 = v84[3];
          long long v79 = v84[2];
          long long v80 = v50;
          swift_retain();
          sub_1BFF2871C(v68, (uint64_t)&v77);
          if (v4) {
            break;
          }
          swift_release();
          sub_1C1147B04((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
          v46 += v47;
          if (!--v44)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_18;
          }
        }
        swift_release();
        sub_1C1147B04((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease_n();
        goto LABEL_24;
      }
LABEL_18:
      uint64_t v51 = v61;
      swift_bridgeObjectRetain();
      sub_1BFF11C38(v68, (uint64_t)v84, v51);
      swift_bridgeObjectRelease();
      uint64_t v14 = v58;
      uint64_t v15 = v57;
      if (v4) {
        goto LABEL_24;
      }
      uint64_t v52 = v60 + 1;
      sub_1C114971C((uint64_t)v12, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      uint64_t v16 = v52;
      if (v52 == v56) {
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRetain_n();
    uint64_t v20 = v18 + 48;
    while (1)
    {
      uint64_t v69 = *(void *)(v20 - 16);
      long long v21 = v84[5];
      long long v81 = v84[4];
      long long v82 = v21;
      uint64_t v83 = *((void *)v84 + 12);
      long long v22 = v84[1];
      long long v77 = *v84;
      long long v78 = v22;
      long long v23 = v84[3];
      long long v79 = v84[2];
      long long v80 = v23;
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BFF0B0B8(v68, (uint64_t)&v77);
      if (v4) {
        break;
      }
      v20 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v19)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v8 = v59;
        uint64_t v17 = v63;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_release_n();
LABEL_24:
    sub_1C114971C((uint64_t)v12, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
LABEL_25:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C1138B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1137D0C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C1144AF8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C1138B48);
}

uint64_t sub_1C1138B88(uint64_t result, long long *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v8 = (unint64_t *)result;
    swift_bridgeObjectRetain();
    uint64_t v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v10 = *v9;
      uint64_t v24 = *(v9 - 1);
      long long v11 = a2[5];
      long long v21 = a2[4];
      long long v22 = v11;
      uint64_t v23 = *((void *)a2 + 12);
      long long v12 = a2[1];
      long long v17 = *a2;
      long long v18 = v12;
      long long v13 = a2[3];
      long long v19 = a2[2];
      long long v20 = v13;
      swift_retain();
      swift_retain_n();
      sub_1BFF0C6A0(v8, (uint64_t *)&v17);
      if (v4) {
        break;
      }
      swift_release();
      long long v14 = a2[5];
      long long v21 = a2[4];
      long long v22 = v14;
      uint64_t v23 = *((void *)a2 + 12);
      long long v15 = a2[1];
      long long v17 = *a2;
      long long v18 = v15;
      long long v16 = a2[3];
      long long v19 = a2[2];
      long long v20 = v16;
      swift_retain();
      sub_1C05CF6A8(v8, &v17, v10);
      v9 += 2;
      swift_release();
      swift_release_n();
      if (!--v5) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1C1138D04(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v8 = result;
    swift_bridgeObjectRetain();
    uint64_t v9 = (uint64_t *)(a3 + 48);
    uint64_t v24 = a2;
    uint64_t v23 = v8;
    while (1)
    {
      uint64_t v10 = *v9;
      if (*v9 < 0)
      {
        unint64_t v12 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v11 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
        if ((v12 >> 62) < 2)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain_n();
        }
        else
        {
          unint64_t v13 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v14 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
          if ((v13 >> 62) > 1)
          {
            unint64_t v15 = *(void *)((v13 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v22 = *(void *)((v13 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
            if ((v15 >> 62) > 1)
            {
              unint64_t v17 = *(void *)((v15 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
              uint64_t v21 = *(void *)((v15 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
              if ((v17 >> 62) > 1)
              {
                uint64_t v19 = *(void *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
                uint64_t v20 = *(void *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                sub_1C1144B38(v23, v24, v20, v19);
                if (v4)
                {
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  goto LABEL_30;
                }
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                uint64_t v18 = v21;
              }
              else
              {
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                uint64_t v18 = v21;
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
              }
              swift_bridgeObjectRetain();
              sub_1C1138D04(v23, v24, v18);
              if (v4)
              {
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease_n();
LABEL_30:
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                goto LABEL_31;
              }
              swift_release();
              swift_bridgeObjectRelease_n();
              swift_release();
              uint64_t v16 = v22;
            }
            else
            {
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              uint64_t v16 = v22;
              swift_retain_n();
              swift_bridgeObjectRetain();
            }
            swift_bridgeObjectRetain();
            sub_1C1138D04(v23, v24, v16);
            if (v4)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease_n();
LABEL_31:
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_32;
            }
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_release();
          }
          else
          {
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRetain();
          sub_1C1138D04(v23, v24, v14);
          if (v4)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease_n();
            swift_release();
LABEL_32:
            swift_bridgeObjectRelease();
            swift_release();
            return swift_bridgeObjectRelease();
          }
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_release();
          a2 = v24;
          uint64_t v8 = v23;
        }
        swift_bridgeObjectRetain();
        sub_1C1138D04(v8, a2, v11);
        if (v4)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          return swift_release();
        }
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_release();
      }
      v9 += 3;
      if (!--v5) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void sub_1C1139A74(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1C0017828();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v424 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v424 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v424 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (unint64_t *)((char *)&v424 - v18);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v424 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v440 = (uint64_t)&v424 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v442 = (uint64_t)&v424 - v26;
  MEMORY[0x1F4188790](v27);
  v444 = (uint64_t *)((char *)&v424 - v28);
  MEMORY[0x1F4188790](v29);
  uint64_t v439 = (uint64_t)&v424 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v438 = (uint64_t)&v424 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v441 = (uint64_t)&v424 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v443 = (uint64_t)&v424 - v36;
  uint64_t v37 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1F4188790](v37 - 8);
  uint64_t v39 = (char *)&v424 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v462 = *(void *)(a3 + 16);
  if (!v462) {
    return;
  }
  unsigned __int8 v436 = v39;
  uint64_t v431 = v22;
  v437 = v19;
  char v435 = v16;
  uint64_t v432 = v13;
  uint64_t v433 = v10;
  uint64_t v40 = a3 + 32;
  uint64_t v434 = a1 + 1;
  uint64_t v445 = a3;
  swift_bridgeObjectRetain();
  uint64_t v480 = 0;
  uint64_t v464 = a1;
  uint64_t v448 = a3 + 32;
  uint64_t v447 = a2;
  while (1)
  {
    uint64_t v44 = v40 + 24 * v480;
    uint64_t v46 = *(void *)(v44 + 8);
    unint64_t v45 = *(void *)(v44 + 16);
    if (!(v45 >> 62)) {
      break;
    }
    if (v45 >> 62 != 1)
    {
      uint64_t v47 = v45 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v48 = *(void *)((v45 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v49 = *(void *)((v45 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      if (v48 >> 62)
      {
        if (v48 >> 62 == 1)
        {
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain();
          swift_bridgeObjectRetain();
          goto LABEL_105;
        }
        unint64_t v93 = *(void *)((v48 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v94 = *(void *)((v48 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v458 = v48 & 0x3FFFFFFFFFFFFFFFLL;
        unint64_t v457 = v93;
        if (!(v93 >> 62))
        {
          unint64_t v459 = v48;
          uint64_t v98 = v94;
          uint64_t v465 = v46;
          uint64_t v100 = *(void *)(v93 + 16);
          uint64_t v99 = *(void *)(v93 + 24);
          uint64_t v101 = v45 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v102 = *(void *)(v93 + 32);
          uint64_t v461 = v4;
          char v103 = *(unsigned char *)(v93 + 40);
          uint64_t v104 = *(void *)(v93 + 48);
          uint64_t v105 = *(void *)(v93 + 56);
          uint64_t v463 = v49;
          LODWORD(v446) = *(unsigned __int16 *)(v93 + 64);
          uint64_t v106 = *(void *)(v93 + 80);
          unint64_t v451 = *(void *)(v93 + 72);
          uint64_t v452 = v106;
          unint64_t v453 = *(void *)(v93 + 88);
          unint64_t v454 = *(void *)(v93 + 96);
          LODWORD(v455) = *(unsigned __int8 *)(v93 + 104);
          unint64_t v107 = *(void *)(v93 + 112);
          *(void *)&long long v473 = v100;
          *((void *)&v473 + 1) = v99;
          uint64_t v108 = v99;
          *(void *)&long long v474 = v102;
          BYTE8(v474) = v103;
          *(void *)&long long v475 = v104;
          *((void *)&v475 + 1) = v105;
          uint64_t v109 = v104;
          LOWORD(v476) = v446;
          *((void *)&v476 + 1) = v451;
          unsigned long long v477 = __PAIR128__(v453, v106);
          *(void *)&long long v478 = v454;
          BYTE8(v478) = v455;
          unint64_t v479 = v107;
          long long v110 = *(_OWORD *)(a2 + 80);
          long long v470 = *(_OWORD *)(a2 + 64);
          long long v471 = v110;
          uint64_t v472 = *(void *)(a2 + 96);
          long long v111 = *(_OWORD *)(a2 + 16);
          long long v466 = *(_OWORD *)a2;
          long long v467 = v111;
          long long v112 = *(_OWORD *)(a2 + 32);
          long long v469 = *(_OWORD *)(a2 + 48);
          long long v468 = v112;
          uint64_t v450 = v93 & 0x3FFFFFFFFFFFFFFFLL;
          swift_retain_n();
          uint64_t v456 = v98;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v460 = v101;
          swift_retain_n();
          unint64_t v113 = v107;
          swift_retain_n();
          swift_bridgeObjectRetain();
          uint64_t v114 = v100;
          uint64_t v115 = v100;
          uint64_t v116 = v108;
          uint64_t v117 = v108;
          uint64_t v118 = v102;
          char v119 = v103;
          sub_1BFDEB94C(v115, v116, v102, v103);
          uint64_t v120 = v109;
          uint64_t v121 = v109;
          uint64_t v122 = v105;
          uint64_t v123 = v105;
          uint64_t v124 = v446;
          sub_1BFF62358(v120, v123, v446);
          sub_1BFDEB8B4(v451);
          sub_1BFE94AB4(v453, v454, v455);
          unint64_t v449 = v113;
          sub_1C00F5B0C(v113);
          uint64_t v125 = v461;
          sub_1BFF5E044(v464, (uint64_t)&v466);
          if (v125)
          {
            sub_1BFDEB9E0(v114, v117, v118, v119);
            sub_1BFF6179C(v121, v122, v124);
            sub_1BFDEB900(v451);
            sub_1BFE94AD4(v453, v454, v455);
            sub_1C00F5B20(v449);
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease();
            return;
          }
          sub_1BFDEB9E0(v114, v117, v118, v119);
          sub_1BFF6179C(v121, v122, v124);
          sub_1BFDEB900(v451);
          sub_1BFE94AD4(v453, v454, v455);
          sub_1C00F5B20(v449);
          swift_release();
          uint64_t v4 = 0;
          a1 = v464;
          uint64_t v40 = v448;
          uint64_t v49 = v463;
          uint64_t v95 = v456;
          goto LABEL_70;
        }
        if (v93 >> 62 == 1)
        {
          uint64_t v95 = v94;
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
LABEL_70:
          swift_bridgeObjectRetain();
          sub_1C1139A74(a1, a2, v95);
          if (v4)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease_n();
            goto LABEL_190;
          }
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_release();
LABEL_105:
          swift_bridgeObjectRetain();
          sub_1C1139A74(a1, a2, v49);
          if (!v4)
          {
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease_n();
            swift_release();
            goto LABEL_7;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease_n();
LABEL_190:
          swift_release();
          return;
        }
        unint64_t v127 = *(void *)((v93 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
        unint64_t v126 = *(void *)((v93 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v455 = v93 & 0x3FFFFFFFFFFFFFFFLL;
        uint64_t v456 = v94;
        if (v127 >> 62)
        {
          if (v127 >> 62 == 1)
          {
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
          }
          else
          {
            unint64_t v454 = v126;
            uint64_t v195 = *(void *)((v127 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
            *(void *)&long long v466 = *(void *)((v127 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
            long long v196 = *(_OWORD *)(a2 + 80);
            unsigned long long v477 = *(_OWORD *)(a2 + 64);
            long long v478 = v196;
            unint64_t v479 = *(void *)(a2 + 96);
            long long v197 = *(_OWORD *)(a2 + 16);
            long long v473 = *(_OWORD *)a2;
            long long v474 = v197;
            long long v198 = *(_OWORD *)(a2 + 48);
            long long v475 = *(_OWORD *)(a2 + 32);
            long long v476 = v198;
            unint64_t v453 = v466 & 0x3FFFFFFFFFFFFFFFLL;
            swift_retain_n();
            uint64_t v452 = v195;
            unint64_t v126 = v454;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v460 = v47;
            swift_retain_n();
            swift_retain_n();
            uint64_t v463 = v49;
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            unint64_t v199 = v464;
            sub_1BFE2FB6C(v464, &v473);
            if (v4)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease();
              swift_release();
LABEL_204:
              swift_release();
LABEL_206:
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_197;
            }
            swift_release();
            uint64_t v200 = v452;
            swift_bridgeObjectRetain();
            sub_1C1139A74(v199, a2, v200);
            swift_release();
            swift_release();
            swift_bridgeObjectRelease_n();
            uint64_t v40 = v448;
            uint64_t v49 = v463;
          }
        }
        else
        {
          uint64_t v461 = v4;
          uint64_t v460 = v45 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v179 = *(void *)(v127 + 16);
          uint64_t v178 = *(void *)(v127 + 24);
          unint64_t v180 = v126;
          uint64_t v463 = v49;
          uint64_t v181 = *(void *)(v127 + 32);
          uint64_t v182 = v46;
          char v183 = *(unsigned char *)(v127 + 40);
          uint64_t v184 = *(void *)(v127 + 56);
          unint64_t v430 = *(void *)(v127 + 48);
          uint64_t v429 = v184;
          LODWORD(v446) = *(unsigned __int16 *)(v127 + 64);
          uint64_t v185 = *(void *)(v127 + 80);
          unint64_t v449 = *(void *)(v127 + 72);
          uint64_t v450 = v185;
          unint64_t v451 = *(void *)(v127 + 88);
          uint64_t v452 = *(void *)(v127 + 96);
          LODWORD(v453) = *(unsigned __int8 *)(v127 + 104);
          unint64_t v186 = *(void *)(v127 + 112);
          *(void *)&long long v473 = v179;
          *((void *)&v473 + 1) = v178;
          *(void *)&long long v474 = v181;
          BYTE8(v474) = v183;
          *(void *)&long long v475 = v430;
          *((void *)&v475 + 1) = v184;
          LOWORD(v476) = v446;
          *((void *)&v476 + 1) = v449;
          unsigned long long v477 = __PAIR128__(v451, v185);
          *(void *)&long long v478 = v452;
          BYTE8(v478) = v453;
          unint64_t v479 = v186;
          long long v187 = *(_OWORD *)(a2 + 80);
          long long v470 = *(_OWORD *)(a2 + 64);
          long long v471 = v187;
          uint64_t v472 = *(void *)(a2 + 96);
          long long v188 = *(_OWORD *)(a2 + 16);
          long long v466 = *(_OWORD *)a2;
          long long v467 = v188;
          long long v190 = *(_OWORD *)(a2 + 32);
          long long v189 = *(_OWORD *)(a2 + 48);
          uint64_t v426 = v127;
          long long v469 = v189;
          long long v468 = v190;
          unint64_t v428 = v127 & 0x3FFFFFFFFFFFFFFFLL;
          swift_retain_n();
          unint64_t v454 = v180;
          unint64_t v191 = v186;
          swift_bridgeObjectRetain();
          uint64_t v465 = v182;
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BFDEB94C(v179, v178, v181, v183);
          uint64_t v192 = v430;
          uint64_t v193 = v429;
          sub_1BFF62358(v430, v429, v446);
          sub_1BFDEB8B4(v449);
          sub_1BFE94AB4(v451, v452, v453);
          unint64_t v427 = v191;
          sub_1C00F5B0C(v191);
          uint64_t v194 = v461;
          sub_1BFF5E044(v464, (uint64_t)&v466);
          if (v194)
          {
            sub_1BFDEB9E0(v179, v178, v181, v183);
            sub_1BFF6179C(v192, v193, v446);
            sub_1BFDEB900(v449);
            sub_1BFE94AD4(v451, v452, v453);
            sub_1C00F5B20(v427);
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_release();
            goto LABEL_206;
          }
          sub_1BFDEB9E0(v179, v178, v181, v183);
          sub_1BFF6179C(v192, v193, v446);
          sub_1BFDEB900(v449);
          sub_1BFE94AD4(v451, v452, v453);
          sub_1C00F5B20(v427);
          swift_release();
          uint64_t v4 = 0;
          uint64_t v40 = v448;
          uint64_t v49 = v463;
          unint64_t v126 = v454;
        }
        swift_bridgeObjectRetain();
        sub_1C1139A74(v464, a2, v126);
        if (!v4)
        {
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_release();
          a1 = v464;
          uint64_t v95 = v456;
          goto LABEL_70;
        }
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        goto LABEL_204;
      }
      unint64_t v72 = *(void *)((v45 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v461 = v4;
      uint64_t v463 = v49;
      uint64_t v460 = v45 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v465 = v46;
      unint64_t v73 = *(void *)(v48 + 16);
      uint64_t v75 = *(void *)(v72 + 24);
      uint64_t v74 = *(void *)(v72 + 32);
      int v76 = *(unsigned __int8 *)(v72 + 40);
      uint64_t v77 = *(void *)(v72 + 48);
      uint64_t v78 = *(void *)(v72 + 56);
      uint64_t v79 = *(unsigned __int16 *)(v72 + 64);
      unsigned int v80 = v79 >> 8;
      uint64_t v82 = *(void *)(v72 + 72);
      uint64_t v81 = *(void *)(v72 + 80);
      uint64_t v84 = *(void *)(v72 + 88);
      uint64_t v83 = *(void *)(v72 + 96);
      int v85 = *(unsigned __int8 *)(v72 + 104);
      unint64_t v86 = *(void *)(v72 + 112);
      LODWORD(v452) = *(unsigned __int16 *)(v72 + 64);
      LODWORD(v456) = v76;
      unint64_t v454 = v86;
      LODWORD(v453) = v85;
      uint64_t v458 = v83;
      uint64_t v450 = v77;
      unint64_t v457 = v84;
      unint64_t v459 = v72;
      unint64_t v451 = v73;
      uint64_t v455 = v81;
      if (v79 >> 8 <= 0xFE)
      {
        uint64_t v96 = v74;
        unint64_t v449 = v82;
        uint64_t v91 = v78;
        uint64_t v92 = v75;
        a2 = v447;
        uint64_t v40 = v448;
        switch(v80)
        {
          case 1u:
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain_n();
            uint64_t v88 = v96;
            sub_1BFDEB94C(v451, v75, v96, v76);
            uint64_t v4 = v461;
            if (v91) {
              uint64_t v210 = v91;
            }
            else {
              uint64_t v210 = 0;
            }
            sub_1BFF62358(v450, v210, v452);
            unint64_t v90 = v449;
            sub_1BFDEB8B4(v449);
            sub_1BFE94AB4(v457, v458, v453);
            sub_1C00F5B0C(v454);
            break;
          case 2u:
          case 3u:
          case 4u:
            uint64_t v97 = v77;
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain_n();
            uint64_t v88 = v96;
            sub_1BFDEB94C(v451, v75, v96, v76);
            sub_1BFF62358(v97, v91, v452);
            unint64_t v90 = v449;
            sub_1BFDEB8B4(v449);
            sub_1BFE94AB4(v457, v458, v453);
            sub_1C00F5B0C(v454);
            uint64_t v4 = v461;
            break;
          default:
            *(void *)&long long v466 = v77;
            long long v201 = *(_OWORD *)(v447 + 80);
            unsigned long long v477 = *(_OWORD *)(v447 + 64);
            long long v478 = v201;
            unint64_t v479 = *(void *)(v447 + 96);
            long long v202 = *(_OWORD *)(v447 + 16);
            long long v473 = *(_OWORD *)v447;
            long long v474 = v202;
            long long v203 = *(_OWORD *)(v447 + 48);
            long long v475 = *(_OWORD *)(v447 + 32);
            long long v476 = v203;
            uint64_t v204 = v77;
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain_n();
            uint64_t v205 = v451;
            uint64_t v88 = v96;
            sub_1BFDEB94C(v451, v75, v96, v76);
            uint64_t v206 = v452;
            sub_1BFF62358(v204, v91, v452);
            sub_1BFDEB8B4(v449);
            char v207 = v453;
            sub_1BFE94AB4(v457, v458, v453);
            unint64_t v208 = v454;
            sub_1C00F5B0C(v454);
            uint64_t v209 = v461;
            sub_1BFF79C34(v464, (uint64_t *)&v473);
            if (v209)
            {
              sub_1BFDEB9E0(v205, v75, v88, v456);
              sub_1BFF6179C(v450, v91, v206);
              sub_1BFDEB900(v449);
              sub_1BFE94AD4(v457, v458, v207);
              sub_1C00F5B20(v208);
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release_n();
              return;
            }
            uint64_t v4 = 0;
            uint64_t v40 = v448;
            unint64_t v90 = v449;
            a2 = v447;
            break;
        }
      }
      else
      {
        uint64_t v87 = v77;
        uint64_t v88 = v74;
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        uint64_t v89 = v73;
        unint64_t v90 = v82;
        sub_1BFDEB94C(v89, v75, v88, v456);
        sub_1BFF62358(v87, v78, v79);
        sub_1BFDEB8B4(v82);
        sub_1BFE94AB4(v457, v458, v85);
        sub_1C00F5B0C(v86);
        uint64_t v91 = v78;
        uint64_t v92 = v75;
        uint64_t v4 = v461;
        a2 = v447;
        uint64_t v40 = v448;
      }
      uint64_t v271 = v90;
      if ((~v90 & 0xF000000000000007) != 0)
      {
        uint64_t v274 = v88;
        uint64_t v275 = v455;
        *(void *)&long long v466 = v271;
        long long v276 = *(_OWORD *)(a2 + 80);
        unsigned long long v477 = *(_OWORD *)(a2 + 64);
        long long v478 = v276;
        unint64_t v479 = *(void *)(a2 + 96);
        long long v277 = *(_OWORD *)(a2 + 16);
        long long v473 = *(_OWORD *)a2;
        long long v474 = v277;
        long long v278 = *(_OWORD *)(a2 + 48);
        long long v475 = *(_OWORD *)(a2 + 32);
        long long v476 = v278;
        swift_retain();
        swift_retain();
        uint64_t v279 = v464;
        sub_1BFF79540((uint64_t)v464, (uint64_t)&v473);
        if (v4)
        {
          sub_1BFDEB900(v271);
          sub_1BFDEB9E0(v451, v92, v274, v456);
          sub_1BFF6179C(v450, v91, v452);
          sub_1BFDEB900(v271);
          sub_1BFE94AD4(v457, v458, v453);
          sub_1C00F5B20(v454);
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          goto LABEL_196;
        }
        *(void *)&long long v466 = v275;
        long long v280 = *(_OWORD *)(a2 + 80);
        unsigned long long v477 = *(_OWORD *)(a2 + 64);
        long long v478 = v280;
        unint64_t v479 = *(void *)(a2 + 96);
        long long v281 = *(_OWORD *)(a2 + 16);
        long long v473 = *(_OWORD *)a2;
        long long v474 = v281;
        long long v282 = *(_OWORD *)(a2 + 48);
        long long v475 = *(_OWORD *)(a2 + 32);
        long long v476 = v282;
        sub_1BFF79540((uint64_t)v279, (uint64_t)&v473);
        uint64_t v4 = 0;
        sub_1BFDEB900(v271);
        uint64_t v40 = v448;
        unint64_t v273 = v454;
        char v272 = v456;
        uint64_t v88 = v274;
      }
      else
      {
        char v272 = v456;
        unint64_t v273 = v454;
      }
      if ((~v273 & 0xF000000000000007) == 0)
      {
        sub_1BFDEB9E0(v451, v92, v88, v272);
        sub_1BFF6179C(v450, v91, v452);
        sub_1BFDEB900(v271);
        sub_1BFE94AD4(v457, v458, v453);
        sub_1C00F5B20(v273);
        swift_release();
        a1 = v464;
LABEL_104:
        uint64_t v49 = v463;
        goto LABEL_105;
      }
      *(void *)&long long v466 = v273;
      long long v283 = *(_OWORD *)(a2 + 80);
      unsigned long long v477 = *(_OWORD *)(a2 + 64);
      long long v478 = v283;
      unint64_t v479 = *(void *)(a2 + 96);
      long long v284 = *(_OWORD *)(a2 + 16);
      long long v473 = *(_OWORD *)a2;
      long long v474 = v284;
      long long v285 = *(_OWORD *)(a2 + 48);
      long long v475 = *(_OWORD *)(a2 + 32);
      long long v476 = v285;
      sub_1C05D6858((uint64_t)v464, (uint64_t)&v473);
      if (!v4)
      {
        sub_1BFDEB9E0(v451, v92, v88, v456);
        sub_1BFF6179C(v450, v91, v452);
        sub_1BFDEB900(v271);
        sub_1BFE94AD4(v457, v458, v453);
        sub_1C00F5B20(v273);
        swift_release();
        a1 = v464;
        uint64_t v40 = v448;
        goto LABEL_104;
      }
      sub_1BFDEB9E0(v451, v92, v88, v456);
      sub_1BFF6179C(v450, v91, v452);
      sub_1BFDEB900(v271);
      sub_1BFE94AD4(v457, v458, v453);
      sub_1C00F5B20(v273);
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
LABEL_196:
      swift_release_n();
LABEL_197:
      swift_bridgeObjectRelease();
      return;
    }
LABEL_7:
    if (++v480 == v462) {
      goto LABEL_197;
    }
  }
  uint64_t v461 = v4;
  uint64_t v465 = v46;
  uint64_t v50 = *(void *)(v45 + 16);
  uint64_t v51 = *(void *)(v45 + 24);
  uint64_t v52 = *(void *)(v45 + 32);
  int v53 = *(unsigned __int8 *)(v45 + 40);
  unint64_t v54 = *(void *)(v45 + 48);
  uint64_t v55 = *(void *)(v45 + 56);
  unsigned int v56 = *(unsigned __int16 *)(v45 + 64);
  uint64_t v57 = *(void *)(v45 + 72);
  uint64_t v58 = *(void *)(v45 + 80);
  uint64_t v59 = *(void *)(v45 + 88);
  uint64_t v60 = *(void *)(v45 + 96);
  LODWORD(v61) = *(unsigned __int8 *)(v45 + 104);
  unint64_t v62 = *(void *)(v45 + 112);
  unint64_t v453 = v55;
  uint64_t v458 = v54;
  LODWORD(v457) = v53;
  unint64_t v459 = v62;
  LODWORD(v456) = v61;
  uint64_t v455 = v60;
  uint64_t v463 = v59;
  unint64_t v449 = v45;
  uint64_t v460 = v58;
  LODWORD(v454) = v56;
  uint64_t v452 = v52;
  unint64_t v451 = v51;
  uint64_t v450 = v50;
  if (v56 >> 8 > 0xFE)
  {
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1BFDEB94C(v50, v51, v52, v53);
    uint64_t v63 = v454;
    sub_1BFF62358(v458, v55, v454);
    sub_1BFDEB8B4(v57);
    sub_1BFE94AB4(v463, v60, v61);
    sub_1C00F5B0C(v62);
    uint64_t v4 = v461;
    a2 = v447;
    uint64_t v64 = v60;
    uint64_t v65 = v57;
LABEL_15:
    char v66 = v61;
    goto LABEL_38;
  }
  uint64_t v65 = v57;
  switch(v56 >> 8)
  {
    case 1u:
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BFDEB94C(v50, v51, v52, v53);
      uint64_t v132 = v453;
      if (v453)
      {
        uint64_t v133 = v458;
LABEL_35:
        uint64_t v63 = v454;
        sub_1BFF62358(v133, v132, v454);
        sub_1BFDEB8B4(v57);
        uint64_t v64 = v455;
        char v66 = v456;
        sub_1BFE94AB4(v463, v455, v456);
        unint64_t v131 = v459;
LABEL_36:
        sub_1C00F5B0C(v131);
      }
      else
      {
        uint64_t v174 = v458;
        uint64_t v175 = v454;
        sub_1BFF62358(v458, 0, v454);
        sub_1BFDEB8B4(v57);
        uint64_t v176 = v455;
        char v66 = v456;
        sub_1BFE94AB4(v463, v455, v456);
        sub_1C00F5B0C(v459);
        uint64_t v177 = v174;
        uint64_t v64 = v176;
        uint64_t v63 = v175;
        sub_1BFF6179C(v177, 0, v175);
      }
LABEL_37:
      uint64_t v4 = v461;
      a2 = v447;
      goto LABEL_38;
    case 2u:
      unint64_t v134 = v54;
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BFDEB94C(v50, v51, v52, v53);
      uint64_t v133 = v134;
      uint64_t v132 = v55;
      goto LABEL_35;
    case 3u:
    case 4u:
      uint64_t v67 = v54;
      uint64_t v68 = v55;
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BFDEB94C(v50, v51, v52, v53);
      uint64_t v69 = v454;
      sub_1BFF62358(v67, v55, v454);
      sub_1BFDEB8B4(v57);
      uint64_t v64 = v455;
      char v70 = v456;
      sub_1BFE94AB4(v463, v455, v456);
      sub_1C00F5B0C(v459);
      uint64_t v71 = v68;
      char v66 = v70;
      uint64_t v63 = v69;
      sub_1BFF6179C(v67, v71, v69);
      goto LABEL_37;
    default:
      char v66 = v456;
      unint64_t v128 = v459;
      uint64_t v129 = v463;
      switch(v54 >> 61)
      {
        case 2uLL:
          uint64_t v229 = v454;
          uint64_t v446 = v65;
          uint64_t v61 = v54;
          uint64_t v230 = swift_projectBox();
          uint64_t v231 = (uint64_t)v436;
          sub_1C1147A28(v230, (uint64_t)v436, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
          uint64_t v232 = v443;
          sub_1C1147A28(v231, v443, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
          type metadata accessor for FormatFontResource(0);
          swift_storeEnumTagMultiPayload();
          uint64_t v233 = type metadata accessor for FormatResource(0);
          swift_storeEnumTagMultiPayload();
          uint64_t v234 = *(void *)(v233 - 8);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v234 + 56))(v232, 0, 1, v233);
          uint64_t v235 = v441;
          sub_1C1147A28(v232, v441, (uint64_t (*)(void))sub_1C0017828);
          uint64_t v236 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v234 + 48);
          if (v236(v235, 1, v233) == 1)
          {
            swift_retain_n();
            swift_bridgeObjectRetain();
            sub_1BFDEB94C(v450, v451, v452, v457);
            uint64_t v237 = v61;
            uint64_t v238 = v453;
            sub_1BFF62358(v61, v453, v229);
            uint64_t v65 = v446;
            sub_1BFDEB8B4(v446);
            uint64_t v64 = v455;
            LOBYTE(v61) = v456;
            sub_1BFE94AB4(v463, v455, v456);
            sub_1C00F5B0C(v459);
            sub_1BFF62358(v237, v238, v229);
            uint64_t v4 = v461;
            a2 = v447;
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            a2 = v447;
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v287 = v439;
              sub_1C1147A28(v443, v439, (uint64_t (*)(void))sub_1C0017828);
              if (v236(v287, 1, v233) == 1) {
                goto LABEL_229;
              }
              id v288 = v434;
              unint64_t v289 = *v434;
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BFDEB94C(v450, v451, v452, v457);
              uint64_t v290 = v458;
              uint64_t v291 = v453;
              sub_1BFF62358(v458, v453, v229);
              sub_1BFDEB8B4(v446);
              sub_1BFE94AB4(v463, v455, v456);
              sub_1C00F5B0C(v459);
              sub_1BFF62358(v290, v291, v229);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *id v288 = v289;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                unint64_t v289 = sub_1BFED9EFC(0, *(void *)(v289 + 16) + 1, 1, v289);
                *uint64_t v434 = v289;
              }
              uint64_t v293 = v441;
              unint64_t v295 = *(void *)(v289 + 16);
              unint64_t v294 = *(void *)(v289 + 24);
              if (v295 >= v294 >> 1)
              {
                unint64_t v289 = sub_1BFED9EFC(v294 > 1, v295 + 1, 1, v289);
                *uint64_t v434 = v289;
              }
              *(void *)(v289 + 16) = v295 + 1;
              uint64_t v296 = sub_1BFF54774(v439, v289+ ((*(unsigned __int8 *)(v234 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v234 + 80))+ *(void *)(v234 + 72) * v295, type metadata accessor for FormatResource);
              nullsub_1(v296);
              sub_1C1147B04(v293, type metadata accessor for FormatResource);
              uint64_t v4 = v461;
              LOBYTE(v61) = v456;
              uint64_t v64 = v455;
              uint64_t v238 = v453;
              uint64_t v237 = v458;
              uint64_t v65 = v446;
            }
            else
            {
              uint64_t v339 = v438;
              sub_1C1147A28(v443, v438, (uint64_t (*)(void))sub_1C0017828);
              if (v236(v339, 1, v233) == 1) {
                goto LABEL_226;
              }
              unsigned __int8 v340 = v464;
              unint64_t v341 = *v464;
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BFDEB94C(v450, v451, v452, v457);
              uint64_t v342 = v458;
              uint64_t v343 = v453;
              sub_1BFF62358(v458, v453, v229);
              sub_1BFDEB8B4(v446);
              LOBYTE(v61) = v456;
              sub_1BFE94AB4(v463, v455, v456);
              sub_1C00F5B0C(v459);
              sub_1BFF62358(v342, v343, v229);
              char v344 = swift_isUniquelyReferenced_nonNull_native();
              *unsigned __int8 v340 = v341;
              uint64_t v4 = v461;
              if ((v344 & 1) == 0)
              {
                unint64_t v341 = sub_1BFED9EFC(0, *(void *)(v341 + 16) + 1, 1, v341);
                *uint64_t v464 = v341;
              }
              unint64_t v346 = *(void *)(v341 + 16);
              unint64_t v345 = *(void *)(v341 + 24);
              if (v346 >= v345 >> 1)
              {
                uint64_t v410 = sub_1BFED9EFC(v345 > 1, v346 + 1, 1, v341);
                *uint64_t v464 = v410;
              }
              uint64_t v347 = sub_1C024699C(v346, v438);
              nullsub_1(v347);
              sub_1C1147B04(v441, type metadata accessor for FormatResource);
              uint64_t v64 = v455;
              uint64_t v238 = v453;
              uint64_t v237 = v458;
              uint64_t v65 = v446;
            }
          }
          sub_1C1147B04(v443, (uint64_t (*)(void))sub_1C0017828);
          sub_1C1147B04((uint64_t)v436, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
          uint64_t v63 = v229;
          sub_1BFF6179C(v237, v238, v229);
          goto LABEL_15;
        case 3uLL:
          uint64_t v239 = v454;
          uint64_t v240 = *(void *)((v54 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v241 = *(void *)((v54 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
          int v242 = *(unsigned __int8 *)((v54 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v243 = v444;
          uint64_t v429 = *(void *)((v54 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          void *v444 = v429;
          v243[1] = v240;
          v243[2] = v241;
          LODWORD(v430) = v242;
          *((unsigned char *)v243 + 24) = v242;
          uint64_t v244 = v54;
          type metadata accessor for FormatFontResource(0);
          swift_storeEnumTagMultiPayload();
          uint64_t v245 = type metadata accessor for FormatResource(0);
          swift_storeEnumTagMultiPayload();
          uint64_t v246 = *(void *)(v245 - 8);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v246 + 56))(v243, 0, 1, v245);
          uint64_t v247 = v442;
          sub_1C1147A28((uint64_t)v243, v442, (uint64_t (*)(void))sub_1C0017828);
          uint64_t v248 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v246 + 48);
          if (v248(v247, 1, v245) == 1)
          {
            uint64_t v249 = v244;
            uint64_t v250 = v453;
            sub_1BFF62358(v244, v453, v239);
            sub_1BFF62358(v244, v250, v239);
            swift_retain_n();
            swift_bridgeObjectRetain();
            sub_1BFDEB94C(v450, v451, v452, v457);
            sub_1BFF62358(v244, v250, v239);
            sub_1BFDEB8B4(v65);
            uint64_t v64 = v455;
            sub_1BFE94AB4(v463, v455, v456);
            sub_1C00F5B0C(v459);
            sub_1BFF62358(v249, v250, v239);
            sub_1BFF67F78(v429, v240, v241, v430);
LABEL_118:
            uint64_t v4 = v461;
            a2 = v447;
            goto LABEL_143;
          }
          uint64_t v446 = v65;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v297 = (uint64_t)v431;
            sub_1C1147A28((uint64_t)v444, (uint64_t)v431, (uint64_t (*)(void))sub_1C0017828);
            if (v248(v297, 1, v245) == 1)
            {
              __break(1u);
LABEL_225:
              __break(1u);
LABEL_226:
              __break(1u);
LABEL_227:
              __break(1u);
LABEL_228:
              __break(1u);
LABEL_229:
              __break(1u);
              JUMPOUT(0x1C113EBE0);
            }
            uint64_t v298 = v241;
            uint64_t v299 = v458;
            uint64_t v250 = v453;
            sub_1BFF62358(v458, v453, v239);
            sub_1BFF62358(v299, v250, v239);
            swift_retain_n();
            swift_bridgeObjectRetain();
            sub_1BFDEB94C(v450, v451, v452, v457);
            sub_1BFF62358(v299, v250, v239);
            uint64_t v65 = v446;
            sub_1BFDEB8B4(v446);
            uint64_t v300 = v455;
            sub_1BFE94AB4(v463, v455, v456);
            sub_1C00F5B0C(v459);
            sub_1BFF62358(v299, v250, v239);
            sub_1BFF67F78(v429, v240, v298, v430);
            uint64_t v301 = v434;
            sub_1C02466E4();
            uint64_t v302 = *(void *)(*v301 + 16);
            sub_1C0246818(v302);
            uint64_t v303 = v302;
            uint64_t v249 = v299;
            uint64_t v304 = sub_1C024699C(v303, v297);
            nullsub_1(v304);
            uint64_t v64 = v300;
            sub_1C1147B04(v442, type metadata accessor for FormatResource);
            goto LABEL_118;
          }
          uint64_t v348 = v240;
          uint64_t v349 = v440;
          sub_1C1147A28((uint64_t)v444, v440, (uint64_t (*)(void))sub_1C0017828);
          if (v248(v349, 1, v245) == 1) {
            goto LABEL_227;
          }
          uint64_t v350 = v458;
          uint64_t v351 = v453;
          sub_1BFF62358(v458, v453, v239);
          long long v352 = v464;
          unint64_t v353 = *v464;
          sub_1BFF62358(v350, v351, v239);
          swift_retain_n();
          id v354 = v352;
          swift_bridgeObjectRetain();
          sub_1BFDEB94C(v450, v451, v452, v457);
          sub_1BFF62358(v350, v351, v239);
          sub_1BFDEB8B4(v446);
          sub_1BFE94AB4(v463, v455, v456);
          sub_1C00F5B0C(v459);
          sub_1BFF62358(v350, v351, v239);
          sub_1BFF67F78(v429, v348, v241, v430);
          char v355 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v356 = v353;
          *long long v352 = v353;
          uint64_t v4 = v461;
          a2 = v447;
          if ((v355 & 1) == 0)
          {
            unint64_t v356 = sub_1BFED9EFC(0, *(void *)(v356 + 16) + 1, 1, v356);
            *id v354 = v356;
          }
          uint64_t v357 = v442;
          uint64_t v358 = *(void *)(v356 + 16);
          sub_1C0246818(v358);
          uint64_t v359 = sub_1C024699C(v358, v440);
          nullsub_1(v359);
          sub_1C1147B04(v357, type metadata accessor for FormatResource);
          uint64_t v250 = v453;
          uint64_t v249 = v458;
          uint64_t v64 = v455;
          uint64_t v65 = v446;
LABEL_143:
          sub_1C1147B04((uint64_t)v444, (uint64_t (*)(void))sub_1C0017828);
          sub_1BFF6179C(v249, v250, v239);
          sub_1BFF6179C(v249, v250, v239);
          uint64_t v63 = v239;
          sub_1BFF61770(v249, v250, v239, 0);
          char v66 = v456;
LABEL_38:
          if ((~v65 & 0xF000000000000007) != 0)
          {
            *(void *)&long long v466 = v65;
            long long v137 = *(_OWORD *)(a2 + 80);
            unsigned long long v477 = *(_OWORD *)(a2 + 64);
            long long v478 = v137;
            unint64_t v479 = *(void *)(a2 + 96);
            long long v138 = *(_OWORD *)(a2 + 16);
            long long v473 = *(_OWORD *)a2;
            long long v474 = v138;
            long long v139 = *(_OWORD *)(a2 + 48);
            long long v475 = *(_OWORD *)(a2 + 32);
            long long v476 = v139;
            uint64_t v140 = v65;
            uint64_t v141 = v65;
            uint64_t v142 = v460;
            sub_1BFDEB8B4(v140);
            swift_retain();
            a1 = v464;
            sub_1BFF79540((uint64_t)v464, (uint64_t)&v473);
            if (v4)
            {
              swift_release();
              sub_1BFDEB900(v141);
              sub_1BFDEB9E0(v450, v451, v452, v457);
              sub_1BFF6179C(v458, v453, v63);
              sub_1BFDEB900(v141);
              sub_1BFE94AD4(v463, v455, v456);
              unint64_t v411 = v459;
              goto LABEL_194;
            }
            swift_release();
            *(void *)&long long v466 = v142;
            long long v143 = *(_OWORD *)(a2 + 80);
            unsigned long long v477 = *(_OWORD *)(a2 + 64);
            long long v478 = v143;
            unint64_t v479 = *(void *)(a2 + 96);
            long long v144 = *(_OWORD *)(a2 + 16);
            long long v473 = *(_OWORD *)a2;
            long long v474 = v144;
            long long v145 = *(_OWORD *)(a2 + 48);
            long long v475 = *(_OWORD *)(a2 + 32);
            long long v476 = v145;
            swift_retain();
            sub_1BFF79540((uint64_t)a1, (uint64_t)&v473);
            swift_release();
            sub_1BFDEB900(v141);
            unint64_t v136 = v459;
            uint64_t v64 = v455;
            uint64_t v65 = v141;
            char v66 = v456;
            char v135 = v457;
          }
          else
          {
            char v135 = v457;
            unint64_t v136 = v459;
            a1 = v464;
          }
          if ((~v136 & 0xF000000000000007) == 0)
          {
            sub_1BFDEB9E0(v450, v451, v452, v135);
            sub_1BFF6179C(v458, v453, v63);
            sub_1BFDEB900(v65);
            uint64_t v41 = v463;
            uint64_t v42 = v64;
            char v43 = v66;
            goto LABEL_4;
          }
          switch(v136 >> 62)
          {
            case 1uLL:
              uint64_t v446 = v65;
              *(void *)&long long v466 = *(void *)((v136 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
              long long v155 = *(_OWORD *)(a2 + 80);
              unsigned long long v477 = *(_OWORD *)(a2 + 64);
              long long v478 = v155;
              unint64_t v479 = *(void *)(a2 + 96);
              long long v156 = *(_OWORD *)(a2 + 16);
              long long v473 = *(_OWORD *)a2;
              long long v474 = v156;
              long long v157 = *(_OWORD *)(a2 + 48);
              long long v475 = *(_OWORD *)(a2 + 32);
              long long v476 = v157;
              sub_1C00F5B0C(v136);
              swift_retain();
              sub_1BFF79540((uint64_t)a1, (uint64_t)&v473);
              if (v4)
              {
                swift_release();
                sub_1C00F5B20(v136);
                sub_1BFDEB9E0(v450, v451, v452, v457);
                sub_1BFF6179C(v458, v453, v63);
                sub_1BFDEB900(v446);
                sub_1BFE94AD4(v463, v455, v456);
                unint64_t v411 = v136;
                goto LABEL_194;
              }
              swift_release();
              sub_1C00F5B20(v136);
              sub_1BFDEB9E0(v450, v451, v452, v457);
              sub_1BFF6179C(v458, v453, v63);
              sub_1BFDEB900(v446);
              sub_1BFE94AD4(v463, v455, v456);
              sub_1C00F5B20(v136);
              swift_bridgeObjectRelease();
              swift_release_n();
              uint64_t v40 = v448;
              goto LABEL_7;
            case 2uLL:
              unint64_t v158 = *(void *)((v136 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
              uint64_t v159 = *(void *)((v136 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
              switch(v158 >> 62)
              {
                case 1uLL:
                  uint64_t v446 = v65;
                  uint64_t v211 = v4;
                  uint64_t v212 = v463;
                  *(void *)&long long v466 = *(void *)((v158 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
                  long long v213 = *(_OWORD *)(a2 + 80);
                  unsigned long long v477 = *(_OWORD *)(a2 + 64);
                  long long v478 = v213;
                  unint64_t v479 = *(void *)(a2 + 96);
                  long long v214 = *(_OWORD *)(a2 + 16);
                  long long v473 = *(_OWORD *)a2;
                  long long v474 = v214;
                  long long v215 = *(_OWORD *)(a2 + 48);
                  long long v475 = *(_OWORD *)(a2 + 32);
                  long long v476 = v215;
                  sub_1C00F5B0C(v136);
                  sub_1BFF58F10(v158);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  sub_1BFF79540((uint64_t)a1, (uint64_t)&v473);
                  if (v211)
                  {
                    swift_release();
                    sub_1BFF07CD8(v158);
                    swift_bridgeObjectRelease();
                    sub_1C00F5B20(v136);
                    sub_1BFDEB9E0(v450, v451, v452, v457);
                    sub_1BFF6179C(v458, v453, v454);
                    sub_1BFDEB900(v446);
                    sub_1BFE94AD4(v212, v455, v456);
                    sub_1C00F5B20(v136);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    return;
                  }
                  swift_release();
                  uint64_t v64 = v455;
                  uint64_t v4 = 0;
                  uint64_t v65 = v446;
                  goto LABEL_183;
                case 2uLL:
                  unint64_t v216 = *(void *)((v158 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
                  uint64_t v429 = *(void *)((v158 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
                  unint64_t v430 = v216;
                  switch(v216 >> 62)
                  {
                    case 1uLL:
                      uint64_t v446 = v65;
                      uint64_t v461 = v4;
                      uint64_t v320 = v463;
                      unint64_t v321 = v430;
                      *(void *)&long long v466 = *(void *)((v430 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
                      long long v322 = *(_OWORD *)(a2 + 80);
                      unsigned long long v477 = *(_OWORD *)(a2 + 64);
                      long long v478 = v322;
                      unint64_t v479 = *(void *)(a2 + 96);
                      long long v323 = *(_OWORD *)(a2 + 16);
                      long long v473 = *(_OWORD *)a2;
                      long long v474 = v323;
                      long long v324 = *(_OWORD *)(a2 + 48);
                      long long v475 = *(_OWORD *)(a2 + 32);
                      long long v476 = v324;
                      sub_1C00F5B0C(v136);
                      unint64_t v427 = v158;
                      sub_1BFF58F10(v158);
                      swift_bridgeObjectRetain();
                      sub_1BFF58F10(v321);
                      swift_retain();
                      swift_bridgeObjectRetain();
                      uint64_t v325 = v461;
                      sub_1BFF79540((uint64_t)a1, (uint64_t)&v473);
                      uint64_t v4 = v325;
                      if (v325)
                      {
                        swift_release();
                        sub_1BFF07CD8(v430);
                        swift_bridgeObjectRelease();
                        sub_1BFF07CD8(v427);
                        swift_bridgeObjectRelease();
                        sub_1C00F5B20(v136);
                        sub_1BFDEB9E0(v450, v451, v452, v457);
                        sub_1BFF6179C(v458, v453, v454);
                        sub_1BFDEB900(v446);
                        sub_1BFE94AD4(v320, v455, v456);
                        unint64_t v420 = v136;
                        goto LABEL_216;
                      }
                      swift_release();
                      uint64_t v64 = v455;
                      uint64_t v65 = v446;
                      unint64_t v158 = v427;
                      goto LABEL_180;
                    case 2uLL:
                      unint64_t v326 = *(void *)((v430 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
                      uint64_t v426 = *(void *)((v430 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
                      unint64_t v428 = v326;
                      switch(v326 >> 62)
                      {
                        case 1uLL:
                          uint64_t v446 = v65;
                          uint64_t v461 = v4;
                          uint64_t v380 = v463;
                          unint64_t v381 = v428;
                          *(void *)&long long v466 = *(void *)((v428 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
                          long long v382 = *(_OWORD *)(a2 + 80);
                          unsigned long long v477 = *(_OWORD *)(a2 + 64);
                          long long v478 = v382;
                          unint64_t v479 = *(void *)(a2 + 96);
                          long long v383 = *(_OWORD *)(a2 + 16);
                          long long v473 = *(_OWORD *)a2;
                          long long v474 = v383;
                          long long v384 = *(_OWORD *)(a2 + 48);
                          long long v475 = *(_OWORD *)(a2 + 32);
                          long long v476 = v384;
                          sub_1C00F5B0C(v136);
                          unint64_t v427 = v158;
                          sub_1BFF58F10(v158);
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v430);
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v381);
                          swift_retain();
                          swift_bridgeObjectRetain();
                          uint64_t v385 = v461;
                          sub_1BFF79540((uint64_t)a1, (uint64_t)&v473);
                          uint64_t v4 = v385;
                          if (v385)
                          {
                            swift_release();
                            sub_1BFF07CD8(v428);
                            swift_bridgeObjectRelease();
                            sub_1BFF07CD8(v430);
                            swift_bridgeObjectRelease();
                            sub_1BFF07CD8(v427);
                            swift_bridgeObjectRelease();
                            sub_1C00F5B20(v136);
                            sub_1BFDEB9E0(v450, v451, v452, v457);
                            sub_1BFF6179C(v458, v453, v454);
                            sub_1BFDEB900(v446);
                            sub_1BFE94AD4(v380, v455, v456);
                            unint64_t v418 = v136;
LABEL_212:
                            sub_1C00F5B20(v418);
                            swift_release();
                            swift_release();
                            swift_bridgeObjectRelease();
                            goto LABEL_197;
                          }
                          swift_release();
                          uint64_t v64 = v455;
                          uint64_t v65 = v446;
                          unint64_t v158 = v427;
                          goto LABEL_177;
                        case 2uLL:
                          uint64_t v386 = *(void *)((v428 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
                          unint64_t v425 = *(void *)((v428 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
                          uint64_t v424 = v386;
                          switch(v425 >> 62)
                          {
                            case 1uLL:
                              uint64_t v446 = v65;
                              unint64_t v397 = v425;
                              *(void *)&long long v466 = *(void *)((v425 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
                              long long v398 = *(_OWORD *)(a2 + 80);
                              unsigned long long v477 = *(_OWORD *)(a2 + 64);
                              long long v478 = v398;
                              unint64_t v479 = *(void *)(a2 + 96);
                              long long v399 = *(_OWORD *)(a2 + 16);
                              long long v473 = *(_OWORD *)a2;
                              long long v474 = v399;
                              long long v400 = *(_OWORD *)(a2 + 48);
                              long long v475 = *(_OWORD *)(a2 + 32);
                              long long v476 = v400;
                              sub_1C00F5B0C(v136);
                              unint64_t v427 = v158;
                              sub_1BFF58F10(v158);
                              swift_bridgeObjectRetain();
                              sub_1BFF58F10(v430);
                              swift_bridgeObjectRetain();
                              sub_1BFF58F10(v428);
                              swift_bridgeObjectRetain();
                              sub_1BFF58F10(v397);
                              swift_retain();
                              swift_bridgeObjectRetain();
                              sub_1BFF79540((uint64_t)a1, (uint64_t)&v473);
                              if (v4)
                              {
                                swift_release();
                                sub_1BFF07CD8(v425);
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v428);
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v430);
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v427);
                                swift_bridgeObjectRelease();
                                sub_1C00F5B20(v136);
                                sub_1BFDEB9E0(v450, v451, v452, v457);
                                sub_1BFF6179C(v458, v453, v454);
                                sub_1BFDEB900(v446);
                                sub_1BFE94AD4(v463, v455, v456);
                                sub_1C00F5B20(v136);
                                swift_release();
LABEL_223:
                                swift_release();
                                swift_bridgeObjectRelease();
                                goto LABEL_197;
                              }
                              swift_release();
                              uint64_t v64 = v455;
                              uint64_t v4 = 0;
                              uint64_t v65 = v446;
                              unint64_t v158 = v427;
                              goto LABEL_169;
                            case 2uLL:
                              uint64_t v446 = v65;
                              unint64_t v401 = v425;
                              unint64_t v402 = v136;
                              uint64_t v403 = *(void *)((v425 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
                              *(void *)&long long v466 = *(void *)((v425 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
                              unint64_t v404 = v466;
                              long long v405 = *(_OWORD *)(a2 + 80);
                              unsigned long long v477 = *(_OWORD *)(a2 + 64);
                              long long v478 = v405;
                              unint64_t v479 = *(void *)(a2 + 96);
                              long long v406 = *(_OWORD *)(a2 + 16);
                              long long v473 = *(_OWORD *)a2;
                              long long v474 = v406;
                              long long v407 = *(_OWORD *)(a2 + 48);
                              long long v475 = *(_OWORD *)(a2 + 32);
                              long long v476 = v407;
                              sub_1C00F5B0C(v402);
                              sub_1BFF58F10(v158);
                              swift_bridgeObjectRetain();
                              sub_1BFF58F10(v430);
                              swift_bridgeObjectRetain();
                              sub_1BFF58F10(v428);
                              swift_bridgeObjectRetain();
                              sub_1BFF58F10(v401);
                              swift_bridgeObjectRetain();
                              sub_1BFF58F10(v404);
                              swift_bridgeObjectRetain();
                              sub_1C05D6858((uint64_t)a1, (uint64_t)&v473);
                              if (v4)
                              {
                                sub_1BFF07CD8(v404);
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v425);
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v428);
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v430);
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v158);
                                swift_bridgeObjectRelease();
                                unint64_t v136 = v459;
                                sub_1C00F5B20(v459);
                                sub_1BFDEB9E0(v450, v451, v452, v457);
                                sub_1BFF6179C(v458, v453, v454);
                                sub_1BFDEB900(v446);
                                uint64_t v422 = v463;
                                uint64_t v423 = v455;
                                goto LABEL_222;
                              }
                              swift_bridgeObjectRetain();
                              sub_1C113EC6C((uint64_t)a1, (long long *)a2, v403);
                              swift_bridgeObjectRelease();
                              sub_1BFF07CD8(v404);
                              swift_bridgeObjectRelease();
                              unint64_t v136 = v459;
                              uint64_t v64 = v455;
                              uint64_t v65 = v446;
LABEL_169:
                              uint64_t v408 = v424;
LABEL_175:
                              swift_bridgeObjectRetain();
                              sub_1C113EC6C((uint64_t)a1, (long long *)a2, v408);
                              if (v4)
                              {
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v425);
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v428);
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v430);
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v158);
                                swift_bridgeObjectRelease();
                                sub_1C00F5B20(v136);
                                sub_1BFDEB9E0(v450, v451, v452, v457);
                                sub_1BFF6179C(v458, v453, v454);
                                sub_1BFDEB900(v65);
                                uint64_t v422 = v463;
                                uint64_t v423 = v64;
LABEL_222:
                                sub_1BFE94AD4(v422, v423, v456);
                                sub_1C00F5B20(v136);
                                swift_release();
                                goto LABEL_223;
                              }
                              swift_bridgeObjectRelease();
                              sub_1BFF07CD8(v425);
                              swift_bridgeObjectRelease();
LABEL_177:
                              uint64_t v337 = v426;
LABEL_178:
                              swift_bridgeObjectRetain();
                              sub_1C113EC6C((uint64_t)a1, (long long *)a2, v337);
                              if (v4)
                              {
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v428);
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v430);
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v158);
                                swift_bridgeObjectRelease();
                                sub_1C00F5B20(v136);
                                sub_1BFDEB9E0(v450, v451, v452, v457);
                                sub_1BFF6179C(v458, v453, v454);
                                sub_1BFDEB900(v65);
                                sub_1BFE94AD4(v463, v64, v456);
                                unint64_t v420 = v136;
LABEL_216:
                                sub_1C00F5B20(v420);
                                swift_bridgeObjectRelease();
                                goto LABEL_196;
                              }
                              swift_bridgeObjectRelease();
                              sub_1BFF07CD8(v428);
                              swift_bridgeObjectRelease();
LABEL_180:
                              uint64_t v379 = v429;
LABEL_181:
                              swift_bridgeObjectRetain();
                              sub_1C113EC6C((uint64_t)a1, (long long *)a2, v379);
                              if (!v4)
                              {
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v430);
                                swift_bridgeObjectRelease();
LABEL_183:
                                swift_bridgeObjectRetain();
                                sub_1C113EC6C((uint64_t)a1, (long long *)a2, v159);
                                if (v4) {
                                  goto LABEL_210;
                                }
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v158);
                                swift_bridgeObjectRelease();
                                sub_1C00F5B20(v136);
                                sub_1BFDEB9E0(v450, v451, v452, v457);
                                sub_1BFF6179C(v458, v453, v454);
                                sub_1BFDEB900(v65);
                                uint64_t v41 = v463;
                                uint64_t v42 = v64;
                                char v43 = v456;
LABEL_4:
                                sub_1BFE94AD4(v41, v42, v43);
                                sub_1C00F5B20(v136);
                                swift_bridgeObjectRelease();
LABEL_5:
                                swift_release_n();
LABEL_6:
                                uint64_t v40 = v448;
                                goto LABEL_7;
                              }
                              swift_bridgeObjectRelease();
                              sub_1BFF07CD8(v430);
LABEL_210:
                              swift_bridgeObjectRelease();
                              sub_1BFF07CD8(v158);
                              swift_bridgeObjectRelease();
                              sub_1C00F5B20(v136);
                              sub_1BFDEB9E0(v450, v451, v452, v457);
                              sub_1BFF6179C(v458, v453, v454);
                              sub_1BFDEB900(v65);
                              uint64_t v412 = v463;
                              uint64_t v413 = v64;
LABEL_193:
                              sub_1BFE94AD4(v412, v413, v456);
                              unint64_t v411 = v136;
LABEL_194:
                              sub_1C00F5B20(v411);
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
                              swift_release_n();
                              return;
                            case 3uLL:
                              sub_1C00F5B0C(v136);
                              sub_1BFF58F10(v158);
                              swift_bridgeObjectRetain();
                              sub_1BFF58F10(v430);
                              swift_bridgeObjectRetain();
                              sub_1BFF58F10(v428);
                              swift_bridgeObjectRetain();
                              if (v425 == 0xC000000000000000) {
                                unint64_t v409 = 0xC000000000000000;
                              }
                              else {
                                unint64_t v409 = 0xC000000000000008;
                              }
                              sub_1BFF58F10(v409);
                              uint64_t v408 = v424;
                              swift_bridgeObjectRetain();
                              goto LABEL_175;
                            default:
                              uint64_t v446 = v65;
                              unint64_t v387 = v136;
                              unint64_t v388 = v425;
                              uint64_t v389 = *(void *)(v425 + 16);
                              uint64_t v390 = *(void *)(v389 + 16);
                              sub_1C00F5B0C(v387);
                              sub_1BFF58F10(v158);
                              uint64_t v461 = v159;
                              swift_bridgeObjectRetain();
                              sub_1BFF58F10(v430);
                              swift_bridgeObjectRetain();
                              sub_1BFF58F10(v428);
                              swift_bridgeObjectRetain();
                              sub_1BFF58F10(v388);
                              if (v390)
                              {
                                uint64_t v391 = v4;
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                uint64_t v392 = 0;
                                while (1)
                                {
                                  *(void *)&long long v466 = *(void *)(v389 + 8 * v392 + 32);
                                  long long v393 = *(_OWORD *)(a2 + 80);
                                  unsigned long long v477 = *(_OWORD *)(a2 + 64);
                                  long long v478 = v393;
                                  unint64_t v479 = *(void *)(a2 + 96);
                                  long long v394 = *(_OWORD *)(a2 + 16);
                                  long long v473 = *(_OWORD *)a2;
                                  long long v474 = v394;
                                  long long v395 = *(_OWORD *)(a2 + 48);
                                  long long v475 = *(_OWORD *)(a2 + 32);
                                  long long v476 = v395;
                                  swift_retain();
                                  sub_1BFF79540((uint64_t)v464, (uint64_t)&v473);
                                  if (v391) {
                                    break;
                                  }
                                  ++v392;
                                  swift_release();
                                  if (v390 == v392)
                                  {
                                    swift_bridgeObjectRelease();
                                    uint64_t v4 = 0;
                                    a1 = v464;
                                    unint64_t v136 = v459;
                                    uint64_t v64 = v455;
                                    uint64_t v65 = v446;
                                    uint64_t v159 = v461;
                                    goto LABEL_169;
                                  }
                                }
                                swift_bridgeObjectRelease();
                                swift_release();
                                sub_1BFF07CD8(v425);
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v428);
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v430);
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v158);
                                swift_bridgeObjectRelease();
                                unint64_t v421 = v459;
                                sub_1C00F5B20(v459);
                                sub_1BFDEB9E0(v450, v451, v452, v457);
                                sub_1BFF6179C(v458, v453, v454);
                                sub_1BFDEB900(v446);
                                sub_1BFE94AD4(v463, v455, v456);
                                sub_1C00F5B20(v421);
                                swift_release();
                                goto LABEL_223;
                              }
                              uint64_t v408 = v424;
                              swift_bridgeObjectRetain();
                              unint64_t v136 = v459;
                              uint64_t v64 = v455;
                              uint64_t v65 = v446;
                              uint64_t v159 = v461;
                              goto LABEL_175;
                          }
                        case 3uLL:
                          sub_1C00F5B0C(v136);
                          sub_1BFF58F10(v158);
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v430);
                          swift_bridgeObjectRetain();
                          if (v428 == 0xC000000000000000) {
                            unint64_t v396 = 0xC000000000000000;
                          }
                          else {
                            unint64_t v396 = 0xC000000000000008;
                          }
                          sub_1BFF58F10(v396);
                          uint64_t v337 = v426;
                          swift_bridgeObjectRetain();
                          goto LABEL_178;
                        default:
                          uint64_t v446 = v65;
                          unint64_t v327 = v136;
                          unint64_t v328 = v428;
                          uint64_t v329 = *(void *)(v428 + 16);
                          uint64_t v330 = *(void *)(v329 + 16);
                          sub_1C00F5B0C(v327);
                          sub_1BFF58F10(v158);
                          uint64_t v461 = v159;
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v430);
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v328);
                          if (v330)
                          {
                            uint64_t v331 = v4;
                            uint64_t v332 = v426;
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            uint64_t v333 = 0;
                            while (1)
                            {
                              *(void *)&long long v466 = *(void *)(v329 + 8 * v333 + 32);
                              long long v334 = *(_OWORD *)(a2 + 80);
                              unsigned long long v477 = *(_OWORD *)(a2 + 64);
                              long long v478 = v334;
                              unint64_t v479 = *(void *)(a2 + 96);
                              long long v335 = *(_OWORD *)(a2 + 16);
                              long long v473 = *(_OWORD *)a2;
                              long long v474 = v335;
                              long long v336 = *(_OWORD *)(a2 + 48);
                              long long v475 = *(_OWORD *)(a2 + 32);
                              long long v476 = v336;
                              swift_retain();
                              sub_1BFF79540((uint64_t)v464, (uint64_t)&v473);
                              if (v331) {
                                break;
                              }
                              ++v333;
                              swift_release();
                              if (v330 == v333)
                              {
                                swift_bridgeObjectRelease();
                                uint64_t v4 = 0;
                                unint64_t v136 = v459;
                                uint64_t v64 = v455;
                                uint64_t v65 = v446;
                                uint64_t v337 = v332;
                                a1 = v464;
                                goto LABEL_164;
                              }
                            }
                            swift_bridgeObjectRelease();
                            swift_release();
                            sub_1BFF07CD8(v428);
                            swift_bridgeObjectRelease();
                            sub_1BFF07CD8(v430);
                            swift_bridgeObjectRelease();
                            sub_1BFF07CD8(v158);
                            swift_bridgeObjectRelease();
                            unint64_t v419 = v459;
                            sub_1C00F5B20(v459);
                            sub_1BFDEB9E0(v450, v451, v452, v457);
                            sub_1BFF6179C(v458, v453, v454);
                            sub_1BFDEB900(v446);
                            sub_1BFE94AD4(v463, v455, v456);
                            sub_1C00F5B20(v419);
                            swift_bridgeObjectRelease();
                            swift_release_n();
                            goto LABEL_197;
                          }
                          uint64_t v337 = v426;
                          swift_bridgeObjectRetain();
                          unint64_t v136 = v459;
                          uint64_t v64 = v455;
                          uint64_t v65 = v446;
LABEL_164:
                          uint64_t v159 = v461;
                          goto LABEL_178;
                      }
                    case 3uLL:
                      sub_1C00F5B0C(v136);
                      sub_1BFF58F10(v158);
                      swift_bridgeObjectRetain();
                      if (v430 == 0xC000000000000000) {
                        unint64_t v338 = 0xC000000000000000;
                      }
                      else {
                        unint64_t v338 = 0xC000000000000008;
                      }
                      sub_1BFF58F10(v338);
                      uint64_t v379 = v429;
                      swift_bridgeObjectRetain();
                      goto LABEL_181;
                    default:
                      uint64_t v446 = v65;
                      unint64_t v217 = v136;
                      unint64_t v218 = v430;
                      uint64_t v219 = *(void *)(v430 + 16);
                      uint64_t v220 = *(void *)(v219 + 16);
                      sub_1C00F5B0C(v217);
                      sub_1BFF58F10(v158);
                      uint64_t v461 = v159;
                      swift_bridgeObjectRetain();
                      sub_1BFF58F10(v218);
                      if (v220)
                      {
                        uint64_t v221 = v220;
                        uint64_t v222 = v454;
                        uint64_t v223 = v4;
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        uint64_t v224 = 0;
                        while (1)
                        {
                          *(void *)&long long v466 = *(void *)(v219 + 8 * v224 + 32);
                          long long v225 = *(_OWORD *)(a2 + 80);
                          unsigned long long v477 = *(_OWORD *)(a2 + 64);
                          long long v478 = v225;
                          unint64_t v479 = *(void *)(a2 + 96);
                          long long v226 = *(_OWORD *)(a2 + 16);
                          long long v473 = *(_OWORD *)a2;
                          long long v474 = v226;
                          long long v227 = *(_OWORD *)(a2 + 48);
                          long long v475 = *(_OWORD *)(a2 + 32);
                          long long v476 = v227;
                          swift_retain();
                          sub_1BFF79540((uint64_t)v464, (uint64_t)&v473);
                          if (v223) {
                            break;
                          }
                          ++v224;
                          swift_release();
                          if (v221 == v224)
                          {
                            swift_bridgeObjectRelease();
                            uint64_t v4 = 0;
                            a1 = v464;
                            unint64_t v136 = v459;
                            uint64_t v64 = v455;
                            uint64_t v65 = v446;
                            uint64_t v159 = v461;
                            goto LABEL_180;
                          }
                        }
                        swift_bridgeObjectRelease();
                        swift_release();
                        sub_1BFF07CD8(v430);
                        swift_bridgeObjectRelease();
                        sub_1BFF07CD8(v158);
                        swift_bridgeObjectRelease();
                        unint64_t v414 = v459;
                        sub_1C00F5B20(v459);
                        sub_1BFDEB9E0(v450, v451, v452, v457);
                        sub_1BFF6179C(v458, v453, v222);
                        sub_1BFDEB900(v446);
                        sub_1BFE94AD4(v463, v455, v456);
                        sub_1C00F5B20(v414);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_release_n();
                        return;
                      }
                      uint64_t v379 = v429;
                      swift_bridgeObjectRetain();
                      unint64_t v136 = v459;
                      uint64_t v65 = v446;
                      uint64_t v159 = v461;
                      goto LABEL_181;
                  }
                case 3uLL:
                  sub_1C00F5B0C(v136);
                  if (v158 == 0xC000000000000000) {
                    unint64_t v228 = 0xC000000000000000;
                  }
                  else {
                    unint64_t v228 = 0xC000000000000008;
                  }
                  sub_1BFF58F10(v228);
                  swift_bridgeObjectRetain();
                  goto LABEL_183;
                default:
                  unint64_t v160 = v136;
                  uint64_t v161 = *(void *)(v158 + 16);
                  uint64_t v162 = *(void *)(v161 + 16);
                  sub_1C00F5B0C(v160);
                  sub_1BFF58F10(v158);
                  if (v162)
                  {
                    uint64_t v446 = v65;
                    uint64_t v461 = v159;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    uint64_t v163 = 0;
                    while (1)
                    {
                      *(void *)&long long v466 = *(void *)(v161 + 8 * v163 + 32);
                      long long v164 = *(_OWORD *)(a2 + 80);
                      unsigned long long v477 = *(_OWORD *)(a2 + 64);
                      long long v478 = v164;
                      unint64_t v479 = *(void *)(a2 + 96);
                      long long v165 = *(_OWORD *)(a2 + 16);
                      long long v473 = *(_OWORD *)a2;
                      long long v474 = v165;
                      long long v166 = *(_OWORD *)(a2 + 48);
                      long long v475 = *(_OWORD *)(a2 + 32);
                      long long v476 = v166;
                      swift_retain();
                      sub_1BFF79540((uint64_t)v464, (uint64_t)&v473);
                      if (v4) {
                        break;
                      }
                      ++v163;
                      swift_release();
                      if (v162 == v163)
                      {
                        swift_bridgeObjectRelease();
                        a1 = v464;
                        unint64_t v136 = v459;
                        uint64_t v64 = v455;
                        uint64_t v65 = v446;
                        uint64_t v159 = v461;
                        goto LABEL_183;
                      }
                    }
                    swift_bridgeObjectRelease();
                    swift_release();
                    sub_1BFF07CD8(v158);
                    swift_bridgeObjectRelease();
LABEL_192:
                    unint64_t v136 = v459;
                    sub_1C00F5B20(v459);
                    sub_1BFDEB9E0(v450, v451, v452, v457);
                    sub_1BFF6179C(v458, v453, v454);
                    sub_1BFDEB900(v446);
                    uint64_t v412 = v463;
                    uint64_t v413 = v455;
                    goto LABEL_193;
                  }
                  swift_bridgeObjectRetain();
                  a1 = v464;
                  unint64_t v136 = v459;
                  uint64_t v64 = v455;
                  goto LABEL_183;
              }
            case 3uLL:
              unint64_t v167 = v136;
              char v168 = v66;
              uint64_t v169 = v65;
              uint64_t v170 = v63;
              uint64_t v171 = v64;
              uint64_t v172 = v463;
              if (v167 == 0xC000000000000000)
              {
                sub_1C00F5B20(0xC000000000000000);
                sub_1BFDEB9E0(v450, v451, v452, v457);
                sub_1BFF6179C(v458, v453, v170);
                sub_1BFDEB900(v169);
                sub_1BFE94AD4(v172, v171, v168);
                unint64_t v173 = 0xC000000000000000;
              }
              else
              {
                sub_1C00F5B20(0xC000000000000008);
                sub_1BFDEB9E0(v450, v451, v452, v457);
                sub_1BFF6179C(v458, v453, v170);
                sub_1BFDEB900(v169);
                sub_1BFE94AD4(v172, v171, v168);
                unint64_t v173 = 0xC000000000000008;
              }
              sub_1C00F5B20(v173);
              swift_bridgeObjectRelease();
              goto LABEL_5;
            default:
              uint64_t v146 = v463;
              unint64_t v147 = v136;
              uint64_t v148 = *(void *)(v136 + 16);
              uint64_t v149 = *(void *)(v148 + 16);
              if (!v149)
              {
                unint64_t v154 = v147;
LABEL_62:
                sub_1BFDEB9E0(v450, v451, v452, v135);
                sub_1BFF6179C(v458, v453, v454);
                sub_1BFDEB900(v65);
                sub_1BFE94AD4(v146, v455, v66);
                sub_1C00F5B20(v154);
                swift_release_n();
                swift_bridgeObjectRelease();
                a1 = v464;
                goto LABEL_6;
              }
              uint64_t v446 = v65;
              sub_1C00F5B0C(v147);
              swift_bridgeObjectRetain();
              uint64_t v150 = 0;
              while (1)
              {
                *(void *)&long long v466 = *(void *)(v148 + 8 * v150 + 32);
                long long v151 = *(_OWORD *)(a2 + 80);
                unsigned long long v477 = *(_OWORD *)(a2 + 64);
                long long v478 = v151;
                unint64_t v479 = *(void *)(a2 + 96);
                long long v152 = *(_OWORD *)(a2 + 16);
                long long v473 = *(_OWORD *)a2;
                long long v474 = v152;
                long long v153 = *(_OWORD *)(a2 + 48);
                long long v475 = *(_OWORD *)(a2 + 32);
                long long v476 = v153;
                swift_retain();
                sub_1BFF79540((uint64_t)v464, (uint64_t)&v473);
                if (v4) {
                  break;
                }
                ++v150;
                swift_release();
                if (v149 == v150)
                {
                  swift_bridgeObjectRelease();
                  unint64_t v154 = v459;
                  sub_1C00F5B20(v459);
                  char v66 = v456;
                  uint64_t v146 = v463;
                  uint64_t v65 = v446;
                  char v135 = v457;
                  goto LABEL_62;
                }
              }
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_192;
          }
        case 4uLL:
          uint64_t v446 = v65;
          unint64_t v251 = *(void *)((v54 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v252 = *(void *)((v54 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v253 = *(void *)((v54 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
          LODWORD(v254) = *(unsigned __int8 *)((v54 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
          unint64_t v428 = *(void *)((v54 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
          uint64_t v255 = v437;
          unint64_t v430 = v251;
          unint64_t *v437 = v251;
          v255[1] = v252;
          uint64_t v429 = v252;
          v255[2] = v253;
          *((unsigned char *)v255 + 24) = v254;
          uint64_t v256 = v54;
          type metadata accessor for FormatFontResource(0);
          swift_storeEnumTagMultiPayload();
          uint64_t v257 = type metadata accessor for FormatResource(0);
          swift_storeEnumTagMultiPayload();
          uint64_t v258 = *(void *)(v257 - 8);
          (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v258 + 56))(v255, 0, 1, v257);
          uint64_t v259 = (uint64_t)v435;
          sub_1C1147A28((uint64_t)v255, (uint64_t)v435, (uint64_t (*)(void))sub_1C0017828);
          uint64_t v260 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v258 + 48);
          int v261 = v260(v259, 1, v257);
          uint64_t v262 = v454;
          if (v261 == 1)
          {
            uint64_t v263 = v453;
            sub_1BFF62358(v256, v453, v454);
            sub_1BFF62358(v256, v263, v262);
            uint64_t v264 = v430;
            uint64_t v265 = v429;
            sub_1BFF67F78(v430, v429, v253, v254);
            swift_retain_n();
            swift_bridgeObjectRetain();
            sub_1BFDEB94C(v450, v451, v452, v457);
            sub_1BFF62358(v256, v263, v262);
            sub_1BFDEB8B4(v446);
            sub_1BFE94AB4(v463, v455, v456);
            unint64_t v266 = v459;
            sub_1C00F5B0C(v459);
            sub_1BFF62358(v256, v263, v262);
            sub_1BFF67F78(v264, v265, v253, v254);
            sub_1BFF67F78(v264, v265, v253, v254);
            unint64_t v267 = v428;
            swift_retain();
            a2 = v447;
            uint64_t v268 = v464;
            uint64_t v269 = v265;
            unint64_t v270 = v267;
          }
          else
          {
            LODWORD(v426) = v254;
            unint64_t v427 = v253;
            uint64_t v269 = v429;
            int v305 = swift_getEnumCaseMultiPayload();
            a2 = v447;
            if (v305 == 1)
            {
              uint64_t v306 = (uint64_t)v433;
              sub_1C1147A28((uint64_t)v437, (uint64_t)v433, (uint64_t (*)(void))sub_1C0017828);
              int v307 = v260(v306, 1, v257);
              char v308 = v456;
              uint64_t v309 = v446;
              if (v307 == 1) {
                goto LABEL_225;
              }
              uint64_t v254 = v458;
              uint64_t v310 = v453;
              uint64_t v311 = v454;
              sub_1BFF62358(v458, v453, v454);
              sub_1BFF62358(v254, v310, v311);
              uint64_t v312 = v430;
              char v313 = v426;
              sub_1BFF67F78(v430, v269, v427, v426);
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BFDEB94C(v450, v451, v452, v457);
              sub_1BFF62358(v254, v310, v311);
              sub_1BFDEB8B4(v309);
              sub_1BFE94AB4(v463, v455, v308);
              sub_1C00F5B0C(v459);
              uint64_t v314 = v254;
              LOBYTE(v254) = v313;
              uint64_t v315 = v310;
              uint64_t v253 = v427;
              sub_1BFF62358(v314, v315, v311);
              sub_1BFF67F78(v312, v269, v253, v313);
              sub_1BFF67F78(v312, v269, v253, v313);
              unint64_t v270 = v428;
              swift_retain();
              unsigned __int8 v316 = v434;
              sub_1C02466E4();
              uint64_t v317 = *(void *)(*v316 + 16);
              sub_1C0246818(v317);
              uint64_t v318 = v317;
              unint64_t v266 = v459;
              uint64_t v319 = sub_1C024699C(v318, (uint64_t)v433);
              nullsub_1(v319);
              sub_1C1147B04((uint64_t)v435, type metadata accessor for FormatResource);
              uint64_t v268 = v464;
            }
            else
            {
              uint64_t v360 = (uint64_t)v432;
              sub_1C1147A28((uint64_t)v437, (uint64_t)v432, (uint64_t (*)(void))sub_1C0017828);
              int v361 = v260(v360, 1, v257);
              char v362 = v456;
              uint64_t v363 = v446;
              uint64_t v268 = v464;
              if (v361 == 1) {
                goto LABEL_228;
              }
              uint64_t v254 = v458;
              uint64_t v364 = v453;
              uint64_t v365 = v454;
              sub_1BFF62358(v458, v453, v454);
              sub_1BFF62358(v254, v364, v365);
              uint64_t v366 = v430;
              sub_1BFF67F78(v430, v269, v427, v426);
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BFDEB94C(v450, v451, v452, v457);
              sub_1BFF62358(v254, v364, v365);
              sub_1BFDEB8B4(v363);
              sub_1BFE94AB4(v463, v455, v362);
              sub_1C00F5B0C(v459);
              uint64_t v367 = v254;
              LOBYTE(v254) = v426;
              uint64_t v368 = v364;
              uint64_t v253 = v427;
              sub_1BFF62358(v367, v368, v365);
              sub_1BFF67F78(v366, v269, v253, v254);
              sub_1BFF67F78(v366, v269, v253, v254);
              unint64_t v270 = v428;
              swift_retain();
              sub_1C02466E4();
              uint64_t v369 = *(void *)(*v268 + 16);
              sub_1C0246818(v369);
              uint64_t v370 = v369;
              unint64_t v266 = v459;
              uint64_t v371 = sub_1C024699C(v370, (uint64_t)v432);
              nullsub_1(v371);
              sub_1C1147B04((uint64_t)v435, type metadata accessor for FormatResource);
            }
          }
          sub_1C1147B04((uint64_t)v437, (uint64_t (*)(void))sub_1C0017828);
          sub_1BFF05CCC(v430, v269, v253, v254);
          *(void *)&long long v466 = v270;
          long long v372 = *(_OWORD *)(a2 + 80);
          unsigned long long v477 = *(_OWORD *)(a2 + 64);
          long long v478 = v372;
          unint64_t v479 = *(void *)(a2 + 96);
          long long v373 = *(_OWORD *)(a2 + 16);
          long long v473 = *(_OWORD *)a2;
          long long v474 = v373;
          long long v374 = *(_OWORD *)(a2 + 48);
          long long v475 = *(_OWORD *)(a2 + 32);
          long long v476 = v374;
          swift_retain();
          uint64_t v375 = v461;
          sub_1BFF79C34(v268, (uint64_t *)&v473);
          uint64_t v4 = v375;
          if (v375)
          {
            swift_release();
            sub_1BFF05CCC(v430, v269, v253, v254);
            swift_release();
            uint64_t v415 = v458;
            uint64_t v416 = v453;
            uint64_t v417 = v454;
            sub_1BFF6179C(v458, v453, v454);
            sub_1BFF6179C(v415, v416, v417);
            sub_1BFF61770(v415, v416, v417, 0);
            sub_1BFDEB9E0(v450, v451, v452, v457);
            sub_1BFF6179C(v415, v416, v417);
            sub_1BFDEB900(v446);
            sub_1BFE94AD4(v463, v455, v456);
            unint64_t v418 = v266;
            goto LABEL_212;
          }
          swift_release();
          sub_1BFF05CCC(v430, v269, v253, v254);
          swift_release();
          uint64_t v376 = v458;
          uint64_t v377 = v453;
          uint64_t v378 = v454;
          sub_1BFF6179C(v458, v453, v454);
          sub_1BFF6179C(v376, v377, v378);
          uint64_t v63 = v378;
          sub_1BFF61770(v376, v377, v378, 0);
          char v66 = v456;
          uint64_t v65 = v446;
          uint64_t v64 = v455;
          goto LABEL_38;
        default:
          uint64_t v130 = v54;
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BFDEB94C(v450, v451, v452, v53);
          uint64_t v63 = v454;
          sub_1BFF62358(v130, v453, v454);
          sub_1BFDEB8B4(v65);
          uint64_t v64 = v455;
          sub_1BFE94AB4(v129, v455, v66);
          unint64_t v131 = v128;
          goto LABEL_36;
      }
  }
}

uint64_t sub_1C113EC6C(uint64_t result, long long *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v7 = result;
    uint64_t v8 = a3 + 32;
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    uint64_t v110 = v8;
    uint64_t v105 = v5;
    while (2)
    {
      unint64_t v10 = *(void *)(v8 + 24 * v9++ + 16);
      switch(v10 >> 62)
      {
        case 1uLL:
          unint64_t v118 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          long long v19 = a2[5];
          long long v115 = a2[4];
          long long v116 = v19;
          uint64_t v117 = *((void *)a2 + 12);
          long long v20 = a2[1];
          long long v111 = *a2;
          long long v112 = v20;
          long long v21 = a2[3];
          long long v113 = a2[2];
          long long v114 = v21;
          swift_bridgeObjectRetain();
          sub_1BFF58F10(v10);
          sub_1BFF58F10(v10);
          swift_retain();
          sub_1BFF79540(v7, (uint64_t)&v111);
          swift_release();
          sub_1BFF07CD8(v10);
          swift_bridgeObjectRelease();
          sub_1BFF07CD8(v10);
          if (!v4) {
            goto LABEL_5;
          }
          goto LABEL_85;
        case 2uLL:
          unint64_t v22 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v23 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
          switch(v22 >> 62)
          {
            case 1uLL:
              unint64_t v118 = *(void *)((v22 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
              long long v33 = a2[5];
              long long v115 = a2[4];
              long long v116 = v33;
              uint64_t v117 = *((void *)a2 + 12);
              long long v34 = a2[1];
              long long v111 = *a2;
              long long v112 = v34;
              long long v35 = a2[3];
              long long v113 = a2[2];
              long long v114 = v35;
              swift_bridgeObjectRetain();
              sub_1BFF58F10(v10);
              sub_1BFF58F10(v10);
              sub_1BFF58F10(v22);
              swift_bridgeObjectRetain();
              sub_1BFF58F10(v22);
              swift_retain();
              sub_1BFF79540(v7, (uint64_t)&v111);
              if (v4)
              {
                swift_release();
                sub_1BFF07CD8(v22);
                sub_1BFF07CD8(v22);
                swift_bridgeObjectRelease();
                sub_1BFF07CD8(v10);
                swift_bridgeObjectRelease();
                sub_1BFF07CD8(v10);
                return swift_bridgeObjectRelease();
              }
              swift_release();
              sub_1BFF07CD8(v22);
              uint64_t v4 = 0;
LABEL_75:
              uint64_t v5 = v105;
              goto LABEL_76;
            case 2uLL:
              unint64_t v104 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
              uint64_t v36 = v22 & 0x3FFFFFFFFFFFFFFFLL;
              unint64_t v37 = *(void *)((v22 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
              uint64_t v38 = *(void *)(v36 + 24);
              switch(v37 >> 62)
              {
                case 1uLL:
                  unint64_t v118 = *(void *)((v37 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
                  long long v49 = a2[5];
                  long long v115 = a2[4];
                  long long v116 = v49;
                  uint64_t v117 = *((void *)a2 + 12);
                  long long v50 = a2[1];
                  long long v111 = *a2;
                  long long v112 = v50;
                  long long v51 = a2[3];
                  long long v113 = a2[2];
                  long long v114 = v51;
                  swift_bridgeObjectRetain();
                  sub_1BFF58F10(v10);
                  sub_1BFF58F10(v10);
                  sub_1BFF58F10(v104);
                  swift_bridgeObjectRetain();
                  sub_1BFF58F10(v104);
                  sub_1BFF58F10(v37);
                  swift_bridgeObjectRetain();
                  sub_1BFF58F10(v37);
                  swift_retain();
                  sub_1BFF79540(v7, (uint64_t)&v111);
                  if (!v4)
                  {
                    swift_release();
                    sub_1BFF07CD8(v37);
                    goto LABEL_73;
                  }
                  swift_release();
                  sub_1BFF07CD8(v37);
                  sub_1BFF07CD8(v37);
LABEL_94:
                  swift_bridgeObjectRelease();
                  sub_1BFF07CD8(v104);
                  sub_1BFF07CD8(v104);
                  goto LABEL_101;
                case 2uLL:
                  unint64_t v52 = *(void *)((v37 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
                  uint64_t v96 = *(void *)((v37 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
                  uint64_t v98 = *(void *)(v36 + 24);
                  switch(v52 >> 62)
                  {
                    case 1uLL:
                      unint64_t v118 = *(void *)((v52 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
                      long long v62 = a2[5];
                      long long v115 = a2[4];
                      long long v116 = v62;
                      uint64_t v117 = *((void *)a2 + 12);
                      long long v63 = a2[1];
                      long long v111 = *a2;
                      long long v112 = v63;
                      long long v64 = a2[3];
                      long long v113 = a2[2];
                      long long v114 = v64;
                      swift_bridgeObjectRetain();
                      sub_1BFF58F10(v10);
                      sub_1BFF58F10(v10);
                      sub_1BFF58F10(v104);
                      swift_bridgeObjectRetain();
                      sub_1BFF58F10(v104);
                      sub_1BFF58F10(v37);
                      swift_bridgeObjectRetain();
                      sub_1BFF58F10(v37);
                      sub_1BFF58F10(v52);
                      swift_bridgeObjectRetain();
                      sub_1BFF58F10(v52);
                      swift_retain();
                      sub_1BFF79540(v7, (uint64_t)&v111);
                      if (!v4)
                      {
                        swift_release();
                        sub_1BFF07CD8(v52);
                        goto LABEL_71;
                      }
                      swift_release();
                      sub_1BFF07CD8(v52);
                      sub_1BFF07CD8(v52);
                      swift_bridgeObjectRelease();
                      sub_1BFF07CD8(v37);
                      sub_1BFF07CD8(v37);
                      goto LABEL_94;
                    case 2uLL:
                      uint64_t v102 = v7;
                      unint64_t v65 = *(void *)((v52 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
                      uint64_t v66 = *(void *)((v52 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
                      unint64_t v94 = *(void *)((v37 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
                      unint64_t v95 = v65;
                      switch(v65 >> 62)
                      {
                        case 1uLL:
                          unint64_t v118 = *(void *)((v65 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
                          long long v76 = a2[5];
                          long long v115 = a2[4];
                          long long v116 = v76;
                          uint64_t v117 = *((void *)a2 + 12);
                          long long v77 = a2[1];
                          long long v111 = *a2;
                          long long v112 = v77;
                          long long v78 = a2[3];
                          long long v113 = a2[2];
                          long long v114 = v78;
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v10);
                          sub_1BFF58F10(v10);
                          sub_1BFF58F10(v104);
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v104);
                          sub_1BFF58F10(v37);
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v37);
                          sub_1BFF58F10(v52);
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v52);
                          sub_1BFF58F10(v65);
                          uint64_t v92 = v66;
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v65);
                          swift_retain();
                          sub_1BFF79540(v102, (uint64_t)&v111);
                          if (!v4)
                          {
                            swift_release();
                            sub_1BFF07CD8(v65);
                            uint64_t v7 = v102;
                            uint64_t v74 = v92;
                            goto LABEL_69;
                          }
                          swift_release();
                          sub_1BFF07CD8(v65);
                          sub_1BFF07CD8(v65);
                          swift_bridgeObjectRelease();
                          sub_1BFF07CD8(v52);
                          sub_1BFF07CD8(v52);
                          swift_bridgeObjectRelease();
                          sub_1BFF07CD8(v37);
                          sub_1BFF07CD8(v37);
                          swift_bridgeObjectRelease();
                          unint64_t v89 = v104;
                          sub_1BFF07CD8(v104);
                          goto LABEL_99;
                        case 2uLL:
                          uint64_t v79 = *(void *)((v52 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
                          uint64_t v80 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
                          unint64_t v81 = v37;
                          uint64_t v109 = *(void *)((v65 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
                          unint64_t v118 = *(void *)((v65 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
                          unint64_t v82 = v118;
                          long long v83 = a2[5];
                          long long v115 = a2[4];
                          long long v116 = v83;
                          uint64_t v117 = *((void *)a2 + 12);
                          long long v84 = a2[1];
                          long long v111 = *a2;
                          long long v112 = v84;
                          long long v85 = a2[3];
                          long long v113 = a2[2];
                          long long v114 = v85;
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v10);
                          sub_1BFF58F10(v10);
                          sub_1BFF58F10(v104);
                          uint64_t v100 = v80;
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v104);
                          sub_1BFF58F10(v81);
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v81);
                          sub_1BFF58F10(v94);
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v94);
                          sub_1BFF58F10(v65);
                          uint64_t v93 = v79;
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v65);
                          sub_1BFF58F10(v82);
                          swift_bridgeObjectRetain();
                          uint64_t v7 = v102;
                          sub_1C05D6858(v102, &v111);
                          if (!v4)
                          {
                            swift_bridgeObjectRetain();
                            sub_1C113EC6C(v102, a2, v109);
                            swift_bridgeObjectRelease();
                            sub_1BFF07CD8(v82);
                            swift_bridgeObjectRelease();
                            sub_1BFF07CD8(v65);
                            unint64_t v37 = v81;
                            unint64_t v52 = v94;
                            uint64_t v23 = v100;
                            uint64_t v74 = v93;
                            goto LABEL_69;
                          }
                          sub_1BFF07CD8(v82);
                          swift_bridgeObjectRelease();
                          sub_1BFF07CD8(v65);
                          sub_1BFF07CD8(v65);
                          swift_bridgeObjectRelease();
                          sub_1BFF07CD8(v94);
                          sub_1BFF07CD8(v94);
                          swift_bridgeObjectRelease();
                          sub_1BFF07CD8(v81);
                          unint64_t v90 = v81;
                          goto LABEL_97;
                        case 3uLL:
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v10);
                          sub_1BFF58F10(v10);
                          sub_1BFF58F10(v104);
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v104);
                          sub_1BFF58F10(v37);
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v37);
                          sub_1BFF58F10(v52);
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v52);
                          if (v65 == 0xC000000000000000) {
                            unint64_t v86 = 0xC000000000000000;
                          }
                          else {
                            unint64_t v86 = 0xC000000000000008;
                          }
                          sub_1BFF58F10(v86);
                          swift_bridgeObjectRetain();
                          uint64_t v74 = v66;
                          goto LABEL_68;
                        default:
                          unint64_t v108 = v10;
                          uint64_t v67 = *(void *)(v65 + 16);
                          uint64_t v68 = *(void *)(v67 + 16);
                          if (v68)
                          {
                            swift_bridgeObjectRetain();
                            sub_1BFF58F10(v108);
                            sub_1BFF58F10(v108);
                            sub_1BFF58F10(v104);
                            swift_bridgeObjectRetain();
                            sub_1BFF58F10(v104);
                            sub_1BFF58F10(v37);
                            swift_bridgeObjectRetain();
                            sub_1BFF58F10(v37);
                            unint64_t v52 = v94;
                            sub_1BFF58F10(v94);
                            swift_bridgeObjectRetain();
                            sub_1BFF58F10(v94);
                            sub_1BFF58F10(v65);
                            uint64_t v91 = v66;
                            swift_bridgeObjectRetain();
                            sub_1BFF58F10(v65);
                            uint64_t v69 = swift_bridgeObjectRetain();
                            uint64_t v70 = 0;
                            while (1)
                            {
                              unint64_t v118 = *(void *)(v69 + 8 * v70 + 32);
                              long long v71 = a2[5];
                              long long v115 = a2[4];
                              long long v116 = v71;
                              uint64_t v117 = *((void *)a2 + 12);
                              long long v72 = a2[1];
                              long long v111 = *a2;
                              long long v112 = v72;
                              long long v73 = a2[3];
                              long long v113 = a2[2];
                              long long v114 = v73;
                              swift_retain();
                              sub_1BFF79540(v102, (uint64_t)&v111);
                              if (v4) {
                                break;
                              }
                              ++v70;
                              swift_release();
                              uint64_t v69 = v67;
                              if (v68 == v70)
                              {
                                swift_bridgeObjectRelease();
                                sub_1BFF07CD8(v65);
                                unint64_t v10 = v108;
                                uint64_t v7 = v102;
                                uint64_t v74 = v91;
                                goto LABEL_69;
                              }
                            }
                            swift_bridgeObjectRelease();
                            swift_release();
                            sub_1BFF07CD8(v65);
                            sub_1BFF07CD8(v65);
                            swift_bridgeObjectRelease();
                            sub_1BFF07CD8(v94);
                            sub_1BFF07CD8(v94);
                            swift_bridgeObjectRelease();
                            sub_1BFF07CD8(v37);
                            sub_1BFF07CD8(v37);
                            swift_bridgeObjectRelease();
                            unint64_t v89 = v104;
                            sub_1BFF07CD8(v104);
                            unint64_t v10 = v108;
                            goto LABEL_99;
                          }
                          swift_bridgeObjectRetain();
                          unint64_t v10 = v108;
                          sub_1BFF58F10(v108);
                          sub_1BFF58F10(v108);
                          sub_1BFF58F10(v104);
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v104);
                          sub_1BFF58F10(v37);
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v37);
                          uint64_t v74 = v66;
                          sub_1BFF58F10(v52);
                          swift_bridgeObjectRetain();
                          sub_1BFF58F10(v52);
                          sub_1BFF58F10(v95);
                          swift_bridgeObjectRetain();
LABEL_68:
                          uint64_t v7 = v102;
LABEL_69:
                          swift_bridgeObjectRetain();
                          sub_1C113EC6C(v7, a2, v74);
                          if (!v4)
                          {
                            swift_bridgeObjectRelease();
                            sub_1BFF07CD8(v95);
                            swift_bridgeObjectRelease();
                            sub_1BFF07CD8(v52);
                            goto LABEL_71;
                          }
                          swift_bridgeObjectRelease();
                          sub_1BFF07CD8(v95);
                          swift_bridgeObjectRelease();
                          sub_1BFF07CD8(v52);
                          sub_1BFF07CD8(v52);
                          break;
                      }
                      goto LABEL_96;
                    case 3uLL:
                      swift_bridgeObjectRetain();
                      sub_1BFF58F10(v10);
                      sub_1BFF58F10(v10);
                      sub_1BFF58F10(v104);
                      swift_bridgeObjectRetain();
                      sub_1BFF58F10(v104);
                      sub_1BFF58F10(v37);
                      swift_bridgeObjectRetain();
                      sub_1BFF58F10(v37);
                      if (v52 == 0xC000000000000000) {
                        unint64_t v75 = 0xC000000000000000;
                      }
                      else {
                        unint64_t v75 = 0xC000000000000008;
                      }
                      goto LABEL_58;
                    default:
                      unint64_t v107 = v10;
                      uint64_t v53 = *(void *)(*(void *)(v52 + 16) + 16);
                      if (v53)
                      {
                        uint64_t v101 = *(void *)(v52 + 16);
                        unint64_t v54 = v37;
                        uint64_t v55 = v23;
                        uint64_t v56 = v7;
                        swift_bridgeObjectRetain();
                        sub_1BFF58F10(v107);
                        sub_1BFF58F10(v107);
                        sub_1BFF58F10(v104);
                        swift_bridgeObjectRetain();
                        sub_1BFF58F10(v104);
                        sub_1BFF58F10(v54);
                        swift_bridgeObjectRetain();
                        sub_1BFF58F10(v54);
                        sub_1BFF58F10(v52);
                        swift_bridgeObjectRetain();
                        sub_1BFF58F10(v52);
                        swift_bridgeObjectRetain();
                        uint64_t v57 = 0;
                        while (1)
                        {
                          unint64_t v118 = *(void *)(v101 + 8 * v57 + 32);
                          long long v58 = a2[5];
                          long long v115 = a2[4];
                          long long v116 = v58;
                          uint64_t v117 = *((void *)a2 + 12);
                          long long v59 = a2[1];
                          long long v111 = *a2;
                          long long v112 = v59;
                          long long v60 = a2[3];
                          long long v113 = a2[2];
                          long long v114 = v60;
                          swift_retain();
                          sub_1BFF79540(v56, (uint64_t)&v111);
                          if (v4) {
                            break;
                          }
                          ++v57;
                          swift_release();
                          if (v53 == v57)
                          {
                            swift_bridgeObjectRelease();
                            sub_1BFF07CD8(v52);
                            unint64_t v10 = v107;
                            uint64_t v7 = v56;
                            uint64_t v23 = v55;
                            unint64_t v37 = v54;
                            goto LABEL_71;
                          }
                        }
                        swift_bridgeObjectRelease();
                        swift_release();
                        sub_1BFF07CD8(v52);
                        sub_1BFF07CD8(v52);
                        swift_bridgeObjectRelease();
                        sub_1BFF07CD8(v54);
                        sub_1BFF07CD8(v54);
                        swift_bridgeObjectRelease();
                        sub_1BFF07CD8(v104);
                        sub_1BFF07CD8(v104);
                        swift_bridgeObjectRelease();
                        unint64_t v10 = v107;
                        goto LABEL_102;
                      }
                      swift_bridgeObjectRetain();
                      unint64_t v10 = v107;
                      sub_1BFF58F10(v107);
                      sub_1BFF58F10(v107);
                      sub_1BFF58F10(v104);
                      swift_bridgeObjectRetain();
                      sub_1BFF58F10(v104);
                      sub_1BFF58F10(v37);
                      swift_bridgeObjectRetain();
                      sub_1BFF58F10(v37);
                      unint64_t v75 = v52;
LABEL_58:
                      sub_1BFF58F10(v75);
                      swift_bridgeObjectRetain();
LABEL_71:
                      swift_bridgeObjectRetain();
                      sub_1C113EC6C(v7, a2, v96);
                      if (!v4)
                      {
                        swift_bridgeObjectRelease();
                        sub_1BFF07CD8(v52);
                        swift_bridgeObjectRelease();
                        sub_1BFF07CD8(v37);
                        uint64_t v38 = v98;
                        goto LABEL_73;
                      }
                      swift_bridgeObjectRelease();
                      sub_1BFF07CD8(v52);
LABEL_96:
                      swift_bridgeObjectRelease();
                      sub_1BFF07CD8(v37);
                      unint64_t v90 = v37;
LABEL_97:
                      sub_1BFF07CD8(v90);
                      break;
                  }
                  goto LABEL_98;
                case 3uLL:
                  swift_bridgeObjectRetain();
                  sub_1BFF58F10(v10);
                  sub_1BFF58F10(v10);
                  sub_1BFF58F10(v104);
                  swift_bridgeObjectRetain();
                  sub_1BFF58F10(v104);
                  if (v37 == 0xC000000000000000) {
                    unint64_t v61 = 0xC000000000000000;
                  }
                  else {
                    unint64_t v61 = 0xC000000000000008;
                  }
                  sub_1BFF58F10(v61);
                  swift_bridgeObjectRetain();
                  goto LABEL_73;
                default:
                  uint64_t v97 = *(void *)(v36 + 24);
                  uint64_t v99 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
                  uint64_t v39 = v7;
                  unint64_t v40 = v37;
                  uint64_t v41 = *(void *)(v37 + 16);
                  uint64_t v42 = *(void *)(v41 + 16);
                  if (v42)
                  {
                    swift_bridgeObjectRetain();
                    sub_1BFF58F10(v10);
                    unint64_t v106 = v10;
                    sub_1BFF58F10(v10);
                    sub_1BFF58F10(v104);
                    swift_bridgeObjectRetain();
                    sub_1BFF58F10(v104);
                    sub_1BFF58F10(v40);
                    swift_bridgeObjectRetain();
                    unint64_t v43 = v40;
                    sub_1BFF58F10(v40);
                    swift_bridgeObjectRetain();
                    uint64_t v44 = 0;
                    while (1)
                    {
                      unint64_t v118 = *(void *)(v41 + 8 * v44 + 32);
                      long long v45 = a2[5];
                      long long v115 = a2[4];
                      long long v116 = v45;
                      uint64_t v117 = *((void *)a2 + 12);
                      long long v46 = a2[1];
                      long long v111 = *a2;
                      long long v112 = v46;
                      long long v47 = a2[3];
                      long long v113 = a2[2];
                      long long v114 = v47;
                      swift_retain();
                      sub_1BFF79540(v39, (uint64_t)&v111);
                      if (v4) {
                        break;
                      }
                      ++v44;
                      swift_release();
                      if (v42 == v44)
                      {
                        swift_bridgeObjectRelease();
                        unint64_t v37 = v43;
                        sub_1BFF07CD8(v43);
                        uint64_t v7 = v39;
                        uint64_t v38 = v97;
                        uint64_t v23 = v99;
                        goto LABEL_73;
                      }
                    }
                    swift_bridgeObjectRelease();
                    swift_release();
                    sub_1BFF07CD8(v43);
                    sub_1BFF07CD8(v43);
                    swift_bridgeObjectRelease();
                    sub_1BFF07CD8(v104);
                    sub_1BFF07CD8(v104);
                    goto LABEL_82;
                  }
                  swift_bridgeObjectRetain();
                  sub_1BFF58F10(v10);
                  sub_1BFF58F10(v10);
                  sub_1BFF58F10(v104);
                  swift_bridgeObjectRetain();
                  sub_1BFF58F10(v104);
                  sub_1BFF58F10(v40);
                  uint64_t v38 = v97;
                  swift_bridgeObjectRetain();
                  uint64_t v7 = v39;
                  uint64_t v23 = v99;
                  unint64_t v37 = v40;
LABEL_73:
                  swift_bridgeObjectRetain();
                  sub_1C113EC6C(v7, a2, v38);
                  if (!v4)
                  {
                    swift_bridgeObjectRelease();
                    sub_1BFF07CD8(v37);
                    swift_bridgeObjectRelease();
                    unint64_t v22 = v104;
                    sub_1BFF07CD8(v104);
                    goto LABEL_75;
                  }
                  swift_bridgeObjectRelease();
                  sub_1BFF07CD8(v37);
LABEL_98:
                  swift_bridgeObjectRelease();
                  unint64_t v89 = v104;
                  sub_1BFF07CD8(v104);
LABEL_99:
                  unint64_t v87 = v89;
                  break;
              }
              goto LABEL_100;
            case 3uLL:
              swift_bridgeObjectRetain();
              sub_1BFF58F10(v10);
              sub_1BFF58F10(v10);
              if (v22 == 0xC000000000000000) {
                unint64_t v48 = 0xC000000000000000;
              }
              else {
                unint64_t v48 = 0xC000000000000008;
              }
              sub_1BFF58F10(v48);
              swift_bridgeObjectRetain();
              goto LABEL_76;
            default:
              uint64_t v24 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
              uint64_t v25 = v7;
              unint64_t v26 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
              uint64_t v27 = *(void *)(v22 + 16);
              uint64_t v28 = *(void *)(v27 + 16);
              if (v28)
              {
                swift_bridgeObjectRetain();
                sub_1BFF58F10(v10);
                unint64_t v106 = v10;
                sub_1BFF58F10(v10);
                sub_1BFF58F10(v26);
                swift_bridgeObjectRetain();
                unint64_t v103 = v26;
                sub_1BFF58F10(v26);
                swift_bridgeObjectRetain();
                uint64_t v29 = 0;
                while (1)
                {
                  unint64_t v118 = *(void *)(v27 + 8 * v29 + 32);
                  long long v30 = a2[5];
                  long long v115 = a2[4];
                  long long v116 = v30;
                  uint64_t v117 = *((void *)a2 + 12);
                  long long v31 = a2[1];
                  long long v111 = *a2;
                  long long v112 = v31;
                  long long v32 = a2[3];
                  long long v113 = a2[2];
                  long long v114 = v32;
                  swift_retain();
                  sub_1BFF79540(v25, (uint64_t)&v111);
                  if (v4) {
                    break;
                  }
                  ++v29;
                  swift_release();
                  if (v28 == v29)
                  {
                    swift_bridgeObjectRelease();
                    unint64_t v22 = v103;
                    sub_1BFF07CD8(v103);
                    uint64_t v7 = v25;
                    uint64_t v23 = v24;
                    goto LABEL_75;
                  }
                }
                swift_bridgeObjectRelease();
                swift_release();
                sub_1BFF07CD8(v103);
                sub_1BFF07CD8(v103);
LABEL_82:
                swift_bridgeObjectRelease();
LABEL_83:
                sub_1BFF07CD8(v106);
                swift_bridgeObjectRelease();
                unint64_t v88 = v106;
              }
              else
              {
                swift_bridgeObjectRetain();
                sub_1BFF58F10(v10);
                sub_1BFF58F10(v10);
                sub_1BFF58F10(v26);
                swift_bridgeObjectRetain();
                uint64_t v7 = v25;
                uint64_t v23 = v24;
                uint64_t v5 = v105;
                unint64_t v22 = v26;
LABEL_76:
                swift_bridgeObjectRetain();
                sub_1C113EC6C(v7, a2, v23);
                if (!v4)
                {
                  swift_bridgeObjectRelease();
                  sub_1BFF07CD8(v22);
                  swift_bridgeObjectRelease();
                  sub_1BFF07CD8(v10);
                  swift_bridgeObjectRelease();
                  sub_1BFF07CD8(v10);
                  goto LABEL_4;
                }
                swift_bridgeObjectRelease();
                unint64_t v87 = v22;
LABEL_100:
                sub_1BFF07CD8(v87);
LABEL_101:
                swift_bridgeObjectRelease();
LABEL_102:
                sub_1BFF07CD8(v10);
                swift_bridgeObjectRelease();
                unint64_t v88 = v10;
              }
              sub_1BFF07CD8(v88);
LABEL_85:
              unint64_t result = swift_bridgeObjectRelease();
              break;
          }
          return result;
        case 3uLL:
          goto LABEL_5;
        default:
          uint64_t v11 = v5;
          uint64_t v12 = v7;
          uint64_t v13 = *(void *)(v10 + 16);
          uint64_t v14 = *(void *)(v13 + 16);
          if (!v14)
          {
            uint64_t v7 = v12;
            uint64_t v5 = v11;
LABEL_4:
            uint64_t v8 = v110;
            goto LABEL_5;
          }
          swift_bridgeObjectRetain();
          sub_1BFF58F10(v10);
          unint64_t v106 = v10;
          sub_1BFF58F10(v10);
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v14; ++i)
          {
            unint64_t v118 = *(void *)(v13 + 8 * i + 32);
            long long v16 = a2[5];
            long long v115 = a2[4];
            long long v116 = v16;
            uint64_t v117 = *((void *)a2 + 12);
            long long v17 = a2[1];
            long long v111 = *a2;
            long long v112 = v17;
            long long v18 = a2[3];
            long long v113 = a2[2];
            long long v114 = v18;
            swift_retain();
            sub_1BFF79540(v12, (uint64_t)&v111);
            if (v4)
            {
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_83;
            }
            swift_release();
          }
          swift_bridgeObjectRelease();
          sub_1BFF07CD8(v10);
          swift_bridgeObjectRelease();
          sub_1BFF07CD8(v10);
          uint64_t v7 = v12;
          uint64_t v5 = v11;
          uint64_t v8 = v110;
LABEL_5:
          if (v9 == v5) {
            goto LABEL_85;
          }
          continue;
      }
    }
  }
  return result;
}

unint64_t *sub_1C11402C0(unint64_t *result, long long *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v48 = result;
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v7 = a3 + 32;
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    uint64_t v33 = v7;
    uint64_t v34 = v5;
    while (1)
    {
      uint64_t v9 = *(void *)(v7 + 8 * v8);
      if ((v9 & 0x8000000000000000) == 0) {
        break;
      }
      uint64_t v36 = v8;
      uint64_t v20 = *(void *)((v9 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v21 = *(void *)(v20 + 16);
      if (!v21)
      {
        swift_retain();
        goto LABEL_25;
      }
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v22 = v20 + 40;
      do
      {
        *(void *)&long long v38 = *(void *)(v22 - 8);
        long long v23 = a2[4];
        long long v46 = a2[5];
        uint64_t v47 = *((void *)a2 + 12);
        long long v24 = a2[1];
        long long v41 = *a2;
        long long v42 = v24;
        long long v25 = a2[2];
        long long v44 = a2[3];
        long long v45 = v23;
        long long v43 = v25;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1BFF0C6A0(v48, (uint64_t *)&v41);
        if (v4)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (unint64_t *)swift_release();
        }
        swift_bridgeObjectRelease();
        swift_release();
        v22 += 16;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
      uint64_t v7 = v33;
      uint64_t v5 = v34;
LABEL_25:
      swift_release();
LABEL_4:
      uint64_t v8 = v36;
LABEL_5:
      if (++v8 == v5) {
        return (unint64_t *)swift_bridgeObjectRelease();
      }
    }
    if ((*(unsigned char *)(v9 + 40) & 1) == 0) {
      goto LABEL_5;
    }
    uint64_t v11 = *(void *)(v9 + 24);
    uint64_t v10 = *(void *)(v9 + 32);
    swift_retain();
    sub_1C00F64A4(v11, v10, 1);
    sub_1BFE9E08C(0, &qword_1EA19C020, (uint64_t)&type metadata for FormatSourceItemTipTrait, MEMORY[0x1E4FBB320]);
    uint64_t v13 = v12;
    sub_1C1149690();
    swift_bridgeObjectRetain();
    uint64_t v35 = v11;
    if (swift_dynamicCast())
    {
      uint64_t v14 = *((void *)&v39 + 1);
      uint64_t v15 = v40;
      __swift_project_boxed_opaque_existential_1(&v38, *((uint64_t *)&v39 + 1));
      long long v16 = a2[4];
      long long v46 = a2[5];
      uint64_t v47 = *((void *)a2 + 12);
      long long v17 = a2[1];
      long long v41 = *a2;
      long long v42 = v17;
      long long v18 = a2[2];
      long long v44 = a2[3];
      long long v45 = v16;
      long long v43 = v18;
      (*(void (**)(unint64_t *, long long *, uint64_t, uint64_t))(v15 + 8))(v48, &v41, v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
      if (v4)
      {
        sub_1C00F64E0(v11, v10, 1);
        swift_bridgeObjectRelease();
        return (unint64_t *)swift_release();
      }
      uint64_t v19 = *(void *)(v10 + 16);
      if (!v19)
      {
LABEL_11:
        sub_1C00F64E0(v35, v10, 1);
        swift_release();
        uint64_t v7 = v33;
        uint64_t v5 = v34;
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v40 = 0;
      long long v38 = 0u;
      long long v39 = 0u;
      sub_1C1147B04((uint64_t)&v38, (uint64_t (*)(void))sub_1C11496E8);
      uint64_t v19 = *(void *)(v10 + 16);
      if (!v19) {
        goto LABEL_11;
      }
    }
    uint64_t v36 = v8;
    swift_bridgeObjectRetain_n();
    uint64_t v26 = v10 + 48;
    while (1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      if (swift_dynamicCast())
      {
        uint64_t v37 = v4;
        uint64_t v27 = v13;
        uint64_t v29 = *((void *)&v39 + 1);
        uint64_t v28 = v40;
        __swift_project_boxed_opaque_existential_1(&v38, *((uint64_t *)&v39 + 1));
        long long v30 = a2[4];
        long long v46 = a2[5];
        uint64_t v47 = *((void *)a2 + 12);
        long long v31 = a2[1];
        long long v41 = *a2;
        long long v42 = v31;
        long long v32 = a2[2];
        long long v44 = a2[3];
        long long v45 = v30;
        long long v43 = v32;
        (*(void (**)(unint64_t *, long long *, uint64_t, uint64_t))(v28 + 8))(v48, &v41, v29, v28);
        if (v37)
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C00F64E0(v35, v10, 1);
          swift_bridgeObjectRelease();
          return (unint64_t *)swift_release();
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v13 = v27;
        uint64_t v4 = 0;
      }
      else
      {
        uint64_t v40 = 0;
        long long v38 = 0u;
        long long v39 = 0u;
        sub_1C1147B04((uint64_t)&v38, (uint64_t (*)(void))sub_1C11496E8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v26 += 24;
      if (!--v19)
      {
        swift_bridgeObjectRelease_n();
        sub_1C00F64E0(v35, v10, 1);
        swift_release();
        uint64_t v7 = v33;
        uint64_t v5 = v34;
        goto LABEL_4;
      }
    }
  }
  return result;
}

uint64_t sub_1C1140780(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v26 = result;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = (uint64_t *)(a3 + 48);
  while (2)
  {
    uint64_t v9 = *v8;
    switch((unint64_t)*v8 >> 61)
    {
      case 1uLL:
        uint64_t v11 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v10 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1C1140BF4(v26, (long long *)a2, v11);
        if (!v4)
        {
          uint64_t v34 = v10;
          long long v12 = *(_OWORD *)(a2 + 80);
          long long v31 = *(_OWORD *)(a2 + 64);
          long long v32 = v12;
          uint64_t v33 = *(void *)(a2 + 96);
          long long v13 = *(_OWORD *)(a2 + 16);
          long long v27 = *(_OWORD *)a2;
          long long v28 = v13;
          long long v14 = *(_OWORD *)(a2 + 48);
          long long v29 = *(_OWORD *)(a2 + 32);
          long long v30 = v14;
          swift_retain_n();
          sub_1C05D3050(v26, &v27);
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release();
        return swift_bridgeObjectRelease();
      case 2uLL:
        uint64_t v15 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v34 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        long long v16 = *(_OWORD *)(a2 + 80);
        long long v31 = *(_OWORD *)(a2 + 64);
        long long v32 = v16;
        uint64_t v33 = *(void *)(a2 + 96);
        long long v17 = *(_OWORD *)(a2 + 16);
        long long v27 = *(_OWORD *)a2;
        long long v28 = v17;
        long long v18 = *(_OWORD *)(a2 + 48);
        long long v29 = *(_OWORD *)(a2 + 32);
        long long v30 = v18;
        swift_retain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1C05D3050(v26, &v27);
        if (v4)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_release();
          return swift_release_n();
        }
        swift_release();
        uint64_t v34 = v15;
        long long v19 = *(_OWORD *)(a2 + 80);
        long long v31 = *(_OWORD *)(a2 + 64);
        long long v32 = v19;
        uint64_t v33 = *(void *)(a2 + 96);
        long long v20 = *(_OWORD *)(a2 + 16);
        long long v27 = *(_OWORD *)a2;
        long long v28 = v20;
        long long v21 = *(_OWORD *)(a2 + 48);
        long long v29 = *(_OWORD *)(a2 + 32);
        long long v30 = v21;
        swift_retain();
        sub_1C05D3050(v26, &v27);
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release();
LABEL_3:
        swift_release_n();
        goto LABEL_4;
      case 4uLL:
        uint64_t v22 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v34 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        long long v23 = *(_OWORD *)(a2 + 80);
        long long v31 = *(_OWORD *)(a2 + 64);
        long long v32 = v23;
        uint64_t v33 = *(void *)(a2 + 96);
        long long v24 = *(_OWORD *)(a2 + 16);
        long long v27 = *(_OWORD *)a2;
        long long v28 = v24;
        long long v25 = *(_OWORD *)(a2 + 48);
        long long v29 = *(_OWORD *)(a2 + 32);
        long long v30 = v25;
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1C05D3050(v26, &v27);
        if (!v4)
        {
          swift_release();
          swift_bridgeObjectRetain();
          sub_1C1140780(v26, a2, v22);
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_release();
          swift_bridgeObjectRelease_n();
LABEL_4:
          v8 += 3;
          if (!--v5) {
            return swift_bridgeObjectRelease();
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
        return swift_release_n();
      default:
        goto LABEL_4;
    }
  }
}

uint64_t sub_1C1140BF4(uint64_t result, long long *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v8 = (unint64_t *)result;
    swift_bridgeObjectRetain();
    uint64_t v9 = (unint64_t *)(a3 + 40);
    long long v32 = v8;
    do
    {
      unint64_t v10 = *v9;
      uint64_t v40 = *(v9 - 1);
      long long v11 = a2[5];
      long long v37 = a2[4];
      long long v38 = v11;
      uint64_t v39 = *((void *)a2 + 12);
      long long v12 = a2[1];
      long long v33 = *a2;
      long long v34 = v12;
      long long v13 = a2[3];
      uint64_t v14 = v10 & 0x1FFFFFFFFFFFFFFFLL;
      long long v35 = a2[2];
      long long v36 = v13;
      swift_retain();
      swift_retain();
      sub_1BFF0C6A0(v8, (uint64_t *)&v33);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_release();
        return swift_release();
      }
      v9 += 2;
      switch(v10 >> 61)
      {
        case 1uLL:
          uint64_t v16 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v15 = *(void *)(v14 + 24);
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1C1140BF4(v8, a2, v16);
          uint64_t v40 = v15;
          long long v17 = a2[5];
          long long v37 = a2[4];
          long long v38 = v17;
          uint64_t v39 = *((void *)a2 + 12);
          long long v18 = a2[1];
          long long v33 = *a2;
          long long v34 = v18;
          long long v19 = a2[3];
          long long v35 = a2[2];
          long long v36 = v19;
          swift_retain_n();
          sub_1C05D3050(v8, &v33);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          uint64_t v8 = v32;
          break;
        case 2uLL:
          uint64_t v20 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v21 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v40 = v20;
          long long v22 = a2[5];
          long long v37 = a2[4];
          long long v38 = v22;
          uint64_t v39 = *((void *)a2 + 12);
          long long v23 = a2[1];
          long long v33 = *a2;
          long long v34 = v23;
          long long v24 = a2[3];
          long long v35 = a2[2];
          long long v36 = v24;
          swift_retain();
          swift_retain();
          sub_1C05D3050(v8, &v33);
          uint64_t v40 = v21;
          long long v25 = a2[5];
          long long v37 = a2[4];
          long long v38 = v25;
          uint64_t v39 = *((void *)a2 + 12);
          long long v26 = a2[1];
          long long v33 = *a2;
          long long v34 = v26;
          long long v27 = a2[3];
          long long v35 = a2[2];
          long long v36 = v27;
          sub_1C05D3050(v8, &v33);
          uint64_t v4 = 0;
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v8 = v32;
          break;
        case 4uLL:
          uint64_t v28 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v40 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          long long v29 = a2[5];
          long long v37 = a2[4];
          long long v38 = v29;
          uint64_t v39 = *((void *)a2 + 12);
          long long v30 = a2[1];
          long long v33 = *a2;
          long long v34 = v30;
          long long v31 = a2[3];
          long long v35 = a2[2];
          long long v36 = v31;
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1C05D3050(v8, &v33);
          swift_release();
          swift_bridgeObjectRetain();
          sub_1C1140780(v8, a2, v28);
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
          uint64_t v8 = v32;
          break;
        default:
          swift_release();
          swift_release();
          break;
      }
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C1141044(uint64_t result, long long *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return result;
  }
  uint64_t v8 = result;
  swift_bridgeObjectRetain();
  for (uint64_t i = (uint64_t *)(a3 + 56); ; i += 5)
  {
    uint64_t v10 = *(i - 1);
    uint64_t v11 = *i;
    if ((~v10 & 0xF000000000000007) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1BFDC11A4(v10);
      sub_1BFDC11A4(v11);
      if ((~v11 & 0xF000000000000007) == 0) {
        goto LABEL_3;
      }
      goto LABEL_10;
    }
    uint64_t v25 = *(i - 1);
    long long v12 = a2[5];
    long long v22 = a2[4];
    long long v23 = v12;
    uint64_t v24 = *((void *)a2 + 12);
    long long v13 = a2[1];
    long long v18 = *a2;
    long long v19 = v13;
    long long v14 = a2[3];
    long long v20 = a2[2];
    long long v21 = v14;
    swift_bridgeObjectRetain();
    sub_1BFDC11A4(v10);
    sub_1BFDC11A4(v11);
    sub_1BFDC11A4(v10);
    sub_1BFF79540(v8, (uint64_t)&v18);
    sub_1BFDC11BC(v10);
    if (v4) {
      break;
    }
    if ((~v11 & 0xF000000000000007) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      sub_1BFDC11BC(v10);
      sub_1BFDC11BC(v11);
      goto LABEL_4;
    }
LABEL_10:
    uint64_t v25 = v11;
    long long v15 = a2[5];
    long long v22 = a2[4];
    long long v23 = v15;
    uint64_t v24 = *((void *)a2 + 12);
    long long v16 = a2[1];
    long long v18 = *a2;
    long long v19 = v16;
    long long v17 = a2[3];
    long long v20 = a2[2];
    long long v21 = v17;
    swift_retain();
    sub_1BFF79540(v8, (uint64_t)&v18);
    sub_1BFDC11BC(v11);
    swift_bridgeObjectRelease();
    sub_1BFDC11BC(v10);
    sub_1BFDC11BC(v11);
    if (v4) {
      return swift_bridgeObjectRelease();
    }
LABEL_4:
    if (!--v5) {
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  sub_1BFDC11BC(v10);
  sub_1BFDC11BC(v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1141218(uint64_t result, long long *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v17 = result;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return result;
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = (uint64_t *)(a3 + 64); ; i += 6)
  {
    uint64_t v10 = *(i - 1);
    uint64_t v9 = *i;
    if ((~v10 & 0xF000000000000007) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFDC11A4(v10);
      sub_1BFDC11A4(v9);
      if ((~v9 & 0xF000000000000007) == 0) {
        goto LABEL_3;
      }
      goto LABEL_10;
    }
    uint64_t v25 = *(i - 1);
    long long v11 = a2[5];
    long long v22 = a2[4];
    long long v23 = v11;
    uint64_t v24 = *((void *)a2 + 12);
    long long v12 = a2[1];
    long long v18 = *a2;
    long long v19 = v12;
    long long v13 = a2[3];
    long long v20 = a2[2];
    long long v21 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFDC11A4(v10);
    sub_1BFDC11A4(v9);
    sub_1BFF79540(v17, (uint64_t)&v18);
    if (v4) {
      break;
    }
    if ((~v9 & 0xF000000000000007) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFDC11BC(v10);
      sub_1BFDC11BC(v9);
      goto LABEL_4;
    }
LABEL_10:
    uint64_t v25 = v9;
    long long v14 = a2[5];
    long long v22 = a2[4];
    long long v23 = v14;
    uint64_t v24 = *((void *)a2 + 12);
    long long v15 = a2[1];
    long long v18 = *a2;
    long long v19 = v15;
    long long v16 = a2[3];
    long long v20 = a2[2];
    long long v21 = v16;
    sub_1BFF79540(v17, (uint64_t)&v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFDC11BC(v10);
    sub_1BFDC11BC(v9);
    if (v4) {
      return swift_bridgeObjectRelease();
    }
LABEL_4:
    if (!--v5) {
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFDC11BC(v10);
  sub_1BFDC11BC(v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1141404(uint64_t result, long long *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return result;
  }
  uint64_t v8 = result;
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)(a3 + 48);
  uint64_t v57 = a2;
  uint64_t v55 = v8;
  while (1)
  {
    uint64_t v10 = *v9;
    uint64_t v11 = *v9 >> 62;
    if (v11) {
      break;
    }
LABEL_3:
    v9 += 3;
    if (!--v5) {
      return swift_bridgeObjectRelease();
    }
  }
  if (v11 == 1)
  {
    uint64_t v12 = v8;
    uint64_t v13 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v66 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    long long v14 = a2[5];
    long long v63 = a2[4];
    long long v64 = v14;
    uint64_t v65 = *((void *)a2 + 12);
    long long v15 = a2[1];
    long long v59 = *a2;
    long long v60 = v15;
    long long v16 = a2[3];
    long long v61 = a2[2];
    long long v62 = v16;
    swift_retain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    sub_1C05CFE68(v12, &v59);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      return swift_release_n();
    }
    swift_release();
    uint64_t v66 = v13;
    long long v17 = a2[5];
    long long v63 = a2[4];
    long long v64 = v17;
    uint64_t v65 = *((void *)a2 + 12);
    long long v18 = a2[1];
    long long v59 = *a2;
    long long v60 = v18;
    long long v19 = a2[3];
    long long v61 = a2[2];
    long long v62 = v19;
    swift_retain();
    sub_1C05CFE68(v12, &v59);
    uint64_t v8 = v12;
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release();
    swift_release_n();
    a2 = v57;
    goto LABEL_3;
  }
  unint64_t v20 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v21 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  if (!(v20 >> 62))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain_n();
LABEL_31:
    swift_bridgeObjectRetain();
    sub_1C1141404(v8, a2, v21);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release();
    goto LABEL_3;
  }
  uint64_t v56 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  if (v20 >> 62 == 1)
  {
    uint64_t v22 = v5;
    uint64_t v23 = *(void *)((v20 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v66 = *(void *)((v20 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    long long v24 = v57[5];
    long long v63 = v57[4];
    long long v64 = v24;
    uint64_t v65 = *((void *)v57 + 12);
    long long v25 = v57[1];
    long long v59 = *v57;
    long long v60 = v25;
    long long v26 = v57[3];
    long long v61 = v57[2];
    long long v62 = v26;
    swift_retain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1C05CFE68(v55, &v59);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      swift_release_n();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_release();
    uint64_t v66 = v23;
    long long v27 = v57[5];
    long long v63 = v57[4];
    long long v64 = v27;
    uint64_t v65 = *((void *)v57 + 12);
    long long v28 = v57[1];
    long long v59 = *v57;
    long long v60 = v28;
    long long v29 = v57[3];
    long long v61 = v57[2];
    long long v62 = v29;
    swift_retain();
    sub_1C05CFE68(v55, &v59);
    swift_release();
    swift_release();
    swift_release_n();
    uint64_t v8 = v55;
    uint64_t v5 = v22;
    a2 = v57;
    goto LABEL_31;
  }
  unint64_t v30 = *(void *)((v20 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v31 = *(void *)((v20 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  if (!(v30 >> 62))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v8 = v55;
    uint64_t v39 = v31;
    a2 = v57;
    goto LABEL_29;
  }
  uint64_t v54 = *(void *)((v20 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  if (v30 >> 62 == 1)
  {
    uint64_t v32 = *(void *)((v30 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v66 = *(void *)((v30 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    a2 = v57;
    long long v33 = v57[5];
    long long v63 = v57[4];
    long long v64 = v33;
    uint64_t v65 = *((void *)v57 + 12);
    long long v34 = v57[1];
    long long v59 = *v57;
    long long v60 = v34;
    long long v35 = v57[3];
    long long v61 = v57[2];
    long long v62 = v35;
    swift_retain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1C05CFE68(v55, &v59);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_40;
    }
    swift_release();
    uint64_t v66 = v32;
    long long v36 = v57[5];
    long long v63 = v57[4];
    long long v64 = v36;
    uint64_t v65 = *((void *)v57 + 12);
    long long v37 = v57[1];
    long long v59 = *v57;
    long long v60 = v37;
    long long v38 = v57[3];
    long long v61 = v57[2];
    long long v62 = v38;
    swift_retain();
    sub_1C05CFE68(v55, &v59);
    swift_release();
    swift_release();
    swift_release_n();
    uint64_t v8 = v55;
    goto LABEL_28;
  }
  unint64_t v40 = *(void *)((v30 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v41 = *(void *)((v30 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  if (!(v40 >> 62))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v8 = v55;
    a2 = v57;
    goto LABEL_26;
  }
  long long v58 = v9;
  a2 = v57;
  if (v40 >> 62 == 1)
  {
    uint64_t v42 = *(void *)((v40 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v66 = *(void *)((v40 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    long long v43 = v57[5];
    long long v63 = v57[4];
    long long v64 = v43;
    uint64_t v65 = *((void *)v57 + 12);
    long long v44 = v57[1];
    long long v59 = *v57;
    long long v60 = v44;
    long long v45 = v57[3];
    uint64_t v53 = v42;
    long long v61 = v57[2];
    long long v62 = v45;
    swift_retain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v8 = v55;
    sub_1C05CFE68(v55, &v59);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      swift_release_n();
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
    swift_release();
    uint64_t v66 = v53;
    long long v46 = v57[5];
    long long v63 = v57[4];
    long long v64 = v46;
    uint64_t v65 = *((void *)v57 + 12);
    long long v47 = v57[1];
    long long v59 = *v57;
    long long v60 = v47;
    long long v48 = v57[3];
    long long v61 = v57[2];
    long long v62 = v48;
    swift_retain();
    sub_1C05CFE68(v55, &v59);
    swift_release();
    swift_release();
    swift_release_n();
LABEL_25:
    uint64_t v9 = v58;
LABEL_26:
    swift_bridgeObjectRetain();
    sub_1C1141404(v8, a2, v41);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      swift_release();
      goto LABEL_45;
    }
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release();
LABEL_28:
    uint64_t v39 = v54;
LABEL_29:
    swift_bridgeObjectRetain();
    sub_1C1141404(v8, a2, v39);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease_n();
LABEL_40:
      swift_release();
      goto LABEL_46;
    }
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release();
    uint64_t v21 = v56;
    goto LABEL_31;
  }
  uint64_t v49 = *(void *)((v40 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  uint64_t v66 = *(void *)((v40 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  long long v50 = v57[5];
  long long v63 = v57[4];
  long long v64 = v50;
  uint64_t v65 = *((void *)v57 + 12);
  long long v51 = v57[1];
  long long v59 = *v57;
  long long v60 = v51;
  long long v52 = v57[3];
  long long v61 = v57[2];
  long long v62 = v52;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_1C05CFE68(v55, &v59);
  if (!v4)
  {
    swift_bridgeObjectRetain();
    sub_1C1141404(v55, v57, v49);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease_n();
    uint64_t v8 = v55;
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
LABEL_44:
  swift_release();
  swift_release();
LABEL_45:
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_46:
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1141FDC(uint64_t result, long long *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v8 = (unint64_t *)result;
    swift_bridgeObjectRetain();
    for (uint64_t i = (uint64_t *)(a3 + 56); ; i += 4)
    {
      uint64_t v10 = *i;
      uint64_t v24 = *(i - 1);
      long long v11 = a2[5];
      long long v21 = a2[4];
      long long v22 = v11;
      uint64_t v23 = *((void *)a2 + 12);
      long long v12 = a2[1];
      long long v17 = *a2;
      long long v18 = v12;
      long long v13 = a2[3];
      long long v19 = a2[2];
      long long v20 = v13;
      swift_retain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BFE2F328(v8, (uint64_t)&v17);
      if (v4) {
        break;
      }
      swift_release();
      uint64_t v24 = v10;
      long long v14 = a2[5];
      long long v21 = a2[4];
      long long v22 = v14;
      uint64_t v23 = *((void *)a2 + 12);
      long long v15 = a2[1];
      long long v17 = *a2;
      long long v18 = v15;
      long long v16 = a2[3];
      long long v19 = a2[2];
      long long v20 = v16;
      swift_retain();
      sub_1BFF91718((uint64_t)v8, (uint64_t *)&v17);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v5) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1C1142180(uint64_t a1, long long *a2, uint64_t a3)
{
  return sub_1BFF42A80(a1, a2, a3, (void (*)(uint64_t))sub_1BFF415D4, (void (*)(unint64_t *, long long *))sub_1BFF7AB68, (void (*)(uint64_t))sub_1BFF4160C);
}

uint64_t sub_1C11421D4(uint64_t result, long long *a2, uint64_t a3)
{
  uint64_t v32 = result;
  uint64_t v30 = *(void *)(a3 + 16);
  if (v30)
  {
    uint64_t v31 = a3 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = (_OWORD *)(v31 + 144 * v5);
      long long v7 = v6[7];
      long long v44 = v6[6];
      *(_OWORD *)long long v45 = v7;
      *(_OWORD *)&v45[10] = *(_OWORD *)((char *)v6 + 122);
      long long v8 = v6[3];
      v40[2] = v6[2];
      long long v41 = v8;
      long long v9 = v6[5];
      long long v42 = v6[4];
      long long v43 = v9;
      long long v10 = v6[1];
      v40[0] = *v6;
      v40[1] = v10;
      uint64_t v11 = *((void *)&v10 + 1);
      if (*((void *)&v10 + 1))
      {
        uint64_t v12 = *(void *)(*((void *)&v10 + 1) + 16);
        if (v12) {
          break;
        }
      }
      sub_1C05DD7E4((uint64_t)v40);
LABEL_12:
      unsigned __int8 v17 = v45[24];
      if (v45[24] == 254)
      {
        sub_1C05DD8B8((uint64_t)v40);
      }
      else
      {
        uint64_t v26 = *(void *)&v45[8];
        uint64_t v27 = *(void *)&v45[16];
        uint64_t v29 = *(void *)v45;
        uint64_t v18 = *((void *)&v43 + 1);
        long long v28 = v44;
        uint64_t v19 = *((void *)&v42 + 1);
        uint64_t v25 = v43;
        uint64_t v21 = *((void *)&v41 + 1);
        uint64_t v20 = v42;
        uint64_t v46 = *((void *)&v43 + 1);
        long long v22 = a2[5];
        long long v37 = a2[4];
        long long v38 = v22;
        uint64_t v39 = *((void *)a2 + 12);
        long long v23 = a2[1];
        long long v33 = *a2;
        long long v34 = v23;
        long long v24 = a2[3];
        long long v35 = a2[2];
        long long v36 = v24;
        swift_retain();
        sub_1BFF79540(v32, (uint64_t)&v33);
        sub_1BFEF8738(v21, v20, v19, v25, v18, v28, *((uint64_t *)&v28 + 1), v29, v26, v27, v17);
        sub_1C05DD8B8((uint64_t)v40);
        if (v3) {
          return swift_bridgeObjectRelease();
        }
      }
      if (++v5 == v30) {
        return swift_bridgeObjectRelease();
      }
    }
    sub_1C05DD7E4((uint64_t)v40);
    swift_bridgeObjectRetain();
    uint64_t v13 = v11 + 64;
    while (1)
    {
      uint64_t v46 = *(void *)(v13 - 24);
      long long v14 = a2[5];
      long long v37 = a2[4];
      long long v38 = v14;
      uint64_t v39 = *((void *)a2 + 12);
      long long v15 = a2[1];
      long long v33 = *a2;
      long long v34 = v15;
      long long v16 = a2[3];
      long long v35 = a2[2];
      long long v36 = v16;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BFF79540(v32, (uint64_t)&v33);
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      v13 += 40;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    sub_1C05DD8B8((uint64_t)v40);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C1142490(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return result;
  }
  uint64_t v8 = result;
  swift_bridgeObjectRetain();
  long long v9 = (unint64_t *)(a3 + 48);
  uint64_t v31 = a2;
  uint64_t v30 = v8;
  while (1)
  {
    unint64_t v11 = *v9;
    if (*v9 >> 62 != 1) {
      goto LABEL_7;
    }
    unint64_t v13 = *(void *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v12 = *(void *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    if (v13 >> 62) {
      break;
    }
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v11);
    sub_1BFE6FA30(v11);
    unint64_t v10 = v13;
LABEL_4:
    sub_1BFE6FA30(v10);
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRetain();
    sub_1C1142490(v8, a2, v12);
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_52;
    }
    sub_1BFF0056C(v13);
    swift_bridgeObjectRelease();
    sub_1BFF0056C(v11);
    swift_bridgeObjectRelease();
    sub_1BFF0056C(v11);
LABEL_7:
    v9 += 3;
    if (!--v5) {
      return swift_bridgeObjectRelease();
    }
  }
  if (v13 >> 62 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v11);
    sub_1BFE6FA30(v11);
    if (v13 == 0x8000000000000000) {
      unint64_t v10 = 0x8000000000000000;
    }
    else {
      unint64_t v10 = 0x8000000000000008;
    }
    goto LABEL_4;
  }
  unint64_t v14 = *(void *)((v13 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v15 = *(void *)((v13 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  if (!(v14 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v11);
    sub_1BFE6FA30(v11);
    sub_1BFE6FA30(v13);
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v13);
    unint64_t v20 = v14;
LABEL_26:
    sub_1BFE6FA30(v20);
    swift_bridgeObjectRetain();
LABEL_41:
    swift_bridgeObjectRetain();
    sub_1C1142490(v30, v31, v15);
    if (v4)
    {
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
    swift_bridgeObjectRelease();
    sub_1BFF0056C(v14);
    swift_bridgeObjectRelease();
    sub_1BFF0056C(v13);
    a2 = v31;
    uint64_t v8 = v30;
    goto LABEL_5;
  }
  if (v14 >> 62 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v11);
    sub_1BFE6FA30(v11);
    sub_1BFE6FA30(v13);
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v13);
    if (v14 == 0x8000000000000000) {
      unint64_t v20 = 0x8000000000000000;
    }
    else {
      unint64_t v20 = 0x8000000000000008;
    }
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)((v13 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  unint64_t v16 = *(void *)((v14 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v17 = *(void *)((v14 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  unint64_t v29 = v16;
  if (!(v16 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v11);
    sub_1BFE6FA30(v11);
    sub_1BFE6FA30(v13);
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v13);
    sub_1BFE6FA30(v28);
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v28);
    sub_1BFE6FA30(v29);
    swift_bridgeObjectRetain();
LABEL_39:
    swift_bridgeObjectRetain();
    sub_1C1142490(v30, v31, v17);
    if (v4)
    {
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
    swift_bridgeObjectRelease();
    sub_1BFF0056C(v29);
    swift_bridgeObjectRelease();
    unint64_t v14 = v28;
    sub_1BFF0056C(v28);
    goto LABEL_41;
  }
  if (v16 >> 62 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v11);
    sub_1BFE6FA30(v11);
    sub_1BFE6FA30(v13);
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v13);
    sub_1BFE6FA30(v28);
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v28);
    if (v29 == 0x8000000000000000) {
      unint64_t v21 = 0x8000000000000000;
    }
    else {
      unint64_t v21 = 0x8000000000000008;
    }
    sub_1BFE6FA30(v21);
    swift_bridgeObjectRetain();
    goto LABEL_39;
  }
  unint64_t v18 = *(void *)((v16 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v25 = *(void *)((v29 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  unint64_t v26 = v18;
  uint64_t v27 = v17;
  if (!(v18 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v11);
    sub_1BFE6FA30(v11);
    sub_1BFE6FA30(v13);
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v13);
    sub_1BFE6FA30(v28);
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v28);
    sub_1BFE6FA30(v29);
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v29);
    unint64_t v22 = v26;
    goto LABEL_36;
  }
  if (v18 >> 62 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v11);
    sub_1BFE6FA30(v11);
    sub_1BFE6FA30(v13);
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v13);
    sub_1BFE6FA30(v28);
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v28);
    sub_1BFE6FA30(v29);
    swift_bridgeObjectRetain();
    sub_1BFE6FA30(v29);
    if (v26 == 0x8000000000000000) {
      unint64_t v22 = 0x8000000000000000;
    }
    else {
      unint64_t v22 = 0x8000000000000008;
    }
LABEL_36:
    sub_1BFE6FA30(v22);
    uint64_t v19 = v25;
    swift_bridgeObjectRetain();
LABEL_37:
    swift_bridgeObjectRetain();
    sub_1C1142490(v30, v31, v19);
    if (v4)
    {
      swift_bridgeObjectRelease();
      goto LABEL_49;
    }
    swift_bridgeObjectRelease();
    sub_1BFF0056C(v26);
    swift_bridgeObjectRelease();
    sub_1BFF0056C(v29);
    uint64_t v17 = v27;
    goto LABEL_39;
  }
  unint64_t v23 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v24 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  swift_bridgeObjectRetain();
  sub_1BFE6FA30(v11);
  sub_1BFE6FA30(v11);
  sub_1BFE6FA30(v13);
  swift_bridgeObjectRetain();
  sub_1BFE6FA30(v13);
  sub_1BFE6FA30(v28);
  swift_bridgeObjectRetain();
  sub_1BFE6FA30(v28);
  sub_1BFE6FA30(v29);
  swift_bridgeObjectRetain();
  sub_1BFE6FA30(v29);
  sub_1BFE6FA30(v26);
  uint64_t v19 = v25;
  swift_bridgeObjectRetain();
  sub_1BFE6FA30(v26);
  sub_1BFE6FA30(v23);
  swift_bridgeObjectRetain();
  sub_1C1144E0C(v30, v31, v23, v24);
  if (!v4)
  {
    sub_1BFF0056C(v23);
    swift_bridgeObjectRelease();
    sub_1BFF0056C(v26);
    goto LABEL_37;
  }
  sub_1BFF0056C(v23);
  swift_bridgeObjectRelease();
  sub_1BFF0056C(v26);
LABEL_49:
  sub_1BFF0056C(v26);
  swift_bridgeObjectRelease();
  sub_1BFF0056C(v29);
LABEL_50:
  sub_1BFF0056C(v29);
  swift_bridgeObjectRelease();
  unint64_t v14 = v28;
  sub_1BFF0056C(v28);
LABEL_51:
  sub_1BFF0056C(v14);
  swift_bridgeObjectRelease();
  sub_1BFF0056C(v13);
LABEL_52:
  sub_1BFF0056C(v13);
  swift_bridgeObjectRelease();
  sub_1BFF0056C(v11);
  swift_bridgeObjectRelease();
  sub_1BFF0056C(v11);
  return swift_bridgeObjectRelease();
}

void sub_1C1142B78(unint64_t *a1, long long *a2, uint64_t a3)
{
  unint64_t v136 = a1;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))type metadata accessor for FormatItemNodeAction();
  uint64_t v7 = *((void *)v6 - 1);
  MEMORY[0x1F4188790](v6);
  uint64_t v135 = (uint64_t)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFFA18D8(0);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (char *)&v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FormatItemNodeStyle.Selector(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v126 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a3 + 16);
  if (!v16) {
    return;
  }
  uint64_t v17 = a3;
  uint64_t v18 = a3 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v137 = *(void *)(v13 + 72);
  long long v138 = (uint64_t (**)(char *, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, char)))(v7 + 48);
  long long v139 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))v6;
  uint64_t v134 = v17;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1C1147A28(v18, (uint64_t)v15, type metadata accessor for FormatItemNodeStyle.Selector);
    if ((v15[80] & 0xFE) != 0x7E && (*((void *)v15 + 2) & 0xF000000000000007) != 0xF000000000000007)
    {
      uint64_t v147 = *((void *)v15 + 2);
      long long v20 = a2[5];
      long long v144 = a2[4];
      long long v145 = v20;
      uint64_t v146 = *((void *)a2 + 12);
      long long v21 = a2[1];
      long long v140 = *a2;
      long long v141 = v21;
      long long v22 = a2[3];
      long long v142 = a2[2];
      long long v143 = v22;
      sub_1BFF79540((uint64_t)v136, (uint64_t)&v140);
      if (v3) {
        goto LABEL_65;
      }
    }
    if (!v15[144]
      && (*((void *)v15 + 17) & 0xF000000000000007) != 0xD000000000000007
      && (*((void *)v15 + 11) & 0xF000000000000007) != 0xF000000000000007)
    {
      uint64_t v147 = *((void *)v15 + 11);
      long long v24 = a2[5];
      long long v144 = a2[4];
      long long v145 = v24;
      uint64_t v146 = *((void *)a2 + 12);
      long long v25 = a2[1];
      long long v140 = *a2;
      long long v141 = v25;
      long long v26 = a2[3];
      long long v142 = a2[2];
      long long v143 = v26;
      sub_1BFF79540((uint64_t)v136, (uint64_t)&v140);
      if (v3) {
        goto LABEL_65;
      }
    }
    sub_1C1147A28((uint64_t)&v15[*(int *)(v12 + 28)], (uint64_t)v11, (uint64_t (*)(void))sub_1BFFA18D8);
    int v27 = (*v138)(v11, 1, v139);
    unint64_t v28 = (uint64_t (*)())sub_1BFFA18D8;
    if (v27 == 1) {
      goto LABEL_17;
    }
    sub_1C1147A28((uint64_t)v11, v135, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    unint64_t v28 = type metadata accessor for FormatItemNodeAction;
    if ((EnumCaseMultiPayload - 2) < 6) {
      goto LABEL_17;
    }
    if (EnumCaseMultiPayload)
    {
      uint64_t v30 = type metadata accessor for FormatItemNodeAction;
      sub_1C1147B04(v135, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
      goto LABEL_18;
    }
    uint64_t v32 = *(void *)v135;
    uint64_t v33 = *(void *)(v135 + 8);
    uint64_t v34 = *(void *)(v135 + 16);
    unsigned int v35 = *(unsigned __int8 *)(v135 + 24);
    int v36 = *(unsigned __int8 *)(v135 + 25);
    switch((4 * (v36 & 0x3F)) | (v35 >> 2) & 3)
    {
      case 1u:
      case 2u:
      case 4u:
      case 5u:
      case 7u:
      case 8u:
LABEL_22:
        long long v37 = sub_1BFDEB9E0;
        goto LABEL_23;
      case 3u:
        switch(*(void *)(v135 + 16))
        {
          case 1u:
            if ((~v32 & 0xF000000000000007) == 0) {
              goto LABEL_22;
            }
            uint64_t v147 = *(void *)v135;
            long long v56 = a2[5];
            long long v144 = a2[4];
            long long v145 = v56;
            uint64_t v146 = *((void *)a2 + 12);
            long long v57 = a2[1];
            long long v140 = *a2;
            long long v141 = v57;
            long long v58 = a2[3];
            long long v142 = a2[2];
            long long v143 = v58;
            unint64_t v128 = sub_1BFDEB94C;
            uint64_t v129 = v34;
            uint64_t v133 = v33;
            uint64_t v131 = v32;
            unsigned int v59 = v35;
            int v60 = v36;
            unint64_t v127 = (uint64_t (*)(void))sub_1C00AB56C;
            sub_1C11493E4(v32, v33, v34, v35, v36, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
            unsigned int v132 = v59;
            int v130 = v60;
            sub_1C11493E4(v131, v133, v129, v59, v60, v127, v127, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
            uint64_t v61 = v131;
            sub_1BFDC11A4(v131);
            sub_1BFE2F328(v136, (uint64_t)&v140);
            if (v3)
            {
              uint64_t v104 = v61;
              sub_1BFDC11BC(v61);
              long long v139 = sub_1BFDEB9E0;
              uint64_t v105 = v61;
              uint64_t v106 = v133;
              uint64_t v107 = v129;
              unsigned int v108 = v132;
              char v109 = v130;
              sub_1C11493E4(v105, v133, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              sub_1C11493E4(v104, v106, v107, v108, v109, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v139);
              sub_1C11493E4(v104, v106, v107, v108, v109, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v139);
              goto LABEL_74;
            }
            sub_1BFDC11BC(v61);
            unint64_t v128 = sub_1BFDEB9E0;
            sub_1C11493E4(v61, v133, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
            sub_1C11493E4(v61, v133, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
            uint64_t v32 = v61;
            uint64_t v33 = v133;
            uint64_t v34 = v129;
LABEL_39:
            unsigned int v35 = v132;
            LOBYTE(v36) = v130;
            long long v37 = v128;
            break;
          case 2u:
            goto LABEL_22;
          default:
            goto LABEL_29;
        }
        goto LABEL_23;
      case 6u:
        if (!(v35 >> 6))
        {
          switch(*(void *)(v135 + 16))
          {
            case 1u:
              goto LABEL_40;
            case 2u:
              goto LABEL_22;
            default:
              goto LABEL_37;
          }
        }
        if (v35 >> 6 == 1)
        {
          switch(*(void *)(v135 + 16))
          {
            case 1u:
              goto LABEL_40;
            case 2u:
              goto LABEL_22;
            default:
              goto LABEL_37;
          }
        }
        switch(v35 & 0x33333333)
        {
          case 1u:
            if ((~v33 & 0xF000000000000007) == 0) {
              goto LABEL_22;
            }
            LODWORD(v127) = v35 & 0xF3;
            uint64_t v147 = v33;
            long long v62 = a2[5];
            long long v144 = a2[4];
            long long v145 = v62;
            uint64_t v146 = *((void *)a2 + 12);
            long long v63 = a2[1];
            long long v140 = *a2;
            long long v141 = v63;
            long long v64 = a2[3];
            long long v142 = a2[2];
            long long v143 = v64;
            unint64_t v128 = sub_1BFDEB94C;
            uint64_t v129 = v34;
            uint64_t v131 = v32;
            uint64_t v133 = v33;
            unsigned int v132 = v35;
            int v65 = v36;
            sub_1C11493E4(v32, v33, v34, v35, v36, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
            sub_1C11493E4(v131, v133, v129, v132, v65, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
            sub_1C11493E4(v131, v133, v129, v132, v65, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
            int v130 = v65;
            sub_1C11493E4(v131, v133, v129, v132, v65, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
            uint64_t v66 = v133;
            sub_1BFDC11A4(v133);
            sub_1BFE2F328(v136, (uint64_t)&v140);
            if (v3)
            {
              sub_1BFDC11BC(v66);
              long long v139 = sub_1BFDEB9E0;
              uint64_t v110 = v131;
              uint64_t v111 = v129;
              unsigned int v112 = v132;
              char v113 = v130;
              sub_1C11493E4(v131, v66, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              unsigned int v114 = v112;
              long long v115 = v139;
              sub_1C11493E4(v110, v66, v111, v114, v113, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v139);
              sub_1C11493E4(v110, v66, v111, v132, v113, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v115);
              sub_1C11493E4(v110, v66, v111, v132, v113, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v115);
              sub_1C0223EF4(v110, v66, v111, v127, (uint64_t (*)(void))sub_1C002B840);
              goto LABEL_74;
            }
            sub_1BFDC11BC(v66);
            unint64_t v128 = sub_1BFDEB9E0;
            sub_1C11493E4(v131, v66, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
            sub_1C11493E4(v131, v66, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
            uint64_t v67 = v66;
            uint64_t v68 = v129;
            sub_1C11493E4(v131, v67, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
            sub_1C11493E4(v131, v133, v68, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
            sub_1C0223EF4(v131, v133, v68, v127, (uint64_t (*)(void))sub_1C002B840);
            break;
          case 2u:
            goto LABEL_22;
          default:
            goto LABEL_35;
        }
        goto LABEL_24;
      default:
        switch((v35 >> 4) & 3)
        {
          case 1u:
LABEL_29:
            long long v38 = sub_1BFDEB9E0;
            unint64_t v128 = sub_1BFDEB9E0;
            uint64_t v133 = v33;
            uint64_t v131 = v32;
            uint64_t v39 = v34;
            unsigned int v132 = v35;
            int v130 = v36;
LABEL_38:
            sub_1C11493E4(v32, v33, v34, v35, v36, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v38);
            uint64_t v32 = v131;
            uint64_t v33 = v133;
            uint64_t v34 = v39;
            goto LABEL_39;
          case 2u:
            switch(*(void *)(v135 + 16))
            {
              case 1u:
                goto LABEL_40;
              case 2u:
                goto LABEL_22;
              default:
                goto LABEL_37;
            }
          case 3u:
            if (v35 >> 6)
            {
              if (v35 >> 6 == 1)
              {
                switch(*(void *)(v135 + 16))
                {
                  case 1u:
                    goto LABEL_54;
                  case 2u:
                    goto LABEL_22;
                  default:
                    goto LABEL_35;
                }
              }
              switch(v35 & 0xF)
              {
                case 1u:
                  if ((~v33 & 0xF000000000000007) == 0) {
                    goto LABEL_22;
                  }
                  uint64_t v147 = *(void *)(v135 + 8);
                  long long v87 = a2[5];
                  long long v144 = a2[4];
                  long long v145 = v87;
                  uint64_t v146 = *((void *)a2 + 12);
                  long long v88 = a2[1];
                  long long v140 = *a2;
                  long long v141 = v88;
                  long long v89 = a2[3];
                  long long v142 = a2[2];
                  long long v143 = v89;
                  unint64_t v128 = sub_1BFDEB94C;
                  uint64_t v129 = v34;
                  unsigned int v132 = v35;
                  uint64_t v131 = v32;
                  uint64_t v133 = v33;
                  int v90 = v36;
                  sub_1C11493E4(v32, v33, v34, v35, v36, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                  sub_1C11493E4(v131, v133, v129, v132, v90, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  sub_1C11493E4(v131, v133, v129, v132, v90, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  sub_1C11493E4(v131, v133, v129, v132, v90, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  int v130 = v90;
                  sub_1C11493E4(v131, v133, v129, v132, v90, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  uint64_t v91 = v133;
                  sub_1BFDC11A4(v133);
                  sub_1BFE2F328(v136, (uint64_t)&v140);
                  if (v3)
                  {
                    sub_1BFDC11BC(v91);
                    long long v139 = sub_1BFDEB9E0;
                    uint64_t v116 = v131;
                    uint64_t v118 = v129;
                    unsigned int v119 = v132;
                    char v123 = v130;
                    sub_1C11493E4(v131, v91, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                    char v124 = v123;
                    uint64_t v125 = v139;
                    sub_1C11493E4(v116, v91, v118, v119, v124, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v139);
                    sub_1C11493E4(v116, v91, v118, v119, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v125);
                    sub_1C11493E4(v116, v91, v118, v119, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v125);
                    sub_1C0224154(v116, v91, v118, v119, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                    goto LABEL_73;
                  }
                  sub_1BFDC11BC(v91);
                  unint64_t v128 = sub_1BFDEB9E0;
                  sub_1C11493E4(v131, v91, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  uint64_t v92 = v91;
                  uint64_t v93 = v129;
                  sub_1C11493E4(v131, v92, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  sub_1C11493E4(v131, v133, v93, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  uint64_t v94 = v131;
                  sub_1C11493E4(v131, v133, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  uint64_t v95 = v94;
                  unsigned int v86 = v132;
                  sub_1C0224154(v95, v133, v129, v132, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
LABEL_59:
                  uint64_t v78 = v131;
                  uint64_t v79 = v133;
                  uint64_t v80 = v129;
                  unsigned int v81 = v86;
                  break;
                case 2u:
                  goto LABEL_22;
                default:
                  unint64_t v128 = sub_1BFDEB9E0;
                  uint64_t v133 = v33;
                  uint64_t v82 = v32;
                  uint64_t v131 = v32;
                  uint64_t v129 = v34;
                  unsigned int v132 = v35;
                  int v130 = v36;
                  sub_1C11493E4(v32, v33, v34, v35, v36, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  uint64_t v83 = v82;
                  uint64_t v84 = v133;
                  sub_1C11493E4(v83, v133, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  uint64_t v85 = v84;
                  unsigned int v86 = v132;
                  sub_1C11493E4(v131, v85, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  sub_1C11493E4(v131, v133, v129, v86, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  goto LABEL_59;
              }
            }
            else
            {
              switch(*(void *)(v135 + 16))
              {
                case 1u:
LABEL_54:
                  if ((~v32 & 0xF000000000000007) == 0) {
                    goto LABEL_22;
                  }
                  uint64_t v147 = *(void *)v135;
                  long long v69 = a2[5];
                  long long v144 = a2[4];
                  long long v145 = v69;
                  uint64_t v146 = *((void *)a2 + 12);
                  long long v70 = a2[1];
                  long long v140 = *a2;
                  long long v141 = v70;
                  long long v71 = a2[3];
                  long long v142 = a2[2];
                  long long v143 = v71;
                  unint64_t v128 = sub_1BFDEB94C;
                  uint64_t v129 = v34;
                  unsigned int v132 = v35;
                  uint64_t v133 = v33;
                  uint64_t v131 = v32;
                  int v72 = v36;
                  sub_1C11493E4(v32, v33, v34, v35, v36, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                  sub_1C11493E4(v131, v133, v129, v132, v72, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  sub_1C11493E4(v131, v133, v129, v132, v72, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  int v130 = v72;
                  sub_1C11493E4(v131, v133, v129, v132, v72, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  uint64_t v73 = v131;
                  sub_1BFDC11A4(v131);
                  sub_1BFE2F328(v136, (uint64_t)&v140);
                  if (v3)
                  {
                    uint64_t v116 = v73;
                    sub_1BFDC11BC(v73);
                    long long v139 = sub_1BFDEB9E0;
                    uint64_t v117 = v73;
                    uint64_t v91 = v133;
                    uint64_t v118 = v129;
                    unsigned int v119 = v132;
                    char v120 = v130;
                    sub_1C11493E4(v117, v133, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                    char v121 = v120;
                    uint64_t v122 = v139;
                    sub_1C11493E4(v116, v91, v118, v119, v121, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v139);
                    sub_1C11493E4(v116, v91, v118, v119, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v122);
                    sub_1C11493E4(v116, v91, v118, v119, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v122);
LABEL_73:
                    sub_1C0224154(v116, v91, v118, v119, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                    goto LABEL_74;
                  }
                  sub_1BFDC11BC(v73);
                  unint64_t v128 = sub_1BFDEB9E0;
                  uint64_t v74 = v73;
                  uint64_t v75 = v129;
                  sub_1C11493E4(v74, v133, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  uint64_t v76 = v75;
                  LODWORD(v75) = v132;
                  sub_1C11493E4(v131, v133, v76, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  sub_1C11493E4(v131, v133, v129, v75, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  uint64_t v77 = v133;
                  sub_1C11493E4(v131, v133, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  uint64_t v78 = v131;
                  uint64_t v79 = v77;
                  uint64_t v80 = v129;
                  unsigned int v81 = v132;
                  break;
                case 2u:
                  goto LABEL_22;
                default:
LABEL_35:
                  unint64_t v128 = sub_1BFDEB9E0;
                  uint64_t v133 = v33;
                  uint64_t v40 = v32;
                  uint64_t v131 = v32;
                  uint64_t v129 = v34;
                  unsigned int v132 = v35;
                  int v130 = v36;
                  sub_1C11493E4(v32, v33, v34, v35, v36, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  uint64_t v41 = v40;
                  uint64_t v42 = v133;
                  sub_1C11493E4(v41, v133, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  uint64_t v43 = v131;
                  uint64_t v44 = v42;
                  uint64_t v45 = v129;
                  unsigned int v46 = v132;
                  goto LABEL_43;
              }
            }
            sub_1C0224154(v78, v79, v80, v81, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
LABEL_24:
            unint64_t v28 = type metadata accessor for FormatItemNodeAction;
LABEL_17:
            uint64_t v30 = v28;
LABEL_18:
            sub_1C1147B04((uint64_t)v11, (uint64_t (*)(void))v30);
            unint64_t v31 = *(void *)&v15[*(int *)(v12 + 40)];
            if (v31 <= 2) {
              sub_1BFF8C734(v31);
            }
            sub_1C1147B04((uint64_t)v15, type metadata accessor for FormatItemNodeStyle.Selector);
            v18 += v137;
            if (!--v16) {
              goto LABEL_66;
            }
            break;
          default:
            switch(*(void *)(v135 + 16))
            {
              case 1u:
LABEL_40:
                if ((~v32 & 0xF000000000000007) == 0) {
                  goto LABEL_22;
                }
                uint64_t v147 = *(void *)v135;
                long long v47 = a2[5];
                long long v144 = a2[4];
                long long v145 = v47;
                uint64_t v146 = *((void *)a2 + 12);
                long long v48 = a2[1];
                long long v140 = *a2;
                long long v141 = v48;
                long long v49 = a2[3];
                long long v142 = a2[2];
                long long v143 = v49;
                unint64_t v128 = sub_1BFDEB94C;
                uint64_t v129 = v34;
                uint64_t v133 = v33;
                uint64_t v131 = v32;
                unsigned int v132 = v35;
                int v50 = v36;
                sub_1C11493E4(v32, v33, v34, v35, v36, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                sub_1C11493E4(v131, v133, v129, v132, v50, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                int v130 = v50;
                sub_1C11493E4(v131, v133, v129, v132, v50, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                uint64_t v51 = v131;
                sub_1BFDC11A4(v131);
                sub_1BFE2F328(v136, (uint64_t)&v140);
                if (!v3)
                {
                  sub_1BFDC11BC(v51);
                  unint64_t v128 = sub_1BFDEB9E0;
                  uint64_t v52 = v51;
                  uint64_t v53 = v129;
                  sub_1C11493E4(v52, v133, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  uint64_t v54 = v53;
                  LODWORD(v53) = v132;
                  sub_1C11493E4(v131, v133, v54, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  uint64_t v43 = v131;
                  uint64_t v44 = v133;
                  uint64_t v45 = v129;
                  unsigned int v46 = v53;
LABEL_43:
                  uint64_t v55 = v128;
                  sub_1C11493E4(v43, v44, v45, v46, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v128);
                  uint64_t v32 = v131;
                  uint64_t v33 = v133;
                  uint64_t v34 = v129;
                  unsigned int v35 = v132;
                  LOBYTE(v36) = v130;
                  long long v37 = v55;
LABEL_23:
                  sub_1C11493E4(v32, v33, v34, v35, v36, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v37);
                  goto LABEL_24;
                }
                uint64_t v96 = v51;
                sub_1BFDC11BC(v51);
                long long v139 = sub_1BFDEB9E0;
                uint64_t v97 = v51;
                uint64_t v98 = v133;
                uint64_t v99 = v129;
                unsigned int v100 = v132;
                char v101 = v130;
                sub_1C11493E4(v97, v133, v129, v132, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                char v102 = v101;
                unint64_t v103 = v139;
                sub_1C11493E4(v96, v98, v99, v100, v102, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v139);
                sub_1C11493E4(v96, v98, v99, v100, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v103);
                sub_1C11493E4(v96, v98, v99, v100, v130, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v103);
LABEL_74:
                sub_1C1147B04((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
LABEL_65:
                sub_1C1147B04((uint64_t)v15, type metadata accessor for FormatItemNodeStyle.Selector);
LABEL_66:
                swift_bridgeObjectRelease();
                return;
              case 2u:
                goto LABEL_22;
              default:
LABEL_37:
                unint64_t v128 = sub_1BFDEB9E0;
                uint64_t v133 = v33;
                uint64_t v131 = v32;
                uint64_t v39 = v34;
                unsigned int v132 = v35;
                int v130 = v36;
                sub_1C11493E4(v32, v33, v34, v35, v36, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                uint64_t v32 = v131;
                uint64_t v33 = v133;
                uint64_t v34 = v39;
                unsigned int v35 = v132;
                LOBYTE(v36) = v130;
                long long v38 = v128;
                goto LABEL_38;
            }
        }
        break;
    }
  }
}

uint64_t FormatPackageInventory.styles.getter@<X0>(void *a1@<X8>)
{
  return sub_1C1145704(&OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles, a1);
}

uint64_t FormatPackageInventory.groups.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackageInventory.options.getter()
{
  return sub_1BFC893A4();
}

uint64_t FormatPackageInventory.decorations.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
  swift_beginAccess();
  *a1 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackageInventory.localizations.getter@<X0>(void *a1@<X8>)
{
  return sub_1C1145704(&OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations, a1);
}

uint64_t FormatPackageInventory.types.getter@<X0>(void *a1@<X8>)
{
  return sub_1C1145704(&OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types, a1);
}

void sub_1C1144648(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_1C0011A48((uint64_t)a1, a2, a3);
  if (!v4)
  {
    switch(a4 >> 62)
    {
      case 1uLL:
        uint64_t v8 = *(void *)((a4 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v9 = *(void *)(v8 + 32);
        __int16 v10 = *(_WORD *)(v8 + 40);
        long long v19 = *(_OWORD *)(v8 + 16);
        uint64_t v20 = v9;
        __int16 v21 = v10;
        long long v11 = *(_OWORD *)(a2 + 80);
        v17[4] = *(_OWORD *)(a2 + 64);
        v17[5] = v11;
        uint64_t v18 = *(void *)(a2 + 96);
        long long v12 = *(_OWORD *)(a2 + 16);
        v17[0] = *(_OWORD *)a2;
        v17[1] = v12;
        long long v13 = *(_OWORD *)(a2 + 48);
        uint64_t v17[2] = *(_OWORD *)(a2 + 32);
        void v17[3] = v13;
        sub_1BFF8449C(a1, (uint64_t)v17);
        break;
      case 2uLL:
        uint64_t v14 = a4 & 0x3FFFFFFFFFFFFFFFLL;
        uint64_t v16 = *(void *)(v14 + 16);
        uint64_t v15 = *(void *)(v14 + 24);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1C1144648(a1, a2, v16, v15);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        break;
      case 3uLL:
        swift_release();
        break;
      default:
        return;
    }
  }
}

__n128 sub_1C1144790(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BFE2F9C4((uint64_t)a1, (long long *)a2, a3, (void (*)(unint64_t *, long long *))sub_1BFE2F328);
  if (!v4)
  {
    uint64_t v14 = a4;
    long long v9 = *(_OWORD *)(a2 + 80);
    _DWORD v12[4] = *(_OWORD *)(a2 + 64);
    v12[5] = v9;
    uint64_t v13 = *(void *)(a2 + 96);
    long long v10 = *(_OWORD *)(a2 + 16);
    v12[0] = *(_OWORD *)a2;
    v12[1] = v10;
    long long v11 = *(_OWORD *)(a2 + 48);
    _OWORD v12[2] = *(_OWORD *)(a2 + 32);
    void v12[3] = v11;
    sub_1BFE2F328(a1, (uint64_t)v12);
  }
  return result;
}

uint64_t sub_1C1144818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a3;
  sub_1BFE9E08C(0, &qword_1EA19C020, (uint64_t)&type metadata for FormatSourceItemTipTrait, MEMORY[0x1E4FBB320]);
  sub_1C1149690();
  swift_bridgeObjectRetain();
  if (swift_dynamicCast())
  {
    uint64_t v8 = *((void *)&v17 + 1);
    uint64_t v9 = v18;
    __swift_project_boxed_opaque_existential_1(&v16, *((uint64_t *)&v17 + 1));
    long long v10 = *(_OWORD *)(a2 + 80);
    v14[4] = *(_OWORD *)(a2 + 64);
    v14[5] = v10;
    uint64_t v15 = *(void *)(a2 + 96);
    long long v11 = *(_OWORD *)(a2 + 16);
    v14[0] = *(_OWORD *)a2;
    v14[1] = v11;
    long long v12 = *(_OWORD *)(a2 + 48);
    v14[2] = *(_OWORD *)(a2 + 32);
    v14[3] = v12;
    (*(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t))(v9 + 8))(a1, v14, v8, v9);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
    if (v4) {
      return result;
    }
  }
  else
  {
    uint64_t v18 = 0;
    long long v16 = 0u;
    long long v17 = 0u;
    sub_1C1147B04((uint64_t)&v16, (uint64_t (*)(void))sub_1C11496E8);
  }
  swift_bridgeObjectRetain();
  sub_1C1132FE0(a1, a2, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1144990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C1144A10(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C1144990, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C1137C8C);
}

uint64_t sub_1C11449D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C1144A10(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C11449D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C1137CCC);
}

uint64_t sub_1C1144A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = v6;
  if ((a3 & 0x8000000000000000) == 0) {
    goto LABEL_3;
  }
  uint64_t v13 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v14 = *(void *)((a3 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  a5(a1, a2, v13, v14);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v8)
  {
LABEL_3:
    swift_bridgeObjectRetain();
    a6(a1, a2, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C1144AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C1144A10(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C1144AF8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C1138B48);
}

uint64_t sub_1C1144B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  if ((a3 & 0x8000000000000000) == 0) {
    goto LABEL_3;
  }
  uint64_t v9 = *(void *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v10 = *(void *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C1144B38(a1, a2, v9, v10);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v5)
  {
LABEL_3:
    swift_bridgeObjectRetain();
    sub_1C1138D04(a1, a2, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C1144C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, _OWORD *), void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v17 = a3;
  long long v11 = *(_OWORD *)(a2 + 80);
  void v15[4] = *(_OWORD *)(a2 + 64);
  v15[5] = v11;
  uint64_t v16 = *(void *)(a2 + 96);
  long long v12 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v12;
  long long v13 = *(_OWORD *)(a2 + 48);
  v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v13;
  uint64_t result = a5(a1, v15);
  if (!v6)
  {
    swift_bridgeObjectRetain();
    a6(a1, a2, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C1144CB8(unint64_t *a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a3;
  long long v8 = a2[5];
  long long v20 = a2[4];
  long long v21 = v8;
  uint64_t v22 = *((void *)a2 + 12);
  long long v9 = a2[1];
  long long v16 = *a2;
  long long v17 = v9;
  long long v10 = a2[3];
  long long v18 = a2[2];
  long long v19 = v10;
  sub_1BFE2F328(a1, (uint64_t)&v16);
  if (!v4)
  {
    uint64_t v11 = *(void *)(a4 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain_n();
      long long v12 = (uint64_t *)(a4 + 48);
      do
      {
        uint64_t v23 = *v12;
        long long v13 = a2[5];
        long long v20 = a2[4];
        long long v21 = v13;
        uint64_t v22 = *((void *)a2 + 12);
        long long v14 = a2[1];
        long long v16 = *a2;
        long long v17 = v14;
        long long v15 = a2[3];
        long long v18 = a2[2];
        long long v19 = v15;
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BFE2F328(a1, (uint64_t)&v16);
        swift_bridgeObjectRelease();
        swift_release_n();
        v12 += 3;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease_n();
    }
  }
}

unint64_t sub_1C1144E0C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a3 >> 62 != 1) {
    goto LABEL_3;
  }
  unint64_t v9 = *(void *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v10 = *(void *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  sub_1BFE6FA30(a3);
  sub_1BFE6FA30(v9);
  swift_bridgeObjectRetain();
  sub_1C1144E0C(a1, a2, v9, v10);
  sub_1BFF0056C(v9);
  swift_bridgeObjectRelease();
  unint64_t result = sub_1BFF0056C(a3);
  if (!v4)
  {
LABEL_3:
    swift_bridgeObjectRetain();
    sub_1C1142490(a1, a2, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FormatPackageInventory.supplementaries.getter@<X0>(void *a1@<X8>)
{
  return sub_1C1145704(&OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries, a1);
}

uint64_t sub_1C1144F00()
{
  return 0;
}

uint64_t FormatPackageInventory.direction.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t FormatPackageInventory.selectors.getter()
{
  return sub_1BFC893A4();
}

uint64_t FormatPackageInventory.items.getter@<X0>(void *a1@<X8>)
{
  return sub_1C1145704(&OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items, a1);
}

uint64_t FormatPackageInventory.snippets.getter@<X0>(void *a1@<X8>)
{
  return sub_1C1145704(&OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets, a1);
}

void (*FormatPackageInventory.__allocating_init(identifier:version:role:direction:name:comment:groups:items:snippets:styles:slots:supplementaries:types:decorations:options:selectors:localizations:compilerOptions:columnSystem:references:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, unsigned char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned char *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t *a22,uint64_t a23))(uint64_t, uint64_t)
{
  return sub_1C1147B64(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1C1145114(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatCompilerOptions(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151928C();
  __n128 v10 = MEMORY[0x1F4188790](v8);
  long long v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    uint64_t v13 = v2[2];
    long long v57 = v12;
    uint64_t v58 = v13;
    uint64_t v61 = v2[3];
    (*(void (**)(char *, uint64_t, __n128))(v9 + 16))(v12, (uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_version, v10);
    v77[0] = *((unsigned char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role);
    uint64_t v54 = v7;
    long long v14 = (char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction;
    swift_beginAccess();
    char v76 = *v14;
    long long v15 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
    swift_beginAccess();
    uint64_t v56 = *v15;
    uint64_t v60 = v15[1];
    long long v16 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__comment);
    swift_beginAccess();
    uint64_t v55 = *v16;
    uint64_t v59 = v16[1];
    long long v17 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
    swift_beginAccess();
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v51 = v17[2];
    *(void *)&long long v74 = v19;
    *((void *)&v74 + 1) = v18;
    uint64_t v75 = v51;
    uint64_t v53 = v4;
    long long v20 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items);
    swift_beginAccess();
    uint64_t v21 = v20[1];
    *(void *)&long long v73 = *v20;
    *((void *)&v73 + 1) = v21;
    uint64_t v22 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets);
    swift_beginAccess();
    uint64_t v23 = v22[1];
    *(void *)&long long v72 = *v22;
    *((void *)&v72 + 1) = v23;
    uint64_t v52 = a1;
    long long v24 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
    swift_beginAccess();
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v68 = v25;
    uint64_t v69 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C1103564(v52, &v71);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v70[0] = v71;
    int v27 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots);
    swift_beginAccess();
    uint64_t v28 = v27[1];
    uint64_t v51 = *v27;
    uint64_t v52 = v28;
    *(void *)&long long v67 = v51;
    *((void *)&v67 + 1) = v28;
    unint64_t v29 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries);
    swift_beginAccess();
    uint64_t v30 = v29[1];
    uint64_t v49 = *v29;
    uint64_t v50 = v30;
    *(void *)&long long v66 = v49;
    *((void *)&v66 + 1) = v30;
    unint64_t v31 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
    swift_beginAccess();
    uint64_t v32 = v31[1];
    *(void *)&long long v65 = *v31;
    *((void *)&v65 + 1) = v32;
    uint64_t v33 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
    swift_beginAccess();
    v64[0] = *v33;
    uint64_t v34 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
    swift_beginAccess();
    uint64_t v48 = *v34;
    unsigned int v35 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__selectors);
    swift_beginAccess();
    uint64_t v47 = *v35;
    int v36 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
    swift_beginAccess();
    uint64_t v38 = *v36;
    uint64_t v37 = v36[1];
    *(void *)&long long v63 = v38;
    *((void *)&v63 + 1) = v37;
    uint64_t v39 = (uint64_t)v54;
    sub_1C1147A28((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, (uint64_t)v54, type metadata accessor for FormatCompilerOptions);
    unint64_t v40 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem + 8);
    v62[0] = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem);
    uint64_t v41 = v62[0];
    v62[1] = v40;
    uint64_t v42 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
    swift_beginAccess();
    uint64_t v43 = *v42;
    uint64_t v53 = swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v44 = v48;
    swift_bridgeObjectRetain();
    uint64_t v45 = v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFEB9640(v41, v40);
    swift_bridgeObjectRetain();
    return sub_1BFFD3970(v58, v61, (uint64_t)v57, v77, &v76, v56, v60, v55, v59, &v74, &v73, &v72, v70, &v67, &v66, &v65, v64, v44, v45,
             &v63,
             v39,
             v62,
             v43);
  }
  else
  {
    swift_retain();
  }
  return (uint64_t)v2;
}

uint64_t FormatPackageInventory.slots.getter@<X0>(void *a1@<X8>)
{
  return sub_1C1145704(&OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots, a1);
}

uint64_t sub_1C1145704@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (uint64_t *)(v2 + *a1);
  swift_beginAccess();
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  *a2 = v5;
  a2[1] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackageInventory.version.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_version;
  uint64_t v4 = sub_1C151928C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

void FormatPackageInventory.role.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role);
}

uint64_t FormatPackageInventory.direction.setter(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t (*FormatPackageInventory.direction.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPackageInventory.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C1145970(a1, a2, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
}

uint64_t (*FormatPackageInventory.name.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C11458FC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = (void *)(*a2 + *a5);
  swift_beginAccess();
  *uint64_t v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatPackageInventory.comment.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C1145970(a1, a2, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__comment);
}

uint64_t sub_1C1145970(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)(v3 + *a3);
  swift_beginAccess();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPackageInventory.comment.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C1145A28@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1145AA0(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = (void *)(*a2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
  swift_beginAccess();
  *uint64_t v5 = v2;
  v5[1] = v3;
  v5[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FormatPackageInventory.groups.setter(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = v1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups;
  swift_beginAccess();
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a1;
  *(void *)(v4 + 16) = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPackageInventory.groups.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPackageInventory.items.setter(_OWORD *a1)
{
  return sub_1C1146108(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items);
}

uint64_t (*FormatPackageInventory.items.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPackageInventory.snippets.setter(_OWORD *a1)
{
  return sub_1C1146108(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets);
}

uint64_t (*FormatPackageInventory.snippets.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPackageInventory.supplementaries.setter(_OWORD *a1)
{
  return sub_1C1146108(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries);
}

uint64_t (*FormatPackageInventory.supplementaries.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPackageInventory.styles.setter(_OWORD *a1)
{
  return sub_1C1146108(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
}

uint64_t (*FormatPackageInventory.styles.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPackageInventory.slots.setter(_OWORD *a1)
{
  return sub_1C1146108(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots);
}

uint64_t (*FormatPackageInventory.slots.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPackageInventory.types.setter(_OWORD *a1)
{
  return sub_1C1146108(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
}

uint64_t (*FormatPackageInventory.types.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPackageInventory.decorations.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
  swift_beginAccess();
  *uint64_t v3 = v2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPackageInventory.decorations.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPackageInventory.options.setter(uint64_t a1)
{
  return sub_1C036B7AC(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
}

uint64_t (*FormatPackageInventory.options.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPackageInventory.selectors.setter(uint64_t a1)
{
  return sub_1C036B7AC(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__selectors);
}

uint64_t (*FormatPackageInventory.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C1146020@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  uint64_t v4 = (uint64_t *)(*a1 + *a2);
  swift_beginAccess();
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  *a3 = v5;
  a3[1] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C114607C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = (void *)(*a2 + *a5);
  swift_beginAccess();
  *uint64_t v7 = v5;
  v7[1] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FormatPackageInventory.localizations.setter(_OWORD *a1)
{
  return sub_1C1146108(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
}

uint64_t sub_1C1146108(_OWORD *a1, void *a2)
{
  uint64_t v4 = (_OWORD *)(v2 + *a2);
  swift_beginAccess();
  *uint64_t v4 = *a1;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPackageInventory.localizations.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPackageInventory.columnSystem.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem);
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem + 8);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFEB9640(v2, v3);
}

uint64_t FormatPackageInventory.references.setter(uint64_t a1)
{
  return sub_1C036B7AC(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
}

uint64_t (*FormatPackageInventory.references.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatPackageInventory.__allocating_init(from:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  FormatPackageInventory.init(from:)(a1);
  return v2;
}

uint64_t sub_1C11462E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1148B7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1146310(uint64_t a1)
{
  unint64_t v2 = sub_1BFD89BDC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C114634C(uint64_t a1)
{
  unint64_t v2 = sub_1BFD89BDC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatPackageInventory.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_version;
  uint64_t v2 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFFD0438(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem), *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem + 8));
  swift_bridgeObjectRelease();
  sub_1C1147B04(v0 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, type metadata accessor for FormatCompilerOptions);
  return v0;
}

uint64_t FormatPackageInventory.__deallocating_deinit()
{
  FormatPackageInventory.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatPackageInventory.shortDescription.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1BFE79CBC(0, (unint64_t *)&qword_1EB87A8C0, (uint64_t (*)(uint64_t))sub_1C00653B4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = *(void *)(v1 + 16);
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = 0x6E6F6973726576;
  *(void *)(inited + 88) = 0xE700000000000000;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C151920C();
  *(void *)(inited + 120) = v6;
  *(void *)(inited + 96) = v7;
  *(void *)(inited + 104) = v8;
  unint64_t v9 = sub_1BFF99224(inited);
  __n128 v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
  swift_beginAccess();
  uint64_t v11 = v10[1];
  if (v11)
  {
    uint64_t v12 = *v10;
    uint64_t v22 = v6;
    *(void *)&long long v21 = v12;
    *((void *)&v21 + 1) = v11;
    sub_1BFF993A8(&v21, v20);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v23 = v9;
    sub_1BFFB4A24(v20, 1701667182, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  long long v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__comment);
  swift_beginAccess();
  uint64_t v15 = v14[1];
  if (v15)
  {
    uint64_t v16 = *v14;
    uint64_t v22 = v6;
    *(void *)&long long v21 = v16;
    *((void *)&v21 + 1) = v15;
    sub_1BFF993A8(&v21, v20);
    swift_bridgeObjectRetain();
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BFFB4A24(v20, 0x746E656D6D6F63, 0xE700000000000000, v17);
    swift_bridgeObjectRelease();
  }
  sub_1C1148548(0);
  a1[3] = v18;
  a1[4] = sub_1BFEBC46C(&qword_1EB8706C0, sub_1C1148548);
  __swift_allocate_boxed_opaque_existential_0(a1);
  return sub_1C15186FC();
}

uint64_t sub_1C1146880@<X0>(uint64_t *a1@<X8>)
{
  return FormatPackageInventory.shortDescription.getter(a1);
}

uint64_t sub_1C11468A4()
{
  sub_1BFEBC46C(&qword_1EB870718, (void (*)(uint64_t))type metadata accessor for FormatPackageInventory);
  return sub_1C15186EC();
}

uint64_t sub_1C1146910(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1C05F61F8);
}

uint64_t sub_1C1146928(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1BFFC1188);
}

uint64_t sub_1C1146940(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1C05F6684);
}

uint64_t sub_1C1146958(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1BFF9E910);
}

uint64_t sub_1C1146970(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1C05F670C);
}

uint64_t sub_1C1146988(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1BFFC0D74);
}

uint64_t sub_1C11469A0(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1BFFC0F30);
}

uint64_t sub_1C11469B8(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1BFFC11D0);
}

uint64_t sub_1C11469D0(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1BFFC0D44);
}

uint64_t sub_1C11469E8(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1BFFC0D14);
}

uint64_t sub_1C1146A00(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1BFFC0F60);
}

uint64_t sub_1C1146A18(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1BFFC0F90);
}

uint64_t sub_1C1146A30(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1BFFC1200);
}

uint64_t sub_1C1146A48(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1C05F855C);
}

uint64_t sub_1C1146A60(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1C05F857C);
}

uint64_t sub_1C1146A78(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1BFFC3ACC);
}

uint64_t sub_1C1146A90(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1C05F85CC);
}

uint64_t sub_1C1146AA8(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1C05F85EC);
}

uint64_t sub_1C1146AC0(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1C05F860C);
}

uint64_t sub_1C1146AD8(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1C05F862C);
}

uint64_t sub_1C1146AF0(uint64_t a1)
{
  return sub_1C1146B08(a1, (uint64_t (*)(void))sub_1C05F8674);
}

uint64_t sub_1C1146B08(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v4;
  if (!result || a1 > *(void *)(v4 + 24) >> 1)
  {
    return a2();
  }
  return result;
}

uint64_t sub_1C1146B98()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1C05F61F8);
}

uint64_t sub_1C1146BB0()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1BFFC1188);
}

uint64_t sub_1C1146BC8()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1C05F6684);
}

uint64_t sub_1C1146BE0()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF9E910);
}

uint64_t sub_1C1146BF8()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1C05F670C);
}

uint64_t sub_1C1146C10()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1BFFC0D74);
}

uint64_t sub_1C1146C28()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1BFFC0F30);
}

uint64_t sub_1C1146C40()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1BFFC11D0);
}

uint64_t sub_1C1146C58()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1BFFC0D44);
}

uint64_t sub_1C1146C70()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1BFFC0D14);
}

uint64_t sub_1C1146C88()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1BFFC0F60);
}

uint64_t sub_1C1146CA0()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1BFFC0F90);
}

uint64_t sub_1C1146CB8()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1BFFC1200);
}

uint64_t sub_1C1146CD0()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1BFFC0FC0);
}

uint64_t sub_1C1146CE8()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1C05F855C);
}

uint64_t sub_1C1146D00()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1C05F857C);
}

uint64_t sub_1C1146D18()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1BFFC3ACC);
}

uint64_t sub_1C1146D30()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1C05F85CC);
}

uint64_t sub_1C1146D48()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1C05F85EC);
}

uint64_t sub_1C1146D60()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1C05F860C);
}

uint64_t sub_1C1146D78()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1C05F862C);
}

uint64_t sub_1C1146D90()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1C05F8674);
}

uint64_t sub_1C1146DA8()
{
  return sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1C05F8694);
}

uint64_t sub_1C1146DC0(uint64_t (*a1)(void, uint64_t, uint64_t))
{
  uint64_t v2 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v2;
  if ((result & 1) == 0)
  {
    uint64_t v4 = *(void *)(v2 + 16) + 1;
    return a1(0, v4, 1);
  }
  return result;
}

uint64_t sub_1C1146E34(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1C05F61F8);
}

uint64_t sub_1C1146E4C(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1BFFC1188);
}

uint64_t sub_1C1146E64(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1C05F6684);
}

uint64_t sub_1C1146E7C(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1BFF9E910);
}

uint64_t sub_1C1146E94(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1C05F670C);
}

uint64_t sub_1C1146EAC(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1BFFC0D74);
}

uint64_t sub_1C1146EC4(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1BFFC0F30);
}

uint64_t sub_1C1146EDC(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1BFFC11D0);
}

uint64_t sub_1C1146EF4(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1BFFC0D44);
}

uint64_t sub_1C1146F0C(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1BFFC0D14);
}

uint64_t sub_1C1146F24(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1BFFC0F60);
}

uint64_t sub_1C1146F3C(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1BFFC0F90);
}

uint64_t sub_1C1146F54(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1BFFC1200);
}

uint64_t sub_1C1146F6C(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1BFFC0FC0);
}

uint64_t sub_1C1146F84(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1C05F855C);
}

uint64_t sub_1C1146F9C(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1C05F857C);
}

uint64_t sub_1C1146FB4(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1BFFC3ACC);
}

uint64_t sub_1C1146FCC(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1C05F85CC);
}

uint64_t sub_1C1146FE4(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1C05F85EC);
}

uint64_t sub_1C1146FFC(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1C05F860C);
}

uint64_t sub_1C1147014(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1C05F862C);
}

uint64_t sub_1C114702C(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1C05F8674);
}

uint64_t sub_1C1147044(uint64_t a1)
{
  return sub_1C114705C(a1, (uint64_t (*)(BOOL))sub_1C05F8694);
}

uint64_t sub_1C114705C(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1)) {
    return a2(v3 > 1);
  }
  return result;
}

uint64_t sub_1C114708C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  *(void *)(v5 + 16) = a1 + 1;
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32);
  uint64_t v9 = v6;
  unint64_t v10 = v5
      + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
      + *(void *)(v7 + 72) * a1;
  return v8(v10, a2, v9);
}

uint64_t sub_1C1147124(uint64_t a1, uint64_t a2)
{
  return sub_1BFFC0C6C(a1, a2, type metadata accessor for FormatCompilerOptions, type metadata accessor for FormatCompilerOptions);
}

uint64_t sub_1C1147150(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 16) = result + 1;
  *(void *)(v3 + 8 * result + 32) = a2;
  return result;
}

uint64_t sub_1C1147168(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 16) = a1 + 1;
  return sub_1C00F5BA4(a2, v3 + 136 * a1 + 32);
}

uint64_t sub_1C114718C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 16) = result + 1;
  uint64_t v5 = v4 + 16 * result;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 40) = a3;
  return result;
}

uint64_t sub_1C11471A4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *v4;
  *(void *)(v5 + 16) = result + 1;
  uint64_t v6 = (void *)(v5 + 24 * result);
  v6[4] = a2;
  v6[5] = a3;
  v6[6] = a4;
  return result;
}

uint64_t sub_1C11471C4(uint64_t a1, uint64_t a2)
{
  return sub_1C11472E0(a1, a2, (unint64_t *)&qword_1EB874190, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization);
}

uint64_t sub_1C11471EC(uint64_t a1, uint64_t a2)
{
  return sub_1C11472E0(a1, a2, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration);
}

uint64_t sub_1C1147214(uint64_t a1, uint64_t a2)
{
  return sub_1C11472E0(a1, a2, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType);
}

uint64_t sub_1C114723C(uint64_t a1, uint64_t a2)
{
  return sub_1C11472E0(a1, a2, (unint64_t *)&qword_1EB8741B0, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary);
}

uint64_t sub_1C1147264(uint64_t a1, uint64_t a2)
{
  return sub_1C11472E0(a1, a2, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle);
}

uint64_t sub_1C114728C(uint64_t a1, uint64_t a2)
{
  return sub_1BFFC0C6C(a1, a2, (uint64_t (*)(void))sub_1BFF1D9F4, (uint64_t (*)(void))sub_1BFF1D9F4);
}

uint64_t sub_1C11472B8(uint64_t a1, uint64_t a2)
{
  return sub_1C11472E0(a1, a2, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem);
}

uint64_t sub_1C11472E0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v11 = *v5;
  *(void *)(*v5 + 16) = a1 + 1;
  sub_1BFF14F38(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  return sub_1C114949C(a2, v11+ ((*(unsigned __int8 *)(*(void *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80))+ *(void *)(*(void *)(v12 - 8) + 72) * a1, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
}

uint64_t sub_1C11473CC(uint64_t a1, uint64_t a2)
{
  return sub_1C11472E0(a1, a2, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup);
}

uint64_t sub_1C11473F4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1C151928C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v56 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v55 = (char *)v49 - v12;
  uint64_t v57 = *(void *)(v13 + 72);
  if (!v57)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_68;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_69;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v57;
  unint64_t v60 = a1;
  unint64_t v59 = a4;
  uint64_t v16 = v14 / v57;
  if (v15 >= v14 / v57)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v57;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v19 = v9;
      }
      else
      {
        uint64_t v19 = v9;
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v34 = a4 + v18;
      unint64_t v58 = a4 + v18;
      unint64_t v60 = a2;
      unint64_t v52 = a1;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v36 = -v57;
        uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
        uint64_t v37 = v19 + 16;
        v49[1] = v37 - 8;
        uint64_t v50 = v38;
        unint64_t v53 = -v57;
        uint64_t v54 = v37;
        unint64_t v51 = a4;
        uint64_t v39 = v55;
        unint64_t v40 = (void (**)(char *, uint64_t))(v37 - 8);
        do
        {
          uint64_t v57 = a3 + v36;
          uint64_t v41 = v50;
          v50(v39, v34 + v36, v8);
          unint64_t v42 = a2 + v36;
          unint64_t v43 = a3;
          uint64_t v44 = v56;
          v41(v56, v42, v8);
          sub_1BFEBC46C((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
          LOBYTE(v41) = sub_1C151E56C();
          uint64_t v45 = *v40;
          (*v40)(v44, v8);
          v45(v39, v8);
          if (v41)
          {
            a3 = v57;
            if (v43 < a2 || v57 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v36 = v53;
            v60 += v53;
          }
          else
          {
            a3 = v57;
            unint64_t v47 = v58;
            v58 += v53;
            if (v43 < v47 || v57 >= v47)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v36 = v53;
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != v47) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v36 = v53;
            }
          }
          unint64_t v34 = v58;
          if (v58 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > v52);
      }
      goto LABEL_66;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v57;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v53 = a4 + v17;
    unint64_t v58 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      long long v21 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v54 = v9 + 16;
      uint64_t v22 = (void (**)(char *, uint64_t))(v9 + 8);
      do
      {
        unint64_t v23 = a3;
        long long v24 = v55;
        v21(v55, a2, v8);
        unint64_t v25 = a4;
        uint64_t v26 = v56;
        v21(v56, v25, v8);
        sub_1BFEBC46C((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
        char v27 = sub_1C151E56C();
        uint64_t v28 = *v22;
        (*v22)(v26, v8);
        v28(v24, v8);
        unint64_t v29 = v60;
        if (v27)
        {
          unint64_t v30 = a2 + v57;
          if (v60 < a2 || v60 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v32 = v59 + v57;
          if (v60 < v59 || v60 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 != v59) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v59 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v60 = v29 + v57;
        a4 = v59;
        if (v59 >= v53) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_66:
    sub_1C063562C(&v60, &v59, (uint64_t *)&v58);
    return 1;
  }
LABEL_70:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C1147A28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1147A90(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  sub_1BFF14F38(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_1C1147B04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void (*sub_1C1147B64(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, unsigned char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned char *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t *a22,uint64_t a23))(uint64_t, uint64_t)
{
  long long v74 = a5;
  uint64_t v56 = a6;
  uint64_t v57 = a8;
  uint64_t v65 = a7;
  uint64_t v78 = a3;
  uint64_t v72 = a2;
  uint64_t v55 = a1;
  uint64_t v67 = a23;
  uint64_t v68 = a20;
  uint64_t v60 = a19;
  uint64_t v61 = a18;
  uint64_t v59 = a17;
  uint64_t v58 = a16;
  uint64_t v77 = a15;
  uint64_t v69 = a14;
  uint64_t v66 = a9;
  uint64_t v76 = a21;
  uint64_t v24 = type metadata accessor for FormatCompilerOptions(0);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v54 = (uint64_t)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1C151928C();
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v73 = *a4;
  LOBYTE(a4) = *v74;
  unint64_t v29 = a22[1];
  uint64_t v62 = *a22;
  uint64_t v63 = v29;
  uint64_t v31 = v30;
  uint64_t v71 = a13;
  uint64_t v101 = sub_1C0234134(a13);
  uint64_t v32 = sub_1C0234170(a10);
  sub_1C1047B00(v32);
  long long v74 = a11;
  uint64_t v33 = v77;
  uint64_t v34 = sub_1C02341AC((uint64_t)a11);
  sub_1C1047B00(v34);
  uint64_t v35 = sub_1C02341E8(v33);
  sub_1C1047B00(v35);
  uint64_t v70 = a12;
  uint64_t v36 = sub_1C02343F4(a12);
  sub_1C1047B00(v36);
  uint64_t v64 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v28, v78, v26);
  v100[0] = v73;
  char v99 = (char)a4;
  uint64_t v37 = v75;
  sub_1BFFE59EC(a10, &v97);
  if (v37)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFFD0438(v62, v63);
    swift_bridgeObjectRelease();
    sub_1C1147B04(v76, type metadata accessor for FormatCompilerOptions);
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
    v38(v78, v26);
    v38((uint64_t)v28, v26);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = v69;
    uint64_t v40 = v70;
    uint64_t v41 = v26;
    uint64_t v42 = v68;
    uint64_t v43 = v71;
    uint64_t v44 = v72;
    uint64_t v75 = v28;
    long long v95 = v97;
    uint64_t v96 = v98;
    sub_1C0036DBC((uint64_t)v74, &v94);
    long long v93 = v94;
    sub_1BFE0354C(v40, &v92);
    long long v91 = v92;
    sub_1BFF94A5C(v43, &v90);
    long long v89 = v90;
    sub_1BFFE39A4(v39, &v88);
    uint64_t v46 = v41;
    uint64_t v47 = (uint64_t)v75;
    uint64_t v48 = v67;
    long long v87 = v88;
    sub_1BFD0CEF8(v77, &v86);
    long long v85 = v86;
    sub_1C1201F04(v58, v101, &v84);
    long long v83 = v84;
    uint64_t v82 = v59;
    sub_1BFDDC494(v42, &v81);
    uint64_t v49 = v78;
    long long v80 = v81;
    uint64_t v50 = v76;
    uint64_t v51 = v48;
    uint64_t v52 = v54;
    sub_1C1147A28(v76, v54, type metadata accessor for FormatCompilerOptions);
    v79[0] = v62;
    v79[1] = v63;
    type metadata accessor for FormatPackageInventory();
    swift_allocObject();
    uint64_t v38 = (void (*)(uint64_t, uint64_t))sub_1BFFD3970(v55, v44, v47, v100, &v99, v56, v65, v57, v66, &v95, &v93, &v91, &v89, &v87, &v85, &v83, &v82, v61, v60,
                                                   &v80,
                                                   v52,
                                                   v79,
                                                   v51);
    sub_1C1147B04(v50, type metadata accessor for FormatCompilerOptions);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v49, v46);
  }
  return v38;
}

void sub_1C1148548(uint64_t a1)
{
}

uint64_t sub_1C114857C()
{
  return sub_1BFEBC46C(&qword_1EB870720, (void (*)(uint64_t))type metadata accessor for FormatPackageInventory);
}

uint64_t sub_1C11485C4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1C1148618(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t sub_1C1148668@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_2Tm_0(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name, a2);
}

uint64_t sub_1C1148674(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C11458FC(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
}

uint64_t sub_1C1148694@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_2Tm_0(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__comment, a2);
}

uint64_t keypath_get_2Tm_0@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  uint64_t v4 = (void *)(*a1 + *a2);
  swift_beginAccess();
  uint64_t v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C11486F4(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C11458FC(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__comment);
}

uint64_t sub_1C114871C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C1146020(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items, a2);
}

uint64_t sub_1C114873C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C114607C(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items);
}

uint64_t sub_1C114875C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C1146020(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets, a2);
}

uint64_t sub_1C114877C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C114607C(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets);
}

uint64_t sub_1C114879C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C1146020(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries, a2);
}

uint64_t sub_1C11487BC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C114607C(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries);
}

uint64_t sub_1C11487DC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C1146020(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles, a2);
}

uint64_t sub_1C11487FC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C114607C(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
}

uint64_t sub_1C114881C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C1146020(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots, a2);
}

uint64_t sub_1C114883C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C114607C(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots);
}

uint64_t sub_1C114885C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C1146020(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types, a2);
}

uint64_t sub_1C114887C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C114607C(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
}

uint64_t sub_1C114889C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C11488F4(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C036B738(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
}

uint64_t sub_1C1148914@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options, a2);
}

uint64_t sub_1C1148920(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C036B738(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
}

uint64_t sub_1C1148940@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__selectors, a2);
}

uint64_t sub_1C114894C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C036B738(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__selectors);
}

uint64_t sub_1C114896C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C1146020(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations, a2);
}

uint64_t sub_1C114898C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C114607C(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
}

uint64_t sub_1C11489AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references, a2);
}

uint64_t sub_1C11489B8(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C036B738(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
}

uint64_t sub_1C11489D8()
{
  return type metadata accessor for FormatPackageInventory();
}

uint64_t method lookup function for FormatPackageInventory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatPackageInventory);
}

uint64_t dispatch thunk of FormatPackageInventory.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

unsigned char *storeEnumTagSinglePayload for FormatPackageInventory.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *uint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1148AECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPackageInventory.CodingKeys()
{
  return &type metadata for FormatPackageInventory.CodingKeys;
}

unint64_t sub_1C1148B28()
{
  unint64_t result = qword_1EA1ABE08;
  if (!qword_1EA1ABE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABE08);
  }
  return result;
}

uint64_t sub_1C1148B7C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F69746365726964 && a2 == 0xE90000000000006ELL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746E656D6D6F63 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7370756F7267 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7374657070696E73 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x656D656C70707573 && a2 == 0xEF7365697261746ELL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x73656C797473 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x73746F6C73 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x7365707974 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x697461726F636564 && a2 == 0xEB00000000736E6FLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x617A696C61636F6CLL && a2 == 0xED0000736E6F6974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x79536E6D756C6F63 && a2 == 0xEC0000006D657473 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xEA00000000007365 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x72656C69706D6F63 && a2 == 0xEF736E6F6974704FLL)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 19;
    }
    else {
      return 20;
    }
  }
}

uint64_t sub_1C11493E4(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, void))
{
  switch((4 * a5) | (a4 >> 2) & 3)
  {
    case 0u:
      unint64_t result = sub_1C0224154(result, a2, a3, a4, a6, a6);
      break;
    case 3u:
      unint64_t result = a7();
      break;
    case 6u:
      unint64_t result = sub_1C0223EF4(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      unint64_t result = a8(result, a2, a3, a4 & 1);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C114949C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  sub_1BFF14F38(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_1C1149510(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return a1;
}

uint64_t sub_1C1149580(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17, uint64_t (*a18)(void), uint64_t (*a19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  int v20 = (a17 >> 5) & 3;
  if (v20 == 1)
  {
    return a19(result, a2, a3, a4, a5, a6, a7, a8);
  }
  else if (!v20)
  {
    return a18();
  }
  return result;
}

uint64_t sub_1C1149624(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 136);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), v4);
  return a1;
}

unint64_t sub_1C1149690()
{
  unint64_t result = qword_1EA19C010;
  if (!qword_1EA19C010)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA19C010);
  }
  return result;
}

void sub_1C11496E8(uint64_t a1)
{
}

uint64_t sub_1C114971C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  sub_1BFF14F38(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C1149778(uint64_t a1)
{
  return nullsub_1(a1);
}

uint64_t sub_1C1149798(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *))
{
  v4[0] = a1;
  v4[1] = a2;
  return a3(v4);
}

uint64_t sub_1C11497D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[0] = a4;
  v13[1] = a5;
  sub_1C11507B8(0, &qword_1EA1ABE30, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1150764();
  sub_1C1520F0C();
  char v15 = 0;
  sub_1C152074C();
  if (!v5)
  {
    char v14 = 1;
    sub_1C15207CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1C1149958()
{
  if (*v0) {
    return 0x6567617373656DLL;
  }
  else {
    return 1701603686;
  }
}

uint64_t sub_1C114998C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C114A890(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C11499B4(uint64_t a1)
{
  unint64_t v2 = sub_1C1150764();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11499F0(uint64_t a1)
{
  unint64_t v2 = sub_1C1150764();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C1149A2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C114A674(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1C1149A5C(void *a1)
{
  return sub_1C11497D0(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1C1149A7C()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    id v3 = objc_msgSend(self, sel_defaultSessionConfiguration);
    objc_msgSend(v3, sel_setRequestCachePolicy_, 4);
    objc_msgSend(v3, sel_setURLCache_, 0);
    objc_msgSend(v3, sel_setTimeoutIntervalForRequest_, 60.0);
    objc_msgSend(v3, sel_setTimeoutIntervalForResource_, 60.0);
    sub_1C15184AC();
    swift_allocObject();
    uint64_t v1 = sub_1C151849C();
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1C1149B88()
{
  return sub_1C1149BE0();
}

uint64_t sub_1C1149BB4()
{
  return sub_1C1149BE0();
}

uint64_t sub_1C1149BE0()
{
  return sub_1C151911C();
}

uint64_t sub_1C1149C44@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1C151E68C();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = *a1;
  unint64_t v8 = a1[1];
  sub_1C151E67C();
  uint64_t v9 = sub_1C151E64C();
  if (v10)
  {
    *a3 = v9;
    a3[1] = v10;
    a3[2] = v7;
    a3[3] = v8;
    a3[4] = a2;
    sub_1BFE95820(v7, v8);
    return swift_bridgeObjectRetain();
  }
  else
  {
    type metadata accessor for DebugFormatServiceError();
    sub_1C114AD10();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
}

uint64_t sub_1C1149D50(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  BOOL v13 = a3 < 1;
  uint64_t v14 = a3 - 1;
  if (v13 || (uint64_t v15 = sub_1C114A974(), (v15 & 1) == 0))
  {
    swift_willThrow();
    id v21 = a1;
  }
  else
  {
    MEMORY[0x1F4188790](v15);
    *(&v23 - 4) = a2;
    *(&v23 - 3) = a4;
    uint64_t v24 = a4;
    *(&v23 - 2) = a5;
    sub_1C151932C();
    uint64_t v25 = v14;
    uint64_t v16 = swift_allocObject();
    uint64_t v26 = a2;
    *(void *)(v16 + 16) = a5;
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_1C1518E7C();
    sub_1C10327C8();
    sub_1C1518FFC();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v10);
    unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v25;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19 + v18, (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
    *(void *)(v19 + ((v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = a5;
    swift_bridgeObjectRetain();
    int v20 = (void *)sub_1C1518E7C();
    type metadata accessor for DebugFormatService();
    a2 = sub_1C15190EC();
    swift_release();
    swift_release();
  }
  return a2;
}

void sub_1C1149FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v25 = a7;
  uint64_t v23 = a3;
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  swift_retain();
  sub_1C1149A7C();
  id v24 = (id)sub_1C151848C();
  swift_release();
  uint64_t v15 = (void *)sub_1C1515E9C();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a6, v11);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = v23;
  *((void *)v17 + 3) = a4;
  *((void *)v17 + 4) = v25;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v17[v16], (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  unint64_t v18 = (uint64_t (**)(uint64_t, uint64_t))&v17[(v13 + v16 + 7) & 0xFFFFFFFFFFFFFFF8];
  *unint64_t v18 = sub_1C025A26C;
  v18[1] = (uint64_t (*)(uint64_t, uint64_t))v14;
  aBlock[4] = sub_1C114ABF4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C0952BF0;
  aBlock[3] = &block_descriptor_88;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  id v20 = v24;
  id v21 = objc_msgSend(v24, sel_dataTaskWithURL_completionHandler_, v15, v19);
  _Block_release(v19);

  objc_msgSend(v21, sel_resume);
}

void sub_1C114A27C(uint64_t a1, unint64_t a2, void *a3, id a4, void (*a5)(id), int a6, int a7, int a8, void (*a9)(uint64_t, unint64_t), uint64_t a10)
{
  if (a4)
  {
    id v12 = a4;
    a5(a4);
    id v13 = a4;
LABEL_5:

    return;
  }
  if (a2 >> 60 == 15)
  {
    type metadata accessor for DebugFormatServiceError();
    sub_1C114AD10();
    uint64_t v15 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    a5((id)v15);
    id v13 = (id)v15;
    goto LABEL_5;
  }
  if (a3 && (self, (uint64_t v18 = swift_dynamicCastObjCClass()) != 0))
  {
    uint64_t v19 = (void *)v18;
    sub_1C00C2AC0(a1, a2);
    id v20 = a3;
    if (objc_msgSend(v19, sel_statusCode) != (id)200)
    {
      uint64_t v27 = v20;
      type metadata accessor for FormatJSONDecoder();
      swift_allocObject();
      uint64_t v24 = swift_bridgeObjectRetain();
      sub_1C06599C4(v24);
      sub_1C114AD68();
      sub_1C1517D9C();
      swift_release();
      type metadata accessor for DebugFormatServiceError();
      sub_1C114AD10();
      uint64_t v25 = (void *)swift_allocError();
      *(_OWORD *)uint64_t v26 = v28;
      *(void *)(v26 + 16) = v29;
      *(void *)(v26 + 24) = v30;
      swift_storeEnumTagMultiPayload();
      a5(v25);
      sub_1BFE95878(a1, a2);

      return;
    }
    a9(a1, a2);
  }
  else
  {
    type metadata accessor for DebugFormatServiceError();
    sub_1C114AD10();
    id v21 = (void *)swift_allocError();
    *uint64_t v22 = a3;
    swift_storeEnumTagMultiPayload();
    sub_1C00C2AC0(a1, a2);
    id v23 = a3;
    a5(v21);
  }
  sub_1BFE95878(a1, a2);
}

uint64_t type metadata accessor for DebugFormatService()
{
  return self;
}

uint64_t sub_1C114A674(void *a1)
{
  sub_1C11507B8(0, &qword_1EA1ABE20, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1150764();
  sub_1C1520EBC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = sub_1C152060C();
    char v11 = 1;
    swift_bridgeObjectRetain();
    sub_1C152069C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1C114A890(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701603686 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C114A974()
{
  uint64_t v0 = (void *)sub_1C1515D2C();
  id v1 = objc_msgSend(v0, sel_domain);
  uint64_t v2 = sub_1C151E62C();
  uint64_t v4 = v3;

  if (v2 == sub_1C151E62C() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {

      return 0;
    }
  }
  id v8 = objc_msgSend(v0, sel_code);

  if ((unint64_t)v8 + 1009 < 9) {
    return (0x131u >> ((_BYTE)v8 - 15)) & 1;
  }
  return 0;
}

void sub_1C114AA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C1149FF8(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

void sub_1C114AA70()
{
  if (!qword_1EA199E60)
  {
    unint64_t v0 = sub_1C151917C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA199E60);
    }
  }
}

uint64_t sub_1C114AAC8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C114AB00()
{
  uint64_t v1 = sub_1C1515FDC();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_1C114ABF4(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  uint64_t v9 = *(void *)(sub_1C1515FDC() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  int v11 = v4 + v10;
  uint64_t v12 = v4 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_1C114A27C(a1, a2, a3, a4, *(void (**)(id))(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), v11, *(void (**)(uint64_t, unint64_t))v12, *(void *)(v12 + 8));
}

uint64_t type metadata accessor for DebugFormatServiceError()
{
  uint64_t result = qword_1EB85D750;
  if (!qword_1EB85D750) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1C114AD10()
{
  unint64_t result = qword_1EA1AF960;
  if (!qword_1EA1AF960)
  {
    type metadata accessor for DebugFormatServiceError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AF960);
  }
  return result;
}

unint64_t sub_1C114AD68()
{
  unint64_t result = qword_1EA1ABE10;
  if (!qword_1EA1ABE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABE10);
  }
  return result;
}

uint64_t sub_1C114ADBC()
{
  return sub_1C1149BE0();
}

uint64_t sub_1C114ADF0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C114AE28()
{
  uint64_t v1 = sub_1C1515FDC();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C114AECC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1C1515FDC() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1C1149D50(a1, a2, *(void *)(v2 + 16), v2 + v6, *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

ValueMetadata *type metadata accessor for DebugFormatServiceError.ServerMessage()
{
  return &type metadata for DebugFormatServiceError.ServerMessage;
}

void **sub_1C114AF88(void **a1, void **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        char v7 = *a2;
        id v8 = v7;
        *a1 = v7;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1u:
        uint64_t v43 = *a2;
        *a1 = *a2;
        id v44 = v43;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 2u:
        int v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        uint64_t v12 = a2[2];
        id v13 = a2[3];
        a1[2] = v12;
        a1[3] = v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 3u:
        uint64_t v45 = sub_1C1515FDC();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v45 - 8) + 16))(a1, a2, v45);
        sub_1C114C1D8(0, (unint64_t *)&qword_1EA1AF970, (void (*)(uint64_t))sub_1C017F734);
        uint64_t v47 = *(int *)(v46 + 48);
        uint64_t v48 = *(void **)((char *)a2 + v47);
        id v49 = v48;
        *(void **)((char *)a1 + v47) = v48;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 4u:
        uint64_t v14 = sub_1C1515FDC();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        sub_1C114C1D8(0, &qword_1EA1ABE18, (void (*)(uint64_t))type metadata accessor for FormatFile);
        uint64_t v16 = *(int *)(v15 + 48);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        type metadata accessor for FormatFile();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v51 = *((void *)v18 + 1);
            *(void *)uint64_t v17 = *(void *)v18;
            *((void *)v17 + 1) = v51;
            uint64_t v52 = *((void *)v18 + 3);
            *((void *)v17 + 2) = *((void *)v18 + 2);
            *((void *)v17 + 3) = v52;
            uint64_t v53 = *((void *)v18 + 5);
            *((void *)v17 + 4) = *((void *)v18 + 4);
            *((void *)v17 + 5) = v53;
            uint64_t v54 = *((void *)v18 + 7);
            *((void *)v17 + 6) = *((void *)v18 + 6);
            *((void *)v17 + 7) = v54;
            uint64_t v55 = *((void *)v18 + 8);
            v17[72] = v18[72];
            *((void *)v17 + 8) = v55;
            uint64_t v56 = *((void *)v18 + 11);
            *((void *)v17 + 10) = *((void *)v18 + 10);
            *((void *)v17 + 11) = v56;
            uint64_t v185 = v18 + 96;
            unsigned __int8 v57 = v18[106];
            int v58 = *((unsigned __int16 *)v18 + 52);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v57 == 255)
            {
              *((void *)v17 + 12) = *(void *)v185;
              *(_DWORD *)(v17 + 103) = *(_DWORD *)(v185 + 7);
            }
            else
            {
              uint64_t v124 = v58 & 0xFF00FFFF | (v57 << 16);
              uint64_t v125 = *(void *)v185;
              sub_1BFFA742C(*(void *)v185, v124, SBYTE2(v124), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
              *((void *)v17 + 12) = v125;
              *((_WORD *)v17 + 52) = v124;
              v17[106] = BYTE2(v124);
            }
            goto LABEL_55;
          case 2u:
            uint64_t v59 = *((void *)v18 + 1);
            *(void *)uint64_t v17 = *(void *)v18;
            *((void *)v17 + 1) = v59;
            uint64_t v60 = *((void *)v18 + 3);
            *((void *)v17 + 2) = *((void *)v18 + 2);
            *((void *)v17 + 3) = v60;
            uint64_t v61 = *((void *)v18 + 5);
            *((void *)v17 + 4) = *((void *)v18 + 4);
            *((void *)v17 + 5) = v61;
            v17[48] = v18[48];
            *((void *)v17 + 7) = *((void *)v18 + 7);
            uint64_t v62 = v18 + 64;
            unint64_t v63 = *((void *)v18 + 9);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v63 <= 2)
            {
              *((_OWORD *)v17 + 4) = *v62;
            }
            else
            {
              v17[64] = *(unsigned char *)v62;
              *((void *)v17 + 9) = v63;
              swift_bridgeObjectRetain();
            }
            uint64_t v129 = *((void *)v18 + 11);
            *((void *)v17 + 10) = *((void *)v18 + 10);
            *((void *)v17 + 11) = v129;
            uint64_t v130 = *((void *)v18 + 13);
            *((void *)v17 + 12) = *((void *)v18 + 12);
            *((void *)v17 + 13) = v130;
            uint64_t v131 = *((void *)v18 + 15);
            *((void *)v17 + 14) = *((void *)v18 + 14);
            *((void *)v17 + 15) = v131;
            v17[128] = v18[128];
            *((void *)v17 + 17) = *((void *)v18 + 17);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_55;
          case 3u:
            uint64_t v64 = *((void *)v18 + 1);
            *(void *)uint64_t v17 = *(void *)v18;
            *((void *)v17 + 1) = v64;
            uint64_t v65 = *((void *)v18 + 3);
            *((void *)v17 + 2) = *((void *)v18 + 2);
            *((void *)v17 + 3) = v65;
            uint64_t v66 = *((void *)v18 + 5);
            *((void *)v17 + 4) = *((void *)v18 + 4);
            *((void *)v17 + 5) = v66;
            uint64_t v67 = v18 + 48;
            unint64_t v68 = *((void *)v18 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v68 >= 0xF)
            {
              *((void *)v17 + 6) = *v67;
              *((void *)v17 + 7) = v68;
              swift_bridgeObjectRetain();
            }
            else
            {
              *((_OWORD *)v17 + 3) = *(_OWORD *)v67;
            }
            uint64_t v126 = *((void *)v18 + 9);
            *((void *)v17 + 8) = *((void *)v18 + 8);
            *((void *)v17 + 9) = v126;
            uint64_t v127 = *((void *)v18 + 11);
            *((void *)v17 + 10) = *((void *)v18 + 10);
            *((void *)v17 + 11) = v127;
            uint64_t v128 = *((void *)v18 + 13);
            *((void *)v17 + 12) = *((void *)v18 + 12);
            *((void *)v17 + 13) = v128;
            *((void *)v17 + 14) = *((void *)v18 + 14);
            v17[120] = v18[120];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_55;
          case 4u:
            uint64_t v69 = *((void *)v18 + 1);
            *(void *)uint64_t v17 = *(void *)v18;
            *((void *)v17 + 1) = v69;
            uint64_t v70 = *((void *)v18 + 3);
            *((void *)v17 + 2) = *((void *)v18 + 2);
            *((void *)v17 + 3) = v70;
            uint64_t v71 = *((void *)v18 + 5);
            *((void *)v17 + 4) = *((void *)v18 + 4);
            *((void *)v17 + 5) = v71;
            *((void *)v17 + 6) = *((void *)v18 + 6);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_55;
          case 5u:
            uint64_t v72 = *((void *)v18 + 1);
            *(void *)uint64_t v17 = *(void *)v18;
            *((void *)v17 + 1) = v72;
            uint64_t v73 = *((void *)v18 + 3);
            *((void *)v17 + 2) = *((void *)v18 + 2);
            *((void *)v17 + 3) = v73;
            uint64_t v74 = *((void *)v18 + 5);
            *((void *)v17 + 4) = *((void *)v18 + 4);
            *((void *)v17 + 5) = v74;
            *((_WORD *)v17 + 24) = *((_WORD *)v18 + 24);
            uint64_t v75 = *((void *)v18 + 8);
            *((void *)v17 + 7) = *((void *)v18 + 7);
            *((void *)v17 + 8) = v75;
            uint64_t v76 = *((void *)v18 + 10);
            *((void *)v17 + 9) = *((void *)v18 + 9);
            *((void *)v17 + 10) = v76;
            uint64_t v161 = *((void *)v18 + 12);
            *((void *)v17 + 11) = *((void *)v18 + 11);
            *((void *)v17 + 12) = v161;
            uint64_t v162 = *((void *)v18 + 14);
            *((void *)v17 + 13) = *((void *)v18 + 13);
            *((void *)v17 + 14) = v162;
            uint64_t v163 = *((void *)v18 + 16);
            *((void *)v17 + 15) = *((void *)v18 + 15);
            *((void *)v17 + 16) = v163;
            char v168 = (void *)*((void *)v18 + 18);
            *((void *)v17 + 17) = *((void *)v18 + 17);
            *((void *)v17 + 18) = v168;
            *((void *)v17 + 19) = *((void *)v18 + 19);
            uint64_t v179 = v18 + 160;
            __dsta = (void *)*((void *)v18 + 21);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((unint64_t)__dsta >= 2)
            {
              uint64_t v78 = v17 + 160;
              if (__dsta != (void *)2)
              {
                v17[160] = *v179;
                *((void *)v17 + 21) = __dsta;
                swift_bridgeObjectRetain();
LABEL_43:
                uint64_t v177 = (int *)type metadata accessor for FormatPackage();
                uint64_t v132 = v177[23];
                uint64_t v133 = &v17[v132];
                uint64_t v134 = &v18[v132];
                uint64_t v135 = *(void *)&v18[v132 + 8];
                *(void *)uint64_t v133 = *(void *)&v18[v132];
                *((void *)v133 + 1) = v135;
                long long v189 = (int *)type metadata accessor for FormatCompilerOptions(0);
                uint64_t v136 = v189[6];
                long long v166 = v133;
                uint64_t v137 = &v133[v136];
                long long v138 = &v134[v136];
                uint64_t v139 = *(void *)&v134[v136 + 8];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v139 == 1)
                {
                  long long v140 = *((_OWORD *)v138 + 1);
                  *(_OWORD *)uint64_t v137 = *(_OWORD *)v138;
                  *((_OWORD *)v137 + 1) = v140;
                  *((_OWORD *)v137 + 2) = *((_OWORD *)v138 + 2);
                }
                else
                {
                  *(void *)uint64_t v137 = *(void *)v138;
                  *((void *)v137 + 1) = v139;
                  uint64_t v141 = *((void *)v138 + 3);
                  *((void *)v137 + 2) = *((void *)v138 + 2);
                  *((void *)v137 + 3) = v141;
                  uint64_t v142 = *((void *)v138 + 5);
                  *((void *)v137 + 4) = *((void *)v138 + 4);
                  *((void *)v137 + 5) = v142;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                uint64_t v143 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
                long long v144 = &v137[v143];
                long long v145 = &v138[v143];
                uint64_t v146 = sub_1C1518CDC();
                uint64_t v147 = *(void *)(v146 - 8);
                uint64_t v182 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v147 + 48);
                uint64_t v164 = v147;
                if (v182(v145, 1, v146))
                {
                  sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  memcpy(v144, v145, *(void *)(*(void *)(v148 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v144, v145, v146);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v144, 0, 1, v146);
                }
                uint64_t v149 = v189[7];
                uint64_t v150 = (char *)v166 + v149;
                long long v151 = &v134[v149];
                if (v182(&v134[v149], 1, v146))
                {
                  sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  memcpy(v150, v151, *(void *)(*(void *)(v152 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v150, v151, v146);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v150, 0, 1, v146);
                }
                *(void *)((char *)v166 + v189[8]) = *(void *)&v134[v189[8]];
                uint64_t v153 = v177[24];
                long long v190 = &v17[v153];
                unint64_t v154 = &v18[v153];
                uint64_t v155 = sub_1C151928C();
                long long v156 = *(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16);
                swift_bridgeObjectRetain();
                v156(v190, v154, v155);
                uint64_t v157 = v177[25];
                unint64_t v158 = &v17[v157];
                uint64_t v159 = &v18[v157];
                if (v182(v159, 1, v146))
                {
                  sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  memcpy(v158, v159, *(void *)(*(void *)(v160 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v158, v159, v146);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v164 + 56))(v158, 0, 1, v146);
                }
LABEL_55:
                swift_storeEnumTagMultiPayload();
                swift_storeEnumTagMultiPayload();
                return a1;
              }
              long long v77 = *(_OWORD *)v179;
            }
            else
            {
              long long v77 = *(_OWORD *)v179;
              uint64_t v78 = v17 + 160;
            }
            *uint64_t v78 = v77;
            goto LABEL_43;
          case 6u:
            uint64_t v111 = *((void *)v18 + 1);
            *(void *)uint64_t v17 = *(void *)v18;
            *((void *)v17 + 1) = v111;
            *((void *)v17 + 2) = *((void *)v18 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_55;
          case 7u:
            *(void *)uint64_t v17 = *(void *)v18;
            swift_retain();
            goto LABEL_55;
          case 8u:
            uint64_t v112 = *((void *)v18 + 1);
            *(void *)uint64_t v17 = *(void *)v18;
            *((void *)v17 + 1) = v112;
            uint64_t v113 = *((void *)v18 + 3);
            *((void *)v17 + 2) = *((void *)v18 + 2);
            *((void *)v17 + 3) = v113;
            uint64_t v114 = *((void *)v18 + 5);
            *((void *)v17 + 4) = *((void *)v18 + 4);
            *((void *)v17 + 5) = v114;
            uint64_t v115 = *((void *)v18 + 7);
            *((void *)v17 + 6) = *((void *)v18 + 6);
            *((void *)v17 + 7) = v115;
            *((void *)v17 + 8) = *((void *)v18 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_55;
          case 9u:
            uint64_t v79 = *((void *)v18 + 1);
            *(void *)uint64_t v17 = *(void *)v18;
            *((void *)v17 + 1) = v79;
            uint64_t v80 = *((void *)v18 + 3);
            *((void *)v17 + 2) = *((void *)v18 + 2);
            *((void *)v17 + 3) = v80;
            uint64_t v81 = *((void *)v18 + 5);
            *((void *)v17 + 4) = *((void *)v18 + 4);
            *((void *)v17 + 5) = v81;
            uint64_t v82 = *((void *)v18 + 7);
            *((void *)v17 + 6) = *((void *)v18 + 6);
            *((void *)v17 + 7) = v82;
            uint64_t v83 = *((void *)v18 + 9);
            *((void *)v17 + 8) = *((void *)v18 + 8);
            *((void *)v17 + 9) = v83;
            v17[80] = v18[80];
            uint64_t v186 = *((void *)v18 + 12);
            *((void *)v17 + 11) = *((void *)v18 + 11);
            *((void *)v17 + 12) = v186;
            v17[104] = v18[104];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_55;
          case 0xAu:
            uint64_t v116 = *((void *)v18 + 1);
            *(void *)uint64_t v17 = *(void *)v18;
            *((void *)v17 + 1) = v116;
            uint64_t v117 = *((void *)v18 + 3);
            *((void *)v17 + 2) = *((void *)v18 + 2);
            *((void *)v17 + 3) = v117;
            uint64_t v118 = *((void *)v18 + 4);
            uint64_t v119 = *((void *)v18 + 5);
            uint64_t v120 = *((void *)v18 + 6);
            uint64_t v121 = *((void *)v18 + 7);
            uint64_t v122 = *((void *)v18 + 8);
            uint64_t v188 = *((void *)v18 + 9);
            unsigned __int8 v123 = v18[80];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BFF1DB64(v118, v119, v120, v121, v122, v188, v123);
            *((void *)v17 + 4) = v118;
            *((void *)v17 + 5) = v119;
            *((void *)v17 + 6) = v120;
            *((void *)v17 + 7) = v121;
            *((void *)v17 + 8) = v122;
            *((void *)v17 + 9) = v188;
            v17[80] = v123;
            goto LABEL_55;
          case 0xBu:
            uint64_t v84 = *((void *)v18 + 1);
            *(void *)uint64_t v17 = *(void *)v18;
            *((void *)v17 + 1) = v84;
            uint64_t v85 = *((void *)v18 + 3);
            *((void *)v17 + 2) = *((void *)v18 + 2);
            *((void *)v17 + 3) = v85;
            uint64_t v86 = *((void *)v18 + 5);
            *((void *)v17 + 4) = *((void *)v18 + 4);
            *((void *)v17 + 5) = v86;
            uint64_t v87 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
            long long v88 = &v17[v87];
            long long v89 = &v18[v87];
            uint64_t v90 = *(void *)&v18[v87 + 8];
            *(void *)long long v88 = *(void *)&v18[v87];
            *((void *)v88 + 1) = v90;
            long long v91 = (int *)type metadata accessor for FormatContent(0);
            uint64_t v92 = v91[5];
            uint64_t v175 = &v89[v92];
            unint64_t v180 = &v88[v92];
            uint64_t v93 = sub_1C151631C();
            __dstb = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __dstb(v180, v175, v93);
            uint64_t v94 = v91[6];
            long long v95 = &v88[v94];
            uint64_t v96 = &v89[v94];
            uint64_t v187 = *((void *)v96 + 1);
            *(void *)long long v95 = *(void *)v96;
            *((void *)v95 + 1) = v187;
            uint64_t v97 = v91[7];
            uint64_t v98 = &v88[v97];
            char v99 = &v89[v97];
            uint64_t v181 = *((void *)v99 + 1);
            *(void *)uint64_t v98 = *(void *)v99;
            *((void *)v98 + 1) = v181;
            uint64_t v100 = v91[8];
            uint64_t v101 = &v88[v100];
            char v102 = &v89[v100];
            uint64_t v103 = *((void *)v102 + 1);
            *(void *)uint64_t v101 = *(void *)v102;
            *((void *)v101 + 1) = v103;
            uint64_t v104 = v91[9];
            uint64_t v105 = &v88[v104];
            uint64_t v106 = &v89[v104];
            uint64_t v107 = *((void *)v106 + 1);
            *(void *)uint64_t v105 = *(void *)v106;
            *((void *)v105 + 1) = v107;
            uint64_t v108 = v91[10];
            uint64_t v169 = &v88[v108];
            uint64_t v176 = &v89[v108];
            uint64_t v109 = sub_1C151D6DC();
            uint64_t v165 = *(void *)(v109 - 8);
            __dstc = *(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__dstc(v176, 1, v109))
            {
              sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
              memcpy(v169, v176, *(void *)(*(void *)(v110 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v169, v176, v109);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v165 + 56))(v169, 0, 1, v109);
            }
            *(void *)&v88[v91[11]] = *(void *)&v89[v91[11]];
            *(void *)&v88[v91[12]] = *(void *)&v89[v91[12]];
            *(void *)&v88[v91[13]] = *(void *)&v89[v91[13]];
            *(void *)&v88[v91[14]] = *(void *)&v89[v91[14]];
            *(void *)&v88[v91[15]] = *(void *)&v89[v91[15]];
            *(void *)&v88[v91[16]] = *(void *)&v89[v91[16]];
            *(void *)&v88[v91[17]] = *(void *)&v89[v91[17]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_55;
          default:
            uint64_t v19 = *((void *)v18 + 1);
            *(void *)uint64_t v17 = *(void *)v18;
            *((void *)v17 + 1) = v19;
            id v20 = (int *)type metadata accessor for FormatContent(0);
            uint64_t v21 = v20[5];
            char v183 = &v17[v21];
            uint64_t v22 = &v18[v21];
            uint64_t v23 = sub_1C151631C();
            uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
            swift_bridgeObjectRetain();
            v24(v183, v22, v23);
            uint64_t v25 = v20[6];
            uint64_t v26 = &v17[v25];
            uint64_t v27 = &v18[v25];
            uint64_t v184 = *((void *)v27 + 1);
            *(void *)uint64_t v26 = *(void *)v27;
            *((void *)v26 + 1) = v184;
            uint64_t v28 = v20[7];
            uint64_t v29 = &v17[v28];
            uint64_t v30 = &v18[v28];
            uint64_t v31 = *((void *)v30 + 1);
            *(void *)uint64_t v29 = *(void *)v30;
            *((void *)v29 + 1) = v31;
            uint64_t v32 = v20[8];
            uint64_t v33 = &v17[v32];
            uint64_t v34 = &v18[v32];
            uint64_t v35 = *((void *)v34 + 1);
            *(void *)uint64_t v33 = *(void *)v34;
            *((void *)v33 + 1) = v35;
            uint64_t v36 = v20[9];
            uint64_t v37 = &v17[v36];
            uint64_t v38 = &v18[v36];
            uint64_t v39 = *((void *)v38 + 1);
            *(void *)uint64_t v37 = *(void *)v38;
            *((void *)v37 + 1) = v39;
            uint64_t v40 = v20[10];
            __dst = &v17[v40];
            uint64_t v174 = &v18[v40];
            uint64_t v41 = sub_1C151D6DC();
            unint64_t v167 = *(void **)(v41 - 8);
            uint64_t v178 = (unsigned int (*)(char *, uint64_t, uint64_t))v167[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v178(v174, 1, v41))
            {
              sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
              memcpy(__dst, v174, *(void *)(*(void *)(v42 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v167[2])(__dst, v174, v41);
              ((void (*)(char *, void, uint64_t, uint64_t))v167[7])(__dst, 0, 1, v41);
            }
            *(void *)&v17[v20[11]] = *(void *)&v18[v20[11]];
            *(void *)&v17[v20[12]] = *(void *)&v18[v20[12]];
            *(void *)&v17[v20[13]] = *(void *)&v18[v20[13]];
            *(void *)&v17[v20[14]] = *(void *)&v18[v20[14]];
            *(void *)&v17[v20[15]] = *(void *)&v18[v20[15]];
            *(void *)&v17[v20[16]] = *(void *)&v18[v20[16]];
            *(void *)&v17[v20[17]] = *(void *)&v18[v20[17]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_55;
        }
      case 5u:
        uint64_t v50 = sub_1C1515FDC();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v50 - 8) + 16))(a1, a2, v50);
        swift_storeEnumTagMultiPayload();
        return a1;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
    }
  }
  uint64_t v9 = (char *)*a2;
  *a1 = *a2;
  a1 = (void **)&v9[(v5 + 16) & ~(unint64_t)v5];
  swift_retain();
  return a1;
}

void sub_1C114C1D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_1C1515FDC();
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C114C250(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v2 = *a1;
      goto LABEL_11;
    case 1u:
      uint64_t v2 = *a1;
      goto LABEL_5;
    case 2u:
LABEL_6:
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      return;
    case 3u:
      uint64_t v3 = sub_1C1515FDC();
      (*(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      sub_1C114C1D8(0, (unint64_t *)&qword_1EA1AF970, (void (*)(uint64_t))sub_1C017F734);
      uint64_t v2 = *(void **)((char *)a1 + *(int *)(v4 + 48));
LABEL_11:
LABEL_5:

      break;
    case 4u:
      uint64_t v5 = sub_1C1515FDC();
      (*(void (**)(void **, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      sub_1C114C1D8(0, &qword_1EA1ABE18, (void (*)(uint64_t))type metadata accessor for FormatFile);
      char v7 = (char *)a1 + *(int *)(v6 + 48);
      type metadata accessor for FormatFile();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          uint64_t v8 = type metadata accessor for FormatContent(0);
          uint64_t v9 = &v7[*(int *)(v8 + 20)];
          uint64_t v10 = sub_1C151631C();
          (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int v11 = &v7[*(int *)(v8 + 40)];
          uint64_t v12 = sub_1C151D6DC();
          uint64_t v13 = *(void *)(v12 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
            (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
          }
          goto LABEL_51;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v7[106] != 255)
          {
            uint64_t v18 = *((unsigned __int16 *)v7 + 52) | (v7[106] << 16);
            sub_1BFFA742C(*((void *)v7 + 12), v18, SBYTE2(v18), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
          }
          return;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*((void *)v7 + 9) >= 3uLL) {
            swift_bridgeObjectRelease();
          }
          goto LABEL_51;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*((void *)v7 + 7) >= 0xFuLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_7;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_7;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*((void *)v7 + 21) >= 3uLL) {
            swift_bridgeObjectRelease();
          }
          uint64_t v19 = (int *)type metadata accessor for FormatPackage();
          id v20 = &v7[v19[23]];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v21 = type metadata accessor for FormatCompilerOptions(0);
          uint64_t v22 = &v20[*(int *)(v21 + 24)];
          if (*((void *)v22 + 1) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v23 = &v22[*(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20)];
          uint64_t v24 = sub_1C1518CDC();
          uint64_t v44 = *(void *)(v24 - 8);
          uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
          if (!v25(v23, 1, v24)) {
            (*(void (**)(char *, uint64_t))(v44 + 8))(v23, v24);
          }
          uint64_t v26 = &v20[*(int *)(v21 + 28)];
          if (!v25(v26, 1, v24)) {
            (*(void (**)(char *, uint64_t))(v44 + 8))(v26, v24);
          }
          swift_bridgeObjectRelease();
          uint64_t v27 = &v7[v19[24]];
          uint64_t v28 = sub_1C151928C();
          (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
          uint64_t v29 = (void **)&v7[v19[25]];
          if (v25((char *)v29, 1, v24)) {
            return;
          }
          uint64_t v15 = *(void (**)(void **, uint64_t))(v44 + 8);
          uint64_t v17 = v29;
          uint64_t v16 = v24;
          goto LABEL_19;
        case 6u:
          goto LABEL_6;
        case 7u:
          swift_release();
          return;
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_7;
        case 9u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_7;
        case 0xAu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v30 = *((void *)v7 + 4);
          uint64_t v31 = *((void *)v7 + 5);
          uint64_t v32 = *((void *)v7 + 6);
          uint64_t v33 = *((void *)v7 + 7);
          uint64_t v34 = *((void *)v7 + 8);
          uint64_t v35 = *((void *)v7 + 9);
          unsigned __int8 v36 = v7[80];
          sub_1BFEC28BC(v30, v31, v32, v33, v34, v35, v36);
          return;
        case 0xBu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v37 = &v7[*(int *)(type metadata accessor for FormatBindingContent() + 28)];
          swift_bridgeObjectRelease();
          uint64_t v38 = type metadata accessor for FormatContent(0);
          uint64_t v39 = &v37[*(int *)(v38 + 20)];
          uint64_t v40 = sub_1C151631C();
          (*(void (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v41 = &v37[*(int *)(v38 + 40)];
          uint64_t v42 = sub_1C151D6DC();
          uint64_t v43 = *(void *)(v42 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42)) {
            (*(void (**)(char *, uint64_t))(v43 + 8))(v41, v42);
          }
LABEL_51:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_7;
        default:
          return;
      }
    case 5u:
      uint64_t v14 = sub_1C1515FDC();
      uint64_t v15 = *(void (**)(void **, uint64_t))(*(void *)(v14 - 8) + 8);
      uint64_t v16 = v14;
      uint64_t v17 = a1;
LABEL_19:
      v15(v17, v16);
      break;
    default:
      return;
  }
}

void **sub_1C114CCA8(void **a1, void **a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *a2;
      id v7 = v6;
      *a1 = v6;
      goto LABEL_50;
    case 1u:
      uint64_t v40 = *a2;
      *a1 = *a2;
      id v41 = v40;
      goto LABEL_50;
    case 2u:
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v9 = a2[2];
      uint64_t v10 = a2[3];
      a1[2] = v9;
      a1[3] = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_50;
    case 3u:
      uint64_t v42 = sub_1C1515FDC();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v42 - 8) + 16))(a1, a2, v42);
      sub_1C114C1D8(0, (unint64_t *)&qword_1EA1AF970, (void (*)(uint64_t))sub_1C017F734);
      uint64_t v44 = *(int *)(v43 + 48);
      uint64_t v45 = *(void **)((char *)a2 + v44);
      id v46 = v45;
      *(void **)((char *)a1 + v44) = v45;
      goto LABEL_50;
    case 4u:
      uint64_t v11 = sub_1C1515FDC();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      sub_1C114C1D8(0, &qword_1EA1ABE18, (void (*)(uint64_t))type metadata accessor for FormatFile);
      uint64_t v13 = *(int *)(v12 + 48);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      type metadata accessor for FormatFile();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v48 = *((void *)v15 + 1);
          *(void *)uint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = v48;
          uint64_t v49 = *((void *)v15 + 3);
          *((void *)v14 + 2) = *((void *)v15 + 2);
          *((void *)v14 + 3) = v49;
          uint64_t v50 = *((void *)v15 + 5);
          *((void *)v14 + 4) = *((void *)v15 + 4);
          *((void *)v14 + 5) = v50;
          uint64_t v51 = *((void *)v15 + 7);
          *((void *)v14 + 6) = *((void *)v15 + 6);
          *((void *)v14 + 7) = v51;
          uint64_t v52 = *((void *)v15 + 8);
          v14[72] = v15[72];
          *((void *)v14 + 8) = v52;
          uint64_t v53 = *((void *)v15 + 11);
          *((void *)v14 + 10) = *((void *)v15 + 10);
          *((void *)v14 + 11) = v53;
          __dsta = v15 + 96;
          unsigned __int8 v54 = v15[106];
          int v55 = *((unsigned __int16 *)v15 + 52);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v54 == 255)
          {
            *((void *)v14 + 12) = *(void *)__dsta;
            *(_DWORD *)(v14 + 103) = *(_DWORD *)(__dsta + 7);
          }
          else
          {
            uint64_t v119 = v55 & 0xFF00FFFF | (v54 << 16);
            uint64_t v120 = *(void *)__dsta;
            sub_1BFFA742C(*(void *)__dsta, v119, SBYTE2(v119), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
            *((void *)v14 + 12) = v120;
            *((_WORD *)v14 + 52) = v119;
            v14[106] = BYTE2(v119);
          }
          break;
        case 2u:
          uint64_t v56 = *((void *)v15 + 1);
          *(void *)uint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = v56;
          uint64_t v57 = *((void *)v15 + 3);
          *((void *)v14 + 2) = *((void *)v15 + 2);
          *((void *)v14 + 3) = v57;
          uint64_t v58 = *((void *)v15 + 5);
          *((void *)v14 + 4) = *((void *)v15 + 4);
          *((void *)v14 + 5) = v58;
          v14[48] = v15[48];
          *((void *)v14 + 7) = *((void *)v15 + 7);
          uint64_t v59 = v15 + 64;
          unint64_t v60 = *((void *)v15 + 9);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v60 <= 2)
          {
            *((_OWORD *)v14 + 4) = *v59;
          }
          else
          {
            v14[64] = *(unsigned char *)v59;
            *((void *)v14 + 9) = v60;
            swift_bridgeObjectRetain();
          }
          uint64_t v124 = *((void *)v15 + 11);
          *((void *)v14 + 10) = *((void *)v15 + 10);
          *((void *)v14 + 11) = v124;
          uint64_t v125 = *((void *)v15 + 13);
          *((void *)v14 + 12) = *((void *)v15 + 12);
          *((void *)v14 + 13) = v125;
          uint64_t v126 = *((void *)v15 + 15);
          *((void *)v14 + 14) = *((void *)v15 + 14);
          *((void *)v14 + 15) = v126;
          v14[128] = v15[128];
          *((void *)v14 + 17) = *((void *)v15 + 17);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 3u:
          uint64_t v61 = *((void *)v15 + 1);
          *(void *)uint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = v61;
          uint64_t v62 = *((void *)v15 + 3);
          *((void *)v14 + 2) = *((void *)v15 + 2);
          *((void *)v14 + 3) = v62;
          uint64_t v63 = *((void *)v15 + 5);
          *((void *)v14 + 4) = *((void *)v15 + 4);
          *((void *)v14 + 5) = v63;
          uint64_t v64 = v15 + 48;
          unint64_t v65 = *((void *)v15 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v65 >= 0xF)
          {
            *((void *)v14 + 6) = *v64;
            *((void *)v14 + 7) = v65;
            swift_bridgeObjectRetain();
          }
          else
          {
            *((_OWORD *)v14 + 3) = *(_OWORD *)v64;
          }
          uint64_t v121 = *((void *)v15 + 9);
          *((void *)v14 + 8) = *((void *)v15 + 8);
          *((void *)v14 + 9) = v121;
          uint64_t v122 = *((void *)v15 + 11);
          *((void *)v14 + 10) = *((void *)v15 + 10);
          *((void *)v14 + 11) = v122;
          uint64_t v123 = *((void *)v15 + 13);
          *((void *)v14 + 12) = *((void *)v15 + 12);
          *((void *)v14 + 13) = v123;
          *((void *)v14 + 14) = *((void *)v15 + 14);
          v14[120] = v15[120];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v66 = *((void *)v15 + 1);
          *(void *)uint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = v66;
          uint64_t v67 = *((void *)v15 + 3);
          *((void *)v14 + 2) = *((void *)v15 + 2);
          *((void *)v14 + 3) = v67;
          uint64_t v68 = *((void *)v15 + 5);
          *((void *)v14 + 4) = *((void *)v15 + 4);
          *((void *)v14 + 5) = v68;
          *((void *)v14 + 6) = *((void *)v15 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 5u:
          uint64_t v101 = *((void *)v15 + 1);
          *(void *)uint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = v101;
          uint64_t v102 = *((void *)v15 + 3);
          *((void *)v14 + 2) = *((void *)v15 + 2);
          *((void *)v14 + 3) = v102;
          uint64_t v103 = *((void *)v15 + 5);
          *((void *)v14 + 4) = *((void *)v15 + 4);
          *((void *)v14 + 5) = v103;
          *((_WORD *)v14 + 24) = *((_WORD *)v15 + 24);
          uint64_t v104 = *((void *)v15 + 8);
          *((void *)v14 + 7) = *((void *)v15 + 7);
          *((void *)v14 + 8) = v104;
          uint64_t v105 = *((void *)v15 + 10);
          *((void *)v14 + 9) = *((void *)v15 + 9);
          *((void *)v14 + 10) = v105;
          uint64_t v157 = *((void *)v15 + 12);
          *((void *)v14 + 11) = *((void *)v15 + 11);
          *((void *)v14 + 12) = v157;
          uint64_t v158 = *((void *)v15 + 14);
          *((void *)v14 + 13) = *((void *)v15 + 13);
          *((void *)v14 + 14) = v158;
          uint64_t v159 = *((void *)v15 + 16);
          *((void *)v14 + 15) = *((void *)v15 + 15);
          *((void *)v14 + 16) = v159;
          uint64_t v163 = *((void *)v15 + 18);
          *((void *)v14 + 17) = *((void *)v15 + 17);
          *((void *)v14 + 18) = v163;
          *((void *)v14 + 19) = *((void *)v15 + 19);
          uint64_t v178 = v15 + 160;
          unint64_t v168 = *((void *)v15 + 21);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v168 <= 2)
          {
            *((_OWORD *)v14 + 10) = *v178;
          }
          else
          {
            v14[160] = *(unsigned char *)v178;
            *((void *)v14 + 21) = v168;
            swift_bridgeObjectRetain();
          }
          uint64_t v174 = (int *)type metadata accessor for FormatPackage();
          uint64_t v127 = v174[23];
          uint64_t v128 = &v14[v127];
          uint64_t v129 = &v15[v127];
          uint64_t v130 = *(void *)&v15[v127 + 8];
          *(void *)uint64_t v128 = *(void *)&v15[v127];
          *((void *)v128 + 1) = v130;
          uint64_t v164 = (int *)type metadata accessor for FormatCompilerOptions(0);
          uint64_t v169 = v128;
          uint64_t v131 = v164[6];
          uint64_t v132 = &v128[v131];
          uint64_t v133 = &v129[v131];
          uint64_t v134 = *(void *)&v129[v131 + 8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v134 == 1)
          {
            long long v135 = *((_OWORD *)v133 + 1);
            *(_OWORD *)uint64_t v132 = *(_OWORD *)v133;
            *((_OWORD *)v132 + 1) = v135;
            *((_OWORD *)v132 + 2) = *((_OWORD *)v133 + 2);
          }
          else
          {
            *(void *)uint64_t v132 = *(void *)v133;
            *((void *)v132 + 1) = v134;
            uint64_t v136 = *((void *)v133 + 3);
            *((void *)v132 + 2) = *((void *)v133 + 2);
            *((void *)v132 + 3) = v136;
            uint64_t v137 = *((void *)v133 + 5);
            *((void *)v132 + 4) = *((void *)v133 + 4);
            *((void *)v132 + 5) = v137;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          uint64_t v138 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          uint64_t v139 = &v132[v138];
          long long v140 = &v133[v138];
          uint64_t v141 = sub_1C1518CDC();
          uint64_t v142 = *(void *)(v141 - 8);
          uint64_t v179 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48);
          if (v179(v140, 1, v141))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v139, v140, *(void *)(*(void *)(v143 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v139, v140, v141);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
          }
          uint64_t v144 = v164[7];
          long long v145 = (char *)v169 + v144;
          uint64_t v146 = &v129[v144];
          if (v179(&v129[v144], 1, v141))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v145, v146, *(void *)(*(void *)(v147 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v145, v146, v141);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v145, 0, 1, v141);
          }
          *(void *)((char *)v169 + v164[8]) = *(void *)&v129[v164[8]];
          uint64_t v148 = v174[24];
          uint64_t v170 = &v14[v148];
          uint64_t v149 = &v15[v148];
          uint64_t v150 = sub_1C151928C();
          long long v151 = *(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16);
          swift_bridgeObjectRetain();
          v151(v170, v149, v150);
          uint64_t v152 = v174[25];
          uint64_t v153 = &v14[v152];
          unint64_t v154 = &v15[v152];
          if (v179(v154, 1, v141))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v153, v154, *(void *)(*(void *)(v155 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v153, v154, v141);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v153, 0, 1, v141);
          }
          break;
        case 6u:
          uint64_t v106 = *((void *)v15 + 1);
          *(void *)uint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = v106;
          *((void *)v14 + 2) = *((void *)v15 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 7u:
          *(void *)uint64_t v14 = *(void *)v15;
          swift_retain();
          break;
        case 8u:
          uint64_t v107 = *((void *)v15 + 1);
          *(void *)uint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = v107;
          uint64_t v108 = *((void *)v15 + 3);
          *((void *)v14 + 2) = *((void *)v15 + 2);
          *((void *)v14 + 3) = v108;
          uint64_t v109 = *((void *)v15 + 5);
          *((void *)v14 + 4) = *((void *)v15 + 4);
          *((void *)v14 + 5) = v109;
          uint64_t v110 = *((void *)v15 + 7);
          *((void *)v14 + 6) = *((void *)v15 + 6);
          *((void *)v14 + 7) = v110;
          *((void *)v14 + 8) = *((void *)v15 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 9u:
          uint64_t v69 = *((void *)v15 + 1);
          *(void *)uint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = v69;
          uint64_t v70 = *((void *)v15 + 3);
          *((void *)v14 + 2) = *((void *)v15 + 2);
          *((void *)v14 + 3) = v70;
          uint64_t v71 = *((void *)v15 + 5);
          *((void *)v14 + 4) = *((void *)v15 + 4);
          *((void *)v14 + 5) = v71;
          uint64_t v72 = *((void *)v15 + 7);
          *((void *)v14 + 6) = *((void *)v15 + 6);
          *((void *)v14 + 7) = v72;
          uint64_t v73 = *((void *)v15 + 9);
          *((void *)v14 + 8) = *((void *)v15 + 8);
          *((void *)v14 + 9) = v73;
          v14[80] = v15[80];
          __dstd = (void *)*((void *)v15 + 12);
          *((void *)v14 + 11) = *((void *)v15 + 11);
          *((void *)v14 + 12) = __dstd;
          v14[104] = v15[104];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 0xAu:
          uint64_t v111 = *((void *)v15 + 1);
          *(void *)uint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = v111;
          uint64_t v112 = *((void *)v15 + 3);
          *((void *)v14 + 2) = *((void *)v15 + 2);
          *((void *)v14 + 3) = v112;
          uint64_t v113 = *((void *)v15 + 4);
          uint64_t v114 = *((void *)v15 + 5);
          uint64_t v115 = *((void *)v15 + 6);
          uint64_t v116 = *((void *)v15 + 7);
          uint64_t v117 = *((void *)v15 + 8);
          __dste = (void *)*((void *)v15 + 9);
          unsigned __int8 v118 = v15[80];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF1DB64(v113, v114, v115, v116, v117, (uint64_t)__dste, v118);
          *((void *)v14 + 4) = v113;
          *((void *)v14 + 5) = v114;
          *((void *)v14 + 6) = v115;
          *((void *)v14 + 7) = v116;
          *((void *)v14 + 8) = v117;
          *((void *)v14 + 9) = __dste;
          v14[80] = v118;
          break;
        case 0xBu:
          uint64_t v74 = *((void *)v15 + 1);
          *(void *)uint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = v74;
          uint64_t v75 = *((void *)v15 + 3);
          *((void *)v14 + 2) = *((void *)v15 + 2);
          *((void *)v14 + 3) = v75;
          uint64_t v76 = *((void *)v15 + 5);
          *((void *)v14 + 4) = *((void *)v15 + 4);
          *((void *)v14 + 5) = v76;
          uint64_t v77 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
          uint64_t v78 = &v14[v77];
          uint64_t v79 = &v15[v77];
          uint64_t v80 = *(void *)&v15[v77 + 8];
          *(void *)uint64_t v78 = *(void *)&v15[v77];
          *((void *)v78 + 1) = v80;
          uint64_t v81 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v82 = v81[5];
          uint64_t v172 = &v79[v82];
          uint64_t v176 = &v78[v82];
          uint64_t v83 = sub_1C151631C();
          long long v166 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v166(v176, v172, v83);
          uint64_t v84 = v81[6];
          uint64_t v85 = &v78[v84];
          uint64_t v86 = &v79[v84];
          uint64_t v177 = *((void *)v86 + 1);
          *(void *)uint64_t v85 = *(void *)v86;
          *((void *)v85 + 1) = v177;
          uint64_t v87 = v81[7];
          long long v88 = &v78[v87];
          long long v89 = &v79[v87];
          uint64_t v173 = *((void *)v89 + 1);
          *(void *)long long v88 = *(void *)v89;
          *((void *)v88 + 1) = v173;
          uint64_t v90 = v81[8];
          long long v91 = &v78[v90];
          uint64_t v92 = &v79[v90];
          uint64_t v93 = *((void *)v92 + 1);
          *(void *)long long v91 = *(void *)v92;
          *((void *)v91 + 1) = v93;
          uint64_t v94 = v81[9];
          long long v95 = &v78[v94];
          uint64_t v96 = &v79[v94];
          uint64_t v97 = *((void *)v96 + 1);
          *(void *)long long v95 = *(void *)v96;
          *((void *)v95 + 1) = v97;
          uint64_t v98 = v81[10];
          __dstb = &v78[v98];
          unint64_t v167 = &v79[v98];
          uint64_t v99 = sub_1C151D6DC();
          uint64_t v160 = *(void *)(v99 - 8);
          uint64_t v162 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v162(v167, 1, v99))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dstb, v167, *(void *)(*(void *)(v100 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v160 + 16))(__dstb, v167, v99);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(__dstb, 0, 1, v99);
          }
          *(void *)&v78[v81[11]] = *(void *)&v79[v81[11]];
          *(void *)&v78[v81[12]] = *(void *)&v79[v81[12]];
          *(void *)&v78[v81[13]] = *(void *)&v79[v81[13]];
          *(void *)&v78[v81[14]] = *(void *)&v79[v81[14]];
          *(void *)&v78[v81[15]] = *(void *)&v79[v81[15]];
          *(void *)&v78[v81[16]] = *(void *)&v79[v81[16]];
          *(void *)&v78[v81[17]] = *(void *)&v79[v81[17]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v16 = *((void *)v15 + 1);
          *(void *)uint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = v16;
          uint64_t v17 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v18 = v17[5];
          __dstc = &v14[v18];
          uint64_t v19 = &v15[v18];
          uint64_t v20 = sub_1C151631C();
          uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
          swift_bridgeObjectRetain();
          v21(__dstc, v19, v20);
          uint64_t v22 = v17[6];
          uint64_t v23 = &v14[v22];
          uint64_t v24 = &v15[v22];
          uint64_t v175 = *((void *)v24 + 1);
          *(void *)uint64_t v23 = *(void *)v24;
          *((void *)v23 + 1) = v175;
          uint64_t v25 = v17[7];
          uint64_t v26 = &v14[v25];
          uint64_t v27 = &v15[v25];
          uint64_t v28 = *((void *)v27 + 1);
          *(void *)uint64_t v26 = *(void *)v27;
          *((void *)v26 + 1) = v28;
          uint64_t v29 = v17[8];
          uint64_t v30 = &v14[v29];
          uint64_t v31 = &v15[v29];
          uint64_t v32 = *((void *)v31 + 1);
          *(void *)uint64_t v30 = *(void *)v31;
          *((void *)v30 + 1) = v32;
          uint64_t v33 = v17[9];
          uint64_t v34 = &v14[v33];
          uint64_t v35 = &v15[v33];
          uint64_t v36 = *((void *)v35 + 1);
          *(void *)uint64_t v34 = *(void *)v35;
          *((void *)v34 + 1) = v36;
          uint64_t v37 = v17[10];
          __dst = &v14[v37];
          uint64_t v165 = &v15[v37];
          uint64_t v38 = sub_1C151D6DC();
          uint64_t v161 = *(void *)(v38 - 8);
          uint64_t v171 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v171(v165, 1, v38))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dst, v165, *(void *)(*(void *)(v39 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v161 + 16))(__dst, v165, v38);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v161 + 56))(__dst, 0, 1, v38);
          }
          *(void *)&v14[v17[11]] = *(void *)&v15[v17[11]];
          *(void *)&v14[v17[12]] = *(void *)&v15[v17[12]];
          *(void *)&v14[v17[13]] = *(void *)&v15[v17[13]];
          *(void *)&v14[v17[14]] = *(void *)&v15[v17[14]];
          *(void *)&v14[v17[15]] = *(void *)&v15[v17[15]];
          *(void *)&v14[v17[16]] = *(void *)&v15[v17[16]];
          *(void *)&v14[v17[17]] = *(void *)&v15[v17[17]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_50;
    case 5u:
      uint64_t v47 = sub_1C1515FDC();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v47 - 8) + 16))(a1, a2, v47);
LABEL_50:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void **sub_1C114DE98(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C114F29C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = *a2;
        id v7 = v6;
        *a1 = v6;
        goto LABEL_51;
      case 1u:
        uint64_t v33 = *a2;
        *a1 = *a2;
        id v34 = v33;
        goto LABEL_51;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_51;
      case 3u:
        uint64_t v35 = sub_1C1515FDC();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
        sub_1C114C1D8(0, (unint64_t *)&qword_1EA1AF970, (void (*)(uint64_t))sub_1C017F734);
        uint64_t v37 = *(int *)(v36 + 48);
        uint64_t v38 = *(void **)((char *)a2 + v37);
        id v39 = v38;
        *(void **)((char *)a1 + v37) = v38;
        goto LABEL_51;
      case 4u:
        uint64_t v8 = sub_1C1515FDC();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        sub_1C114C1D8(0, &qword_1EA1ABE18, (void (*)(uint64_t))type metadata accessor for FormatFile);
        uint64_t v10 = *(int *)(v9 + 48);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        type metadata accessor for FormatFile();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(void *)uint64_t v11 = *(void *)v12;
            *((void *)v11 + 1) = *((void *)v12 + 1);
            *((void *)v11 + 2) = *((void *)v12 + 2);
            *((void *)v11 + 3) = *((void *)v12 + 3);
            *((void *)v11 + 4) = *((void *)v12 + 4);
            *((void *)v11 + 5) = *((void *)v12 + 5);
            *((void *)v11 + 6) = *((void *)v12 + 6);
            *((void *)v11 + 7) = *((void *)v12 + 7);
            uint64_t v41 = *((void *)v12 + 8);
            v11[72] = v12[72];
            *((void *)v11 + 8) = v41;
            *((void *)v11 + 10) = *((void *)v12 + 10);
            *((void *)v11 + 11) = *((void *)v12 + 11);
            __dsta = v12 + 96;
            unsigned __int16 v42 = v12[106];
            int v43 = *((unsigned __int16 *)v12 + 52);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v42 <= 0xFEu)
            {
              uint64_t v74 = v43 & 0xFF00FFFF | (v42 << 16);
              uint64_t v75 = *(void *)__dsta;
              sub_1BFFA742C(*(void *)__dsta, v74, SBYTE2(v74), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
              *((void *)v11 + 12) = v75;
              *((_WORD *)v11 + 52) = v74;
              v11[106] = BYTE2(v74);
            }
            else
            {
              uint64_t v44 = *(void *)__dsta;
              *(_DWORD *)(v11 + 103) = *(_DWORD *)(__dsta + 7);
              *((void *)v11 + 12) = v44;
            }
            break;
          case 2u:
            *(void *)uint64_t v11 = *(void *)v12;
            *((void *)v11 + 1) = *((void *)v12 + 1);
            *((void *)v11 + 2) = *((void *)v12 + 2);
            *((void *)v11 + 3) = *((void *)v12 + 3);
            *((void *)v11 + 4) = *((void *)v12 + 4);
            *((void *)v11 + 5) = *((void *)v12 + 5);
            v11[48] = v12[48];
            *((void *)v11 + 7) = *((void *)v12 + 7);
            unint64_t v45 = *((void *)v12 + 9);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v45 <= 2)
            {
              *((_OWORD *)v11 + 4) = *((_OWORD *)v12 + 4);
            }
            else
            {
              v11[64] = v12[64];
              *((void *)v11 + 9) = *((void *)v12 + 9);
              swift_bridgeObjectRetain();
            }
            *((void *)v11 + 10) = *((void *)v12 + 10);
            *((void *)v11 + 11) = *((void *)v12 + 11);
            *((void *)v11 + 12) = *((void *)v12 + 12);
            *((void *)v11 + 13) = *((void *)v12 + 13);
            *((void *)v11 + 14) = *((void *)v12 + 14);
            *((void *)v11 + 15) = *((void *)v12 + 15);
            v11[128] = v12[128];
            *((void *)v11 + 17) = *((void *)v12 + 17);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
          case 3u:
            *(void *)uint64_t v11 = *(void *)v12;
            *((void *)v11 + 1) = *((void *)v12 + 1);
            *((void *)v11 + 2) = *((void *)v12 + 2);
            *((void *)v11 + 3) = *((void *)v12 + 3);
            *((void *)v11 + 4) = *((void *)v12 + 4);
            *((void *)v11 + 5) = *((void *)v12 + 5);
            unint64_t v46 = *((void *)v12 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v46 >= 0xF)
            {
              *((void *)v11 + 6) = *((void *)v12 + 6);
              *((void *)v11 + 7) = *((void *)v12 + 7);
              swift_bridgeObjectRetain();
            }
            else
            {
              *((_OWORD *)v11 + 3) = *((_OWORD *)v12 + 3);
            }
            *((void *)v11 + 8) = *((void *)v12 + 8);
            *((void *)v11 + 9) = *((void *)v12 + 9);
            *((void *)v11 + 10) = *((void *)v12 + 10);
            *((void *)v11 + 11) = *((void *)v12 + 11);
            *((void *)v11 + 12) = *((void *)v12 + 12);
            *((void *)v11 + 13) = *((void *)v12 + 13);
            *((void *)v11 + 14) = *((void *)v12 + 14);
            v11[120] = v12[120];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
          case 4u:
            *(void *)uint64_t v11 = *(void *)v12;
            *((void *)v11 + 1) = *((void *)v12 + 1);
            *((void *)v11 + 2) = *((void *)v12 + 2);
            *((void *)v11 + 3) = *((void *)v12 + 3);
            *((void *)v11 + 4) = *((void *)v12 + 4);
            *((void *)v11 + 5) = *((void *)v12 + 5);
            *((void *)v11 + 6) = *((void *)v12 + 6);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
          case 5u:
            *(void *)uint64_t v11 = *(void *)v12;
            *((void *)v11 + 1) = *((void *)v12 + 1);
            *((void *)v11 + 2) = *((void *)v12 + 2);
            *((void *)v11 + 3) = *((void *)v12 + 3);
            *((void *)v11 + 4) = *((void *)v12 + 4);
            *((void *)v11 + 5) = *((void *)v12 + 5);
            v11[48] = v12[48];
            v11[49] = v12[49];
            *((void *)v11 + 7) = *((void *)v12 + 7);
            *((void *)v11 + 8) = *((void *)v12 + 8);
            *((void *)v11 + 9) = *((void *)v12 + 9);
            *((void *)v11 + 10) = *((void *)v12 + 10);
            *((void *)v11 + 11) = *((void *)v12 + 11);
            *((void *)v11 + 12) = *((void *)v12 + 12);
            *((void *)v11 + 13) = *((void *)v12 + 13);
            *((void *)v11 + 14) = *((void *)v12 + 14);
            *((void *)v11 + 15) = *((void *)v12 + 15);
            *((void *)v11 + 16) = *((void *)v12 + 16);
            *((void *)v11 + 17) = *((void *)v12 + 17);
            *((void *)v11 + 18) = *((void *)v12 + 18);
            *((void *)v11 + 19) = *((void *)v12 + 19);
            unint64_t v117 = *((void *)v12 + 21);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v117 <= 2)
            {
              *((_OWORD *)v11 + 10) = *((_OWORD *)v12 + 10);
            }
            else
            {
              v11[160] = v12[160];
              *((void *)v11 + 21) = *((void *)v12 + 21);
              swift_bridgeObjectRetain();
            }
            uint64_t v115 = (int *)type metadata accessor for FormatPackage();
            uint64_t v76 = v115[23];
            uint64_t v77 = &v11[v76];
            uint64_t v78 = &v12[v76];
            *(void *)uint64_t v77 = *(void *)&v12[v76];
            *((void *)v77 + 1) = *(void *)&v12[v76 + 8];
            uint64_t v105 = (int *)type metadata accessor for FormatCompilerOptions(0);
            uint64_t v108 = v77;
            uint64_t v79 = v105[6];
            uint64_t v80 = &v77[v79];
            uint64_t v81 = &v78[v79];
            uint64_t v82 = *(void *)&v78[v79 + 8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v82 == 1)
            {
              long long v83 = *(_OWORD *)v81;
              long long v84 = *((_OWORD *)v81 + 2);
              *((_OWORD *)v80 + 1) = *((_OWORD *)v81 + 1);
              *((_OWORD *)v80 + 2) = v84;
              *(_OWORD *)uint64_t v80 = v83;
            }
            else
            {
              *(void *)uint64_t v80 = *(void *)v81;
              *((void *)v80 + 1) = *((void *)v81 + 1);
              *((void *)v80 + 2) = *((void *)v81 + 2);
              *((void *)v80 + 3) = *((void *)v81 + 3);
              *((void *)v80 + 4) = *((void *)v81 + 4);
              *((void *)v80 + 5) = *((void *)v81 + 5);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            uint64_t v85 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
            uint64_t v86 = &v80[v85];
            uint64_t v87 = &v81[v85];
            uint64_t v88 = sub_1C1518CDC();
            uint64_t v89 = *(void *)(v88 - 8);
            unsigned __int8 v118 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48);
            if (v118(v87, 1, v88))
            {
              sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v87, v88);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
            }
            uint64_t v91 = v105[7];
            uint64_t v92 = (char *)v108 + v91;
            uint64_t v93 = &v78[v91];
            if (v118(&v78[v91], 1, v88))
            {
              sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v92, v93, v88);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v92, 0, 1, v88);
            }
            *(void *)((char *)v108 + v105[8]) = *(void *)&v78[v105[8]];
            uint64_t v95 = v115[24];
            uint64_t v109 = &v11[v95];
            uint64_t v96 = &v12[v95];
            uint64_t v97 = sub_1C151928C();
            uint64_t v98 = *(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16);
            swift_bridgeObjectRetain();
            v98(v109, v96, v97);
            uint64_t v99 = v115[25];
            uint64_t v100 = &v11[v99];
            uint64_t v101 = &v12[v99];
            if (v118(v101, 1, v88))
            {
              sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v100, v101, v88);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v100, 0, 1, v88);
            }
            break;
          case 6u:
            *(void *)uint64_t v11 = *(void *)v12;
            *((void *)v11 + 1) = *((void *)v12 + 1);
            *((void *)v11 + 2) = *((void *)v12 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
          case 7u:
            *(void *)uint64_t v11 = *(void *)v12;
            swift_retain();
            break;
          case 8u:
            *(void *)uint64_t v11 = *(void *)v12;
            *((void *)v11 + 1) = *((void *)v12 + 1);
            *((void *)v11 + 2) = *((void *)v12 + 2);
            *((void *)v11 + 3) = *((void *)v12 + 3);
            *((void *)v11 + 4) = *((void *)v12 + 4);
            *((void *)v11 + 5) = *((void *)v12 + 5);
            *((void *)v11 + 6) = *((void *)v12 + 6);
            *((void *)v11 + 7) = *((void *)v12 + 7);
            *((void *)v11 + 8) = *((void *)v12 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
          case 9u:
            *(void *)uint64_t v11 = *(void *)v12;
            *((void *)v11 + 1) = *((void *)v12 + 1);
            *((void *)v11 + 2) = *((void *)v12 + 2);
            *((void *)v11 + 3) = *((void *)v12 + 3);
            *((void *)v11 + 4) = *((void *)v12 + 4);
            *((void *)v11 + 5) = *((void *)v12 + 5);
            *((void *)v11 + 6) = *((void *)v12 + 6);
            *((void *)v11 + 7) = *((void *)v12 + 7);
            *((void *)v11 + 8) = *((void *)v12 + 8);
            *((void *)v11 + 9) = *((void *)v12 + 9);
            v11[80] = v12[80];
            *((void *)v11 + 11) = *((void *)v12 + 11);
            *((void *)v11 + 12) = *((void *)v12 + 12);
            v11[104] = v12[104];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
          case 0xAu:
            *(void *)uint64_t v11 = *(void *)v12;
            *((void *)v11 + 1) = *((void *)v12 + 1);
            *((void *)v11 + 2) = *((void *)v12 + 2);
            *((void *)v11 + 3) = *((void *)v12 + 3);
            uint64_t v68 = *((void *)v12 + 4);
            uint64_t v69 = *((void *)v12 + 5);
            uint64_t v70 = *((void *)v12 + 6);
            uint64_t v71 = *((void *)v12 + 7);
            uint64_t v72 = *((void *)v12 + 8);
            __dstd = (void *)*((void *)v12 + 9);
            unsigned __int8 v73 = v12[80];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BFF1DB64(v68, v69, v70, v71, v72, (uint64_t)__dstd, v73);
            *((void *)v11 + 4) = v68;
            *((void *)v11 + 5) = v69;
            *((void *)v11 + 6) = v70;
            *((void *)v11 + 7) = v71;
            *((void *)v11 + 8) = v72;
            *((void *)v11 + 9) = __dstd;
            v11[80] = v73;
            break;
          case 0xBu:
            *(void *)uint64_t v11 = *(void *)v12;
            *((void *)v11 + 1) = *((void *)v12 + 1);
            *((void *)v11 + 2) = *((void *)v12 + 2);
            *((void *)v11 + 3) = *((void *)v12 + 3);
            *((void *)v11 + 4) = *((void *)v12 + 4);
            *((void *)v11 + 5) = *((void *)v12 + 5);
            uint64_t v47 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
            uint64_t v48 = &v11[v47];
            uint64_t v49 = &v12[v47];
            *(void *)uint64_t v48 = *(void *)&v12[v47];
            *((void *)v48 + 1) = *(void *)&v12[v47 + 8];
            uint64_t v50 = (int *)type metadata accessor for FormatContent(0);
            uint64_t v51 = v50[5];
            uint64_t v114 = &v49[v51];
            uint64_t v116 = &v48[v51];
            uint64_t v52 = sub_1C151631C();
            uint64_t v111 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v111(v116, v114, v52);
            uint64_t v53 = v50[6];
            unsigned __int8 v54 = &v48[v53];
            int v55 = &v49[v53];
            *(void *)unsigned __int8 v54 = *(void *)v55;
            *((void *)v54 + 1) = *((void *)v55 + 1);
            uint64_t v56 = v50[7];
            uint64_t v57 = &v48[v56];
            uint64_t v58 = &v49[v56];
            *(void *)uint64_t v57 = *(void *)v58;
            *((void *)v57 + 1) = *((void *)v58 + 1);
            uint64_t v59 = v50[8];
            unint64_t v60 = &v48[v59];
            uint64_t v61 = &v49[v59];
            *(void *)unint64_t v60 = *(void *)v61;
            *((void *)v60 + 1) = *((void *)v61 + 1);
            uint64_t v62 = v50[9];
            uint64_t v63 = &v48[v62];
            uint64_t v64 = &v49[v62];
            *(void *)uint64_t v63 = *(void *)v64;
            *((void *)v63 + 1) = *((void *)v64 + 1);
            uint64_t v65 = v50[10];
            __dstb = &v48[v65];
            uint64_t v112 = &v49[v65];
            uint64_t v66 = sub_1C151D6DC();
            uint64_t v104 = *(void *)(v66 - 8);
            uint64_t v107 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v107(v112, 1, v66))
            {
              sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
              memcpy(__dstb, v112, *(void *)(*(void *)(v67 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v104 + 16))(__dstb, v112, v66);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(__dstb, 0, 1, v66);
            }
            *(void *)&v48[v50[11]] = *(void *)&v49[v50[11]];
            *(void *)&v48[v50[12]] = *(void *)&v49[v50[12]];
            *(void *)&v48[v50[13]] = *(void *)&v49[v50[13]];
            *(void *)&v48[v50[14]] = *(void *)&v49[v50[14]];
            *(void *)&v48[v50[15]] = *(void *)&v49[v50[15]];
            *(void *)&v48[v50[16]] = *(void *)&v49[v50[16]];
            *(void *)&v48[v50[17]] = *(void *)&v49[v50[17]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
          default:
            *(void *)uint64_t v11 = *(void *)v12;
            *((void *)v11 + 1) = *((void *)v12 + 1);
            uint64_t v13 = (int *)type metadata accessor for FormatContent(0);
            uint64_t v14 = v13[5];
            __dstc = &v11[v14];
            uint64_t v15 = &v12[v14];
            uint64_t v16 = sub_1C151631C();
            uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
            swift_bridgeObjectRetain();
            v17(__dstc, v15, v16);
            uint64_t v18 = v13[6];
            uint64_t v19 = &v11[v18];
            uint64_t v20 = &v12[v18];
            *(void *)uint64_t v19 = *(void *)v20;
            *((void *)v19 + 1) = *((void *)v20 + 1);
            uint64_t v21 = v13[7];
            uint64_t v22 = &v11[v21];
            uint64_t v23 = &v12[v21];
            *(void *)uint64_t v22 = *(void *)v23;
            *((void *)v22 + 1) = *((void *)v23 + 1);
            uint64_t v24 = v13[8];
            uint64_t v25 = &v11[v24];
            uint64_t v26 = &v12[v24];
            *(void *)uint64_t v25 = *(void *)v26;
            *((void *)v25 + 1) = *((void *)v26 + 1);
            uint64_t v27 = v13[9];
            uint64_t v28 = &v11[v27];
            uint64_t v29 = &v12[v27];
            *(void *)uint64_t v28 = *(void *)v29;
            *((void *)v28 + 1) = *((void *)v29 + 1);
            uint64_t v30 = v13[10];
            __dst = &v11[v30];
            uint64_t v110 = &v12[v30];
            uint64_t v31 = sub_1C151D6DC();
            uint64_t v106 = *(void *)(v31 - 8);
            uint64_t v113 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v113(v110, 1, v31))
            {
              sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
              memcpy(__dst, v110, *(void *)(*(void *)(v32 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v106 + 16))(__dst, v110, v31);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(__dst, 0, 1, v31);
            }
            *(void *)&v11[v13[11]] = *(void *)&v12[v13[11]];
            *(void *)&v11[v13[12]] = *(void *)&v12[v13[12]];
            *(void *)&v11[v13[13]] = *(void *)&v12[v13[13]];
            *(void *)&v11[v13[14]] = *(void *)&v12[v13[14]];
            *(void *)&v11[v13[15]] = *(void *)&v12[v13[15]];
            *(void *)&v11[v13[16]] = *(void *)&v12[v13[16]];
            *(void *)&v11[v13[17]] = *(void *)&v12[v13[17]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_51;
      case 5u:
        uint64_t v40 = sub_1C1515FDC();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v40 - 8) + 16))(a1, a2, v40);
LABEL_51:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C114F29C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatServiceError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1C114F2F8(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 5:
      uint64_t v9 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      goto LABEL_29;
    case 4:
      uint64_t v10 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      sub_1C114C1D8(0, &qword_1EA1ABE18, (void (*)(uint64_t))type metadata accessor for FormatFile);
      uint64_t v12 = *(int *)(v11 + 48);
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = type metadata accessor for FormatFile();
      int v16 = swift_getEnumCaseMultiPayload();
      if (v16 == 11)
      {
        long long v28 = *((_OWORD *)v14 + 1);
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
        *((_OWORD *)v13 + 1) = v28;
        *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
        uint64_t v29 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v30 = &v13[v29];
        uint64_t v31 = &v14[v29];
        *(_OWORD *)&v13[v29] = *(_OWORD *)&v14[v29];
        uint64_t v32 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v33 = v32[5];
        id v34 = &v30[v33];
        uint64_t v35 = &v31[v33];
        uint64_t v36 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
        *(_OWORD *)&v30[v32[6]] = *(_OWORD *)&v31[v32[6]];
        *(_OWORD *)&v30[v32[7]] = *(_OWORD *)&v31[v32[7]];
        *(_OWORD *)&v30[v32[8]] = *(_OWORD *)&v31[v32[8]];
        *(_OWORD *)&v30[v32[9]] = *(_OWORD *)&v31[v32[9]];
        uint64_t v37 = v32[10];
        uint64_t v38 = &v30[v37];
        id v39 = &v31[v37];
        uint64_t v40 = sub_1C151D6DC();
        uint64_t v41 = *(void *)(v40 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
        }
        *(void *)&v30[v32[11]] = *(void *)&v31[v32[11]];
        *(void *)&v30[v32[12]] = *(void *)&v31[v32[12]];
        *(void *)&v30[v32[13]] = *(void *)&v31[v32[13]];
        *(void *)&v30[v32[14]] = *(void *)&v31[v32[14]];
        *(void *)&v30[v32[15]] = *(void *)&v31[v32[15]];
        *(void *)&v30[v32[16]] = *(void *)&v31[v32[16]];
        *(void *)&v30[v32[17]] = *(void *)&v31[v32[17]];
      }
      else if (v16 == 5)
      {
        long long v43 = *((_OWORD *)v14 + 1);
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
        *((_OWORD *)v13 + 1) = v43;
        *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
        *((_WORD *)v13 + 24) = *((_WORD *)v14 + 24);
        *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
        *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
        *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
        *(_OWORD *)(v13 + 104) = *(_OWORD *)(v14 + 104);
        *(_OWORD *)(v13 + 120) = *(_OWORD *)(v14 + 120);
        *(_OWORD *)(v13 + 136) = *(_OWORD *)(v14 + 136);
        *((void *)v13 + 19) = *((void *)v14 + 19);
        *((_OWORD *)v13 + 10) = *((_OWORD *)v14 + 10);
        unsigned __int8 v73 = (int *)type metadata accessor for FormatPackage();
        uint64_t v44 = v73[23];
        unint64_t v45 = &v13[v44];
        unint64_t v46 = &v14[v44];
        *(_OWORD *)&v13[v44] = *(_OWORD *)&v14[v44];
        uint64_t v72 = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v47 = v72[6];
        uint64_t v48 = &v45[v47];
        uint64_t v49 = &v46[v47];
        long long v50 = *(_OWORD *)&v46[v47 + 16];
        *(_OWORD *)uint64_t v48 = *(_OWORD *)&v46[v47];
        *((_OWORD *)v48 + 1) = v50;
        *((_OWORD *)v48 + 2) = *(_OWORD *)&v46[v47 + 32];
        uint64_t v51 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v52 = &v48[v51];
        uint64_t v53 = &v49[v51];
        uint64_t v54 = sub_1C1518CDC();
        uint64_t v55 = *(void *)(v54 - 8);
        uint64_t v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
        if (v74(v53, 1, v54))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
        }
        uint64_t v57 = v72[7];
        uint64_t v58 = &v45[v57];
        uint64_t v59 = &v46[v57];
        if (v74(&v46[v57], 1, v54))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
          uint64_t v61 = v55;
        }
        else
        {
          uint64_t v62 = v59;
          uint64_t v61 = v55;
          (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v58, v62, v54);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v58, 0, 1, v54);
        }
        *(void *)&v45[v72[8]] = *(void *)&v46[v72[8]];
        uint64_t v63 = v73[24];
        uint64_t v64 = &v13[v63];
        uint64_t v65 = &v14[v63];
        uint64_t v66 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
        uint64_t v67 = v73[25];
        uint64_t v68 = &v13[v67];
        uint64_t v69 = &v14[v67];
        if (v74(v69, 1, v54))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v68, v69, v54);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v68, 0, 1, v54);
        }
      }
      else
      {
        if (v16)
        {
          memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
          goto LABEL_29;
        }
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
        uint64_t v17 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v18 = v17[5];
        uint64_t v19 = &v13[v18];
        uint64_t v20 = &v14[v18];
        uint64_t v21 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
        *(_OWORD *)&v13[v17[6]] = *(_OWORD *)&v14[v17[6]];
        *(_OWORD *)&v13[v17[7]] = *(_OWORD *)&v14[v17[7]];
        *(_OWORD *)&v13[v17[8]] = *(_OWORD *)&v14[v17[8]];
        *(_OWORD *)&v13[v17[9]] = *(_OWORD *)&v14[v17[9]];
        uint64_t v22 = v17[10];
        uint64_t v23 = &v13[v22];
        uint64_t v24 = &v14[v22];
        uint64_t v25 = sub_1C151D6DC();
        uint64_t v26 = *(void *)(v25 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        }
        *(void *)&v13[v17[11]] = *(void *)&v14[v17[11]];
        *(void *)&v13[v17[12]] = *(void *)&v14[v17[12]];
        *(void *)&v13[v17[13]] = *(void *)&v14[v17[13]];
        *(void *)&v13[v17[14]] = *(void *)&v14[v17[14]];
        *(void *)&v13[v17[15]] = *(void *)&v14[v17[15]];
        *(void *)&v13[v17[16]] = *(void *)&v14[v17[16]];
        *(void *)&v13[v17[17]] = *(void *)&v14[v17[17]];
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_29;
    case 3:
      uint64_t v7 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      sub_1C114C1D8(0, (unint64_t *)&qword_1EA1AF970, (void (*)(uint64_t))sub_1C017F734);
      *(void *)&a1[*(int *)(v8 + 48)] = *(void *)&a2[*(int *)(v8 + 48)];
LABEL_29:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_1C114FC9C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C114F29C((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        uint64_t v9 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        goto LABEL_30;
      case 4:
        uint64_t v10 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        sub_1C114C1D8(0, &qword_1EA1ABE18, (void (*)(uint64_t))type metadata accessor for FormatFile);
        uint64_t v12 = *(int *)(v11 + 48);
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        uint64_t v15 = type metadata accessor for FormatFile();
        int v16 = swift_getEnumCaseMultiPayload();
        if (v16 == 11)
        {
          long long v28 = *((_OWORD *)v14 + 1);
          *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
          *((_OWORD *)v13 + 1) = v28;
          *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
          uint64_t v29 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
          uint64_t v30 = &v13[v29];
          uint64_t v31 = &v14[v29];
          *(_OWORD *)&v13[v29] = *(_OWORD *)&v14[v29];
          uint64_t v32 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v33 = v32[5];
          id v34 = &v30[v33];
          uint64_t v35 = &v31[v33];
          uint64_t v36 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
          *(_OWORD *)&v30[v32[6]] = *(_OWORD *)&v31[v32[6]];
          *(_OWORD *)&v30[v32[7]] = *(_OWORD *)&v31[v32[7]];
          *(_OWORD *)&v30[v32[8]] = *(_OWORD *)&v31[v32[8]];
          *(_OWORD *)&v30[v32[9]] = *(_OWORD *)&v31[v32[9]];
          uint64_t v37 = v32[10];
          uint64_t v38 = &v30[v37];
          id v39 = &v31[v37];
          uint64_t v40 = sub_1C151D6DC();
          uint64_t v41 = *(void *)(v40 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
          }
          *(void *)&v30[v32[11]] = *(void *)&v31[v32[11]];
          *(void *)&v30[v32[12]] = *(void *)&v31[v32[12]];
          *(void *)&v30[v32[13]] = *(void *)&v31[v32[13]];
          *(void *)&v30[v32[14]] = *(void *)&v31[v32[14]];
          *(void *)&v30[v32[15]] = *(void *)&v31[v32[15]];
          *(void *)&v30[v32[16]] = *(void *)&v31[v32[16]];
          *(void *)&v30[v32[17]] = *(void *)&v31[v32[17]];
        }
        else if (v16 == 5)
        {
          long long v43 = *((_OWORD *)v14 + 1);
          *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
          *((_OWORD *)v13 + 1) = v43;
          *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
          *((_WORD *)v13 + 24) = *((_WORD *)v14 + 24);
          *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
          *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
          *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
          *(_OWORD *)(v13 + 104) = *(_OWORD *)(v14 + 104);
          *(_OWORD *)(v13 + 120) = *(_OWORD *)(v14 + 120);
          *(_OWORD *)(v13 + 136) = *(_OWORD *)(v14 + 136);
          *((void *)v13 + 19) = *((void *)v14 + 19);
          *((_OWORD *)v13 + 10) = *((_OWORD *)v14 + 10);
          unsigned __int8 v73 = (int *)type metadata accessor for FormatPackage();
          uint64_t v44 = v73[23];
          unint64_t v45 = &v13[v44];
          unint64_t v46 = &v14[v44];
          *(_OWORD *)&v13[v44] = *(_OWORD *)&v14[v44];
          uint64_t v72 = (int *)type metadata accessor for FormatCompilerOptions(0);
          uint64_t v47 = v72[6];
          uint64_t v48 = &v45[v47];
          uint64_t v49 = &v46[v47];
          long long v50 = *(_OWORD *)&v46[v47 + 16];
          *(_OWORD *)uint64_t v48 = *(_OWORD *)&v46[v47];
          *((_OWORD *)v48 + 1) = v50;
          *((_OWORD *)v48 + 2) = *(_OWORD *)&v46[v47 + 32];
          uint64_t v51 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          uint64_t v52 = &v48[v51];
          uint64_t v53 = &v49[v51];
          uint64_t v54 = sub_1C1518CDC();
          uint64_t v55 = *(void *)(v54 - 8);
          uint64_t v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
          if (v74(v53, 1, v54))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
          }
          uint64_t v57 = v72[7];
          uint64_t v58 = &v45[v57];
          uint64_t v59 = &v46[v57];
          if (v74(&v46[v57], 1, v54))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
            uint64_t v61 = v55;
          }
          else
          {
            uint64_t v62 = v59;
            uint64_t v61 = v55;
            (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v58, v62, v54);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v58, 0, 1, v54);
          }
          *(void *)&v45[v72[8]] = *(void *)&v46[v72[8]];
          uint64_t v63 = v73[24];
          uint64_t v64 = &v13[v63];
          uint64_t v65 = &v14[v63];
          uint64_t v66 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
          uint64_t v67 = v73[25];
          uint64_t v68 = &v13[v67];
          uint64_t v69 = &v14[v67];
          if (v74(v69, 1, v54))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v68, v69, v54);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v68, 0, 1, v54);
          }
        }
        else
        {
          if (v16)
          {
            memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
            goto LABEL_30;
          }
          *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
          uint64_t v17 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v18 = v17[5];
          uint64_t v19 = &v13[v18];
          uint64_t v20 = &v14[v18];
          uint64_t v21 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
          *(_OWORD *)&v13[v17[6]] = *(_OWORD *)&v14[v17[6]];
          *(_OWORD *)&v13[v17[7]] = *(_OWORD *)&v14[v17[7]];
          *(_OWORD *)&v13[v17[8]] = *(_OWORD *)&v14[v17[8]];
          *(_OWORD *)&v13[v17[9]] = *(_OWORD *)&v14[v17[9]];
          uint64_t v22 = v17[10];
          uint64_t v23 = &v13[v22];
          uint64_t v24 = &v14[v22];
          uint64_t v25 = sub_1C151D6DC();
          uint64_t v26 = *(void *)(v25 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          }
          *(void *)&v13[v17[11]] = *(void *)&v14[v17[11]];
          *(void *)&v13[v17[12]] = *(void *)&v14[v17[12]];
          *(void *)&v13[v17[13]] = *(void *)&v14[v17[13]];
          *(void *)&v13[v17[14]] = *(void *)&v14[v17[14]];
          *(void *)&v13[v17[15]] = *(void *)&v14[v17[15]];
          *(void *)&v13[v17[16]] = *(void *)&v14[v17[16]];
          *(void *)&v13[v17[17]] = *(void *)&v14[v17[17]];
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_30;
      case 3:
        uint64_t v7 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        sub_1C114C1D8(0, (unint64_t *)&qword_1EA1AF970, (void (*)(uint64_t))sub_1C017F734);
        *(void *)&a1[*(int *)(v8 + 48)] = *(void *)&a2[*(int *)(v8 + 48)];
LABEL_30:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1C1150650()
{
  uint64_t v6 = "\b";
  uint64_t v7 = &unk_1C15CD090;
  uint64_t v8 = &unk_1C15CD0A8;
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    uint64_t v9 = &v5;
    uint64_t result = type metadata accessor for FormatFile();
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v10 = &v4;
      uint64_t v11 = v2;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1C1150764()
{
  unint64_t result = qword_1EA1ABE28;
  if (!qword_1EA1ABE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABE28);
  }
  return result;
}

void sub_1C11507B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C1150764();
    unint64_t v7 = a3(a1, &type metadata for DebugFormatServiceError.ServerMessage.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for DebugFormatServiceError.ServerMessage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11508E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatServiceError.ServerMessage.CodingKeys()
{
  return &type metadata for DebugFormatServiceError.ServerMessage.CodingKeys;
}

unint64_t sub_1C1150924()
{
  unint64_t result = qword_1EA1ABE38;
  if (!qword_1EA1ABE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABE38);
  }
  return result;
}

unint64_t sub_1C115097C()
{
  unint64_t result = qword_1EA1ABE40;
  if (!qword_1EA1ABE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABE40);
  }
  return result;
}

unint64_t sub_1C11509D4()
{
  unint64_t result = qword_1EA1ABE48;
  if (!qword_1EA1ABE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABE48);
  }
  return result;
}

uint64_t sub_1C1150A2C()
{
  return byte_1C15CD52A[(*v0 >> 58) & 0x3CLL | (*v0 >> 1) & 3];
}

uint64_t sub_1C1150A4C(char a1)
{
  uint64_t result = 2020557416;
  switch(a1)
  {
    case 1:
      uint64_t result = 2020557430;
      break;
    case 2:
      uint64_t result = 0x79616C7265764F68;
      break;
    case 3:
      uint64_t result = 0x79616C7265764F76;
      break;
    case 4:
      uint64_t result = 2003134838;
      break;
    case 5:
      uint64_t result = 1954047348;
      break;
    case 6:
      uint64_t result = 1835365481;
      break;
    case 7:
      uint64_t result = 0x6567616D69;
      break;
    case 8:
      uint64_t result = 0x6563617073;
      break;
    case 9:
      uint64_t result = 0x74657070696E73;
      break;
    case 10:
      uint64_t result = 0x656D656C70707573;
      break;
    case 11:
      uint64_t result = 0x686374697773;
      break;
    case 12:
      uint64_t result = 1953459315;
      break;
    case 13:
      uint64_t result = 0x6269737365636361;
      break;
    case 14:
      uint64_t result = 0x6E6F74747562;
      break;
    case 15:
      uint64_t result = 0x70756F7267;
      break;
    case 16:
      uint64_t result = 0x6465626D45626577;
      break;
    case 17:
      uint64_t result = 0x656D617266;
      break;
    case 18:
      uint64_t result = 0x746165706572;
      break;
    case 19:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    case 20:
      uint64_t result = 0x6569566574617473;
      break;
    case 21:
      uint64_t result = 0x6D6F74737563;
      break;
    case 22:
      uint64_t result = 0x746E697270;
      break;
    case 23:
      uint64_t result = 0x63697274654D6461;
      break;
    case 24:
      uint64_t result = 1633905005;
      break;
    case 25:
      uint64_t result = 0x4D6465726579616CLL;
      break;
    case 26:
      uint64_t result = 0x6F65646976;
      break;
    case 27:
      uint64_t result = 0x766F436575737369;
      break;
    case 28:
      uint64_t result = 0x6572616873;
      break;
    case 29:
      uint64_t result = 0x6B636F6C62;
      break;
    case 30:
      uint64_t result = 0x797274656D6F6567;
      break;
    case 31:
      uint64_t result = 0x616C506F65646976;
      break;
    case 32:
      uint64_t result = 0x73736572676F7270;
      break;
    case 33:
      uint64_t result = 0x646E69426D657469;
      break;
    case 34:
      uint64_t result = 0x7261696C69787561;
      break;
    case 35:
      uint64_t result = 0x7465736572;
      break;
    case 36:
      uint64_t result = 0x656C626169726176;
      break;
    case 37:
      uint64_t result = 0x696F706B61657262;
      break;
    case 38:
      uint64_t result = 0x6D45656C7A7A7570;
      break;
    case 39:
      uint64_t result = 0x65726F736E6F7073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatNode.identifier.getter()
{
  uint64_t v0 = sub_1C11523CC();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C1150EF0(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1C1150A4C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C1150A4C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C1150F7C()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C1150A4C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C1150FE0()
{
  sub_1C1150A4C(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1151034()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C1150A4C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C1151094@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C1152A60();
  *a1 = result;
  return result;
}

uint64_t sub_1C11510C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C1150A4C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C11510F0()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C1151150()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C11511A4@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatNode.init(from:)(a1, a2);
}

uint64_t sub_1C11511BC(void *a1)
{
  return FormatNode.encode(to:)(a1);
}

uint64_t sub_1C11511D8()
{
  uint64_t v0 = sub_1C11523CC();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C11512B0(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4), uint64_t (*a2)(uint64_t a1, uint64_t a2, uint64_t a3, char a4))
{
  return FormatNode.bind(binder:context:)(a1, a2);
}

uint64_t _s8NewsFeed10FormatNodeO2eeoiySbAC_ACtFZ_0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch(((unint64_t)*a1 >> 58) & 0x3C | (*a1 >> 1) & 3)
  {
    case 1uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 1) {
        goto LABEL_90;
      }
      uint64_t v7 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = sub_1C085DE24(v7, v8);
      goto LABEL_88;
    case 2uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) == 2) {
        goto LABEL_7;
      }
      goto LABEL_90;
    case 3uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 3) {
        goto LABEL_90;
      }
LABEL_7:
      uint64_t v10 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v11 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = sub_1C085D9C8(v10, v11);
      goto LABEL_88;
    case 4uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 4) {
        goto LABEL_90;
      }
      uint64_t v12 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v13 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed14FormatViewNodeC2eeoiySbAC_ACtFZ_0(v12, v13);
      goto LABEL_88;
    case 5uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 5) {
        goto LABEL_90;
      }
      uint64_t v14 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v15 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed14FormatTextNodeC2eeoiySbAC_ACtFZ_0(v14, v15);
      goto LABEL_88;
    case 6uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 6) {
        goto LABEL_90;
      }
      uint64_t v16 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v17 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed15FormatImageNodeC2eeoiySbAC_ACtFZ_0(v16, v17);
      goto LABEL_88;
    case 7uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 7) {
        goto LABEL_90;
      }
      uint64_t v18 = *(void **)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v19 = *(void **)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed14FormatItemNodeC2eeoiySbAC_ACtFZ_0(v18, v19);
      goto LABEL_88;
    case 8uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 8) {
        goto LABEL_90;
      }
      uint64_t v20 = *(void **)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v21 = *(void **)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed15FormatSpaceNodeC2eeoiySbAC_ACtFZ_0(v20, v21);
      goto LABEL_88;
    case 9uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 9) {
        goto LABEL_90;
      }
      uint64_t v22 = *(void **)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v23 = *(void **)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed17FormatSnippetNodeC2eeoiySbAC_ACtFZ_0(v22, v23);
      goto LABEL_88;
    case 0xAuLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0xA) {
        goto LABEL_90;
      }
      uint64_t v24 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v25 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed23FormatSupplementaryNodeC2eeoiySbAC_ACtFZ_0(v24, v25);
      goto LABEL_88;
    case 0xBuLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0xB) {
        goto LABEL_90;
      }
      uint64_t v26 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v27 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed16FormatSwitchNodeC2eeoiySbAC_ACtFZ_0(v26, v27);
      goto LABEL_88;
    case 0xCuLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0xC) {
        goto LABEL_90;
      }
      uint64_t v28 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v29 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed14FormatSlotNodeC2eeoiySbAC_ACtFZ_0(v28, v29);
      goto LABEL_88;
    case 0xDuLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0xD) {
        goto LABEL_90;
      }
      uint64_t v30 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v31 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed23FormatAccessibilityNodeC2eeoiySbAC_ACtFZ_0(v30, v31);
      goto LABEL_88;
    case 0xEuLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0xE) {
        goto LABEL_90;
      }
      uint64_t v32 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v33 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed16FormatButtonNodeC2eeoiySbAC_ACtFZ_0(v32, v33);
      goto LABEL_88;
    case 0xFuLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0xF) {
        goto LABEL_90;
      }
      uint64_t v34 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v35 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed15FormatGroupNodeC2eeoiySbAC_ACtFZ_0(v34, v35);
      goto LABEL_88;
    case 0x10uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x10) {
        goto LABEL_90;
      }
      uint64_t v36 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v37 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed18FormatWebEmbedNodeC2eeoiySbAC_ACtFZ_0(v36, v37);
      goto LABEL_88;
    case 0x11uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x11) {
        goto LABEL_90;
      }
      uint64_t v38 = *(void **)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      id v39 = *(void **)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed15FormatFrameNodeC2eeoiySbAC_ACtFZ_0(v38, v39);
      goto LABEL_88;
    case 0x12uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x12) {
        goto LABEL_90;
      }
      uint64_t v40 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v41 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed16FormatRepeatNodeC2eeoiySbAC_ACtFZ_0(v40, v41);
      goto LABEL_88;
    case 0x13uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x13) {
        goto LABEL_90;
      }
      uint64_t v42 = *(void **)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      long long v43 = *(void **)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed17FormatOptionsNodeC2eeoiySbAC_ACtFZ_0(v42, v43);
      goto LABEL_88;
    case 0x14uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x14) {
        goto LABEL_90;
      }
      uint64_t v44 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v45 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed19FormatStateViewNodeC2eeoiySbAC_ACtFZ_0(v44, v45);
      goto LABEL_88;
    case 0x15uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x15) {
        goto LABEL_90;
      }
      uint64_t v46 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v47 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed16FormatCustomNodeC2eeoiySbAC_ACtFZ_0(v46, v47);
      goto LABEL_88;
    case 0x16uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x16) {
        goto LABEL_90;
      }
      uint64_t v48 = *(void **)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v49 = *(void **)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed15FormatPrintNodeC2eeoiySbAC_ACtFZ_0(v48, v49);
      goto LABEL_88;
    case 0x17uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x17) {
        goto LABEL_90;
      }
      uint64_t v50 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v51 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed19FormatAdMetricsNodeC2eeoiySbAC_ACtFZ_0(v50, v51);
      goto LABEL_88;
    case 0x18uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x18) {
        goto LABEL_90;
      }
      uint64_t v52 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v53 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed14FormatMicaNodeC2eeoiySbAC_ACtFZ_0(v52, v53);
      goto LABEL_88;
    case 0x19uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x19) {
        goto LABEL_90;
      }
      uint64_t v54 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v55 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed22FormatLayeredMediaNodeC2eeoiySbAC_ACtFZ_0(v54, v55);
      goto LABEL_88;
    case 0x1AuLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x1A) {
        goto LABEL_90;
      }
      uint64_t v56 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v57 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed15FormatVideoNodeC2eeoiySbAC_ACtFZ_0(v56, v57);
      goto LABEL_88;
    case 0x1BuLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x1B) {
        goto LABEL_90;
      }
      uint64_t v58 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v59 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed20FormatIssueCoverNodeC2eeoiySbAC_ACtFZ_0(v58, v59);
      goto LABEL_88;
    case 0x1CuLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x1C) {
        goto LABEL_90;
      }
      uint64_t v60 = v2 & 0xFFFFFFFFFFFFFF9;
      uint64_t v61 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x60);
      char v62 = *(unsigned char *)(v60 + 88);
      uint64_t v63 = *(void *)(v60 + 80);
      char v64 = *(unsigned char *)(v60 + 72);
      uint64_t v65 = *(void *)(v60 + 48);
      uint64_t v66 = *(void *)(v60 + 24);
      uint64_t v67 = v3 & 0xFFFFFFFFFFFFFF9;
      uint64_t v68 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v69 = *(void *)(v67 + 24);
      uint64_t v70 = *(void *)(v67 + 48);
      char v71 = *(unsigned char *)(v67 + 72);
      uint64_t v72 = *(void *)(v67 + 80);
      char v73 = *(unsigned char *)(v67 + 88);
      uint64_t v74 = *(void *)(v67 + 96);
      v113[0] = *(void *)(v60 + 16);
      v113[1] = v66;
      long long v114 = *(_OWORD *)(v60 + 32);
      uint64_t v115 = v65;
      long long v116 = *(_OWORD *)(v60 + 56);
      char v117 = v64;
      uint64_t v118 = v63;
      char v119 = v62;
      uint64_t v120 = v61;
      v105[0] = v68;
      v105[1] = v69;
      long long v106 = *(_OWORD *)(v67 + 32);
      uint64_t v107 = v70;
      long long v108 = *(_OWORD *)(v67 + 56);
      char v109 = v71;
      uint64_t v110 = v72;
      char v111 = v73;
      uint64_t v112 = v74;
      swift_retain();
      swift_retain();
      char v75 = _s8NewsFeed26FormatShareAttributionNodeV2eeoiySbAC_ACtFZ_0((uint64_t)v113, (uint64_t)v105);
      swift_release();
      swift_release();
      return v75 & 1;
    case 0x1DuLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x1D) {
        goto LABEL_90;
      }
      uint64_t v76 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v77 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed15FormatBlockNodeC2eeoiySbAC_ACtFZ_0(v76, v77);
      goto LABEL_88;
    case 0x1EuLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x1E) {
        goto LABEL_90;
      }
      uint64_t v78 = *(void **)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v79 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed18FormatGeometryNodeC2eeoiySbAC_ACtFZ_0(v78, v79);
      goto LABEL_88;
    case 0x1FuLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x1F) {
        goto LABEL_90;
      }
      uint64_t v80 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v81 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed21FormatVideoPlayerNodeC2eeoiySbAC_ACtFZ_0(v80, v81);
      goto LABEL_88;
    case 0x20uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x20) {
        goto LABEL_90;
      }
      uint64_t v82 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v83 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed22FormatProgressViewNodeC2eeoiySbAC_ACtFZ_0(v82, v83);
      goto LABEL_88;
    case 0x21uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x21) {
        goto LABEL_90;
      }
      long long v84 = *(void **)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v85 = *(void **)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed22FormatItemBindingsNodeC2eeoiySbAC_ACtFZ_0(v84, v85);
      goto LABEL_88;
    case 0x22uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x22) {
        goto LABEL_90;
      }
      uint64_t v86 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v87 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed19FormatAuxiliaryNodeC2eeoiySbAC_ACtFZ_0(v86, v87);
      goto LABEL_88;
    case 0x23uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x23) {
        goto LABEL_90;
      }
      uint64_t v88 = *(void **)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v89 = *(void **)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed15FormatResetNodeC2eeoiySbAC_ACtFZ_0(v88, v89);
      goto LABEL_88;
    case 0x24uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x24) {
        goto LABEL_90;
      }
      uint64_t v90 = *(void **)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v91 = *(void **)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      uint64_t v92 = v90[2];
      uint64_t v93 = v90[3];
      swift_beginAccess();
      BOOL v94 = v92 == v91[2] && v93 == v91[3];
      if (!v94 && (sub_1C1520A9C() & 1) == 0) {
        goto LABEL_90;
      }
      swift_beginAccess();
      uint64_t v95 = v90[4];
      swift_beginAccess();
      uint64_t v96 = v91[4];
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v97 = sub_1C00EAF8C(v95, v96);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v97 & 1) == 0) {
        goto LABEL_90;
      }
      char v75 = 1;
      return v75 & 1;
    case 0x25uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x25) {
        goto LABEL_90;
      }
      uint64_t v98 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v99 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed20FormatBreakpointNodeC2eeoiySbAC_ACtFZ_0(v98, v99);
      goto LABEL_88;
    case 0x26uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x26) {
        goto LABEL_90;
      }
      uint64_t v100 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v101 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed21FormatPuzzleEmbedNodeC2eeoiySbAC_ACtFZ_0(v100, v101);
      goto LABEL_88;
    case 0x27uLL:
      if (((v3 >> 58) & 0x3C | (v3 >> 1) & 3) != 0x27) {
        goto LABEL_90;
      }
      uint64_t v102 = *(void *)((v2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v103 = *(void *)((v3 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v9 = _s8NewsFeed25FormatSponsoredBannerNodeC2eeoiySbAC_ACtFZ_0(v102, v103);
LABEL_88:
      char v6 = v9;
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_89;
    default:
      if ((v3 >> 58) & 0x3C | (v3 >> 1) & 3)
      {
LABEL_90:
        char v75 = 0;
        return v75 & 1;
      }
      else
      {
        uint64_t v4 = *(void *)(v2 + 16);
        uint64_t v5 = *(void *)(v3 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        char v6 = sub_1C085DE24(v4, v5);
        swift_release();
        swift_release();
        swift_release();
LABEL_89:
        swift_release();
        return v6 & 1;
      }
  }
}

uint64_t sub_1C11523CC()
{
  uint64_t v1 = *v0;
  switch(((unint64_t)*v0 >> 58) & 0x3C | (*v0 >> 1) & 3)
  {
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x20uLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
      v1 &= 0xFFFFFFFFFFFFFF9uLL;
      goto LABEL_3;
    case 0x1CuLL:
      uint64_t v2 = (v1 & 0xFFFFFFFFFFFFFF9) + 16;
      break;
    default:
LABEL_3:
      uint64_t v2 = *(void *)(v1 + 16) + 16;
      swift_beginAccess();
      break;
  }
  return *(void *)v2;
}

unint64_t sub_1C1152504(uint64_t a1)
{
  unint64_t result = sub_1C115252C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C115252C()
{
  unint64_t result = qword_1EA1ABE50;
  if (!qword_1EA1ABE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABE50);
  }
  return result;
}

unint64_t sub_1C1152580(void *a1)
{
  a1[1] = sub_1C11525B8();
  a1[2] = sub_1C115260C();
  unint64_t result = sub_1C1152660();
  a1[3] = result;
  return result;
}

unint64_t sub_1C11525B8()
{
  unint64_t result = qword_1EB873B70;
  if (!qword_1EB873B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB873B70);
  }
  return result;
}

unint64_t sub_1C115260C()
{
  unint64_t result = qword_1EB873B68;
  if (!qword_1EB873B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB873B68);
  }
  return result;
}

unint64_t sub_1C1152660()
{
  unint64_t result = qword_1EA1ABE58;
  if (!qword_1EA1ABE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABE58);
  }
  return result;
}

unint64_t sub_1C11526B4(uint64_t a1)
{
  unint64_t result = sub_1C11526DC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C11526DC()
{
  unint64_t result = qword_1EA1ABE60;
  if (!qword_1EA1ABE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABE60);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FormatNode(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for FormatNode()
{
  return swift_release();
}

void *assignWithCopy for FormatNode(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for FormatNode(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatNode(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x59 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 89);
  }
  unsigned int v3 = ((((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7) >> 1) & 0xFFFFFFBF | ((*(void *)a1 & 1) << 6)) ^ 0x7F;
  if (v3 >= 0x58) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatNode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x58)
  {
    *(void *)unint64_t result = a2 - 89;
    if (a3 >= 0x59) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x59) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 6) & 1 | (2 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1C11528AC(void *a1)
{
  return (*a1 >> 58) & 0x3C | (*a1 >> 1) & 3;
}

void *sub_1C11528C0(void *result)
{
  *result &= 0xFFFFFFFFFFFFFF9uLL;
  return result;
}

unint64_t *sub_1C11528D4(unint64_t *result, uint64_t a2)
{
  *unint64_t result = (a2 << 58) & 0xF000000000000000 | (2 * (a2 & 3)) | *result & 0xFFFFFFFFFFFFFF8;
  return result;
}

ValueMetadata *type metadata accessor for FormatNode()
{
  return &type metadata for FormatNode;
}

unsigned char *storeEnumTagSinglePayload for FormatNodeKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 39 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 39) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD8)
  {
    unsigned int v6 = ((a2 - 217) >> 8) + 1;
    *unint64_t result = a2 + 39;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11529D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 39;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatNodeKind()
{
  return &type metadata for FormatNodeKind;
}

unint64_t sub_1C1152A0C()
{
  unint64_t result = qword_1EA1ABE68;
  if (!qword_1EA1ABE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABE68);
  }
  return result;
}

uint64_t sub_1C1152A60()
{
  unint64_t v0 = sub_1C1520C8C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x28) {
    return 40;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C1152AB4()
{
  unint64_t result = qword_1EB87D9A0;
  if (!qword_1EB87D9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87D9A0);
  }
  return result;
}

uint64_t sub_1C1152B0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  switch(*(unsigned char *)(v1 + 32))
  {
    case 1:
      uint64_t v15 = swift_bridgeObjectRetain();
      uint64_t v16 = sub_1C0BA9458(v15);
      uint64_t v18 = v17;
      sub_1BFCDA05C(v3, v2, v4, v5, 1u);
      uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v19 = (uint64_t *)(a1 + *(int *)(v10 + 24));
      *uint64_t v19 = v16;
      v19[1] = v18;
      uint64_t v20 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
      long long v14 = xmmword_1C15CD610;
      break;
    case 2:
      uint64_t v21 = swift_bridgeObjectRetain();
      uint64_t v22 = sub_1C0BA9458(v21);
      uint64_t v24 = v23;
      sub_1BFCDA05C(v3, v2, v4, v5, 2u);
      uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v25 = (uint64_t *)(a1 + *(int *)(v10 + 24));
      uint64_t *v25 = v22;
      v25[1] = v24;
      uint64_t v26 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
      long long v14 = xmmword_1C15CD600;
      break;
    case 3:
      uint64_t v27 = swift_bridgeObjectRetain();
      uint64_t v28 = sub_1C0BA9458(v27);
      uint64_t v30 = v29;
      sub_1BFCDA05C(v3, v2, v4, v5, 3u);
      uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v31 = (uint64_t *)(a1 + *(int *)(v10 + 24));
      uint64_t *v31 = v28;
      v31[1] = v30;
      uint64_t v32 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
      long long v14 = xmmword_1C15CD5F0;
      break;
    case 4:
      uint64_t v33 = swift_bridgeObjectRetain();
      uint64_t v34 = sub_1C0BA9458(v33);
      uint64_t v36 = v35;
      sub_1BFCDA05C(v3, v2, v4, v5, 4u);
      uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v37 = (uint64_t *)(a1 + *(int *)(v10 + 24));
      *uint64_t v37 = v34;
      v37[1] = v36;
      uint64_t v38 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 0, 1, v38);
      long long v14 = xmmword_1C15CD5E0;
      break;
    case 5:
      uint64_t v39 = swift_bridgeObjectRetain();
      uint64_t v40 = sub_1C0BA9458(v39);
      uint64_t v42 = v41;
      sub_1BFCDA05C(v3, v2, v4, v5, 5u);
      uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
      long long v43 = (uint64_t *)(a1 + *(int *)(v10 + 24));
      *long long v43 = v40;
      v43[1] = v42;
      uint64_t v44 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 0, 1, v44);
      long long v14 = xmmword_1C15CD5D0;
      break;
    case 6:
      uint64_t v45 = swift_bridgeObjectRetain();
      uint64_t v46 = sub_1C0BA9458(v45);
      uint64_t v48 = v47;
      sub_1BFCDA05C(v3, v2, v4, v5, 6u);
      uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v49 = (uint64_t *)(a1 + *(int *)(v10 + 24));
      *uint64_t v49 = v46;
      v49[1] = v48;
      uint64_t v50 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 0, 1, v50);
      long long v14 = xmmword_1C15CD5C0;
      break;
    case 7:
      uint64_t v51 = swift_bridgeObjectRetain();
      uint64_t v52 = sub_1C0BA9458(v51);
      uint64_t v54 = v53;
      sub_1BFCDA05C(v3, v2, v4, v5, 7u);
      uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v55 = (uint64_t *)(a1 + *(int *)(v10 + 24));
      *uint64_t v55 = v52;
      v55[1] = v54;
      uint64_t v56 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 0, 1, v56);
      long long v14 = xmmword_1C15CD5B0;
      break;
    case 8:
      uint64_t v57 = swift_bridgeObjectRetain();
      uint64_t v58 = sub_1C0BA9458(v57);
      uint64_t v60 = v59;
      sub_1BFCDA05C(v3, v2, v4, v5, 8u);
      uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v61 = (uint64_t *)(a1 + *(int *)(v10 + 24));
      *uint64_t v61 = v58;
      v61[1] = v60;
      uint64_t v62 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v61, 0, 1, v62);
      long long v14 = xmmword_1C15CD5A0;
      break;
    case 9:
      uint64_t v63 = swift_bridgeObjectRetain();
      uint64_t v64 = sub_1C0BA9458(v63);
      uint64_t v66 = v65;
      sub_1BFCDA05C(v3, v2, v4, v5, 9u);
      uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v67 = (uint64_t *)(a1 + *(int *)(v10 + 24));
      *uint64_t v67 = v64;
      v67[1] = v66;
      uint64_t v68 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v67, 0, 1, v68);
      long long v14 = xmmword_1C15CD590;
      break;
    case 0xA:
      uint64_t v69 = swift_bridgeObjectRetain();
      uint64_t v70 = sub_1C0BA9458(v69);
      uint64_t v72 = v71;
      sub_1BFCDA05C(v3, v2, v4, v5, 0xAu);
      uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
      char v73 = (uint64_t *)(a1 + *(int *)(v10 + 24));
      *char v73 = v70;
      v73[1] = v72;
      uint64_t v74 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v73, 0, 1, v74);
      long long v14 = xmmword_1C15CD580;
      break;
    case 0xB:
      uint64_t v75 = swift_bridgeObjectRetain();
      uint64_t v76 = sub_1C0BA9458(v75);
      uint64_t v78 = v77;
      sub_1BFCDA05C(v3, v2, v4, v5, 0xBu);
      uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v79 = (uint64_t *)(a1 + *(int *)(v10 + 24));
      *uint64_t v79 = v76;
      v79[1] = v78;
      uint64_t v80 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v79, 0, 1, v80);
      long long v14 = xmmword_1C15CD570;
      break;
    case 0xC:
      uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v81 = (void *)(a1 + *(int *)(v10 + 24));
      void *v81 = 0;
      v81[1] = 0xE000000000000000;
      uint64_t v82 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v81, 0, 1, v82);
      long long v14 = xmmword_1C15CD560;
      break;
    default:
      uint64_t v7 = FormatEdgeInsetsEquation.description.getter();
      uint64_t v9 = v8;
      uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v11 = (uint64_t *)(a1 + *(int *)(v10 + 24));
      uint64_t *v11 = v7;
      v11[1] = v9;
      uint64_t v12 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
      long long v14 = xmmword_1C15CD620;
      break;
  }
  *(_OWORD *)a1 = v14;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  uint64_t v83 = a1 + *(int *)(v10 + 28);
  *(void *)uint64_t v83 = 0;
  *(void *)(v83 + 8) = 0;
  *(unsigned char *)(v83 + 16) = -1;
  return result;
}

uint64_t sub_1C1153414(void *a1)
{
  return FormatImageNodeRequestAdjustment.encode(to:)(a1);
}

uint64_t _s8NewsFeed32FormatImageNodeRequestAdjustmentO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 32);
  uint64_t v8 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  int v11 = *(unsigned __int8 *)(a2 + 32);
  switch(v6)
  {
    case 1u:
      if (v11 != 1) {
        goto LABEL_30;
      }
      sub_1BFCD9FD8(*(void *)a2, *(void *)(a2 + 8), v10, v9, 1u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 1u);
      sub_1BFCD9FD8(v8, v7, v10, v9, 1u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 1u);
      char v12 = sub_1C00DE998(v3, v8);
      sub_1BFCDA05C(v3, v2, v5, v4, 1u);
      sub_1BFCDA05C(v8, v7, v10, v9, 1u);
      sub_1BFCDA05C(v8, v7, v10, v9, 1u);
      sub_1BFCDA05C(v3, v2, v5, v4, 1u);
      break;
    case 2u:
      if (v11 != 2) {
        goto LABEL_30;
      }
      sub_1BFCD9FD8(*(void *)a2, *(void *)(a2 + 8), v10, v9, 2u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 2u);
      sub_1BFCD9FD8(v8, v7, v10, v9, 2u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 2u);
      char v12 = sub_1C00DE998(v3, v8);
      sub_1BFCDA05C(v3, v2, v5, v4, 2u);
      sub_1BFCDA05C(v8, v7, v10, v9, 2u);
      sub_1BFCDA05C(v8, v7, v10, v9, 2u);
      sub_1BFCDA05C(v3, v2, v5, v4, 2u);
      break;
    case 3u:
      if (v11 != 3) {
        goto LABEL_30;
      }
      sub_1BFCD9FD8(*(void *)a2, *(void *)(a2 + 8), v10, v9, 3u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 3u);
      sub_1BFCD9FD8(v8, v7, v10, v9, 3u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 3u);
      char v12 = sub_1C00DE998(v3, v8);
      sub_1BFCDA05C(v3, v2, v5, v4, 3u);
      sub_1BFCDA05C(v8, v7, v10, v9, 3u);
      sub_1BFCDA05C(v8, v7, v10, v9, 3u);
      sub_1BFCDA05C(v3, v2, v5, v4, 3u);
      break;
    case 4u:
      if (v11 != 4) {
        goto LABEL_30;
      }
      sub_1BFCD9FD8(*(void *)a2, *(void *)(a2 + 8), v10, v9, 4u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 4u);
      sub_1BFCD9FD8(v8, v7, v10, v9, 4u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 4u);
      char v12 = sub_1C00DE998(v3, v8);
      sub_1BFCDA05C(v3, v2, v5, v4, 4u);
      sub_1BFCDA05C(v8, v7, v10, v9, 4u);
      sub_1BFCDA05C(v8, v7, v10, v9, 4u);
      sub_1BFCDA05C(v3, v2, v5, v4, 4u);
      break;
    case 5u:
      if (v11 != 5) {
        goto LABEL_30;
      }
      sub_1BFCD9FD8(*(void *)a2, *(void *)(a2 + 8), v10, v9, 5u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 5u);
      sub_1BFCD9FD8(v8, v7, v10, v9, 5u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 5u);
      char v12 = sub_1C00DE998(v3, v8);
      sub_1BFCDA05C(v3, v2, v5, v4, 5u);
      sub_1BFCDA05C(v8, v7, v10, v9, 5u);
      sub_1BFCDA05C(v8, v7, v10, v9, 5u);
      sub_1BFCDA05C(v3, v2, v5, v4, 5u);
      break;
    case 6u:
      if (v11 != 6) {
        goto LABEL_30;
      }
      sub_1BFCD9FD8(*(void *)a2, *(void *)(a2 + 8), v10, v9, 6u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 6u);
      sub_1BFCD9FD8(v8, v7, v10, v9, 6u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 6u);
      char v12 = sub_1C00DE998(v3, v8);
      sub_1BFCDA05C(v3, v2, v5, v4, 6u);
      sub_1BFCDA05C(v8, v7, v10, v9, 6u);
      sub_1BFCDA05C(v8, v7, v10, v9, 6u);
      sub_1BFCDA05C(v3, v2, v5, v4, 6u);
      break;
    case 7u:
      if (v11 != 7) {
        goto LABEL_30;
      }
      sub_1BFCD9FD8(*(void *)a2, *(void *)(a2 + 8), v10, v9, 7u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 7u);
      sub_1BFCD9FD8(v8, v7, v10, v9, 7u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 7u);
      char v12 = sub_1C00DE998(v3, v8);
      sub_1BFCDA05C(v3, v2, v5, v4, 7u);
      sub_1BFCDA05C(v8, v7, v10, v9, 7u);
      sub_1BFCDA05C(v8, v7, v10, v9, 7u);
      sub_1BFCDA05C(v3, v2, v5, v4, 7u);
      break;
    case 8u:
      if (v11 != 8) {
        goto LABEL_30;
      }
      sub_1BFCD9FD8(*(void *)a2, *(void *)(a2 + 8), v10, v9, 8u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 8u);
      sub_1BFCD9FD8(v8, v7, v10, v9, 8u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 8u);
      char v12 = sub_1C00DE998(v3, v8);
      sub_1BFCDA05C(v3, v2, v5, v4, 8u);
      sub_1BFCDA05C(v8, v7, v10, v9, 8u);
      sub_1BFCDA05C(v8, v7, v10, v9, 8u);
      sub_1BFCDA05C(v3, v2, v5, v4, 8u);
      break;
    case 9u:
      if (v11 != 9) {
        goto LABEL_30;
      }
      sub_1BFCD9FD8(*(void *)a2, *(void *)(a2 + 8), v10, v9, 9u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 9u);
      sub_1BFCD9FD8(v8, v7, v10, v9, 9u);
      sub_1BFCD9FD8(v3, v2, v5, v4, 9u);
      char v12 = sub_1C00DE998(v3, v8);
      sub_1BFCDA05C(v3, v2, v5, v4, 9u);
      sub_1BFCDA05C(v8, v7, v10, v9, 9u);
      sub_1BFCDA05C(v8, v7, v10, v9, 9u);
      sub_1BFCDA05C(v3, v2, v5, v4, 9u);
      break;
    case 0xAu:
      if (v11 != 10) {
        goto LABEL_30;
      }
      sub_1BFCD9FD8(*(void *)a2, *(void *)(a2 + 8), v10, v9, 0xAu);
      sub_1BFCD9FD8(v3, v2, v5, v4, 0xAu);
      sub_1BFCD9FD8(v8, v7, v10, v9, 0xAu);
      sub_1BFCD9FD8(v3, v2, v5, v4, 0xAu);
      char v12 = sub_1C00DE998(v3, v8);
      sub_1BFCDA05C(v3, v2, v5, v4, 0xAu);
      sub_1BFCDA05C(v8, v7, v10, v9, 0xAu);
      sub_1BFCDA05C(v8, v7, v10, v9, 0xAu);
      sub_1BFCDA05C(v3, v2, v5, v4, 0xAu);
      break;
    case 0xBu:
      if (v11 != 11) {
        goto LABEL_30;
      }
      sub_1BFCD9FD8(*(void *)a2, *(void *)(a2 + 8), v10, v9, 0xBu);
      sub_1BFCD9FD8(v3, v2, v5, v4, 0xBu);
      sub_1BFCD9FD8(v8, v7, v10, v9, 0xBu);
      sub_1BFCD9FD8(v3, v2, v5, v4, 0xBu);
      char v12 = sub_1C00DE998(v3, v8);
      sub_1BFCDA05C(v3, v2, v5, v4, 0xBu);
      sub_1BFCDA05C(v8, v7, v10, v9, 0xBu);
      sub_1BFCDA05C(v8, v7, v10, v9, 0xBu);
      sub_1BFCDA05C(v3, v2, v5, v4, 0xBu);
      break;
    case 0xCu:
      if (v11 != 12 || (v7 | v8 | v10 | v9) != 0) {
        goto LABEL_30;
      }
      sub_1BFCDA05C(*(void *)a1, v2, v5, v4, 0xCu);
      sub_1BFCDA05C(0, 0, 0, 0, 0xCu);
      char v12 = 1;
      break;
    default:
      if (*(unsigned char *)(a2 + 32))
      {
LABEL_30:
        sub_1BFCD9FD8(*(void *)a2, *(void *)(a2 + 8), v10, v9, v11);
        sub_1BFCD9FD8(v3, v2, v5, v4, v6);
        sub_1BFCDA05C(v3, v2, v5, v4, v6);
        sub_1BFCDA05C(v8, v7, v10, v9, v11);
        char v12 = 0;
      }
      else
      {
        v16[0] = *(void *)a1;
        v16[1] = v2;
        void v16[2] = v5;
        v16[3] = v4;
        v15[0] = v8;
        v15[1] = v7;
        v15[2] = v10;
        v15[3] = v9;
        sub_1BFCD9FD8(v8, v7, v10, v9, 0);
        sub_1BFCD9FD8(v3, v2, v5, v4, 0);
        sub_1BFCD9FD8(v8, v7, v10, v9, 0);
        sub_1BFCD9FD8(v3, v2, v5, v4, 0);
        char v12 = _s8NewsFeed24FormatEdgeInsetsEquationV2eeoiySbAC_ACtFZ_0(v16, v15);
        sub_1BFCDA05C(v3, v2, v5, v4, 0);
        sub_1BFCDA05C(v8, v7, v10, v9, 0);
        sub_1BFCDA05C(v8, v7, v10, v9, 0);
        sub_1BFCDA05C(v3, v2, v5, v4, 0);
      }
      break;
  }
  return v12 & 1;
}

unint64_t sub_1C1153FF8(uint64_t a1)
{
  unint64_t result = sub_1C1154020();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1154020()
{
  unint64_t result = qword_1EA1ABE70;
  if (!qword_1EA1ABE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABE70);
  }
  return result;
}

unint64_t sub_1C1154074(void *a1)
{
  a1[1] = sub_1C0068D5C();
  a1[2] = sub_1C0068DB0();
  unint64_t result = sub_1C11540AC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C11540AC()
{
  unint64_t result = qword_1EA1ABE78;
  if (!qword_1EA1ABE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABE78);
  }
  return result;
}

uint64_t assignWithCopy for FormatImageNodeRequestAdjustment(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1BFCD9FD8(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1BFCDA05C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FormatImageNodeRequestAdjustment(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1BFCDA05C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t sub_1C11541C0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 0xBu) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 12);
  }
}

uint64_t sub_1C11541D8(uint64_t result, unsigned int a2)
{
  if (a2 >= 0xC)
  {
    *(void *)unint64_t result = a2 - 12;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 12;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatImageNodeRequestAdjustment()
{
  return &type metadata for FormatImageNodeRequestAdjustment;
}

void __swiftcall UIView.nearestCommonAncestor(with:)(UIView_optional *__return_ptr retstr, UIView *with)
{
  char v3 = v2;
  id v5 = v2;
  uint64_t v6 = with;
  uint64_t v36 = v5;
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1C15204BC()) {
    sub_1C00BBC10(MEMORY[0x1E4FBC860]);
  }
  else {
    uint64_t v7 = MEMORY[0x1E4FBC870];
  }
  uint64_t v39 = v7;
  sub_1C0063B40();
  long long v8 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
LABEL_5:
  uint64_t v9 = v39;
  if ((v39 & 0xC000000000000001) != 0)
  {
    id v10 = v3;
    swift_bridgeObjectRetain();
    char v11 = sub_1C152002C();
    swift_bridgeObjectRelease();

    if (v11)
    {
      swift_bridgeObjectRelease();
LABEL_38:

      return;
    }
  }
  else if (*(void *)(v39 + 16))
  {
    v3;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C151FB5C();
    uint64_t v13 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v9 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      id v15 = *(id *)(*(void *)(v9 + 48) + 8 * v14);
      char v16 = sub_1C151FB6C();

      if (v16)
      {
LABEL_35:
        swift_bridgeObjectRelease_n();
        goto LABEL_38;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v9 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v9 + 48) + 8 * v14);
        char v19 = sub_1C151FB6C();

        if (v19) {
          goto LABEL_35;
        }
      }
    }
    swift_bridgeObjectRelease();
    long long v8 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
  }
  else
  {
    id v20 = v3;
  }
  sub_1C02BAA08(&v38, v3);

  if (with)
  {
    uint64_t v21 = with;
    goto LABEL_19;
  }
  while (1)
  {
    id v25 = [v3 (SEL)v8[453]];

    uint64_t v21 = (UIView *)[with (SEL)v8[453]];
    if (v25)
    {
      with = v21;
      char v3 = v25;
      goto LABEL_5;
    }
    char v3 = 0;
    with = v21;
    if (!v21)
    {
      swift_bridgeObjectRelease();
      id v35 = v36;
      return;
    }
LABEL_19:
    uint64_t v22 = v39;
    if ((v39 & 0xC000000000000001) == 0) {
      break;
    }
    uint64_t v23 = with;
    swift_bridgeObjectRetain();
    char v24 = sub_1C152002C();
    swift_bridgeObjectRelease();

    if (v24)
    {

      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
LABEL_21:
    sub_1C02BAA08(&v38, v21);
  }
  if (!*(void *)(v39 + 16))
  {
    uint64_t v34 = with;
    goto LABEL_21;
  }
  uint64_t v37 = with;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1C151FB5C();
  uint64_t v27 = -1 << *(unsigned char *)(v22 + 32);
  unint64_t v28 = v26 & ~v27;
  if (((*(void *)(v22 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  id v29 = *(id *)(*(void *)(v22 + 48) + 8 * v28);
  char v30 = sub_1C151FB6C();

  if ((v30 & 1) == 0)
  {
    uint64_t v31 = ~v27;
    while (1)
    {
      unint64_t v28 = (v28 + 1) & v31;
      if (((*(void *)(v22 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
        break;
      }
      id v32 = *(id *)(*(void *)(v22 + 48) + 8 * v28);
      char v33 = sub_1C151FB6C();

      if (v33)
      {
        swift_bridgeObjectRelease_n();

        goto LABEL_37;
      }
    }
    swift_bridgeObjectRelease();
    long long v8 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
    goto LABEL_21;
  }

  swift_bridgeObjectRelease_n();
LABEL_37:
}

Swift::Void __swiftcall UIView.applyBackground(_:withGutter:)(UIView *_, UIView_optional *withGutter)
{
  id v5 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v5);

  id v6 = objc_msgSend(v2, sel_subviews);
  sub_1C0063B40();
  unint64_t v7 = sub_1C151EBCC();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C15204BC();
    if (!v8) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v8) {
      goto LABEL_10;
    }
  }
  if (v8 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v10 = (id)MEMORY[0x1C18C7CB0](i, v7);
    }
    else {
      id v10 = *(id *)(v7 + 8 * i + 32);
    }
    char v11 = v10;
    objc_msgSend(v10, sel_removeFromSuperview);
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  if (withGutter)
  {
    uint64_t v12 = withGutter;
    UIView.nearestCommonAncestor(with:)(v13, &v12->value);
    if (v14)
    {
      id v15 = v14;
      objc_msgSend(v2, sel_frame);
      -[UIView_optional convertPoint:toCoordinateSpace:](v15, sel_convertPoint_toCoordinateSpace_, v2);
      [(UIView *)_ frame];
      sub_1C151F70C();
      -[UIView setFrame:](_, sel_setFrame_);

      uint64_t v12 = v15;
    }
  }
  objc_msgSend(v2, sel_addSubview_, _);
}

uint64_t *sub_1C1154834(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    unint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    type metadata accessor for DebugFormatCompilerResultOutput();
    swift_retain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      type metadata accessor for FormatFile();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v58 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v58;
          uint64_t v59 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v59;
          uint64_t v60 = *((void *)v10 + 5);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          *((void *)v9 + 5) = v60;
          uint64_t v61 = *((void *)v10 + 7);
          *((void *)v9 + 6) = *((void *)v10 + 6);
          *((void *)v9 + 7) = v61;
          uint64_t v62 = *((void *)v10 + 8);
          v9[72] = v10[72];
          *((void *)v9 + 8) = v62;
          uint64_t v63 = *((void *)v10 + 11);
          *((void *)v9 + 10) = *((void *)v10 + 10);
          *((void *)v9 + 11) = v63;
          __dstb = (uint64_t *)(v10 + 96);
          unsigned __int8 v299 = v10[106];
          int v310 = *((unsigned __int16 *)v10 + 52);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v299 == 255)
          {
            *((void *)v9 + 12) = *__dstb;
            *(_DWORD *)(v9 + 103) = *(_DWORD *)(v10 + 103);
          }
          else
          {
            unsigned int v195 = v310 & 0xFF00FFFF | (v299 << 16);
            uint64_t v196 = *__dstb;
            sub_1BFFA742C(*__dstb, v195, SBYTE2(v195), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
            *((void *)v9 + 12) = v196;
            *((_WORD *)v9 + 52) = v310;
            v9[106] = BYTE2(v195);
          }
          goto LABEL_78;
        case 2u:
          uint64_t v64 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v64;
          uint64_t v65 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v65;
          uint64_t v66 = *((void *)v10 + 5);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          *((void *)v9 + 5) = v66;
          v9[48] = v10[48];
          *((void *)v9 + 7) = *((void *)v10 + 7);
          __dstc = v9 + 64;
          unint64_t v67 = *((void *)v10 + 9);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v67 >= 2)
          {
            long long v197 = v10 + 64;
            if (v67 == 2)
            {
              _OWORD *__dstc = *v197;
            }
            else
            {
              v9[64] = *(unsigned char *)v197;
              *((void *)v9 + 9) = v67;
              swift_bridgeObjectRetain();
            }
          }
          else
          {
            _OWORD *__dstc = *((_OWORD *)v10 + 4);
          }
          uint64_t v207 = *((void *)v10 + 11);
          *((void *)v9 + 10) = *((void *)v10 + 10);
          *((void *)v9 + 11) = v207;
          uint64_t v208 = *((void *)v10 + 13);
          *((void *)v9 + 12) = *((void *)v10 + 12);
          *((void *)v9 + 13) = v208;
          uint64_t v209 = *((void *)v10 + 15);
          *((void *)v9 + 14) = *((void *)v10 + 14);
          *((void *)v9 + 15) = v209;
          v9[128] = v10[128];
          *((void *)v9 + 17) = *((void *)v10 + 17);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_76;
        case 3u:
          uint64_t v68 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v68;
          uint64_t v69 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v69;
          uint64_t v70 = *((void *)v10 + 5);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          *((void *)v9 + 5) = v70;
          uint64_t v71 = v10 + 48;
          unint64_t v72 = *((void *)v10 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v72 >= 0xF)
          {
            *((void *)v9 + 6) = *v71;
            *((void *)v9 + 7) = v72;
            swift_bridgeObjectRetain();
          }
          else
          {
            *((_OWORD *)v9 + 3) = *(_OWORD *)v71;
          }
          uint64_t v198 = *((void *)v10 + 9);
          *((void *)v9 + 8) = *((void *)v10 + 8);
          *((void *)v9 + 9) = v198;
          uint64_t v199 = *((void *)v10 + 11);
          *((void *)v9 + 10) = *((void *)v10 + 10);
          *((void *)v9 + 11) = v199;
          uint64_t v200 = *((void *)v10 + 13);
          *((void *)v9 + 12) = *((void *)v10 + 12);
          *((void *)v9 + 13) = v200;
          *((void *)v9 + 14) = *((void *)v10 + 14);
          v9[120] = v10[120];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
LABEL_76:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_77;
        case 4u:
          uint64_t v73 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v73;
          uint64_t v74 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v74;
          uint64_t v75 = *((void *)v10 + 5);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          *((void *)v9 + 5) = v75;
          *((void *)v9 + 6) = *((void *)v10 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_78;
        case 5u:
          uint64_t v76 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v76;
          uint64_t v77 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v77;
          uint64_t v78 = *((void *)v10 + 5);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          *((void *)v9 + 5) = v78;
          *((_WORD *)v9 + 24) = *((_WORD *)v10 + 24);
          uint64_t v79 = *((void *)v10 + 8);
          *((void *)v9 + 7) = *((void *)v10 + 7);
          *((void *)v9 + 8) = v79;
          uint64_t v80 = *((void *)v10 + 10);
          *((void *)v9 + 9) = *((void *)v10 + 9);
          *((void *)v9 + 10) = v80;
          uint64_t v81 = *((void *)v10 + 12);
          *((void *)v9 + 11) = *((void *)v10 + 11);
          *((void *)v9 + 12) = v81;
          uint64_t v82 = *((void *)v10 + 14);
          *((void *)v9 + 13) = *((void *)v10 + 13);
          *((void *)v9 + 14) = v82;
          uint64_t v83 = *((void *)v10 + 16);
          *((void *)v9 + 15) = *((void *)v10 + 15);
          *((void *)v9 + 16) = v83;
          uint64_t v84 = *((void *)v10 + 18);
          *((void *)v9 + 17) = *((void *)v10 + 17);
          *((void *)v9 + 18) = v84;
          *((void *)v9 + 19) = *((void *)v10 + 19);
          uint64_t v337 = v10 + 160;
          unint64_t v311 = *((void *)v10 + 21);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v311 >= 2)
          {
            uint64_t v86 = v9 + 160;
            if (v311 != 2)
            {
              v9[160] = *v337;
              *((void *)v9 + 21) = v311;
              swift_bridgeObjectRetain();
              goto LABEL_79;
            }
            long long v85 = *(_OWORD *)v337;
          }
          else
          {
            long long v85 = *(_OWORD *)v337;
            uint64_t v86 = v9 + 160;
          }
          _OWORD *v86 = v85;
LABEL_79:
          uint64_t v306 = (int *)type metadata accessor for FormatPackage();
          uint64_t v214 = v306[23];
          long long v215 = &v9[v214];
          unint64_t v216 = &v10[v214];
          uint64_t v217 = *(void *)&v10[v214 + 8];
          *(void *)long long v215 = *(void *)&v10[v214];
          *((void *)v215 + 1) = v217;
          uint64_t v320 = type metadata accessor for FormatCompilerOptions(0);
          uint64_t v218 = *(int *)(v320 + 24);
          uint64_t v293 = v215;
          uint64_t v219 = &v215[v218];
          __dsth = v216;
          uint64_t v220 = &v216[v218];
          uint64_t v221 = *((void *)v220 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v221 == 1)
          {
            long long v222 = *((_OWORD *)v220 + 1);
            *(_OWORD *)uint64_t v219 = *(_OWORD *)v220;
            *((_OWORD *)v219 + 1) = v222;
            *((_OWORD *)v219 + 2) = *((_OWORD *)v220 + 2);
          }
          else
          {
            *(void *)uint64_t v219 = *(void *)v220;
            *((void *)v219 + 1) = v221;
            uint64_t v223 = *((void *)v220 + 3);
            *((void *)v219 + 2) = *((void *)v220 + 2);
            *((void *)v219 + 3) = v223;
            uint64_t v224 = *((void *)v220 + 5);
            *((void *)v219 + 4) = *((void *)v220 + 4);
            *((void *)v219 + 5) = v224;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          uint64_t v225 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          long long v226 = &v219[v225];
          long long v227 = &v220[v225];
          uint64_t v228 = sub_1C1518CDC();
          uint64_t v229 = *(void *)(v228 - 8);
          uint64_t v331 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v229 + 48);
          uint64_t v284 = v229;
          if (v331(v227, 1, v228))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v226, v227, *(void *)(*(void *)(v230 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v229 + 16))(v226, v227, v228);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v229 + 56))(v226, 0, 1, v228);
          }
          uint64_t v231 = v228;
          uint64_t v232 = v320;
          uint64_t v233 = *(int *)(v320 + 28);
          uint64_t v234 = v293;
          uint64_t v235 = (char *)v293 + v233;
          uint64_t v236 = &__dsth[v233];
          uint64_t v321 = v231;
          if (v331(&__dsth[v233], 1, v231))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v235, v236, *(void *)(*(void *)(v237 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v284 + 16))(v235, v236, v321);
            uint64_t v234 = v293;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v284 + 56))(v235, 0, 1, v321);
          }
          *(void *)((char *)v234 + *(int *)(v232 + 32)) = *(void *)&__dsth[*(int *)(v232 + 32)];
          uint64_t v238 = v306[24];
          __dstp = &v9[v238];
          unint64_t v294 = &v10[v238];
          uint64_t v239 = sub_1C151928C();
          uint64_t v240 = *(void (**)(char *, char *, uint64_t))(*(void *)(v239 - 8) + 16);
          swift_bridgeObjectRetain();
          v240(__dstp, v294, v239);
          uint64_t v241 = v306[25];
          int v242 = &v9[v241];
          uint64_t v243 = &v10[v241];
          if (v331(&v10[v241], 1, v321))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v242, v243, *(void *)(*(void *)(v244 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v284 + 16))(v242, v243, v321);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v284 + 56))(v242, 0, 1, v321);
          }
LABEL_78:
          swift_storeEnumTagMultiPayload();
          sub_1C0913D20();
          uint64_t v211 = *(int *)(v210 + 48);
          uint64_t v212 = *(void **)&v10[v211];
          id v213 = v212;
          *(void *)&v9[v211] = v212;
          break;
        case 6u:
          uint64_t v87 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v87;
          *((void *)v9 + 2) = *((void *)v10 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_78;
        case 7u:
          *(void *)uint64_t v9 = *(void *)v10;
          swift_retain();
          goto LABEL_78;
        case 8u:
          uint64_t v88 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v88;
          uint64_t v89 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v89;
          uint64_t v90 = *((void *)v10 + 5);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          *((void *)v9 + 5) = v90;
          uint64_t v91 = *((void *)v10 + 7);
          *((void *)v9 + 6) = *((void *)v10 + 6);
          *((void *)v9 + 7) = v91;
          *((void *)v9 + 8) = *((void *)v10 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_78;
        case 9u:
          uint64_t v92 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v92;
          uint64_t v93 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v93;
          uint64_t v94 = *((void *)v10 + 5);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          *((void *)v9 + 5) = v94;
          uint64_t v95 = *((void *)v10 + 7);
          *((void *)v9 + 6) = *((void *)v10 + 6);
          *((void *)v9 + 7) = v95;
          uint64_t v96 = *((void *)v10 + 9);
          *((void *)v9 + 8) = *((void *)v10 + 8);
          *((void *)v9 + 9) = v96;
          v9[80] = v10[80];
          __dstl = (void *)*((void *)v10 + 12);
          *((void *)v9 + 11) = *((void *)v10 + 11);
          *((void *)v9 + 12) = __dstl;
          v9[104] = v10[104];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_78;
        case 0xAu:
          uint64_t v97 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v97;
          uint64_t v98 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v98;
          uint64_t v300 = *((void *)v10 + 5);
          uint64_t v312 = *((void *)v10 + 4);
          uint64_t v288 = *((void *)v10 + 6);
          __dstm = (void *)*((void *)v10 + 7);
          uint64_t v99 = *((void *)v10 + 9);
          uint64_t v326 = *((void *)v10 + 8);
          unsigned __int8 v338 = v10[80];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF1DB64(v312, v300, v288, (uint64_t)__dstm, v326, v99, v338);
          *((void *)v9 + 4) = v312;
          *((void *)v9 + 5) = v300;
          *((void *)v9 + 6) = v288;
          *((void *)v9 + 7) = __dstm;
          *((void *)v9 + 8) = v326;
          *((void *)v9 + 9) = v99;
          v9[80] = v338;
          goto LABEL_78;
        case 0xBu:
          uint64_t v100 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v100;
          uint64_t v101 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v101;
          uint64_t v102 = *((void *)v10 + 5);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          *((void *)v9 + 5) = v102;
          uint64_t v103 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
          uint64_t v104 = &v9[v103];
          uint64_t v105 = &v10[v103];
          uint64_t v106 = *(void *)&v10[v103 + 8];
          *(void *)uint64_t v104 = *(void *)&v10[v103];
          *((void *)v104 + 1) = v106;
          uint64_t v107 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v108 = v107[5];
          uint64_t v301 = &v105[v108];
          char v313 = &v104[v108];
          uint64_t v109 = sub_1C151631C();
          unint64_t v289 = *(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v289(v313, v301, v109);
          uint64_t v110 = v107[6];
          char v111 = &v104[v110];
          uint64_t v112 = &v105[v110];
          uint64_t v339 = *((void *)v112 + 1);
          *(void *)char v111 = *(void *)v112;
          *((void *)v111 + 1) = v339;
          uint64_t v113 = v107[7];
          long long v114 = &v104[v113];
          uint64_t v115 = &v105[v113];
          uint64_t v314 = *((void *)v115 + 1);
          unint64_t v327 = v107;
          *(void *)long long v114 = *(void *)v115;
          *((void *)v114 + 1) = v314;
          uint64_t v116 = v107[8];
          char v117 = &v104[v116];
          uint64_t v118 = &v105[v116];
          uint64_t v302 = *((void *)v118 + 1);
          *(void *)char v117 = *(void *)v118;
          *((void *)v117 + 1) = v302;
          uint64_t v119 = v107[9];
          uint64_t v120 = &v104[v119];
          uint64_t v121 = &v105[v119];
          uint64_t v290 = *((void *)v121 + 1);
          *(void *)uint64_t v120 = *(void *)v121;
          *((void *)v120 + 1) = v290;
          uint64_t v122 = v107[10];
          __dstd = &v104[v122];
          uint64_t v123 = &v105[v122];
          uint64_t v124 = sub_1C151D6DC();
          uint64_t v281 = *(void *)(v124 - 8);
          long long v282 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v281 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v282(v123, 1, v124))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dstd, v123, *(void *)(*(void *)(v125 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v281 + 16))(__dstd, v123, v124);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v281 + 56))(__dstd, 0, 1, v124);
          }
          *(void *)&v104[v327[11]] = *(void *)&v105[v327[11]];
          *(void *)&v104[v327[12]] = *(void *)&v105[v327[12]];
          *(void *)&v104[v327[13]] = *(void *)&v105[v327[13]];
          *(void *)&v104[v327[14]] = *(void *)&v105[v327[14]];
          *(void *)&v104[v327[15]] = *(void *)&v105[v327[15]];
          *(void *)&v104[v327[16]] = *(void *)&v105[v327[16]];
          *(void *)&v104[v327[17]] = *(void *)&v105[v327[17]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_71;
        default:
          uint64_t v14 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v14;
          id v15 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v16 = v15[5];
          uint64_t v333 = &v10[v16];
          __dstj = &v9[v16];
          uint64_t v17 = sub_1C151631C();
          id v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
          swift_bridgeObjectRetain();
          v18(__dstj, v333, v17);
          uint64_t v19 = v15[6];
          id v20 = &v9[v19];
          uint64_t v21 = &v10[v19];
          uint64_t v334 = *((void *)v21 + 1);
          *(void *)id v20 = *(void *)v21;
          *((void *)v20 + 1) = v334;
          uint64_t v22 = v15[7];
          uint64_t v23 = &v9[v22];
          char v24 = &v10[v22];
          uint64_t v324 = *((void *)v24 + 1);
          *(void *)uint64_t v23 = *(void *)v24;
          *((void *)v23 + 1) = v324;
          uint64_t v25 = v15[8];
          uint64_t v26 = &v9[v25];
          uint64_t v27 = &v10[v25];
          uint64_t v28 = *((void *)v27 + 1);
          *(void *)uint64_t v26 = *(void *)v27;
          *((void *)v26 + 1) = v28;
          uint64_t v29 = v15[9];
          char v30 = &v9[v29];
          uint64_t v31 = &v10[v29];
          uint64_t v32 = *((void *)v31 + 1);
          *(void *)char v30 = *(void *)v31;
          *((void *)v30 + 1) = v32;
          uint64_t v33 = v15[10];
          __dst = &v9[v33];
          char v308 = &v10[v33];
          uint64_t v34 = sub_1C151D6DC();
          uint64_t v286 = *(void *)(v34 - 8);
          uint64_t v297 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v286 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v297(v308, 1, v34))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dst, v308, *(void *)(*(void *)(v35 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v286 + 16))(__dst, v308, v34);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v286 + 56))(__dst, 0, 1, v34);
          }
          *(void *)&v9[v15[11]] = *(void *)&v10[v15[11]];
          *(void *)&v9[v15[12]] = *(void *)&v10[v15[12]];
          *(void *)&v9[v15[13]] = *(void *)&v10[v15[13]];
          *(void *)&v9[v15[14]] = *(void *)&v10[v15[14]];
          *(void *)&v9[v15[15]] = *(void *)&v10[v15[15]];
          *(void *)&v9[v15[16]] = *(void *)&v10[v15[16]];
          *(void *)&v9[v15[17]] = *(void *)&v10[v15[17]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_71:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_77:
          swift_bridgeObjectRetain();
          goto LABEL_78;
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = *(void *)v10;
      id v13 = *(id *)v10;
      *(void *)uint64_t v9 = v12;
    }
    else
    {
      type metadata accessor for FormatFile();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v126 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v126;
          uint64_t v127 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v127;
          uint64_t v128 = *((void *)v10 + 5);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          *((void *)v9 + 5) = v128;
          uint64_t v129 = *((void *)v10 + 7);
          *((void *)v9 + 6) = *((void *)v10 + 6);
          *((void *)v9 + 7) = v129;
          uint64_t v130 = *((void *)v10 + 8);
          v9[72] = v10[72];
          *((void *)v9 + 8) = v130;
          uint64_t v131 = *((void *)v10 + 11);
          *((void *)v9 + 10) = *((void *)v10 + 10);
          *((void *)v9 + 11) = v131;
          __dste = v10 + 96;
          unsigned __int8 v315 = v10[106];
          int v132 = *((unsigned __int16 *)v10 + 52);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v315 == 255)
          {
            *((void *)v9 + 12) = *(void *)__dste;
            *(_DWORD *)(v9 + 103) = *(_DWORD *)(__dste + 7);
          }
          else
          {
            uint64_t v201 = v132 & 0xFF00FFFF | (v315 << 16);
            uint64_t v202 = *(void *)__dste;
            sub_1BFFA742C(*(void *)__dste, v201, SBYTE2(v201), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
            *((void *)v9 + 12) = v202;
            *((_WORD *)v9 + 52) = v201;
            v9[106] = BYTE2(v201);
          }
          goto LABEL_94;
        case 2u:
          uint64_t v133 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v133;
          uint64_t v134 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v134;
          uint64_t v135 = *((void *)v10 + 5);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          *((void *)v9 + 5) = v135;
          v9[48] = v10[48];
          *((void *)v9 + 7) = *((void *)v10 + 7);
          __dstf = v9 + 64;
          unint64_t v136 = *((void *)v10 + 9);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v136 >= 2)
          {
            long long v203 = v10 + 64;
            if (v136 == 2)
            {
              _OWORD *__dstf = *v203;
            }
            else
            {
              v9[64] = *(unsigned char *)v203;
              *((void *)v9 + 9) = v136;
              swift_bridgeObjectRetain();
            }
          }
          else
          {
            _OWORD *__dstf = *((_OWORD *)v10 + 4);
          }
          uint64_t v245 = *((void *)v10 + 11);
          *((void *)v9 + 10) = *((void *)v10 + 10);
          *((void *)v9 + 11) = v245;
          uint64_t v246 = *((void *)v10 + 13);
          *((void *)v9 + 12) = *((void *)v10 + 12);
          *((void *)v9 + 13) = v246;
          uint64_t v247 = *((void *)v10 + 15);
          *((void *)v9 + 14) = *((void *)v10 + 14);
          *((void *)v9 + 15) = v247;
          v9[128] = v10[128];
          *((void *)v9 + 17) = *((void *)v10 + 17);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_92;
        case 3u:
          uint64_t v137 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v137;
          uint64_t v138 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v138;
          uint64_t v139 = *((void *)v10 + 5);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          *((void *)v9 + 5) = v139;
          long long v140 = v10 + 48;
          unint64_t v141 = *((void *)v10 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v141 >= 0xF)
          {
            *((void *)v9 + 6) = *v140;
            *((void *)v9 + 7) = v141;
            swift_bridgeObjectRetain();
          }
          else
          {
            *((_OWORD *)v9 + 3) = *(_OWORD *)v140;
          }
          uint64_t v204 = *((void *)v10 + 9);
          *((void *)v9 + 8) = *((void *)v10 + 8);
          *((void *)v9 + 9) = v204;
          uint64_t v205 = *((void *)v10 + 11);
          *((void *)v9 + 10) = *((void *)v10 + 10);
          *((void *)v9 + 11) = v205;
          uint64_t v206 = *((void *)v10 + 13);
          *((void *)v9 + 12) = *((void *)v10 + 12);
          *((void *)v9 + 13) = v206;
          *((void *)v9 + 14) = *((void *)v10 + 14);
          v9[120] = v10[120];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_93;
        case 4u:
          uint64_t v142 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v142;
          uint64_t v143 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v143;
          uint64_t v144 = *((void *)v10 + 5);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          *((void *)v9 + 5) = v144;
          *((void *)v9 + 6) = *((void *)v10 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_43;
        case 5u:
          uint64_t v176 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v176;
          uint64_t v177 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v177;
          uint64_t v178 = *((void *)v10 + 5);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          *((void *)v9 + 5) = v178;
          *((_WORD *)v9 + 24) = *((_WORD *)v10 + 24);
          uint64_t v179 = *((void *)v10 + 8);
          *((void *)v9 + 7) = *((void *)v10 + 7);
          *((void *)v9 + 8) = v179;
          uint64_t v180 = *((void *)v10 + 10);
          *((void *)v9 + 9) = *((void *)v10 + 9);
          *((void *)v9 + 10) = v180;
          uint64_t v181 = *((void *)v10 + 12);
          *((void *)v9 + 11) = *((void *)v10 + 11);
          *((void *)v9 + 12) = v181;
          uint64_t v182 = *((void *)v10 + 14);
          *((void *)v9 + 13) = *((void *)v10 + 13);
          *((void *)v9 + 14) = v182;
          uint64_t v183 = *((void *)v10 + 16);
          *((void *)v9 + 15) = *((void *)v10 + 15);
          *((void *)v9 + 16) = v183;
          uint64_t v184 = *((void *)v10 + 18);
          *((void *)v9 + 17) = *((void *)v10 + 17);
          *((void *)v9 + 18) = v184;
          *((void *)v9 + 19) = *((void *)v10 + 19);
          unint64_t v341 = v10 + 160;
          unint64_t v318 = *((void *)v10 + 21);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v318 >= 2)
          {
            uint64_t v186 = v9 + 160;
            if (v318 != 2)
            {
              v9[160] = *v341;
              *((void *)v9 + 21) = v318;
              swift_bridgeObjectRetain();
              goto LABEL_97;
            }
            long long v185 = *(_OWORD *)v341;
          }
          else
          {
            long long v185 = *(_OWORD *)v341;
            uint64_t v186 = v9 + 160;
          }
          *uint64_t v186 = v185;
LABEL_97:
          int v307 = (int *)type metadata accessor for FormatPackage();
          uint64_t v250 = v307[23];
          unint64_t v251 = &v9[v250];
          uint64_t v252 = &v10[v250];
          uint64_t v253 = *(void *)&v10[v250 + 8];
          *(void *)unint64_t v251 = *(void *)&v10[v250];
          *((void *)v251 + 1) = v253;
          uint64_t v322 = type metadata accessor for FormatCompilerOptions(0);
          uint64_t v254 = *(int *)(v322 + 24);
          unint64_t v295 = v251;
          uint64_t v255 = &v251[v254];
          __dstuint64_t i = v252;
          uint64_t v256 = &v252[v254];
          uint64_t v257 = *((void *)v256 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v257 == 1)
          {
            long long v258 = *((_OWORD *)v256 + 1);
            *(_OWORD *)uint64_t v255 = *(_OWORD *)v256;
            *((_OWORD *)v255 + 1) = v258;
            *((_OWORD *)v255 + 2) = *((_OWORD *)v256 + 2);
          }
          else
          {
            *(void *)uint64_t v255 = *(void *)v256;
            *((void *)v255 + 1) = v257;
            uint64_t v259 = *((void *)v256 + 3);
            *((void *)v255 + 2) = *((void *)v256 + 2);
            *((void *)v255 + 3) = v259;
            uint64_t v260 = *((void *)v256 + 5);
            *((void *)v255 + 4) = *((void *)v256 + 4);
            *((void *)v255 + 5) = v260;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          uint64_t v261 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          uint64_t v262 = &v255[v261];
          uint64_t v263 = &v256[v261];
          uint64_t v264 = sub_1C1518CDC();
          uint64_t v265 = *(void *)(v264 - 8);
          uint64_t v332 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v265 + 48);
          uint64_t v285 = v265;
          if (v332(v263, 1, v264))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v262, v263, *(void *)(*(void *)(v266 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v265 + 16))(v262, v263, v264);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v265 + 56))(v262, 0, 1, v264);
          }
          uint64_t v267 = v264;
          uint64_t v268 = v322;
          uint64_t v269 = *(int *)(v322 + 28);
          unint64_t v270 = v295;
          uint64_t v271 = (char *)v295 + v269;
          char v272 = &__dsti[v269];
          uint64_t v323 = v267;
          if (v332(&__dsti[v269], 1, v267))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v271, v272, *(void *)(*(void *)(v273 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v285 + 16))(v271, v272, v323);
            unint64_t v270 = v295;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v285 + 56))(v271, 0, 1, v323);
          }
          *(void *)((char *)v270 + *(int *)(v268 + 32)) = *(void *)&__dsti[*(int *)(v268 + 32)];
          uint64_t v274 = v307[24];
          __dstq = &v9[v274];
          uint64_t v296 = &v10[v274];
          uint64_t v275 = sub_1C151928C();
          long long v276 = *(void (**)(char *, char *, uint64_t))(*(void *)(v275 - 8) + 16);
          swift_bridgeObjectRetain();
          v276(__dstq, v296, v275);
          uint64_t v277 = v307[25];
          long long v278 = &v9[v277];
          uint64_t v279 = &v10[v277];
          if (v332(v279, 1, v323))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v278, v279, *(void *)(*(void *)(v280 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v285 + 16))(v278, v279, v323);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v285 + 56))(v278, 0, 1, v323);
          }
LABEL_94:
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          uint64_t v187 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v187;
          *((void *)v9 + 2) = *((void *)v10 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_94;
        case 7u:
          *(void *)uint64_t v9 = *(void *)v10;
          swift_retain();
          goto LABEL_94;
        case 8u:
          uint64_t v188 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v188;
          uint64_t v189 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v189;
          uint64_t v190 = *((void *)v10 + 5);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          *((void *)v9 + 5) = v190;
          uint64_t v191 = *((void *)v10 + 7);
          *((void *)v9 + 6) = *((void *)v10 + 6);
          *((void *)v9 + 7) = v191;
          *((void *)v9 + 8) = *((void *)v10 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_43:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_94;
        case 9u:
          uint64_t v145 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v145;
          uint64_t v146 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v146;
          uint64_t v147 = *((void *)v10 + 5);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          *((void *)v9 + 5) = v147;
          uint64_t v148 = *((void *)v10 + 7);
          *((void *)v9 + 6) = *((void *)v10 + 6);
          *((void *)v9 + 7) = v148;
          uint64_t v149 = *((void *)v10 + 9);
          *((void *)v9 + 8) = *((void *)v10 + 8);
          *((void *)v9 + 9) = v149;
          v9[80] = v10[80];
          __dstn = (void *)*((void *)v10 + 12);
          *((void *)v9 + 11) = *((void *)v10 + 11);
          *((void *)v9 + 12) = __dstn;
          v9[104] = v10[104];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_94;
        case 0xAu:
          uint64_t v192 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v192;
          uint64_t v193 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v193;
          uint64_t v305 = *((void *)v10 + 5);
          uint64_t v319 = *((void *)v10 + 4);
          uint64_t v292 = *((void *)v10 + 6);
          uint64_t v342 = *((void *)v10 + 8);
          __dsto = (void *)*((void *)v10 + 7);
          uint64_t v330 = *((void *)v10 + 9);
          unsigned __int8 v194 = v10[80];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF1DB64(v319, v305, v292, (uint64_t)__dsto, v342, v330, v194);
          *((void *)v9 + 4) = v319;
          *((void *)v9 + 5) = v305;
          *((void *)v9 + 6) = v292;
          *((void *)v9 + 7) = __dsto;
          *((void *)v9 + 8) = v342;
          *((void *)v9 + 9) = v330;
          v9[80] = v194;
          goto LABEL_94;
        case 0xBu:
          uint64_t v150 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v150;
          uint64_t v151 = *((void *)v10 + 3);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = v151;
          uint64_t v152 = *((void *)v10 + 5);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          *((void *)v9 + 5) = v152;
          uint64_t v153 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
          unint64_t v154 = &v9[v153];
          uint64_t v155 = &v10[v153];
          uint64_t v156 = *(void *)&v10[v153 + 8];
          *(void *)unint64_t v154 = *(void *)&v10[v153];
          *((void *)v154 + 1) = v156;
          uint64_t v157 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v158 = v157[5];
          unsigned __int8 v316 = &v155[v158];
          unint64_t v328 = &v154[v158];
          uint64_t v159 = sub_1C151631C();
          uint64_t v303 = *(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v303(v328, v316, v159);
          uint64_t v160 = v157[6];
          uint64_t v161 = &v154[v160];
          uint64_t v162 = &v155[v160];
          uint64_t v163 = *((void *)v162 + 1);
          *(void *)uint64_t v161 = *(void *)v162;
          *((void *)v161 + 1) = v163;
          uint64_t v164 = v157[7];
          uint64_t v165 = &v154[v164];
          long long v166 = &v155[v164];
          uint64_t v329 = *((void *)v166 + 1);
          *(void *)uint64_t v165 = *(void *)v166;
          *((void *)v165 + 1) = v329;
          uint64_t v167 = v157[8];
          unint64_t v168 = &v154[v167];
          uint64_t v169 = &v155[v167];
          uint64_t v317 = *((void *)v169 + 1);
          *(void *)unint64_t v168 = *(void *)v169;
          *((void *)v168 + 1) = v317;
          uint64_t v170 = v157[9];
          uint64_t v171 = &v154[v170];
          uint64_t v172 = &v155[v170];
          uint64_t v304 = *((void *)v172 + 1);
          *(void *)uint64_t v171 = *(void *)v172;
          *((void *)v171 + 1) = v304;
          uint64_t v173 = v157[10];
          unsigned __int8 v340 = &v154[v173];
          __dstg = &v155[v173];
          uint64_t v174 = sub_1C151D6DC();
          uint64_t v283 = *(void *)(v174 - 8);
          uint64_t v291 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v283 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v291(__dstg, 1, v174))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(v340, __dstg, *(void *)(*(void *)(v175 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v340, __dstg, v174);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v283 + 56))(v340, 0, 1, v174);
          }
          *(void *)&v154[v157[11]] = *(void *)&v155[v157[11]];
          *(void *)&v154[v157[12]] = *(void *)&v155[v157[12]];
          *(void *)&v154[v157[13]] = *(void *)&v155[v157[13]];
          *(void *)&v154[v157[14]] = *(void *)&v155[v157[14]];
          *(void *)&v154[v157[15]] = *(void *)&v155[v157[15]];
          *(void *)&v154[v157[16]] = *(void *)&v155[v157[16]];
          *(void *)&v154[v157[17]] = *(void *)&v155[v157[17]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_74;
        default:
          uint64_t v36 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v36;
          uint64_t v37 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v38 = v37[5];
          long long v335 = &v10[v38];
          __dstk = &v9[v38];
          uint64_t v39 = sub_1C151631C();
          uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
          swift_bridgeObjectRetain();
          v40(__dstk, v335, v39);
          uint64_t v41 = v37[6];
          uint64_t v42 = &v9[v41];
          long long v43 = &v10[v41];
          uint64_t v336 = *((void *)v43 + 1);
          *(void *)uint64_t v42 = *(void *)v43;
          *((void *)v42 + 1) = v336;
          uint64_t v44 = v37[7];
          uint64_t v45 = &v9[v44];
          uint64_t v46 = &v10[v44];
          uint64_t v325 = *((void *)v46 + 1);
          *(void *)uint64_t v45 = *(void *)v46;
          *((void *)v45 + 1) = v325;
          uint64_t v47 = v37[8];
          uint64_t v48 = &v9[v47];
          uint64_t v49 = &v10[v47];
          uint64_t v50 = *((void *)v49 + 1);
          *(void *)uint64_t v48 = *(void *)v49;
          *((void *)v48 + 1) = v50;
          uint64_t v51 = v37[9];
          uint64_t v52 = &v9[v51];
          uint64_t v53 = &v10[v51];
          uint64_t v54 = *((void *)v53 + 1);
          *(void *)uint64_t v52 = *(void *)v53;
          *((void *)v52 + 1) = v54;
          uint64_t v55 = v37[10];
          __dsta = &v9[v55];
          uint64_t v309 = &v10[v55];
          uint64_t v56 = sub_1C151D6DC();
          uint64_t v287 = *(void *)(v56 - 8);
          uint64_t v298 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v287 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v298(v309, 1, v56))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dsta, v309, *(void *)(*(void *)(v57 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v287 + 16))(__dsta, v309, v56);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v287 + 56))(__dsta, 0, 1, v56);
          }
          *(void *)&v9[v37[11]] = *(void *)&v10[v37[11]];
          *(void *)&v9[v37[12]] = *(void *)&v10[v37[12]];
          *(void *)&v9[v37[13]] = *(void *)&v10[v37[13]];
          *(void *)&v9[v37[14]] = *(void *)&v10[v37[14]];
          *(void *)&v9[v37[15]] = *(void *)&v10[v37[15]];
          *(void *)&v9[v37[16]] = *(void *)&v10[v37[16]];
          *(void *)&v9[v37[17]] = *(void *)&v10[v37[17]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_74:
          swift_bridgeObjectRetain();
LABEL_92:
          swift_bridgeObjectRetain();
LABEL_93:
          swift_bridgeObjectRetain();
          goto LABEL_94;
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v248 = a3[7];
    *(uint64_t *)((char *)v7 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v7 + v248) = *(uint64_t *)((char *)a2 + v248);
    *(uint64_t *)((char *)v7 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1C11569BC(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for DebugFormatCompilerResultOutput();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      type metadata accessor for FormatFile();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          uint64_t v12 = type metadata accessor for FormatContent(0);
          uint64_t v13 = v4 + *(int *)(v12 + 20);
          uint64_t v14 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v15 = v4 + *(int *)(v12 + 40);
          uint64_t v16 = sub_1C151D6DC();
          uint64_t v17 = *(void *)(v16 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
            (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
          }
          goto LABEL_66;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(unsigned __int8 *)(v4 + 106) != 255)
          {
            uint64_t v38 = *(unsigned __int16 *)(v4 + 104) | (*(unsigned __int8 *)(v4 + 106) << 16);
            sub_1BFFA742C(*(void *)(v4 + 96), v38, SBYTE2(v38), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
          }
          break;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v4 + 72) >= 3uLL) {
            swift_bridgeObjectRelease();
          }
          goto LABEL_66;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v4 + 56) >= 0xFuLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_67;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_67;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v4 + 168) >= 3uLL) {
            swift_bridgeObjectRelease();
          }
          uint64_t v39 = (int *)type metadata accessor for FormatPackage();
          uint64_t v40 = v4 + v39[23];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v41 = type metadata accessor for FormatCompilerOptions(0);
          uint64_t v42 = v40 + *(int *)(v41 + 24);
          if (*(void *)(v42 + 8) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v43 = v42 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          uint64_t v44 = sub_1C1518CDC();
          uint64_t v60 = *(void *)(v44 - 8);
          uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
          if (!v45(v43, 1, v44)) {
            (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v43, v44);
          }
          uint64_t v46 = v40 + *(int *)(v41 + 28);
          if (!v45(v46, 1, v44)) {
            (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v46, v44);
          }
          swift_bridgeObjectRelease();
          uint64_t v47 = v4 + v39[24];
          uint64_t v48 = sub_1C151928C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
          uint64_t v49 = v4 + v39[25];
          if (!v45(v49, 1, v44)) {
            (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v49, v44);
          }
          break;
        case 6u:
          swift_bridgeObjectRelease();
          goto LABEL_67;
        case 7u:
          swift_release();
          break;
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_67;
        case 9u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_67;
        case 0xAu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEC28BC(*(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72), *(unsigned char *)(v4 + 80));
          break;
        case 0xBu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v50 = v4 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
          swift_bridgeObjectRelease();
          uint64_t v51 = type metadata accessor for FormatContent(0);
          uint64_t v52 = v50 + *(int *)(v51 + 20);
          uint64_t v53 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v54 = v50 + *(int *)(v51 + 40);
          uint64_t v55 = sub_1C151D6DC();
          uint64_t v56 = *(void *)(v55 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55)) {
            (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
          }
LABEL_66:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_67:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      sub_1C0913D20();
      id v18 = *(void **)(v4 + *(int *)(v57 + 48));
      goto LABEL_69;
    case 1:
      id v18 = *(void **)v4;
LABEL_69:

      break;
    case 0:
      type metadata accessor for FormatFile();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          uint64_t v6 = type metadata accessor for FormatContent(0);
          uint64_t v7 = v4 + *(int *)(v6 + 20);
          uint64_t v8 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v9 = v4 + *(int *)(v6 + 40);
          uint64_t v10 = sub_1C151D6DC();
          uint64_t v11 = *(void *)(v10 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
            (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
          }
          goto LABEL_39;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(unsigned __int8 *)(v4 + 106) != 255)
          {
            uint64_t v19 = *(unsigned __int16 *)(v4 + 104) | (*(unsigned __int8 *)(v4 + 106) << 16);
            sub_1BFFA742C(*(void *)(v4 + 96), v19, SBYTE2(v19), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
          }
          goto LABEL_70;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v4 + 72) >= 3uLL) {
            swift_bridgeObjectRelease();
          }
          goto LABEL_39;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v4 + 56) >= 0xFuLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_70;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_70;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v4 + 168) >= 3uLL) {
            swift_bridgeObjectRelease();
          }
          uint64_t v59 = (int *)type metadata accessor for FormatPackage();
          uint64_t v20 = v4 + v59[23];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v21 = type metadata accessor for FormatCompilerOptions(0);
          uint64_t v22 = v20 + *(int *)(v21 + 24);
          if (*(void *)(v22 + 8) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v23 = v22 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          uint64_t v24 = sub_1C1518CDC();
          uint64_t v25 = *(void *)(v24 - 8);
          uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
          if (!v26(v23, 1, v24)) {
            (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
          }
          uint64_t v27 = v20 + *(int *)(v21 + 28);
          if (!v26(v27, 1, v24)) {
            (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v24);
          }
          swift_bridgeObjectRelease();
          uint64_t v28 = v4 + v59[24];
          uint64_t v29 = sub_1C151928C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
          uint64_t v30 = v4 + v59[25];
          if (!v26(v30, 1, v24)) {
            (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v30, v24);
          }
          goto LABEL_70;
        case 6u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_70;
        case 7u:
          swift_release();
          goto LABEL_70;
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_70;
        case 9u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_70;
        case 0xAu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEC28BC(*(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72), *(unsigned char *)(v4 + 80));
          goto LABEL_70;
        case 0xBu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v31 = v4 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
          swift_bridgeObjectRelease();
          uint64_t v32 = type metadata accessor for FormatContent(0);
          uint64_t v33 = v31 + *(int *)(v32 + 20);
          uint64_t v34 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v35 = v31 + *(int *)(v32 + 40);
          uint64_t v36 = sub_1C151D6DC();
          uint64_t v37 = *(void *)(v36 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36)) {
            (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
          }
LABEL_39:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        default:
          goto LABEL_70;
      }
      break;
  }
LABEL_70:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1C1157A40(void *a1, void *a2, int *a3)
{
  int v3 = a2;
  *a1 = *a2;
  uint64_t v5 = a3[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  type metadata accessor for DebugFormatCompilerResultOutput();
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    type metadata accessor for FormatFile();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v59 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v59;
        uint64_t v60 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v60;
        uint64_t v61 = *((void *)v7 + 5);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        *((void *)v6 + 5) = v61;
        uint64_t v62 = *((void *)v7 + 7);
        *((void *)v6 + 6) = *((void *)v7 + 6);
        *((void *)v6 + 7) = v62;
        uint64_t v63 = *((void *)v7 + 8);
        v6[72] = v7[72];
        *((void *)v6 + 8) = v63;
        uint64_t v64 = *((void *)v7 + 11);
        *((void *)v6 + 10) = *((void *)v7 + 10);
        *((void *)v6 + 11) = v64;
        __dstb = (uint64_t *)(v7 + 96);
        unsigned __int8 v303 = v7[106];
        int v312 = *((unsigned __int16 *)v7 + 52);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v303 == 255)
        {
          *((void *)v6 + 12) = *__dstb;
          *(_DWORD *)(v6 + 103) = *(_DWORD *)(v7 + 103);
        }
        else
        {
          unsigned int v207 = v312 & 0xFF00FFFF | (v303 << 16);
          uint64_t v208 = *__dstb;
          sub_1BFFA742C(*__dstb, v207, SBYTE2(v207), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          *((void *)v6 + 12) = v208;
          *((_WORD *)v6 + 52) = v312;
          v6[106] = BYTE2(v207);
        }
        goto LABEL_71;
      case 2u:
        uint64_t v65 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v65;
        uint64_t v66 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v66;
        uint64_t v67 = *((void *)v7 + 5);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        *((void *)v6 + 5) = v67;
        v6[48] = v7[48];
        *((void *)v6 + 7) = *((void *)v7 + 7);
        uint64_t v68 = v7 + 64;
        unint64_t v69 = *((void *)v7 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v69 <= 2)
        {
          *((_OWORD *)v6 + 4) = *v68;
        }
        else
        {
          v6[64] = *(unsigned char *)v68;
          *((void *)v6 + 9) = v69;
          swift_bridgeObjectRetain();
        }
        uint64_t v217 = *((void *)v7 + 11);
        *((void *)v6 + 10) = *((void *)v7 + 10);
        *((void *)v6 + 11) = v217;
        uint64_t v218 = *((void *)v7 + 13);
        *((void *)v6 + 12) = *((void *)v7 + 12);
        *((void *)v6 + 13) = v218;
        uint64_t v219 = *((void *)v7 + 15);
        *((void *)v6 + 14) = *((void *)v7 + 14);
        *((void *)v6 + 15) = v219;
        v6[128] = v7[128];
        *((void *)v6 + 17) = *((void *)v7 + 17);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_69;
      case 3u:
        uint64_t v70 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v70;
        uint64_t v71 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v71;
        uint64_t v72 = *((void *)v7 + 5);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        *((void *)v6 + 5) = v72;
        uint64_t v73 = v7 + 48;
        unint64_t v74 = *((void *)v7 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v74 >= 0xF)
        {
          *((void *)v6 + 6) = *v73;
          *((void *)v6 + 7) = v74;
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)v6 + 3) = *(_OWORD *)v73;
        }
        uint64_t v209 = *((void *)v7 + 9);
        *((void *)v6 + 8) = *((void *)v7 + 8);
        *((void *)v6 + 9) = v209;
        uint64_t v210 = *((void *)v7 + 11);
        *((void *)v6 + 10) = *((void *)v7 + 10);
        *((void *)v6 + 11) = v210;
        uint64_t v211 = *((void *)v7 + 13);
        *((void *)v6 + 12) = *((void *)v7 + 12);
        *((void *)v6 + 13) = v211;
        *((void *)v6 + 14) = *((void *)v7 + 14);
        v6[120] = v7[120];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
LABEL_69:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_70;
      case 4u:
        uint64_t v75 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v75;
        uint64_t v76 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v76;
        uint64_t v77 = *((void *)v7 + 5);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        *((void *)v6 + 5) = v77;
        *((void *)v6 + 6) = *((void *)v7 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_71;
      case 5u:
        uint64_t v78 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v78;
        uint64_t v79 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v79;
        uint64_t v80 = *((void *)v7 + 5);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        *((void *)v6 + 5) = v80;
        *((_WORD *)v6 + 24) = *((_WORD *)v7 + 24);
        uint64_t v81 = *((void *)v7 + 8);
        *((void *)v6 + 7) = *((void *)v7 + 7);
        *((void *)v6 + 8) = v81;
        uint64_t v82 = *((void *)v7 + 10);
        *((void *)v6 + 9) = *((void *)v7 + 9);
        *((void *)v6 + 10) = v82;
        uint64_t v83 = *((void *)v7 + 12);
        *((void *)v6 + 11) = *((void *)v7 + 11);
        *((void *)v6 + 12) = v83;
        uint64_t v84 = *((void *)v7 + 14);
        *((void *)v6 + 13) = *((void *)v7 + 13);
        *((void *)v6 + 14) = v84;
        uint64_t v85 = *((void *)v7 + 16);
        *((void *)v6 + 15) = *((void *)v7 + 15);
        *((void *)v6 + 16) = v85;
        uint64_t v86 = *((void *)v7 + 18);
        *((void *)v6 + 17) = *((void *)v7 + 17);
        *((void *)v6 + 18) = v86;
        *((void *)v6 + 19) = *((void *)v7 + 19);
        uint64_t v336 = v7 + 160;
        unint64_t v313 = *((void *)v7 + 21);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v313 >= 2)
        {
          uint64_t v88 = v6 + 160;
          if (v313 != 2)
          {
            v6[160] = *v336;
            *((void *)v6 + 21) = v313;
            swift_bridgeObjectRetain();
            goto LABEL_77;
          }
          long long v87 = *(_OWORD *)v336;
        }
        else
        {
          long long v87 = *(_OWORD *)v336;
          uint64_t v88 = v6 + 160;
        }
        _OWORD *v88 = v87;
LABEL_77:
        char v308 = (int *)type metadata accessor for FormatPackage();
        uint64_t v229 = v308[23];
        uint64_t v230 = &v6[v229];
        uint64_t v231 = &v7[v229];
        uint64_t v232 = *(void *)&v7[v229 + 8];
        *(void *)uint64_t v230 = *(void *)&v7[v229];
        *((void *)v230 + 1) = v232;
        uint64_t v321 = type metadata accessor for FormatCompilerOptions(0);
        uint64_t v233 = *(int *)(v321 + 24);
        unsigned __int8 v299 = v230;
        uint64_t v234 = &v230[v233];
        __dstf = v231;
        uint64_t v235 = &v231[v233];
        uint64_t v236 = *((void *)v235 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v236 == 1)
        {
          long long v237 = *((_OWORD *)v235 + 1);
          *(_OWORD *)uint64_t v234 = *(_OWORD *)v235;
          *((_OWORD *)v234 + 1) = v237;
          *((_OWORD *)v234 + 2) = *((_OWORD *)v235 + 2);
        }
        else
        {
          *(void *)uint64_t v234 = *(void *)v235;
          *((void *)v234 + 1) = v236;
          uint64_t v238 = *((void *)v235 + 3);
          *((void *)v234 + 2) = *((void *)v235 + 2);
          *((void *)v234 + 3) = v238;
          uint64_t v239 = *((void *)v235 + 5);
          *((void *)v234 + 4) = *((void *)v235 + 4);
          *((void *)v234 + 5) = v239;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v240 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v241 = &v234[v240];
        int v242 = &v235[v240];
        uint64_t v243 = sub_1C1518CDC();
        uint64_t v244 = *(void *)(v243 - 8);
        uint64_t v331 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v244 + 48);
        uint64_t v295 = v244;
        if (v331(v242, 1, v243))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v241, v242, *(void *)(*(void *)(v245 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v244 + 16))(v241, v242, v243);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v244 + 56))(v241, 0, 1, v243);
        }
        uint64_t v246 = v243;
        uint64_t v247 = v321;
        uint64_t v248 = *(int *)(v321 + 28);
        uint64_t v249 = v299;
        uint64_t v250 = (char *)v299 + v248;
        unint64_t v251 = &__dstf[v248];
        uint64_t v322 = v246;
        if (v331(&__dstf[v248], 1, v246))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v250, v251, *(void *)(*(void *)(v252 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v250, v251, v322);
          uint64_t v249 = v299;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v295 + 56))(v250, 0, 1, v322);
        }
        *(void *)((char *)v249 + *(int *)(v247 + 32)) = *(void *)&__dstf[*(int *)(v247 + 32)];
        uint64_t v253 = v308[24];
        uint64_t v254 = &v6[v253];
        __dstm = &v7[v253];
        uint64_t v255 = sub_1C151928C();
        uint64_t v256 = *(void (**)(char *, char *, uint64_t))(*(void *)(v255 - 8) + 16);
        swift_bridgeObjectRetain();
        v256(v254, __dstm, v255);
        uint64_t v257 = v308[25];
        long long v258 = &v6[v257];
        uint64_t v259 = &v7[v257];
        if (v331(&v7[v257], 1, v322))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v258, v259, *(void *)(*(void *)(v260 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v258, v259, v322);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v295 + 56))(v258, 0, 1, v322);
        }
LABEL_71:
        swift_storeEnumTagMultiPayload();
        sub_1C0913D20();
        uint64_t v221 = *(int *)(v220 + 48);
        long long v222 = *(void **)&v7[v221];
        id v223 = v222;
        *(void *)&v6[v221] = v222;
        break;
      case 6u:
        uint64_t v89 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v89;
        *((void *)v6 + 2) = *((void *)v7 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_71;
      case 7u:
        *(void *)uint64_t v6 = *(void *)v7;
        swift_retain();
        goto LABEL_71;
      case 8u:
        uint64_t v90 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v90;
        uint64_t v91 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v91;
        uint64_t v92 = *((void *)v7 + 5);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        *((void *)v6 + 5) = v92;
        uint64_t v93 = *((void *)v7 + 7);
        *((void *)v6 + 6) = *((void *)v7 + 6);
        *((void *)v6 + 7) = v93;
        *((void *)v6 + 8) = *((void *)v7 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_71;
      case 9u:
        uint64_t v94 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v94;
        uint64_t v95 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v95;
        uint64_t v96 = *((void *)v7 + 5);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        *((void *)v6 + 5) = v96;
        uint64_t v97 = *((void *)v7 + 7);
        *((void *)v6 + 6) = *((void *)v7 + 6);
        *((void *)v6 + 7) = v97;
        uint64_t v98 = *((void *)v7 + 9);
        *((void *)v6 + 8) = *((void *)v7 + 8);
        *((void *)v6 + 9) = v98;
        v6[80] = v7[80];
        __dstuint64_t i = (void *)*((void *)v7 + 12);
        *((void *)v6 + 11) = *((void *)v7 + 11);
        *((void *)v6 + 12) = __dsti;
        v6[104] = v7[104];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_71;
      case 0xAu:
        uint64_t v99 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v99;
        uint64_t v100 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v100;
        uint64_t v314 = *((void *)v7 + 5);
        uint64_t v326 = *((void *)v7 + 4);
        uint64_t v101 = *((void *)v7 + 7);
        uint64_t v304 = *((void *)v7 + 6);
        uint64_t v102 = *((void *)v7 + 9);
        uint64_t v337 = *((void *)v7 + 8);
        __dstj = v3;
        unsigned __int8 v103 = v7[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v326, v314, v304, v101, v337, v102, v103);
        *((void *)v6 + 4) = v326;
        *((void *)v6 + 5) = v314;
        *((void *)v6 + 6) = v304;
        *((void *)v6 + 7) = v101;
        *((void *)v6 + 8) = v337;
        *((void *)v6 + 9) = v102;
        v6[80] = v103;
        int v3 = __dstj;
        goto LABEL_71;
      case 0xBu:
        uint64_t v104 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v104;
        uint64_t v105 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v105;
        uint64_t v106 = *((void *)v7 + 5);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        *((void *)v6 + 5) = v106;
        uint64_t v107 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v108 = &v6[v107];
        uint64_t v109 = &v7[v107];
        uint64_t v110 = *(void *)&v7[v107 + 8];
        *(void *)uint64_t v108 = *(void *)&v7[v107];
        *((void *)v108 + 1) = v110;
        char v111 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v112 = v111[5];
        unsigned __int8 v315 = &v109[v112];
        unint64_t v327 = &v108[v112];
        uint64_t v113 = sub_1C151631C();
        uint64_t v305 = *(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v305(v327, v315, v113);
        uint64_t v114 = v111[6];
        uint64_t v115 = &v108[v114];
        uint64_t v116 = &v109[v114];
        uint64_t v117 = *((void *)v116 + 1);
        *(void *)uint64_t v115 = *(void *)v116;
        *((void *)v115 + 1) = v117;
        uint64_t v118 = v111[7];
        uint64_t v119 = &v108[v118];
        uint64_t v120 = &v109[v118];
        uint64_t v328 = *((void *)v120 + 1);
        *(void *)uint64_t v119 = *(void *)v120;
        *((void *)v119 + 1) = v328;
        uint64_t v121 = v111[8];
        uint64_t v122 = &v108[v121];
        uint64_t v123 = &v109[v121];
        uint64_t v316 = *((void *)v123 + 1);
        *(void *)uint64_t v122 = *(void *)v123;
        *((void *)v122 + 1) = v316;
        uint64_t v124 = v111[9];
        uint64_t v125 = &v108[v124];
        uint64_t v126 = &v109[v124];
        uint64_t v306 = *((void *)v126 + 1);
        *(void *)uint64_t v125 = *(void *)v126;
        *((void *)v125 + 1) = v306;
        uint64_t v127 = v111[10];
        unsigned __int8 v338 = &v108[v127];
        __dstc = &v109[v127];
        uint64_t v128 = sub_1C151D6DC();
        uint64_t v294 = *(void *)(v128 - 8);
        uint64_t v297 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v294 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v297(__dstc, 1, v128))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(v338, __dstc, *(void *)(*(void *)(v129 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v294 + 16))(v338, __dstc, v128);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v294 + 56))(v338, 0, 1, v128);
        }
        *(void *)&v108[v111[11]] = *(void *)&v109[v111[11]];
        *(void *)&v108[v111[12]] = *(void *)&v109[v111[12]];
        *(void *)&v108[v111[13]] = *(void *)&v109[v111[13]];
        *(void *)&v108[v111[14]] = *(void *)&v109[v111[14]];
        *(void *)&v108[v111[15]] = *(void *)&v109[v111[15]];
        *(void *)&v108[v111[16]] = *(void *)&v109[v111[16]];
        *(void *)&v108[v111[17]] = *(void *)&v109[v111[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_65;
      default:
        uint64_t v11 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v11;
        uint64_t v12 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v13 = v12[5];
        uint64_t v14 = &v6[v13];
        __dstg = &v7[v13];
        uint64_t v15 = sub_1C151631C();
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v14, __dstg, v15);
        uint64_t v17 = v12[6];
        id v18 = &v6[v17];
        uint64_t v19 = &v7[v17];
        uint64_t v334 = *((void *)v19 + 1);
        *(void *)id v18 = *(void *)v19;
        *((void *)v18 + 1) = v334;
        uint64_t v20 = v12[7];
        uint64_t v21 = &v6[v20];
        uint64_t v22 = &v7[v20];
        uint64_t v324 = *((void *)v22 + 1);
        *(void *)uint64_t v21 = *(void *)v22;
        *((void *)v21 + 1) = v324;
        uint64_t v23 = v12[8];
        uint64_t v24 = &v6[v23];
        uint64_t v25 = &v7[v23];
        uint64_t v26 = *((void *)v25 + 1);
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = v26;
        uint64_t v27 = v12[9];
        uint64_t v28 = &v6[v27];
        uint64_t v29 = &v7[v27];
        uint64_t v30 = *((void *)v29 + 1);
        *(void *)uint64_t v28 = *(void *)v29;
        *((void *)v28 + 1) = v30;
        uint64_t v31 = v12[10];
        __dst = &v6[v31];
        uint64_t v32 = &v7[v31];
        uint64_t v33 = sub_1C151D6DC();
        uint64_t v301 = *(void *)(v33 - 8);
        int v310 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v301 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v310(v32, 1, v33))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dst, v32, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v301 + 16))(__dst, v32, v33);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v301 + 56))(__dst, 0, 1, v33);
        }
        *(void *)&v6[v12[11]] = *(void *)&v7[v12[11]];
        *(void *)&v6[v12[12]] = *(void *)&v7[v12[12]];
        *(void *)&v6[v12[13]] = *(void *)&v7[v12[13]];
        *(void *)&v6[v12[14]] = *(void *)&v7[v12[14]];
        *(void *)&v6[v12[15]] = *(void *)&v7[v12[15]];
        *(void *)&v6[v12[16]] = *(void *)&v7[v12[16]];
        *(void *)&v6[v12[17]] = *(void *)&v7[v12[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_65:
        swift_bridgeObjectRetain();
LABEL_70:
        swift_bridgeObjectRetain();
        goto LABEL_71;
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = *(void *)v7;
    id v10 = *(id *)v7;
    *(void *)uint64_t v6 = v9;
  }
  else
  {
    type metadata accessor for FormatFile();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v130 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v130;
        uint64_t v131 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v131;
        uint64_t v132 = *((void *)v7 + 5);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        *((void *)v6 + 5) = v132;
        uint64_t v133 = *((void *)v7 + 7);
        *((void *)v6 + 6) = *((void *)v7 + 6);
        *((void *)v6 + 7) = v133;
        uint64_t v134 = *((void *)v7 + 8);
        v6[72] = v7[72];
        *((void *)v6 + 8) = v134;
        uint64_t v135 = *((void *)v7 + 11);
        *((void *)v6 + 10) = *((void *)v7 + 10);
        *((void *)v6 + 11) = v135;
        __dstd = v7 + 96;
        unsigned __int8 v317 = v7[106];
        int v136 = *((unsigned __int16 *)v7 + 52);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v317 == 255)
        {
          *((void *)v6 + 12) = *(void *)__dstd;
          *(_DWORD *)(v6 + 103) = *(_DWORD *)(__dstd + 7);
        }
        else
        {
          uint64_t v212 = v136 & 0xFF00FFFF | (v317 << 16);
          uint64_t v213 = *(void *)__dstd;
          sub_1BFFA742C(*(void *)__dstd, v212, SBYTE2(v212), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          *((void *)v6 + 12) = v213;
          *((_WORD *)v6 + 52) = v212;
          v6[106] = BYTE2(v212);
        }
        goto LABEL_75;
      case 2u:
        uint64_t v137 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v137;
        uint64_t v138 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v138;
        uint64_t v139 = *((void *)v7 + 5);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        *((void *)v6 + 5) = v139;
        v6[48] = v7[48];
        *((void *)v6 + 7) = *((void *)v7 + 7);
        long long v140 = v7 + 64;
        unint64_t v141 = *((void *)v7 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v141 <= 2)
        {
          *((_OWORD *)v6 + 4) = *v140;
        }
        else
        {
          v6[64] = *(unsigned char *)v140;
          *((void *)v6 + 9) = v141;
          swift_bridgeObjectRetain();
        }
        uint64_t v224 = *((void *)v7 + 11);
        *((void *)v6 + 10) = *((void *)v7 + 10);
        *((void *)v6 + 11) = v224;
        uint64_t v225 = *((void *)v7 + 13);
        *((void *)v6 + 12) = *((void *)v7 + 12);
        *((void *)v6 + 13) = v225;
        uint64_t v226 = *((void *)v7 + 15);
        *((void *)v6 + 14) = *((void *)v7 + 14);
        *((void *)v6 + 15) = v226;
        v6[128] = v7[128];
        *((void *)v6 + 17) = *((void *)v7 + 17);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_73;
      case 3u:
        uint64_t v142 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v142;
        uint64_t v143 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v143;
        uint64_t v144 = *((void *)v7 + 5);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        *((void *)v6 + 5) = v144;
        uint64_t v145 = v7 + 48;
        unint64_t v146 = *((void *)v7 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v146 >= 0xF)
        {
          *((void *)v6 + 6) = *v145;
          *((void *)v6 + 7) = v146;
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)v6 + 3) = *(_OWORD *)v145;
        }
        uint64_t v214 = *((void *)v7 + 9);
        *((void *)v6 + 8) = *((void *)v7 + 8);
        *((void *)v6 + 9) = v214;
        uint64_t v215 = *((void *)v7 + 11);
        *((void *)v6 + 10) = *((void *)v7 + 10);
        *((void *)v6 + 11) = v215;
        uint64_t v216 = *((void *)v7 + 13);
        *((void *)v6 + 12) = *((void *)v7 + 12);
        *((void *)v6 + 13) = v216;
        *((void *)v6 + 14) = *((void *)v7 + 14);
        v6[120] = v7[120];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_74;
      case 4u:
        uint64_t v147 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v147;
        uint64_t v148 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v148;
        uint64_t v149 = *((void *)v7 + 5);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        *((void *)v6 + 5) = v149;
        *((void *)v6 + 6) = *((void *)v7 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 5u:
        uint64_t v150 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v150;
        uint64_t v151 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v151;
        uint64_t v152 = *((void *)v7 + 5);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        *((void *)v6 + 5) = v152;
        *((_WORD *)v6 + 24) = *((_WORD *)v7 + 24);
        uint64_t v153 = *((void *)v7 + 8);
        *((void *)v6 + 7) = *((void *)v7 + 7);
        *((void *)v6 + 8) = v153;
        uint64_t v154 = *((void *)v7 + 10);
        *((void *)v6 + 9) = *((void *)v7 + 9);
        *((void *)v6 + 10) = v154;
        uint64_t v155 = *((void *)v7 + 12);
        *((void *)v6 + 11) = *((void *)v7 + 11);
        *((void *)v6 + 12) = v155;
        uint64_t v156 = *((void *)v7 + 14);
        *((void *)v6 + 13) = *((void *)v7 + 13);
        *((void *)v6 + 14) = v156;
        uint64_t v157 = *((void *)v7 + 16);
        *((void *)v6 + 15) = *((void *)v7 + 15);
        *((void *)v6 + 16) = v157;
        uint64_t v158 = *((void *)v7 + 18);
        *((void *)v6 + 17) = *((void *)v7 + 17);
        *((void *)v6 + 18) = v158;
        *((void *)v6 + 19) = *((void *)v7 + 19);
        uint64_t v339 = v7 + 160;
        unint64_t v318 = *((void *)v7 + 21);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v318 >= 2)
        {
          uint64_t v160 = v6 + 160;
          if (v318 != 2)
          {
            v6[160] = *v339;
            *((void *)v6 + 21) = v318;
            swift_bridgeObjectRetain();
            goto LABEL_89;
          }
          long long v159 = *(_OWORD *)v339;
        }
        else
        {
          long long v159 = *(_OWORD *)v339;
          uint64_t v160 = v6 + 160;
        }
        *uint64_t v160 = v159;
LABEL_89:
        uint64_t v309 = (int *)type metadata accessor for FormatPackage();
        uint64_t v261 = v309[23];
        uint64_t v262 = &v6[v261];
        uint64_t v263 = &v7[v261];
        uint64_t v264 = *(void *)&v7[v261 + 8];
        *(void *)uint64_t v262 = *(void *)&v7[v261];
        *((void *)v262 + 1) = v264;
        uint64_t v296 = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v265 = v296[6];
        uint64_t v323 = v263;
        uint64_t v332 = v262;
        uint64_t v266 = &v262[v265];
        uint64_t v267 = &v263[v265];
        uint64_t v268 = *((void *)v267 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v268 == 1)
        {
          long long v269 = *((_OWORD *)v267 + 1);
          *(_OWORD *)uint64_t v266 = *(_OWORD *)v267;
          *((_OWORD *)v266 + 1) = v269;
          *((_OWORD *)v266 + 2) = *((_OWORD *)v267 + 2);
        }
        else
        {
          *(void *)uint64_t v266 = *(void *)v267;
          *((void *)v266 + 1) = v268;
          uint64_t v270 = *((void *)v267 + 3);
          *((void *)v266 + 2) = *((void *)v267 + 2);
          *((void *)v266 + 3) = v270;
          uint64_t v271 = *((void *)v267 + 5);
          *((void *)v266 + 4) = *((void *)v267 + 4);
          *((void *)v266 + 5) = v271;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v272 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v273 = &v266[v272];
        uint64_t v274 = &v267[v272];
        uint64_t v275 = sub_1C1518CDC();
        uint64_t v276 = *(void *)(v275 - 8);
        unint64_t v341 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v276 + 48);
        uint64_t v293 = v276;
        if (v341(v274, 1, v275))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v273, v274, *(void *)(*(void *)(v277 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v276 + 16))(v273, v274, v275);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v276 + 56))(v273, 0, 1, v275);
        }
        uint64_t v278 = v275;
        uint64_t v279 = v323;
        uint64_t v280 = v296[7];
        uint64_t v281 = (char *)v332 + v280;
        long long v282 = &v323[v280];
        uint64_t v283 = v278;
        uint64_t v300 = v278;
        if (((unsigned int (*)(char *, uint64_t))v341)(&v323[v280], 1))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v281, v282, *(void *)(*(void *)(v284 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v293 + 16))(v281, v282, v283);
          uint64_t v279 = v323;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v293 + 56))(v281, 0, 1, v283);
        }
        *(void *)((char *)v332 + v296[8]) = *(void *)&v279[v296[8]];
        uint64_t v285 = v309[24];
        uint64_t v286 = &v6[v285];
        uint64_t v333 = &v7[v285];
        uint64_t v287 = sub_1C151928C();
        uint64_t v288 = *(void (**)(char *, char *, uint64_t))(*(void *)(v287 - 8) + 16);
        swift_bridgeObjectRetain();
        v288(v286, v333, v287);
        uint64_t v289 = v309[25];
        uint64_t v290 = &v6[v289];
        uint64_t v291 = &v7[v289];
        if (v341(v291, 1, v300))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v290, v291, *(void *)(*(void *)(v292 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v293 + 16))(v290, v291, v300);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v293 + 56))(v290, 0, 1, v300);
        }
LABEL_75:
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v194 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v194;
        *((void *)v6 + 2) = *((void *)v7 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_75;
      case 7u:
        *(void *)uint64_t v6 = *(void *)v7;
        swift_retain();
        goto LABEL_75;
      case 8u:
        uint64_t v195 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v195;
        uint64_t v196 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v196;
        uint64_t v197 = *((void *)v7 + 5);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        *((void *)v6 + 5) = v197;
        uint64_t v198 = *((void *)v7 + 7);
        *((void *)v6 + 6) = *((void *)v7 + 6);
        *((void *)v6 + 7) = v198;
        *((void *)v6 + 8) = *((void *)v7 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_43:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_75;
      case 9u:
        uint64_t v161 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v161;
        uint64_t v162 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v162;
        uint64_t v163 = *((void *)v7 + 5);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        *((void *)v6 + 5) = v163;
        uint64_t v164 = *((void *)v7 + 7);
        *((void *)v6 + 6) = *((void *)v7 + 6);
        *((void *)v6 + 7) = v164;
        uint64_t v165 = *((void *)v7 + 9);
        *((void *)v6 + 8) = *((void *)v7 + 8);
        *((void *)v6 + 9) = v165;
        v6[80] = v7[80];
        __dstk = (void *)*((void *)v7 + 12);
        *((void *)v6 + 11) = *((void *)v7 + 11);
        *((void *)v6 + 12) = __dstk;
        v6[104] = v7[104];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_75;
      case 0xAu:
        uint64_t v199 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v199;
        uint64_t v200 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v200;
        uint64_t v201 = *((void *)v7 + 4);
        uint64_t v202 = *((void *)v7 + 5);
        uint64_t v203 = *((void *)v7 + 6);
        uint64_t v204 = *((void *)v7 + 7);
        uint64_t v205 = *((void *)v7 + 8);
        __dstl = (void *)*((void *)v7 + 9);
        unsigned __int8 v206 = v7[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v201, v202, v203, v204, v205, (uint64_t)__dstl, v206);
        *((void *)v6 + 4) = v201;
        *((void *)v6 + 5) = v202;
        *((void *)v6 + 6) = v203;
        *((void *)v6 + 7) = v204;
        *((void *)v6 + 8) = v205;
        *((void *)v6 + 9) = __dstl;
        v6[80] = v206;
        goto LABEL_75;
      case 0xBu:
        uint64_t v166 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v166;
        uint64_t v167 = *((void *)v7 + 3);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = v167;
        uint64_t v168 = *((void *)v7 + 5);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        *((void *)v6 + 5) = v168;
        uint64_t v169 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v170 = &v6[v169];
        uint64_t v171 = &v7[v169];
        uint64_t v172 = *(void *)&v7[v169 + 8];
        *(void *)uint64_t v170 = *(void *)&v7[v169];
        *((void *)v170 + 1) = v172;
        uint64_t v173 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v174 = v173[5];
        uint64_t v319 = &v171[v174];
        uint64_t v329 = &v170[v174];
        uint64_t v175 = sub_1C151631C();
        uint64_t v176 = *(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v176(v329, v319, v175);
        uint64_t v177 = v173[6];
        uint64_t v178 = &v170[v177];
        uint64_t v179 = &v171[v177];
        uint64_t v180 = *((void *)v179 + 1);
        *(void *)uint64_t v178 = *(void *)v179;
        *((void *)v178 + 1) = v180;
        uint64_t v181 = v173[7];
        uint64_t v182 = &v170[v181];
        uint64_t v183 = &v171[v181];
        uint64_t v340 = *((void *)v183 + 1);
        *(void *)uint64_t v182 = *(void *)v183;
        *((void *)v182 + 1) = v340;
        uint64_t v184 = v173[8];
        long long v185 = &v170[v184];
        uint64_t v186 = &v171[v184];
        uint64_t v330 = *((void *)v186 + 1);
        *(void *)long long v185 = *(void *)v186;
        *((void *)v185 + 1) = v330;
        uint64_t v187 = v173[9];
        uint64_t v188 = &v170[v187];
        uint64_t v189 = &v171[v187];
        uint64_t v320 = *((void *)v189 + 1);
        *(void *)uint64_t v188 = *(void *)v189;
        *((void *)v188 + 1) = v320;
        uint64_t v190 = v173[10];
        __dste = &v170[v190];
        uint64_t v191 = &v171[v190];
        uint64_t v192 = sub_1C151D6DC();
        uint64_t v298 = *(void *)(v192 - 8);
        int v307 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v298 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v307(v191, 1, v192))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dste, v191, *(void *)(*(void *)(v193 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v298 + 16))(__dste, v191, v192);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v298 + 56))(__dste, 0, 1, v192);
        }
        *(void *)&v170[v173[11]] = *(void *)&v171[v173[11]];
        *(void *)&v170[v173[12]] = *(void *)&v171[v173[12]];
        *(void *)&v170[v173[13]] = *(void *)&v171[v173[13]];
        *(void *)&v170[v173[14]] = *(void *)&v171[v173[14]];
        *(void *)&v170[v173[15]] = *(void *)&v171[v173[15]];
        *(void *)&v170[v173[16]] = *(void *)&v171[v173[16]];
        *(void *)&v170[v173[17]] = *(void *)&v171[v173[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_73;
      default:
        uint64_t v35 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v35;
        uint64_t v36 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v37 = v36[5];
        uint64_t v38 = &v6[v37];
        __dsth = &v7[v37];
        uint64_t v39 = sub_1C151631C();
        uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        v40(v38, __dsth, v39);
        uint64_t v41 = v36[6];
        uint64_t v42 = &v6[v41];
        uint64_t v43 = &v7[v41];
        uint64_t v335 = *((void *)v43 + 1);
        *(void *)uint64_t v42 = *(void *)v43;
        *((void *)v42 + 1) = v335;
        uint64_t v44 = v36[7];
        uint64_t v45 = &v6[v44];
        uint64_t v46 = &v7[v44];
        uint64_t v325 = *((void *)v46 + 1);
        *(void *)uint64_t v45 = *(void *)v46;
        *((void *)v45 + 1) = v325;
        uint64_t v47 = v36[8];
        uint64_t v48 = &v6[v47];
        uint64_t v49 = &v7[v47];
        uint64_t v50 = *((void *)v49 + 1);
        *(void *)uint64_t v48 = *(void *)v49;
        *((void *)v48 + 1) = v50;
        uint64_t v51 = v36[9];
        uint64_t v52 = &v6[v51];
        uint64_t v53 = &v7[v51];
        uint64_t v54 = *((void *)v53 + 1);
        *(void *)uint64_t v52 = *(void *)v53;
        *((void *)v52 + 1) = v54;
        uint64_t v55 = v36[10];
        __dsta = &v6[v55];
        uint64_t v56 = &v7[v55];
        uint64_t v57 = sub_1C151D6DC();
        uint64_t v302 = *(void *)(v57 - 8);
        unint64_t v311 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v302 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v311(v56, 1, v57))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dsta, v56, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v302 + 16))(__dsta, v56, v57);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v302 + 56))(__dsta, 0, 1, v57);
        }
        *(void *)&v6[v36[11]] = *(void *)&v7[v36[11]];
        *(void *)&v6[v36[12]] = *(void *)&v7[v36[12]];
        *(void *)&v6[v36[13]] = *(void *)&v7[v36[13]];
        *(void *)&v6[v36[14]] = *(void *)&v7[v36[14]];
        *(void *)&v6[v36[15]] = *(void *)&v7[v36[15]];
        *(void *)&v6[v36[16]] = *(void *)&v7[v36[16]];
        *(void *)&v6[v36[17]] = *(void *)&v7[v36[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_73:
        swift_bridgeObjectRetain();
LABEL_74:
        swift_bridgeObjectRetain();
        goto LABEL_75;
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v227 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)v3 + a3[6]);
  *(void *)((char *)a1 + v227) = *(void *)((char *)v3 + v227);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)v3 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C1159B0C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1C115E870((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultOutput);
    type metadata accessor for DebugFormatCompilerResultOutput();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      type metadata accessor for FormatFile();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *((void *)v7 + 5) = *((void *)v8 + 5);
          *((void *)v7 + 6) = *((void *)v8 + 6);
          *((void *)v7 + 7) = *((void *)v8 + 7);
          uint64_t v50 = *((void *)v8 + 8);
          v7[72] = v8[72];
          *((void *)v7 + 8) = v50;
          *((void *)v7 + 10) = *((void *)v8 + 10);
          *((void *)v7 + 11) = *((void *)v8 + 11);
          __dstb = (uint64_t *)(v8 + 96);
          int v195 = *((unsigned __int16 *)v8 + 52);
          unsigned __int8 v186 = v8[106];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v186 == 255)
          {
            uint64_t v51 = *__dstb;
            *(_DWORD *)(v7 + 103) = *(_DWORD *)(v8 + 103);
            *((void *)v7 + 12) = v51;
          }
          else
          {
            unsigned int v108 = v195 & 0xFF00FFFF | (v186 << 16);
            uint64_t v109 = *__dstb;
            sub_1BFFA742C(*__dstb, v108, SBYTE2(v108), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
            *((void *)v7 + 12) = v109;
            *((_WORD *)v7 + 52) = v195;
            v7[106] = BYTE2(v108);
          }
          goto LABEL_77;
        case 2u:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *((void *)v7 + 5) = *((void *)v8 + 5);
          v7[48] = v8[48];
          *((void *)v7 + 7) = *((void *)v8 + 7);
          __dstc = v7 + 64;
          unint64_t v52 = *((void *)v8 + 9);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v52 >= 2)
          {
            if (v52 == 2)
            {
              _OWORD *__dstc = *((_OWORD *)v8 + 4);
            }
            else
            {
              v7[64] = v8[64];
              *((void *)v7 + 9) = *((void *)v8 + 9);
              swift_bridgeObjectRetain();
            }
          }
          else
          {
            _OWORD *__dstc = *((_OWORD *)v8 + 4);
          }
          *((void *)v7 + 10) = *((void *)v8 + 10);
          *((void *)v7 + 11) = *((void *)v8 + 11);
          *((void *)v7 + 12) = *((void *)v8 + 12);
          *((void *)v7 + 13) = *((void *)v8 + 13);
          *((void *)v7 + 14) = *((void *)v8 + 14);
          *((void *)v7 + 15) = *((void *)v8 + 15);
          v7[128] = v8[128];
          *((void *)v7 + 17) = *((void *)v8 + 17);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_75;
        case 3u:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *((void *)v7 + 5) = *((void *)v8 + 5);
          unint64_t v53 = *((void *)v8 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v53 >= 0xF)
          {
            *((void *)v7 + 6) = *((void *)v8 + 6);
            *((void *)v7 + 7) = *((void *)v8 + 7);
            swift_bridgeObjectRetain();
          }
          else
          {
            *((_OWORD *)v7 + 3) = *((_OWORD *)v8 + 3);
          }
          *((void *)v7 + 8) = *((void *)v8 + 8);
          *((void *)v7 + 9) = *((void *)v8 + 9);
          *((void *)v7 + 10) = *((void *)v8 + 10);
          *((void *)v7 + 11) = *((void *)v8 + 11);
          *((void *)v7 + 12) = *((void *)v8 + 12);
          *((void *)v7 + 13) = *((void *)v8 + 13);
          *((void *)v7 + 14) = *((void *)v8 + 14);
          v7[120] = v8[120];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
LABEL_75:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_76;
        case 4u:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *((void *)v7 + 5) = *((void *)v8 + 5);
          *((void *)v7 + 6) = *((void *)v8 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_77;
        case 5u:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *((void *)v7 + 5) = *((void *)v8 + 5);
          v7[48] = v8[48];
          v7[49] = v8[49];
          *((void *)v7 + 7) = *((void *)v8 + 7);
          *((void *)v7 + 8) = *((void *)v8 + 8);
          *((void *)v7 + 9) = *((void *)v8 + 9);
          *((void *)v7 + 10) = *((void *)v8 + 10);
          *((void *)v7 + 11) = *((void *)v8 + 11);
          *((void *)v7 + 12) = *((void *)v8 + 12);
          *((void *)v7 + 13) = *((void *)v8 + 13);
          *((void *)v7 + 14) = *((void *)v8 + 14);
          *((void *)v7 + 15) = *((void *)v8 + 15);
          *((void *)v7 + 16) = *((void *)v8 + 16);
          *((void *)v7 + 17) = *((void *)v8 + 17);
          *((void *)v7 + 18) = *((void *)v8 + 18);
          *((void *)v7 + 19) = *((void *)v8 + 19);
          uint64_t v212 = (long long *)(v8 + 160);
          unint64_t v203 = *((void *)v8 + 21);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v203 >= 2)
          {
            uint64_t v55 = v7 + 160;
            if (v203 != 2)
            {
              v7[160] = v8[160];
              *((void *)v7 + 21) = *((void *)v8 + 21);
              swift_bridgeObjectRetain();
              goto LABEL_78;
            }
            long long v54 = *v212;
          }
          else
          {
            long long v54 = *v212;
            uint64_t v55 = v7 + 160;
          }
          *uint64_t v55 = v54;
LABEL_78:
          uint64_t v191 = (int *)type metadata accessor for FormatPackage();
          uint64_t v116 = v191[23];
          uint64_t v117 = &v7[v116];
          uint64_t v118 = &v8[v116];
          *(void *)uint64_t v117 = *(void *)&v8[v116];
          *((void *)v117 + 1) = *(void *)&v8[v116 + 8];
          uint64_t v217 = (int *)type metadata accessor for FormatCompilerOptions(0);
          __dsth = v118;
          uint64_t v119 = v217[6];
          uint64_t v182 = v117;
          uint64_t v120 = &v117[v119];
          uint64_t v121 = &v118[v119];
          uint64_t v122 = *((void *)v121 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v122 == 1)
          {
            long long v123 = *(_OWORD *)v121;
            long long v124 = *((_OWORD *)v121 + 2);
            *((_OWORD *)v120 + 1) = *((_OWORD *)v121 + 1);
            *((_OWORD *)v120 + 2) = v124;
            *(_OWORD *)uint64_t v120 = v123;
          }
          else
          {
            *(void *)uint64_t v120 = *(void *)v121;
            *((void *)v120 + 1) = *((void *)v121 + 1);
            *((void *)v120 + 2) = *((void *)v121 + 2);
            *((void *)v120 + 3) = *((void *)v121 + 3);
            *((void *)v120 + 4) = *((void *)v121 + 4);
            *((void *)v120 + 5) = *((void *)v121 + 5);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          uint64_t v125 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          uint64_t v126 = &v120[v125];
          uint64_t v127 = &v121[v125];
          uint64_t v128 = sub_1C1518CDC();
          uint64_t v129 = *(void *)(v128 - 8);
          uint64_t v201 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48);
          uint64_t v172 = v129;
          if (v201(v127, 1, v128))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v126, v127, *(void *)(*(void *)(v130 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v126, v127, v128);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v129 + 56))(v126, 0, 1, v128);
          }
          uint64_t v131 = v217[7];
          uint64_t v132 = v182;
          uint64_t v133 = (char *)v182 + v131;
          uint64_t v134 = &__dsth[v131];
          if (v201(&__dsth[v131], 1, v128))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v133, v134, *(void *)(*(void *)(v135 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v133, v134, v128);
            uint64_t v132 = v182;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v172 + 56))(v133, 0, 1, v128);
          }
          *(void *)((char *)v132 + v217[8]) = *(void *)&__dsth[v217[8]];
          uint64_t v136 = v191[24];
          uint64_t v218 = &v8[v136];
          __dstn = &v7[v136];
          uint64_t v137 = sub_1C151928C();
          uint64_t v138 = *(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16);
          swift_bridgeObjectRetain();
          v138(__dstn, v218, v137);
          uint64_t v139 = v191[25];
          long long v140 = &v7[v139];
          unint64_t v141 = &v8[v139];
          if (v201(&v8[v139], 1, v128))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v140, v141, *(void *)(*(void *)(v142 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v140, v141, v128);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v172 + 56))(v140, 0, 1, v128);
          }
LABEL_77:
          swift_storeEnumTagMultiPayload();
          sub_1C0913D20();
          uint64_t v113 = *(int *)(v112 + 48);
          uint64_t v114 = *(void **)&v8[v113];
          id v115 = v114;
          *(void *)&v7[v113] = v114;
          break;
        case 6u:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_77;
        case 7u:
          *(void *)uint64_t v7 = *(void *)v8;
          swift_retain();
          goto LABEL_77;
        case 8u:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *((void *)v7 + 5) = *((void *)v8 + 5);
          *((void *)v7 + 6) = *((void *)v8 + 6);
          *((void *)v7 + 7) = *((void *)v8 + 7);
          *((void *)v7 + 8) = *((void *)v8 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_77;
        case 9u:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *((void *)v7 + 5) = *((void *)v8 + 5);
          *((void *)v7 + 6) = *((void *)v8 + 6);
          *((void *)v7 + 7) = *((void *)v8 + 7);
          *((void *)v7 + 8) = *((void *)v8 + 8);
          *((void *)v7 + 9) = *((void *)v8 + 9);
          v7[80] = v8[80];
          *((void *)v7 + 11) = *((void *)v8 + 11);
          *((void *)v7 + 12) = *((void *)v8 + 12);
          v7[104] = v8[104];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_77;
        case 0xAu:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          uint64_t v187 = *((void *)v8 + 5);
          uint64_t v196 = *((void *)v8 + 4);
          uint64_t v178 = *((void *)v8 + 6);
          __dstl = (void *)*((void *)v8 + 7);
          uint64_t v56 = *((void *)v8 + 9);
          uint64_t v204 = *((void *)v8 + 8);
          unsigned __int8 v213 = v8[80];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF1DB64(v196, v187, v178, (uint64_t)__dstl, v204, v56, v213);
          *((void *)v7 + 4) = v196;
          *((void *)v7 + 5) = v187;
          *((void *)v7 + 6) = v178;
          *((void *)v7 + 7) = __dstl;
          *((void *)v7 + 8) = v204;
          *((void *)v7 + 9) = v56;
          v7[80] = v213;
          goto LABEL_77;
        case 0xBu:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *((void *)v7 + 5) = *((void *)v8 + 5);
          uint64_t v57 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
          uint64_t v58 = &v7[v57];
          uint64_t v59 = &v8[v57];
          *(void *)uint64_t v58 = *(void *)&v8[v57];
          *((void *)v58 + 1) = *(void *)&v8[v57 + 8];
          uint64_t v60 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v61 = v60[5];
          uint64_t v188 = &v59[v61];
          uint64_t v197 = &v58[v61];
          uint64_t v62 = sub_1C151631C();
          uint64_t v179 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v179(v197, v188, v62);
          uint64_t v63 = v60[6];
          uint64_t v64 = &v58[v63];
          uint64_t v65 = &v59[v63];
          *(void *)uint64_t v64 = *(void *)v65;
          *((void *)v64 + 1) = *((void *)v65 + 1);
          uint64_t v66 = v60[7];
          uint64_t v67 = &v58[v66];
          uint64_t v68 = &v59[v66];
          *(void *)uint64_t v67 = *(void *)v68;
          uint64_t v205 = v60;
          *((void *)v67 + 1) = *((void *)v68 + 1);
          uint64_t v69 = v60[8];
          uint64_t v70 = &v58[v69];
          uint64_t v71 = &v59[v69];
          *(void *)uint64_t v70 = *(void *)v71;
          *((void *)v70 + 1) = *((void *)v71 + 1);
          uint64_t v72 = v60[9];
          uint64_t v73 = &v58[v72];
          unint64_t v74 = &v59[v72];
          *(void *)uint64_t v73 = *(void *)v74;
          *((void *)v73 + 1) = *((void *)v74 + 1);
          uint64_t v75 = v60[10];
          __dstd = &v58[v75];
          uint64_t v76 = &v59[v75];
          uint64_t v77 = sub_1C151D6DC();
          uint64_t v171 = *(void *)(v77 - 8);
          uint64_t v174 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v174(v76, 1, v77))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dstd, v76, *(void *)(*(void *)(v78 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v171 + 16))(__dstd, v76, v77);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v171 + 56))(__dstd, 0, 1, v77);
          }
          *(void *)&v58[v205[11]] = *(void *)&v59[v205[11]];
          *(void *)&v58[v205[12]] = *(void *)&v59[v205[12]];
          *(void *)&v58[v205[13]] = *(void *)&v59[v205[13]];
          *(void *)&v58[v205[14]] = *(void *)&v59[v205[14]];
          *(void *)&v58[v205[15]] = *(void *)&v59[v205[15]];
          *(void *)&v58[v205[16]] = *(void *)&v59[v205[16]];
          *(void *)&v58[v205[17]] = *(void *)&v59[v205[17]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_70;
        default:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          uint64_t v12 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v13 = v12[5];
          uint64_t v210 = &v8[v13];
          __dstj = &v7[v13];
          uint64_t v14 = sub_1C151631C();
          uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
          swift_bridgeObjectRetain();
          v15(__dstj, v210, v14);
          uint64_t v16 = v12[6];
          uint64_t v17 = &v7[v16];
          id v18 = &v8[v16];
          *(void *)uint64_t v17 = *(void *)v18;
          *((void *)v17 + 1) = *((void *)v18 + 1);
          uint64_t v19 = v12[7];
          uint64_t v20 = &v7[v19];
          uint64_t v21 = &v8[v19];
          *(void *)uint64_t v20 = *(void *)v21;
          *((void *)v20 + 1) = *((void *)v21 + 1);
          uint64_t v22 = v12[8];
          uint64_t v23 = &v7[v22];
          uint64_t v24 = &v8[v22];
          *(void *)uint64_t v23 = *(void *)v24;
          *((void *)v23 + 1) = *((void *)v24 + 1);
          uint64_t v25 = v12[9];
          uint64_t v26 = &v7[v25];
          uint64_t v27 = &v8[v25];
          *(void *)uint64_t v26 = *(void *)v27;
          *((void *)v26 + 1) = *((void *)v27 + 1);
          uint64_t v28 = v12[10];
          __dst = &v7[v28];
          uint64_t v193 = &v8[v28];
          uint64_t v29 = sub_1C151D6DC();
          uint64_t v176 = *(void *)(v29 - 8);
          uint64_t v184 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v184(v193, 1, v29))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dst, v193, *(void *)(*(void *)(v30 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v176 + 16))(__dst, v193, v29);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v176 + 56))(__dst, 0, 1, v29);
          }
          *(void *)&v7[v12[11]] = *(void *)&v8[v12[11]];
          *(void *)&v7[v12[12]] = *(void *)&v8[v12[12]];
          *(void *)&v7[v12[13]] = *(void *)&v8[v12[13]];
          *(void *)&v7[v12[14]] = *(void *)&v8[v12[14]];
          *(void *)&v7[v12[15]] = *(void *)&v8[v12[15]];
          *(void *)&v7[v12[16]] = *(void *)&v8[v12[16]];
          *(void *)&v7[v12[17]] = *(void *)&v8[v12[17]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_70:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_76:
          swift_bridgeObjectRetain();
          goto LABEL_77;
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = *(void *)v8;
      id v11 = *(id *)v8;
      *(void *)uint64_t v7 = v10;
    }
    else
    {
      type metadata accessor for FormatFile();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *((void *)v7 + 5) = *((void *)v8 + 5);
          *((void *)v7 + 6) = *((void *)v8 + 6);
          *((void *)v7 + 7) = *((void *)v8 + 7);
          uint64_t v79 = *((void *)v8 + 8);
          v7[72] = v8[72];
          *((void *)v7 + 8) = v79;
          *((void *)v7 + 10) = *((void *)v8 + 10);
          *((void *)v7 + 11) = *((void *)v8 + 11);
          __dste = v8 + 96;
          LOWORD(v79) = v8[106];
          int v80 = *((unsigned __int16 *)v8 + 52);
          unsigned __int8 v198 = v79;
          unsigned int v206 = (unsigned __int16)v79;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v206 <= 0xFE)
          {
            uint64_t v110 = v80 & 0xFF00FFFF | (v198 << 16);
            uint64_t v111 = *(void *)__dste;
            sub_1BFFA742C(*(void *)__dste, v110, SBYTE2(v110), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
            *((void *)v7 + 12) = v111;
            *((_WORD *)v7 + 52) = v110;
            v7[106] = BYTE2(v110);
          }
          else
          {
            uint64_t v81 = *(void *)__dste;
            *(_DWORD *)(v7 + 103) = *(_DWORD *)(__dste + 7);
            *((void *)v7 + 12) = v81;
          }
          goto LABEL_93;
        case 2u:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *((void *)v7 + 5) = *((void *)v8 + 5);
          v7[48] = v8[48];
          *((void *)v7 + 7) = *((void *)v8 + 7);
          __dstf = v7 + 64;
          unint64_t v82 = *((void *)v8 + 9);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v82 >= 2)
          {
            if (v82 == 2)
            {
              _OWORD *__dstf = *((_OWORD *)v8 + 4);
            }
            else
            {
              v7[64] = v8[64];
              *((void *)v7 + 9) = *((void *)v8 + 9);
              swift_bridgeObjectRetain();
            }
          }
          else
          {
            _OWORD *__dstf = *((_OWORD *)v8 + 4);
          }
          *((void *)v7 + 10) = *((void *)v8 + 10);
          *((void *)v7 + 11) = *((void *)v8 + 11);
          *((void *)v7 + 12) = *((void *)v8 + 12);
          *((void *)v7 + 13) = *((void *)v8 + 13);
          *((void *)v7 + 14) = *((void *)v8 + 14);
          *((void *)v7 + 15) = *((void *)v8 + 15);
          v7[128] = v8[128];
          *((void *)v7 + 17) = *((void *)v8 + 17);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_91;
        case 3u:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *((void *)v7 + 5) = *((void *)v8 + 5);
          unint64_t v83 = *((void *)v8 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v83 >= 0xF)
          {
            *((void *)v7 + 6) = *((void *)v8 + 6);
            *((void *)v7 + 7) = *((void *)v8 + 7);
            swift_bridgeObjectRetain();
          }
          else
          {
            *((_OWORD *)v7 + 3) = *((_OWORD *)v8 + 3);
          }
          *((void *)v7 + 8) = *((void *)v8 + 8);
          *((void *)v7 + 9) = *((void *)v8 + 9);
          *((void *)v7 + 10) = *((void *)v8 + 10);
          *((void *)v7 + 11) = *((void *)v8 + 11);
          *((void *)v7 + 12) = *((void *)v8 + 12);
          *((void *)v7 + 13) = *((void *)v8 + 13);
          *((void *)v7 + 14) = *((void *)v8 + 14);
          v7[120] = v8[120];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_92;
        case 4u:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *((void *)v7 + 5) = *((void *)v8 + 5);
          *((void *)v7 + 6) = *((void *)v8 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_42;
        case 5u:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *((void *)v7 + 5) = *((void *)v8 + 5);
          v7[48] = v8[48];
          v7[49] = v8[49];
          *((void *)v7 + 7) = *((void *)v8 + 7);
          *((void *)v7 + 8) = *((void *)v8 + 8);
          *((void *)v7 + 9) = *((void *)v8 + 9);
          *((void *)v7 + 10) = *((void *)v8 + 10);
          *((void *)v7 + 11) = *((void *)v8 + 11);
          *((void *)v7 + 12) = *((void *)v8 + 12);
          *((void *)v7 + 13) = *((void *)v8 + 13);
          *((void *)v7 + 14) = *((void *)v8 + 14);
          *((void *)v7 + 15) = *((void *)v8 + 15);
          *((void *)v7 + 16) = *((void *)v8 + 16);
          *((void *)v7 + 17) = *((void *)v8 + 17);
          *((void *)v7 + 18) = *((void *)v8 + 18);
          *((void *)v7 + 19) = *((void *)v8 + 19);
          uint64_t v214 = (long long *)(v8 + 160);
          unint64_t v207 = *((void *)v8 + 21);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v207 >= 2)
          {
            uint64_t v85 = v7 + 160;
            if (v207 != 2)
            {
              v7[160] = v8[160];
              *((void *)v7 + 21) = *((void *)v8 + 21);
              swift_bridgeObjectRetain();
              goto LABEL_96;
            }
            long long v84 = *v214;
          }
          else
          {
            long long v84 = *v214;
            uint64_t v85 = v7 + 160;
          }
          *uint64_t v85 = v84;
LABEL_96:
          uint64_t v192 = (int *)type metadata accessor for FormatPackage();
          uint64_t v144 = v192[23];
          uint64_t v145 = &v7[v144];
          unint64_t v146 = &v8[v144];
          *(void *)uint64_t v145 = *(void *)&v8[v144];
          *((void *)v145 + 1) = *(void *)&v8[v144 + 8];
          uint64_t v219 = (int *)type metadata accessor for FormatCompilerOptions(0);
          __dstuint64_t i = v146;
          uint64_t v147 = v219[6];
          uint64_t v183 = v145;
          uint64_t v148 = &v145[v147];
          uint64_t v149 = &v146[v147];
          uint64_t v150 = *((void *)v149 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v150 == 1)
          {
            long long v151 = *(_OWORD *)v149;
            long long v152 = *((_OWORD *)v149 + 2);
            *((_OWORD *)v148 + 1) = *((_OWORD *)v149 + 1);
            *((_OWORD *)v148 + 2) = v152;
            *(_OWORD *)uint64_t v148 = v151;
          }
          else
          {
            *(void *)uint64_t v148 = *(void *)v149;
            *((void *)v148 + 1) = *((void *)v149 + 1);
            *((void *)v148 + 2) = *((void *)v149 + 2);
            *((void *)v148 + 3) = *((void *)v149 + 3);
            *((void *)v148 + 4) = *((void *)v149 + 4);
            *((void *)v148 + 5) = *((void *)v149 + 5);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          uint64_t v153 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          uint64_t v154 = &v148[v153];
          uint64_t v155 = &v149[v153];
          uint64_t v156 = sub_1C1518CDC();
          uint64_t v157 = *(void *)(v156 - 8);
          uint64_t v202 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48);
          uint64_t v173 = v157;
          if (v202(v155, 1, v156))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v154, v155, *(void *)(*(void *)(v158 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v154, v155, v156);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v154, 0, 1, v156);
          }
          long long v159 = v183;
          uint64_t v160 = v219[7];
          uint64_t v161 = (char *)v183 + v160;
          uint64_t v162 = &__dsti[v160];
          if (v202(&__dsti[v160], 1, v156))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v161, v162, *(void *)(*(void *)(v163 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v161, v162, v156);
            long long v159 = v183;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v173 + 56))(v161, 0, 1, v156);
          }
          *(void *)((char *)v159 + v219[8]) = *(void *)&__dsti[v219[8]];
          uint64_t v164 = v192[24];
          uint64_t v220 = &v8[v164];
          __dsto = &v7[v164];
          uint64_t v165 = sub_1C151928C();
          uint64_t v166 = *(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 16);
          swift_bridgeObjectRetain();
          v166(__dsto, v220, v165);
          uint64_t v167 = v192[25];
          uint64_t v168 = &v7[v167];
          uint64_t v169 = &v8[v167];
          if (v202(v169, 1, v156))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v168, v169, *(void *)(*(void *)(v170 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v168, v169, v156);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v173 + 56))(v168, 0, 1, v156);
          }
LABEL_93:
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_93;
        case 7u:
          *(void *)uint64_t v7 = *(void *)v8;
          swift_retain();
          goto LABEL_93;
        case 8u:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *((void *)v7 + 5) = *((void *)v8 + 5);
          *((void *)v7 + 6) = *((void *)v8 + 6);
          *((void *)v7 + 7) = *((void *)v8 + 7);
          *((void *)v7 + 8) = *((void *)v8 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_42:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_93;
        case 9u:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *((void *)v7 + 5) = *((void *)v8 + 5);
          *((void *)v7 + 6) = *((void *)v8 + 6);
          *((void *)v7 + 7) = *((void *)v8 + 7);
          *((void *)v7 + 8) = *((void *)v8 + 8);
          *((void *)v7 + 9) = *((void *)v8 + 9);
          v7[80] = v8[80];
          *((void *)v7 + 11) = *((void *)v8 + 11);
          *((void *)v7 + 12) = *((void *)v8 + 12);
          v7[104] = v8[104];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_93;
        case 0xAu:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          uint64_t v190 = *((void *)v8 + 5);
          uint64_t v200 = *((void *)v8 + 4);
          uint64_t v181 = *((void *)v8 + 6);
          uint64_t v216 = *((void *)v8 + 8);
          __dstm = (void *)*((void *)v8 + 7);
          uint64_t v209 = *((void *)v8 + 9);
          unsigned __int8 v107 = v8[80];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF1DB64(v200, v190, v181, (uint64_t)__dstm, v216, v209, v107);
          *((void *)v7 + 4) = v200;
          *((void *)v7 + 5) = v190;
          *((void *)v7 + 6) = v181;
          *((void *)v7 + 7) = __dstm;
          *((void *)v7 + 8) = v216;
          *((void *)v7 + 9) = v209;
          v7[80] = v107;
          goto LABEL_93;
        case 0xBu:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *((void *)v7 + 5) = *((void *)v8 + 5);
          uint64_t v86 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
          long long v87 = &v7[v86];
          uint64_t v88 = &v8[v86];
          *(void *)long long v87 = *(void *)&v8[v86];
          *((void *)v87 + 1) = *(void *)&v8[v86 + 8];
          uint64_t v89 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v90 = v89[5];
          uint64_t v199 = &v88[v90];
          uint64_t v208 = &v87[v90];
          uint64_t v91 = sub_1C151631C();
          uint64_t v189 = *(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v189(v208, v199, v91);
          uint64_t v92 = v89[6];
          uint64_t v93 = &v87[v92];
          uint64_t v94 = &v88[v92];
          *(void *)uint64_t v93 = *(void *)v94;
          *((void *)v93 + 1) = *((void *)v94 + 1);
          uint64_t v95 = v89[7];
          uint64_t v96 = &v87[v95];
          uint64_t v97 = &v88[v95];
          *(void *)uint64_t v96 = *(void *)v97;
          *((void *)v96 + 1) = *((void *)v97 + 1);
          uint64_t v98 = v89[8];
          uint64_t v99 = &v87[v98];
          uint64_t v100 = &v88[v98];
          *(void *)uint64_t v99 = *(void *)v100;
          *((void *)v99 + 1) = *((void *)v100 + 1);
          uint64_t v101 = v89[9];
          uint64_t v102 = &v87[v101];
          unsigned __int8 v103 = &v88[v101];
          *(void *)uint64_t v102 = *(void *)v103;
          *((void *)v102 + 1) = *((void *)v103 + 1);
          uint64_t v104 = v89[10];
          uint64_t v215 = &v87[v104];
          __dstg = &v88[v104];
          uint64_t v105 = sub_1C151D6DC();
          uint64_t v175 = *(void *)(v105 - 8);
          uint64_t v180 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v175 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v180(__dstg, 1, v105))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(v215, __dstg, *(void *)(*(void *)(v106 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v175 + 16))(v215, __dstg, v105);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v175 + 56))(v215, 0, 1, v105);
          }
          *(void *)&v87[v89[11]] = *(void *)&v88[v89[11]];
          *(void *)&v87[v89[12]] = *(void *)&v88[v89[12]];
          *(void *)&v87[v89[13]] = *(void *)&v88[v89[13]];
          *(void *)&v87[v89[14]] = *(void *)&v88[v89[14]];
          *(void *)&v87[v89[15]] = *(void *)&v88[v89[15]];
          *(void *)&v87[v89[16]] = *(void *)&v88[v89[16]];
          *(void *)&v87[v89[17]] = *(void *)&v88[v89[17]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_73;
        default:
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          uint64_t v31 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v32 = v31[5];
          uint64_t v211 = &v8[v32];
          __dstk = &v7[v32];
          uint64_t v33 = sub_1C151631C();
          uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          v34(__dstk, v211, v33);
          uint64_t v35 = v31[6];
          uint64_t v36 = &v7[v35];
          uint64_t v37 = &v8[v35];
          *(void *)uint64_t v36 = *(void *)v37;
          *((void *)v36 + 1) = *((void *)v37 + 1);
          uint64_t v38 = v31[7];
          uint64_t v39 = &v7[v38];
          uint64_t v40 = &v8[v38];
          *(void *)uint64_t v39 = *(void *)v40;
          *((void *)v39 + 1) = *((void *)v40 + 1);
          uint64_t v41 = v31[8];
          uint64_t v42 = &v7[v41];
          uint64_t v43 = &v8[v41];
          *(void *)uint64_t v42 = *(void *)v43;
          *((void *)v42 + 1) = *((void *)v43 + 1);
          uint64_t v44 = v31[9];
          uint64_t v45 = &v7[v44];
          uint64_t v46 = &v8[v44];
          *(void *)uint64_t v45 = *(void *)v46;
          *((void *)v45 + 1) = *((void *)v46 + 1);
          uint64_t v47 = v31[10];
          __dsta = &v7[v47];
          uint64_t v194 = &v8[v47];
          uint64_t v48 = sub_1C151D6DC();
          uint64_t v177 = *(void *)(v48 - 8);
          long long v185 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v185(v194, 1, v48))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dsta, v194, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v177 + 16))(__dsta, v194, v48);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v177 + 56))(__dsta, 0, 1, v48);
          }
          *(void *)&v7[v31[11]] = *(void *)&v8[v31[11]];
          *(void *)&v7[v31[12]] = *(void *)&v8[v31[12]];
          *(void *)&v7[v31[13]] = *(void *)&v8[v31[13]];
          *(void *)&v7[v31[14]] = *(void *)&v8[v31[14]];
          *(void *)&v7[v31[15]] = *(void *)&v8[v31[15]];
          *(void *)&v7[v31[16]] = *(void *)&v8[v31[16]];
          *(void *)&v7[v31[17]] = *(void *)&v8[v31[17]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_73:
          swift_bridgeObjectRetain();
LABEL_91:
          swift_bridgeObjectRetain();
LABEL_92:
          swift_bridgeObjectRetain();
          goto LABEL_93;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

void *sub_1C115C018(void *a1, void *a2, int *a3)
{
  int v3 = a3;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DebugFormatCompilerResultOutput();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v24 = type metadata accessor for FormatFile();
    int v25 = swift_getEnumCaseMultiPayload();
    if (v25 == 11)
    {
      uint64_t v128 = v3;
      long long v65 = *((_OWORD *)v8 + 1);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *((_OWORD *)v7 + 1) = v65;
      *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
      uint64_t v66 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      uint64_t v67 = &v7[v66];
      uint64_t v68 = &v8[v66];
      *(_OWORD *)&v7[v66] = *(_OWORD *)&v8[v66];
      uint64_t v69 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v70 = v69[5];
      uint64_t v71 = &v67[v70];
      uint64_t v72 = &v68[v70];
      uint64_t v73 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
      *(_OWORD *)&v67[v69[6]] = *(_OWORD *)&v68[v69[6]];
      *(_OWORD *)&v67[v69[7]] = *(_OWORD *)&v68[v69[7]];
      *(_OWORD *)&v67[v69[8]] = *(_OWORD *)&v68[v69[8]];
      *(_OWORD *)&v67[v69[9]] = *(_OWORD *)&v68[v69[9]];
      uint64_t v74 = v69[10];
      __dstb = &v67[v74];
      uint64_t v75 = &v68[v74];
      uint64_t v76 = sub_1C151D6DC();
      uint64_t v77 = *(void *)(v76 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(__dstb, v75, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 32))(__dstb, v75, v76);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(__dstb, 0, 1, v76);
      }
      *(void *)&v67[v69[11]] = *(void *)&v68[v69[11]];
      *(void *)&v67[v69[12]] = *(void *)&v68[v69[12]];
      *(void *)&v67[v69[13]] = *(void *)&v68[v69[13]];
      *(void *)&v67[v69[14]] = *(void *)&v68[v69[14]];
      *(void *)&v67[v69[15]] = *(void *)&v68[v69[15]];
      *(void *)&v67[v69[16]] = *(void *)&v68[v69[16]];
      *(void *)&v67[v69[17]] = *(void *)&v68[v69[17]];
      swift_storeEnumTagMultiPayload();
      int v3 = v128;
      goto LABEL_48;
    }
    if (v25 == 5)
    {
      long long v79 = *((_OWORD *)v8 + 1);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *((_OWORD *)v7 + 1) = v79;
      *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
      *((_WORD *)v7 + 24) = *((_WORD *)v8 + 24);
      *(_OWORD *)(v7 + 56) = *(_OWORD *)(v8 + 56);
      *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
      *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
      *(_OWORD *)(v7 + 104) = *(_OWORD *)(v8 + 104);
      *(_OWORD *)(v7 + 120) = *(_OWORD *)(v8 + 120);
      *(_OWORD *)(v7 + 136) = *(_OWORD *)(v8 + 136);
      *((void *)v7 + 19) = *((void *)v8 + 19);
      *((_OWORD *)v7 + 10) = *((_OWORD *)v8 + 10);
      long long v123 = (int *)type metadata accessor for FormatPackage();
      uint64_t v80 = v123[23];
      uint64_t v81 = &v7[v80];
      unint64_t v82 = &v8[v80];
      *(_OWORD *)&v7[v80] = *(_OWORD *)&v8[v80];
      uint64_t v130 = (int *)type metadata accessor for FormatCompilerOptions(0);
      __dstc = v82;
      uint64_t v83 = v130[6];
      uint64_t v125 = v81;
      long long v84 = &v81[v83];
      uint64_t v85 = &v82[v83];
      long long v86 = *((_OWORD *)v85 + 1);
      *(_OWORD *)long long v84 = *(_OWORD *)v85;
      *((_OWORD *)v84 + 1) = v86;
      *((_OWORD *)v84 + 2) = *((_OWORD *)v85 + 2);
      uint64_t v87 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v88 = &v84[v87];
      uint64_t v89 = &v85[v87];
      uint64_t v90 = sub_1C1518CDC();
      uint64_t v91 = *(void *)(v90 - 8);
      uint64_t v127 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48);
      if (v127(v89, 1, v90))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v88, v89, *(void *)(*(void *)(v92 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v88, v89, v90);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
      }
      uint64_t v98 = v130[7];
      uint64_t v99 = v125;
      uint64_t v100 = &v125[v98];
      uint64_t v101 = &__dstc[v98];
      if (v127(&__dstc[v98], 1, v90))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v100, v101, v90);
        uint64_t v99 = v125;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v100, 0, 1, v90);
      }
      *(void *)&v99[v130[8]] = *(void *)&__dstc[v130[8]];
      uint64_t v111 = v123[24];
      uint64_t v112 = &v7[v111];
      uint64_t v113 = &v8[v111];
      uint64_t v114 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
      uint64_t v115 = v123[25];
      uint64_t v116 = &v7[v115];
      uint64_t v117 = &v8[v115];
      if (v127(&v8[v115], 1, v90))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v116, v117, *(void *)(*(void *)(v118 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v116, v117, v90);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v116, 0, 1, v90);
      }
    }
    else
    {
      if (v25)
      {
        memcpy(v7, v8, *(void *)(*(void *)(v24 - 8) + 64));
LABEL_48:
        sub_1C0913D20();
        *(void *)&v7[*(int *)(v119 + 48)] = *(void *)&v8[*(int *)(v119 + 48)];
        goto LABEL_49;
      }
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      uint64_t v26 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v27 = v26[5];
      uint64_t v28 = &v7[v27];
      uint64_t v29 = &v8[v27];
      uint64_t v30 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      *(_OWORD *)&v7[v26[6]] = *(_OWORD *)&v8[v26[6]];
      *(_OWORD *)&v7[v26[7]] = *(_OWORD *)&v8[v26[7]];
      *(_OWORD *)&v7[v26[8]] = *(_OWORD *)&v8[v26[8]];
      *(_OWORD *)&v7[v26[9]] = *(_OWORD *)&v8[v26[9]];
      uint64_t v31 = v26[10];
      uint64_t v32 = &v7[v31];
      uint64_t v33 = &v8[v31];
      uint64_t v34 = sub_1C151D6DC();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      *(void *)&v7[v26[11]] = *(void *)&v8[v26[11]];
      *(void *)&v7[v26[12]] = *(void *)&v8[v26[12]];
      *(void *)&v7[v26[13]] = *(void *)&v8[v26[13]];
      *(void *)&v7[v26[14]] = *(void *)&v8[v26[14]];
      *(void *)&v7[v26[15]] = *(void *)&v8[v26[15]];
      *(void *)&v7[v26[16]] = *(void *)&v8[v26[16]];
      *(void *)&v7[v26[17]] = *(void *)&v8[v26[17]];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_48;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v11 = type metadata accessor for FormatFile();
    int v12 = swift_getEnumCaseMultiPayload();
    if (v12 == 11)
    {
      long long v37 = *((_OWORD *)v8 + 1);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *((_OWORD *)v7 + 1) = v37;
      *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
      uint64_t v38 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      uint64_t v39 = &v7[v38];
      uint64_t v40 = &v8[v38];
      *(_OWORD *)&v7[v38] = *(_OWORD *)&v8[v38];
      uint64_t v41 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v42 = v41[5];
      uint64_t v43 = &v39[v42];
      uint64_t v44 = &v40[v42];
      uint64_t v45 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
      *(_OWORD *)&v39[v41[6]] = *(_OWORD *)&v40[v41[6]];
      *(_OWORD *)&v39[v41[7]] = *(_OWORD *)&v40[v41[7]];
      *(_OWORD *)&v39[v41[8]] = *(_OWORD *)&v40[v41[8]];
      *(_OWORD *)&v39[v41[9]] = *(_OWORD *)&v40[v41[9]];
      uint64_t v46 = v41[10];
      __dst = &v39[v46];
      uint64_t v47 = &v40[v46];
      uint64_t v48 = sub_1C151D6DC();
      uint64_t v49 = *(void *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(__dst, v47, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(__dst, v47, v48);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(__dst, 0, 1, v48);
      }
      *(void *)&v39[v41[11]] = *(void *)&v40[v41[11]];
      *(void *)&v39[v41[12]] = *(void *)&v40[v41[12]];
      *(void *)&v39[v41[13]] = *(void *)&v40[v41[13]];
      *(void *)&v39[v41[14]] = *(void *)&v40[v41[14]];
      *(void *)&v39[v41[15]] = *(void *)&v40[v41[15]];
      *(void *)&v39[v41[16]] = *(void *)&v40[v41[16]];
      *(void *)&v39[v41[17]] = *(void *)&v40[v41[17]];
      swift_storeEnumTagMultiPayload();
      goto LABEL_49;
    }
    if (v12 == 5)
    {
      long long v51 = *((_OWORD *)v8 + 1);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *((_OWORD *)v7 + 1) = v51;
      *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
      *((_WORD *)v7 + 24) = *((_WORD *)v8 + 24);
      *(_OWORD *)(v7 + 56) = *(_OWORD *)(v8 + 56);
      *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
      *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
      *(_OWORD *)(v7 + 104) = *(_OWORD *)(v8 + 104);
      *(_OWORD *)(v7 + 120) = *(_OWORD *)(v8 + 120);
      *(_OWORD *)(v7 + 136) = *(_OWORD *)(v8 + 136);
      *((void *)v7 + 19) = *((void *)v8 + 19);
      *((_OWORD *)v7 + 10) = *((_OWORD *)v8 + 10);
      uint64_t v122 = (int *)type metadata accessor for FormatPackage();
      uint64_t v52 = v122[23];
      unint64_t v53 = &v7[v52];
      long long v54 = &v8[v52];
      *(_OWORD *)&v7[v52] = *(_OWORD *)&v8[v52];
      uint64_t v129 = (int *)type metadata accessor for FormatCompilerOptions(0);
      __dsta = v54;
      uint64_t v55 = v129[6];
      long long v124 = v53;
      uint64_t v56 = &v53[v55];
      uint64_t v57 = &v54[v55];
      long long v58 = *((_OWORD *)v57 + 1);
      *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v58;
      *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
      uint64_t v59 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v60 = &v56[v59];
      uint64_t v61 = &v57[v59];
      uint64_t v62 = sub_1C1518CDC();
      uint64_t v63 = *(void *)(v62 - 8);
      uint64_t v126 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
      if (v126(v61, 1, v62))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v60, v61, v62);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      }
      uint64_t v93 = v129[7];
      uint64_t v94 = v124;
      uint64_t v95 = &v124[v93];
      uint64_t v96 = &__dsta[v93];
      if (v126(&__dsta[v93], 1, v62))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v95, v96, *(void *)(*(void *)(v97 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v95, v96, v62);
        uint64_t v94 = v124;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v95, 0, 1, v62);
      }
      *(void *)&v94[v129[8]] = *(void *)&__dsta[v129[8]];
      uint64_t v103 = v122[24];
      uint64_t v104 = &v7[v103];
      uint64_t v105 = &v8[v103];
      uint64_t v106 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 32))(v104, v105, v106);
      uint64_t v107 = v122[25];
      unsigned int v108 = &v7[v107];
      uint64_t v109 = &v8[v107];
      if (v126(v109, 1, v62))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v108, v109, *(void *)(*(void *)(v110 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v108, v109, v62);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v108, 0, 1, v62);
      }
    }
    else
    {
      if (v12)
      {
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_49:
        swift_storeEnumTagMultiPayload();
        goto LABEL_50;
      }
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      uint64_t v13 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v14 = v13[5];
      uint64_t v15 = &v7[v14];
      uint64_t v16 = &v8[v14];
      uint64_t v17 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      *(_OWORD *)&v7[v13[6]] = *(_OWORD *)&v8[v13[6]];
      *(_OWORD *)&v7[v13[7]] = *(_OWORD *)&v8[v13[7]];
      *(_OWORD *)&v7[v13[8]] = *(_OWORD *)&v8[v13[8]];
      *(_OWORD *)&v7[v13[9]] = *(_OWORD *)&v8[v13[9]];
      uint64_t v18 = v13[10];
      uint64_t v19 = &v7[v18];
      uint64_t v20 = &v8[v18];
      uint64_t v21 = sub_1C151D6DC();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      *(void *)&v7[v13[11]] = *(void *)&v8[v13[11]];
      *(void *)&v7[v13[12]] = *(void *)&v8[v13[12]];
      *(void *)&v7[v13[13]] = *(void *)&v8[v13[13]];
      *(void *)&v7[v13[14]] = *(void *)&v8[v13[14]];
      *(void *)&v7[v13[15]] = *(void *)&v8[v13[15]];
      *(void *)&v7[v13[16]] = *(void *)&v8[v13[16]];
      *(void *)&v7[v13[17]] = *(void *)&v8[v13[17]];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_49;
  }
  memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_50:
  uint64_t v120 = v3[7];
  *(void *)((char *)a1 + v3[6]) = *(void *)((char *)a2 + v3[6]);
  *(void *)((char *)a1 + v120) = *(void *)((char *)a2 + v120);
  *(void *)((char *)a1 + v3[8]) = *(void *)((char *)a2 + v3[8]);
  return a1;
}

void *sub_1C115D0F4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 == a2) {
    goto LABEL_51;
  }
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1C115E870((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultOutput);
  uint64_t v9 = type metadata accessor for DebugFormatCompilerResultOutput();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v24 = type metadata accessor for FormatFile();
    int v25 = swift_getEnumCaseMultiPayload();
    if (v25 == 11)
    {
      long long v65 = *((_OWORD *)v8 + 1);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *((_OWORD *)v7 + 1) = v65;
      *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
      uint64_t v66 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      uint64_t v67 = &v7[v66];
      uint64_t v68 = &v8[v66];
      *(_OWORD *)&v7[v66] = *(_OWORD *)&v8[v66];
      uint64_t v69 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v70 = v69[5];
      uint64_t v71 = &v67[v70];
      uint64_t v72 = &v68[v70];
      uint64_t v73 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
      *(_OWORD *)&v67[v69[6]] = *(_OWORD *)&v68[v69[6]];
      *(_OWORD *)&v67[v69[7]] = *(_OWORD *)&v68[v69[7]];
      *(_OWORD *)&v67[v69[8]] = *(_OWORD *)&v68[v69[8]];
      *(_OWORD *)&v67[v69[9]] = *(_OWORD *)&v68[v69[9]];
      uint64_t v74 = v69[10];
      __dstb = &v67[v74];
      uint64_t v75 = &v68[v74];
      uint64_t v76 = sub_1C151D6DC();
      uint64_t v126 = *(void *)(v76 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v75, 1, v76))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(__dstb, v75, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v126 + 32))(__dstb, v75, v76);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(__dstb, 0, 1, v76);
      }
      *(void *)&v67[v69[11]] = *(void *)&v68[v69[11]];
      *(void *)&v67[v69[12]] = *(void *)&v68[v69[12]];
      *(void *)&v67[v69[13]] = *(void *)&v68[v69[13]];
      *(void *)&v67[v69[14]] = *(void *)&v68[v69[14]];
      *(void *)&v67[v69[15]] = *(void *)&v68[v69[15]];
      *(void *)&v67[v69[16]] = *(void *)&v68[v69[16]];
      *(void *)&v67[v69[17]] = *(void *)&v68[v69[17]];
      swift_storeEnumTagMultiPayload();
      goto LABEL_49;
    }
    if (v25 == 5)
    {
      long long v78 = *((_OWORD *)v8 + 1);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *((_OWORD *)v7 + 1) = v78;
      *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
      *((_WORD *)v7 + 24) = *((_WORD *)v8 + 24);
      *(_OWORD *)(v7 + 56) = *(_OWORD *)(v8 + 56);
      *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
      *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
      *(_OWORD *)(v7 + 104) = *(_OWORD *)(v8 + 104);
      *(_OWORD *)(v7 + 120) = *(_OWORD *)(v8 + 120);
      *(_OWORD *)(v7 + 136) = *(_OWORD *)(v8 + 136);
      *((void *)v7 + 19) = *((void *)v8 + 19);
      *((_OWORD *)v7 + 10) = *((_OWORD *)v8 + 10);
      uint64_t v121 = (int *)type metadata accessor for FormatPackage();
      uint64_t v79 = v121[23];
      uint64_t v80 = &v7[v79];
      uint64_t v81 = &v8[v79];
      *(_OWORD *)&v7[v79] = *(_OWORD *)&v8[v79];
      uint64_t v128 = (int *)type metadata accessor for FormatCompilerOptions(0);
      __dstc = v81;
      uint64_t v82 = v128[6];
      long long v123 = v80;
      uint64_t v83 = &v80[v82];
      long long v84 = &v81[v82];
      long long v85 = *((_OWORD *)v84 + 1);
      *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
      *((_OWORD *)v83 + 1) = v85;
      *((_OWORD *)v83 + 2) = *((_OWORD *)v84 + 2);
      uint64_t v86 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v87 = &v83[v86];
      uint64_t v88 = &v84[v86];
      uint64_t v89 = sub_1C1518CDC();
      uint64_t v90 = *(void *)(v89 - 8);
      uint64_t v125 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
      if (v125(v88, 1, v89))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v87, v88, *(void *)(*(void *)(v91 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v87, v88, v89);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
      }
      uint64_t v97 = v128[7];
      uint64_t v98 = v123;
      uint64_t v99 = &v123[v97];
      uint64_t v100 = &__dstc[v97];
      if (v125(&__dstc[v97], 1, v89))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v99, v100, v89);
        uint64_t v98 = v123;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v99, 0, 1, v89);
      }
      *(void *)&v98[v128[8]] = *(void *)&__dstc[v128[8]];
      uint64_t v110 = v121[24];
      uint64_t v111 = &v7[v110];
      uint64_t v112 = &v8[v110];
      uint64_t v113 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(v111, v112, v113);
      uint64_t v114 = v121[25];
      uint64_t v115 = &v7[v114];
      uint64_t v116 = &v8[v114];
      if (v125(&v8[v114], 1, v89))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v115, v116, *(void *)(*(void *)(v117 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v115, v116, v89);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v115, 0, 1, v89);
      }
    }
    else
    {
      if (v25)
      {
        memcpy(v7, v8, *(void *)(*(void *)(v24 - 8) + 64));
LABEL_49:
        sub_1C0913D20();
        *(void *)&v7[*(int *)(v118 + 48)] = *(void *)&v8[*(int *)(v118 + 48)];
        goto LABEL_50;
      }
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      uint64_t v26 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v27 = v26[5];
      uint64_t v28 = &v7[v27];
      uint64_t v29 = &v8[v27];
      uint64_t v30 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      *(_OWORD *)&v7[v26[6]] = *(_OWORD *)&v8[v26[6]];
      *(_OWORD *)&v7[v26[7]] = *(_OWORD *)&v8[v26[7]];
      *(_OWORD *)&v7[v26[8]] = *(_OWORD *)&v8[v26[8]];
      *(_OWORD *)&v7[v26[9]] = *(_OWORD *)&v8[v26[9]];
      uint64_t v31 = v26[10];
      uint64_t v32 = &v7[v31];
      uint64_t v33 = &v8[v31];
      uint64_t v34 = sub_1C151D6DC();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      *(void *)&v7[v26[11]] = *(void *)&v8[v26[11]];
      *(void *)&v7[v26[12]] = *(void *)&v8[v26[12]];
      *(void *)&v7[v26[13]] = *(void *)&v8[v26[13]];
      *(void *)&v7[v26[14]] = *(void *)&v8[v26[14]];
      *(void *)&v7[v26[15]] = *(void *)&v8[v26[15]];
      *(void *)&v7[v26[16]] = *(void *)&v8[v26[16]];
      *(void *)&v7[v26[17]] = *(void *)&v8[v26[17]];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_49;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v11 = type metadata accessor for FormatFile();
    int v12 = swift_getEnumCaseMultiPayload();
    if (v12 == 11)
    {
      long long v37 = *((_OWORD *)v8 + 1);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *((_OWORD *)v7 + 1) = v37;
      *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
      uint64_t v38 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      uint64_t v39 = &v7[v38];
      uint64_t v40 = &v8[v38];
      *(_OWORD *)&v7[v38] = *(_OWORD *)&v8[v38];
      uint64_t v41 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v42 = v41[5];
      uint64_t v43 = &v39[v42];
      uint64_t v44 = &v40[v42];
      uint64_t v45 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
      *(_OWORD *)&v39[v41[6]] = *(_OWORD *)&v40[v41[6]];
      *(_OWORD *)&v39[v41[7]] = *(_OWORD *)&v40[v41[7]];
      *(_OWORD *)&v39[v41[8]] = *(_OWORD *)&v40[v41[8]];
      *(_OWORD *)&v39[v41[9]] = *(_OWORD *)&v40[v41[9]];
      uint64_t v46 = v41[10];
      __dst = &v39[v46];
      uint64_t v47 = &v40[v46];
      uint64_t v48 = sub_1C151D6DC();
      uint64_t v49 = *(void *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(__dst, v47, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(__dst, v47, v48);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(__dst, 0, 1, v48);
      }
      *(void *)&v39[v41[11]] = *(void *)&v40[v41[11]];
      *(void *)&v39[v41[12]] = *(void *)&v40[v41[12]];
      *(void *)&v39[v41[13]] = *(void *)&v40[v41[13]];
      *(void *)&v39[v41[14]] = *(void *)&v40[v41[14]];
      *(void *)&v39[v41[15]] = *(void *)&v40[v41[15]];
      *(void *)&v39[v41[16]] = *(void *)&v40[v41[16]];
      *(void *)&v39[v41[17]] = *(void *)&v40[v41[17]];
      swift_storeEnumTagMultiPayload();
      goto LABEL_50;
    }
    if (v12 == 5)
    {
      long long v51 = *((_OWORD *)v8 + 1);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *((_OWORD *)v7 + 1) = v51;
      *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
      *((_WORD *)v7 + 24) = *((_WORD *)v8 + 24);
      *(_OWORD *)(v7 + 56) = *(_OWORD *)(v8 + 56);
      *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
      *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
      *(_OWORD *)(v7 + 104) = *(_OWORD *)(v8 + 104);
      *(_OWORD *)(v7 + 120) = *(_OWORD *)(v8 + 120);
      *(_OWORD *)(v7 + 136) = *(_OWORD *)(v8 + 136);
      *((void *)v7 + 19) = *((void *)v8 + 19);
      *((_OWORD *)v7 + 10) = *((_OWORD *)v8 + 10);
      uint64_t v120 = (int *)type metadata accessor for FormatPackage();
      uint64_t v52 = v120[23];
      unint64_t v53 = &v7[v52];
      long long v54 = &v8[v52];
      *(_OWORD *)&v7[v52] = *(_OWORD *)&v8[v52];
      uint64_t v127 = (int *)type metadata accessor for FormatCompilerOptions(0);
      __dsta = v54;
      uint64_t v55 = v127[6];
      uint64_t v122 = v53;
      uint64_t v56 = &v53[v55];
      uint64_t v57 = &v54[v55];
      long long v58 = *((_OWORD *)v57 + 1);
      *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v58;
      *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
      uint64_t v59 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v60 = &v56[v59];
      uint64_t v61 = &v57[v59];
      uint64_t v62 = sub_1C1518CDC();
      uint64_t v63 = *(void *)(v62 - 8);
      long long v124 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
      if (v124(v61, 1, v62))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v60, v61, v62);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      }
      uint64_t v92 = v127[7];
      uint64_t v93 = v122;
      uint64_t v94 = &v122[v92];
      uint64_t v95 = &__dsta[v92];
      if (v124(&__dsta[v92], 1, v62))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v94, v95, v62);
        uint64_t v93 = v122;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v94, 0, 1, v62);
      }
      *(void *)&v93[v127[8]] = *(void *)&__dsta[v127[8]];
      uint64_t v102 = v120[24];
      uint64_t v103 = &v7[v102];
      uint64_t v104 = &v8[v102];
      uint64_t v105 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
      uint64_t v106 = v120[25];
      uint64_t v107 = &v7[v106];
      unsigned int v108 = &v8[v106];
      if (v124(v108, 1, v62))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v107, v108, v62);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v107, 0, 1, v62);
      }
    }
    else
    {
      if (v12)
      {
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_50:
        swift_storeEnumTagMultiPayload();
        goto LABEL_51;
      }
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      uint64_t v13 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v14 = v13[5];
      uint64_t v15 = &v7[v14];
      uint64_t v16 = &v8[v14];
      uint64_t v17 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      *(_OWORD *)&v7[v13[6]] = *(_OWORD *)&v8[v13[6]];
      *(_OWORD *)&v7[v13[7]] = *(_OWORD *)&v8[v13[7]];
      *(_OWORD *)&v7[v13[8]] = *(_OWORD *)&v8[v13[8]];
      *(_OWORD *)&v7[v13[9]] = *(_OWORD *)&v8[v13[9]];
      uint64_t v18 = v13[10];
      uint64_t v19 = &v7[v18];
      uint64_t v20 = &v8[v18];
      uint64_t v21 = sub_1C151D6DC();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      *(void *)&v7[v13[11]] = *(void *)&v8[v13[11]];
      *(void *)&v7[v13[12]] = *(void *)&v8[v13[12]];
      *(void *)&v7[v13[13]] = *(void *)&v8[v13[13]];
      *(void *)&v7[v13[14]] = *(void *)&v8[v13[14]];
      *(void *)&v7[v13[15]] = *(void *)&v8[v13[15]];
      *(void *)&v7[v13[16]] = *(void *)&v8[v13[16]];
      *(void *)&v7[v13[17]] = *(void *)&v8[v13[17]];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_50;
  }
  memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_51:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_1C115E204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C115E218);
}

uint64_t sub_1C115E218(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DebugFormatCompilerResultOutput();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C115E2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C115E2DC);
}

void *sub_1C115E2DC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DebugFormatCompilerResultOutput();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatCompilerResultEntry()
{
  uint64_t result = qword_1EA1ABE80;
  if (!qword_1EA1ABE80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C115E3D0()
{
  uint64_t result = type metadata accessor for DebugFormatCompilerResultOutput();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C115E488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>, double a5@<D0>)
{
  uint64_t v10 = type metadata accessor for DebugFormatCacheFile();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v43 = (uint64_t)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v37 - v14);
  *a4 = a1;
  uint64_t v16 = (int *)type metadata accessor for DebugFormatCompilerResultEntry();
  sub_1C115E808(a2, (uint64_t)a4 + v16[5], (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultOutput);
  *(void *)((char *)a4 + v16[6]) = a3;
  uint64_t v17 = *(void *)(a3 + 16);
  if (!v17)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v20 = (void *)MEMORY[0x1E4FBC868];
LABEL_18:
    swift_release();
    sub_1C115E870(a2, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultOutput);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)((char *)a4 + v16[7]) = v20;
    *(double *)((char *)a4 + v16[8]) = a5;
    return result;
  }
  uint64_t v38 = v16;
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  uint64_t v18 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v19 = *(void *)(v11 + 72);
  swift_bridgeObjectRetain_n();
  uint64_t v39 = a1;
  swift_retain();
  uint64_t v20 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    sub_1C115E808(v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    uint64_t v21 = *v15;
    uint64_t v22 = v15[1];
    sub_1C115E808((uint64_t)v15, v43, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = v20;
    unint64_t v25 = sub_1BFEF2D8C(v21, v22);
    uint64_t v26 = v20[2];
    BOOL v27 = (v24 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27)) {
      break;
    }
    char v29 = v24;
    if (v20[3] >= v28)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v20 = v44;
        if (v24) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1C107148C();
        uint64_t v20 = v44;
        if (v29) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1C105EC54(v28, isUniquelyReferenced_nonNull_native);
      unint64_t v30 = sub_1BFEF2D8C(v21, v22);
      if ((v29 & 1) != (v31 & 1)) {
        goto LABEL_21;
      }
      unint64_t v25 = v30;
      uint64_t v20 = v44;
      if (v29)
      {
LABEL_3:
        sub_1C10324A0(v43, v20[7] + v25 * v19);
        goto LABEL_4;
      }
    }
    v20[(v25 >> 6) + 8] |= 1 << v25;
    uint64_t v32 = (uint64_t *)(v20[6] + 16 * v25);
    uint64_t *v32 = v21;
    v32[1] = v22;
    sub_1C10782E4(v43, v20[7] + v25 * v19);
    uint64_t v33 = v20[2];
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_20;
    }
    _OWORD v20[2] = v35;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C115E870((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    v18 += v19;
    if (!--v17)
    {
      swift_bridgeObjectRelease();
      a4 = v42;
      a2 = v40;
      uint64_t v16 = v38;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C115E808(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C115E870(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t static FormatSlotItemSort.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C00EA9DC(*(void *)(*(void *)a1 + 16), *(void *)(*(void *)a2 + 16));
}

uint64_t FormatSlotItemSort.identifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    v11[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF661B8(0, v2, 0);
    uint64_t v3 = v11[0];
    uint64_t v4 = (uint64_t *)(v1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      v11[0] = v3;
      unint64_t v8 = *(void *)(v3 + 16);
      unint64_t v7 = *(void *)(v3 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
      {
        sub_1BFF661B8(v7 > 1, v8 + 1, 1);
        uint64_t v3 = v11[0];
      }
      v4 += 3;
      *(void *)(v3 + 16) = v8 + 1;
      uint64_t v9 = v3 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v11[0] = v3;
  swift_bridgeObjectRetain();
  sub_1BFD8BB48(v11);
  swift_bridgeObjectRelease();
  sub_1BFED9C20();
  sub_1BFE99E40();
  sub_1C151E55C();
  swift_release();
  v11[0] = 0x726F7463656C6573;
  v11[1] = 0xEA00000000002D73;
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v11[0];
}

uint64_t sub_1C115EA74@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatSlotItemSort.init(from:)(a1, a2);
}

uint64_t sub_1C115EA8C(void *a1)
{
  return FormatSlotItemSort.encode(to:)(a1);
}

uint64_t sub_1C115EAA4(uint64_t a1, uint64_t a2)
{
  return sub_1C00EA9DC(*(void *)(*(void *)a1 + 16), *(void *)(*(void *)a2 + 16));
}

unint64_t sub_1C115EABC(uint64_t a1)
{
  unint64_t result = sub_1C115EAE4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C115EAE4()
{
  unint64_t result = qword_1EA1ABE90;
  if (!qword_1EA1ABE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABE90);
  }
  return result;
}

unint64_t sub_1C115EB38(void *a1)
{
  a1[1] = sub_1C08B3BD4();
  a1[2] = sub_1C08F0210();
  unint64_t result = sub_1C115EB70();
  a1[3] = result;
  return result;
}

unint64_t sub_1C115EB70()
{
  unint64_t result = qword_1EA1ABE98;
  if (!qword_1EA1ABE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABE98);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotItemSort()
{
  return &type metadata for FormatSlotItemSort;
}

NewsFeed::PublisherLogoTheme_optional __swiftcall PublisherLogoTheme.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (NewsFeed::PublisherLogoTheme_optional)rawValue;
}

uint64_t PublisherLogoTheme.rawValue.getter()
{
  return *v0;
}

void *sub_1C115EBF8@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

BOOL static PublisherLogoProcessorOptions.BackgroundColorDriver.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PublisherLogoProcessorOptions.BackgroundColorDriver.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t PublisherLogoProcessorOptions.BackgroundColorDriver.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t PublisherLogoProcessorOptions.init(requestOptions:background:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = *a2;
  sub_1BFE4F1E8(a1, a3);
  uint64_t result = type metadata accessor for PublisherLogoProcessorOptions(0);
  *(unsigned char *)(a3 + *(int *)(result + 20)) = v4;
  return result;
}

uint64_t PublisherLogoProcessorRequest.cacheIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PublisherLogoProcessorRequest.assetHandles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PublisherLogoProcessorRequest.__allocating_init(publisherLogoAssetHandle:publisherLogoImageSize:scale:theme:isTransparentWhiteBackground:options:)(uint64_t a1, unsigned __int8 *a2, char a3, uint64_t a4, double a5, double a6, double a7)
{
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1(a1, v15);
  uint64_t v18 = sub_1C115F504(v17, a2, a3, a4, a5, a6, a7, v7, v15, v16);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v18;
}

uint64_t PublisherLogoProcessorRequest.init(publisherLogoAssetHandle:publisherLogoImageSize:scale:theme:isTransparentWhiteBackground:options:)(uint64_t a1, unsigned __int8 *a2, char a3, uint64_t a4, double a5, double a6, double a7)
{
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1(a1, v15);
  __n128 v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v21 + 16))(v20, v18);
  uint64_t v22 = sub_1C115EFC8((uint64_t)v20, a2, a3, a4, v7, v15, v16, a5, a6, a7);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v22;
}

uint64_t PublisherLogoProcessorRequest.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C115F640(v0 + OBJC_IVAR____TtC8NewsFeed29PublisherLogoProcessorRequest_options);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8NewsFeed29PublisherLogoProcessorRequest_assetHandle);
  return v0;
}

uint64_t PublisherLogoProcessorRequest.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C115F640(v0 + OBJC_IVAR____TtC8NewsFeed29PublisherLogoProcessorRequest_options);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8NewsFeed29PublisherLogoProcessorRequest_assetHandle);
  return swift_deallocClassInstance();
}

uint64_t sub_1C115EFBC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C115EFC8(uint64_t a1, unsigned __int8 *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10)
{
  uint64_t v20 = type metadata accessor for ImageRequestOptions();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (id *)((char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C006A7F4(0, &qword_1EB878E50, type metadata accessor for PublisherLogoProcessorOptions, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v23 - 8);
  unint64_t v25 = (char *)v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)v39 - v27;
  v45[3] = a6;
  v45[4] = a7;
  v39[1] = a7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v45);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_0, a1, a6);
  uint64_t v30 = *a2;
  sub_1BFC66384((uint64_t)v45, a5 + OBJC_IVAR____TtC8NewsFeed29PublisherLogoProcessorRequest_assetHandle);
  sub_1C006A7F4(0, (unint64_t *)&qword_1EB87A8A0, (uint64_t (*)(uint64_t))sub_1C0065520, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = 0xD000000000000015;
  *(void *)(inited + 40) = 0x80000001C1635D20;
  sub_1BFC66384((uint64_t)v45, inited + 48);
  *(void *)(a5 + 32) = sub_1BFF59AB8(inited);
  *(double *)(a5 + 40) = a8;
  *(double *)(a5 + 48) = a9;
  *(double *)(a5 + 56) = a10;
  v39[0] = v30;
  *(unsigned char *)(a5 + 64) = v30;
  *(unsigned char *)(a5 + 65) = a3;
  sub_1C1160384(a4, a5 + OBJC_IVAR____TtC8NewsFeed29PublisherLogoProcessorRequest_options);
  uint64_t v40 = a4;
  sub_1C1160384(a4, (uint64_t)v28);
  uint64_t v32 = type metadata accessor for PublisherLogoProcessorOptions(0);
  uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48);
  if (v33(v28, 1, v32) == 1)
  {
    sub_1C115F640((uint64_t)v28);
  }
  else
  {
    char v34 = v28[*(int *)(v32 + 20)];
    sub_1BFEE2FE0((uint64_t)v28, type metadata accessor for PublisherLogoProcessorOptions);
    LOBYTE(v43) = v34;
    sub_1C151E6AC();
  }
  sub_1C1160384(v40, (uint64_t)v25);
  if (v33(v25, 1, v32) == 1)
  {
    sub_1C115F640((uint64_t)v25);
  }
  else
  {
    sub_1C0358E1C((uint64_t)v25, (uint64_t)v22);
    sub_1BFEE2FE0((uint64_t)v25, type metadata accessor for PublisherLogoProcessorOptions);
    id v35 = v22[1];
    sub_1BFEE2FE0((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
    sub_1C0C5C7D8();
  }
  uint64_t v43 = 0;
  unint64_t v44 = 0xE000000000000000;
  sub_1C15200FC();
  sub_1C151A72C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  double v41 = a8;
  double v42 = a9;
  type metadata accessor for CGSize(0);
  sub_1C152036C();
  sub_1C151E80C();
  sub_1C151EF4C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  double v41 = *(double *)v39;
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v36 = v43;
  unint64_t v37 = v44;
  sub_1C115F640(v40);
  *(void *)(a5 + 16) = v36;
  *(void *)(a5 + 24) = v37;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  return a5;
}

uint64_t sub_1C115F504(uint64_t a1, unsigned __int8 *a2, char a3, uint64_t a4, double a5, double a6, double a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v19 = *(void *)(a9 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v21 = (char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a1, a9);
  return sub_1C115EFC8((uint64_t)v21, a2, a3, a4, v22, a9, a10, a5, a6, a7);
}

uint64_t sub_1C115F640(uint64_t a1)
{
  sub_1C006A7F4(0, &qword_1EB878E50, type metadata accessor for PublisherLogoProcessorOptions, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C115F6D0()
{
  unint64_t result = qword_1EA1ABEA0;
  if (!qword_1EA1ABEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABEA0);
  }
  return result;
}

unint64_t sub_1C115F728()
{
  unint64_t result = qword_1EA1ABEA8;
  if (!qword_1EA1ABEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABEA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for PublisherLogoTheme()
{
  return &type metadata for PublisherLogoTheme;
}

void *initializeBufferWithCopyOfBuffer for PublisherLogoProcessorOptions(void *a1, void *a2, uint64_t a3)
{
  char v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *char v4 = *a2;
    char v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(type metadata accessor for ImageRequestOptions() + 24);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151A01C();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    id v14 = v7;
    if (v13(v10, 1, v11))
    {
      sub_1C006A7F4(0, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10], MEMORY[0x1E4FBB718]);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *((unsigned char *)v4 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return v4;
}

uint64_t destroy for PublisherLogoProcessorOptions(uint64_t a1)
{
  uint64_t v2 = a1 + *(int *)(type metadata accessor for ImageRequestOptions() + 24);
  uint64_t v3 = sub_1C151A01C();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

void *initializeWithCopy for PublisherLogoProcessorOptions(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(type metadata accessor for ImageRequestOptions() + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151A01C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v6;
  if (v12(v9, 1, v10))
  {
    sub_1C006A7F4(0, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithCopy for PublisherLogoProcessorOptions(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (void *)a2[1];
  uint64_t v7 = (void *)a1[1];
  a1[1] = v6;
  id v8 = v6;

  uint64_t v9 = *(int *)(type metadata accessor for ImageRequestOptions() + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1C151A01C();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1C006A7F4(0, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10], MEMORY[0x1E4FBB718]);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *initializeWithTake for PublisherLogoProcessorOptions(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(type metadata accessor for ImageRequestOptions() + 24);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151A01C();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1C006A7F4(0, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for PublisherLogoProcessorOptions(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (void *)a1[1];
  a1[1] = a2[1];

  uint64_t v7 = *(int *)(type metadata accessor for ImageRequestOptions() + 24);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151A01C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1C006A7F4(0, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for PublisherLogoProcessorOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C11600C0);
}

uint64_t sub_1C11600C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ImageRequestOptions();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    id v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return v10 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for PublisherLogoProcessorOptions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1160190);
}

uint64_t sub_1C1160190(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ImageRequestOptions();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

unsigned char *_s8NewsFeed18PublisherLogoThemeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1160318);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PublisherLogoProcessorOptions.BackgroundColorDriver()
{
  return &type metadata for PublisherLogoProcessorOptions.BackgroundColorDriver;
}

uint64_t sub_1C1160350()
{
  return type metadata accessor for PublisherLogoProcessorRequest(0);
}

uint64_t method lookup function for PublisherLogoProcessorRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PublisherLogoProcessorRequest);
}

uint64_t dispatch thunk of PublisherLogoProcessorRequest.__allocating_init(publisherLogoAssetHandle:publisherLogoImageSize:scale:theme:isTransparentWhiteBackground:options:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1C1160384(uint64_t a1, uint64_t a2)
{
  sub_1C006A7F4(0, &qword_1EB878E50, type metadata accessor for PublisherLogoProcessorOptions, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1160418(unint64_t a1, void *a2, char a3)
{
  uint64_t v4 = sub_1C1161388(a1, a2, a3);

  return v4;
}

void sub_1C1160458()
{
  uint64_t v1 = v0;
  int v2 = v0[OBJC_IVAR____TtC8NewsFeed23DebugFormatSnapshotView_isSelected];
  id v3 = objc_msgSend(v1, sel_layer);
  uint64_t v4 = self;
  uint64_t v5 = &selRef_systemBlueColor;
  if (!v2) {
    uint64_t v5 = &selRef_systemGray2Color;
  }
  id v6 = [v4 *v5];
  id v7 = objc_msgSend(v6, sel_CGColor);

  objc_msgSend(v3, sel_setBorderColor_, v7);
}

uint64_t sub_1C1160524()
{
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
  sub_1C116127C();
  id v1 = v0;
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v6, (uint64_t)v8);
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    uint64_t v2 = sub_1C151811C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1C11612D4((uint64_t)v6);
    id v3 = objc_msgSend(v1, sel_superview);
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v2 = sub_1C1160524();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

char *sub_1C116063C(void *a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v52 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1BFE6CA70(0, &qword_1EB8851A0, MEMORY[0x1E4FAD758]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t *)((char *)&v51 - v11);
  v4[OBJC_IVAR____TtC8NewsFeed23DebugFormatSnapshotView_isSelected] = 0;
  uint64_t v13 = OBJC_IVAR____TtC8NewsFeed23DebugFormatSnapshotView_onTap;
  sub_1BFE6CA70(0, (unint64_t *)&qword_1EB871600, MEMORY[0x1E4FAD760]);
  id v15 = objc_allocWithZone(v14);
  int v16 = v4;
  *(void *)&v4[v13] = objc_msgSend(v15, sel_init);
  *(void *)&v16[OBJC_IVAR____TtC8NewsFeed23DebugFormatSnapshotView_children] = MEMORY[0x1E4FBC860];
  *(void *)&v16[OBJC_IVAR____TtC8NewsFeed23DebugFormatSnapshotView_view] = a1;
  id v17 = a1;
  __n128 v18 = (void *)sub_1C1160B30();
  *(void *)&v16[OBJC_IVAR____TtC8NewsFeed23DebugFormatSnapshotView_image] = v18;
  type metadata accessor for DebugGroupLayoutView();
  uint64_t v19 = swift_dynamicCastClass();
  char v20 = v19 != 0;
  if (!v19 && (a3 & 1) != 0)
  {
    sub_1C15177EC();
    char v20 = swift_dynamicCastClass() == 0;
  }
  v16[OBJC_IVAR____TtC8NewsFeed23DebugFormatSnapshotView_isContent] = v20;
  id v21 = v18;

  objc_msgSend(v17, sel_frame);
  v54.receiver = v16;
  v54.super_class = ObjectType;
  id v22 = objc_msgSendSuper2(&v54, sel_initWithFrame_);
  *uint64_t v12 = 1;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FAD748], v9);
  id v23 = v22;

  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  id v24 = objc_msgSend(v23, sel_layer);
  if (v18 && (id v25 = objc_msgSend(v21, sel_CGImage)) != 0)
  {
    id v53 = v25;
    type metadata accessor for CGImage(0);
    uint64_t v26 = sub_1C1520A7C();
  }
  else
  {
    uint64_t v26 = 0;
  }
  objc_msgSend(v24, sel_setContents_, v26);

  swift_unknownObjectRelease();
  id v27 = objc_msgSend(v23, sel_layer);
  id v28 = objc_msgSend(self, sel_systemGray2Color);
  id v29 = objc_msgSend(v28, sel_CGColor);

  objc_msgSend(v27, sel_setBorderColor_, v29);
  id v30 = objc_msgSend(v23, sel_layer);
  objc_msgSend(v30, sel_setBorderWidth_, 1.0);

  char v31 = (char *)v23;
  id v32 = objc_msgSend(v17, sel_superview);
  objc_msgSend(v17, sel_frame);
  double v37 = v33;
  double v38 = v34;
  double v39 = v35;
  double v40 = v36;
  double v41 = v52;
  if (v32)
  {
    objc_msgSend(v32, sel_convertRect_toCoordinateSpace_, v52, v33, v34, v35, v36);
    double v37 = v42;
    double v38 = v43;
    double v39 = v44;
    double v40 = v45;
  }
  objc_msgSend(v31, sel_setFrame_, v37, v38, v39, v40);

  id v46 = objc_msgSend(v17, sel_subviews);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
  unint64_t v47 = sub_1C151EBCC();

  id v48 = v41;
  uint64_t v49 = sub_1C1160418(v47, v48, v20);
  swift_bridgeObjectRelease();

  *(void *)&v31[OBJC_IVAR____TtC8NewsFeed23DebugFormatSnapshotView_children] = v49;
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1C1160B30()
{
  if (objc_msgSend(v0, sel_isHidden)) {
    return 0;
  }
  id v44 = v0;
  id v2 = objc_msgSend(v0, sel_subviews);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
  unint64_t v3 = sub_1C151EBCC();

  if (v3 >> 62) {
    goto LABEL_26;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v4)
  {
LABEL_5:
    uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v6 = 4;
    while (1)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1C18C7CB0](v6 - 4, v3);
      }
      else {
        id v7 = *(id *)(v3 + 8 * v6);
      }
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        swift_bridgeObjectRetain_n();
        uint64_t v4 = sub_1C15204BC();
        swift_bridgeObjectRelease();
        if (!v4) {
          break;
        }
        goto LABEL_5;
      }
      uint64_t v10 = v4;
      unsigned __int8 v11 = objc_msgSend(v7, sel_isHidden);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v5;
      unint64_t v14 = sub_1C107A920(v8);
      uint64_t v15 = v5[2];
      BOOL v16 = (v13 & 1) == 0;
      uint64_t v17 = v15 + v16;
      if (__OFADD__(v15, v16)) {
        goto LABEL_24;
      }
      char v18 = v13;
      if (v5[3] >= v17)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v5 = (void *)aBlock[0];
          if (v13) {
            goto LABEL_6;
          }
        }
        else
        {
          sub_1C1074BF8();
          uint64_t v5 = (void *)aBlock[0];
          if (v18) {
            goto LABEL_6;
          }
        }
      }
      else
      {
        sub_1C1063E4C(v17, isUniquelyReferenced_nonNull_native);
        uint64_t v19 = sub_1C107A920(v8);
        if ((v18 & 1) != (v20 & 1)) {
          goto LABEL_45;
        }
        unint64_t v14 = v19;
        uint64_t v5 = (void *)aBlock[0];
        if (v18)
        {
LABEL_6:
          *(unsigned char *)(v5[7] + v14) = v11;
          goto LABEL_7;
        }
      }
      v5[(v14 >> 6) + 8] |= 1 << v14;
      *(void *)(v5[6] + 8 * v14) = v8;
      *(unsigned char *)(v5[7] + v14) = v11;
      uint64_t v21 = v5[2];
      BOOL v22 = __OFADD__(v21, 1);
      uint64_t v23 = v21 + 1;
      if (v22) {
        goto LABEL_25;
      }
      v5[2] = v23;
LABEL_7:
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setHidden_, 1);

      ++v6;
      uint64_t v4 = v10;
      if (v9 == v10) {
        goto LABEL_28;
      }
    }
  }
  uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
LABEL_28:
  swift_bridgeObjectRelease_n();
  sub_1BFC39268(0, &qword_1EA1ABEF0);
  id v24 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultFormat);
  objc_msgSend(v24, sel_setOpaque_, 0);
  id v25 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v25, sel_scale);
  double v27 = v26;

  objc_msgSend(v24, sel_setScale_, v27);
  unint64_t v28 = (unint64_t)v44;
  objc_msgSend(v44, sel_bounds);
  id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_format_, v24, v29, v30);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v44;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_1C0EC58A4;
  *(void *)(v33 + 24) = v32;
  aBlock[4] = sub_1BFD2E744;
  aBlock[5] = v33;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFD2E6D0;
  aBlock[3] = &block_descriptor_89;
  double v34 = _Block_copy(aBlock);
  id v35 = v44;
  swift_retain();
  swift_release();
  id v1 = objc_msgSend(v31, sel_imageWithActions_, v34);
  _Block_release(v34);
  LOBYTE(v34) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v34)
  {
    __break(1u);
  }
  else
  {
    id v36 = objc_msgSend(v35, sel_subviews);
    unint64_t v28 = sub_1C151EBCC();

    if (!(v28 >> 62))
    {
      uint64_t v37 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v37) {
        goto LABEL_31;
      }
LABEL_42:

      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();

      return (uint64_t)v1;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v37) {
    goto LABEL_42;
  }
LABEL_31:
  if (v37 >= 1)
  {
    for (uint64_t i = 0; i != v37; ++i)
    {
      if ((v28 & 0xC000000000000001) != 0) {
        id v39 = (id)MEMORY[0x1C18C7CB0](i, v28);
      }
      else {
        id v39 = *(id *)(v28 + 8 * i + 32);
      }
      double v40 = v39;
      if (v5[2])
      {
        uint64_t v41 = sub_1C107A920(v39);
        if (v42) {
          objc_msgSend(v40, sel_setHidden_, *(unsigned __int8 *)(v5[7] + v41));
        }
      }
    }
    goto LABEL_42;
  }
  __break(1u);
LABEL_45:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DebugFormatSnapshotView()
{
  return self;
}

unint64_t sub_1C116127C()
{
  unint64_t result = qword_1EA1ABEE0;
  if (!qword_1EA1ABEE0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1ABEE0);
  }
  return result;
}

uint64_t sub_1C11612D4(uint64_t a1)
{
  sub_1C1161330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1161330()
{
  if (!qword_1EA1ABEE8)
  {
    sub_1C116127C();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ABEE8);
    }
  }
}

uint64_t sub_1C1161388(unint64_t a1, void *a2, char a3)
{
  LOBYTE(v3) = a3;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1C15204BC())
  {
    uint64_t v6 = 4;
    unsigned int v10 = v3 & 1;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C18C7CB0](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      unint64_t v3 = v7;
      uint64_t v8 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      if (objc_msgSend(v7, sel_isHidden))
      {
      }
      else
      {
        objc_allocWithZone((Class)type metadata accessor for DebugFormatSnapshotView());
        sub_1C116063C(v3, a2, v10);
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      ++v6;
      if (v8 == v5)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C1161538()
{
  return swift_deallocObject();
}

uint64_t sub_1C1161570()
{
  return swift_deallocObject();
}

__n128 FeedPersonalizationClusteringRules.init(minClusterSize:maxClusterSize:bundleArticleQuotas:maxInaccessibleHeadlines:maxEvergreenHeadlines:maxPublisherOccurrences:topicDiversity:)@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, char a12, long long *a13)
{
  __n128 v25 = (__n128)a13[1];
  long long v26 = *a13;
  uint64_t v18 = *((void *)a13 + 4);
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = a2 & 1;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4 & 1;
  uint64_t v19 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  sub_1C1161680(a5, a9 + v19[6]);
  uint64_t v20 = a9 + v19[7];
  *(void *)uint64_t v20 = a6;
  *(unsigned char *)(v20 + 8) = a7 & 1;
  uint64_t v21 = a9 + v19[8];
  *(void *)uint64_t v21 = a8;
  *(unsigned char *)(v21 + 8) = a10 & 1;
  uint64_t v22 = a9 + v19[9];
  *(void *)uint64_t v22 = a11;
  *(unsigned char *)(v22 + 8) = a12 & 1;
  uint64_t v23 = a9 + v19[10];
  __n128 result = v25;
  *(_OWORD *)uint64_t v23 = v26;
  *(__n128 *)(v23 + 16) = v25;
  *(void *)(v23 + 32) = v18;
  return result;
}

uint64_t sub_1C1161680(uint64_t a1, uint64_t a2)
{
  sub_1BFF90234(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FeedPersonalizationClusteringRules.minClusterSize.getter()
{
  return *(void *)v0;
}

uint64_t FeedPersonalizationClusteringRules.minClusterSize.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*FeedPersonalizationClusteringRules.minClusterSize.modify())(void)
{
  return nullsub_1;
}

uint64_t FeedPersonalizationClusteringRules.maxClusterSize.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t FeedPersonalizationClusteringRules.maxClusterSize.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*FeedPersonalizationClusteringRules.maxClusterSize.modify())(void)
{
  return nullsub_1;
}

uint64_t FeedPersonalizationClusteringRules.bundleArticleQuotas.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedPersonalizationClusteringRules();
  return sub_1C11619F4(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))sub_1BFF90234);
}

uint64_t FeedPersonalizationClusteringRules.maxInaccessibleHeadlines.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FeedPersonalizationClusteringRules() + 28));
}

uint64_t FeedPersonalizationClusteringRules.maxEvergreenHeadlines.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FeedPersonalizationClusteringRules() + 32));
}

uint64_t FeedPersonalizationClusteringRules.maxPublisherOccurrences.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FeedPersonalizationClusteringRules() + 36));
}

uint64_t FeedPersonalizationClusteringRules.topicDiversity.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedPersonalizationClusteringRules() + 40));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1C091BFC4(v4, v5, v6, v7, v8);
}

double sub_1C1161884()
{
  uint64_t v0 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  __swift_allocate_value_buffer((uint64_t)v0, qword_1EA1ABEF8);
  uint64_t v1 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_1EA1ABEF8);
  uint64_t v2 = v1 + v0[6];
  uint64_t v3 = type metadata accessor for FeedGroupBundleArticleQuotas();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(void *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 8) = 1;
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 1;
  uint64_t v4 = v1 + v0[7];
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 1;
  uint64_t v5 = v1 + v0[8];
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  uint64_t v6 = v1 + v0[9];
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = 1;
  uint64_t v7 = v1 + v0[10];
  double result = 0.0;
  *(_OWORD *)uint64_t v7 = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  *(void *)(v7 + 32) = 1;
  return result;
}

uint64_t static FeedPersonalizationClusteringRules.empty.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EA194AF8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA1ABEF8);
  return sub_1C11619F4(v3, a1, (uint64_t (*)(void))type metadata accessor for FeedPersonalizationClusteringRules);
}

uint64_t sub_1C11619F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *initializeBufferWithCopyOfBuffer for FeedPersonalizationClusteringRules(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v7 = a3[6];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_1BFF90234(0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = v9[1];
      void *v8 = *v9;
      v8[1] = v14;
      uint64_t v15 = *(int *)(v10 + 24);
      double v34 = (char *)v9 + v15;
      id v35 = (char *)v8 + v15;
      uint64_t v16 = sub_1C1516D9C();
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v33(v35, v34, v16);
      *(void *)((char *)v8 + *(int *)(v10 + 28)) = *(void *)((char *)v9 + *(int *)(v10 + 28));
      uint64_t v17 = *(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56);
      swift_bridgeObjectRetain();
      v17(v8, 0, 1, v10);
    }
    uint64_t v18 = a3[7];
    uint64_t v19 = a3[8];
    uint64_t v20 = (char *)v4 + v18;
    uint64_t v21 = (uint64_t)a2 + v18;
    *(void *)uint64_t v20 = *(void *)v21;
    v20[8] = *(unsigned char *)(v21 + 8);
    uint64_t v22 = (char *)v4 + v19;
    uint64_t v23 = (uint64_t)a2 + v19;
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = *(unsigned char *)(v23 + 8);
    uint64_t v24 = a3[9];
    uint64_t v25 = a3[10];
    long long v26 = (char *)v4 + v24;
    uint64_t v27 = (uint64_t)a2 + v24;
    *(void *)long long v26 = *(void *)v27;
    v26[8] = *(unsigned char *)(v27 + 8);
    unint64_t v28 = (char *)v4 + v25;
    uint64_t v29 = (uint64_t)a2 + v25;
    uint64_t v30 = *(void *)(v29 + 32);
    if (v30 == 1)
    {
      long long v31 = *(_OWORD *)(v29 + 16);
      *(_OWORD *)unint64_t v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v31;
      *((void *)v28 + 4) = *(void *)(v29 + 32);
    }
    else
    {
      *(void *)unint64_t v28 = *(void *)v29;
      v28[8] = *(unsigned char *)(v29 + 8);
      *((void *)v28 + 2) = *(void *)(v29 + 16);
      char v28[24] = *(unsigned char *)(v29 + 24);
      *((void *)v28 + 4) = v30;
      swift_bridgeObjectRetain();
    }
  }
  return v4;
}

uint64_t destroy for FeedPersonalizationClusteringRules(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for FeedGroupBundleArticleQuotas();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_1C1516D9C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 40) + 32);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FeedPersonalizationClusteringRules(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1BFF90234(0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v12;
    uint64_t v13 = *(int *)(v9 + 24);
    uint64_t v32 = (char *)v8 + v13;
    uint64_t v33 = (char *)v7 + v13;
    uint64_t v14 = sub_1C1516D9C();
    long long v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v31(v33, v32, v14);
    *(void *)((char *)v7 + *(int *)(v9 + 28)) = *(void *)((char *)v8 + *(int *)(v9 + 28));
    uint64_t v15 = *(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56);
    swift_bridgeObjectRetain();
    v15(v7, 0, 1, v9);
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  uint64_t v28 = *(void *)(v27 + 32);
  if (v28 == 1)
  {
    long long v29 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    *(_OWORD *)(v26 + 16) = v29;
    *(void *)(v26 + 32) = *(void *)(v27 + 32);
  }
  else
  {
    *(void *)uint64_t v26 = *(void *)v27;
    *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
    *(void *)(v26 + 16) = *(void *)(v27 + 16);
    *(unsigned char *)(v26 + 24) = *(unsigned char *)(v27 + 24);
    *(void *)(v26 + 32) = v28;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for FeedPersonalizationClusteringRules(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      *uint64_t v9 = *v10;
      v9[1] = v10[1];
      uint64_t v16 = *(int *)(v11 + 24);
      uint64_t v51 = (char *)v10 + v16;
      uint64_t v52 = (char *)v9 + v16;
      uint64_t v17 = sub_1C1516D9C();
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v50(v52, v51, v17);
      *(void *)((char *)v9 + *(int *)(v11 + 28)) = *(void *)((char *)v10 + *(int *)(v11 + 28));
      uint64_t v18 = *(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56);
      swift_bridgeObjectRetain();
      v18(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_1C116239C((uint64_t)v9);
LABEL_6:
    sub_1BFF90234(0);
    memcpy(v9, v10, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = *(int *)(v11 + 24);
  unint64_t v47 = (char *)v9 + v46;
  id v48 = (char *)v10 + v46;
  uint64_t v49 = sub_1C1516D9C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 24))(v47, v48, v49);
  *(void *)((char *)v9 + *(int *)(v11 + 28)) = *(void *)((char *)v10 + *(int *)(v11 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v20 = a3[7];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (uint64_t *)((char *)a2 + v20);
  uint64_t v23 = *v22;
  *(unsigned char *)(v21 + 8) = *((unsigned char *)v22 + 8);
  *(void *)uint64_t v21 = v23;
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = (uint64_t *)((char *)a2 + v24);
  uint64_t v27 = *v26;
  *(unsigned char *)(v25 + 8) = *((unsigned char *)v26 + 8);
  *(void *)uint64_t v25 = v27;
  uint64_t v28 = a3[9];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = (uint64_t *)((char *)a2 + v28);
  uint64_t v31 = *v30;
  *(unsigned char *)(v29 + 8) = *((unsigned char *)v30 + 8);
  *(void *)uint64_t v29 = v31;
  uint64_t v32 = a3[10];
  uint64_t v33 = a1 + v32;
  double v34 = (long long *)((char *)a2 + v32);
  uint64_t v35 = *(void *)(a1 + v32 + 32);
  uint64_t v36 = *((void *)v34 + 4);
  if (v35 == 1)
  {
    if (v36 == 1)
    {
      long long v37 = *v34;
      long long v38 = v34[1];
      *(void *)(v33 + 32) = *((void *)v34 + 4);
      *(_OWORD *)uint64_t v33 = v37;
      *(_OWORD *)(v33 + 16) = v38;
    }
    else
    {
      uint64_t v41 = *(void *)v34;
      *(unsigned char *)(v33 + 8) = *((unsigned char *)v34 + 8);
      *(void *)uint64_t v33 = v41;
      uint64_t v42 = *((void *)v34 + 2);
      *(unsigned char *)(v33 + 24) = *((unsigned char *)v34 + 24);
      *(void *)(v33 + 16) = v42;
      *(void *)(v33 + 32) = *((void *)v34 + 4);
      swift_bridgeObjectRetain();
    }
  }
  else if (v36 == 1)
  {
    sub_1C0921044(v33);
    uint64_t v39 = *((void *)v34 + 4);
    long long v40 = v34[1];
    *(_OWORD *)uint64_t v33 = *v34;
    *(_OWORD *)(v33 + 16) = v40;
    *(void *)(v33 + 32) = v39;
  }
  else
  {
    uint64_t v43 = *(void *)v34;
    *(unsigned char *)(v33 + 8) = *((unsigned char *)v34 + 8);
    *(void *)uint64_t v33 = v43;
    uint64_t v44 = *((void *)v34 + 2);
    *(unsigned char *)(v33 + 24) = *((unsigned char *)v34 + 24);
    *(void *)(v33 + 16) = v44;
    *(void *)(v33 + 32) = *((void *)v34 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_1C116239C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedGroupBundleArticleQuotas();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for FeedPersonalizationClusteringRules(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1BFF90234(0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    uint64_t v12 = *(int *)(v9 + 24);
    uint64_t v13 = (char *)v7 + v12;
    int v14 = (char *)v8 + v12;
    uint64_t v15 = sub_1C1516D9C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    *(void *)((char *)v7 + *(int *)(v9 + 28)) = *(void *)((char *)v8 + *(int *)(v9 + 28));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(void *)(v26 + 32) = *(void *)(v27 + 32);
  long long v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  return a1;
}

uint64_t assignWithTake for FeedPersonalizationClusteringRules(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      uint64_t v14 = *(int *)(v9 + 24);
      uint64_t v15 = (char *)v7 + v14;
      uint64_t v16 = (char *)v8 + v14;
      uint64_t v17 = sub_1C1516D9C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      *(void *)((char *)v7 + *(int *)(v9 + 28)) = *(void *)((char *)v8 + *(int *)(v9 + 28));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1C116239C((uint64_t)v7);
LABEL_6:
    sub_1BFF90234(0);
    memcpy(v7, v8, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v34 = *(int *)(v9 + 24);
  uint64_t v35 = (char *)v7 + v34;
  uint64_t v36 = (char *)v8 + v34;
  uint64_t v37 = sub_1C1516D9C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
  *(void *)((char *)v7 + *(int *)(v9 + 28)) = *(void *)((char *)v8 + *(int *)(v9 + 28));
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v19 = a3[7];
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  uint64_t v25 = a3[9];
  uint64_t v26 = a3[10];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = a2 + v26;
  if (*(void *)(a1 + v26 + 32) != 1)
  {
    uint64_t v31 = *(void *)(v30 + 32);
    if (v31 != 1)
    {
      *(void *)uint64_t v29 = *(void *)v30;
      *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
      *(void *)(v29 + 16) = *(void *)(v30 + 16);
      *(unsigned char *)(v29 + 24) = *(unsigned char *)(v30 + 24);
      *(void *)(v29 + 32) = v31;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C0921044(a1 + v26);
  }
  long long v32 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v32;
  *(void *)(v29 + 32) = *(void *)(v30 + 32);
  return a1;
}

uint64_t sub_1C11628B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BFF90234(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 40) + 32);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 - 1) & ~(((int)v12 - 1) >> 31);
  }
}

void sub_1C116297C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1BFF90234(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40) + 32) = (a2 + 1);
  }
}

void *sub_1C1162A40(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  if (v2)
  {
    uint64_t v3 = *a1;
    long long v14 = *((_OWORD *)a1 + 1);
    uint64_t v4 = (void *)v1[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v4 = sub_1C0EE2410(0, v4[2] + 1, 1, v4);
    }
    unint64_t v6 = v4[2];
    unint64_t v5 = v4[3];
    if (v6 >= v5 >> 1) {
      uint64_t v4 = sub_1C0EE2410((void *)(v5 > 1), v6 + 1, 1, v4);
    }
    void v4[2] = v6 + 1;
    uint64_t v7 = &v4[4 * v6];
    v7[4] = v3;
    v7[5] = v2;
    *((_OWORD *)v7 + 3) = v14;
    uint64_t v9 = v1[2];
    uint64_t v8 = v1[3];
    uint64_t v11 = v1[4];
    uint64_t v10 = v1[5];
    uint64_t v12 = v1[7];
    uint64_t v1 = (void *)swift_allocObject();
    v1[2] = v9;
    v1[3] = v8;
    v1[4] = v11;
    v1[5] = v10;
    v1[6] = v4;
    v1[7] = v12;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
  }
  return v1;
}

uint64_t sub_1C1162B8C()
{
  if (*(void *)(*(void *)v0 + 24)) {
    uint64_t v1 = *(void *)(*(void *)v0 + 16);
  }
  else {
    uint64_t v1 = 0;
  }
  swift_bridgeObjectRetain();
  return v1;
}

double FormatProgressKind.value(contextLayoutOptions:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v5 = *(unsigned __int8 *)(v2 + 56);
  if (v5 >> 6)
  {
    if (v5 >> 6 == 1)
    {
      FormatProgressCircleOptions.value(contextLayoutOptions:)(a1, (uint64_t)&v12);
      if (!v3)
      {
        uint64_t v7 = v13;
        uint64_t v8 = v15;
        char v9 = v16 | 0x40;
        *(void *)a2 = v12;
        *(void *)(a2 + 8) = v7;
        double result = *(double *)&v14;
        *(_OWORD *)(a2 + 16) = v14;
        *(void *)(a2 + 32) = v8;
        *(unsigned char *)(a2 + 40) = v9;
      }
    }
    else
    {
      *(void *)(a2 + 32) = 0;
      double result = 0.0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      *(unsigned char *)(a2 + 40) = 0x80;
    }
  }
  else
  {
    FormatProgressPieOptions.value(contextLayoutOptions:)(a1, (uint64_t)&v12);
    if (!v3)
    {
      uint64_t v10 = v13;
      uint64_t v11 = v15;
      *(void *)a2 = v12;
      *(void *)(a2 + 8) = v10;
      double result = *(double *)&v14;
      *(_OWORD *)(a2 + 16) = v14;
      *(void *)(a2 + 32) = v11;
      *(unsigned char *)(a2 + 40) = 0;
    }
  }
  return result;
}

uint64_t sub_1C1162CE0(uint64_t a1)
{
  unint64_t v2 = sub_1C1163FCC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1162D1C(uint64_t a1)
{
  unint64_t v2 = sub_1C1163FCC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C1162D58(uint64_t a1)
{
  unint64_t v2 = sub_1C1163F24();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1162D94(uint64_t a1)
{
  unint64_t v2 = sub_1C1163F24();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C1162DD0()
{
  uint64_t v1 = 6646128;
  if (*v0 != 1) {
    uint64_t v1 = 0x656C63726963;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 7496034;
  }
}

uint64_t sub_1C1162E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1164D18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1162E40(uint64_t a1)
{
  unint64_t v2 = sub_1C1164020();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1162E7C(uint64_t a1)
{
  unint64_t v2 = sub_1C1164020();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C1162EB8(uint64_t a1)
{
  unint64_t v2 = sub_1C1163F78();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1162EF4(uint64_t a1)
{
  unint64_t v2 = sub_1C1163F78();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatProgressKind.Resolved.encode(to:)(void *a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C116411C(0, &qword_1EA1ABF10, (uint64_t (*)(void))sub_1C1163F24, (uint64_t)&type metadata for FormatProgressKind.Resolved.CircleCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v31 = (char *)&v26 - v5;
  sub_1C116411C(0, &qword_1EA1ABF20, (uint64_t (*)(void))sub_1C1163F78, (uint64_t)&type metadata for FormatProgressKind.Resolved.PieCodingKeys, v3);
  uint64_t v30 = v6;
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v29 = (char *)&v26 - v7;
  sub_1C116411C(0, &qword_1EA1ABF30, (uint64_t (*)(void))sub_1C1163FCC, (uint64_t)&type metadata for FormatProgressKind.Resolved.BarCodingKeys, v3);
  uint64_t v9 = v8;
  uint64_t v28 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v26 - v10;
  sub_1C116411C(0, &qword_1EA1ABF40, (uint64_t (*)(void))sub_1C1164020, (uint64_t)&type metadata for FormatProgressKind.Resolved.CodingKeys, v3);
  uint64_t v39 = *(void *)(v12 - 8);
  uint64_t v40 = v12;
  MEMORY[0x1F4188790](v12);
  long long v14 = (char *)&v26 - v13;
  uint64_t v15 = v1[1];
  uint64_t v34 = *v1;
  uint64_t v35 = v15;
  uint64_t v16 = v1[3];
  uint64_t v36 = v1[2];
  uint64_t v37 = v16;
  uint64_t v38 = v1[4];
  unsigned int v17 = *((unsigned __int8 *)v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1164020();
  sub_1C1520F0C();
  if (!(v17 >> 6))
  {
    uint64_t v21 = v27;
    LOBYTE(v41) = 1;
    sub_1C1163F78();
    uint64_t v22 = v29;
    uint64_t v19 = v40;
    sub_1C152073C();
    uint64_t v41 = v34;
    char v42 = v35 & 1;
    uint64_t v43 = v36;
    uint64_t v44 = v37;
    uint64_t v45 = v38;
    sub_1C11640C8();
    uint64_t v23 = v30;
    sub_1C152080C();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v14, v19);
  }
  if (v17 >> 6 == 1)
  {
    LOBYTE(v41) = 2;
    sub_1C1163F24();
    uint64_t v18 = v31;
    uint64_t v19 = v40;
    sub_1C152073C();
    uint64_t v41 = v34;
    char v42 = v35 & 1;
    uint64_t v43 = v36;
    uint64_t v44 = v37;
    uint64_t v45 = v38;
    char v46 = v17 & 0x3F;
    sub_1C1164074();
    uint64_t v20 = v33;
    sub_1C152080C();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v14, v19);
  }
  LOBYTE(v41) = 0;
  sub_1C1163FCC();
  uint64_t v25 = v40;
  sub_1C152073C();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v14, v25);
}

uint64_t FormatProgressKind.Resolved.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  char v42 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C116411C(0, &qword_1EA1ABF60, (uint64_t (*)(void))sub_1C1163F24, (uint64_t)&type metadata for FormatProgressKind.Resolved.CircleCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v39 = v4;
  uint64_t v41 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v46 = (char *)&v37 - v5;
  sub_1C116411C(0, &qword_1EA1ABF68, (uint64_t (*)(void))sub_1C1163F78, (uint64_t)&type metadata for FormatProgressKind.Resolved.PieCodingKeys, v3);
  uint64_t v38 = v6;
  uint64_t v40 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)&v37 - v7;
  sub_1C116411C(0, &qword_1EA1ABF70, (uint64_t (*)(void))sub_1C1163FCC, (uint64_t)&type metadata for FormatProgressKind.Resolved.BarCodingKeys, v3);
  uint64_t v9 = v8;
  uint64_t v44 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v37 - v10;
  sub_1C116411C(0, &qword_1EA1ABF78, (uint64_t (*)(void))sub_1C1164020, (uint64_t)&type metadata for FormatProgressKind.Resolved.CodingKeys, v3);
  uint64_t v13 = v12;
  uint64_t v43 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v37 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1164020();
  uint64_t v16 = v52;
  sub_1C1520EBC();
  if (v16) {
    goto LABEL_7;
  }
  uint64_t v37 = v9;
  uint64_t v18 = v44;
  unsigned int v17 = v45;
  uint64_t v19 = v46;
  uint64_t v52 = a1;
  uint64_t v20 = sub_1C152070C();
  if (*(void *)(v20 + 16) != 1)
  {
    uint64_t v24 = sub_1C15201EC();
    swift_allocError();
    uint64_t v26 = v25;
    sub_1C01AC8BC();
    *uint64_t v26 = &type metadata for FormatProgressKind.Resolved;
    sub_1C15205DC();
    sub_1C15201AC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v26, *MEMORY[0x1E4FBBA70], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v13);
    a1 = v52;
LABEL_7:
    uint64_t v27 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  if (*(unsigned char *)(v20 + 32))
  {
    if (*(unsigned char *)(v20 + 32) == 1)
    {
      LOBYTE(v47) = 1;
      sub_1C1163F78();
      uint64_t v21 = v17;
      sub_1C15205CC();
      sub_1C11641D8();
      uint64_t v22 = v38;
      sub_1C15206EC();
      uint64_t v23 = v43;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v13);
      char v31 = 0;
      uint64_t v32 = v47;
      unsigned int v33 = v48;
      long long v34 = v49;
      uint64_t v35 = v50;
    }
    else
    {
      LOBYTE(v47) = 2;
      sub_1C1163F24();
      sub_1C15205CC();
      sub_1C1164184();
      uint64_t v29 = v39;
      sub_1C15206EC();
      uint64_t v30 = v43;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v19, v29);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v13);
      uint64_t v32 = v47;
      unsigned int v33 = v48;
      long long v34 = v49;
      uint64_t v35 = v50;
      char v31 = v51 | 0x40;
    }
  }
  else
  {
    LOBYTE(v47) = 0;
    sub_1C1163FCC();
    sub_1C15205CC();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v37);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v13);
    uint64_t v32 = 0;
    unsigned int v33 = 0;
    uint64_t v35 = 0;
    long long v34 = 0uLL;
    char v31 = 0x80;
  }
  uint64_t v36 = v42;
  *char v42 = v32;
  v36[1] = v33;
  *((_OWORD *)v36 + 1) = v34;
  v36[4] = v35;
  *((unsigned char *)v36 + 40) = v31;
  uint64_t v27 = (uint64_t)v52;
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

uint64_t sub_1C1163B44@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatProgressKind.Resolved.init(from:)(a1, a2);
}

uint64_t sub_1C1163B5C(void *a1)
{
  return FormatProgressKind.Resolved.encode(to:)(a1);
}

uint64_t sub_1C1163B78@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatProgressKind.init(from:)(a1, a2);
}

uint64_t sub_1C1163B90(void *a1)
{
  return FormatProgressKind.encode(to:)(a1);
}

uint64_t _s8NewsFeed18FormatProgressKindO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  LODWORD(v9) = *(unsigned __int8 *)(a1 + 56);
  uint64_t v11 = *(void *)a2;
  uint64_t v10 = *(void *)(a2 + 8);
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v12 = *(void *)(a2 + 24);
  uint64_t v15 = *(void *)(a2 + 32);
  uint64_t v14 = *(void *)(a2 + 40);
  uint64_t v16 = *(void *)(a2 + 48);
  unsigned int v17 = *(unsigned __int8 *)(a2 + 56);
  v61[0] = *(void *)a1;
  v61[1] = v2;
  void v61[2] = v5;
  v61[3] = v4;
  v61[4] = v7;
  v61[5] = v6;
  uint64_t v18 = v8;
  v61[6] = v8;
  char v62 = v9;
  uint64_t v63 = v11;
  uint64_t v64 = v10;
  uint64_t v65 = v13;
  uint64_t v66 = v12;
  uint64_t v67 = v15;
  uint64_t v68 = v14;
  uint64_t v69 = v16;
  char v70 = v17;
  if (!(v9 >> 6))
  {
    if (v17 < 0x40)
    {
      uint64_t v53 = v3;
      uint64_t v54 = v2;
      uint64_t v55 = v5;
      char v56 = v4 & 1;
      uint64_t v57 = v7;
      uint64_t v58 = v6;
      uint64_t v38 = v8;
      uint64_t v59 = v8;
      uint64_t v45 = v11;
      uint64_t v46 = v10;
      uint64_t v47 = v13;
      char v48 = v12 & 1;
      uint64_t v49 = v15;
      uint64_t v50 = v14;
      uint64_t v51 = v16;
      uint64_t v41 = v5;
      char v42 = v4;
      uint64_t v43 = v7;
      uint64_t v44 = v6;
      uint64_t v21 = v2;
      uint64_t v39 = v3;
      uint64_t v40 = v2;
      char v37 = v9;
      uint64_t v9 = v3;
      sub_1C08A7374(v11, v10, v13, v12, v15, v14, v16, v17);
      uint64_t v22 = v9;
      LOBYTE(v9) = v37;
      sub_1C08A7374(v22, v21, v41, v42, v43, v44, v38, v37);
      sub_1C08A7374(v11, v10, v13, v12, v15, v14, v16, v17);
      sub_1C08A7374(v39, v40, v41, v42, v43, v44, v38, v37);
      char v20 = _s8NewsFeed24FormatProgressPieOptionsV2eeoiySbAC_ACtFZ_0((uint64_t)&v53, (uint64_t)&v45);
      goto LABEL_7;
    }
LABEL_12:
    uint64_t v24 = v11;
    uint64_t v25 = v10;
    uint64_t v26 = v5;
    uint64_t v27 = v13;
    char v28 = v4;
    char v29 = v12;
    uint64_t v30 = v7;
    uint64_t v31 = v15;
    uint64_t v32 = v6;
    uint64_t v33 = v14;
    uint64_t v34 = v2;
    uint64_t v35 = v3;
    sub_1C08A7374(v24, v25, v27, v29, v31, v33, v16, v17);
    sub_1C08A7374(v35, v34, v26, v28, v30, v32, v18, v9);
    sub_1C1164E48((uint64_t)v61);
    char v23 = 0;
    return v23 & 1;
  }
  if (v9 >> 6 != 1)
  {
    if ((v17 & 0xC0) == 0x80 && !(v10 | v11 | v13 | v12 | v15 | v14 | v16) && v17 == 128)
    {
      sub_1C1164E48((uint64_t)v61);
      char v23 = 1;
      return v23 & 1;
    }
    goto LABEL_12;
  }
  if ((v17 & 0xC0) != 0x40) {
    goto LABEL_12;
  }
  uint64_t v53 = v3;
  uint64_t v54 = v2;
  uint64_t v55 = v5;
  uint64_t v40 = v2;
  uint64_t v41 = v5;
  char v56 = v4 & 1;
  uint64_t v57 = v7;
  uint64_t v58 = v6;
  uint64_t v38 = v8;
  uint64_t v59 = v8;
  char v60 = v9 & 0x3F;
  uint64_t v45 = v11;
  uint64_t v46 = v10;
  uint64_t v47 = v13;
  char v48 = v12 & 1;
  uint64_t v49 = v15;
  uint64_t v50 = v14;
  uint64_t v51 = v16;
  char v52 = v17 & 0x3F;
  char v42 = v4;
  uint64_t v43 = v7;
  uint64_t v44 = v6;
  uint64_t v19 = v3;
  uint64_t v39 = v3;
  sub_1C08A7374(v11, v10, v13, v12, v15, v14, v16, v17);
  sub_1C08A7374(v19, v40, v41, v42, v43, v44, v38, v9);
  sub_1C08A7374(v11, v10, v13, v12, v15, v14, v16, v17);
  sub_1C08A7374(v39, v40, v41, v42, v43, v44, v38, v9);
  char v20 = _s8NewsFeed27FormatProgressCircleOptionsV2eeoiySbAC_ACtFZ_0((uint64_t)&v53, (uint64_t)&v45);
LABEL_7:
  char v23 = v20;
  sub_1C1164E48((uint64_t)v61);
  sub_1C05DD070(v11, v10, v13, v12, v15, v14, v16, v17);
  sub_1C05DD070(v39, v40, v41, v42, v43, v44, v38, v9);
  return v23 & 1;
}

unint64_t sub_1C1163F24()
{
  unint64_t result = qword_1EA1ABF18;
  if (!qword_1EA1ABF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABF18);
  }
  return result;
}

unint64_t sub_1C1163F78()
{
  unint64_t result = qword_1EA1ABF28;
  if (!qword_1EA1ABF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABF28);
  }
  return result;
}

unint64_t sub_1C1163FCC()
{
  unint64_t result = qword_1EA1ABF38;
  if (!qword_1EA1ABF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABF38);
  }
  return result;
}

unint64_t sub_1C1164020()
{
  unint64_t result = qword_1EA1ABF48;
  if (!qword_1EA1ABF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABF48);
  }
  return result;
}

unint64_t sub_1C1164074()
{
  unint64_t result = qword_1EA1ABF50;
  if (!qword_1EA1ABF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABF50);
  }
  return result;
}

unint64_t sub_1C11640C8()
{
  unint64_t result = qword_1EA1ABF58;
  if (!qword_1EA1ABF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABF58);
  }
  return result;
}

void sub_1C116411C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C1164184()
{
  unint64_t result = qword_1EA1ABF80;
  if (!qword_1EA1ABF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABF80);
  }
  return result;
}

unint64_t sub_1C11641D8()
{
  unint64_t result = qword_1EA1ABF88;
  if (!qword_1EA1ABF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABF88);
  }
  return result;
}

unint64_t sub_1C116422C(uint64_t a1)
{
  unint64_t result = sub_1C1164254();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1164254()
{
  unint64_t result = qword_1EA1ABF90;
  if (!qword_1EA1ABF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABF90);
  }
  return result;
}

unint64_t sub_1C11642A8(void *a1)
{
  a1[1] = sub_1C08F357C();
  a1[2] = sub_1C08F32E0();
  unint64_t result = sub_1C11642E0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C11642E0()
{
  unint64_t result = qword_1EA1ABF98;
  if (!qword_1EA1ABF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABF98);
  }
  return result;
}

uint64_t destroy for FormatProgressKind(uint64_t a1)
{
  return sub_1C05DD070(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
}

uint64_t initializeWithCopy for FormatProgressKind(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 56);
  sub_1C08A7374(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v10;
  return a1;
}

uint64_t assignWithCopy for FormatProgressKind(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 56);
  sub_1C08A7374(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  char v18 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v10;
  sub_1C05DD070(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for FormatProgressKind(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 48);
  char v4 = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v3;
  char v13 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v4;
  sub_1C05DD070(v5, v7, v6, v8, v9, v10, v11, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatProgressKind(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 24) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatProgressKind(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = 2 * -a2;
      *(void *)(result + 40) = 0;
      *(void *)(result + 48) = 0;
      *(void *)(result + 32) = 0;
      *(unsigned char *)(result + 56) = 0;
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1C116459C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 56);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C11645BC(uint64_t result)
{
  *(unsigned char *)(result + 56) &= 0x3Fu;
  return result;
}

uint64_t sub_1C11645CC(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    char v2 = *(unsigned char *)(result + 56) & 3 | ((_BYTE)a2 << 6);
    *(void *)(result + 24) &= 1uLL;
    *(unsigned char *)(result + 56) = v2;
  }
  else
  {
    *(void *)unint64_t result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(unsigned char *)(result + 56) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatProgressKind()
{
  return &type metadata for FormatProgressKind;
}

uint64_t getEnumTagSinglePayload for FormatProgressKind.Resolved(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 8) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatProgressKind.Resolved(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 2 * -a2;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 40) = 0;
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1C11646D0(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C11646F0(uint64_t result)
{
  *(unsigned char *)(result + 40) &= 0x3Fu;
  return result;
}

uint64_t sub_1C1164700(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    char v2 = *(unsigned char *)(result + 40) & 3 | ((_BYTE)a2 << 6);
    *(void *)(result + 8) &= 1uLL;
    *(unsigned char *)(result + 40) = v2;
  }
  else
  {
    *(void *)unint64_t result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(unsigned char *)(result + 40) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatProgressKind.Resolved()
{
  return &type metadata for FormatProgressKind.Resolved;
}

unsigned char *storeEnumTagSinglePayload for FormatProgressKind.Resolved.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1164820);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatProgressKind.Resolved.CodingKeys()
{
  return &type metadata for FormatProgressKind.Resolved.CodingKeys;
}

ValueMetadata *type metadata accessor for FormatProgressKind.Resolved.BarCodingKeys()
{
  return &type metadata for FormatProgressKind.Resolved.BarCodingKeys;
}

ValueMetadata *type metadata accessor for FormatProgressKind.Resolved.PieCodingKeys()
{
  return &type metadata for FormatProgressKind.Resolved.PieCodingKeys;
}

unsigned char *_s8NewsFeed18FormatProgressKindO8ResolvedO13PieCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C1164918);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatProgressKind.Resolved.CircleCodingKeys()
{
  return &type metadata for FormatProgressKind.Resolved.CircleCodingKeys;
}

unint64_t sub_1C1164954()
{
  unint64_t result = qword_1EA1ABFA0;
  if (!qword_1EA1ABFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABFA0);
  }
  return result;
}

unint64_t sub_1C11649AC()
{
  unint64_t result = qword_1EA1ABFA8;
  if (!qword_1EA1ABFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABFA8);
  }
  return result;
}

unint64_t sub_1C1164A04()
{
  unint64_t result = qword_1EA1ABFB0;
  if (!qword_1EA1ABFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABFB0);
  }
  return result;
}

unint64_t sub_1C1164A5C()
{
  unint64_t result = qword_1EA1ABFB8;
  if (!qword_1EA1ABFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABFB8);
  }
  return result;
}

unint64_t sub_1C1164AB4()
{
  unint64_t result = qword_1EA1ABFC0;
  if (!qword_1EA1ABFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABFC0);
  }
  return result;
}

unint64_t sub_1C1164B0C()
{
  unint64_t result = qword_1EA1ABFC8;
  if (!qword_1EA1ABFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABFC8);
  }
  return result;
}

unint64_t sub_1C1164B64()
{
  unint64_t result = qword_1EA1ABFD0;
  if (!qword_1EA1ABFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABFD0);
  }
  return result;
}

unint64_t sub_1C1164BBC()
{
  unint64_t result = qword_1EA1ABFD8;
  if (!qword_1EA1ABFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABFD8);
  }
  return result;
}

unint64_t sub_1C1164C14()
{
  unint64_t result = qword_1EA1ABFE0;
  if (!qword_1EA1ABFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABFE0);
  }
  return result;
}

unint64_t sub_1C1164C6C()
{
  unint64_t result = qword_1EA1ABFE8;
  if (!qword_1EA1ABFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABFE8);
  }
  return result;
}

unint64_t sub_1C1164CC4()
{
  unint64_t result = qword_1EA1ABFF0;
  if (!qword_1EA1ABFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ABFF0);
  }
  return result;
}

uint64_t sub_1C1164D18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7496034 && a2 == 0xE300000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6646128 && a2 == 0xE300000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C63726963 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C1164E48(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v7 = *(void *)(a1 + 104);
  uint64_t v8 = *(void *)(a1 + 112);
  char v9 = *(unsigned char *)(a1 + 120);
  sub_1C05DD070(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  sub_1C05DD070(v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

uint64_t FormatContentPoolPlaceholder.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContentPoolPlaceholder.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPoolPlaceholder.itemOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPoolPlaceholder.itemSelectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPoolPlaceholder.itemAuxiliaries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPoolPlaceholder.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPoolPlaceholder.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPoolPlaceholder.init(identifier:items:itemOptions:itemSelectors:itemAuxiliaries:options:selectors:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t FormatContentPoolSlotPlaceholder.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContentPoolSlotPlaceholder.placeholders.getter()
{
  return swift_bridgeObjectRetain();
}

NewsFeed::FormatContentPoolSlotPlaceholder __swiftcall FormatContentPoolSlotPlaceholder.init(identifier:placeholders:)(Swift::String identifier, Swift::OpaquePointer placeholders)
{
  *(Swift::String *)uint64_t v2 = identifier;
  *(Swift::OpaquePointer *)(v2 + 16) = placeholders;
  result.identifier = identifier;
  result.placeholders = placeholders;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentPoolPlaceholder()
{
  return &type metadata for FormatContentPoolPlaceholder;
}

ValueMetadata *type metadata accessor for FormatContentPoolSlotPlaceholder()
{
  return &type metadata for FormatContentPoolSlotPlaceholder;
}

ValueMetadata *type metadata accessor for FormatDerivedDataStateMachineReference()
{
  return &type metadata for FormatDerivedDataStateMachineReference;
}

uint64_t sub_1C1164FC4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v12[0] = a4;
  sub_1C11655D0(0, &qword_1EA1AC008, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v12 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C116557C();
  sub_1C1520F0C();
  char v14 = 0;
  sub_1C15207CC();
  if (!v4)
  {
    v12[1] = v12[0];
    char v13 = 1;
    sub_1BFED9C20();
    sub_1BFD4A88C((unint64_t *)&qword_1EB85DF50);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C1165190()
{
  if (*v0) {
    return 0x736574617473;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1C11651C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1165840(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C11651E8(uint64_t a1)
{
  unint64_t v2 = sub_1C116557C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1165224(uint64_t a1)
{
  unint64_t v2 = sub_1C116557C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C1165260@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C1165324(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1C1165290(void *a1)
{
  return sub_1C1164FC4(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C11652B0(void *a1, void *a2)
{
  uint64_t v2 = (void *)a1[2];
  uint64_t v3 = (void *)a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  return sub_1BFE9E788(v2, v3);
}

uint64_t sub_1C1165324(void *a1)
{
  sub_1C11655D0(0, &qword_1EA1ABFF8, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v10[-v6];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C116557C();
  sub_1C1520EBC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v10[31] = 0;
    uint64_t v8 = sub_1C152069C();
    sub_1BFED9C20();
    v10[15] = 1;
    sub_1BFD4A88C((unint64_t *)&qword_1EB879F50);
    swift_bridgeObjectRetain();
    sub_1C15206EC();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1C116557C()
{
  unint64_t result = qword_1EA1AC000;
  if (!qword_1EA1AC000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC000);
  }
  return result;
}

void sub_1C11655D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C116557C();
    unint64_t v7 = a3(a1, &type metadata for FormatDerivedDataStateMachineReference.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for FormatDerivedDataStateMachineReference.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1165700);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataStateMachineReference.CodingKeys()
{
  return &type metadata for FormatDerivedDataStateMachineReference.CodingKeys;
}

unint64_t sub_1C116573C()
{
  unint64_t result = qword_1EA1AC010;
  if (!qword_1EA1AC010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC010);
  }
  return result;
}

unint64_t sub_1C1165794()
{
  unint64_t result = qword_1EA1AC018;
  if (!qword_1EA1AC018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC018);
  }
  return result;
}

unint64_t sub_1C11657EC()
{
  unint64_t result = qword_1EA1AC020;
  if (!qword_1EA1AC020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC020);
  }
  return result;
}

uint64_t sub_1C1165840(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736574617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void PluginModel.traits.getter(uint64_t *a1@<X8>)
{
  uint64_t v1 = unk_1F1B648F0;
  if ((unk_1F1B648F0 & ~qword_1F1B648E8) == 0) {
    uint64_t v1 = 0;
  }
  *a1 = v1 | qword_1F1B648E8;
}

void PluginModel.layoutDirection.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t PluginModel.debugSourceName.getter()
{
  return 0;
}

uint64_t PluginModel.debugTitle.getter()
{
  return 0;
}

uint64_t PluginModel.debugAssetHandle.getter()
{
  return 0;
}

uint64_t PluginModel.debugScoreProfile.getter()
{
  return 0;
}

uint64_t PluginModel.feedItem.getter@<X0>(void *a1@<X8>)
{
  *a1 = v1;
  type metadata accessor for FeedItem(0);
  swift_storeEnumTagMultiPayload();
  return swift_retain();
}

uint64_t PluginModel.feedContextIdentifier.getter()
{
  return sub_1C151FF2C();
}

uint64_t sub_1C1165A0C@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  type metadata accessor for FeedItem(0);
  swift_storeEnumTagMultiPayload();
  return swift_retain();
}

uint64_t sub_1C1165A60()
{
  return sub_1C151FF2C();
}

double PluginModel.kind.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C158A1E0;
  return result;
}

void sub_1C1165AB8(uint64_t *a1@<X8>)
{
}

uint64_t sub_1C1165AD0()
{
  return _s5TeaUI11PluginModelC8NewsFeedE15debugIdentifierSSvg_0();
}

unint64_t sub_1C1165AF4(uint64_t a1)
{
  unint64_t result = sub_1C1165B1C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C1165B1C()
{
  unint64_t result = qword_1EB85F338;
  if (!qword_1EB85F338)
  {
    sub_1C151A0CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F338);
  }
  return result;
}

id InternalErrorView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

char *InternalErrorView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_onButtonTap;
  sub_1BFD22278();
  long long v12 = v11;
  id v13 = objc_allocWithZone(v11);
  char v14 = v4;
  *(void *)&v4[v10] = objc_msgSend(v13, sel_init);
  uint64_t v15 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_onErrorButtonTap;
  *(void *)&v14[v15] = objc_msgSend(objc_allocWithZone(v12), sel_init);
  uint64_t v16 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_iconImageView;
  *(void *)&v14[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v17 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_titleLabel;
  *(void *)&v14[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v18 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_errorLabel;
  *(void *)&v14[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v19 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_subtitleLabel;
  *(void *)&v14[v19] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v20 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_footerLabel;
  *(void *)&v14[v20] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v21 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_button;
  *(void *)&v14[v21] = objc_msgSend(objc_allocWithZone((Class)sub_1C151AF1C()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v22 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_attachmentLabel;
  sub_1C151A4AC();
  *(void *)&v14[v22] = sub_1C151A47C();
  uint64_t v23 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_debugButton;
  *(void *)&v14[v23] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugButton()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v31.receiver = v14;
  v31.super_class = ObjectType;
  uint64_t v24 = (char *)objc_msgSendSuper2(&v31, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v25 = *(void *)&v24[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_iconImageView];
  uint64_t v26 = v24;
  objc_msgSend(v26, sel_addSubview_, v25);
  objc_msgSend(v26, sel_addSubview_, *(void *)&v26[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_titleLabel]);
  objc_msgSend(v26, sel_addSubview_, *(void *)&v26[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_errorLabel]);
  objc_msgSend(v26, sel_addSubview_, *(void *)&v26[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_subtitleLabel]);
  objc_msgSend(v26, sel_addSubview_, *(void *)&v26[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_footerLabel]);
  uint64_t v27 = *(void **)&v26[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_button];
  objc_msgSend(v26, sel_addSubview_, v27);
  objc_msgSend(v26, sel_addSubview_, *(void *)&v26[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_attachmentLabel]);
  objc_msgSend(v26, sel_addSubview_, *(void *)&v26[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_debugButton]);
  id v28 = *(id *)&v26[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_onButtonTap];
  id v29 = v27;
  sub_1C151C87C();

  return v26;
}

id InternalErrorView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id InternalErrorView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall InternalErrorView.prepareForReuse()()
{
  sub_1C151A48C();
}

uint64_t sub_1C11660F0()
{
  return sub_1C151A48C();
}

void sub_1C1166134()
{
  sub_1C007C580(&qword_1EB875BF0);
  JUMPOUT(0x1C18C4650);
}

void _s8NewsFeed17InternalErrorViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_onButtonTap;
  sub_1BFD22278();
  unsigned int v4 = v3;
  *(void *)&v1[v2] = objc_msgSend(objc_allocWithZone(v3), sel_init);
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_onErrorButtonTap;
  *(void *)&v1[v5] = objc_msgSend(objc_allocWithZone(v4), sel_init);
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_iconImageView;
  *(void *)&v1[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_titleLabel;
  *(void *)&v1[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_errorLabel;
  *(void *)&v1[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_subtitleLabel;
  *(void *)&v1[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_footerLabel;
  *(void *)&v1[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_button;
  *(void *)&v1[v11] = objc_msgSend(objc_allocWithZone((Class)sub_1C151AF1C()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_attachmentLabel;
  sub_1C151A4AC();
  *(void *)&v1[v12] = sub_1C151A47C();
  uint64_t v13 = OBJC_IVAR____TtC8NewsFeed17InternalErrorView_debugButton;
  *(void *)&v1[v13] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugButton()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C11663A0()
{
  id v2 = objc_msgSend(self, sel_cachedOnlyCachePolicy);
  sub_1C1167048(0, &qword_1EB85E880, (uint64_t (*)(uint64_t))sub_1BFC53CA4, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t v0 = sub_1C151911C();

  return v0;
}

uint64_t sub_1C1166478()
{
  id v2 = objc_msgSend(self, sel_defaultCachePolicy);
  sub_1C1167048(0, &qword_1EB85E880, (uint64_t (*)(uint64_t))sub_1BFC53CA4, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t v0 = sub_1C151911C();

  return v0;
}

uint64_t sub_1C1166550(id *a1)
{
  uint64_t v2 = sub_1C151829C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1167048(0, (unint64_t *)&unk_1EB85E4C0, (uint64_t (*)(uint64_t))sub_1BFC4483C, MEMORY[0x1E4FAB160]);
  MEMORY[0x1F4188790](v6 - 8);
  id v13 = *a1;
  uint64_t v7 = qword_1EB85E858;
  id v8 = v13;
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB85E838);
  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  MEMORY[0x1F4188790](v10);
  *(&v12 - 2) = sub_1BFC4483C();
  swift_getKeyPath();
  sub_1C151947C();
  return sub_1C151807C();
}

uint64_t sub_1C1166758(uint64_t a1)
{
  sub_1BFC53CA4(0);
  sub_1C151932C();
  *(void *)(swift_allocObject() + 16) = a1;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_1C1518E7C();
  sub_1C15190EC();
  swift_release();
  swift_release();

  uint64_t v3 = (void *)sub_1C1518E7C();
  sub_1C151808C();
  sub_1C116713C((unint64_t *)&qword_1EB880D20, sub_1BFC53CA4);
  uint64_t v4 = sub_1C151914C();
  swift_release();

  return v4;
}

uint64_t sub_1C11668B8()
{
  return sub_1C11663A0();
}

uint64_t sub_1C11668D4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C116690C()
{
  return sub_1C1166478();
}

void sub_1C1166928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  uint64_t v15 = *(void *)(a5 + 16);
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_1BFE71F8C(v16);
  swift_bridgeObjectRelease();
  id v17 = objc_allocWithZone(MEMORY[0x1E4F7E520]);
  uint64_t v18 = (void *)sub_1C151EBAC();
  swift_release();
  id v19 = objc_msgSend(v17, sel_initWithContext_issueIDs_, v15, v18);

  swift_unknownObjectRelease();
  objc_msgSend(v19, sel_setQualityOfService_, 25);
  objc_msgSend(v19, sel_setRelativePriority_, 1);
  objc_msgSend(v19, sel_setCachePolicy_, a7);
  uint64_t v20 = (void *)swift_allocObject();
  _OWORD v20[2] = a3;
  v20[3] = a4;
  v20[4] = a6;
  v20[5] = sub_1BFD35658;
  v20[6] = v14;
  v22[4] = sub_1C116712C;
  v22[5] = v20;
  v22[0] = MEMORY[0x1E4F143A8];
  v22[1] = 1107296256;
  v22[2] = sub_1C12C1398;
  v22[3] = &block_descriptor_90;
  uint64_t v21 = _Block_copy(v22);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v19, sel_setFetchCompletionHandler_, v21);
  _Block_release(v21);
  objc_msgSend(v19, sel_start);
}

void sub_1C1166B40(unint64_t a1, id a2, void (*a3)(id), uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t a7)
{
  if (a2)
  {
    id v10 = a2;
    a3(a2);
    id v11 = a2;
LABEL_3:

    return;
  }
  if (!a1)
  {
    uint64_t v18 = (uint64_t *)sub_1C1518ADC();
    sub_1C116713C(&qword_1EB85AB48, MEMORY[0x1E4FAADB8]);
    a5 = swift_allocError();
    a6 = v30;
    if (qword_1EB85E858 == -1)
    {
LABEL_24:
      uint64_t v31 = sub_1C151829C();
      uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1EB85E838);
      (*(void (**)(void (*)(void), uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(a6, v32, v31);
      (*(void (**)(void (*)(void), void, uint64_t *))(*(v18 - 1) + 104))(a6, *MEMORY[0x1E4FAADA8], v18);
      a3((id)a5);
      id v11 = (id)a5;
      goto LABEL_3;
    }
LABEL_33:
    swift_once();
    goto LABEL_24;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (!v16) {
    goto LABEL_19;
  }
  uint64_t v41 = a7;
  char v42 = a6;
  uint64_t v43 = a5;
  uint64_t v44 = a4;
  uint64_t v45 = a3;
  uint64_t v46 = MEMORY[0x1E4FBC860];
  uint64_t v18 = &v46;
  sub_1BFF661B8(0, v16 & ~(v16 >> 63), 0);
  if (v16 < 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v19 = 0;
  uint64_t v17 = v46;
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v20 = (id)MEMORY[0x1C18C7CB0](v19, a1);
    }
    else {
      id v20 = *(id *)(a1 + 8 * v19 + 32);
    }
    uint64_t v21 = v20;
    id v22 = objc_msgSend(v20, sel_identifier, v41, v42, v43, v44);
    uint64_t v23 = sub_1C151E62C();
    uint64_t v25 = v24;

    uint64_t v46 = v17;
    unint64_t v27 = *(void *)(v17 + 16);
    unint64_t v26 = *(void *)(v17 + 24);
    if (v27 >= v26 >> 1)
    {
      sub_1BFF661B8(v26 > 1, v27 + 1, 1);
      uint64_t v17 = v46;
    }
    ++v19;
    *(void *)(v17 + 16) = v27 + 1;
    uint64_t v28 = v17 + 16 * v27;
    *(void *)(v28 + 32) = v23;
    *(void *)(v28 + 40) = v25;
  }
  while (v16 != v19);
  a3 = v45;
  a6 = v42;
  a5 = v43;
LABEL_19:
  uint64_t v29 = sub_1BFEF4060(v17);
  swift_bridgeObjectRelease();
  if ((sub_1BFEFAE14(v29, a5) & 1) == 0)
  {
    uint64_t v33 = sub_1C1518ADC();
    sub_1C116713C(&qword_1EB85AB48, MEMORY[0x1E4FAADB8]);
    uint64_t v34 = swift_allocError();
    uint64_t v36 = v35;
    if (qword_1EB85E858 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_1C151829C();
    uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1EB85E838);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v36, v38, v37);
    if (*(void *)(v29 + 16) <= *(void *)(a5 + 16) >> 3)
    {
      uint64_t v46 = a5;
      swift_bridgeObjectRetain();
      sub_1C0A8BCFC(v29);
      swift_bridgeObjectRelease();
      uint64_t v39 = v46;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1BFC63BD0(v29, a5);
      swift_bridgeObjectRelease();
    }
    sub_1C0B90AA4();
    *(void *)(v36 + *(int *)(v40 + 48)) = v39;
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v33 - 8) + 104))(v36, *MEMORY[0x1E4FAADB0], v33);
    a3((id)v34);
    id v11 = (id)v34;
    goto LABEL_3;
  }
  a6(a1);
  swift_bridgeObjectRelease();
}

uint64_t sub_1C1167024()
{
  return 8;
}

void *sub_1C1167030(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_1C116703C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C1166928(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

void sub_1C1167048(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C11670AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C11670E4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1C116712C(unint64_t a1, void *a2)
{
  sub_1C1166B40(a1, a2, *(void (**)(id))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void (**)(void))(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_1C116713C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id HiddenContentColorPalette.titleTextColor.getter()
{
  return *v0;
}

id HiddenContentColorPalette.dismissalTextColor.getter()
{
  return *(id *)(v0 + 8);
}

id sub_1C1167198()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_secondaryLabelColor);
  id result = objc_msgSend(v0, sel_systemPinkColor);
  qword_1EA1AC088 = (uint64_t)v1;
  unk_1EA1AC090 = result;
  return result;
}

NewsFeed::HiddenContentColorPalette __swiftcall HiddenContentColorPalette.init(titleTextColor:dismissalTextColor:)(UIColor titleTextColor, UIColor dismissalTextColor)
{
  v2->super.isa = titleTextColor.super.isa;
  v2[1].super.isa = dismissalTextColor.super.isa;
  result.dismissalTextColor = dismissalTextColor;
  result.titleTextColor = titleTextColor;
  return result;
}

id static HiddenContentColorPalette.default.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA194B00 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_1EA1AC088;
  uint64_t v2 = unk_1EA1AC090;
  id v6 = (id)unk_1EA1AC090;
  *a1 = qword_1EA1AC088;
  a1[1] = v2;
  id v4 = v3;
  return v6;
}

ValueMetadata *type metadata accessor for HiddenContentColorPalette()
{
  return &type metadata for HiddenContentColorPalette;
}

uint64_t static Sizing.publisherLogo(height:headline:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  id v9 = objc_msgSend(*(id *)(a1 + 40), sel_sourceChannel);
  if (v9)
  {
    id v10 = objc_msgSend(v9, sel_theme);
    swift_unknownObjectRelease();
  }
  else
  {
    id v10 = 0;
  }
  id v11 = objc_msgSend(self, sel_defaultMetrics);
  static Sizing.publisherLogo(height:theme:fontMetrics:)(v10, v11, a2, a3, a4, a5);

  return swift_unknownObjectRelease();
}

uint64_t static Sizing.cardSpacingHeight(_:)@<X0>(uint64_t *a1@<X8>)
{
  sub_1C151756C();
  if (v2 > 24.0) {
    double v3 = v2;
  }
  else {
    double v3 = 24.0;
  }
  uint64_t v4 = swift_allocObject();
  *(double *)(v4 + 16) = v3;
  *a1 = v4;
  uint64_t v5 = *MEMORY[0x1E4FABA08];
  uint64_t v6 = sub_1C1517C4C();
  uint64_t v7 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);
  return v7(a1, v5, v6);
}

uint64_t static Sizing.publisherLogo(height:theme:fontMetrics:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v36 = a5;
  uint64_t v11 = sub_1C151747C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (double *)((char *)v33 - v13);
  uint64_t v37 = a3;
  uint64_t v15 = sub_1C1517C4C();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (void *)((char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&double v20 = MEMORY[0x1F4188790](v19).n128_u64[0];
  uint64_t v35 = (char *)v33 - v21;
  if (a1)
  {
    objc_msgSend(a1, sel_bannerImageScale, v20);
    double v23 = v22;
    objc_msgSend(a1, sel_bannerImageBaselineOffsetPercentage);
    uint64_t v25 = v24;
  }
  else
  {
    double v23 = 1.0;
    uint64_t v25 = 0;
  }
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a2;
  *(double *)(v26 + 24) = a6;
  *uint64_t v18 = v26;
  (*(void (**)(uint64_t *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E4FAB998], v15);
  double *v14 = v23;
  uint64_t v27 = *MEMORY[0x1E4FAB5C8];
  uint64_t v34 = *(void (**)(double *, uint64_t, uint64_t))(v12 + 104);
  v34(v14, v27, v11);
  id v28 = a2;
  uint64_t v29 = v35;
  v33[1] = a4;
  sub_1C151795C();
  uint64_t v30 = *(void (**)(double *, uint64_t))(v12 + 8);
  v30(v14, v11);
  uint64_t v31 = *(void (**)(uint64_t *, uint64_t))(v16 + 8);
  v31(v18, v15);
  double *v14 = 0.0;
  *((void *)v14 + 1) = v25;
  v34(v14, *MEMORY[0x1E4FAB558], v11);
  sub_1C151795C();
  v30(v14, v11);
  return ((uint64_t (*)(char *, uint64_t))v31)(v29, v15);
}

uint64_t sub_1C116774C()
{
  return swift_deallocObject();
}

uint64_t sub_1C116775C()
{
  return swift_deallocObject();
}

void static Sizing.publisherLogo(height:issue:)(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  id v9 = objc_msgSend(objc_msgSend(*a1, sel_sourceChannel), sel_theme);
  swift_unknownObjectRelease();
  id v10 = objc_msgSend(self, sel_defaultMetrics);
  static Sizing.publisherLogo(height:theme:fontMetrics:)(v9, v10, a2, a3, a4, a5);
  swift_unknownObjectRelease();
}

uint64_t PuzzleFullScreenModalBlurEffect.style.getter()
{
  return qword_1C15CE6A8[*v0];
}

NewsFeed::PuzzleFullScreenModalBlurEffect_optional __swiftcall PuzzleFullScreenModalBlurEffect.init(rawValue:)(Swift::String rawValue)
{
  double v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *double v2 = v5;
  return result;
}

uint64_t PuzzleFullScreenModalBlurEffect.rawValue.getter()
{
  uint64_t result = 0x746867696CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x67694C6172747865;
      break;
    case 2:
      uint64_t result = 0x72616C75676572;
      break;
    case 3:
      uint64_t result = 1802658148;
      break;
    case 4:
      uint64_t result = 0x7261446172747865;
      break;
    case 5:
      uint64_t result = 0x6E656E696D6F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C11679B4(unsigned __int8 *a1, char *a2)
{
  return sub_1C147A3AC(*a1, *a2);
}

uint64_t sub_1C11679C0()
{
  return sub_1C015EF78();
}

uint64_t sub_1C11679C8()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1167AC8()
{
  return sub_1C044CB38();
}

NewsFeed::PuzzleFullScreenModalBlurEffect_optional sub_1C1167AD0(Swift::String *a1)
{
  return PuzzleFullScreenModalBlurEffect.init(rawValue:)(*a1);
}

void sub_1C1167ADC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x746867696CLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA00000000007468;
      uint64_t v3 = 0x67694C6172747865;
      goto LABEL_3;
    case 2:
      *a1 = 0x72616C75676572;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 1802658148;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 0x7261446172747865;
      a1[1] = 0xE90000000000006BLL;
      break;
    case 5:
      *a1 = 0x6E656E696D6F7270;
      a1[1] = 0xE900000000000074;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t PuzzleFullScreenModal.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void PuzzleFullScreenModal.blurEffect.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t PuzzleFullScreenModal.isGameplay.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

NewsFeed::PuzzleFullScreenModal __swiftcall PuzzleFullScreenModal.init(identifier:blurEffect:isGameplay:)(Swift::String identifier, NewsFeed::PuzzleFullScreenModalBlurEffect_optional blurEffect, Swift::Bool_optional isGameplay)
{
  char v4 = *(unsigned char *)blurEffect.value;
  *(Swift::String *)uint64_t v3 = identifier;
  *(unsigned char *)(v3 + 16) = v4;
  *(Swift::Bool_optional *)(v3 + 17) = isGameplay;
  result.identifier = identifier;
  result.blurEffect = blurEffect;
  return result;
}

unint64_t sub_1C1167C18()
{
  unint64_t result = qword_1EA1AC098;
  if (!qword_1EA1AC098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC098);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PuzzleFullScreenModalBlurEffect(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1167D38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleFullScreenModalBlurEffect()
{
  return &type metadata for PuzzleFullScreenModalBlurEffect;
}

ValueMetadata *type metadata accessor for PuzzleFullScreenModal()
{
  return &type metadata for PuzzleFullScreenModal;
}

char *sub_1C1167D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v4[OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_contentSizeCategory] = 3;
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_slider;
  id v9 = objc_allocWithZone(MEMORY[0x1E4FB1C38]);
  id v10 = v4;
  *(void *)&v4[v8] = objc_msgSend(v9, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_label;
  *(void *)&v10[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v12 = &v10[OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_onChangeBlock];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;

  if (a3)
  {
    uint64_t v13 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  v67.receiver = v10;
  v67.super_class = ObjectType;
  uint64_t v14 = (char *)objc_msgSendSuper2(&v67, sel_initWithStyle_reuseIdentifier_, a1, v13);

  uint64_t v15 = OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_slider;
  uint64_t v16 = *(void **)&v14[OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_slider];
  uint64_t v17 = v14;
  objc_msgSend(v16, sel_setMinimumValue_, 0.0);
  *(float *)&double v18 = (float)(qword_1F1B67408 - 1);
  objc_msgSend(v16, sel_setMaximumValue_, v18);
  uint64_t v19 = self;
  id v20 = v16;
  id v21 = objc_msgSend(v19, sel_systemBlueColor);
  objc_msgSend(v20, sel_setTintColor_, v21);

  double v22 = *(void **)&v14[v15];
  objc_msgSend(v22, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v22, sel_addTarget_action_forControlEvents_, v17, sel_onValueChangeWithSlider_, 4096);
  id v23 = objc_msgSend(v17, sel_contentView);
  objc_msgSend(v23, sel_addSubview_, v22);

  uint64_t v24 = *(void **)&v17[OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_label];
  uint64_t v25 = OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_label;
  uint64_t v65 = OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_label;
  uint64_t v26 = self;
  id v27 = v24;
  id v28 = objc_msgSend(v26, sel_systemFontOfSize_, 13.0);
  objc_msgSend(v27, sel_setFont_, v28);

  uint64_t v29 = *(void **)&v17[v25];
  objc_msgSend(v29, sel_setTextAlignment_, 1);
  objc_msgSend(v29, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v30 = objc_msgSend(v17, (SEL)&selRef_setContentMode_);
  objc_msgSend(v30, sel_addSubview_, v29);

  id v66 = self;
  sub_1BFE4DBE0();
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1C152F080;
  id v32 = objc_msgSend(*(id *)&v14[v15], sel_topAnchor);
  id v33 = objc_msgSend(v17, (SEL)&selRef_setContentMode_);
  id v34 = objc_msgSend(v33, (SEL)&selRef_setTailIndent_ + 3);

  id v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, 16.0);
  *(void *)(v31 + 32) = v35;
  id v36 = objc_msgSend(*(id *)&v14[v15], sel_leadingAnchor);
  id v37 = objc_msgSend(v17, (SEL)&selRef_setContentMode_);
  id v38 = objc_msgSend(v37, sel_layoutMarginsGuide);

  id v39 = objc_msgSend(v38, (SEL)&selRef_systemImageNamed_withConfiguration_ + 2);
  id v40 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v39);

  *(void *)(v31 + 40) = v40;
  id v41 = objc_msgSend(*(id *)&v14[v15], sel_trailingAnchor);
  id v42 = objc_msgSend(v17, sel_contentView);
  id v43 = objc_msgSend(v42, sel_layoutMarginsGuide);

  id v44 = objc_msgSend(v43, sel_trailingAnchor);
  id v45 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v44);

  *(void *)(v31 + 48) = v45;
  id v46 = objc_msgSend(*(id *)&v17[v65], sel_topAnchor);
  id v47 = objc_msgSend(*(id *)&v14[v15], sel_bottomAnchor);
  id v48 = objc_msgSend(v46, sel_constraintEqualToAnchor_constant_, v47, 8.0);

  *(void *)(v31 + 56) = v48;
  id v49 = objc_msgSend(*(id *)&v17[v65], sel_leadingAnchor);
  id v50 = objc_msgSend(v17, sel_contentView);
  id v51 = objc_msgSend(v50, sel_layoutMarginsGuide);

  id v52 = objc_msgSend(v51, sel_leadingAnchor);
  id v53 = objc_msgSend(v49, (SEL)&selRef_ne_isNaturallyRTL + 6, v52);

  *(void *)(v31 + 64) = v53;
  id v54 = objc_msgSend(*(id *)&v17[v65], sel_trailingAnchor);
  id v55 = objc_msgSend(v17, sel_contentView);
  id v56 = objc_msgSend(v55, sel_layoutMarginsGuide);

  id v57 = objc_msgSend(v56, sel_trailingAnchor);
  id v58 = objc_msgSend(v54, (SEL)&selRef_ne_isNaturallyRTL + 6, v57);

  *(void *)(v31 + 72) = v58;
  id v59 = objc_msgSend(*(id *)&v17[v65], sel_bottomAnchor);
  id v60 = objc_msgSend(v17, sel_contentView);
  id v61 = objc_msgSend(v60, sel_bottomAnchor);

  id v62 = objc_msgSend(v59, sel_constraintEqualToAnchor_constant_, v61, -8.0);
  *(void *)(v31 + 80) = v62;
  sub_1C151EBEC();
  sub_1C03767D0();
  uint64_t v63 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v66, sel_activateConstraints_, v63);

  return v17;
}

id sub_1C1168598(void *a1)
{
  id result = objc_msgSend(a1, sel_value);
  if ((~LODWORD(v3) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v3 <= -9.2234e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v3 >= 9.2234e18)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  id result = (id)sub_1C01A17F4((uint64_t)v3);
  if (result != 12)
  {
    id v4 = result;
    uint64_t v5 = OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_contentSizeCategory;
    *(unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_contentSizeCategory) = (_BYTE)result;
    unsigned int v6 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_label);
    sub_1C01A1674((char)result);
    uint64_t v7 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setText_, v7);

    LOBYTE(v8) = *(unsigned char *)(v1 + v5);
    *(float *)&double v9 = (float)v8;
    id result = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_slider), sel_setValue_, v9);
    id v10 = *(void (**)(id))(v1 + OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_onChangeBlock);
    if (v10)
    {
      swift_retain();
      v10(v4);
      return (id)sub_1BFC3E5C0((uint64_t)v10);
    }
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatContentSizeCategoryCell()
{
  return self;
}

void sub_1C11687D0()
{
  v0[OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_contentSizeCategory] = 3;
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_slider;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C38]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_label;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  float v3 = &v0[OBJC_IVAR____TtC8NewsFeed34DebugFormatContentSizeCategoryCell_onChangeBlock];
  *float v3 = 0;
  v3[1] = 0;

  sub_1C152040C();
  __break(1u);
}

uint64_t CategoryViewLayout.frame.getter()
{
  return swift_retain();
}

uint64_t CategoryViewLayout.categoryViewLayoutAttributes.getter()
{
  return swift_retain();
}

double CategoryViewLayout.Attributes.frame.getter()
{
  return *(double *)v0;
}

uint64_t CategoryViewLayout.Attributes.categoryViewLayoutAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C11688E0()
{
  if (*v0) {
    return 0xD00000000000001CLL;
  }
  else {
    return 0x656D617266;
  }
}

uint64_t sub_1C116891C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1169CF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1168944(uint64_t a1)
{
  unint64_t v2 = sub_1C1168BFC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1168980(uint64_t a1)
{
  unint64_t v2 = sub_1C1168BFC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CategoryViewLayout.Attributes.encode(to:)(void *a1)
{
  sub_1C11691E4(0, &qword_1EA1AC0C0, (uint64_t (*)(void))sub_1C1168BFC, (uint64_t)&type metadata for CategoryViewLayout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned int v8 = (char *)&v12 - v7;
  long long v14 = *v1;
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v10 = *((void *)v1 + 3);
  uint64_t v13 = *((void *)v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1168BFC();
  sub_1C1520F0C();
  long long v15 = v14;
  uint64_t v16 = v9;
  uint64_t v17 = v10;
  char v18 = 0;
  type metadata accessor for CGRect(0);
  sub_1BFE1331C(&qword_1EA197288);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&long long v15 = v13;
    char v18 = 1;
    sub_1C1168C50();
    sub_1C1168F80(&qword_1EA1AC0C8, (void (*)(void))sub_1C1168CA8);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1C1168BFC()
{
  unint64_t result = qword_1EB85EAF0;
  if (!qword_1EB85EAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EAF0);
  }
  return result;
}

void sub_1C1168C50()
{
  if (!qword_1EB85EF48)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85EF48);
    }
  }
}

unint64_t sub_1C1168CA8()
{
  unint64_t result = qword_1EB85ED48;
  if (!qword_1EB85ED48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85ED48);
  }
  return result;
}

uint64_t CategoryViewLayout.Attributes.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  char v18 = a2;
  sub_1C11691E4(0, &qword_1EB85EFD8, (uint64_t (*)(void))sub_1C1168BFC, (uint64_t)&type metadata for CategoryViewLayout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned int v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1168BFC();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v18;
    type metadata accessor for CGRect(0);
    char v23 = 0;
    sub_1BFE1331C(&qword_1EB87A290);
    sub_1C15206EC();
    uint64_t v11 = v19;
    uint64_t v12 = v20;
    uint64_t v13 = v21;
    uint64_t v14 = v22;
    sub_1C1168C50();
    char v23 = 1;
    sub_1C1168F80(&qword_1EB85EF50, (void (*)(void))sub_1C1168FEC);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    uint64_t v16 = v19;
    *uint64_t v10 = v11;
    v10[1] = v12;
    v10[2] = v13;
    uint64_t v10[3] = v14;
    v10[4] = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C1168F80(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1168C50();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C1168FEC()
{
  unint64_t result = qword_1EB85ED50;
  if (!qword_1EB85ED50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85ED50);
  }
  return result;
}

uint64_t sub_1C1169040(uint64_t a1)
{
  unint64_t v2 = sub_1C1169DD8();
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t sub_1C116907C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CategoryViewLayout.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1C1169094(void *a1)
{
  return CategoryViewLayout.Attributes.encode(to:)(a1);
}

uint64_t sub_1C11690AC()
{
  sub_1C0F5587C();
  return sub_1C151798C();
}

uint64_t CategoryViewLayout.init()@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C11691E4(0, &qword_1EB85E7F8, (uint64_t (*)(void))sub_1C0F55C54, (uint64_t)&type metadata for CategoryViewLayoutAttributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

void sub_1C11691E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C1169250()
{
  unint64_t result = qword_1EB85EB08;
  if (!qword_1EB85EB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EB08);
  }
  return result;
}

unint64_t sub_1C11692A8()
{
  unint64_t result = qword_1EA1AC0D0;
  if (!qword_1EA1AC0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC0D0);
  }
  return result;
}

unint64_t sub_1C1169300()
{
  unint64_t result = qword_1EB85EB20;
  if (!qword_1EB85EB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EB20);
  }
  return result;
}

unint64_t sub_1C1169358()
{
  unint64_t result = qword_1EB85EB18;
  if (!qword_1EB85EB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EB18);
  }
  return result;
}

unint64_t sub_1C11693B0()
{
  unint64_t result = qword_1EB85EB00;
  if (!qword_1EB85EB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EB00);
  }
  return result;
}

uint64_t sub_1C1169404@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C11691E4(0, &qword_1EB85E7F8, (uint64_t (*)(void))sub_1C0F55C54, (uint64_t)&type metadata for CategoryViewLayoutAttributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

ValueMetadata *type metadata accessor for CategoryViewLayout()
{
  return &type metadata for CategoryViewLayout;
}

ValueMetadata *type metadata accessor for CategoryViewLayout.Attributes()
{
  return &type metadata for CategoryViewLayout.Attributes;
}

uint64_t destroy for CategoryViewLayout.Context(void *a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[8]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 5));
  }
  if (a1[13]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 10));
  }
  if (a1[18]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 15));
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 20));
}

uint64_t initializeWithCopy for CategoryViewLayout.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = (_OWORD *)(a1 + 40);
  uint64_t v7 = a2 + 40;
  uint64_t v8 = *(void *)(a2 + 64);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v9 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v8;
    *(void *)(a1 + 72) = v9;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 40, v7, v8);
  }
  else
  {
    long long v10 = *(_OWORD *)(v7 + 16);
    *uint64_t v6 = *(_OWORD *)v7;
    *(_OWORD *)(a1 + 56) = v10;
    *(void *)(a1 + 72) = *(void *)(v7 + 32);
  }
  uint64_t v11 = (_OWORD *)(a1 + 80);
  uint64_t v12 = (_OWORD *)(a2 + 80);
  uint64_t v13 = *(void *)(a2 + 104);
  if (v13)
  {
    uint64_t v14 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v13;
    *(void *)(a1 + 112) = v14;
    (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v11, v12);
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 96);
    _OWORD *v11 = *v12;
    *(_OWORD *)(a1 + 96) = v15;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
  }
  uint64_t v16 = (_OWORD *)(a1 + 120);
  uint64_t v17 = (_OWORD *)(a2 + 120);
  uint64_t v18 = *(void *)(a2 + 144);
  if (v18)
  {
    uint64_t v19 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = v18;
    *(void *)(a1 + 152) = v19;
    (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v16, v17);
  }
  else
  {
    long long v20 = *(_OWORD *)(a2 + 136);
    *uint64_t v16 = *v17;
    *(_OWORD *)(a1 + 136) = v20;
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
  }
  long long v21 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v21;
  (**(void (***)(uint64_t, uint64_t))(v21 - 8))(a1 + 160, a2 + 160);
  return a1;
}

uint64_t assignWithCopy for CategoryViewLayout.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  else if (v4)
  {
    *(void *)(a1 + 64) = v4;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 40, a2 + 40);
    goto LABEL_8;
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 56) = v6;
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 104);
  if (*(void *)(a1 + 104))
  {
    if (v7)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  }
  else if (v7)
  {
    *(void *)(a1 + 104) = v7;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 80, a2 + 80);
    goto LABEL_15;
  }
  long long v8 = *(_OWORD *)(a2 + 80);
  long long v9 = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_OWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 96) = v9;
LABEL_15:
  uint64_t v10 = *(void *)(a2 + 144);
  if (!*(void *)(a1 + 144))
  {
    if (v10)
    {
      *(void *)(a1 + 144) = v10;
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 120, a2 + 120);
      goto LABEL_22;
    }
LABEL_21:
    long long v11 = *(_OWORD *)(a2 + 120);
    long long v12 = *(_OWORD *)(a2 + 136);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(_OWORD *)(a1 + 120) = v11;
    *(_OWORD *)(a1 + 136) = v12;
    goto LABEL_22;
  }
  if (!v10)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 120);
    goto LABEL_21;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 120), (uint64_t *)(a2 + 120));
LABEL_22:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 160), (uint64_t *)(a2 + 160));
  return a1;
}

uint64_t assignWithTake for CategoryViewLayout.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 64)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (*(void *)(a1 + 104)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  }
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  if (*(void *)(a1 + 144)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 120);
  }
  long long v8 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v8;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  __swift_destroy_boxed_opaque_existential_1(a1 + 160);
  long long v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for CategoryViewLayout.Context(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 200)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CategoryViewLayout.Context(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 200) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 200) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CategoryViewLayout.Context()
{
  return &type metadata for CategoryViewLayout.Context;
}

unsigned char *storeEnumTagSinglePayload for CategoryViewLayout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1169BB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CategoryViewLayout.Attributes.CodingKeys()
{
  return &type metadata for CategoryViewLayout.Attributes.CodingKeys;
}

unint64_t sub_1C1169BEC()
{
  unint64_t result = qword_1EA1AC0D8;
  if (!qword_1EA1AC0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC0D8);
  }
  return result;
}

unint64_t sub_1C1169C44()
{
  unint64_t result = qword_1EB85E5E8;
  if (!qword_1EB85E5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E5E8);
  }
  return result;
}

unint64_t sub_1C1169C9C()
{
  unint64_t result = qword_1EB85EAF8;
  if (!qword_1EB85EAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EAF8);
  }
  return result;
}

uint64_t sub_1C1169CF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001C1635FD0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1C1169DD8()
{
  unint64_t result = qword_1EA1AC0E0;
  if (!qword_1EA1AC0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC0E0);
  }
  return result;
}

double PuzzleStatisticCategory.primaryValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v5 - 8);
  long long v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187E10(v1, (uint64_t)v10, type metadata accessor for PuzzleStatisticCategory);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      sub_1C117A08C((uint64_t)v10, (uint64_t)v4, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      double v12 = PuzzleStatisticValue.primaryValue.getter();
      uint64_t v13 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
      uint64_t v14 = (uint64_t)v4;
    }
    else
    {
      sub_1C117A08C((uint64_t)v10, (uint64_t)v7, type metadata accessor for PuzzleStatisticValue);
      double v12 = PuzzleStatisticValue.primaryValue.getter();
      uint64_t v13 = type metadata accessor for PuzzleStatisticValue;
      uint64_t v14 = (uint64_t)v7;
    }
    sub_1C0ED71A4(v14, v13);
  }
  else
  {
    sub_1C0ED71A4((uint64_t)v10, type metadata accessor for PuzzleStatisticCategory);
    return -1.0;
  }
  return v12;
}

uint64_t PuzzleDifficultyLevel.rawValue.getter()
{
  return 10 * *v0 + 10;
}

double PuzzleStatisticCategory.secondaryValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v2);
  unsigned int v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v5);
  long long v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187E10(v1, (uint64_t)v7, type metadata accessor for PuzzleStatisticCategory);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2 && EnumCaseMultiPayload)
  {
    sub_1C117A08C((uint64_t)v7, (uint64_t)v4, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
    double v9 = PuzzleStatisticValue.primaryValue.getter();
    sub_1C0ED71A4((uint64_t)v4, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
  }
  else
  {
    sub_1C0ED71A4((uint64_t)v7, type metadata accessor for PuzzleStatisticCategory);
    return -1.0;
  }
  return v9;
}

double PuzzleStatisticCategory.tertiaryValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v2);
  unsigned int v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v5);
  long long v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187E10(v1, (uint64_t)v7, type metadata accessor for PuzzleStatisticCategory);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2 && EnumCaseMultiPayload)
  {
    sub_1C117A08C((uint64_t)v7, (uint64_t)v4, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
    double v9 = PuzzleStatisticValue.primaryValue.getter();
    sub_1C0ED71A4((uint64_t)v4, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
  }
  else
  {
    sub_1C0ED71A4((uint64_t)v7, type metadata accessor for PuzzleStatisticCategory);
    return -1.0;
  }
  return v9;
}

uint64_t PuzzleStatisticCategory.hasValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C00671B8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v32 - v4;
  uint64_t v6 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, v2);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  long long v20 = (char *)&v32 - v19;
  uint64_t v21 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v21);
  char v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187E10(v1, (uint64_t)v23, type metadata accessor for PuzzleStatisticCategory);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C117A08C((uint64_t)v23, (uint64_t)v8, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      char v24 = PuzzleStatisticDifficultyLevelValue.hasValue.getter();
      uint64_t v25 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
      uint64_t v26 = (uint64_t)v8;
      goto LABEL_11;
    case 2u:
      sub_1C1173CF4((uint64_t)v23, (uint64_t)v5, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      uint64_t v27 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      char v24 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v5, 1, v27) != 1;
      sub_1C1173D74((uint64_t)v5, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      break;
    case 3u:
      sub_1C0ED71A4((uint64_t)v23, type metadata accessor for PuzzleStatisticCategory);
      char v24 = 0;
      break;
    default:
      sub_1C117A08C((uint64_t)v23, (uint64_t)v20, type metadata accessor for PuzzleStatisticValue);
      sub_1C1187E10((uint64_t)v20, (uint64_t)v17, type metadata accessor for PuzzleStatisticValue);
      char v24 = 1;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          break;
        case 4u:
          sub_1C1173CF4((uint64_t)v17, (uint64_t)v14, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
          uint64_t v28 = type metadata accessor for PuzzleStreak();
          char v24 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v14, 1, v28) != 1;
          uint64_t v29 = (uint64_t)v14;
          goto LABEL_9;
        case 5u:
          sub_1C1173CF4((uint64_t)v17, (uint64_t)v11, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
          uint64_t v30 = type metadata accessor for PuzzleStreak();
          char v24 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v11, 1, v30) != 1;
          uint64_t v29 = (uint64_t)v11;
LABEL_9:
          sub_1C1173D74(v29, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
          break;
        default:
          char v24 = v17[8] ^ 1;
          break;
      }
      uint64_t v25 = type metadata accessor for PuzzleStatisticValue;
      uint64_t v26 = (uint64_t)v20;
LABEL_11:
      sub_1C0ED71A4(v26, v25);
      break;
  }
  return v24 & 1;
}

uint64_t PuzzleStatisticCategory.statisticType.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v28 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v28 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v28 - v17;
  uint64_t v19 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187E10(v2, (uint64_t)v21, type metadata accessor for PuzzleStatisticCategory);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C117A08C((uint64_t)v21, (uint64_t)v6, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      sub_1C1187E10((uint64_t)v6, (uint64_t)v12, type metadata accessor for PuzzleStatisticValue);
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_11;
      }
      sub_1C0ED71A4((uint64_t)v12, type metadata accessor for PuzzleStatisticValue);
      sub_1C1187E10((uint64_t)v6, (uint64_t)v9, type metadata accessor for PuzzleStatisticValue);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        char v23 = 5;
      }
      else
      {
        sub_1C0ED71A4((uint64_t)v9, type metadata accessor for PuzzleStatisticValue);
LABEL_11:
        char v23 = 4;
      }
      *a1 = v23;
      uint64_t v25 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
      uint64_t v26 = (uint64_t)v6;
      return sub_1C0ED71A4(v26, v25);
    case 2u:
      char v24 = 8;
      goto LABEL_9;
    case 3u:
      char v24 = 7;
LABEL_9:
      *a1 = v24;
      uint64_t v25 = type metadata accessor for PuzzleStatisticCategory;
      uint64_t v26 = (uint64_t)v21;
      return sub_1C0ED71A4(v26, v25);
    default:
      sub_1C117A08C((uint64_t)v21, (uint64_t)v18, type metadata accessor for PuzzleStatisticValue);
      sub_1C1187E10((uint64_t)v18, (uint64_t)v15, type metadata accessor for PuzzleStatisticValue);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          char v22 = 2;
          goto LABEL_20;
        case 2u:
          char v22 = 4;
          goto LABEL_20;
        case 3u:
          char v22 = 5;
          goto LABEL_20;
        case 4u:
          *a1 = 0;
          goto LABEL_18;
        case 5u:
          *a1 = 1;
LABEL_18:
          sub_1C0ED71A4((uint64_t)v15, type metadata accessor for PuzzleStatisticValue);
          goto LABEL_21;
        case 6u:
          char v22 = 6;
          goto LABEL_20;
        default:
          char v22 = 3;
LABEL_20:
          *a1 = v22;
LABEL_21:
          uint64_t v25 = type metadata accessor for PuzzleStatisticValue;
          uint64_t v26 = (uint64_t)v18;
          break;
      }
      return sub_1C0ED71A4(v26, v25);
  }
}

uint64_t PuzzleStatisticCategory.primaryDisplayValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187E10(v1, (uint64_t)v10, type metadata accessor for PuzzleStatisticCategory);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      sub_1C117A08C((uint64_t)v10, (uint64_t)v4, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      uint64_t v12 = PuzzleStatisticValue.primaryDisplayValue.getter();
      uint64_t v13 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
      uint64_t v14 = (uint64_t)v4;
    }
    else
    {
      sub_1C117A08C((uint64_t)v10, (uint64_t)v7, type metadata accessor for PuzzleStatisticValue);
      uint64_t v12 = PuzzleStatisticValue.primaryDisplayValue.getter();
      uint64_t v13 = type metadata accessor for PuzzleStatisticValue;
      uint64_t v14 = (uint64_t)v7;
    }
    sub_1C0ED71A4(v14, v13);
  }
  else
  {
    sub_1C0ED71A4((uint64_t)v10, type metadata accessor for PuzzleStatisticCategory);
    return 0;
  }
  return v12;
}

uint64_t PuzzleStatisticCategory.secondaryDisplayValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187E10(v1, (uint64_t)v7, type metadata accessor for PuzzleStatisticCategory);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2 && EnumCaseMultiPayload)
  {
    sub_1C117A08C((uint64_t)v7, (uint64_t)v4, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
    uint64_t v9 = PuzzleStatisticValue.primaryDisplayValue.getter();
    sub_1C0ED71A4((uint64_t)v4, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
  }
  else
  {
    sub_1C0ED71A4((uint64_t)v7, type metadata accessor for PuzzleStatisticCategory);
    return 0;
  }
  return v9;
}

uint64_t PuzzleStatisticCategory.tertiaryDisplayValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187E10(v1, (uint64_t)v7, type metadata accessor for PuzzleStatisticCategory);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2 && EnumCaseMultiPayload)
  {
    sub_1C117A08C((uint64_t)v7, (uint64_t)v4, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
    uint64_t v9 = PuzzleStatisticValue.primaryDisplayValue.getter();
    sub_1C0ED71A4((uint64_t)v4, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
  }
  else
  {
    sub_1C0ED71A4((uint64_t)v7, type metadata accessor for PuzzleStatisticCategory);
    return 0;
  }
  return v9;
}

uint64_t sub_1C116B1AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = *(void *)(*(void *)(v2 + v12) + 16);
  sub_1C1187E10(v2, (uint64_t)v10, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  if (v13 == 2)
  {
    sub_1C0ED71A4((uint64_t)v10, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  }
  else
  {
    uint64_t v14 = *(void *)(*(void *)&v10[*(int *)(v8 + 20)] + 16);
    sub_1C0ED71A4((uint64_t)v10, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
    if (v14 != 3) {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, 1, 1, v4);
    }
  }
  uint64_t v15 = *(void *)(v2 + v12);
  int64_t v16 = *(void *)(v15 + 16);
  uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
  if (v16)
  {
    uint64_t v39 = v12;
    uint64_t v40 = v2;
    uint64_t v42 = a1;
    id v43 = (void *)MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F66A4(0, v16, 0);
    uint64_t v18 = v15 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v41 = v5;
    uint64_t v19 = *(void *)(v5 + 72);
    uint64_t v17 = v43;
    do
    {
      sub_1C1187E10(v18, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      uint64_t v20 = *(void *)&v7[*(int *)(v4 + 28)];
      sub_1C0ED71A4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F66A4(0, v17[2] + 1, 1);
        uint64_t v17 = v43;
      }
      unint64_t v22 = v17[2];
      unint64_t v21 = v17[3];
      if (v22 >= v21 >> 1)
      {
        sub_1C05F66A4(v21 > 1, v22 + 1, 1);
        uint64_t v17 = v43;
      }
      uint64_t v17[2] = v22 + 1;
      v17[v22 + 4] = v20;
      v18 += v19;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    uint64_t v5 = v41;
    a1 = v42;
    uint64_t v12 = v39;
    uint64_t v2 = v40;
  }
  uint64_t v23 = *(void *)(v2 + *(int *)(v4 + 28));
  char v24 = sub_1C0401408(v23, (uint64_t)v17);
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, 1, 1, v4);
  }
  uint64_t v25 = *(void *)(v2 + v12);
  if (*(void *)(v25 + 16) == 2)
  {
    uint64_t v26 = v25 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    if (*(void *)(v26 + *(int *)(v4 + 28)) == v23) {
      v26 += *(void *)(v5 + 72);
    }
    sub_1C1187E10(v26, a1, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  id v43 = *(void **)(v2 + v12);
  swift_bridgeObjectRetain_n();
  sub_1C1174B94(&v43);
  swift_bridgeObjectRelease();
  unint64_t v28 = v43[2];
  if (!v28)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v28 < 3)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v29 = (char *)v43 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v30 = *(int *)(v4 + 32);
  uint64_t v31 = *(void *)&v29[v30];
  uint64_t v32 = *(void *)(v5 + 72);
  uint64_t v33 = *(void *)&v29[v30 + v32];
  uint64_t v34 = v31 - v33;
  if (__OFSUB__(v31, v33))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  id v35 = &v29[2 * v32];
  uint64_t v36 = *(void *)&v35[v30];
  if (v34 < 0)
  {
    BOOL v37 = __OFSUB__(0, v34);
    uint64_t v34 = v33 - v31;
    if (v37) {
      goto LABEL_33;
    }
  }
  BOOL v37 = __OFSUB__(v36, v33);
  uint64_t v38 = v36 - v33;
  if (v37)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  if (v38 < 0)
  {
    BOOL v37 = __OFSUB__(0, v38);
    uint64_t v38 = -v38;
    if (v37) {
      goto LABEL_34;
    }
  }
  if (v34 >= v38) {
    uint64_t v29 = v35;
  }
  sub_1C1187E10((uint64_t)v29, a1, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
  swift_release();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
}

NewsFeed::PuzzleDifficultyLevel_optional __swiftcall PuzzleDifficultyLevel.init(rawValue:)(Swift::Int64 rawValue)
{
  if (rawValue == 30) {
    char v2 = 2;
  }
  else {
    char v2 = 3;
  }
  if (rawValue == 20) {
    char v3 = 1;
  }
  else {
    char v3 = v2;
  }
  if (rawValue == 10) {
    char v3 = 0;
  }
  *uint64_t v1 = v3;
  return (NewsFeed::PuzzleDifficultyLevel_optional)rawValue;
}

uint64_t PuzzleStatisticDifficultyLevelValue.value(for:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    if (*a1 == 1) {
      uint64_t v4 = 5;
    }
    else {
      uint64_t v4 = 6;
    }
    v2 += *(int *)(type metadata accessor for PuzzleStatisticDifficultyLevelValue(0) + 4 * v4);
  }
  return sub_1C1187E10(v2, a2, type metadata accessor for PuzzleStatisticValue);
}

unint64_t PuzzleStatisticCategory.isMultiStatistic(puzzleType:)()
{
  uint64_t v1 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v1);
  char v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187E10(v0, (uint64_t)v3, type metadata accessor for PuzzleStatisticCategory);
  unint64_t v4 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_getObjectType();
      unint64_t v4 = ((unint64_t)FCPuzzleTypeProviding.puzzleTypeTraits.getter() >> 1) & 1;
      break;
    case 2u:
    case 3u:
      unint64_t v4 = 1;
      break;
    default:
      break;
  }
  sub_1C0ED71A4((uint64_t)v3, type metadata accessor for PuzzleStatisticCategory);
  return v4;
}

unint64_t sub_1C116B7E4()
{
  unint64_t result = 0x656C676E6973;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C75636966666964;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x53646570756F7267;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C116B888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C118766C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C116B8B0(uint64_t a1)
{
  unint64_t v2 = sub_1C11796D8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C116B8EC(uint64_t a1)
{
  unint64_t v2 = sub_1C11796D8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C116B928(uint64_t a1)
{
  unint64_t v2 = sub_1C1179630();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C116B964(uint64_t a1)
{
  unint64_t v2 = sub_1C1179630();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C116B9A0(uint64_t a1)
{
  unint64_t v2 = sub_1C11795DC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C116B9DC(uint64_t a1)
{
  unint64_t v2 = sub_1C11795DC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C116BA18(uint64_t a1)
{
  unint64_t v2 = sub_1C1179588();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C116BA54(uint64_t a1)
{
  unint64_t v2 = sub_1C1179588();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C116BA90(uint64_t a1)
{
  unint64_t v2 = sub_1C1179684();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C116BACC(uint64_t a1)
{
  unint64_t v2 = sub_1C1179684();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleStatisticCategory.encode(to:)(void *a1)
{
  unint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C1179F64(0, &qword_1EA1AC0E8, (uint64_t (*)(void))sub_1C1179588, (uint64_t)&type metadata for PuzzleStatisticCategory.GroupedStatsCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  MEMORY[0x1F4188790](v3);
  id v54 = (char *)&v39 - v4;
  uint64_t v51 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
  MEMORY[0x1F4188790](v51);
  uint64_t v53 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1179F64(0, &qword_1EA1AC0F8, (uint64_t (*)(void))sub_1C11795DC, (uint64_t)&type metadata for PuzzleStatisticCategory.GameCenterLeaderboardCodingKeys, v2);
  uint64_t v52 = v6;
  uint64_t v50 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v49 = (char *)&v39 - v7;
  sub_1C00671B8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v48 = (uint64_t)&v39 - v9;
  sub_1C1179F64(0, &qword_1EA1AC108, (uint64_t (*)(void))sub_1C1179630, (uint64_t)&type metadata for PuzzleStatisticCategory.DifficultyLevelCodingKeys, v2);
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v47 = v10;
  MEMORY[0x1F4188790](v10);
  id v45 = (char *)&v39 - v11;
  uint64_t v43 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v43);
  uint64_t v44 = (uint64_t)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1179F64(0, &qword_1EA1AC118, (uint64_t (*)(void))sub_1C1179684, (uint64_t)&type metadata for PuzzleStatisticCategory.SingleCodingKeys, v2);
  uint64_t v41 = *(void *)(v13 - 8);
  uint64_t v42 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v40 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v40);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1179F64(0, &qword_1EA1AC128, (uint64_t (*)(void))sub_1C11796D8, (uint64_t)&type metadata for PuzzleStatisticCategory.CodingKeys, v2);
  uint64_t v58 = *(void *)(v21 - 8);
  uint64_t v59 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v39 - v22;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11796D8();
  id v57 = v23;
  sub_1C1520F0C();
  sub_1C1187E10(v60, (uint64_t)v20, type metadata accessor for PuzzleStatisticCategory);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v32 = v44;
      sub_1C117A08C((uint64_t)v20, v44, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      char v62 = 1;
      sub_1C1179630();
      uint64_t v36 = v45;
      uint64_t v24 = v59;
      uint64_t v25 = v57;
      sub_1C152073C();
      sub_1C117A334(&qword_1EA1AC148, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      uint64_t v37 = v47;
      sub_1C152080C();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v37);
      id v35 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
      goto LABEL_6;
    case 2u:
      uint64_t v29 = v48;
      sub_1C1173CF4((uint64_t)v20, v48, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      char v63 = 2;
      sub_1C11795DC();
      uint64_t v30 = v49;
      uint64_t v24 = v59;
      uint64_t v25 = v57;
      sub_1C152073C();
      type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      sub_1C117A334(&qword_1EA1AC140, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      uint64_t v31 = v52;
      sub_1C152078C();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v31);
      sub_1C1173D74(v29, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v25, v24);
    case 3u:
      uint64_t v32 = v53;
      sub_1C117A08C((uint64_t)v20, v53, type metadata accessor for PuzzleStatisticsGroupedValue);
      char v64 = 3;
      sub_1C1179588();
      uint64_t v33 = v54;
      uint64_t v24 = v59;
      uint64_t v25 = v57;
      sub_1C152073C();
      sub_1C117A334(&qword_1EA1AC138, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGroupedValue);
      uint64_t v34 = v56;
      sub_1C152080C();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v33, v34);
      id v35 = type metadata accessor for PuzzleStatisticsGroupedValue;
LABEL_6:
      uint64_t v27 = v35;
      uint64_t v28 = v32;
      goto LABEL_7;
    default:
      sub_1C117A08C((uint64_t)v20, (uint64_t)v17, type metadata accessor for PuzzleStatisticValue);
      char v61 = 0;
      sub_1C1179684();
      uint64_t v24 = v59;
      uint64_t v25 = v57;
      sub_1C152073C();
      sub_1C117A334(&qword_1EA1AC150, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticValue);
      uint64_t v26 = v42;
      sub_1C152080C();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v26);
      uint64_t v27 = type metadata accessor for PuzzleStatisticValue;
      uint64_t v28 = (uint64_t)v17;
LABEL_7:
      sub_1C0ED71A4(v28, v27);
      return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v25, v24);
  }
}

uint64_t PuzzleStatisticCategory.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C1179F64(0, &qword_1EA1AC158, (uint64_t (*)(void))sub_1C1179588, (uint64_t)&type metadata for PuzzleStatisticCategory.GroupedStatsCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v63 = v4;
  uint64_t v67 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v72 = (char *)&v56 - v5;
  sub_1C1179F64(0, &qword_1EA1AC160, (uint64_t (*)(void))sub_1C11795DC, (uint64_t)&type metadata for PuzzleStatisticCategory.GameCenterLeaderboardCodingKeys, v3);
  uint64_t v62 = v6;
  uint64_t v66 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v71 = (char *)&v56 - v7;
  sub_1C1179F64(0, &qword_1EA1AC168, (uint64_t (*)(void))sub_1C1179630, (uint64_t)&type metadata for PuzzleStatisticCategory.DifficultyLevelCodingKeys, v3);
  uint64_t v61 = v8;
  uint64_t v65 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v70 = (char *)&v56 - v9;
  sub_1C1179F64(0, &qword_1EA1AC170, (uint64_t (*)(void))sub_1C1179684, (uint64_t)&type metadata for PuzzleStatisticCategory.SingleCodingKeys, v3);
  uint64_t v60 = v10;
  uint64_t v64 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v69 = (char *)&v56 - v11;
  sub_1C1179F64(0, &qword_1EA1AC178, (uint64_t (*)(void))sub_1C11796D8, (uint64_t)&type metadata for PuzzleStatisticCategory.CodingKeys, v3);
  uint64_t v73 = *(void *)(v12 - 8);
  uint64_t v74 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v56 - v13;
  uint64_t v75 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v75);
  uint64_t v59 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v56 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v56 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v56 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v56 - v26;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C11796D8();
  uint64_t v28 = v76;
  sub_1C1520EBC();
  uint64_t v29 = (uint64_t)a1;
  if (!v28)
  {
    uint64_t v56 = v21;
    id v57 = v18;
    uint64_t v58 = v24;
    uint64_t v31 = v74;
    uint64_t v30 = v75;
    uint64_t v76 = v29;
    uint64_t v32 = sub_1C152070C();
    if (*(void *)(v32 + 16) == 1)
    {
      uint64_t v33 = (uint64_t)v27;
      switch(*(unsigned char *)(v32 + 32))
      {
        case 1:
          char v78 = 1;
          sub_1C1179630();
          uint64_t v42 = v70;
          sub_1C15205CC();
          type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v43 = v42;
          sub_1C117A334(&qword_1EA1AC190, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          uint64_t v36 = (uint64_t)v56;
          uint64_t v44 = v61;
          sub_1C15206EC();
          uint64_t v45 = v73;
          (*(void (**)(char *, uint64_t))(v65 + 8))(v43, v44);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v31);
          goto LABEL_11;
        case 2:
          char v79 = 2;
          sub_1C11795DC();
          uint64_t v46 = v71;
          sub_1C15205CC();
          uint64_t v72 = (char *)v33;
          type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v47 = v46;
          sub_1C117A334(&qword_1EA1AC188, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
          uint64_t v48 = (uint64_t)v57;
          uint64_t v49 = v62;
          sub_1C152065C();
          uint64_t v50 = v73;
          (*(void (**)(char *, uint64_t))(v66 + 8))(v47, v49);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v31);
          swift_storeEnumTagMultiPayload();
          uint64_t v55 = v48;
          uint64_t v33 = (uint64_t)v72;
          break;
        case 3:
          char v80 = 3;
          sub_1C1179588();
          sub_1C15205CC();
          type metadata accessor for PuzzleStatisticsGroupedValue(0);
          sub_1C117A334(&qword_1EA1AC180, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGroupedValue);
          uint64_t v51 = v59;
          uint64_t v52 = v63;
          uint64_t v53 = v72;
          sub_1C15206EC();
          (*(void (**)(char *, uint64_t))(v67 + 8))(v53, v52);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v73 + 8))(v14, v31);
          swift_storeEnumTagMultiPayload();
          uint64_t v55 = (uint64_t)v51;
          break;
        default:
          char v77 = 0;
          sub_1C1179684();
          uint64_t v34 = v69;
          sub_1C15205CC();
          type metadata accessor for PuzzleStatisticValue(0);
          id v35 = v34;
          sub_1C117A334(&qword_1EA1AC198, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticValue);
          uint64_t v36 = (uint64_t)v58;
          uint64_t v37 = v60;
          sub_1C15206EC();
          uint64_t v38 = v73;
          (*(void (**)(char *, uint64_t))(v64 + 8))(v35, v37);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v31);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          uint64_t v55 = v36;
          break;
      }
      sub_1C117A08C(v55, v33, type metadata accessor for PuzzleStatisticCategory);
      sub_1C117A08C(v33, v68, type metadata accessor for PuzzleStatisticCategory);
    }
    else
    {
      uint64_t v39 = sub_1C15201EC();
      swift_allocError();
      uint64_t v41 = v40;
      sub_1C01AC8BC();
      *uint64_t v41 = v30;
      sub_1C15205DC();
      sub_1C15201AC();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v39 - 8) + 104))(v41, *MEMORY[0x1E4FBBA70], v39);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v14, v31);
    }
    uint64_t v29 = v76;
  }
  return __swift_destroy_boxed_opaque_existential_1(v29);
}

uint64_t sub_1C116CF5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleStatisticCategory.init(from:)(a1, a2);
}

uint64_t sub_1C116CF74(void *a1)
{
  return PuzzleStatisticCategory.encode(to:)(a1);
}

unint64_t PuzzleStatisticCategory.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v27 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v24 = (uint64_t)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00671B8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v26 = (uint64_t)&v24 - v7;
  uint64_t v8 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187E10(v1, (uint64_t)v19, type metadata accessor for PuzzleStatisticCategory);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C117A08C((uint64_t)v19, (uint64_t)v13, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      unint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C152036C();
      sub_1C151E80C();
      unint64_t v20 = v28;
      sub_1C0ED71A4((uint64_t)v13, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      break;
    case 2u:
      uint64_t v21 = v26;
      sub_1C1173CF4((uint64_t)v19, v26, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      sub_1C11799CC(v21, (uint64_t)v5, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v5, 1, v27) == 1)
      {
        sub_1C1173D74((uint64_t)v5, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        sub_1C1173D74(v21, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        unint64_t v20 = 0xD00000000000001ALL;
      }
      else
      {
        uint64_t v22 = v24;
        sub_1C117A08C((uint64_t)v5, v24, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        unint64_t v28 = 0;
        unint64_t v29 = 0xE000000000000000;
        sub_1C15200FC();
        sub_1C151E80C();
        sub_1C152036C();
        sub_1C151E80C();
        unint64_t v20 = v28;
        sub_1C0ED71A4(v22, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        sub_1C1173D74(v21, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      }
      break;
    case 3u:
      sub_1C117A08C((uint64_t)v19, (uint64_t)v10, type metadata accessor for PuzzleStatisticsGroupedValue);
      unint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C152036C();
      sub_1C151E80C();
      unint64_t v20 = v28;
      sub_1C0ED71A4((uint64_t)v10, type metadata accessor for PuzzleStatisticsGroupedValue);
      break;
    default:
      sub_1C117A08C((uint64_t)v19, (uint64_t)v16, type metadata accessor for PuzzleStatisticValue);
      unint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
      sub_1C151E80C();
      sub_1C152036C();
      sub_1C151E80C();
      unint64_t v20 = v28;
      sub_1C0ED71A4((uint64_t)v16, type metadata accessor for PuzzleStatisticValue);
      break;
  }
  return v20;
}

uint64_t sub_1C116D614(uint64_t a1)
{
  unint64_t v2 = sub_1C1179828();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C116D650(uint64_t a1)
{
  unint64_t v2 = sub_1C1179828();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C116D68C()
{
  uint64_t result = 0x74615265766C6F73;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C6F536C61746F74;
      break;
    case 2:
      uint64_t result = 0x5474736574736166;
      break;
    case 3:
      uint64_t result = 0x5465676172657661;
      break;
    case 4:
      uint64_t v2 = 0x7365676E6F6CLL;
      goto LABEL_8;
    case 5:
      uint64_t v2 = 0x6E6572727563;
LABEL_8:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x5374000000000000;
      break;
    case 6:
      uint64_t result = 0x5374736568676968;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C116D78C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C11872E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C116D7B4(uint64_t a1)
{
  unint64_t v2 = sub_1C1179978();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C116D7F0(uint64_t a1)
{
  unint64_t v2 = sub_1C1179978();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C116D82C(uint64_t a1)
{
  unint64_t v2 = sub_1C1179780();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C116D868(uint64_t a1)
{
  unint64_t v2 = sub_1C1179780();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C116D8A4(uint64_t a1)
{
  unint64_t v2 = sub_1C117987C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C116D8E0(uint64_t a1)
{
  unint64_t v2 = sub_1C117987C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C116D91C(uint64_t a1)
{
  unint64_t v2 = sub_1C117972C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C116D958(uint64_t a1)
{
  unint64_t v2 = sub_1C117972C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C116D994(uint64_t a1)
{
  unint64_t v2 = sub_1C11797D4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C116D9D0(uint64_t a1)
{
  unint64_t v2 = sub_1C11797D4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C116DA0C(uint64_t a1)
{
  unint64_t v2 = sub_1C1179924();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C116DA48(uint64_t a1)
{
  unint64_t v2 = sub_1C1179924();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C116DA84(uint64_t a1)
{
  unint64_t v2 = sub_1C11798D0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C116DAC0(uint64_t a1)
{
  unint64_t v2 = sub_1C11798D0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleStatisticValue.encode(to:)(void *a1)
{
  unint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C1179F64(0, &qword_1EA1AC1A0, (uint64_t (*)(void))sub_1C117972C, (uint64_t)&type metadata for PuzzleStatisticValue.HighestScoreCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v62 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v59 = (char *)&v42 - v4;
  sub_1C1179F64(0, &qword_1EA1AC1B0, (uint64_t (*)(void))sub_1C1179780, (uint64_t)&type metadata for PuzzleStatisticValue.CurrentStreakCodingKeys, v2);
  uint64_t v60 = *(void *)(v5 - 8);
  uint64_t v61 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v58 = (char *)&v42 - v6;
  sub_1C1179F64(0, &qword_1EA1AC1C0, (uint64_t (*)(void))sub_1C11797D4, (uint64_t)&type metadata for PuzzleStatisticValue.LongestStreakCodingKeys, v2);
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v55 = (char *)&v42 - v8;
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v54 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v53 = (uint64_t)&v42 - v12;
  sub_1C1179F64(0, &qword_1EA1AC1D0, (uint64_t (*)(void))sub_1C1179828, (uint64_t)&type metadata for PuzzleStatisticValue.AverageTimeCodingKeys, v2);
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v52 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v50 = (char *)&v42 - v14;
  sub_1C1179F64(0, &qword_1EA1AC1E0, (uint64_t (*)(void))sub_1C117987C, (uint64_t)&type metadata for PuzzleStatisticValue.FastestTimeCodingKeys, v2);
  uint64_t v48 = *(void *)(v15 - 8);
  uint64_t v49 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v47 = (char *)&v42 - v16;
  sub_1C1179F64(0, &qword_1EA1AC1F0, (uint64_t (*)(void))sub_1C11798D0, (uint64_t)&type metadata for PuzzleStatisticValue.TotalSolvedCodingKeys, v2);
  uint64_t v46 = v17;
  uint64_t v45 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v44 = (char *)&v42 - v18;
  sub_1C1179F64(0, &qword_1EA1AC200, (uint64_t (*)(void))sub_1C1179924, (uint64_t)&type metadata for PuzzleStatisticValue.SolveRateCodingKeys, v2);
  uint64_t v20 = v19;
  uint64_t v43 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v42 - v21;
  uint64_t v23 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1179F64(0, &qword_1EA1AC210, (uint64_t (*)(void))sub_1C1179978, (uint64_t)&type metadata for PuzzleStatisticValue.CodingKeys, v2);
  uint64_t v65 = v26;
  uint64_t v66 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  unint64_t v28 = (char *)&v42 - v27;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1179978();
  uint64_t v64 = v28;
  sub_1C1520F0C();
  sub_1C1187E10(v67, (uint64_t)v25, type metadata accessor for PuzzleStatisticValue);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v69 = 1;
      sub_1C11798D0();
      uint64_t v31 = v44;
      uint64_t v30 = v64;
      uint64_t v29 = v65;
      sub_1C152073C();
      uint64_t v32 = v46;
      sub_1C15207FC();
      uint64_t v33 = *(void (**)(char *, uint64_t))(v45 + 8);
      uint64_t v34 = v31;
      goto LABEL_11;
    case 2u:
      char v70 = 2;
      sub_1C117987C();
      id v35 = v47;
      uint64_t v30 = v64;
      uint64_t v29 = v65;
      sub_1C152073C();
      uint64_t v32 = v49;
      sub_1C152077C();
      uint64_t v36 = v48;
      goto LABEL_10;
    case 3u:
      char v71 = 3;
      sub_1C1179828();
      id v35 = v50;
      uint64_t v30 = v64;
      uint64_t v29 = v65;
      sub_1C152073C();
      uint64_t v32 = v52;
      sub_1C152076C();
      uint64_t v36 = v51;
      goto LABEL_10;
    case 4u:
      uint64_t v37 = v53;
      sub_1C1173CF4((uint64_t)v25, v53, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      char v72 = 4;
      sub_1C11797D4();
      uint64_t v38 = v55;
      uint64_t v30 = v64;
      uint64_t v29 = v65;
      sub_1C152073C();
      type metadata accessor for PuzzleStreak();
      sub_1C117A334(&qword_1EB862D78, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
      uint64_t v39 = v57;
      sub_1C152078C();
      uint64_t v40 = v56;
      goto LABEL_8;
    case 5u:
      uint64_t v37 = v54;
      sub_1C1173CF4((uint64_t)v25, v54, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      char v73 = 5;
      sub_1C1179780();
      uint64_t v38 = v58;
      uint64_t v30 = v64;
      uint64_t v29 = v65;
      sub_1C152073C();
      type metadata accessor for PuzzleStreak();
      sub_1C117A334(&qword_1EB862D78, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
      uint64_t v39 = v61;
      sub_1C152078C();
      uint64_t v40 = v60;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
      sub_1C1173D74(v37, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      break;
    case 6u:
      char v74 = 6;
      sub_1C117972C();
      id v35 = v59;
      uint64_t v30 = v64;
      uint64_t v29 = v65;
      sub_1C152073C();
      uint64_t v32 = v63;
      sub_1C152077C();
      uint64_t v36 = v62;
LABEL_10:
      uint64_t v33 = *(void (**)(char *, uint64_t))(v36 + 8);
      uint64_t v34 = v35;
LABEL_11:
      v33(v34, v32);
      break;
    default:
      char v68 = 0;
      sub_1C1179924();
      uint64_t v30 = v64;
      uint64_t v29 = v65;
      sub_1C152073C();
      sub_1C152076C();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v20);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v30, v29);
}

uint64_t PuzzleStatisticValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v126 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C1179F64(0, &qword_1EA1AC220, (uint64_t (*)(void))sub_1C117972C, (uint64_t)&type metadata for PuzzleStatisticValue.HighestScoreCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v118 = v4;
  uint64_t v119 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v131 = (char *)&v100 - v6;
  sub_1C1179F64(0, &qword_1EA1AC228, (uint64_t (*)(void))sub_1C1179780, (uint64_t)&type metadata for PuzzleStatisticValue.CurrentStreakCodingKeys, v3);
  uint64_t v120 = *(void *)(v7 - 8);
  uint64_t v121 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v125 = (char *)&v100 - v8;
  sub_1C1179F64(0, &qword_1EA1AC230, (uint64_t (*)(void))sub_1C11797D4, (uint64_t)&type metadata for PuzzleStatisticValue.LongestStreakCodingKeys, v3);
  uint64_t v116 = *(void *)(v9 - 8);
  uint64_t v117 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v130 = (char *)&v100 - v10;
  sub_1C1179F64(0, &qword_1EA1AC238, (uint64_t (*)(void))sub_1C1179828, (uint64_t)&type metadata for PuzzleStatisticValue.AverageTimeCodingKeys, v3);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v114 = v11;
  uint64_t v115 = v12;
  MEMORY[0x1F4188790](v11);
  long long v124 = (char *)&v100 - v13;
  sub_1C1179F64(0, &qword_1EA1AC240, (uint64_t (*)(void))sub_1C117987C, (uint64_t)&type metadata for PuzzleStatisticValue.FastestTimeCodingKeys, v3);
  uint64_t v113 = v14;
  uint64_t v112 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v129 = (char *)&v100 - v15;
  sub_1C1179F64(0, &qword_1EA1AC248, (uint64_t (*)(void))sub_1C11798D0, (uint64_t)&type metadata for PuzzleStatisticValue.TotalSolvedCodingKeys, v3);
  uint64_t v111 = v16;
  uint64_t v110 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  long long v123 = (char *)&v100 - v17;
  sub_1C1179F64(0, &qword_1EA1AC250, (uint64_t (*)(void))sub_1C1179924, (uint64_t)&type metadata for PuzzleStatisticValue.SolveRateCodingKeys, v3);
  uint64_t v109 = v18;
  uint64_t v108 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v122 = (char *)&v100 - v19;
  sub_1C1179F64(0, &qword_1EA1AC258, (uint64_t (*)(void))sub_1C1179978, (uint64_t)&type metadata for PuzzleStatisticValue.CodingKeys, v3);
  uint64_t v127 = *(void *)(v20 - 8);
  uint64_t v128 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v100 - v21;
  uint64_t v132 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v132);
  uint64_t v105 = (uint64_t *)((char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v24);
  uint64_t v107 = (char *)&v100 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v106 = (char *)&v100 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v100 - v29;
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v100 - v32;
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (char *)&v100 - v35;
  MEMORY[0x1F4188790](v37);
  uint64_t v39 = (char *)&v100 - v38;
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (char *)&v100 - v41;
  uint64_t v43 = a1;
  uint64_t v44 = a1[3];
  uint64_t v133 = v43;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  sub_1C1179978();
  uint64_t v45 = v134;
  sub_1C1520EBC();
  if (!v45)
  {
    uint64_t v101 = (uint64_t *)v36;
    uint64_t v102 = (uint64_t *)v33;
    uint64_t v103 = (uint64_t *)v30;
    uint64_t v104 = (uint64_t *)v39;
    uint64_t v47 = v129;
    uint64_t v46 = v130;
    uint64_t v48 = v131;
    uint64_t v49 = v132;
    uint64_t v134 = v42;
    uint64_t v50 = v128;
    uint64_t v51 = sub_1C152070C();
    if (*(void *)(v51 + 16) == 1)
    {
      uint64_t v52 = (uint64_t)v134;
      switch(*(unsigned char *)(v51 + 32))
      {
        case 1:
          char v136 = 1;
          sub_1C11798D0();
          uint64_t v61 = v123;
          sub_1C15205CC();
          uint64_t v62 = v111;
          uint64_t v63 = sub_1C15206DC();
          uint64_t v64 = v61;
          uint64_t v65 = v127;
          uint64_t v90 = v63;
          (*(void (**)(char *, uint64_t))(v110 + 8))(v64, v62);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v65 + 8))(v22, v50);
          uint64_t v89 = (uint64_t)v101;
          *uint64_t v101 = v90;
          goto LABEL_13;
        case 2:
          char v137 = 2;
          sub_1C117987C();
          sub_1C15205CC();
          uint64_t v66 = v113;
          uint64_t v67 = sub_1C152063C();
          char v68 = v47;
          uint64_t v69 = v127;
          uint64_t v91 = v67;
          char v93 = v92;
          (*(void (**)(char *, uint64_t))(v112 + 8))(v68, v66);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v69 + 8))(v22, v50);
          uint64_t v89 = (uint64_t)v102;
          *uint64_t v102 = v91;
          *(unsigned char *)(v89 + 8) = v93 & 1;
          goto LABEL_15;
        case 3:
          char v138 = 3;
          sub_1C1179828();
          char v70 = v124;
          sub_1C15205CC();
          uint64_t v71 = v114;
          uint64_t v72 = sub_1C152062C();
          char v73 = v70;
          uint64_t v74 = v127;
          uint64_t v94 = v72;
          char v96 = v95;
          (*(void (**)(char *, uint64_t))(v115 + 8))(v73, v71);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v74 + 8))(v22, v50);
          uint64_t v89 = (uint64_t)v103;
          uint64_t *v103 = v94;
          *(unsigned char *)(v89 + 8) = v96 & 1;
          goto LABEL_15;
        case 4:
          char v139 = 4;
          sub_1C11797D4();
          sub_1C15205CC();
          type metadata accessor for PuzzleStreak();
          uint64_t v75 = v46;
          sub_1C117A334(&qword_1EB862D80, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          uint64_t v76 = v106;
          uint64_t v77 = v117;
          sub_1C152065C();
          uint64_t v78 = v127;
          (*(void (**)(char *, uint64_t))(v116 + 8))(v75, v77);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v78 + 8))(v22, v50);
          goto LABEL_14;
        case 5:
          char v140 = 5;
          sub_1C1179780();
          char v79 = v125;
          sub_1C15205CC();
          type metadata accessor for PuzzleStreak();
          char v80 = v79;
          sub_1C117A334(&qword_1EB862D80, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          uint64_t v76 = v107;
          uint64_t v81 = v121;
          sub_1C152065C();
          uint64_t v82 = v127;
          (*(void (**)(char *, uint64_t))(v120 + 8))(v80, v81);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v82 + 8))(v22, v50);
LABEL_14:
          swift_storeEnumTagMultiPayload();
          uint64_t v89 = (uint64_t)v76;
          break;
        case 6:
          char v141 = 6;
          sub_1C117972C();
          sub_1C15205CC();
          uint64_t v83 = v118;
          uint64_t v84 = sub_1C152063C();
          uint64_t v85 = v127;
          uint64_t v97 = v84;
          char v99 = v98;
          (*(void (**)(char *, uint64_t))(v119 + 8))(v48, v83);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v85 + 8))(v22, v50);
          uint64_t v89 = (uint64_t)v105;
          uint64_t *v105 = v97;
          *(unsigned char *)(v89 + 8) = v99 & 1;
LABEL_15:
          swift_storeEnumTagMultiPayload();
          uint64_t v52 = (uint64_t)v134;
          break;
        default:
          char v135 = 0;
          sub_1C1179924();
          uint64_t v53 = v122;
          sub_1C15205CC();
          uint64_t v54 = v109;
          uint64_t v55 = sub_1C152062C();
          uint64_t v56 = v53;
          uint64_t v86 = v55;
          char v88 = v87;
          (*(void (**)(char *, uint64_t))(v108 + 8))(v56, v54);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v127 + 8))(v22, v50);
          uint64_t v89 = (uint64_t)v104;
          *uint64_t v104 = v86;
          *(unsigned char *)(v89 + 8) = v88 & 1;
LABEL_13:
          swift_storeEnumTagMultiPayload();
          break;
      }
      sub_1C117A08C(v89, v52, type metadata accessor for PuzzleStatisticValue);
      sub_1C117A08C(v52, v126, type metadata accessor for PuzzleStatisticValue);
    }
    else
    {
      uint64_t v57 = sub_1C15201EC();
      swift_allocError();
      uint64_t v59 = v58;
      sub_1C01AC8BC();
      *uint64_t v59 = v49;
      sub_1C15205DC();
      sub_1C15201AC();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v57 - 8) + 104))(v59, *MEMORY[0x1E4FBBA70], v57);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v127 + 8))(v22, v50);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v133);
}

uint64_t sub_1C116F5F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleStatisticValue.init(from:)(a1, a2);
}

uint64_t sub_1C116F608(void *a1)
{
  return PuzzleStatisticValue.encode(to:)(a1);
}

unint64_t PuzzleStatisticValue.debugDescription.getter()
{
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v26 - v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v26 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187E10(v0, (uint64_t)v15, type metadata accessor for PuzzleStatisticValue);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v17 = *(void *)v15;
      uint64_t v18 = 0x6C6F536C61746F74;
      uint64_t v19 = 677668214;
      goto LABEL_16;
    case 2u:
      if (v15[8]) {
        return 0xD000000000000010;
      }
      uint64_t v17 = *(void *)v15;
      uint64_t v18 = 0x5474736574736166;
      uint64_t v19 = 677735785;
LABEL_16:
      v28[0] = v18;
      v28[1] = v19 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      uint64_t v27 = v17;
      goto LABEL_22;
    case 3u:
      char v21 = v15[8];
      strcpy((char *)v28, "averageTime(");
      BYTE5(v28[1]) = 0;
      HIWORD(v28[1]) = -5120;
      if (v21) {
        goto LABEL_23;
      }
      goto LABEL_3;
    case 4u:
      sub_1C1173CF4((uint64_t)v15, (uint64_t)v12, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      v28[0] = 0;
      v28[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      strcpy((char *)v28, "longestStreak(");
      HIBYTE(v28[1]) = -18;
      sub_1C11799CC((uint64_t)v12, (uint64_t)v9, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      uint64_t v22 = type metadata accessor for PuzzleStreak();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v9, 1, v22) == 1)
      {
        sub_1C1173D74((uint64_t)v9, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      }
      else
      {
        PuzzleStreak.debugDescription.getter();
        sub_1C0ED71A4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      }
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v20 = v28[0];
      sub_1C1173D74((uint64_t)v12, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      return v20;
    case 5u:
      sub_1C1173CF4((uint64_t)v15, (uint64_t)v6, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      v28[0] = 0;
      v28[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      strcpy((char *)v28, "currentStreak(");
      HIBYTE(v28[1]) = -18;
      sub_1C11799CC((uint64_t)v6, (uint64_t)v3, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      uint64_t v23 = type metadata accessor for PuzzleStreak();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v3, 1, v23) == 1)
      {
        sub_1C1173D74((uint64_t)v3, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      }
      else
      {
        PuzzleStreak.debugDescription.getter();
        sub_1C0ED71A4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      }
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v20 = v28[0];
      sub_1C1173D74((uint64_t)v6, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      return v20;
    case 6u:
      if (v15[8]) {
        return 0xD000000000000011;
      }
      uint64_t v24 = *(void *)v15;
      v28[0] = 0;
      v28[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      strcpy((char *)v28, "highestScore(");
      HIWORD(v28[1]) = -4864;
      uint64_t v27 = v24;
LABEL_22:
      sub_1C152088C();
LABEL_23:
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      return v28[0];
    default:
      char v16 = v15[8];
      strcpy((char *)v28, "solveRate(");
      BYTE3(v28[1]) = 0;
      HIDWORD(v28[1]) = -369098752;
      if ((v16 & 1) == 0) {
LABEL_3:
      }
        sub_1C151EF5C();
      goto LABEL_23;
  }
}

uint64_t sub_1C116FC70()
{
  uint64_t v1 = 0x6574617265646F6DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x676E656C6C616863;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 2037604709;
  }
}

uint64_t sub_1C116FCCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1170A24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C116FCF4(uint64_t a1)
{
  unint64_t v2 = sub_1C1179A4C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C116FD30(uint64_t a1)
{
  unint64_t v2 = sub_1C1179A4C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleStatisticDifficultyLevelValue.encode(to:)(void *a1)
{
  sub_1C1179F64(0, &qword_1EA1AC260, (uint64_t (*)(void))sub_1C1179A4C, (uint64_t)&type metadata for PuzzleStatisticDifficultyLevelValue.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1179A4C();
  sub_1C1520F0C();
  char v12 = 0;
  type metadata accessor for PuzzleStatisticValue(0);
  sub_1C117A334(&qword_1EA1AC150, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticValue);
  sub_1C152080C();
  if (!v1)
  {
    type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
    char v11 = 1;
    sub_1C152080C();
    char v10 = 2;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PuzzleStatisticDifficultyLevelValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v23 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v23);
  char v21 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v24 = (uint64_t)&v19 - v8;
  sub_1C1179F64(0, &qword_1EA1AC270, (uint64_t (*)(void))sub_1C1179A4C, (uint64_t)&type metadata for PuzzleStatisticDifficultyLevelValue.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v25 = v9;
  uint64_t v22 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v19 - v10;
  uint64_t v12 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1179A4C();
  uint64_t v15 = (uint64_t)v26;
  sub_1C1520EBC();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v16 = v22;
  uint64_t v26 = a1;
  uint64_t v19 = v12;
  char v29 = 0;
  sub_1C117A334(&qword_1EA1AC198, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticValue);
  sub_1C15206EC();
  sub_1C117A08C(v24, (uint64_t)v14, type metadata accessor for PuzzleStatisticValue);
  char v28 = 1;
  sub_1C15206EC();
  sub_1C117A08C((uint64_t)v6, (uint64_t)&v14[*(int *)(v19 + 20)], type metadata accessor for PuzzleStatisticValue);
  char v27 = 2;
  uint64_t v17 = (uint64_t)v21;
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v25);
  sub_1C117A08C(v17, (uint64_t)&v14[*(int *)(v19 + 24)], type metadata accessor for PuzzleStatisticValue);
  sub_1C1187E10((uint64_t)v14, v20, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return sub_1C0ED71A4((uint64_t)v14, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
}

uint64_t sub_1C117042C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleStatisticDifficultyLevelValue.init(from:)(a1, a2);
}

uint64_t sub_1C1170444(void *a1)
{
  return PuzzleStatisticDifficultyLevelValue.encode(to:)(a1);
}

uint64_t PuzzleStatisticDifficultyLevelValue.debugDescription.getter()
{
  return 0x203A79736165;
}

uint64_t PuzzleStatisticDifficultyLevel.easy.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t PuzzleStatisticDifficultyLevel.moderate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t PuzzleStatisticDifficultyLevel.challenging.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 56));
}

uint64_t sub_1C117061C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = MEMORY[0x1E4FBB550];
  sub_1C1187ED4(a1, (uint64_t)v16, &qword_1EB87A090, MEMORY[0x1E4FBB550]);
  uint64_t v5 = *a2;
  char v6 = *((unsigned char *)a2 + 8);
  sub_1C1187ED4((uint64_t)v16, (uint64_t)v17, &qword_1EB87A090, v4);
  if ((v17[8] & 1) == 0)
  {
    sub_1C1187ED4((uint64_t)v16, (uint64_t)&v19, &qword_1EB87A090, MEMORY[0x1E4FBB550]);
    if ((v6 & 1) != 0 || v19 != v5) {
      return 0;
    }
LABEL_6:
    sub_1C1187ED4(a1 + 16, (uint64_t)v15, &qword_1EB87A090, v4);
    uint64_t v7 = a2[2];
    char v8 = *((unsigned char *)a2 + 24);
    sub_1C1187ED4((uint64_t)v15, (uint64_t)v18, &qword_1EB87A090, v4);
    if (v18[8])
    {
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      sub_1C1187ED4((uint64_t)v15, (uint64_t)&v19, &qword_1EB87A090, MEMORY[0x1E4FBB550]);
      if ((v8 & 1) != 0 || v19 != v7) {
        return 0;
      }
    }
    uint64_t v9 = MEMORY[0x1E4FBB550];
    sub_1C1187ED4(a1 + 32, (uint64_t)v14, &qword_1EB87A090, MEMORY[0x1E4FBB550]);
    uint64_t v10 = a2[4];
    char v11 = *((unsigned char *)a2 + 40);
    sub_1C1187ED4((uint64_t)v14, (uint64_t)&v19, &qword_1EB87A090, v9);
    if (v20)
    {
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      sub_1C1187ED4((uint64_t)v14, (uint64_t)&v13, &qword_1EB87A090, MEMORY[0x1E4FBB550]);
      if ((v11 & 1) != 0 || v13 != v10) {
        return 0;
      }
    }
    return 1;
  }
  if (v6) {
    goto LABEL_6;
  }
  return 0;
}

uint64_t sub_1C11707C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = MEMORY[0x1E4FBB3D0];
  sub_1C1187ED4(a1, (uint64_t)v16, (unint64_t *)&qword_1EB8900F8, MEMORY[0x1E4FBB3D0]);
  double v5 = *(double *)a2;
  char v6 = *(unsigned char *)(a2 + 8);
  sub_1C1187ED4((uint64_t)v16, (uint64_t)v17, (unint64_t *)&qword_1EB8900F8, v4);
  if ((v17[8] & 1) == 0)
  {
    sub_1C1187ED4((uint64_t)v16, (uint64_t)&v19, (unint64_t *)&qword_1EB8900F8, MEMORY[0x1E4FBB3D0]);
    if ((v6 & 1) != 0 || v19 != v5) {
      return 0;
    }
LABEL_6:
    sub_1C1187ED4(a1 + 16, (uint64_t)v15, (unint64_t *)&qword_1EB8900F8, v4);
    double v7 = *(double *)(a2 + 16);
    char v8 = *(unsigned char *)(a2 + 24);
    sub_1C1187ED4((uint64_t)v15, (uint64_t)v18, (unint64_t *)&qword_1EB8900F8, v4);
    if (v18[8])
    {
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      sub_1C1187ED4((uint64_t)v15, (uint64_t)&v19, (unint64_t *)&qword_1EB8900F8, MEMORY[0x1E4FBB3D0]);
      if ((v8 & 1) != 0 || v19 != v7) {
        return 0;
      }
    }
    uint64_t v9 = MEMORY[0x1E4FBB3D0];
    sub_1C1187ED4(a1 + 32, (uint64_t)v14, (unint64_t *)&qword_1EB8900F8, MEMORY[0x1E4FBB3D0]);
    double v10 = *(double *)(a2 + 32);
    char v11 = *(unsigned char *)(a2 + 40);
    sub_1C1187ED4((uint64_t)v14, (uint64_t)&v19, (unint64_t *)&qword_1EB8900F8, v9);
    if (v20)
    {
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      sub_1C1187ED4((uint64_t)v14, (uint64_t)v13, (unint64_t *)&qword_1EB8900F8, MEMORY[0x1E4FBB3D0]);
      if ((v11 & 1) != 0 || v13[0] != v10) {
        return 0;
      }
    }
    return 1;
  }
  if (v6) {
    goto LABEL_6;
  }
  return 0;
}

uint64_t static PuzzleStatisticDifficultyLevel.== infix(_:_:)()
{
  if ((sub_1C151E5CC() & 1) != 0
    && (type metadata accessor for PuzzleStatisticDifficultyLevel(), (sub_1C151E5CC() & 1) != 0))
  {
    char v0 = sub_1C151E5CC();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t sub_1C1170A24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 2037604709 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617265646F6DLL && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E656C6C616863 && a2 == 0xEB00000000676E69)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C1170B84(char a1)
{
  if (!a1) {
    return 2037604709;
  }
  if (a1 == 1) {
    return 0x6574617265646F6DLL;
  }
  return 0x676E656C6C616863;
}

uint64_t sub_1C1170BDC()
{
  return sub_1C1170B84(*v0);
}

uint64_t sub_1C1170BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1170A24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1170C20@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C00C51F0();
  *a1 = result;
  return result;
}

uint64_t sub_1C1170C54(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C1170CA8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t PuzzleStatisticDifficultyLevel.encode(to:)(void *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v11 = *(_OWORD *)(a2 + 16);
  long long v12 = v3;
  v10[1] = a2;
  long long v13 = v11;
  long long v14 = v3;
  type metadata accessor for PuzzleStatisticDifficultyLevel.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_1C152083C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v7 = (char *)v10 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520F0C();
  LOBYTE(v13) = 0;
  uint64_t v8 = v15;
  sub_1C152080C();
  if (!v8)
  {
    LOBYTE(v13) = 1;
    sub_1C152080C();
    LOBYTE(v13) = 2;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PuzzleStatisticDifficultyLevel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v43 = a6;
  uint64_t v49 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v44 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v46 = (char *)&v39 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v47 = (char *)&v39 - v15;
  uint64_t v53 = v16;
  uint64_t v54 = v17;
  uint64_t v55 = v18;
  uint64_t v56 = v19;
  type metadata accessor for PuzzleStatisticDifficultyLevel.CodingKeys();
  swift_getWitnessTable();
  uint64_t v51 = sub_1C152072C();
  uint64_t v45 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  char v21 = (char *)&v39 - v20;
  uint64_t v48 = a2;
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  uint64_t v50 = a3;
  uint64_t v55 = a4;
  uint64_t v56 = a5;
  uint64_t v22 = type metadata accessor for PuzzleStatisticDifficultyLevel();
  uint64_t v42 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v39 - v23;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v52 = v21;
  uint64_t v25 = (uint64_t)v57;
  sub_1C1520EBC();
  if (v25) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v27 = v45;
  uint64_t v26 = v46;
  uint64_t v41 = v24;
  uint64_t v57 = a1;
  uint64_t v28 = v48;
  uint64_t v29 = v49;
  LOBYTE(v53) = 0;
  uint64_t v30 = v47;
  sub_1C15206EC();
  uint64_t v47 = *(char **)(v29 + 32);
  ((void (*)(char *, char *, uint64_t))v47)(v41, v30, v28);
  LOBYTE(v53) = 1;
  uint64_t v31 = v26;
  sub_1C15206EC();
  uint64_t v40 = v22;
  uint64_t v32 = v41;
  uint64_t v33 = &v41[*(int *)(v22 + 52)];
  uint64_t v34 = (void (*)(char *, char *, uint64_t))v47;
  ((void (*)(char *, char *, uint64_t))v47)(v33, v31, v28);
  LOBYTE(v53) = 2;
  uint64_t v35 = v44;
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v52, v51);
  uint64_t v36 = v40;
  v34(&v32[*(int *)(v40 + 56)], v35, v28);
  uint64_t v37 = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v43, v32, v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v32, v36);
}

uint64_t sub_1C11713A8@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return PuzzleStatisticDifficultyLevel.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_1C11713CC(void *a1, uint64_t a2)
{
  return PuzzleStatisticDifficultyLevel.encode(to:)(a1, a2);
}

uint64_t sub_1C11713E4()
{
  return static PuzzleStatisticDifficultyLevel.== infix(_:_:)();
}

uint64_t PuzzleStatisticsGroupedValue.totalSolved.getter()
{
  return *(void *)v0;
}

uint64_t PuzzleStatisticsGroupedValue.solveRate.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t PuzzleStatisticsGroupedValue.longestStreak.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
  return sub_1C11799CC(v1 + *(int *)(v3 + 24), a1, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
}

uint64_t PuzzleStatisticsGroupedValue.currentStreak.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
  return sub_1C11799CC(v1 + *(int *)(v3 + 28), a1, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
}

uint64_t PuzzleStatisticsGroupedValue.fastestTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for PuzzleStatisticsGroupedValue(0);
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 32));
  uint64_t v5 = *v4;
  char v6 = *((unsigned char *)v4 + 8);
  uint64_t v7 = v4[2];
  char v8 = *((unsigned char *)v4 + 24);
  uint64_t v9 = v4[4];
  LOBYTE(v4) = *((unsigned char *)v4 + 40);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = (_BYTE)v4;
  return result;
}

uint64_t PuzzleStatisticsGroupedValue.averageTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for PuzzleStatisticsGroupedValue(0);
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 36));
  uint64_t v5 = *v4;
  char v6 = *((unsigned char *)v4 + 8);
  uint64_t v7 = v4[2];
  char v8 = *((unsigned char *)v4 + 24);
  uint64_t v9 = v4[4];
  LOBYTE(v4) = *((unsigned char *)v4 + 40);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = (_BYTE)v4;
  return result;
}

uint64_t PuzzleStatisticsGroupedValue.highestScore.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for PuzzleStatisticsGroupedValue(0);
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 40));
  uint64_t v5 = *v4;
  char v6 = *((unsigned char *)v4 + 8);
  uint64_t v7 = v4[2];
  char v8 = *((unsigned char *)v4 + 24);
  uint64_t v9 = v4[4];
  LOBYTE(v4) = *((unsigned char *)v4 + 40);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = (_BYTE)v4;
  return result;
}

uint64_t sub_1C11715D0()
{
  uint64_t result = 0x6C6F536C61746F74;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x74615265766C6F73;
      break;
    case 2:
      uint64_t v2 = 0x7365676E6F6CLL;
      goto LABEL_5;
    case 3:
      uint64_t v2 = 0x6E6572727563;
LABEL_5:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x5374000000000000;
      break;
    case 4:
      uint64_t result = 0x5474736574736166;
      break;
    case 5:
      uint64_t result = 0x5465676172657661;
      break;
    case 6:
      uint64_t result = 0x5374736568676968;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C11716D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1187854(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C11716F8(uint64_t a1)
{
  unint64_t v2 = sub_1C1179AD0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1171734(uint64_t a1)
{
  unint64_t v2 = sub_1C1179AD0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleStatisticsGroupedValue.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C1179F64(0, &qword_1EA1AC278, (uint64_t (*)(void))sub_1C1179AD0, (uint64_t)&type metadata for PuzzleStatisticsGroupedValue.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v30 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1179AD0();
  sub_1C1520F0C();
  LOBYTE(v30) = 0;
  sub_1C15207FC();
  if (!v2)
  {
    LOBYTE(v30) = 1;
    sub_1C152076C();
    double v10 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
    LOBYTE(v30) = 2;
    type metadata accessor for PuzzleStreak();
    sub_1C117A334(&qword_1EB862D78, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
    sub_1C152078C();
    LOBYTE(v30) = 3;
    sub_1C152078C();
    uint64_t v11 = (uint64_t *)(v3 + v10[8]);
    uint64_t v12 = *v11;
    char v13 = *((unsigned char *)v11 + 8);
    uint64_t v14 = v11[2];
    char v15 = *((unsigned char *)v11 + 24);
    uint64_t v16 = v11[4];
    LOBYTE(v11) = *((unsigned char *)v11 + 40);
    uint64_t v30 = v12;
    char v31 = v13;
    uint64_t v32 = v14;
    char v33 = v15;
    uint64_t v34 = v16;
    char v35 = (char)v11;
    char v36 = 4;
    sub_1C1179B24();
    sub_1C117A334(&qword_1EA1AC2A8, (void (*)(uint64_t))sub_1C1179B24);
    sub_1C152080C();
    uint64_t v17 = (uint64_t *)(v3 + v10[9]);
    uint64_t v18 = *v17;
    char v19 = *((unsigned char *)v17 + 8);
    uint64_t v20 = v17[2];
    char v21 = *((unsigned char *)v17 + 24);
    uint64_t v22 = v17[4];
    LOBYTE(v17) = *((unsigned char *)v17 + 40);
    uint64_t v30 = v18;
    char v31 = v19;
    uint64_t v32 = v20;
    char v33 = v21;
    uint64_t v34 = v22;
    char v35 = (char)v17;
    char v36 = 5;
    sub_1C1179CC0();
    sub_1C117A334(&qword_1EA1AC2D0, (void (*)(uint64_t))sub_1C1179CC0);
    sub_1C152080C();
    uint64_t v23 = (uint64_t *)(v3 + v10[10]);
    uint64_t v24 = *v23;
    char v25 = *((unsigned char *)v23 + 8);
    uint64_t v26 = v23[2];
    char v27 = *((unsigned char *)v23 + 24);
    uint64_t v28 = v23[4];
    LOBYTE(v23) = *((unsigned char *)v23 + 40);
    uint64_t v30 = v24;
    char v31 = v25;
    uint64_t v32 = v26;
    char v33 = v27;
    uint64_t v34 = v28;
    char v35 = (char)v23;
    char v36 = 6;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t PuzzleStatisticsGroupedValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v48 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v44 - v6;
  sub_1C1179F64(0, &qword_1EA1AC2D8, (uint64_t (*)(void))sub_1C1179AD0, (uint64_t)&type metadata for PuzzleStatisticsGroupedValue.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v49 = v8;
  uint64_t v47 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  double v10 = (char *)&v44 - v9;
  uint64_t v11 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1179AD0();
  uint64_t v50 = v10;
  uint64_t v14 = v51;
  sub_1C1520EBC();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = v47;
  uint64_t v16 = (uint64_t)v48;
  LOBYTE(v52) = 0;
  *(void *)char v13 = sub_1C15206DC();
  LOBYTE(v52) = 1;
  *((void *)v13 + 1) = sub_1C152062C();
  v13[16] = v17 & 1;
  type metadata accessor for PuzzleStreak();
  LOBYTE(v52) = 2;
  uint64_t v18 = sub_1C117A334(&qword_1EB862D80, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
  uint64_t v51 = v13;
  uint64_t v45 = v18;
  sub_1C152065C();
  sub_1C1173CF4((uint64_t)v7, (uint64_t)&v51[*(int *)(v11 + 24)], &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  LOBYTE(v52) = 3;
  sub_1C152065C();
  uint64_t v45 = v11;
  uint64_t v19 = (uint64_t)v51;
  sub_1C1173CF4(v16, (uint64_t)&v51[*(int *)(v11 + 28)], &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  sub_1C1179B24();
  char v21 = v20;
  char v58 = 4;
  uint64_t v22 = sub_1C117A334(&qword_1EA1AC2E0, (void (*)(uint64_t))sub_1C1179B24);
  uint64_t v23 = v49;
  sub_1C15206EC();
  uint64_t v44 = v22;
  uint64_t v48 = v21;
  char v24 = v53;
  uint64_t v25 = v54;
  char v26 = v55;
  uint64_t v27 = v56;
  char v28 = v57;
  uint64_t v29 = v45;
  uint64_t v30 = v19 + *(int *)(v45 + 32);
  *(void *)uint64_t v30 = v52;
  *(unsigned char *)(v30 + 8) = v24;
  *(void *)(v30 + 16) = v25;
  *(unsigned char *)(v30 + 24) = v26;
  *(void *)(v30 + 32) = v27;
  *(unsigned char *)(v30 + 40) = v28;
  sub_1C1179CC0();
  char v58 = 5;
  sub_1C117A334(&qword_1EA1AC2E8, (void (*)(uint64_t))sub_1C1179CC0);
  sub_1C15206EC();
  char v31 = v53;
  uint64_t v32 = v54;
  char v33 = v55;
  uint64_t v34 = v56;
  char v35 = v57;
  uint64_t v36 = v19 + *(int *)(v29 + 36);
  *(void *)uint64_t v36 = v52;
  *(unsigned char *)(v36 + 8) = v31;
  *(void *)(v36 + 16) = v32;
  *(unsigned char *)(v36 + 24) = v33;
  *(void *)(v36 + 32) = v34;
  *(unsigned char *)(v36 + 40) = v35;
  char v58 = 6;
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v50, v23);
  char v37 = v53;
  uint64_t v38 = v54;
  char v39 = v55;
  uint64_t v40 = v56;
  char v41 = v57;
  uint64_t v42 = v19 + *(int *)(v29 + 40);
  *(void *)uint64_t v42 = v52;
  *(unsigned char *)(v42 + 8) = v37;
  *(void *)(v42 + 16) = v38;
  *(unsigned char *)(v42 + 24) = v39;
  *(void *)(v42 + 32) = v40;
  *(unsigned char *)(v42 + 40) = v41;
  sub_1C1187E10(v19, v46, type metadata accessor for PuzzleStatisticsGroupedValue);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1C0ED71A4(v19, type metadata accessor for PuzzleStatisticsGroupedValue);
}

uint64_t sub_1C11722A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleStatisticsGroupedValue.init(from:)(a1, a2);
}

uint64_t sub_1C11722B8(void *a1)
{
  return PuzzleStatisticsGroupedValue.encode(to:)(a1);
}

unint64_t sub_1C11722D0()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x73656972746E65;
      break;
    case 3:
      unint64_t result = 0x6F6272656461656CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C117236C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1187BDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1172394(uint64_t a1)
{
  unint64_t v2 = sub_1C1179F10();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C11723D0(uint64_t a1)
{
  unint64_t v2 = sub_1C1179F10();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleStatisticsGameCenterLeaderboardResult.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C1179F64(0, &qword_1EA1AC2F0, (uint64_t (*)(void))sub_1C1179F10, (uint64_t)&type metadata for PuzzleStatisticsGameCenterLeaderboardResult.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1179F10();
  sub_1C1520F0C();
  char v15 = 0;
  type metadata accessor for PuzzleLeaderboardEntry();
  sub_1C117A334(&qword_1EA1AC300, (void (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry);
  sub_1C152080C();
  if (!v2)
  {
    v11[1] = *(void *)(v3 + *(int *)(type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0) + 20));
    char v14 = 1;
    sub_1C00671B8(0, &qword_1EA1AC308, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry, MEMORY[0x1E4FBB320]);
    sub_1C1179FCC(&qword_1EA1AC310, &qword_1EA1AC300);
    sub_1C152080C();
    char v13 = 2;
    sub_1C15207FC();
    char v12 = 3;
    sub_1C152074C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t PuzzleStatisticsGameCenterLeaderboardResult.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = type metadata accessor for PuzzleLeaderboardEntry();
  MEMORY[0x1F4188790](v3);
  uint64_t v25 = (uint64_t)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1179F64(0, &qword_1EA1AC318, (uint64_t (*)(void))sub_1C1179F10, (uint64_t)&type metadata for PuzzleStatisticsGameCenterLeaderboardResult.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v24 = v5;
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  MEMORY[0x1F4188790](v8);
  double v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1179F10();
  char v26 = v7;
  uint64_t v11 = v27;
  sub_1C1520EBC();
  if (v11) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = v22;
  uint64_t v12 = v23;
  uint64_t v14 = (uint64_t)v10;
  char v32 = 0;
  sub_1C117A334(&qword_1EA1AC320, (void (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry);
  sub_1C15206EC();
  sub_1C117A08C(v25, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
  sub_1C00671B8(0, &qword_1EA1AC308, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry, MEMORY[0x1E4FBB320]);
  char v31 = 1;
  sub_1C1179FCC(&qword_1EA1AC328, &qword_1EA1AC320);
  sub_1C15206EC();
  uint64_t v15 = v8;
  *(void *)(v14 + *(int *)(v8 + 20)) = v28;
  char v30 = 2;
  *(void *)(v14 + *(int *)(v8 + 24)) = sub_1C15206DC();
  char v29 = 3;
  uint64_t v16 = sub_1C152060C();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v26, v24);
  uint64_t v19 = (uint64_t *)(v14 + *(int *)(v15 + 28));
  *uint64_t v19 = v16;
  v19[1] = v18;
  sub_1C1187E10(v14, v12, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1C0ED71A4(v14, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
}

uint64_t sub_1C1172B64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleStatisticsGameCenterLeaderboardResult.init(from:)(a1, a2);
}

uint64_t sub_1C1172B7C(void *a1)
{
  return PuzzleStatisticsGameCenterLeaderboardResult.encode(to:)(a1);
}

void *static PuzzleDifficultyLevel.allCases.getter()
{
  return &unk_1F1B8A240;
}

uint64_t sub_1C1172BA0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C1172BF0()
{
  return sub_1C1520DFC();
}

uint64_t sub_1C1172C28()
{
  return sub_1C1520E0C();
}

NewsFeed::PuzzleDifficultyLevel_optional sub_1C1172C74(Swift::Int64 *a1)
{
  return PuzzleDifficultyLevel.init(rawValue:)(*a1);
}

void sub_1C1172C7C(void *a1@<X8>)
{
  *a1 = 10 * *v1 + 10;
}

void sub_1C1172C94(void *a1@<X8>)
{
  *a1 = &unk_1F1B6B178;
}

uint64_t PuzzleStatisticValue.statisticType.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187E10(v2, (uint64_t)v6, type metadata accessor for PuzzleStatisticValue);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      char v8 = 2;
      goto LABEL_10;
    case 2:
      char v8 = 4;
      goto LABEL_10;
    case 3:
      char v8 = 5;
      goto LABEL_10;
    case 4:
      *a1 = 0;
      return sub_1C0ED71A4((uint64_t)v6, type metadata accessor for PuzzleStatisticValue);
    case 5:
      *a1 = 1;
      return sub_1C0ED71A4((uint64_t)v6, type metadata accessor for PuzzleStatisticValue);
    case 6:
      char v8 = 6;
      goto LABEL_10;
    default:
      char v8 = 3;
LABEL_10:
      *a1 = v8;
      return result;
  }
}

uint64_t PuzzleStatisticDifficultyLevelValue.statisticType.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v8 = (char *)&v11 - v7;
  sub_1C1187E10(v1, (uint64_t)&v11 - v7, type metadata accessor for PuzzleStatisticValue);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2) {
    goto LABEL_5;
  }
  sub_1C0ED71A4((uint64_t)v8, type metadata accessor for PuzzleStatisticValue);
  sub_1C1187E10(v1, (uint64_t)v5, type metadata accessor for PuzzleStatisticValue);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 3)
  {
    uint64_t result = sub_1C0ED71A4((uint64_t)v5, type metadata accessor for PuzzleStatisticValue);
LABEL_5:
    char v10 = 4;
    goto LABEL_6;
  }
  char v10 = 5;
LABEL_6:
  *a1 = v10;
  return result;
}

uint64_t PuzzleStatisticCategory.isValid.getter()
{
  uint64_t v1 = v0;
  sub_1C00671B8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v11 - v3;
  uint64_t v5 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187E10(v1, (uint64_t)v7, type metadata accessor for PuzzleStatisticCategory);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1C1173CF4((uint64_t)v7, (uint64_t)v4, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
    uint64_t v8 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
    BOOL v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) != 1;
    sub_1C1173D74((uint64_t)v4, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  }
  else
  {
    sub_1C0ED71A4((uint64_t)v7, type metadata accessor for PuzzleStatisticCategory);
    return 1;
  }
  return v9;
}

uint64_t PuzzleStatisticValue.hasValue.getter()
{
  uint64_t v1 = v0;
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187E10(v1, (uint64_t)v10, type metadata accessor for PuzzleStatisticValue);
  char v11 = 1;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      return v11 & 1;
    case 4u:
      sub_1C1173CF4((uint64_t)v10, (uint64_t)v7, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      uint64_t v12 = type metadata accessor for PuzzleStreak();
      char v11 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v7, 1, v12) != 1;
      uint64_t v13 = (uint64_t)v7;
      goto LABEL_5;
    case 5u:
      sub_1C1173CF4((uint64_t)v10, (uint64_t)v4, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      uint64_t v14 = type metadata accessor for PuzzleStreak();
      char v11 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v4, 1, v14) != 1;
      uint64_t v13 = (uint64_t)v4;
LABEL_5:
      sub_1C1173D74(v13, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      break;
    default:
      char v11 = v10[8] ^ 1;
      break;
  }
  return v11 & 1;
}

uint64_t PuzzleStatisticDifficultyLevelValue.hasValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v25 - v6;
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187E10(v1, (uint64_t)v16, type metadata accessor for PuzzleStatisticValue);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C1187E10(v1, (uint64_t)v7, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      goto LABEL_10;
    case 4u:
      sub_1C1173CF4((uint64_t)v16, (uint64_t)v13, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      uint64_t v18 = type metadata accessor for PuzzleStreak();
      int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v13, 1, v18);
      uint64_t v20 = (uint64_t)v13;
      goto LABEL_7;
    case 5u:
      sub_1C1173CF4((uint64_t)v16, (uint64_t)v10, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      uint64_t v21 = type metadata accessor for PuzzleStreak();
      int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v10, 1, v21);
      uint64_t v20 = (uint64_t)v10;
LABEL_7:
      sub_1C1173D74(v20, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      sub_1C1187E10(v1, (uint64_t)v7, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      if (v19 == 1) {
        goto LABEL_8;
      }
      goto LABEL_10;
    default:
      char v17 = v16[8];
      sub_1C1187E10(v1, (uint64_t)v7, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      if (v17)
      {
LABEL_8:
        char v22 = PuzzleStatisticValue.hasValue.getter();
        sub_1C0ED71A4((uint64_t)v7, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        sub_1C1187E10(v1, (uint64_t)v4, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        if (v22) {
          char v23 = 1;
        }
        else {
          char v23 = PuzzleStatisticValue.hasValue.getter();
        }
      }
      else
      {
LABEL_10:
        sub_1C0ED71A4((uint64_t)v7, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        sub_1C1187E10(v1, (uint64_t)v4, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        char v23 = 1;
      }
      sub_1C0ED71A4((uint64_t)v4, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      return v23 & 1;
  }
}

double PuzzleStatisticValue.primaryValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PuzzleStreak();
  uint64_t v28 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v27 - v6;
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v27 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v27 - v15;
  MEMORY[0x1F4188790](v17);
  int v19 = (char *)&v27 - v18;
  uint64_t v20 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v20);
  char v22 = (char *)&v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187E10(v1, (uint64_t)v22, type metadata accessor for PuzzleStatisticValue);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      return (double)*(uint64_t *)v22;
    case 2u:
    case 6u:
      double v23 = -1.0;
      if ((v22[8] & 1) == 0) {
        return (double)*(uint64_t *)v22;
      }
      return v23;
    case 4u:
      sub_1C1173CF4((uint64_t)v22, (uint64_t)v19, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      sub_1C11799CC((uint64_t)v19, (uint64_t)v16, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v16, 1, v2) == 1)
      {
        sub_1C1173D74((uint64_t)v19, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        uint64_t v24 = (uint64_t)v16;
        goto LABEL_10;
      }
      sub_1C117A08C((uint64_t)v16, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      double v23 = (double)PuzzleStreak.days.getter();
      sub_1C0ED71A4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      uint64_t v25 = (uint64_t)v19;
      goto LABEL_13;
    case 5u:
      sub_1C1173CF4((uint64_t)v22, (uint64_t)v13, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      sub_1C11799CC((uint64_t)v13, (uint64_t)v10, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v10, 1, v2) == 1)
      {
        sub_1C1173D74((uint64_t)v13, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        uint64_t v24 = (uint64_t)v10;
LABEL_10:
        sub_1C1173D74(v24, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        return -1.0;
      }
      else
      {
        sub_1C117A08C((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
        double v23 = (double)PuzzleStreak.days.getter();
        sub_1C0ED71A4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
        uint64_t v25 = (uint64_t)v13;
LABEL_13:
        sub_1C1173D74(v25, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      }
      return v23;
    default:
      double v23 = -1.0;
      if ((v22[8] & 1) == 0) {
        return *(double *)v22;
      }
      return v23;
  }
}

double PuzzleStatisticDifficultyLevelValue.secondaryValue.getter()
{
  return PuzzleStatisticValue.primaryValue.getter();
}

double PuzzleStatisticDifficultyLevelValue.tertiaryValue.getter()
{
  return PuzzleStatisticValue.primaryValue.getter();
}

uint64_t sub_1C1173CF4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C00671B8(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C1173D74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C00671B8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t PuzzleStatisticValue.primaryDisplayValue.getter()
{
  uint64_t v1 = type metadata accessor for PuzzleStreak();
  uint64_t v40 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v39 - v5;
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v39 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v39 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (uint64_t *)((char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C1187E10(v0, (uint64_t)v21, type metadata accessor for PuzzleStatisticValue);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      goto LABEL_18;
    case 2u:
      if (v21[1]) {
        goto LABEL_17;
      }
      double v23 = (double)*v21;
      if (qword_1EB8613E0 == -1) {
        goto LABEL_9;
      }
      goto LABEL_27;
    case 3u:
      if (v21[1]) {
        goto LABEL_17;
      }
      double v23 = *(double *)v21;
      if (qword_1EB8613E0 == -1) {
        goto LABEL_9;
      }
LABEL_27:
      swift_once();
LABEL_9:
      id v24 = (id)qword_1EB8613D0;
      id v25 = objc_msgSend(v24, sel_stringFromTimeInterval_, v23);
      if (v25)
      {
        char v26 = v25;
        uint64_t v27 = sub_1C151E62C();
        unint64_t v29 = v28;
      }
      else
      {
        uint64_t v27 = 0;
        unint64_t v29 = 0xE000000000000000;
      }
      uint64_t v41 = v27;
      unint64_t v42 = v29;
      uint64_t v47 = 44;
      unint64_t v48 = 0xE100000000000000;
      uint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      sub_1BFF27ECC();
      uint64_t v32 = MEMORY[0x1E4FBB1A0];
      uint64_t v33 = sub_1C151FEBC();
      unint64_t v35 = v34;
      swift_bridgeObjectRelease();
      uint64_t v41 = v33;
      unint64_t v42 = v35;
      uint64_t v47 = 32;
      unint64_t v48 = 0xE100000000000000;
      uint64_t v36 = sub_1C151FE4C();
      unint64_t v37 = *(void *)(v36 + 16);
      if (v37 >= 2) {
        unint64_t v37 = 2;
      }
      uint64_t v41 = v36;
      unint64_t v42 = v36 + 32;
      uint64_t v43 = 0;
      uint64_t v44 = (2 * v37) | 1;
      sub_1BFC78004(0, (unint64_t *)&unk_1EB890298, v32, MEMORY[0x1E4FBB908]);
      sub_1C09E58C8();
      uint64_t v31 = sub_1C151E55C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return v31;
    case 4u:
      sub_1C1173CF4((uint64_t)v21, (uint64_t)v18, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      sub_1C11799CC((uint64_t)v18, (uint64_t)v15, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v15, 1, v1) == 1)
      {
        sub_1C1173D74((uint64_t)v15, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        uint64_t v30 = (uint64_t)v18;
        goto LABEL_15;
      }
      sub_1C117A08C((uint64_t)v15, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      uint64_t v41 = PuzzleStreak.days.getter();
      uint64_t v31 = sub_1C152088C();
      sub_1C0ED71A4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      sub_1C1173D74((uint64_t)v18, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      break;
    case 5u:
      sub_1C1173CF4((uint64_t)v21, (uint64_t)v12, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      sub_1C11799CC((uint64_t)v12, (uint64_t)v9, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v9, 1, v1) == 1)
      {
        sub_1C1173D74((uint64_t)v9, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        uint64_t v30 = (uint64_t)v12;
LABEL_15:
        sub_1C1173D74(v30, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
LABEL_17:
        uint64_t v31 = 0;
      }
      else
      {
        sub_1C117A08C((uint64_t)v9, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
        uint64_t v41 = PuzzleStreak.days.getter();
        uint64_t v31 = sub_1C152088C();
        sub_1C0ED71A4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
        sub_1C1173D74((uint64_t)v12, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      }
      break;
    case 6u:
      if (v21[1]) {
        goto LABEL_17;
      }
LABEL_18:
      uint64_t v41 = *v21;
      return sub_1C152088C();
    default:
      if (v21[1]) {
        goto LABEL_17;
      }
      return sub_1C151EF4C();
  }
  return v31;
}

uint64_t PuzzleStatisticDifficultyLevelValue.secondaryDisplayValue.getter()
{
  return PuzzleStatisticValue.primaryDisplayValue.getter();
}

uint64_t PuzzleStatisticDifficultyLevelValue.tertiaryDisplayValue.getter()
{
  return PuzzleStatisticValue.primaryDisplayValue.getter();
}

uint64_t static PuzzleStatisticDifficultyLevelValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s8NewsFeed20PuzzleStatisticValueO2eeoiySbAC_ACtFZ_0(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  if ((_s8NewsFeed20PuzzleStatisticValueO2eeoiySbAC_ACtFZ_0(a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  return _s8NewsFeed20PuzzleStatisticValueO2eeoiySbAC_ACtFZ_0(a1 + v5, a2 + v5);
}

BOOL sub_1C1174634(uint64_t a1, uint64_t a2)
{
  return (static PuzzleStatisticCategory.< infix(_:_:)(a2, a1) & 1) == 0;
}

BOOL sub_1C1174660(uint64_t a1, uint64_t a2)
{
  return !_s8NewsFeed23PuzzleStatisticCategoryO1loiySbAC_ACtFZ_0(a1, a2);
}

uint64_t sub_1C1174680(uint64_t a1, uint64_t a2)
{
  return static PuzzleStatisticCategory.< infix(_:_:)(a2, a1);
}

BOOL sub_1C1174694(uint64_t a1, uint64_t a2)
{
  return (static PuzzleStatisticValue.< infix(_:_:)(a2, a1) & 1) == 0;
}

BOOL sub_1C11746C0(uint64_t a1, uint64_t a2)
{
  return !_s8NewsFeed20PuzzleStatisticValueO1loiySbAC_ACtFZ_0(a1, a2);
}

uint64_t sub_1C11746E0(uint64_t a1, uint64_t a2)
{
  return static PuzzleStatisticValue.< infix(_:_:)(a2, a1);
}

uint64_t sub_1C11746F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((((uint64_t (*)(void))static PuzzleStatisticValue.== infix(_:_:))() & 1) == 0
    || (static PuzzleStatisticValue.== infix(_:_:)(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20)) & 1) == 0)
  {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 24);
  return static PuzzleStatisticValue.== infix(_:_:)(a1 + v6, a2 + v6);
}

BOOL sub_1C1174774(uint64_t a1, uint64_t a2)
{
  return (static PuzzleStatisticDifficultyLevelValue.< infix(_:_:)(a2, a1) & 1) == 0;
}

BOOL sub_1C11747A0(uint64_t a1, uint64_t a2)
{
  return !_s8NewsFeed35PuzzleStatisticDifficultyLevelValueV1loiySbAC_ACtFZ_0(a1, a2);
}

uint64_t sub_1C11747C0(uint64_t a1, uint64_t a2)
{
  return static PuzzleStatisticDifficultyLevelValue.< infix(_:_:)(a2, a1);
}

uint64_t PuzzleStatisticsGameCenterLeaderboardResult.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  PuzzleLeaderboardEntry.hash(into:)();
  uint64_t v4 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  uint64_t v5 = *(void *)(v1 + *(int *)(v4 + 20));
  swift_bridgeObjectRetain();
  sub_1C0B77108(a1, v5);
  swift_bridgeObjectRelease();
  sub_1C1520DCC();
  if (!*(void *)(v2 + *(int *)(v4 + 28) + 8)) {
    return sub_1C1520DDC();
  }
  sub_1C1520DDC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t PuzzleStatisticsGameCenterLeaderboardResult.hashValue.getter()
{
  uint64_t v1 = v0;
  sub_1C1520DBC();
  PuzzleLeaderboardEntry.hash(into:)();
  uint64_t v2 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  uint64_t v3 = *(void *)(v0 + *(int *)(v2 + 20));
  swift_bridgeObjectRetain();
  sub_1C0B77108((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  sub_1C1520DCC();
  if (*(void *)(v1 + *(int *)(v2 + 28) + 8))
  {
    sub_1C1520DDC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C1520DDC();
  }
  return sub_1C1520E0C();
}

uint64_t sub_1C117498C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  PuzzleLeaderboardEntry.hash(into:)();
  uint64_t v6 = *(void *)(v2 + *(int *)(a2 + 20));
  swift_bridgeObjectRetain();
  sub_1C0B77108(a1, v6);
  swift_bridgeObjectRelease();
  sub_1C1520DCC();
  if (!*(void *)(v4 + *(int *)(a2 + 28) + 8)) {
    return sub_1C1520DDC();
  }
  sub_1C1520DDC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1174A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  sub_1C1520DBC();
  PuzzleLeaderboardEntry.hash(into:)();
  uint64_t v5 = *(void *)(v2 + *(int *)(a2 + 20));
  swift_bridgeObjectRetain();
  sub_1C0B77108((uint64_t)v7, v5);
  swift_bridgeObjectRelease();
  sub_1C1520DCC();
  if (*(void *)(v4 + *(int *)(a2 + 28) + 8))
  {
    sub_1C1520DDC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C1520DDC();
  }
  return sub_1C1520E0C();
}

BOOL sub_1C1174B38(uint64_t a1, uint64_t a2)
{
  return (static PuzzleStatisticsGroupedValue.< infix(_:_:)(a2, a1) & 1) == 0;
}

BOOL sub_1C1174B64(uint64_t a1, uint64_t a2)
{
  return !_s8NewsFeed28PuzzleStatisticsGroupedValueV1loiySbAC_ACtFZ_0(a1, a2);
}

uint64_t sub_1C1174B84(uint64_t a1, uint64_t a2)
{
  return static PuzzleStatisticsGroupedValue.< infix(_:_:)(a2, a1);
}

void sub_1C1174B94(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for PuzzleLeaderboardEntry() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1C06363EC(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1C1174C3C(v5);
  *a1 = v3;
}

void sub_1C1174C3C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v135 = type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v4 = *(void *)(v135 - 8);
  MEMORY[0x1F4188790](v135);
  uint64_t v125 = (uint64_t)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v136 = (uint64_t)&v120 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v132 = (uint64_t)&v120 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v133 = (uint64_t)&v120 - v11;
  uint64_t v12 = a1[1];
  uint64_t v13 = sub_1C152086C();
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_138;
    }
    if (v12) {
      sub_1C11756EC(0, v12, 1, a1);
    }
    return;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_146;
  }
  uint64_t v121 = v13;
  uint64_t v129 = v4;
  if (v12 < 2)
  {
    uint64_t v18 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v127 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v120 = MEMORY[0x1E4FBC860];
    if (v12 != 1)
    {
      unint64_t v20 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_104:
      uint64_t v113 = v18;
      if (v20 >= 2)
      {
        uint64_t v114 = *a1;
        do
        {
          unint64_t v115 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_133;
          }
          if (!v114) {
            goto LABEL_145;
          }
          uint64_t v116 = *(void *)&v113[16 * v115 + 32];
          uint64_t v117 = *(void *)&v113[16 * v20 + 24];
          sub_1C11759B0(v114 + *(void *)(v129 + 72) * v116, v114 + *(void *)(v129 + 72) * *(void *)&v113[16 * v20 + 16], v114 + *(void *)(v129 + 72) * v117, v127);
          if (v2) {
            break;
          }
          if (v117 < v116) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v113 = sub_1C063604C((uint64_t)v113);
          }
          if (v115 >= *((void *)v113 + 2)) {
            goto LABEL_135;
          }
          uint64_t v118 = &v113[16 * v115 + 32];
          *(void *)uint64_t v118 = v116;
          *((void *)v118 + 1) = v117;
          unint64_t v119 = *((void *)v113 + 2);
          if (v20 > v119) {
            goto LABEL_136;
          }
          memmove(&v113[16 * v20 + 16], &v113[16 * v20 + 32], 16 * (v119 - v20));
          *((void *)v113 + 2) = v119 - 1;
          unint64_t v20 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v120 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_1C151ECCC();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v120 = v16;
    unint64_t v127 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  uint64_t v18 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v128 = a1;
  while (1)
  {
    uint64_t v21 = v19;
    uint64_t v22 = v19 + 1;
    uint64_t v126 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v30 = v19 + 1;
    }
    else
    {
      uint64_t v23 = *a1;
      uint64_t v24 = *(void *)(v129 + 72);
      uint64_t v25 = *a1 + v24 * v22;
      uint64_t v138 = v24;
      sub_1C1187E10(v25, v133, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      uint64_t v137 = v12;
      uint64_t v26 = v132;
      sub_1C1187E10(v23 + v24 * v21, v132, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      uint64_t v27 = *(int *)(v135 + 28);
      uint64_t v28 = v133;
      uint64_t v134 = *(void *)(v133 + v27);
      uint64_t v131 = *(void *)(v26 + v27);
      uint64_t v29 = v26;
      uint64_t v12 = v137;
      sub_1C0ED71A4(v29, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      sub_1C0ED71A4(v28, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      uint64_t v30 = v21 + 2;
      uint64_t v130 = v23;
      if (v21 + 2 < v12)
      {
        uint64_t v122 = v18;
        uint64_t v123 = v2;
        uint64_t v31 = v138 * v22;
        uint64_t v32 = v23;
        uint64_t v33 = v138 * v30;
        while (1)
        {
          uint64_t v34 = v30;
          uint64_t v35 = v133;
          int v36 = v134 < v131;
          sub_1C1187E10(v32 + v33, v133, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          uint64_t v37 = v132;
          sub_1C1187E10(v32 + v31, v132, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          int v38 = *(void *)(v35 + *(int *)(v135 + 28)) >= *(void *)(v37 + *(int *)(v135 + 28));
          sub_1C0ED71A4(v37, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          sub_1C0ED71A4(v35, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          if (v36 == v38) {
            break;
          }
          ++v30;
          v32 += v138;
          if (v137 == v34 + 1)
          {
            uint64_t v12 = v137;
            uint64_t v30 = v137;
            a1 = v128;
            uint64_t v18 = v122;
            uint64_t v2 = v123;
            goto LABEL_23;
          }
        }
        a1 = v128;
        uint64_t v18 = v122;
        uint64_t v2 = v123;
        uint64_t v12 = v137;
LABEL_23:
        uint64_t v23 = v130;
      }
      uint64_t v21 = v126;
      if (v134 < v131)
      {
        if (v30 < v126) {
          goto LABEL_139;
        }
        if (v126 < v30)
        {
          uint64_t v122 = v18;
          uint64_t v123 = v2;
          uint64_t v39 = 0;
          uint64_t v40 = v138;
          uint64_t v41 = v138 * (v30 - 1);
          uint64_t v42 = v30 * v138;
          uint64_t v43 = v126;
          uint64_t v44 = v126 * v138;
          do
          {
            if (v43 != v30 + v39 - 1)
            {
              if (!v23) {
                goto LABEL_144;
              }
              sub_1C117A08C(v23 + v44, v125, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
              if (v44 < v41 || v23 + v44 >= (unint64_t)(v23 + v42))
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v44 != v41)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_1C117A08C(v125, v23 + v41, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
              uint64_t v23 = v130;
              uint64_t v40 = v138;
            }
            ++v43;
            --v39;
            v41 -= v40;
            v42 -= v40;
            v44 += v40;
          }
          while (v43 < v30 + v39);
          uint64_t v18 = v122;
          uint64_t v2 = v123;
          a1 = v128;
          uint64_t v21 = v126;
          uint64_t v12 = v137;
        }
      }
    }
    if (v30 < v12)
    {
      if (__OFSUB__(v30, v21)) {
        goto LABEL_137;
      }
      if (v30 - v21 < v121) {
        break;
      }
    }
LABEL_56:
    if (v30 < v21) {
      goto LABEL_132;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v134 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v18 = sub_1C0634CC8(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v63 = *((void *)v18 + 2);
    unint64_t v62 = *((void *)v18 + 3);
    unint64_t v20 = v63 + 1;
    if (v63 >= v62 >> 1) {
      uint64_t v18 = sub_1C0634CC8((char *)(v62 > 1), v63 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v20;
    uint64_t v64 = v18 + 32;
    uint64_t v65 = &v18[16 * v63 + 32];
    uint64_t v66 = v134;
    *(void *)uint64_t v65 = v21;
    *((void *)v65 + 1) = v66;
    if (v63)
    {
      while (1)
      {
        unint64_t v67 = v20 - 1;
        if (v20 >= 4)
        {
          uint64_t v72 = &v64[16 * v20];
          uint64_t v73 = *((void *)v72 - 8);
          uint64_t v74 = *((void *)v72 - 7);
          BOOL v78 = __OFSUB__(v74, v73);
          uint64_t v75 = v74 - v73;
          if (v78) {
            goto LABEL_121;
          }
          uint64_t v77 = *((void *)v72 - 6);
          uint64_t v76 = *((void *)v72 - 5);
          BOOL v78 = __OFSUB__(v76, v77);
          uint64_t v70 = v76 - v77;
          char v71 = v78;
          if (v78) {
            goto LABEL_122;
          }
          unint64_t v79 = v20 - 2;
          char v80 = &v64[16 * v20 - 32];
          uint64_t v82 = *(void *)v80;
          uint64_t v81 = *((void *)v80 + 1);
          BOOL v78 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          if (v78) {
            goto LABEL_124;
          }
          BOOL v78 = __OFADD__(v70, v83);
          uint64_t v84 = v70 + v83;
          if (v78) {
            goto LABEL_127;
          }
          if (v84 >= v75)
          {
            uint64_t v102 = &v64[16 * v67];
            uint64_t v104 = *(void *)v102;
            uint64_t v103 = *((void *)v102 + 1);
            BOOL v78 = __OFSUB__(v103, v104);
            uint64_t v105 = v103 - v104;
            if (v78) {
              goto LABEL_131;
            }
            BOOL v95 = v70 < v105;
            goto LABEL_93;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v96 = *((void *)v18 + 4);
            uint64_t v97 = *((void *)v18 + 5);
            BOOL v78 = __OFSUB__(v97, v96);
            uint64_t v89 = v97 - v96;
            char v90 = v78;
            goto LABEL_87;
          }
          uint64_t v69 = *((void *)v18 + 4);
          uint64_t v68 = *((void *)v18 + 5);
          BOOL v78 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          char v71 = v78;
        }
        if (v71) {
          goto LABEL_123;
        }
        unint64_t v79 = v20 - 2;
        uint64_t v85 = &v64[16 * v20 - 32];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v88 = __OFSUB__(v86, v87);
        uint64_t v89 = v86 - v87;
        char v90 = v88;
        if (v88) {
          goto LABEL_126;
        }
        uint64_t v91 = &v64[16 * v67];
        uint64_t v93 = *(void *)v91;
        uint64_t v92 = *((void *)v91 + 1);
        BOOL v78 = __OFSUB__(v92, v93);
        uint64_t v94 = v92 - v93;
        if (v78) {
          goto LABEL_129;
        }
        if (__OFADD__(v89, v94)) {
          goto LABEL_130;
        }
        if (v89 + v94 >= v70)
        {
          BOOL v95 = v70 < v94;
LABEL_93:
          if (v95) {
            unint64_t v67 = v79;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v90) {
          goto LABEL_125;
        }
        char v98 = &v64[16 * v67];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v78 = __OFSUB__(v99, v100);
        uint64_t v101 = v99 - v100;
        if (v78) {
          goto LABEL_128;
        }
        if (v101 < v89) {
          goto LABEL_14;
        }
LABEL_95:
        unint64_t v106 = v67 - 1;
        if (v67 - 1 >= v20)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!*v128) {
          goto LABEL_143;
        }
        uint64_t v107 = v18;
        uint64_t v108 = &v64[16 * v106];
        uint64_t v109 = *(void *)v108;
        uint64_t v110 = &v64[16 * v67];
        uint64_t v111 = *((void *)v110 + 1);
        sub_1C11759B0(*v128 + *(void *)(v129 + 72) * *(void *)v108, *v128 + *(void *)(v129 + 72) * *(void *)v110, *v128 + *(void *)(v129 + 72) * v111, v127);
        if (v2) {
          goto LABEL_115;
        }
        if (v111 < v109) {
          goto LABEL_118;
        }
        if (v67 > *((void *)v107 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v108 = v109;
        *(void *)&v64[16 * v106 + 8] = v111;
        unint64_t v112 = *((void *)v107 + 2);
        if (v67 >= v112) {
          goto LABEL_120;
        }
        uint64_t v18 = v107;
        unint64_t v20 = v112 - 1;
        memmove(&v64[16 * v67], v110 + 16, 16 * (v112 - 1 - v67));
        *((void *)v107 + 2) = v112 - 1;
        if (v112 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    a1 = v128;
    uint64_t v12 = v128[1];
    uint64_t v19 = v134;
    if (v134 >= v12) {
      goto LABEL_104;
    }
  }
  if (__OFADD__(v21, v121)) {
    goto LABEL_140;
  }
  if (v21 + v121 >= v12) {
    uint64_t v45 = v12;
  }
  else {
    uint64_t v45 = v21 + v121;
  }
  if (v45 >= v21)
  {
    if (v30 != v45)
    {
      uint64_t v122 = v18;
      uint64_t v123 = v2;
      uint64_t v46 = *(void *)(v129 + 72);
      uint64_t v47 = v46 * (v30 - 1);
      uint64_t v130 = v46;
      uint64_t v48 = v30 * v46;
      uint64_t v124 = v45;
      do
      {
        uint64_t v50 = 0;
        uint64_t v134 = v30;
        uint64_t v131 = v48;
        while (1)
        {
          uint64_t v137 = v21;
          uint64_t v51 = *a1;
          uint64_t v52 = v48 + v50 + *a1;
          uint64_t v53 = v133;
          sub_1C1187E10(v52, v133, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          uint64_t v54 = v47;
          uint64_t v55 = v47 + v50 + v51;
          uint64_t v56 = v132;
          sub_1C1187E10(v55, v132, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          uint64_t v57 = *(int *)(v135 + 28);
          uint64_t v138 = *(void *)(v53 + v57);
          uint64_t v58 = *(void *)(v56 + v57);
          sub_1C0ED71A4(v56, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          sub_1C0ED71A4(v53, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          if (v138 >= v58) {
            break;
          }
          uint64_t v59 = *a1;
          if (!*a1) {
            goto LABEL_142;
          }
          uint64_t v48 = v131;
          uint64_t v47 = v54;
          uint64_t v60 = v59 + v54 + v50;
          sub_1C117A08C(v59 + v131 + v50, v136, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          swift_arrayInitWithTakeFrontToBack();
          sub_1C117A08C(v136, v60, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          v50 -= v130;
          uint64_t v21 = v137 + 1;
          uint64_t v49 = v134;
          if (v134 == v137 + 1) {
            goto LABEL_49;
          }
        }
        uint64_t v49 = v134;
        uint64_t v47 = v54;
        uint64_t v48 = v131;
LABEL_49:
        uint64_t v30 = v49 + 1;
        v47 += v130;
        v48 += v130;
        uint64_t v21 = v126;
      }
      while (v30 != v124);
      uint64_t v30 = v124;
      uint64_t v18 = v122;
      uint64_t v2 = v123;
    }
    goto LABEL_56;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  sub_1C15203FC();
  __break(1u);
}

void sub_1C11756EC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v33 = a1;
  uint64_t v40 = type metadata accessor for PuzzleLeaderboardEntry();
  MEMORY[0x1F4188790](v40);
  uint64_t v41 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v36 = (uint64_t)&v31 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v35 = (uint64_t)&v31 - v12;
  uint64_t v39 = a3;
  uint64_t v32 = a2;
  if (a3 != a2)
  {
    uint64_t v13 = *(void *)(v11 + 72);
    uint64_t v14 = v13 * (v39 - 1);
    uint64_t v37 = v13;
    uint64_t v15 = v13 * v39;
    uint64_t v34 = a4;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v33;
    uint64_t v38 = v15;
    while (1)
    {
      uint64_t v18 = *a4;
      uint64_t v19 = v15 + v16 + *a4;
      uint64_t v20 = v35;
      sub_1C1187E10(v19, v35, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      uint64_t v21 = v14 + v16 + v18;
      uint64_t v22 = v14;
      uint64_t v23 = v36;
      sub_1C1187E10(v21, v36, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      uint64_t v24 = *(int *)(v40 + 28);
      uint64_t v42 = *(void *)(v20 + v24);
      uint64_t v25 = *(void *)(v23 + v24);
      uint64_t v26 = v23;
      uint64_t v14 = v22;
      sub_1C0ED71A4(v26, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      uint64_t v27 = v20;
      uint64_t v15 = v38;
      sub_1C0ED71A4(v27, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      BOOL v28 = v42 < v25;
      a4 = v34;
      if (!v28)
      {
LABEL_4:
        uint64_t v14 = v22 + v37;
        v15 += v37;
        if (++v39 == v32) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v29 = *v34;
      if (!*v34) {
        break;
      }
      uint64_t v30 = v29 + v22 + v16;
      sub_1C117A08C(v29 + v15 + v16, v41, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      swift_arrayInitWithTakeFrontToBack();
      sub_1C117A08C(v41, v30, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      v16 -= v37;
      if (v39 == ++v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C11759B0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for PuzzleLeaderboardEntry();
  MEMORY[0x1F4188790](v8);
  uint64_t v51 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v50 = (char *)&v44 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_68;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_69;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v54 = a1;
  unint64_t v53 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v31 = a4 + v18;
      unint64_t v52 = a4 + v18;
      unint64_t v54 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v33 = -v13;
        unint64_t v48 = a4;
        unint64_t v45 = a1;
        uint64_t v46 = v8;
        uint64_t v34 = (uint64_t)v50;
        do
        {
          unint64_t v49 = a3 + v33;
          sub_1C1187E10(v31 + v33, v34, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          unint64_t v35 = a2 + v33;
          uint64_t v36 = v51;
          sub_1C1187E10(a2 + v33, v51, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          uint64_t v37 = *(int *)(v8 + 28);
          uint64_t v38 = *(void *)(v34 + v37);
          uint64_t v39 = *(void *)(v36 + v37);
          sub_1C0ED71A4(v36, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          sub_1C0ED71A4(v34, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          if (v38 >= v39)
          {
            unint64_t v42 = v52;
            v52 += v33;
            unint64_t v40 = v49;
            if (a3 < v42 || v49 >= v42)
            {
              uint64_t v8 = v46;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v35 = a2;
              unint64_t v41 = v48;
            }
            else
            {
              uint64_t v8 = v46;
              unint64_t v41 = v48;
              if (a3 != v42) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v35 = a2;
            }
          }
          else
          {
            unint64_t v40 = v49;
            if (a3 < a2 || v49 >= a2)
            {
              uint64_t v8 = v46;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v41 = v48;
            }
            else
            {
              uint64_t v8 = v46;
              unint64_t v41 = v48;
              if (a3 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v54 += v33;
          }
          unint64_t v31 = v52;
          if (v52 <= v41) {
            break;
          }
          a2 = v35;
          a3 = v40;
        }
        while (v35 > v45);
      }
      goto LABEL_66;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v49 = a4 + v17;
    unint64_t v52 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      unint64_t v47 = a3;
      uint64_t v20 = (uint64_t)v50;
      do
      {
        sub_1C1187E10(a2, v20, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
        uint64_t v21 = v51;
        sub_1C1187E10(a4, v51, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
        uint64_t v22 = *(int *)(v8 + 28);
        uint64_t v23 = *(void *)(v20 + v22);
        uint64_t v24 = *(void *)(v21 + v22);
        sub_1C0ED71A4(v21, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
        sub_1C0ED71A4(v20, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
        unint64_t v25 = v54;
        if (v23 >= v24)
        {
          unint64_t v29 = v53 + v13;
          if (v54 < v53 || v54 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v28 = v47;
          }
          else
          {
            unint64_t v28 = v47;
            if (v54 != v53) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v53 = v29;
          unint64_t v26 = a2;
        }
        else
        {
          unint64_t v26 = a2 + v13;
          if (v54 < a2 || v54 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v28 = v47;
          }
          else
          {
            unint64_t v28 = v47;
            if (v54 == a2) {
              unint64_t v25 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        unint64_t v54 = v25 + v13;
        a4 = v53;
        if (v53 >= v49) {
          break;
        }
        a2 = v26;
      }
      while (v26 < v28);
    }
LABEL_66:
    sub_1C0635314(&v54, &v53, (uint64_t *)&v52);
    return 1;
  }
LABEL_70:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t _s8NewsFeed43PuzzleStatisticsGameCenterLeaderboardResultV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_1C15162AC() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_1C1520A9C(), uint64_t result = 0, (v10 & 1) != 0))
  {
    uint64_t v12 = a1 + v4[6];
    uint64_t v13 = *(void *)(v12 + 8);
    v24[0] = *(void *)v12;
    v24[1] = v13;
    long long v25 = *(_OWORD *)(v12 + 16);
    uint64_t v14 = a2 + v4[6];
    uint64_t v15 = *(void *)(v14 + 8);
    v22[0] = *(void *)v14;
    v22[1] = v15;
    long long v23 = *(_OWORD *)(v14 + 16);
    if (_s8NewsFeed12PuzzlePlayerV2eeoiySbAC_ACtFZ_0(v24, v22)
      && *(void *)(a1 + v4[7]) == *(void *)(a2 + v4[7])
      && *(void *)(a1 + v4[8]) == *(void *)(a2 + v4[8]))
    {
      uint64_t v16 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      if (sub_1C00F3964(*(void *)(a1 + v16[5]), *(void *)(a2 + v16[5]))
        && *(void *)(a1 + v16[6]) == *(void *)(a2 + v16[6]))
      {
        uint64_t v17 = v16[7];
        uint64_t v18 = (void *)(a1 + v17);
        uint64_t v19 = *(void *)(a1 + v17 + 8);
        uint64_t v20 = (void *)(a2 + v17);
        uint64_t v21 = v20[1];
        if (v19)
        {
          if (v21 && (*v18 == *v20 && v19 == v21 || (sub_1C1520A9C() & 1) != 0)) {
            return 1;
          }
        }
        else if (!v21)
        {
          return 1;
        }
      }
    }
    return 0;
  }
  return result;
}

BOOL _s8NewsFeed28PuzzleStatisticsGroupedValueV1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  BOOL v9 = (char *)&v31 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v31 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v31 - v14;
  double v16 = *(double *)(a1 + 8);
  if (*(unsigned char *)(a1 + 16)) {
    double v16 = 0.0;
  }
  if (*(unsigned char *)(a2 + 16))
  {
    if (v16 < 0.0) {
      return 1;
    }
  }
  else if (v16 < *(double *)(a2 + 8))
  {
    return 1;
  }
  if (*(void *)a1 < *(void *)a2) {
    return 1;
  }
  uint64_t v18 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
  uint64_t v19 = v18;
  uint64_t v20 = v18[9];
  double v21 = *(double *)(a1 + v20);
  if (*(unsigned char *)(a1 + v20 + 8)) {
    double v21 = 0.0;
  }
  uint64_t v22 = a2 + v20;
  if (*(unsigned char *)(v22 + 8))
  {
    if (v21 < 0.0) {
      return 1;
    }
  }
  else if (v21 < *(double *)v22)
  {
    return 1;
  }
  uint64_t v23 = v18[8];
  if (*(unsigned char *)(a1 + v23 + 8)) {
    uint64_t v24 = 0;
  }
  else {
    uint64_t v24 = *(void *)(a1 + v23);
  }
  uint64_t v25 = a2 + v23;
  if (*(unsigned char *)(v25 + 8))
  {
    if (v24 < 0) {
      return 1;
    }
  }
  else if (v24 < *(void *)v25)
  {
    return 1;
  }
  sub_1C11799CC(a1 + v18[7], (uint64_t)v15, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  uint64_t v26 = type metadata accessor for PuzzleStreak();
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48);
  if (v32(v15, 1, v26) == 1)
  {
    sub_1C1173D74((uint64_t)v15, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
    uint64_t v27 = 0;
  }
  else
  {
    uint64_t v27 = PuzzleStreak.days.getter();
    sub_1C0ED71A4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
  }
  sub_1C11799CC(a2 + v19[7], (uint64_t)v12, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  if (v32(v12, 1, v26) == 1)
  {
    sub_1C1173D74((uint64_t)v12, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
    if (v27 < 0) {
      return 1;
    }
  }
  else
  {
    uint64_t v28 = PuzzleStreak.days.getter();
    sub_1C0ED71A4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
    if (v27 < v28) {
      return 1;
    }
  }
  sub_1C11799CC(a1 + v19[6], (uint64_t)v9, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  if (v32(v9, 1, v26) == 1)
  {
    sub_1C1173D74((uint64_t)v9, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
    uint64_t v29 = 0;
  }
  else
  {
    uint64_t v29 = PuzzleStreak.days.getter();
    sub_1C0ED71A4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
  }
  sub_1C11799CC(a2 + v19[6], (uint64_t)v6, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  if (v32(v6, 1, v26) == 1)
  {
    sub_1C1173D74((uint64_t)v6, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
    uint64_t v30 = 0;
  }
  else
  {
    uint64_t v30 = PuzzleStreak.days.getter();
    sub_1C0ED71A4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
  }
  return v29 < v30;
}

BOOL _s8NewsFeed35PuzzleStatisticDifficultyLevelValueV1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  BOOL v9 = (char *)&v20 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v20 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v20 - v14;
  BOOL v16 = _s8NewsFeed20PuzzleStatisticValueO1loiySbAC_ACtFZ_0(a1, a2);
  sub_1C1187E10(a1, (uint64_t)v15, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
  sub_1C1187E10(a2, (uint64_t)v12, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
  if (!v16)
  {
    sub_1C0ED71A4((uint64_t)v12, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
    sub_1C0ED71A4((uint64_t)v15, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
    sub_1C1187E10(a1, (uint64_t)v9, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
    sub_1C1187E10(a2, (uint64_t)v6, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
    goto LABEL_5;
  }
  BOOL v17 = _s8NewsFeed20PuzzleStatisticValueO1loiySbAC_ACtFZ_0((uint64_t)&v15[*(int *)(v4 + 20)], (uint64_t)&v12[*(int *)(v4 + 20)]);
  sub_1C0ED71A4((uint64_t)v12, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
  sub_1C0ED71A4((uint64_t)v15, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
  sub_1C1187E10(a1, (uint64_t)v9, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
  sub_1C1187E10(a2, (uint64_t)v6, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
  if (!v17)
  {
LABEL_5:
    BOOL v18 = 0;
    goto LABEL_6;
  }
  BOOL v18 = _s8NewsFeed20PuzzleStatisticValueO1loiySbAC_ACtFZ_0((uint64_t)&v9[*(int *)(v4 + 24)], (uint64_t)&v6[*(int *)(v4 + 24)]);
LABEL_6:
  sub_1C0ED71A4((uint64_t)v6, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
  sub_1C0ED71A4((uint64_t)v9, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
  return v18;
}

BOOL _s8NewsFeed23PuzzleStatisticCategoryO1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = a2;
  uint64_t v3 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v60 = (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v59 = (uint64_t)&v55 - v6;
  uint64_t v58 = type metadata accessor for PuzzleLeaderboardEntry();
  MEMORY[0x1F4188790](v58);
  uint64_t v57 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00671B8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v56 = (uint64_t)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v55 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v61 = (uint64_t)&v55 - v14;
  MEMORY[0x1F4188790](v15);
  BOOL v17 = (char *)&v55 - v16;
  uint64_t v18 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v55 - v22;
  uint64_t v24 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v55 - v28;
  sub_1C1187DB0(0, (unint64_t *)&qword_1EB86CB40, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticCategory);
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v32 = (char *)&v55 - v31;
  uint64_t v34 = (char *)&v55 + *(int *)(v33 + 56) - v31;
  sub_1C1187E10(a1, (uint64_t)&v55 - v31, type metadata accessor for PuzzleStatisticCategory);
  sub_1C1187E10(v62, (uint64_t)v34, type metadata accessor for PuzzleStatisticCategory);
  type metadata accessor for PuzzleStatisticCategory(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        unint64_t v35 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
        goto LABEL_14;
      }
      sub_1C117A08C((uint64_t)v32, (uint64_t)v23, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      sub_1C117A08C((uint64_t)v34, (uint64_t)v20, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      BOOL v36 = _s8NewsFeed35PuzzleStatisticDifficultyLevelValueV1loiySbAC_ACtFZ_0((uint64_t)v23, (uint64_t)v20);
      sub_1C0ED71A4((uint64_t)v20, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      sub_1C0ED71A4((uint64_t)v23, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      break;
    case 2u:
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        sub_1C1173D74((uint64_t)v32, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        goto LABEL_15;
      }
      sub_1C1173CF4((uint64_t)v32, (uint64_t)v17, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      uint64_t v37 = v61;
      sub_1C1173CF4((uint64_t)v34, v61, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      sub_1C1173CF4((uint64_t)v17, (uint64_t)v12, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      uint64_t v38 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48);
      if (v39(v12, 1, v38) == 1)
      {
        sub_1C1173D74((uint64_t)v12, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        uint64_t v40 = 0;
      }
      else
      {
        uint64_t v50 = v57;
        sub_1C1187E10((uint64_t)v12, v57, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
        sub_1C0ED71A4((uint64_t)v12, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        uint64_t v40 = *(void *)(v50 + *(int *)(v58 + 32));
        sub_1C0ED71A4(v50, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      }
      uint64_t v51 = v56;
      sub_1C1173CF4(v37, v56, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      if (v39((char *)v51, 1, v38) == 1)
      {
        sub_1C1173D74(v51, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        uint64_t v52 = 0;
      }
      else
      {
        uint64_t v53 = v57;
        sub_1C1187E10(v51, v57, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
        sub_1C0ED71A4(v51, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        uint64_t v52 = *(void *)(v53 + *(int *)(v58 + 32));
        sub_1C0ED71A4(v53, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
      }
      BOOL v36 = v40 < v52;
      break;
    case 3u:
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v41 = (uint64_t)v32;
        uint64_t v42 = v59;
        sub_1C117A08C(v41, v59, type metadata accessor for PuzzleStatisticsGroupedValue);
        uint64_t v43 = v60;
        sub_1C117A08C((uint64_t)v34, v60, type metadata accessor for PuzzleStatisticsGroupedValue);
        BOOL v36 = _s8NewsFeed28PuzzleStatisticsGroupedValueV1loiySbAC_ACtFZ_0(v42, v43);
        uint64_t v44 = type metadata accessor for PuzzleStatisticsGroupedValue;
        sub_1C0ED71A4(v43, type metadata accessor for PuzzleStatisticsGroupedValue);
        uint64_t v45 = v42;
        goto LABEL_21;
      }
      unint64_t v35 = type metadata accessor for PuzzleStatisticsGroupedValue;
      goto LABEL_14;
    default:
      if (swift_getEnumCaseMultiPayload())
      {
        unint64_t v35 = type metadata accessor for PuzzleStatisticValue;
LABEL_14:
        sub_1C0ED71A4((uint64_t)v32, v35);
LABEL_15:
        sub_1C0ED71A4((uint64_t)v34, type metadata accessor for PuzzleStatisticCategory);
        if (qword_1EB8814A0 != -1) {
          swift_once();
        }
        uint64_t v46 = sub_1C15198DC();
        __swift_project_value_buffer(v46, (uint64_t)qword_1EB93C7A8);
        unint64_t v47 = sub_1C15198AC();
        os_log_type_t v48 = sub_1C151F36C();
        if (os_log_type_enabled(v47, v48))
        {
          unint64_t v49 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v49 = 0;
          _os_log_impl(&dword_1BFC31000, v47, v48, "Can't compare non-matching PuzzleStatisticCategory values", v49, 2u);
          MEMORY[0x1C18C9B00](v49, -1, -1);
        }

        BOOL v36 = 0;
      }
      else
      {
        sub_1C117A08C((uint64_t)v32, (uint64_t)v29, type metadata accessor for PuzzleStatisticValue);
        sub_1C117A08C((uint64_t)v34, (uint64_t)v26, type metadata accessor for PuzzleStatisticValue);
        BOOL v36 = _s8NewsFeed20PuzzleStatisticValueO1loiySbAC_ACtFZ_0((uint64_t)v29, (uint64_t)v26);
        uint64_t v44 = type metadata accessor for PuzzleStatisticValue;
        sub_1C0ED71A4((uint64_t)v26, type metadata accessor for PuzzleStatisticValue);
        uint64_t v45 = (uint64_t)v29;
LABEL_21:
        sub_1C0ED71A4(v45, v44);
      }
      break;
  }
  return v36;
}

BOOL _s8NewsFeed20PuzzleStatisticValueO1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v54 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v51 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v51 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v52 = (uint64_t)&v51 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v53 = (uint64_t)&v51 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v51 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v51 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v51 - v23;
  sub_1C1187DB0(0, &qword_1EA1AC5F0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticValue);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (double *)((char *)&v51 - v26);
  uint64_t v29 = (double *)((char *)&v51 + *(int *)(v28 + 56) - v26);
  sub_1C1187E10(a1, (uint64_t)&v51 - v26, type metadata accessor for PuzzleStatisticValue);
  sub_1C1187E10(a2, (uint64_t)v29, type metadata accessor for PuzzleStatisticValue);
  type metadata accessor for PuzzleStatisticValue(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_29;
      }
      double v30 = *v27;
      double v31 = *v29;
      return *(void *)&v30 < *(void *)&v31;
    case 2u:
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_29;
      }
      goto LABEL_21;
    case 3u:
      if (swift_getEnumCaseMultiPayload() == 3) {
        goto LABEL_9;
      }
      goto LABEL_29;
    case 4u:
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_28;
      }
      sub_1C1173CF4((uint64_t)v27, (uint64_t)v24, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      sub_1C1173CF4((uint64_t)v29, (uint64_t)v21, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      sub_1C11799CC((uint64_t)v24, (uint64_t)v18, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      uint64_t v35 = type metadata accessor for PuzzleStreak();
      BOOL v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48);
      if (v36(v18, 1, v35) == 1)
      {
        sub_1C1173D74((uint64_t)v18, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        uint64_t v37 = 0;
      }
      else
      {
        uint64_t v37 = PuzzleStreak.days.getter();
        sub_1C0ED71A4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      }
      uint64_t v46 = v53;
      sub_1C11799CC((uint64_t)v21, v53, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      if (v36((char *)v46, 1, v35) == 1)
      {
        sub_1C1173D74((uint64_t)v21, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        sub_1C1173D74((uint64_t)v24, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        uint64_t v47 = v46;
        goto LABEL_40;
      }
      uint64_t v49 = PuzzleStreak.days.getter();
      sub_1C1173D74((uint64_t)v21, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      sub_1C1173D74((uint64_t)v24, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      uint64_t v50 = v46;
      goto LABEL_43;
    case 5u:
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        uint64_t v38 = v52;
        sub_1C1173CF4((uint64_t)v27, v52, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        sub_1C1173CF4((uint64_t)v29, (uint64_t)v11, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        sub_1C11799CC(v38, (uint64_t)v8, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        uint64_t v39 = type metadata accessor for PuzzleStreak();
        uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48);
        if (v40(v8, 1, v39) == 1)
        {
          sub_1C1173D74((uint64_t)v8, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
          uint64_t v37 = 0;
        }
        else
        {
          uint64_t v37 = PuzzleStreak.days.getter();
          sub_1C0ED71A4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
        }
        uint64_t v48 = v54;
        sub_1C11799CC((uint64_t)v11, v54, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        if (v40((char *)v48, 1, v39) == 1)
        {
          sub_1C1173D74((uint64_t)v11, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
          sub_1C1173D74(v38, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
          uint64_t v47 = v48;
LABEL_40:
          sub_1C1173D74(v47, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
          uint64_t v49 = 0;
        }
        else
        {
          uint64_t v49 = PuzzleStreak.days.getter();
          sub_1C1173D74((uint64_t)v11, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
          sub_1C1173D74(v38, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
          uint64_t v50 = v48;
LABEL_43:
          sub_1C0ED71A4(v50, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
        }
        return v37 < v49;
      }
      else
      {
LABEL_28:
        sub_1C1173D74((uint64_t)v27, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
LABEL_29:
        sub_1C0ED71A4((uint64_t)v29, type metadata accessor for PuzzleStatisticValue);
        if (qword_1EB8814A0 != -1) {
          swift_once();
        }
        uint64_t v42 = sub_1C15198DC();
        __swift_project_value_buffer(v42, (uint64_t)qword_1EB93C7A8);
        uint64_t v43 = sub_1C15198AC();
        os_log_type_t v44 = sub_1C151F36C();
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v45 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v45 = 0;
          _os_log_impl(&dword_1BFC31000, v43, v44, "Can't compare non-matching PuzzleStatisticValue values", v45, 2u);
          MEMORY[0x1C18C9B00](v45, -1, -1);
        }

        return 0;
      }
    case 6u:
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_29;
      }
LABEL_21:
      if (*((unsigned char *)v27 + 8)) {
        double v30 = 0.0;
      }
      else {
        double v30 = *v27;
      }
      if (*((unsigned char *)v29 + 8)) {
        double v31 = 0.0;
      }
      else {
        double v31 = *v29;
      }
      return *(void *)&v30 < *(void *)&v31;
    default:
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_29;
      }
LABEL_9:
      double v32 = *v27;
      double v33 = *v29;
      if (*((unsigned char *)v27 + 8)) {
        double v32 = 0.0;
      }
      if (*((unsigned char *)v29 + 8)) {
        double v33 = 0.0;
      }
      return v32 < v33;
  }
}

uint64_t _s8NewsFeed28PuzzleStatisticsGroupedValueV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleStreak();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187F54(0, &qword_1EA1AC5F8, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  uint64_t v79 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v77 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v78 = (uint64_t)&v66 - v11;
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  MEMORY[0x1F4188790](v13);
  MEMORY[0x1F4188790](v14);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v66 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v66 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)&v66 - v25;
  if (*(void *)a1 != *(void *)a2) {
    goto LABEL_22;
  }
  char v27 = *(unsigned char *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (!*(unsigned char *)(a2 + 16)) {
      goto LABEL_22;
    }
  }
  else
  {
    if (*(double *)(a1 + 8) != *(double *)(a2 + 8)) {
      char v27 = 1;
    }
    if (v27) {
      goto LABEL_22;
    }
  }
  uint64_t v75 = v24;
  uint64_t v76 = v23;
  uint64_t v70 = v22;
  char v71 = v7;
  uint64_t v28 = v5;
  uint64_t v29 = v4;
  uint64_t v30 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
  uint64_t v31 = *(int *)(v30 + 24);
  uint64_t v73 = a1;
  sub_1C11799CC(a1 + v31, (uint64_t)v26, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  uint64_t v72 = (int *)v30;
  uint64_t v32 = *(int *)(v30 + 24);
  uint64_t v33 = v29;
  uint64_t v34 = v28;
  uint64_t v74 = a2;
  sub_1C11799CC(a2 + v32, (uint64_t)v20, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  uint64_t v35 = v78;
  uint64_t v36 = v78 + *(int *)(v79 + 48);
  sub_1C11799CC((uint64_t)v26, v78, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  sub_1C11799CC((uint64_t)v20, v36, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  if (v37(v35, 1, v33) == 1)
  {
    sub_1C1173D74((uint64_t)v20, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
    sub_1C1173D74((uint64_t)v26, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
    if (v37(v36, 1, v33) == 1)
    {
      uint64_t v69 = v37;
      sub_1C1173D74(v35, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      goto LABEL_15;
    }
LABEL_13:
    uint64_t v38 = v35;
LABEL_21:
    sub_1C1187E78(v38, &qword_1EA1AC5F8, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
    goto LABEL_22;
  }
  sub_1C11799CC(v35, (uint64_t)v17, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  if (v37(v36, 1, v33) == 1)
  {
    sub_1C1173D74((uint64_t)v20, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
    sub_1C1173D74((uint64_t)v26, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
    sub_1C0ED71A4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
    goto LABEL_13;
  }
  uint64_t v69 = v37;
  uint64_t v39 = (uint64_t)v71;
  sub_1C117A08C(v36, (uint64_t)v71, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
  uint64_t v68 = PuzzleStreak.days.getter();
  uint64_t v67 = PuzzleStreak.days.getter();
  sub_1C0ED71A4(v39, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
  sub_1C1173D74((uint64_t)v20, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  sub_1C1173D74((uint64_t)v26, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  sub_1C0ED71A4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
  sub_1C1173D74(v35, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  if (v68 != v67) {
    goto LABEL_22;
  }
LABEL_15:
  uint64_t v40 = v72;
  uint64_t v41 = v76;
  sub_1C11799CC(v73 + v72[7], v76, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  uint64_t v42 = v75;
  sub_1C11799CC(v74 + v40[7], v75, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  uint64_t v43 = v77;
  uint64_t v44 = v77 + *(int *)(v79 + 48);
  sub_1C11799CC(v41, v77, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  sub_1C11799CC(v42, v44, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  uint64_t v45 = v69;
  if (v69(v43, 1, v33) != 1)
  {
    uint64_t v46 = v70;
    sub_1C11799CC(v43, v70, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
    if (v45(v44, 1, v33) != 1)
    {
      uint64_t v49 = (uint64_t)v71;
      sub_1C117A08C(v44, (uint64_t)v71, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      uint64_t v50 = PuzzleStreak.days.getter();
      uint64_t v51 = PuzzleStreak.days.getter();
      sub_1C0ED71A4(v49, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      sub_1C1173D74(v75, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      sub_1C1173D74(v76, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      sub_1C0ED71A4(v46, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      uint64_t v40 = v72;
      sub_1C1173D74(v43, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      if (v50 != v51) {
        goto LABEL_22;
      }
      goto LABEL_25;
    }
    sub_1C1173D74(v75, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
    sub_1C1173D74(v76, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
    sub_1C0ED71A4(v46, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
    goto LABEL_20;
  }
  sub_1C1173D74(v42, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  sub_1C1173D74(v41, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  if (v45(v44, 1, v33) != 1)
  {
LABEL_20:
    uint64_t v38 = v43;
    goto LABEL_21;
  }
  sub_1C1173D74(v43, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
LABEL_25:
  uint64_t v52 = v73;
  uint64_t v53 = v74;
  uint64_t v54 = (long long *)(v73 + v40[8]);
  *(_OWORD *)((char *)v89 + 9) = *(long long *)((char *)v54 + 25);
  long long v55 = v54[1];
  long long v88 = *v54;
  v89[0] = v55;
  uint64_t v56 = (long long *)(v74 + v40[8]);
  *(_OWORD *)((char *)v91 + 9) = *(long long *)((char *)v56 + 25);
  long long v57 = v56[1];
  long long v90 = *v56;
  v91[0] = v57;
  if (sub_1C117061C((uint64_t)&v88, (uint64_t *)&v90))
  {
    uint64_t v58 = (long long *)(v52 + v40[9]);
    *(_OWORD *)((char *)v85 + 9) = *(long long *)((char *)v58 + 25);
    long long v59 = v58[1];
    long long v84 = *v58;
    v85[0] = v59;
    uint64_t v60 = (long long *)(v53 + v40[9]);
    *(_OWORD *)((char *)v87 + 9) = *(long long *)((char *)v60 + 25);
    long long v61 = v60[1];
    long long v86 = *v60;
    v87[0] = v61;
    if (sub_1C11707C4((uint64_t)&v84, (uint64_t)&v86))
    {
      uint64_t v62 = (long long *)(v52 + v40[10]);
      *(_OWORD *)((char *)v81 + 9) = *(long long *)((char *)v62 + 25);
      long long v63 = v62[1];
      long long v80 = *v62;
      v81[0] = v63;
      uint64_t v64 = (long long *)(v53 + v40[10]);
      *(_OWORD *)((char *)v83 + 9) = *(long long *)((char *)v64 + 25);
      long long v65 = v64[1];
      long long v82 = *v64;
      v83[0] = v65;
      char v47 = sub_1C117061C((uint64_t)&v80, (uint64_t *)&v82);
      return v47 & 1;
    }
  }
LABEL_22:
  char v47 = 0;
  return v47 & 1;
}

uint64_t _s8NewsFeed20PuzzleStatisticValueO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleStreak();
  uint64_t v59 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v56 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187F54(0, &qword_1EA1AC5F8, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v57 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v58 = (uint64_t)&v53 - v10;
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v54 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v53 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v53 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v55 = (uint64_t)&v53 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v53 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v53 - v25;
  sub_1C1187DB0(0, &qword_1EA1AC5F0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticValue);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v29 = (char *)&v53 - v28;
  uint64_t v31 = (char *)&v53 + *(int *)(v30 + 56) - v28;
  sub_1C1187E10(a1, (uint64_t)&v53 - v28, type metadata accessor for PuzzleStatisticValue);
  sub_1C1187E10(a2, (uint64_t)v31, type metadata accessor for PuzzleStatisticValue);
  type metadata accessor for PuzzleStatisticValue(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_28;
      }
      return *(void *)v29 == *(void *)v31;
    case 2u:
      uint64_t v34 = *(void *)v29;
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_22;
      }
      goto LABEL_28;
    case 3u:
      double v32 = *(double *)v29;
      if (swift_getEnumCaseMultiPayload() == 3) {
        goto LABEL_9;
      }
      goto LABEL_28;
    case 4u:
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_20;
      }
      sub_1C1173CF4((uint64_t)v29, (uint64_t)v26, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      sub_1C1173CF4((uint64_t)v31, (uint64_t)v23, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      uint64_t v36 = v58;
      uint64_t v37 = v58 + *(int *)(v7 + 48);
      sub_1C11799CC((uint64_t)v26, v58, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      sub_1C11799CC((uint64_t)v23, v37, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      uint64_t v38 = v60;
      uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
      if (v39(v36, 1, v60) == 1)
      {
        sub_1C1173D74((uint64_t)v23, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        sub_1C1173D74((uint64_t)v26, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        if (v39(v37, 1, v38) == 1)
        {
          uint64_t v40 = v36;
          goto LABEL_19;
        }
        goto LABEL_33;
      }
      uint64_t v47 = v55;
      sub_1C11799CC(v36, v55, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      if (v39(v37, 1, v38) == 1)
      {
        sub_1C1173D74((uint64_t)v23, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        sub_1C1173D74((uint64_t)v26, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        sub_1C0ED71A4(v47, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
LABEL_33:
        sub_1C1187E78(v36, &qword_1EA1AC5F8, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        return 0;
      }
      uint64_t v49 = v56;
      sub_1C117A08C(v37, v56, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      uint64_t v50 = PuzzleStreak.days.getter();
      uint64_t v33 = v50 == PuzzleStreak.days.getter();
      sub_1C0ED71A4(v49, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      sub_1C1173D74((uint64_t)v23, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      sub_1C1173D74((uint64_t)v26, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      sub_1C0ED71A4(v47, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      sub_1C1173D74(v36, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      return v33;
    case 5u:
      if (swift_getEnumCaseMultiPayload() != 5)
      {
LABEL_20:
        sub_1C1173D74((uint64_t)v29, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
LABEL_28:
        sub_1C0ED71A4((uint64_t)v31, type metadata accessor for PuzzleStatisticValue);
        return 0;
      }
      sub_1C1173CF4((uint64_t)v29, (uint64_t)v18, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      sub_1C1173CF4((uint64_t)v31, (uint64_t)v15, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      uint64_t v41 = v57;
      uint64_t v42 = v57 + *(int *)(v7 + 48);
      sub_1C11799CC((uint64_t)v18, v57, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      sub_1C11799CC((uint64_t)v15, v42, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      uint64_t v43 = v60;
      uint64_t v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
      if (v44(v41, 1, v60) != 1)
      {
        uint64_t v48 = v54;
        sub_1C11799CC(v41, v54, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        if (v44(v42, 1, v43) != 1)
        {
          uint64_t v51 = v56;
          sub_1C117A08C(v42, v56, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          uint64_t v52 = PuzzleStreak.days.getter();
          uint64_t v33 = v52 == PuzzleStreak.days.getter();
          sub_1C0ED71A4(v51, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          sub_1C1173D74((uint64_t)v15, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
          sub_1C1173D74((uint64_t)v18, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
          sub_1C0ED71A4(v48, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          sub_1C1173D74(v41, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
          return v33;
        }
        sub_1C1173D74((uint64_t)v15, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        sub_1C1173D74((uint64_t)v18, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        sub_1C0ED71A4(v48, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
        goto LABEL_36;
      }
      sub_1C1173D74((uint64_t)v15, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      sub_1C1173D74((uint64_t)v18, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      if (v44(v42, 1, v43) != 1)
      {
LABEL_36:
        sub_1C1187E78(v41, &qword_1EA1AC5F8, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
        return 0;
      }
      uint64_t v40 = v41;
LABEL_19:
      sub_1C1173D74(v40, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
      return 1;
    case 6u:
      uint64_t v34 = *(void *)v29;
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_28;
      }
LABEL_22:
      uint64_t v33 = v31[8];
      if (v29[8]) {
        return v33;
      }
      BOOL v35 = v34 == *(void *)v31;
      goto LABEL_24;
    default:
      double v32 = *(double *)v29;
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_28;
      }
LABEL_9:
      uint64_t v33 = v31[8];
      if (v29[8]) {
        return v33;
      }
      BOOL v35 = v32 == *(double *)v31;
LABEL_24:
      int v45 = v35;
      return v45 & ~v33;
  }
}

uint64_t _s8NewsFeed23PuzzleStatisticCategoryO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v63 = a1;
  uint64_t v64 = a2;
  uint64_t v2 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v58 = (uint64_t)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v57 = (uint64_t)&v55 - v5;
  uint64_t v6 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
  uint64_t v60 = *(void *)(v6 - 8);
  uint64_t v61 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v55 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1187F54(0, &qword_1EA1AC600, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v62 = (uint64_t)&v55 - v10;
  sub_1C00671B8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v56 = (uint64_t)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v55 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v59 = (uint64_t)&v55 - v17;
  uint64_t v18 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v55 - v22;
  uint64_t v24 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v55 - v28;
  sub_1C1187DB0(0, (unint64_t *)&qword_1EB86CB40, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticCategory);
  MEMORY[0x1F4188790](v30 - 8);
  double v32 = (char *)&v55 - v31;
  uint64_t v34 = (char *)&v55 + *(int *)(v33 + 56) - v31;
  sub_1C1187E10(v63, (uint64_t)&v55 - v31, type metadata accessor for PuzzleStatisticCategory);
  sub_1C1187E10(v64, (uint64_t)v34, type metadata accessor for PuzzleStatisticCategory);
  type metadata accessor for PuzzleStatisticCategory(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        BOOL v35 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
        goto LABEL_17;
      }
      sub_1C117A08C((uint64_t)v32, (uint64_t)v23, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      sub_1C117A08C((uint64_t)v34, (uint64_t)v20, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      if ((_s8NewsFeed20PuzzleStatisticValueO2eeoiySbAC_ACtFZ_0((uint64_t)v23, (uint64_t)v20) & 1) != 0
        && (_s8NewsFeed20PuzzleStatisticValueO2eeoiySbAC_ACtFZ_0((uint64_t)&v23[*(int *)(v18 + 20)], (uint64_t)&v20[*(int *)(v18 + 20)]) & 1) != 0)
      {
        char v36 = _s8NewsFeed20PuzzleStatisticValueO2eeoiySbAC_ACtFZ_0((uint64_t)&v23[*(int *)(v18 + 24)], (uint64_t)&v20[*(int *)(v18 + 24)]);
      }
      else
      {
        char v36 = 0;
      }
      sub_1C0ED71A4((uint64_t)v20, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      uint64_t v46 = (uint64_t)v23;
      uint64_t v51 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
      goto LABEL_28;
    case 2u:
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        sub_1C1173D74((uint64_t)v32, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        goto LABEL_18;
      }
      uint64_t v37 = v59;
      sub_1C1173CF4((uint64_t)v32, v59, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      sub_1C1173CF4((uint64_t)v34, (uint64_t)v15, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      uint64_t v38 = v62;
      uint64_t v39 = v62 + *(int *)(v9 + 48);
      sub_1C11799CC(v37, v62, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      sub_1C11799CC((uint64_t)v15, v39, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      uint64_t v40 = v61;
      uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
      if (v41(v38, 1, v61) == 1)
      {
        sub_1C1173D74((uint64_t)v15, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        sub_1C1173D74(v37, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        if (v41(v39, 1, v40) == 1)
        {
          sub_1C1173D74(v38, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
          char v36 = 1;
          return v36 & 1;
        }
        goto LABEL_32;
      }
      uint64_t v53 = v56;
      sub_1C11799CC(v38, v56, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      if (v41(v39, 1, v40) == 1)
      {
        sub_1C1173D74((uint64_t)v15, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        sub_1C1173D74(v37, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        sub_1C0ED71A4(v53, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
LABEL_32:
        sub_1C1187E78(v38, &qword_1EA1AC600, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        goto LABEL_23;
      }
      uint64_t v54 = v55;
      sub_1C117A08C(v39, v55, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      char v36 = _s8NewsFeed43PuzzleStatisticsGameCenterLeaderboardResultV2eeoiySbAC_ACtFZ_0(v53, v54);
      sub_1C0ED71A4(v54, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      sub_1C1173D74((uint64_t)v15, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      sub_1C1173D74(v37, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      sub_1C0ED71A4(v53, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      sub_1C1173D74(v38, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
      return v36 & 1;
    case 3u:
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v42 = (uint64_t)v32;
        uint64_t v43 = v57;
        sub_1C117A08C(v42, v57, type metadata accessor for PuzzleStatisticsGroupedValue);
        uint64_t v44 = v58;
        sub_1C117A08C((uint64_t)v34, v58, type metadata accessor for PuzzleStatisticsGroupedValue);
        char v36 = _s8NewsFeed28PuzzleStatisticsGroupedValueV2eeoiySbAC_ACtFZ_0(v43, v44);
        int v45 = type metadata accessor for PuzzleStatisticsGroupedValue;
        sub_1C0ED71A4(v44, type metadata accessor for PuzzleStatisticsGroupedValue);
        uint64_t v46 = v43;
        goto LABEL_25;
      }
      BOOL v35 = type metadata accessor for PuzzleStatisticsGroupedValue;
      goto LABEL_17;
    default:
      if (swift_getEnumCaseMultiPayload())
      {
        BOOL v35 = type metadata accessor for PuzzleStatisticValue;
LABEL_17:
        sub_1C0ED71A4((uint64_t)v32, v35);
LABEL_18:
        sub_1C0ED71A4((uint64_t)v34, type metadata accessor for PuzzleStatisticCategory);
        if (qword_1EB8814A0 != -1) {
          swift_once();
        }
        uint64_t v47 = sub_1C15198DC();
        __swift_project_value_buffer(v47, (uint64_t)qword_1EB93C7A8);
        uint64_t v48 = sub_1C15198AC();
        os_log_type_t v49 = sub_1C151F36C();
        if (os_log_type_enabled(v48, v49))
        {
          uint64_t v50 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v50 = 0;
          _os_log_impl(&dword_1BFC31000, v48, v49, "Can't equate non-matching PuzzleStatisticCategory values", v50, 2u);
          MEMORY[0x1C18C9B00](v50, -1, -1);
        }

LABEL_23:
        char v36 = 0;
      }
      else
      {
        sub_1C117A08C((uint64_t)v32, (uint64_t)v29, type metadata accessor for PuzzleStatisticValue);
        sub_1C117A08C((uint64_t)v34, (uint64_t)v26, type metadata accessor for PuzzleStatisticValue);
        char v36 = _s8NewsFeed20PuzzleStatisticValueO2eeoiySbAC_ACtFZ_0((uint64_t)v29, (uint64_t)v26);
        int v45 = type metadata accessor for PuzzleStatisticValue;
        sub_1C0ED71A4((uint64_t)v26, type metadata accessor for PuzzleStatisticValue);
        uint64_t v46 = (uint64_t)v29;
LABEL_25:
        uint64_t v51 = v45;
LABEL_28:
        sub_1C0ED71A4(v46, v51);
      }
      return v36 & 1;
  }
}

unint64_t sub_1C1179588()
{
  unint64_t result = qword_1EA1AC0F0;
  if (!qword_1EA1AC0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC0F0);
  }
  return result;
}

unint64_t sub_1C11795DC()
{
  unint64_t result = qword_1EA1AC100;
  if (!qword_1EA1AC100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC100);
  }
  return result;
}

unint64_t sub_1C1179630()
{
  unint64_t result = qword_1EA1AC110;
  if (!qword_1EA1AC110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC110);
  }
  return result;
}

unint64_t sub_1C1179684()
{
  unint64_t result = qword_1EA1AC120;
  if (!qword_1EA1AC120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC120);
  }
  return result;
}

unint64_t sub_1C11796D8()
{
  unint64_t result = qword_1EA1AC130;
  if (!qword_1EA1AC130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC130);
  }
  return result;
}

unint64_t sub_1C117972C()
{
  unint64_t result = qword_1EA1AC1A8;
  if (!qword_1EA1AC1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC1A8);
  }
  return result;
}

unint64_t sub_1C1179780()
{
  unint64_t result = qword_1EA1AC1B8;
  if (!qword_1EA1AC1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC1B8);
  }
  return result;
}

unint64_t sub_1C11797D4()
{
  unint64_t result = qword_1EA1AC1C8;
  if (!qword_1EA1AC1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC1C8);
  }
  return result;
}

unint64_t sub_1C1179828()
{
  unint64_t result = qword_1EA1AC1D8;
  if (!qword_1EA1AC1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC1D8);
  }
  return result;
}

unint64_t sub_1C117987C()
{
  unint64_t result = qword_1EA1AC1E8;
  if (!qword_1EA1AC1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC1E8);
  }
  return result;
}

unint64_t sub_1C11798D0()
{
  unint64_t result = qword_1EA1AC1F8;
  if (!qword_1EA1AC1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC1F8);
  }
  return result;
}

unint64_t sub_1C1179924()
{
  unint64_t result = qword_1EA1AC208;
  if (!qword_1EA1AC208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC208);
  }
  return result;
}

unint64_t sub_1C1179978()
{
  unint64_t result = qword_1EA1AC218;
  if (!qword_1EA1AC218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC218);
  }
  return result;
}

uint64_t sub_1C11799CC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C00671B8(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_1C1179A4C()
{
  unint64_t result = qword_1EA1AC268;
  if (!qword_1EA1AC268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC268);
  }
  return result;
}

uint64_t type metadata accessor for PuzzleStatisticDifficultyLevel()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for PuzzleStatisticDifficultyLevel.CodingKeys()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1C1179AD0()
{
  unint64_t result = qword_1EA1AC280;
  if (!qword_1EA1AC280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC280);
  }
  return result;
}

void sub_1C1179B24()
{
  if (!qword_1EA1AC288)
  {
    sub_1BFC78004(255, &qword_1EB87A090, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    sub_1C1179C3C(&qword_1EA1AC290);
    sub_1C1179C3C(&qword_1EA1AC298);
    sub_1C1179C3C(&qword_1EA1AC2A0);
    unint64_t v0 = type metadata accessor for PuzzleStatisticDifficultyLevel();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AC288);
    }
  }
}

uint64_t sub_1C1179C3C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFC78004(255, &qword_1EB87A090, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1179CC0()
{
  if (!qword_1EA1AC2B0)
  {
    sub_1BFC78004(255, (unint64_t *)&qword_1EB8900F8, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBB718]);
    sub_1C1179D6C();
    sub_1C1179DF8();
    sub_1C1179E84();
    unint64_t v0 = type metadata accessor for PuzzleStatisticDifficultyLevel();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AC2B0);
    }
  }
}

unint64_t sub_1C1179D6C()
{
  unint64_t result = qword_1EA1AC2B8;
  if (!qword_1EA1AC2B8)
  {
    sub_1BFC78004(255, (unint64_t *)&qword_1EB8900F8, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBB718]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC2B8);
  }
  return result;
}

unint64_t sub_1C1179DF8()
{
  unint64_t result = qword_1EA1AC2C0;
  if (!qword_1EA1AC2C0)
  {
    sub_1BFC78004(255, (unint64_t *)&qword_1EB8900F8, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBB718]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC2C0);
  }
  return result;
}

unint64_t sub_1C1179E84()
{
  unint64_t result = qword_1EA1AC2C8;
  if (!qword_1EA1AC2C8)
  {
    sub_1BFC78004(255, (unint64_t *)&qword_1EB8900F8, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBB718]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC2C8);
  }
  return result;
}

unint64_t sub_1C1179F10()
{
  unint64_t result = qword_1EA1AC2F8;
  if (!qword_1EA1AC2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC2F8);
  }
  return result;
}

void sub_1C1179F64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C1179FCC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C00671B8(255, &qword_1EA1AC308, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry, MEMORY[0x1E4FBB320]);
    sub_1C117A334(a2, (void (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C117A08C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C117A0F8()
{
  unint64_t result = qword_1EA1AC330;
  if (!qword_1EA1AC330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC330);
  }
  return result;
}

unint64_t sub_1C117A150()
{
  unint64_t result = qword_1EA1AC338;
  if (!qword_1EA1AC338)
  {
    sub_1BFC78004(255, &qword_1EA1AC340, (uint64_t)&type metadata for PuzzleDifficultyLevel, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC338);
  }
  return result;
}

uint64_t sub_1C117A1CC()
{
  return sub_1C117A334(&qword_1EA1AC348, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticCategory);
}

uint64_t sub_1C117A214()
{
  return sub_1C117A334(&qword_1EA1AC350, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticValue);
}

uint64_t sub_1C117A25C()
{
  return sub_1C117A334(&qword_1EA1AC358, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticDifficultyLevelValue);
}

uint64_t sub_1C117A2A4()
{
  return sub_1C117A334(&qword_1EA1AC360, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
}

uint64_t sub_1C117A2EC()
{
  return sub_1C117A334(qword_1EA1AC368, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGroupedValue);
}

uint64_t sub_1C117A334(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleStatisticCategory(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v14 = type metadata accessor for PuzzleStatisticValue(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 5)
        {
          uint64_t v16 = type metadata accessor for PuzzleStreak();
          uint64_t v17 = *(void *)(v16 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
          {
LABEL_27:
            sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(a1, a2, *(void *)(*(void *)(v58 - 8) + 64));
            goto LABEL_35;
          }
        }
        else
        {
          if (EnumCaseMultiPayload != 4)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
            goto LABEL_36;
          }
          uint64_t v16 = type metadata accessor for PuzzleStreak();
          uint64_t v17 = *(void *)(v16 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16)) {
            goto LABEL_27;
          }
        }
        uint64_t v66 = sub_1C151555C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v66 - 8) + 16))(a1, a2, v66);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
LABEL_35:
        swift_storeEnumTagMultiPayload();
LABEL_36:
        uint64_t v67 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v68 = *(int *)(v67 + 20);
        uint64_t v69 = (char *)a1 + v68;
        uint64_t v70 = (char *)a2 + v68;
        int v71 = swift_getEnumCaseMultiPayload();
        if (v71 == 5)
        {
          uint64_t v72 = type metadata accessor for PuzzleStreak();
          uint64_t v73 = *(void *)(v72 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v70, 1, v72))
          {
LABEL_41:
            sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v69, v70, *(void *)(*(void *)(v74 - 8) + 64));
            goto LABEL_44;
          }
        }
        else
        {
          if (v71 != 4)
          {
            memcpy(v69, v70, *(void *)(*(void *)(v14 - 8) + 64));
            goto LABEL_45;
          }
          uint64_t v72 = type metadata accessor for PuzzleStreak();
          uint64_t v73 = *(void *)(v72 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v70, 1, v72)) {
            goto LABEL_41;
          }
        }
        uint64_t v75 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v69, v70, v75);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v69, 0, 1, v72);
LABEL_44:
        swift_storeEnumTagMultiPayload();
LABEL_45:
        uint64_t v76 = *(int *)(v67 + 24);
        uint64_t v77 = (char *)a1 + v76;
        uint64_t v78 = (char *)a2 + v76;
        int v79 = swift_getEnumCaseMultiPayload();
        if (v79 == 5)
        {
          uint64_t v80 = type metadata accessor for PuzzleStreak();
          uint64_t v81 = *(void *)(v80 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v78, 1, v80))
          {
LABEL_50:
            sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v77, v78, *(void *)(*(void *)(v82 - 8) + 64));
            goto LABEL_53;
          }
        }
        else
        {
          if (v79 != 4)
          {
            memcpy(v77, v78, *(void *)(*(void *)(v14 - 8) + 64));
            goto LABEL_54;
          }
          uint64_t v80 = type metadata accessor for PuzzleStreak();
          uint64_t v81 = *(void *)(v80 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v78, 1, v80)) {
            goto LABEL_50;
          }
        }
        uint64_t v83 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v77, v78, v83);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v77, 0, 1, v80);
        goto LABEL_53;
      case 2u:
        uint64_t v11 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v12 = *((void *)v11 - 1);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v12 + 48))(a2, 1, v11))
        {
          sub_1C00671B8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          uint64_t v27 = sub_1C151631C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
          uint64_t v28 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          uint64_t v29 = v28[5];
          uint64_t v30 = (uint64_t *)((char *)a1 + v29);
          uint64_t v31 = (uint64_t *)((char *)a2 + v29);
          uint64_t v32 = v31[1];
          void *v30 = *v31;
          v30[1] = v32;
          uint64_t v33 = v28[6];
          uint64_t v34 = (char *)a1 + v33;
          BOOL v35 = (uint64_t *)((char *)a2 + v33);
          uint64_t v36 = v35[1];
          *(void *)uint64_t v34 = *v35;
          *((void *)v34 + 1) = v36;
          uint64_t v37 = v35 + 2;
          unint64_t v38 = v35[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v38 >> 60 == 15)
          {
            *((_OWORD *)v34 + 1) = *(_OWORD *)v37;
          }
          else
          {
            uint64_t v59 = *v37;
            sub_1BFE95820(*v37, v38);
            *((void *)v34 + 2) = v59;
            *((void *)v34 + 3) = v38;
          }
          *(uint64_t *)((char *)a1 + v28[7]) = *(uint64_t *)((char *)a2 + v28[7]);
          *(uint64_t *)((char *)a1 + v28[8]) = *(uint64_t *)((char *)a2 + v28[8]);
          *(uint64_t *)((char *)a1 + v11[5]) = *(uint64_t *)((char *)a2 + v11[5]);
          *(uint64_t *)((char *)a1 + v11[6]) = *(uint64_t *)((char *)a2 + v11[6]);
          uint64_t v60 = v11[7];
          uint64_t v61 = (uint64_t *)((char *)a1 + v60);
          uint64_t v62 = (uint64_t *)((char *)a2 + v60);
          uint64_t v63 = v62[1];
          *uint64_t v61 = *v62;
          v61[1] = v63;
          uint64_t v64 = *(void (**)(uint64_t *, void, uint64_t, int *))(v12 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v64(a1, 0, 1, v11);
        }
        goto LABEL_54;
      case 3u:
        uint64_t v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v19 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v20 = v19[6];
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = type metadata accessor for PuzzleStreak();
        uint64_t v24 = *(void *)(v23 - 8);
        uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
        if (v25(v22, 1, v23))
        {
          sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          uint64_t v39 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v21, v22, v39);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        uint64_t v40 = v19[7];
        uint64_t v41 = (char *)a1 + v40;
        uint64_t v42 = (char *)a2 + v40;
        if (v25((char *)a2 + v40, 1, v23))
        {
          sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          uint64_t v44 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v41, v42, v44);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v41, 0, 1, v23);
        }
        uint64_t v45 = v19[8];
        uint64_t v46 = (_OWORD *)((char *)a1 + v45);
        uint64_t v47 = (_OWORD *)((char *)a2 + v45);
        long long v48 = v47[1];
        *uint64_t v46 = *v47;
        v46[1] = v48;
        *(_OWORD *)((char *)v46 + 25) = *(_OWORD *)((char *)v47 + 25);
        uint64_t v49 = v19[9];
        uint64_t v50 = (_OWORD *)((char *)a1 + v49);
        uint64_t v51 = (_OWORD *)((char *)a2 + v49);
        *(_OWORD *)((char *)v50 + 25) = *(_OWORD *)((char *)v51 + 25);
        long long v52 = v51[1];
        *uint64_t v50 = *v51;
        v50[1] = v52;
        uint64_t v53 = v19[10];
        uint64_t v54 = (_OWORD *)((char *)a1 + v53);
        uint64_t v55 = (_OWORD *)((char *)a2 + v53);
        long long v56 = v55[1];
        *uint64_t v54 = *v55;
        v54[1] = v56;
        *(_OWORD *)((char *)v54 + 25) = *(_OWORD *)((char *)v55 + 25);
        goto LABEL_54;
      default:
        uint64_t v6 = type metadata accessor for PuzzleStatisticValue(0);
        int v7 = swift_getEnumCaseMultiPayload();
        if (v7 == 5)
        {
          uint64_t v8 = type metadata accessor for PuzzleStreak();
          uint64_t v9 = *(void *)(v8 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
          {
LABEL_24:
            sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(a1, a2, *(void *)(*(void *)(v57 - 8) + 64));
            goto LABEL_53;
          }
        }
        else
        {
          if (v7 != 4)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
            goto LABEL_54;
          }
          uint64_t v8 = type metadata accessor for PuzzleStreak();
          uint64_t v9 = *(void *)(v8 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8)) {
            goto LABEL_24;
          }
        }
        uint64_t v65 = sub_1C151555C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v65 - 8) + 16))(a1, a2, v65);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
LABEL_53:
        swift_storeEnumTagMultiPayload();
LABEL_54:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t destroy for PuzzleStatisticCategory(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      type metadata accessor for PuzzleStatisticValue(0);
      goto LABEL_12;
    case 1:
      type metadata accessor for PuzzleStatisticValue(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
      {
        uint64_t v4 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
        {
          uint64_t v5 = sub_1C151555C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
        }
      }
      uint64_t v6 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v7 = a1 + *(int *)(v6 + 20);
      int v8 = swift_getEnumCaseMultiPayload();
      if (v8 == 5 || v8 == 4)
      {
        uint64_t v9 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9))
        {
          uint64_t v10 = sub_1C151555C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v7, v10);
        }
      }
      a1 += *(int *)(v6 + 24);
LABEL_12:
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 5 || result == 4)
      {
        uint64_t v11 = type metadata accessor for PuzzleStreak();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(a1, 1, v11);
        if (!result) {
          goto LABEL_26;
        }
      }
      return result;
    case 2:
      uint64_t v12 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(a1, 1, v12);
      if (!result)
      {
        uint64_t v13 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
        uint64_t v14 = type metadata accessor for PuzzleLeaderboardEntry();
        swift_bridgeObjectRelease();
        uint64_t v15 = a1 + *(int *)(v14 + 24);
        swift_bridgeObjectRelease();
        unint64_t v16 = *(void *)(v15 + 24);
        if (v16 >> 60 != 15) {
          sub_1BFE95664(*(void *)(v15 + 16), v16);
        }
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      return result;
    case 3:
      uint64_t v17 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v18 = a1 + *(int *)(v17 + 24);
      uint64_t v19 = type metadata accessor for PuzzleStreak();
      uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
      if (!v20(v18, 1, v19))
      {
        uint64_t v21 = sub_1C151555C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v18, v21);
      }
      a1 += *(int *)(v17 + 28);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v20)(a1, 1, v19);
      if (result) {
        return result;
      }
LABEL_26:
      uint64_t v22 = sub_1C151555C();
      uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);
      uint64_t result = v23(a1, v22);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for PuzzleStatisticCategory(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v11 = type metadata accessor for PuzzleStatisticValue(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5)
      {
        uint64_t v13 = type metadata accessor for PuzzleStreak();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
        {
LABEL_25:
          sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(a1, a2, *(void *)(*(void *)(v55 - 8) + 64));
          goto LABEL_33;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 4)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          goto LABEL_34;
        }
        uint64_t v13 = type metadata accessor for PuzzleStreak();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13)) {
          goto LABEL_25;
        }
      }
      uint64_t v63 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(a1, a2, v63);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
LABEL_33:
      swift_storeEnumTagMultiPayload();
LABEL_34:
      uint64_t v64 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v65 = *(int *)(v64 + 20);
      uint64_t v66 = (char *)a1 + v65;
      uint64_t v67 = (char *)a2 + v65;
      int v68 = swift_getEnumCaseMultiPayload();
      if (v68 == 5)
      {
        uint64_t v69 = type metadata accessor for PuzzleStreak();
        uint64_t v70 = *(void *)(v69 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v67, 1, v69))
        {
LABEL_39:
          sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v66, v67, *(void *)(*(void *)(v71 - 8) + 64));
          goto LABEL_42;
        }
      }
      else
      {
        if (v68 != 4)
        {
          memcpy(v66, v67, *(void *)(*(void *)(v11 - 8) + 64));
          goto LABEL_43;
        }
        uint64_t v69 = type metadata accessor for PuzzleStreak();
        uint64_t v70 = *(void *)(v69 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v67, 1, v69)) {
          goto LABEL_39;
        }
      }
      uint64_t v72 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v66, v67, v72);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v66, 0, 1, v69);
LABEL_42:
      swift_storeEnumTagMultiPayload();
LABEL_43:
      uint64_t v73 = *(int *)(v64 + 24);
      uint64_t v74 = (char *)a1 + v73;
      uint64_t v75 = (char *)a2 + v73;
      int v76 = swift_getEnumCaseMultiPayload();
      if (v76 == 5)
      {
        uint64_t v77 = type metadata accessor for PuzzleStreak();
        uint64_t v78 = *(void *)(v77 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v75, 1, v77))
        {
LABEL_48:
          sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v74, v75, *(void *)(*(void *)(v79 - 8) + 64));
          goto LABEL_51;
        }
      }
      else
      {
        if (v76 != 4)
        {
          memcpy(v74, v75, *(void *)(*(void *)(v11 - 8) + 64));
          goto LABEL_52;
        }
        uint64_t v77 = type metadata accessor for PuzzleStreak();
        uint64_t v78 = *(void *)(v77 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v75, 1, v77)) {
          goto LABEL_48;
        }
      }
      uint64_t v80 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v74, v75, v80);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v74, 0, 1, v77);
      goto LABEL_51;
    case 2u:
      int v8 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v9 = *((void *)v8 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
      {
        sub_1C00671B8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        uint64_t v24 = sub_1C151631C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
        uint64_t v25 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v26 = v25[5];
        uint64_t v27 = (void *)((char *)a1 + v26);
        uint64_t v28 = (void *)((char *)a2 + v26);
        uint64_t v29 = v28[1];
        *uint64_t v27 = *v28;
        v27[1] = v29;
        uint64_t v30 = v25[6];
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = (void *)((char *)a2 + v30);
        uint64_t v33 = v32[1];
        *(void *)uint64_t v31 = *v32;
        *((void *)v31 + 1) = v33;
        uint64_t v34 = v32 + 2;
        unint64_t v35 = v32[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v35 >> 60 == 15)
        {
          *((_OWORD *)v31 + 1) = *(_OWORD *)v34;
        }
        else
        {
          uint64_t v56 = *v34;
          sub_1BFE95820(*v34, v35);
          *((void *)v31 + 2) = v56;
          *((void *)v31 + 3) = v35;
        }
        *(void *)((char *)a1 + v25[7]) = *(void *)((char *)a2 + v25[7]);
        *(void *)((char *)a1 + v25[8]) = *(void *)((char *)a2 + v25[8]);
        *(void *)((char *)a1 + v8[5]) = *(void *)((char *)a2 + v8[5]);
        *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
        uint64_t v57 = v8[7];
        uint64_t v58 = (void *)((char *)a1 + v57);
        uint64_t v59 = (void *)((char *)a2 + v57);
        uint64_t v60 = v59[1];
        *uint64_t v58 = *v59;
        v58[1] = v60;
        uint64_t v61 = *(void (**)(void *, void, uint64_t, int *))(v9 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v61(a1, 0, 1, v8);
      }
      goto LABEL_52;
    case 3u:
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      unint64_t v16 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v17 = v16[6];
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = type metadata accessor for PuzzleStreak();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      if (v22(v19, 1, v20))
      {
        sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        uint64_t v36 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v18, v19, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      uint64_t v37 = v16[7];
      unint64_t v38 = (char *)a1 + v37;
      uint64_t v39 = (char *)a2 + v37;
      if (v22((char *)a2 + v37, 1, v20))
      {
        sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        uint64_t v41 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v38, v39, v41);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v38, 0, 1, v20);
      }
      uint64_t v42 = v16[8];
      uint64_t v43 = (_OWORD *)((char *)a1 + v42);
      uint64_t v44 = (_OWORD *)((char *)a2 + v42);
      long long v45 = v44[1];
      *uint64_t v43 = *v44;
      v43[1] = v45;
      *(_OWORD *)((char *)v43 + 25) = *(_OWORD *)((char *)v44 + 25);
      uint64_t v46 = v16[9];
      uint64_t v47 = (_OWORD *)((char *)a1 + v46);
      long long v48 = (_OWORD *)((char *)a2 + v46);
      *(_OWORD *)((char *)v47 + 25) = *(_OWORD *)((char *)v48 + 25);
      long long v49 = v48[1];
      *uint64_t v47 = *v48;
      v47[1] = v49;
      uint64_t v50 = v16[10];
      uint64_t v51 = (_OWORD *)((char *)a1 + v50);
      long long v52 = (_OWORD *)((char *)a2 + v50);
      long long v53 = v52[1];
      _OWORD *v51 = *v52;
      v51[1] = v53;
      *(_OWORD *)((char *)v51 + 25) = *(_OWORD *)((char *)v52 + 25);
      goto LABEL_52;
    default:
      uint64_t v4 = type metadata accessor for PuzzleStatisticValue(0);
      int v5 = swift_getEnumCaseMultiPayload();
      if (v5 == 5)
      {
        uint64_t v6 = type metadata accessor for PuzzleStreak();
        uint64_t v7 = *(void *)(v6 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
        {
LABEL_22:
          sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(a1, a2, *(void *)(*(void *)(v54 - 8) + 64));
          goto LABEL_51;
        }
      }
      else
      {
        if (v5 != 4)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
          goto LABEL_52;
        }
        uint64_t v6 = type metadata accessor for PuzzleStreak();
        uint64_t v7 = *(void *)(v6 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6)) {
          goto LABEL_22;
        }
      }
      uint64_t v62 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v62 - 8) + 16))(a1, a2, v62);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_51:
      swift_storeEnumTagMultiPayload();
LABEL_52:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

void *assignWithCopy for PuzzleStatisticCategory(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C0ED71A4((uint64_t)a1, type metadata accessor for PuzzleStatisticCategory);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v11 = type metadata accessor for PuzzleStatisticValue(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 5)
        {
          uint64_t v13 = type metadata accessor for PuzzleStreak();
          uint64_t v14 = *(void *)(v13 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
          {
LABEL_26:
            sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(a1, a2, *(void *)(*(void *)(v56 - 8) + 64));
            goto LABEL_34;
          }
        }
        else
        {
          if (EnumCaseMultiPayload != 4)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
            goto LABEL_35;
          }
          uint64_t v13 = type metadata accessor for PuzzleStreak();
          uint64_t v14 = *(void *)(v13 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13)) {
            goto LABEL_26;
          }
        }
        uint64_t v63 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(a1, a2, v63);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
LABEL_34:
        swift_storeEnumTagMultiPayload();
LABEL_35:
        uint64_t v64 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v65 = *(int *)(v64 + 20);
        uint64_t v66 = (char *)a1 + v65;
        uint64_t v67 = (char *)a2 + v65;
        int v68 = swift_getEnumCaseMultiPayload();
        if (v68 == 5)
        {
          uint64_t v69 = type metadata accessor for PuzzleStreak();
          uint64_t v70 = *(void *)(v69 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v67, 1, v69))
          {
LABEL_40:
            sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v66, v67, *(void *)(*(void *)(v71 - 8) + 64));
            goto LABEL_43;
          }
        }
        else
        {
          if (v68 != 4)
          {
            memcpy(v66, v67, *(void *)(*(void *)(v11 - 8) + 64));
            goto LABEL_44;
          }
          uint64_t v69 = type metadata accessor for PuzzleStreak();
          uint64_t v70 = *(void *)(v69 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v67, 1, v69)) {
            goto LABEL_40;
          }
        }
        uint64_t v72 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v66, v67, v72);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v66, 0, 1, v69);
LABEL_43:
        swift_storeEnumTagMultiPayload();
LABEL_44:
        uint64_t v73 = *(int *)(v64 + 24);
        uint64_t v74 = (char *)a1 + v73;
        uint64_t v75 = (char *)a2 + v73;
        int v76 = swift_getEnumCaseMultiPayload();
        if (v76 == 5)
        {
          uint64_t v77 = type metadata accessor for PuzzleStreak();
          uint64_t v78 = *(void *)(v77 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v75, 1, v77))
          {
LABEL_49:
            sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v74, v75, *(void *)(*(void *)(v79 - 8) + 64));
            goto LABEL_52;
          }
        }
        else
        {
          if (v76 != 4)
          {
            memcpy(v74, v75, *(void *)(*(void *)(v11 - 8) + 64));
            goto LABEL_53;
          }
          uint64_t v77 = type metadata accessor for PuzzleStreak();
          uint64_t v78 = *(void *)(v77 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v75, 1, v77)) {
            goto LABEL_49;
          }
        }
        uint64_t v80 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v74, v75, v80);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v74, 0, 1, v77);
        goto LABEL_52;
      case 2u:
        int v8 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v9 = *((void *)v8 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
        {
          sub_1C00671B8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        }
        else
        {
          uint64_t v24 = sub_1C151631C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
          uint64_t v25 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          uint64_t v26 = v25[5];
          uint64_t v27 = (void *)((char *)a1 + v26);
          uint64_t v28 = (void *)((char *)a2 + v26);
          *uint64_t v27 = *v28;
          v27[1] = v28[1];
          uint64_t v29 = v25[6];
          uint64_t v30 = (char *)a1 + v29;
          uint64_t v31 = (void *)((char *)a2 + v29);
          *(void *)uint64_t v30 = *v31;
          *((void *)v30 + 1) = v31[1];
          uint64_t v32 = v31 + 2;
          unint64_t v33 = v31[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v33 >> 60 == 15)
          {
            *((_OWORD *)v30 + 1) = *(_OWORD *)v32;
          }
          else
          {
            uint64_t v57 = *v32;
            sub_1BFE95820(*v32, v33);
            *((void *)v30 + 2) = v57;
            *((void *)v30 + 3) = v33;
          }
          *(void *)((char *)a1 + v25[7]) = *(void *)((char *)a2 + v25[7]);
          *(void *)((char *)a1 + v25[8]) = *(void *)((char *)a2 + v25[8]);
          *(void *)((char *)a1 + v8[5]) = *(void *)((char *)a2 + v8[5]);
          *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
          uint64_t v58 = v8[7];
          uint64_t v59 = (void *)((char *)a1 + v58);
          uint64_t v60 = (void *)((char *)a2 + v58);
          *uint64_t v59 = *v60;
          v59[1] = v60[1];
          uint64_t v61 = *(void (**)(void *, void, uint64_t, int *))(v9 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v61(a1, 0, 1, v8);
        }
        goto LABEL_53;
      case 3u:
        *a1 = *a2;
        uint64_t v15 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v15;
        unint64_t v16 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v17 = v16[6];
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = type metadata accessor for PuzzleStreak();
        uint64_t v21 = *(void *)(v20 - 8);
        uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
        if (v22(v19, 1, v20))
        {
          sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          uint64_t v34 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v18, v19, v34);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        uint64_t v35 = v16[7];
        uint64_t v36 = (char *)a1 + v35;
        uint64_t v37 = (char *)a2 + v35;
        if (v22((char *)a2 + v35, 1, v20))
        {
          sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          uint64_t v39 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v36, v37, v39);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v36, 0, 1, v20);
        }
        uint64_t v40 = v16[8];
        uint64_t v41 = (_OWORD *)((char *)a1 + v40);
        uint64_t v42 = (long long *)((char *)a2 + v40);
        long long v43 = *v42;
        long long v44 = v42[1];
        *(_OWORD *)((char *)v41 + 25) = *(long long *)((char *)v42 + 25);
        *uint64_t v41 = v43;
        v41[1] = v44;
        uint64_t v45 = v16[9];
        uint64_t v46 = (_OWORD *)((char *)a1 + v45);
        uint64_t v47 = (long long *)((char *)a2 + v45);
        long long v48 = *v47;
        long long v49 = v47[1];
        *(_OWORD *)((char *)v46 + 25) = *(long long *)((char *)v47 + 25);
        *uint64_t v46 = v48;
        v46[1] = v49;
        uint64_t v50 = v16[10];
        uint64_t v51 = (_OWORD *)((char *)a1 + v50);
        long long v52 = (long long *)((char *)a2 + v50);
        long long v53 = *v52;
        long long v54 = v52[1];
        *(_OWORD *)((char *)v51 + 25) = *(long long *)((char *)v52 + 25);
        _OWORD *v51 = v53;
        v51[1] = v54;
        goto LABEL_53;
      default:
        uint64_t v4 = type metadata accessor for PuzzleStatisticValue(0);
        int v5 = swift_getEnumCaseMultiPayload();
        if (v5 == 5)
        {
          uint64_t v6 = type metadata accessor for PuzzleStreak();
          uint64_t v7 = *(void *)(v6 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
          {
LABEL_23:
            sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(a1, a2, *(void *)(*(void *)(v55 - 8) + 64));
            goto LABEL_52;
          }
        }
        else
        {
          if (v5 != 4)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
            goto LABEL_53;
          }
          uint64_t v6 = type metadata accessor for PuzzleStreak();
          uint64_t v7 = *(void *)(v6 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6)) {
            goto LABEL_23;
          }
        }
        uint64_t v62 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v62 - 8) + 16))(a1, a2, v62);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_52:
        swift_storeEnumTagMultiPayload();
LABEL_53:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

void *initializeWithTake for PuzzleStatisticCategory(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v11 = type metadata accessor for PuzzleStatisticValue(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5)
      {
        uint64_t v13 = type metadata accessor for PuzzleStreak();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
        {
LABEL_24:
          sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64));
          goto LABEL_30;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 4)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          goto LABEL_31;
        }
        uint64_t v13 = type metadata accessor for PuzzleStreak();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13)) {
          goto LABEL_24;
        }
      }
      uint64_t v51 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 32))(a1, a2, v51);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
LABEL_30:
      swift_storeEnumTagMultiPayload();
LABEL_31:
      uint64_t v52 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v53 = *(int *)(v52 + 20);
      long long v54 = (char *)a1 + v53;
      uint64_t v55 = (char *)a2 + v53;
      int v56 = swift_getEnumCaseMultiPayload();
      if (v56 == 5)
      {
        uint64_t v57 = type metadata accessor for PuzzleStreak();
        uint64_t v58 = *(void *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v55, 1, v57))
        {
LABEL_36:
          sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v54, v55, *(void *)(*(void *)(v59 - 8) + 64));
          goto LABEL_39;
        }
      }
      else
      {
        if (v56 != 4)
        {
          memcpy(v54, v55, *(void *)(*(void *)(v11 - 8) + 64));
          goto LABEL_40;
        }
        uint64_t v57 = type metadata accessor for PuzzleStreak();
        uint64_t v58 = *(void *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v55, 1, v57)) {
          goto LABEL_36;
        }
      }
      uint64_t v60 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v54, v55, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v54, 0, 1, v57);
LABEL_39:
      swift_storeEnumTagMultiPayload();
LABEL_40:
      uint64_t v61 = *(int *)(v52 + 24);
      uint64_t v62 = (char *)a1 + v61;
      uint64_t v63 = (char *)a2 + v61;
      int v64 = swift_getEnumCaseMultiPayload();
      if (v64 == 5)
      {
        uint64_t v65 = type metadata accessor for PuzzleStreak();
        uint64_t v66 = *(void *)(v65 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v63, 1, v65))
        {
LABEL_45:
          sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v62, v63, *(void *)(*(void *)(v67 - 8) + 64));
          goto LABEL_48;
        }
      }
      else
      {
        if (v64 != 4)
        {
          memcpy(v62, v63, *(void *)(*(void *)(v11 - 8) + 64));
          goto LABEL_49;
        }
        uint64_t v65 = type metadata accessor for PuzzleStreak();
        uint64_t v66 = *(void *)(v65 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v63, 1, v65)) {
          goto LABEL_45;
        }
      }
      uint64_t v68 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v62, v63, v68);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v62, 0, 1, v65);
      goto LABEL_48;
    case 2u:
      int v8 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v9 = *((void *)v8 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
      {
        sub_1C00671B8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        uint64_t v24 = sub_1C151631C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
        uint64_t v25 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        *(_OWORD *)((char *)a1 + v25[5]) = *(_OWORD *)((char *)a2 + v25[5]);
        uint64_t v26 = v25[6];
        uint64_t v27 = (_OWORD *)((char *)a1 + v26);
        uint64_t v28 = (_OWORD *)((char *)a2 + v26);
        long long v29 = v28[1];
        *uint64_t v27 = *v28;
        v27[1] = v29;
        *(void *)((char *)a1 + v25[7]) = *(void *)((char *)a2 + v25[7]);
        *(void *)((char *)a1 + v25[8]) = *(void *)((char *)a2 + v25[8]);
        *(void *)((char *)a1 + v8[5]) = *(void *)((char *)a2 + v8[5]);
        *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
        *(_OWORD *)((char *)a1 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
        (*(void (**)(void *, void, uint64_t, int *))(v9 + 56))(a1, 0, 1, v8);
      }
      goto LABEL_49;
    case 3u:
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      unint64_t v16 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v17 = v16[6];
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = type metadata accessor for PuzzleStreak();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      if (v22(v19, 1, v20))
      {
        sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        uint64_t v30 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v18, v19, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      uint64_t v31 = v16[7];
      uint64_t v32 = (char *)a1 + v31;
      unint64_t v33 = (char *)a2 + v31;
      if (v22((char *)a2 + v31, 1, v20))
      {
        sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        uint64_t v35 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v33, v35);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v32, 0, 1, v20);
      }
      uint64_t v36 = v16[8];
      uint64_t v37 = (_OWORD *)((char *)a1 + v36);
      uint64_t v38 = (_OWORD *)((char *)a2 + v36);
      long long v39 = v38[1];
      *uint64_t v37 = *v38;
      v37[1] = v39;
      *(_OWORD *)((char *)v37 + 25) = *(_OWORD *)((char *)v38 + 25);
      uint64_t v40 = v16[9];
      uint64_t v41 = (_OWORD *)((char *)a1 + v40);
      uint64_t v42 = (_OWORD *)((char *)a2 + v40);
      *(_OWORD *)((char *)v41 + 25) = *(_OWORD *)((char *)v42 + 25);
      long long v43 = v42[1];
      *uint64_t v41 = *v42;
      v41[1] = v43;
      uint64_t v44 = v16[10];
      uint64_t v45 = (_OWORD *)((char *)a1 + v44);
      uint64_t v46 = (_OWORD *)((char *)a2 + v44);
      long long v47 = v46[1];
      *uint64_t v45 = *v46;
      v45[1] = v47;
      *(_OWORD *)((char *)v45 + 25) = *(_OWORD *)((char *)v46 + 25);
      goto LABEL_49;
    default:
      uint64_t v4 = type metadata accessor for PuzzleStatisticValue(0);
      int v5 = swift_getEnumCaseMultiPayload();
      if (v5 == 5)
      {
        uint64_t v6 = type metadata accessor for PuzzleStreak();
        uint64_t v7 = *(void *)(v6 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
        {
LABEL_21:
          sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(a1, a2, *(void *)(*(void *)(v48 - 8) + 64));
          goto LABEL_48;
        }
      }
      else
      {
        if (v5 != 4)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
          goto LABEL_49;
        }
        uint64_t v6 = type metadata accessor for PuzzleStreak();
        uint64_t v7 = *(void *)(v6 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6)) {
          goto LABEL_21;
        }
      }
      uint64_t v50 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 32))(a1, a2, v50);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_48:
      swift_storeEnumTagMultiPayload();
LABEL_49:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

void *assignWithTake for PuzzleStatisticCategory(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C0ED71A4((uint64_t)a1, type metadata accessor for PuzzleStatisticCategory);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v11 = type metadata accessor for PuzzleStatisticValue(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 5)
        {
          uint64_t v13 = type metadata accessor for PuzzleStreak();
          uint64_t v14 = *(void *)(v13 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
          {
LABEL_25:
            sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64));
            goto LABEL_31;
          }
        }
        else
        {
          if (EnumCaseMultiPayload != 4)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
            goto LABEL_32;
          }
          uint64_t v13 = type metadata accessor for PuzzleStreak();
          uint64_t v14 = *(void *)(v13 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13)) {
            goto LABEL_25;
          }
        }
        uint64_t v51 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 32))(a1, a2, v51);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
LABEL_31:
        swift_storeEnumTagMultiPayload();
LABEL_32:
        uint64_t v52 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v53 = *(int *)(v52 + 20);
        long long v54 = (char *)a1 + v53;
        uint64_t v55 = (char *)a2 + v53;
        int v56 = swift_getEnumCaseMultiPayload();
        if (v56 == 5)
        {
          uint64_t v57 = type metadata accessor for PuzzleStreak();
          uint64_t v58 = *(void *)(v57 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v55, 1, v57))
          {
LABEL_37:
            sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v54, v55, *(void *)(*(void *)(v59 - 8) + 64));
            goto LABEL_40;
          }
        }
        else
        {
          if (v56 != 4)
          {
            memcpy(v54, v55, *(void *)(*(void *)(v11 - 8) + 64));
            goto LABEL_41;
          }
          uint64_t v57 = type metadata accessor for PuzzleStreak();
          uint64_t v58 = *(void *)(v57 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v55, 1, v57)) {
            goto LABEL_37;
          }
        }
        uint64_t v60 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v54, v55, v60);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v54, 0, 1, v57);
LABEL_40:
        swift_storeEnumTagMultiPayload();
LABEL_41:
        uint64_t v61 = *(int *)(v52 + 24);
        uint64_t v62 = (char *)a1 + v61;
        uint64_t v63 = (char *)a2 + v61;
        int v64 = swift_getEnumCaseMultiPayload();
        if (v64 == 5)
        {
          uint64_t v65 = type metadata accessor for PuzzleStreak();
          uint64_t v66 = *(void *)(v65 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v63, 1, v65))
          {
LABEL_46:
            sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v62, v63, *(void *)(*(void *)(v67 - 8) + 64));
            goto LABEL_49;
          }
        }
        else
        {
          if (v64 != 4)
          {
            memcpy(v62, v63, *(void *)(*(void *)(v11 - 8) + 64));
            goto LABEL_50;
          }
          uint64_t v65 = type metadata accessor for PuzzleStreak();
          uint64_t v66 = *(void *)(v65 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v63, 1, v65)) {
            goto LABEL_46;
          }
        }
        uint64_t v68 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v62, v63, v68);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v62, 0, 1, v65);
        goto LABEL_49;
      case 2u:
        int v8 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v9 = *((void *)v8 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
        {
          sub_1C00671B8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        }
        else
        {
          uint64_t v24 = sub_1C151631C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
          uint64_t v25 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          *(_OWORD *)((char *)a1 + v25[5]) = *(_OWORD *)((char *)a2 + v25[5]);
          uint64_t v26 = v25[6];
          uint64_t v27 = (_OWORD *)((char *)a1 + v26);
          uint64_t v28 = (_OWORD *)((char *)a2 + v26);
          long long v29 = v28[1];
          *uint64_t v27 = *v28;
          v27[1] = v29;
          *(void *)((char *)a1 + v25[7]) = *(void *)((char *)a2 + v25[7]);
          *(void *)((char *)a1 + v25[8]) = *(void *)((char *)a2 + v25[8]);
          *(void *)((char *)a1 + v8[5]) = *(void *)((char *)a2 + v8[5]);
          *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
          *(_OWORD *)((char *)a1 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
          (*(void (**)(void *, void, uint64_t, int *))(v9 + 56))(a1, 0, 1, v8);
        }
        goto LABEL_50;
      case 3u:
        uint64_t v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        unint64_t v16 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v17 = v16[6];
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = type metadata accessor for PuzzleStreak();
        uint64_t v21 = *(void *)(v20 - 8);
        uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
        if (v22(v19, 1, v20))
        {
          sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          uint64_t v30 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v18, v19, v30);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        uint64_t v31 = v16[7];
        uint64_t v32 = (char *)a1 + v31;
        unint64_t v33 = (char *)a2 + v31;
        if (v22((char *)a2 + v31, 1, v20))
        {
          sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          uint64_t v35 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v33, v35);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v32, 0, 1, v20);
        }
        uint64_t v36 = v16[8];
        uint64_t v37 = (_OWORD *)((char *)a1 + v36);
        uint64_t v38 = (_OWORD *)((char *)a2 + v36);
        long long v39 = v38[1];
        *uint64_t v37 = *v38;
        v37[1] = v39;
        *(_OWORD *)((char *)v37 + 25) = *(_OWORD *)((char *)v38 + 25);
        uint64_t v40 = v16[9];
        uint64_t v41 = (_OWORD *)((char *)a1 + v40);
        uint64_t v42 = (_OWORD *)((char *)a2 + v40);
        *(_OWORD *)((char *)v41 + 25) = *(_OWORD *)((char *)v42 + 25);
        long long v43 = v42[1];
        *uint64_t v41 = *v42;
        v41[1] = v43;
        uint64_t v44 = v16[10];
        uint64_t v45 = (_OWORD *)((char *)a1 + v44);
        uint64_t v46 = (_OWORD *)((char *)a2 + v44);
        long long v47 = v46[1];
        *uint64_t v45 = *v46;
        v45[1] = v47;
        *(_OWORD *)((char *)v45 + 25) = *(_OWORD *)((char *)v46 + 25);
        goto LABEL_50;
      default:
        uint64_t v4 = type metadata accessor for PuzzleStatisticValue(0);
        int v5 = swift_getEnumCaseMultiPayload();
        if (v5 == 5)
        {
          uint64_t v6 = type metadata accessor for PuzzleStreak();
          uint64_t v7 = *(void *)(v6 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
          {
LABEL_22:
            sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(a1, a2, *(void *)(*(void *)(v48 - 8) + 64));
            goto LABEL_49;
          }
        }
        else
        {
          if (v5 != 4)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
            goto LABEL_50;
          }
          uint64_t v6 = type metadata accessor for PuzzleStreak();
          uint64_t v7 = *(void *)(v6 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6)) {
            goto LABEL_22;
          }
        }
        uint64_t v50 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 32))(a1, a2, v50);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_49:
        swift_storeEnumTagMultiPayload();
LABEL_50:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleStatisticValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5)
    {
      uint64_t v8 = type metadata accessor for PuzzleStreak();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
LABEL_8:
        sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_11:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_10:
      uint64_t v12 = sub_1C151555C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      goto LABEL_11;
    }
    if (EnumCaseMultiPayload == 4)
    {
      uint64_t v8 = type metadata accessor for PuzzleStreak();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8)) {
        goto LABEL_8;
      }
      goto LABEL_10;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t destroy for PuzzleStatisticValue(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 5 || result == 4)
  {
    uint64_t v3 = type metadata accessor for PuzzleStreak();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a1, 1, v3);
    if (!result)
    {
      uint64_t v4 = sub_1C151555C();
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      return v5(a1, v4);
    }
  }
  return result;
}

void *initializeWithCopy for PuzzleStatisticValue(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    uint64_t v7 = type metadata accessor for PuzzleStreak();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
LABEL_6:
      sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_8:
    uint64_t v10 = sub_1C151555C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 4)
  {
    uint64_t v7 = type metadata accessor for PuzzleStreak();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7)) {
      goto LABEL_6;
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for PuzzleStatisticValue(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0ED71A4((uint64_t)a1, type metadata accessor for PuzzleStatisticValue);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5)
    {
      uint64_t v7 = type metadata accessor for PuzzleStreak();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
LABEL_7:
        sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_10:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_9:
      uint64_t v10 = sub_1C151555C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      goto LABEL_10;
    }
    if (EnumCaseMultiPayload == 4)
    {
      uint64_t v7 = type metadata accessor for PuzzleStreak();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7)) {
        goto LABEL_7;
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *initializeWithTake for PuzzleStatisticValue(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    uint64_t v7 = type metadata accessor for PuzzleStreak();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
LABEL_6:
      sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_8:
    uint64_t v10 = sub_1C151555C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 4)
  {
    uint64_t v7 = type metadata accessor for PuzzleStreak();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7)) {
      goto LABEL_6;
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithTake for PuzzleStatisticValue(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0ED71A4((uint64_t)a1, type metadata accessor for PuzzleStatisticValue);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5)
    {
      uint64_t v7 = type metadata accessor for PuzzleStreak();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
LABEL_7:
        sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_10:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_9:
      uint64_t v10 = sub_1C151555C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      goto LABEL_10;
    }
    if (EnumCaseMultiPayload == 4)
    {
      uint64_t v7 = type metadata accessor for PuzzleStreak();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7)) {
        goto LABEL_7;
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleStatisticDifficultyLevelValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v7 = type metadata accessor for PuzzleStatisticValue(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 5)
  {
    if (EnumCaseMultiPayload != 4)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      goto LABEL_12;
    }
    uint64_t v9 = type metadata accessor for PuzzleStreak();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9)) {
      goto LABEL_8;
    }
LABEL_10:
    uint64_t v13 = sub_1C151555C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    goto LABEL_11;
  }
  uint64_t v9 = type metadata accessor for PuzzleStreak();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9)) {
    goto LABEL_10;
  }
LABEL_8:
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_11:
  swift_storeEnumTagMultiPayload();
LABEL_12:
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  unint64_t v16 = (char *)a2 + v14;
  int v17 = swift_getEnumCaseMultiPayload();
  if (v17 == 5)
  {
    uint64_t v18 = type metadata accessor for PuzzleStreak();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
    {
LABEL_17:
      sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
      memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_20:
      swift_storeEnumTagMultiPayload();
      goto LABEL_21;
    }
LABEL_19:
    uint64_t v21 = sub_1C151555C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v15, v16, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
    goto LABEL_20;
  }
  if (v17 == 4)
  {
    uint64_t v18 = type metadata accessor for PuzzleStreak();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18)) {
      goto LABEL_17;
    }
    goto LABEL_19;
  }
  memcpy(v15, v16, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_21:
  uint64_t v22 = *(int *)(a3 + 24);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  int v25 = swift_getEnumCaseMultiPayload();
  if (v25 == 5)
  {
    uint64_t v26 = type metadata accessor for PuzzleStreak();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v26))
    {
LABEL_26:
      sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
      memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
LABEL_29:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_28:
    uint64_t v29 = sub_1C151555C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v23, v24, v29);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v26);
    goto LABEL_29;
  }
  if (v25 == 4)
  {
    uint64_t v26 = type metadata accessor for PuzzleStreak();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v26)) {
      goto LABEL_26;
    }
    goto LABEL_28;
  }
  memcpy(v23, v24, *(void *)(*(void *)(v7 - 8) + 64));
  return a1;
}

uint64_t destroy for PuzzleStatisticDifficultyLevelValue(uint64_t a1, uint64_t a2)
{
  type metadata accessor for PuzzleStatisticValue(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
  {
    uint64_t v5 = type metadata accessor for PuzzleStreak();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(a1, 1, v5))
    {
      uint64_t v6 = sub_1C151555C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    }
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  int v8 = swift_getEnumCaseMultiPayload();
  if (v8 == 5 || v8 == 4)
  {
    uint64_t v9 = type metadata accessor for PuzzleStreak();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9))
    {
      uint64_t v10 = sub_1C151555C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v7, v10);
    }
  }
  uint64_t v11 = a1 + *(int *)(a2 + 24);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 5 || result == 4)
  {
    uint64_t v13 = type metadata accessor for PuzzleStreak();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v11, 1, v13);
    if (!result)
    {
      uint64_t v14 = sub_1C151555C();
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
      return v15(v11, v14);
    }
  }
  return result;
}

char *initializeWithCopy for PuzzleStatisticDifficultyLevelValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PuzzleStatisticValue(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 5)
  {
    if (EnumCaseMultiPayload != 4)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_10;
    }
    uint64_t v8 = type metadata accessor for PuzzleStreak();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8)) {
      goto LABEL_6;
    }
LABEL_8:
    uint64_t v11 = sub_1C151555C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    goto LABEL_9;
  }
  uint64_t v8 = type metadata accessor for PuzzleStreak();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8)) {
    goto LABEL_8;
  }
LABEL_6:
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_9:
  swift_storeEnumTagMultiPayload();
LABEL_10:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = swift_getEnumCaseMultiPayload();
  if (v15 != 5)
  {
    if (v15 != 4)
    {
      memcpy(v13, v14, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_19;
    }
    uint64_t v16 = type metadata accessor for PuzzleStreak();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      goto LABEL_15;
    }
LABEL_17:
    uint64_t v19 = sub_1C151555C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v13, v14, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    goto LABEL_18;
  }
  uint64_t v16 = type metadata accessor for PuzzleStreak();
  uint64_t v17 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
    goto LABEL_17;
  }
LABEL_15:
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
LABEL_18:
  swift_storeEnumTagMultiPayload();
LABEL_19:
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  int v23 = swift_getEnumCaseMultiPayload();
  if (v23 == 5)
  {
    uint64_t v24 = type metadata accessor for PuzzleStreak();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24))
    {
LABEL_24:
      sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
      memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
LABEL_27:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_26:
    uint64_t v27 = sub_1C151555C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v21, v22, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
    goto LABEL_27;
  }
  if (v23 == 4)
  {
    uint64_t v24 = type metadata accessor for PuzzleStreak();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24)) {
      goto LABEL_24;
    }
    goto LABEL_26;
  }
  memcpy(v21, v22, *(void *)(*(void *)(v6 - 8) + 64));
  return a1;
}

char *assignWithCopy for PuzzleStatisticDifficultyLevelValue(char *a1, char *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_1C0ED71A4((uint64_t)a1, type metadata accessor for PuzzleStatisticValue);
  uint64_t v6 = type metadata accessor for PuzzleStatisticValue(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 5)
  {
    if (EnumCaseMultiPayload != 4)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_11;
    }
    uint64_t v8 = type metadata accessor for PuzzleStreak();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8)) {
      goto LABEL_7;
    }
LABEL_9:
    uint64_t v11 = sub_1C151555C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    goto LABEL_10;
  }
  uint64_t v8 = type metadata accessor for PuzzleStreak();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8)) {
    goto LABEL_9;
  }
LABEL_7:
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_10:
  swift_storeEnumTagMultiPayload();
LABEL_11:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  sub_1C0ED71A4((uint64_t)&a1[v12], type metadata accessor for PuzzleStatisticValue);
  int v15 = swift_getEnumCaseMultiPayload();
  if (v15 == 5)
  {
    uint64_t v16 = type metadata accessor for PuzzleStreak();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
    {
LABEL_16:
      sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
LABEL_19:
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    }
LABEL_18:
    uint64_t v19 = sub_1C151555C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v13, v14, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    goto LABEL_19;
  }
  if (v15 == 4)
  {
    uint64_t v16 = type metadata accessor for PuzzleStreak();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  memcpy(v13, v14, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_20:
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  sub_1C0ED71A4((uint64_t)&a1[v20], type metadata accessor for PuzzleStatisticValue);
  int v23 = swift_getEnumCaseMultiPayload();
  if (v23 == 5)
  {
    uint64_t v24 = type metadata accessor for PuzzleStreak();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24))
    {
LABEL_25:
      sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
      memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
LABEL_28:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_27:
    uint64_t v27 = sub_1C151555C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v21, v22, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
    goto LABEL_28;
  }
  if (v23 == 4)
  {
    uint64_t v24 = type metadata accessor for PuzzleStreak();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24)) {
      goto LABEL_25;
    }
    goto LABEL_27;
  }
  memcpy(v21, v22, *(void *)(*(void *)(v6 - 8) + 64));
  return a1;
}

char *initializeWithTake for PuzzleStatisticDifficultyLevelValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PuzzleStatisticValue(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 5)
  {
    if (EnumCaseMultiPayload != 4)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_10;
    }
    uint64_t v8 = type metadata accessor for PuzzleStreak();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8)) {
      goto LABEL_6;
    }
LABEL_8:
    uint64_t v11 = sub_1C151555C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    goto LABEL_9;
  }
  uint64_t v8 = type metadata accessor for PuzzleStreak();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8)) {
    goto LABEL_8;
  }
LABEL_6:
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_9:
  swift_storeEnumTagMultiPayload();
LABEL_10:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = swift_getEnumCaseMultiPayload();
  if (v15 != 5)
  {
    if (v15 != 4)
    {
      memcpy(v13, v14, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_19;
    }
    uint64_t v16 = type metadata accessor for PuzzleStreak();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      goto LABEL_15;
    }
LABEL_17:
    uint64_t v19 = sub_1C151555C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v13, v14, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    goto LABEL_18;
  }
  uint64_t v16 = type metadata accessor for PuzzleStreak();
  uint64_t v17 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
    goto LABEL_17;
  }
LABEL_15:
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
LABEL_18:
  swift_storeEnumTagMultiPayload();
LABEL_19:
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  int v23 = swift_getEnumCaseMultiPayload();
  if (v23 == 5)
  {
    uint64_t v24 = type metadata accessor for PuzzleStreak();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24))
    {
LABEL_24:
      sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
      memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
LABEL_27:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_26:
    uint64_t v27 = sub_1C151555C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v21, v22, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
    goto LABEL_27;
  }
  if (v23 == 4)
  {
    uint64_t v24 = type metadata accessor for PuzzleStreak();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24)) {
      goto LABEL_24;
    }
    goto LABEL_26;
  }
  memcpy(v21, v22, *(void *)(*(void *)(v6 - 8) + 64));
  return a1;
}

char *assignWithTake for PuzzleStatisticDifficultyLevelValue(char *a1, char *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_1C0ED71A4((uint64_t)a1, type metadata accessor for PuzzleStatisticValue);
  uint64_t v6 = type metadata accessor for PuzzleStatisticValue(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 5)
  {
    if (EnumCaseMultiPayload != 4)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_11;
    }
    uint64_t v8 = type metadata accessor for PuzzleStreak();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8)) {
      goto LABEL_7;
    }
LABEL_9:
    uint64_t v11 = sub_1C151555C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    goto LABEL_10;
  }
  uint64_t v8 = type metadata accessor for PuzzleStreak();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8)) {
    goto LABEL_9;
  }
LABEL_7:
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_10:
  swift_storeEnumTagMultiPayload();
LABEL_11:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  sub_1C0ED71A4((uint64_t)&a1[v12], type metadata accessor for PuzzleStatisticValue);
  int v15 = swift_getEnumCaseMultiPayload();
  if (v15 == 5)
  {
    uint64_t v16 = type metadata accessor for PuzzleStreak();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
    {
LABEL_16:
      sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
LABEL_19:
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    }
LABEL_18:
    uint64_t v19 = sub_1C151555C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v13, v14, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    goto LABEL_19;
  }
  if (v15 == 4)
  {
    uint64_t v16 = type metadata accessor for PuzzleStreak();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  memcpy(v13, v14, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_20:
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  sub_1C0ED71A4((uint64_t)&a1[v20], type metadata accessor for PuzzleStatisticValue);
  int v23 = swift_getEnumCaseMultiPayload();
  if (v23 == 5)
  {
    uint64_t v24 = type metadata accessor for PuzzleStreak();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24))
    {
LABEL_25:
      sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
      memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
LABEL_28:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_27:
    uint64_t v27 = sub_1C151555C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v21, v22, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
    goto LABEL_28;
  }
  if (v23 == 4)
  {
    uint64_t v24 = type metadata accessor for PuzzleStreak();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24)) {
      goto LABEL_25;
    }
    goto LABEL_27;
  }
  memcpy(v21, v22, *(void *)(*(void *)(v6 - 8) + 64));
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleStatisticDifficultyLevelValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1183654);
}

uint64_t sub_1C1183654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleStatisticValue(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PuzzleStatisticDifficultyLevelValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C11836D4);
}

uint64_t sub_1C11836D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleStatisticValue(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1C1183744()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C11837D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = v7 + v8;
  unint64_t v11 = ((v7 + v8 + ((v7 + v8) & ~v8)) & ~v8) + v7;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    int v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v15(a1, a2, v5);
    unint64_t v16 = ((unint64_t)a2 + v10) & v9;
    v15((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)v16, v5);
    v15((uint64_t *)((v10 + (((unint64_t)v4 + v10) & v9)) & v9), (uint64_t *)((v10 + v16) & v9), v5);
  }
  return v4;
}

uint64_t sub_1C1183914(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v9(a1, v3);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + v5;
  uint64_t v7 = (v6 + a1) & ~v5;
  v9(v7, v3);
  return ((uint64_t (*)(uint64_t, uint64_t))v9)((v6 + v7) & ~v5, v3);
}

uint64_t sub_1C11839D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v6 + 64) + v8;
  uint64_t v10 = (v9 + a2) & ~v8;
  v7((v9 + a1) & ~v8, v10, v5);
  v7((v9 + ((v9 + a1) & ~v8)) & ~v8, (v9 + v10) & ~v8, v5);
  return a1;
}

uint64_t sub_1C1183A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v6 + 64) + v8;
  uint64_t v10 = (v9 + a2) & ~v8;
  v7((v9 + a1) & ~v8, v10, v5);
  v7((v9 + ((v9 + a1) & ~v8)) & ~v8, (v9 + v10) & ~v8, v5);
  return a1;
}

uint64_t sub_1C1183B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v6 + 64) + v8;
  uint64_t v10 = (v9 + a2) & ~v8;
  v7((v9 + a1) & ~v8, v10, v5);
  v7((v9 + ((v9 + a1) & ~v8)) & ~v8, (v9 + v10) & ~v8, v5);
  return a1;
}

uint64_t sub_1C1183C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v6 + 64) + v8;
  uint64_t v10 = (v9 + a2) & ~v8;
  v7((v9 + a1) & ~v8, v10, v5);
  v7((v9 + ((v9 + a1) & ~v8)) & ~v8, (v9 + v10) & ~v8, v5);
  return a1;
}

uint64_t sub_1C1183CE8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v8 = ((v6
       + *(unsigned __int8 *)(v4 + 80)
       + ((v6 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
     + v6;
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_1C1183E5C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64)
       + *(unsigned __int8 *)(v6 + 80)
       + ((*(void *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C118408CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

void *initializeBufferWithCopyOfBuffer for PuzzleStatisticsGroupedValue(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a3[6];
    BOOL v9 = (void *)(a1 + v8);
    unsigned int v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for PuzzleStreak();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v16 = sub_1C151555C();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v9, v10, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if (v13((char *)a2 + v17, 1, v11))
    {
      sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v21 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v18, v19, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
    }
    uint64_t v22 = a3[8];
    uint64_t v23 = a3[9];
    uint64_t v24 = (_OWORD *)((char *)v4 + v22);
    uint64_t v25 = (_OWORD *)((char *)a2 + v22);
    *(_OWORD *)((char *)v24 + 25) = *(_OWORD *)((char *)v25 + 25);
    long long v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = (_OWORD *)((char *)v4 + v23);
    uint64_t v28 = (_OWORD *)((char *)a2 + v23);
    *(_OWORD *)((char *)v27 + 25) = *(_OWORD *)((char *)v28 + 25);
    long long v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = a3[10];
    uint64_t v31 = (_OWORD *)((char *)v4 + v30);
    uint64_t v32 = (_OWORD *)((char *)a2 + v30);
    long long v33 = v32[1];
    _OWORD *v31 = *v32;
    v31[1] = v33;
    *(_OWORD *)((char *)v31 + 25) = *(_OWORD *)((char *)v32 + 25);
  }
  return v4;
}

uint64_t destroy for PuzzleStatisticsGroupedValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for PuzzleStreak();
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    uint64_t v7 = sub_1C151555C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v8, 1, v5);
  if (!result)
  {
    uint64_t v10 = sub_1C151555C();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v8, v10);
  }
  return result;
}

uint64_t initializeWithCopy for PuzzleStatisticsGroupedValue(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  BOOL v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for PuzzleStreak();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = sub_1C151555C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  if (v12((const void *)(a2 + v15), 1, v10))
  {
    sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = sub_1C151555C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 16))(v16, v17, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = (_OWORD *)(a1 + v20);
  uint64_t v23 = (_OWORD *)(a2 + v20);
  *(_OWORD *)((char *)v22 + 25) = *(_OWORD *)((char *)v23 + 25);
  long long v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = (_OWORD *)(a1 + v21);
  long long v26 = (_OWORD *)(a2 + v21);
  *(_OWORD *)((char *)v25 + 25) = *(_OWORD *)((char *)v26 + 25);
  long long v27 = v26[1];
  _OWORD *v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = a3[10];
  long long v29 = (_OWORD *)(a1 + v28);
  uint64_t v30 = (_OWORD *)(a2 + v28);
  long long v31 = v30[1];
  _OWORD *v29 = *v30;
  v29[1] = v31;
  *(_OWORD *)((char *)v29 + 25) = *(_OWORD *)((char *)v30 + 25);
  return a1;
}

uint64_t assignWithCopy for PuzzleStatisticsGroupedValue(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  BOOL v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for PuzzleStreak();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      uint64_t v15 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v8, v9, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_1C0ED71A4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
LABEL_6:
    sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v43 = sub_1C151555C();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 24))(v8, v9, v43);
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  int v20 = v12((void *)(a1 + v17), 1, v10);
  int v21 = v12(v19, 1, v10);
  if (!v20)
  {
    if (!v21)
    {
      uint64_t v44 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 24))(v18, v19, v44);
      goto LABEL_13;
    }
    sub_1C0ED71A4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
    memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v22 = sub_1C151555C();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v19, v22);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
LABEL_13:
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  long long v26 = (uint64_t *)(a2 + v24);
  uint64_t v27 = *v26;
  *(unsigned char *)(v25 + 8) = *((unsigned char *)v26 + 8);
  *(void *)uint64_t v25 = v27;
  uint64_t v28 = v26[2];
  *(unsigned char *)(v25 + 24) = *((unsigned char *)v26 + 24);
  *(void *)(v25 + 16) = v28;
  uint64_t v29 = v26[4];
  *(unsigned char *)(v25 + 40) = *((unsigned char *)v26 + 40);
  *(void *)(v25 + 32) = v29;
  uint64_t v30 = a3[9];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v33 = *v32;
  *(unsigned char *)(v31 + 8) = *((unsigned char *)v32 + 8);
  *(void *)uint64_t v31 = v33;
  uint64_t v34 = v32[2];
  *(unsigned char *)(v31 + 24) = *((unsigned char *)v32 + 24);
  *(void *)(v31 + 16) = v34;
  uint64_t v35 = v32[4];
  *(unsigned char *)(v31 + 40) = *((unsigned char *)v32 + 40);
  *(void *)(v31 + 32) = v35;
  uint64_t v36 = a3[10];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = (uint64_t *)(a2 + v36);
  uint64_t v39 = *v38;
  *(unsigned char *)(v37 + 8) = *((unsigned char *)v38 + 8);
  *(void *)uint64_t v37 = v39;
  uint64_t v40 = v38[2];
  *(unsigned char *)(v37 + 24) = *((unsigned char *)v38 + 24);
  *(void *)(v37 + 16) = v40;
  uint64_t v41 = v38[4];
  *(unsigned char *)(v37 + 40) = *((unsigned char *)v38 + 40);
  *(void *)(v37 + 32) = v41;
  return a1;
}

uint64_t initializeWithTake for PuzzleStatisticsGroupedValue(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  BOOL v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for PuzzleStreak();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = sub_1C151555C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v8, v9, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  if (v12((const void *)(a2 + v15), 1, v10))
  {
    sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = sub_1C151555C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = (_OWORD *)(a1 + v20);
  uint64_t v23 = (_OWORD *)(a2 + v20);
  *(_OWORD *)((char *)v22 + 25) = *(_OWORD *)((char *)v23 + 25);
  long long v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = (_OWORD *)(a1 + v21);
  long long v26 = (_OWORD *)(a2 + v21);
  *(_OWORD *)((char *)v25 + 25) = *(_OWORD *)((char *)v26 + 25);
  long long v27 = v26[1];
  _OWORD *v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = a3[10];
  uint64_t v29 = (_OWORD *)(a1 + v28);
  uint64_t v30 = (_OWORD *)(a2 + v28);
  long long v31 = v30[1];
  _OWORD *v29 = *v30;
  v29[1] = v31;
  *(_OWORD *)((char *)v29 + 25) = *(_OWORD *)((char *)v30 + 25);
  return a1;
}

uint64_t assignWithTake for PuzzleStatisticsGroupedValue(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  BOOL v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for PuzzleStreak();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      uint64_t v15 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_1C0ED71A4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
LABEL_6:
    sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v35 = sub_1C151555C();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 40))(v8, v9, v35);
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  int v20 = v12((void *)(a1 + v17), 1, v10);
  int v21 = v12(v19, 1, v10);
  if (!v20)
  {
    if (!v21)
    {
      uint64_t v36 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 40))(v18, v19, v36);
      goto LABEL_13;
    }
    sub_1C0ED71A4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
    memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v22 = sub_1C151555C();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 32))(v18, v19, v22);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
LABEL_13:
  uint64_t v24 = a3[8];
  uint64_t v25 = a3[9];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  *(void *)(v26 + 16) = *(void *)(v27 + 16);
  *(unsigned char *)(v26 + 24) = *(unsigned char *)(v27 + 24);
  *(void *)(v26 + 32) = *(void *)(v27 + 32);
  *(unsigned char *)(v26 + 40) = *(unsigned char *)(v27 + 40);
  uint64_t v28 = a1 + v25;
  uint64_t v29 = a2 + v25;
  *(void *)uint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  *(unsigned char *)(v28 + 24) = *(unsigned char *)(v29 + 24);
  *(void *)(v28 + 16) = *(void *)(v29 + 16);
  uint64_t v30 = *(void *)(v29 + 32);
  *(unsigned char *)(v28 + 40) = *(unsigned char *)(v29 + 40);
  *(void *)(v28 + 32) = v30;
  uint64_t v31 = a3[10];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
  *(void *)uint64_t v32 = *(void *)v33;
  *(unsigned char *)(v32 + 24) = *(unsigned char *)(v33 + 24);
  *(void *)(v32 + 16) = *(void *)(v33 + 16);
  *(unsigned char *)(v32 + 40) = *(unsigned char *)(v33 + 40);
  *(void *)(v32 + 32) = *(void *)(v33 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleStatisticsGroupedValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1185288);
}

uint64_t sub_1C1185288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  uint64_t v8 = v6;
  uint64_t v9 = a1 + *(int *)(a3 + 24);
  return v7(v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PuzzleStatisticsGroupedValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C118534C);
}

uint64_t sub_1C118534C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C00671B8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  uint64_t v9 = v7;
  uint64_t v10 = a1 + *(int *)(a4 + 24);
  return v8(v10, a2, a2, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleStatisticsGameCenterLeaderboardResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C151631C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
    uint64_t v9 = v8[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = v8[6];
    int v14 = (char *)a1 + v13;
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *(void *)int v14 = *v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = v15 + 2;
    unint64_t v18 = v15[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18 >> 60 == 15)
    {
      *((_OWORD *)v14 + 1) = *(_OWORD *)v17;
    }
    else
    {
      uint64_t v20 = *v17;
      sub_1BFE95820(*v17, v18);
      *((void *)v14 + 2) = v20;
      *((void *)v14 + 3) = v18;
    }
    *(uint64_t *)((char *)a1 + v8[7]) = *(uint64_t *)((char *)a2 + v8[7]);
    *(uint64_t *)((char *)a1 + v8[8]) = *(uint64_t *)((char *)a2 + v8[8]);
    uint64_t v21 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v21) = *(uint64_t *)((char *)a2 + v21);
    uint64_t v22 = a3[7];
    uint64_t v23 = (uint64_t *)((char *)a1 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PuzzleStatisticsGameCenterLeaderboardResult(uint64_t a1)
{
  uint64_t v2 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = type metadata accessor for PuzzleLeaderboardEntry();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(v3 + 24);
  swift_bridgeObjectRelease();
  unint64_t v5 = *(void *)(v4 + 24);
  if (v5 >> 60 != 15) {
    sub_1BFE95664(*(void *)(v4 + 16), v5);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PuzzleStatisticsGameCenterLeaderboardResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  int v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *(void *)uint64_t v13 = *v14;
  *(void *)(v13 + 8) = v15;
  uint64_t v16 = v14 + 2;
  unint64_t v17 = v14[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17 >> 60 == 15)
  {
    *(_OWORD *)(v13 + 16) = *(_OWORD *)v16;
  }
  else
  {
    uint64_t v18 = *v16;
    sub_1BFE95820(*v16, v17);
    *(void *)(v13 + 16) = v18;
    *(void *)(v13 + 24) = v17;
  }
  *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  uint64_t v19 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PuzzleStatisticsGameCenterLeaderboardResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = a2 + v11;
  *uint64_t v12 = *(void *)(a2 + v11);
  v12[1] = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v14 = (uint64_t *)(v13 + 16);
  unint64_t v15 = *(void *)(v13 + 24);
  if (v12[3] >> 60 != 15)
  {
    if (v15 >> 60 != 15)
    {
      uint64_t v17 = *v14;
      sub_1BFE95820(*v14, *(void *)(v13 + 24));
      uint64_t v18 = v12[2];
      unint64_t v19 = v12[3];
      void v12[2] = v17;
      void v12[3] = v15;
      sub_1BFE95664(v18, v19);
      goto LABEL_8;
    }
    sub_1C01D91B8((uint64_t)(v12 + 2));
    goto LABEL_6;
  }
  if (v15 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)v12 + 1) = *(_OWORD *)v14;
    goto LABEL_8;
  }
  uint64_t v16 = *v14;
  sub_1BFE95820(*v14, *(void *)(v13 + 24));
  void v12[2] = v16;
  void v12[3] = v15;
LABEL_8:
  *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PuzzleStatisticsGameCenterLeaderboardResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  uint64_t v8 = v7[6];
  uint64_t v9 = (_OWORD *)(a1 + v8);
  uint64_t v10 = (_OWORD *)(a2 + v8);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  uint64_t v12 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for PuzzleStatisticsGameCenterLeaderboardResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[6];
  int v14 = (void *)(a1 + v13);
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a2 + v13 + 8);
  void *v14 = *(void *)(a2 + v13);
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)(v15 + 16);
  unint64_t v18 = v14[3];
  if (v18 >> 60 != 15)
  {
    unint64_t v19 = *(void *)(v15 + 24);
    if (v19 >> 60 != 15)
    {
      uint64_t v20 = v14[2];
      v14[2] = *v17;
      v14[3] = v19;
      sub_1BFE95664(v20, v18);
      goto LABEL_6;
    }
    sub_1C01D91B8((uint64_t)(v14 + 2));
  }
  *((_OWORD *)v14 + 1) = *(_OWORD *)v17;
LABEL_6:
  *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleStatisticsGameCenterLeaderboardResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1185BC0);
}

uint64_t sub_1C1185BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleStatisticsGameCenterLeaderboardResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1185C94);
}

uint64_t sub_1C1185C94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleDifficultyLevel()
{
  return &type metadata for PuzzleDifficultyLevel;
}

ValueMetadata *type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult.CodingKeys()
{
  return &type metadata for PuzzleStatisticsGameCenterLeaderboardResult.CodingKeys;
}

ValueMetadata *type metadata accessor for PuzzleStatisticsGroupedValue.CodingKeys()
{
  return &type metadata for PuzzleStatisticsGroupedValue.CodingKeys;
}

unsigned char *_s8NewsFeed21PuzzleDifficultyLevelOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1185E58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleStatisticDifficultyLevelValue.CodingKeys()
{
  return &type metadata for PuzzleStatisticDifficultyLevelValue.CodingKeys;
}

unsigned char *_s8NewsFeed28PuzzleStatisticsGroupedValueV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1185F5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleStatisticValue.CodingKeys()
{
  return &type metadata for PuzzleStatisticValue.CodingKeys;
}

ValueMetadata *type metadata accessor for PuzzleStatisticValue.SolveRateCodingKeys()
{
  return &type metadata for PuzzleStatisticValue.SolveRateCodingKeys;
}

ValueMetadata *type metadata accessor for PuzzleStatisticValue.TotalSolvedCodingKeys()
{
  return &type metadata for PuzzleStatisticValue.TotalSolvedCodingKeys;
}

ValueMetadata *type metadata accessor for PuzzleStatisticValue.FastestTimeCodingKeys()
{
  return &type metadata for PuzzleStatisticValue.FastestTimeCodingKeys;
}

ValueMetadata *type metadata accessor for PuzzleStatisticValue.AverageTimeCodingKeys()
{
  return &type metadata for PuzzleStatisticValue.AverageTimeCodingKeys;
}

ValueMetadata *type metadata accessor for PuzzleStatisticValue.LongestStreakCodingKeys()
{
  return &type metadata for PuzzleStatisticValue.LongestStreakCodingKeys;
}

ValueMetadata *type metadata accessor for PuzzleStatisticValue.CurrentStreakCodingKeys()
{
  return &type metadata for PuzzleStatisticValue.CurrentStreakCodingKeys;
}

ValueMetadata *type metadata accessor for PuzzleStatisticValue.HighestScoreCodingKeys()
{
  return &type metadata for PuzzleStatisticValue.HighestScoreCodingKeys;
}

unsigned char *_s8NewsFeed43PuzzleStatisticsGameCenterLeaderboardResultV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C11860D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleStatisticCategory.CodingKeys()
{
  return &type metadata for PuzzleStatisticCategory.CodingKeys;
}

ValueMetadata *type metadata accessor for PuzzleStatisticCategory.SingleCodingKeys()
{
  return &type metadata for PuzzleStatisticCategory.SingleCodingKeys;
}

ValueMetadata *type metadata accessor for PuzzleStatisticCategory.DifficultyLevelCodingKeys()
{
  return &type metadata for PuzzleStatisticCategory.DifficultyLevelCodingKeys;
}

ValueMetadata *type metadata accessor for PuzzleStatisticCategory.GameCenterLeaderboardCodingKeys()
{
  return &type metadata for PuzzleStatisticCategory.GameCenterLeaderboardCodingKeys;
}

unsigned char *_s8NewsFeed20PuzzleStatisticValueO19SolveRateCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C11861D8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleStatisticCategory.GroupedStatsCodingKeys()
{
  return &type metadata for PuzzleStatisticCategory.GroupedStatsCodingKeys;
}

unint64_t sub_1C1186214()
{
  unint64_t result = qword_1EA1AC470;
  if (!qword_1EA1AC470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC470);
  }
  return result;
}

unint64_t sub_1C118626C()
{
  unint64_t result = qword_1EA1AC478;
  if (!qword_1EA1AC478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC478);
  }
  return result;
}

unint64_t sub_1C11862C4()
{
  unint64_t result = qword_1EA1AC480;
  if (!qword_1EA1AC480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC480);
  }
  return result;
}

unint64_t sub_1C118631C()
{
  unint64_t result = qword_1EA1AC488;
  if (!qword_1EA1AC488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC488);
  }
  return result;
}

unint64_t sub_1C1186374()
{
  unint64_t result = qword_1EA1AC490;
  if (!qword_1EA1AC490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC490);
  }
  return result;
}

unint64_t sub_1C11863CC()
{
  unint64_t result = qword_1EA1AC498;
  if (!qword_1EA1AC498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC498);
  }
  return result;
}

unint64_t sub_1C1186424()
{
  unint64_t result = qword_1EA1AC4A0;
  if (!qword_1EA1AC4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC4A0);
  }
  return result;
}

unint64_t sub_1C118647C()
{
  unint64_t result = qword_1EA1AC4A8;
  if (!qword_1EA1AC4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC4A8);
  }
  return result;
}

unint64_t sub_1C11864D4()
{
  unint64_t result = qword_1EA1AC4B0;
  if (!qword_1EA1AC4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC4B0);
  }
  return result;
}

unint64_t sub_1C118652C()
{
  unint64_t result = qword_1EA1AC4B8;
  if (!qword_1EA1AC4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC4B8);
  }
  return result;
}

unint64_t sub_1C1186584()
{
  unint64_t result = qword_1EA1AC4C0;
  if (!qword_1EA1AC4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC4C0);
  }
  return result;
}

unint64_t sub_1C11865DC()
{
  unint64_t result = qword_1EA1AC4C8;
  if (!qword_1EA1AC4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC4C8);
  }
  return result;
}

unint64_t sub_1C1186634()
{
  unint64_t result = qword_1EA1AC4D0;
  if (!qword_1EA1AC4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC4D0);
  }
  return result;
}

unint64_t sub_1C118668C()
{
  unint64_t result = qword_1EA1AC4D8;
  if (!qword_1EA1AC4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC4D8);
  }
  return result;
}

uint64_t sub_1C11866E0()
{
  return swift_getWitnessTable();
}

unint64_t sub_1C1186700()
{
  unint64_t result = qword_1EA1AC4E0;
  if (!qword_1EA1AC4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC4E0);
  }
  return result;
}

unint64_t sub_1C1186758()
{
  unint64_t result = qword_1EA1AC4E8;
  if (!qword_1EA1AC4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC4E8);
  }
  return result;
}

unint64_t sub_1C11867B0()
{
  unint64_t result = qword_1EA1AC4F0;
  if (!qword_1EA1AC4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC4F0);
  }
  return result;
}

unint64_t sub_1C1186808()
{
  unint64_t result = qword_1EA1AC4F8;
  if (!qword_1EA1AC4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC4F8);
  }
  return result;
}

unint64_t sub_1C1186860()
{
  unint64_t result = qword_1EA1AC500;
  if (!qword_1EA1AC500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC500);
  }
  return result;
}

unint64_t sub_1C11868B8()
{
  unint64_t result = qword_1EA1AC508;
  if (!qword_1EA1AC508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC508);
  }
  return result;
}

uint64_t sub_1C118690C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C1186928()
{
  return swift_getWitnessTable();
}

unint64_t sub_1C1186948()
{
  unint64_t result = qword_1EA1AC510;
  if (!qword_1EA1AC510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC510);
  }
  return result;
}

unint64_t sub_1C11869A0()
{
  unint64_t result = qword_1EA1AC518;
  if (!qword_1EA1AC518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC518);
  }
  return result;
}

unint64_t sub_1C11869F8()
{
  unint64_t result = qword_1EA1AC520;
  if (!qword_1EA1AC520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC520);
  }
  return result;
}

unint64_t sub_1C1186A50()
{
  unint64_t result = qword_1EA1AC528;
  if (!qword_1EA1AC528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC528);
  }
  return result;
}

unint64_t sub_1C1186AA8()
{
  unint64_t result = qword_1EA1AC530;
  if (!qword_1EA1AC530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC530);
  }
  return result;
}

unint64_t sub_1C1186B00()
{
  unint64_t result = qword_1EA1AC538;
  if (!qword_1EA1AC538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC538);
  }
  return result;
}

unint64_t sub_1C1186B58()
{
  unint64_t result = qword_1EA1AC540;
  if (!qword_1EA1AC540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC540);
  }
  return result;
}

unint64_t sub_1C1186BB0()
{
  unint64_t result = qword_1EA1AC548;
  if (!qword_1EA1AC548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC548);
  }
  return result;
}

unint64_t sub_1C1186C08()
{
  unint64_t result = qword_1EA1AC550;
  if (!qword_1EA1AC550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC550);
  }
  return result;
}

unint64_t sub_1C1186C60()
{
  unint64_t result = qword_1EA1AC558;
  if (!qword_1EA1AC558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC558);
  }
  return result;
}

unint64_t sub_1C1186CB8()
{
  unint64_t result = qword_1EA1AC560;
  if (!qword_1EA1AC560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC560);
  }
  return result;
}

unint64_t sub_1C1186D10()
{
  unint64_t result = qword_1EA1AC568;
  if (!qword_1EA1AC568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC568);
  }
  return result;
}

unint64_t sub_1C1186D68()
{
  unint64_t result = qword_1EA1AC570;
  if (!qword_1EA1AC570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC570);
  }
  return result;
}

unint64_t sub_1C1186DC0()
{
  unint64_t result = qword_1EA1AC578;
  if (!qword_1EA1AC578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC578);
  }
  return result;
}

unint64_t sub_1C1186E18()
{
  unint64_t result = qword_1EA1AC580;
  if (!qword_1EA1AC580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC580);
  }
  return result;
}

unint64_t sub_1C1186E70()
{
  unint64_t result = qword_1EA1AC588;
  if (!qword_1EA1AC588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC588);
  }
  return result;
}

unint64_t sub_1C1186EC8()
{
  unint64_t result = qword_1EA1AC590;
  if (!qword_1EA1AC590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC590);
  }
  return result;
}

unint64_t sub_1C1186F20()
{
  unint64_t result = qword_1EA1AC598;
  if (!qword_1EA1AC598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC598);
  }
  return result;
}

unint64_t sub_1C1186F78()
{
  unint64_t result = qword_1EA1AC5A0;
  if (!qword_1EA1AC5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC5A0);
  }
  return result;
}

unint64_t sub_1C1186FD0()
{
  unint64_t result = qword_1EA1AC5A8;
  if (!qword_1EA1AC5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC5A8);
  }
  return result;
}

unint64_t sub_1C1187028()
{
  unint64_t result = qword_1EA1AC5B0;
  if (!qword_1EA1AC5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC5B0);
  }
  return result;
}

unint64_t sub_1C1187080()
{
  unint64_t result = qword_1EA1AC5B8;
  if (!qword_1EA1AC5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC5B8);
  }
  return result;
}

unint64_t sub_1C11870D8()
{
  unint64_t result = qword_1EA1AC5C0;
  if (!qword_1EA1AC5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC5C0);
  }
  return result;
}

unint64_t sub_1C1187130()
{
  unint64_t result = qword_1EA1AC5C8;
  if (!qword_1EA1AC5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC5C8);
  }
  return result;
}

unint64_t sub_1C1187188()
{
  unint64_t result = qword_1EA1AC5D0;
  if (!qword_1EA1AC5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC5D0);
  }
  return result;
}

unint64_t sub_1C11871E0()
{
  unint64_t result = qword_1EA1AC5D8;
  if (!qword_1EA1AC5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC5D8);
  }
  return result;
}

unint64_t sub_1C1187238()
{
  unint64_t result = qword_1EA1AC5E0;
  if (!qword_1EA1AC5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC5E0);
  }
  return result;
}

unint64_t sub_1C1187290()
{
  unint64_t result = qword_1EA1AC5E8;
  if (!qword_1EA1AC5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC5E8);
  }
  return result;
}

uint64_t sub_1C11872E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74615265766C6F73 && a2 == 0xE900000000000065;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F536C61746F74 && a2 == 0xEB00000000646576 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5474736574736166 && a2 == 0xEB00000000656D69 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5465676172657661 && a2 == 0xEB00000000656D69 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x53747365676E6F6CLL && a2 == 0xED00006B61657274 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x53746E6572727563 && a2 == 0xED00006B61657274 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x5374736568676968 && a2 == 0xEC00000065726F63)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1C118766C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C676E6973 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C75636966666964 && a2 == 0xEF6C6576654C7974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C15FCCC0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x53646570756F7267 && a2 == 0xEC00000073746174)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1C1187854(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6F536C61746F74 && a2 == 0xEB00000000646576;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74615265766C6F73 && a2 == 0xE900000000000065 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x53747365676E6F6CLL && a2 == 0xED00006B61657274 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x53746E6572727563 && a2 == 0xED00006B61657274 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5474736574736166 && a2 == 0xEB00000000656D69 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x5465676172657661 && a2 == 0xEB00000000656D69 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x5374736568676968 && a2 == 0xEC00000065726F63)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1C1187BDC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001C1636090 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73656972746E65 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C16360B0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6272656461656CLL && a2 == 0xEF656D614E647261)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void sub_1C1187DB0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C1187E10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1187E78(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C1187F54(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C1187ED4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1BFC78004(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1C1187F54(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C00671B8(255, a3, a4, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v158 = a4;
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v156 = v9;
  uint64_t v157 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v153 = (char *)&v145 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEA164(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v147 = (char *)&v145 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v146 = (char *)&v145 - v15;
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v145 - v17;
  long long v152 = (char *)&v145 - v17;
  long long v19 = a2[7];
  long long v178 = a2[6];
  v179[0] = v19;
  *(_OWORD *)((char *)v179 + 9) = *(long long *)((char *)a2 + 121);
  long long v20 = a2[3];
  long long v174 = a2[2];
  long long v175 = v20;
  long long v21 = a2[5];
  long long v176 = a2[4];
  long long v177 = v21;
  long long v22 = a2[1];
  long long v172 = *a2;
  long long v173 = v22;
  sub_1BFF66964(a3, (uint64_t)v183, (unint64_t *)&qword_1EB882CD0);
  long long v23 = v176;
  *(_OWORD *)(a5 + 88) = v177;
  long long v24 = v179[0];
  *(_OWORD *)(a5 + 104) = v178;
  *(_OWORD *)(a5 + 120) = v24;
  *(_OWORD *)(a5 + 129) = *(_OWORD *)((char *)v179 + 9);
  long long v25 = v172;
  *(_OWORD *)(a5 + 24) = v173;
  long long v26 = v175;
  *(_OWORD *)(a5 + 40) = v174;
  *(_OWORD *)(a5 + 56) = v26;
  *(_OWORD *)(a5 + 72) = v23;
  *(void *)a5 = a1;
  *(_OWORD *)(a5 + 8) = v25;
  sub_1BFF66964((uint64_t)v183, a5 + 152, (unint64_t *)&qword_1EB882CD0);
  uint64_t v27 = v158;
  sub_1BFC66384(v158, a5 + 296);
  sub_1BFC66384(v27, (uint64_t)v180);
  uint64_t v154 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  uint64_t v155 = v10 + 56;
  v154(v18, 1, 1, v9);
  uint64_t v28 = (_OWORD *)swift_allocObject();
  long long v29 = v179[0];
  v28[7] = v178;
  v28[8] = v29;
  *(_OWORD *)((char *)v28 + 137) = *(_OWORD *)((char *)v179 + 9);
  long long v30 = v175;
  v28[3] = v174;
  v28[4] = v30;
  long long v31 = v177;
  v28[5] = v176;
  v28[6] = v31;
  long long v32 = v173;
  v28[1] = v172;
  void v28[2] = v32;
  sub_1BFEEA164(0, (unint64_t *)&qword_1EB873A58, (uint64_t (*)(uint64_t))sub_1C0063F1C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for CachedText);
  uint64_t v34 = v33;
  uint64_t v35 = (void *)swift_allocObject();
  v35[2] = 0xC04E000000000000;
  uint64_t v36 = v182;
  __swift_project_boxed_opaque_existential_1(v180, v181);
  long long v170 = v178;
  v171[0] = v179[0];
  *(_OWORD *)((char *)v171 + 9) = *(_OWORD *)((char *)v179 + 9);
  long long v166 = v174;
  long long v167 = v175;
  long long v168 = v176;
  long long v169 = v177;
  long long v164 = v172;
  long long v165 = v173;
  sub_1C0187FB0((uint64_t)&v172);
  sub_1C0187FB0((uint64_t)&v172);
  uint64_t v145 = a1;
  swift_retain();
  uint64_t v37 = sub_1C0FBAE48();
  uint64_t v38 = (void *)(*(uint64_t (**)(uint64_t))(v36 + 80))(v37);
  swift_bridgeObjectRelease();
  *(void *)((char *)v35 + *(void *)(*v35 + 120)) = v38;
  *(void *)((char *)v35 + *(void *)(*v35 + 136)) = v38;
  id v39 = v38;
  uint64_t v40 = v153;
  sub_1C151630C();
  uint64_t v41 = (char *)v35 + *(void *)(*v35 + 128);
  uint64_t v42 = v156;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v157 + 32);
  v157 += 32;
  long long v151 = v43;
  v43(v41, v40, v156);
  id v150 = self;
  LOBYTE(v40) = objc_msgSend(v150, sel_isMainThread);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v180);
  *((unsigned char *)v35 + qword_1EB8739C0) = (_BYTE)v40;
  uint64_t v44 = (uint64_t)v152;
  sub_1BFCB311C((uint64_t)v152, (uint64_t)v35 + qword_1EB8739C8);
  uint64_t v45 = (void *)swift_allocObject();
  v45[2] = sub_1C118AC68;
  v45[3] = v28;
  v45[4] = v39;
  v35[3] = sub_1C118B280;
  v35[4] = v45;
  *(void *)(a5 + 336) = v35;
  sub_1BFC66384(v158, (uint64_t)v180);
  v154((char *)v44, 1, 1, v42);
  uint64_t v46 = (_OWORD *)swift_allocObject();
  long long v47 = v179[0];
  v46[7] = v178;
  v46[8] = v47;
  *(_OWORD *)((char *)v46 + 137) = *(_OWORD *)((char *)v179 + 9);
  long long v48 = v175;
  v46[3] = v174;
  v46[4] = v48;
  long long v49 = v177;
  v46[5] = v176;
  v46[6] = v49;
  long long v50 = v173;
  v46[1] = v172;
  v46[2] = v50;
  uint64_t v51 = (char *)swift_allocObject();
  *((void *)v51 + 2) = 0xC04E000000000000;
  uint64_t v52 = v182;
  __swift_project_boxed_opaque_existential_1(v180, v181);
  long long v170 = v178;
  v171[0] = v179[0];
  *(_OWORD *)((char *)v171 + 9) = *(_OWORD *)((char *)v179 + 9);
  long long v166 = v174;
  long long v167 = v175;
  long long v168 = v176;
  long long v169 = v177;
  long long v164 = v172;
  long long v165 = v173;
  sub_1C0187FB0((uint64_t)&v172);
  uint64_t v53 = sub_1C0FBAE48();
  long long v54 = (void *)(*(uint64_t (**)(uint64_t))(v52 + 88))(v53);
  swift_bridgeObjectRelease();
  *(void *)&v51[*(void *)(*(void *)v51 + 120)] = v54;
  *(void *)&v51[*(void *)(*(void *)v51 + 136)] = v54;
  id v55 = v54;
  int v56 = v153;
  sub_1C151630C();
  uint64_t v57 = v156;
  v151(&v51[*(void *)(*(void *)v51 + 128)], v56, v156);
  LOBYTE(v56) = objc_msgSend(v150, sel_isMainThread);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v180);
  v51[qword_1EB8739C0] = (char)v56;
  sub_1BFCB311C((uint64_t)v152, (uint64_t)&v51[qword_1EB8739C8]);
  uint64_t v58 = (void *)swift_allocObject();
  v58[2] = sub_1C118B288;
  v58[3] = v46;
  v58[4] = v55;
  *((void *)v51 + 3) = sub_1C118B280;
  *((void *)v51 + 4) = v58;
  uint64_t v149 = (void *)a5;
  *(void *)(a5 + 344) = v51;
  sub_1BFC66384(v158, (uint64_t)v161);
  v154(v146, 1, 1, v57);
  uint64_t v59 = (_OWORD *)swift_allocObject();
  long long v60 = v179[0];
  v59[7] = v178;
  v59[8] = v60;
  *(_OWORD *)((char *)v59 + 137) = *(_OWORD *)((char *)v179 + 9);
  long long v61 = v175;
  v59[3] = v174;
  unsigned char v59[4] = v61;
  long long v62 = v177;
  v59[5] = v176;
  v59[6] = v62;
  long long v63 = v173;
  v59[1] = v172;
  v59[2] = v63;
  uint64_t v148 = v34;
  int v64 = (char *)swift_allocObject();
  *((void *)v64 + 2) = 0xC04E000000000000;
  uint64_t v65 = v162;
  uint64_t v66 = v163;
  __swift_project_boxed_opaque_existential_1(v161, v162);
  sub_1BFF66964((uint64_t)&v176 + 8, (uint64_t)v180, &qword_1EB85CE38);
  sub_1BFF66964((uint64_t)v180, (uint64_t)&v164, &qword_1EB85CE38);
  if (*((void *)&v164 + 1) == 1 || !*((void *)&v165 + 1))
  {
    uint64_t v67 = (void *)v172;
    sub_1C0187FB0((uint64_t)&v172);
    sub_1C0187FB0((uint64_t)&v172);
    id v68 = objc_msgSend(v67, sel_coverDate);
    sub_1C151E62C();
    swift_bridgeObjectRelease();

    sub_1C01880A4((uint64_t)&v172);
  }
  else
  {
    sub_1C0187FB0((uint64_t)&v172);
    swift_bridgeObjectRetain();
  }
  uint64_t v69 = sub_1C151E6DC();
  uint64_t v71 = v70;
  swift_bridgeObjectRelease();
  uint64_t v72 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 96))(v69, v71, v65, v66);
  swift_bridgeObjectRelease();
  *(void *)&v64[*(void *)(*(void *)v64 + 120)] = v72;
  *(void *)&v64[*(void *)(*(void *)v64 + 136)] = v72;
  id v73 = v72;
  uint64_t v74 = v153;
  sub_1C151630C();
  uint64_t v75 = v156;
  v151(&v64[*(void *)(*(void *)v64 + 128)], v74, v156);
  LOBYTE(v74) = objc_msgSend(v150, sel_isMainThread);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v161);
  v64[qword_1EB8739C0] = (char)v74;
  sub_1BFCB311C((uint64_t)v146, (uint64_t)&v64[qword_1EB8739C8]);
  int v76 = (void *)swift_allocObject();
  v76[2] = sub_1C118B298;
  v76[3] = v59;
  v76[4] = v73;
  *((void *)v64 + 3) = sub_1C118B280;
  *((void *)v64 + 4) = v76;
  v149[44] = v64;
  sub_1BFC66384(v158, (uint64_t)v161);
  v154(v147, 1, 1, v75);
  uint64_t v77 = (_OWORD *)swift_allocObject();
  long long v78 = v179[0];
  v77[7] = v178;
  v77[8] = v78;
  *(_OWORD *)((char *)v77 + 137) = *(_OWORD *)((char *)v179 + 9);
  long long v79 = v175;
  v77[3] = v174;
  v77[4] = v79;
  long long v80 = v177;
  v77[5] = v176;
  v77[6] = v80;
  long long v81 = v173;
  v77[1] = v172;
  v77[2] = v81;
  uint64_t v82 = (char *)swift_allocObject();
  *((void *)v82 + 2) = 0xC04E000000000000;
  int v83 = BYTE8(v173);
  uint64_t v85 = v162;
  uint64_t v84 = v163;
  __swift_project_boxed_opaque_existential_1(v161, v162);
  if (!v83)
  {
    sub_1C0187FB0((uint64_t)&v172);
    uint64_t v93 = 0;
    unint64_t v94 = 0xE000000000000000;
LABEL_10:
    uint64_t v92 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v84 + 104))(v93, v94, v85, v84);
    goto LABEL_11;
  }
  if (v83 != 2)
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v96 = self;
    sub_1C0187FB0((uint64_t)&v172);
    id v97 = objc_msgSend(v96, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1C1515B8C();

    uint64_t v93 = sub_1C151E6DC();
    unint64_t v94 = v98;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  type metadata accessor for Localized();
  uint64_t v86 = swift_getObjCClassFromMetadata();
  uint64_t v87 = self;
  sub_1C0187FB0((uint64_t)&v172);
  id v88 = objc_msgSend(v87, sel_bundleForClass_, v86);
  sub_1C1515B8C();

  uint64_t v89 = sub_1C151E6DC();
  uint64_t v91 = v90;
  swift_bridgeObjectRelease();
  uint64_t v92 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 96))(v89, v91, v85, v84);
LABEL_11:
  uint64_t v99 = (void *)v92;
  swift_bridgeObjectRelease();
  *(void *)&v82[*(void *)(*(void *)v82 + 120)] = v99;
  *(void *)&v82[*(void *)(*(void *)v82 + 136)] = v99;
  id v100 = v99;
  uint64_t v101 = v153;
  sub_1C151630C();
  uint64_t v102 = v156;
  v151(&v82[*(void *)(*(void *)v82 + 128)], v101, v156);
  unsigned __int8 v103 = objc_msgSend(v150, sel_isMainThread);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v161);
  v82[qword_1EB8739C0] = v103;
  sub_1BFCB311C((uint64_t)v147, (uint64_t)&v82[qword_1EB8739C8]);
  uint64_t v104 = (void *)swift_allocObject();
  v104[2] = sub_1C118B2A8;
  v104[3] = v77;
  v104[4] = v100;
  *((void *)v82 + 3) = sub_1C118B280;
  *((void *)v82 + 4) = v104;
  v149[45] = v82;
  sub_1BFC66384(v158, (uint64_t)v161);
  v154(v152, 1, 1, v102);
  uint64_t v105 = (char *)swift_allocObject();
  *((void *)v105 + 2) = 0xC04E000000000000;
  uint64_t v107 = v162;
  uint64_t v106 = v163;
  __swift_project_boxed_opaque_existential_1(v161, v162);
  type metadata accessor for Localized();
  uint64_t v108 = swift_getObjCClassFromMetadata();
  uint64_t v147 = (char *)v108;
  unint64_t v146 = (char *)self;
  id v109 = objc_msgSend(v146, sel_bundleForClass_, v108);
  sub_1C1515B8C();

  uint64_t v110 = sub_1C151E6DC();
  uint64_t v112 = v111;
  swift_bridgeObjectRelease();
  uint64_t v113 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 112))(v110, v112, v107, v106);
  swift_bridgeObjectRelease();
  *(void *)&v105[*(void *)(*(void *)v105 + 120)] = v113;
  *(void *)&v105[*(void *)(*(void *)v105 + 136)] = v113;
  id v114 = v113;
  sub_1C151630C();
  uint64_t v115 = v156;
  v151(&v105[*(void *)(*(void *)v105 + 128)], v101, v156);
  id v116 = v150;
  LOBYTE(v110) = objc_msgSend(v150, sel_isMainThread);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v161);
  v105[qword_1EB8739C0] = v110;
  uint64_t v117 = (uint64_t)v152;
  sub_1BFCB311C((uint64_t)v152, (uint64_t)&v105[qword_1EB8739C8]);
  uint64_t v118 = (void *)swift_allocObject();
  v118[2] = sub_1C118AC70;
  v118[3] = 0;
  v118[4] = v114;
  *((void *)v105 + 3) = sub_1C118B280;
  *((void *)v105 + 4) = v118;
  unint64_t v119 = v149;
  v149[46] = v105;
  sub_1BFC66384(v158, (uint64_t)v161);
  v154((char *)v117, 1, 1, v115);
  uint64_t v120 = (char *)swift_allocObject();
  *((void *)v120 + 2) = 0xC04E000000000000;
  uint64_t v121 = v162;
  uint64_t v122 = v163;
  __swift_project_boxed_opaque_existential_1(v161, v162);
  id v123 = objc_msgSend(v146, sel_bundleForClass_, v147);
  sub_1C1515B8C();

  uint64_t v124 = sub_1C151E6DC();
  uint64_t v126 = v125;
  swift_bridgeObjectRelease();
  unint64_t v127 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v122 + 120))(v124, v126, v121, v122);
  swift_bridgeObjectRelease();
  *(void *)&v120[*(void *)(*(void *)v120 + 120)] = v127;
  *(void *)&v120[*(void *)(*(void *)v120 + 136)] = v127;
  id v128 = v127;
  uint64_t v129 = v153;
  sub_1C151630C();
  uint64_t v130 = v156;
  uint64_t v131 = v151;
  v151(&v120[*(void *)(*(void *)v120 + 128)], v129, v156);
  LOBYTE(v124) = objc_msgSend(v116, sel_isMainThread);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v161);
  v120[qword_1EB8739C0] = v124;
  uint64_t v132 = (uint64_t)v152;
  sub_1BFCB311C((uint64_t)v152, (uint64_t)&v120[qword_1EB8739C8]);
  uint64_t v133 = (void *)swift_allocObject();
  v133[2] = sub_1C118AD98;
  v133[3] = 0;
  v133[4] = v128;
  *((void *)v120 + 3) = sub_1C118B280;
  *((void *)v120 + 4) = v133;
  v119[47] = v120;
  uint64_t v134 = v158;
  sub_1BFC66384(v158, (uint64_t)v161);
  uint64_t v135 = v130;
  v154((char *)v132, 1, 1, v130);
  uint64_t v136 = (_OWORD *)swift_allocObject();
  long long v137 = v179[0];
  v136[7] = v178;
  v136[8] = v137;
  *(_OWORD *)((char *)v136 + 137) = *(_OWORD *)((char *)v179 + 9);
  long long v138 = v175;
  v136[3] = v174;
  v136[4] = v138;
  long long v139 = v177;
  double v136[5] = v176;
  v136[6] = v139;
  long long v140 = v173;
  v136[1] = v172;
  v136[2] = v140;
  sub_1C118B2F8(0, &qword_1EB873A50, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for CachedText);
  char v141 = (char *)swift_allocObject();
  *((void *)v141 + 2) = 0xC04E000000000000;
  sub_1C0187FB0((uint64_t)&v172);
  sub_1C118AED0((id *)&v172, (uint64_t *)&v160);
  sub_1C01880A4((uint64_t)&v172);
  long long v142 = v160;
  *(_OWORD *)&v141[*(void *)(*(void *)v141 + 120)] = v160;
  *(_OWORD *)&v141[*(void *)(*(void *)v141 + 136)] = v142;
  swift_bridgeObjectRetain_n();
  sub_1C151630C();
  v131(&v141[*(void *)(*(void *)v141 + 128)], v129, v135);
  LOBYTE(v135) = objc_msgSend(v150, sel_isMainThread);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v161);
  v141[qword_1EB8739C0] = v135;
  sub_1BFCB311C(v132, (uint64_t)&v141[qword_1EB8739C8]);
  long long v159 = v160;
  uint64_t v143 = swift_allocObject();
  *(void *)(v143 + 16) = sub_1C118B2F0;
  *(void *)(v143 + 24) = v136;
  sub_1BFF66964((uint64_t)&v159, v143 + 32, (unint64_t *)&qword_1EB879C00);
  *((void *)v141 + 3) = sub_1C118B3A8;
  *((void *)v141 + 4) = v143;
  swift_release();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(v134);
  v119[48] = v141;
  return result;
}

NewsFeed::CoverIssueViewLayout::Options __swiftcall CoverIssueViewLayout.Options.init(traits:)(NewsFeed::CoverIssueViewLayout::Options traits)
{
  *unint64_t v1 = *(void *)traits.traits.rawValue;
  return traits;
}

uint64_t CoverIssueViewLayout.frame.getter()
{
  return swift_retain();
}

uint64_t CoverIssueViewLayout.titleLabelFrame.getter()
{
  return swift_retain();
}

uint64_t CoverIssueViewLayout.accessoryFrame.getter()
{
  return swift_retain();
}

uint64_t CoverIssueViewLayout.moreActionsButtonFrame.getter()
{
  return swift_retain();
}

uint64_t CoverIssueViewLayout.followButtonFrame.getter()
{
  return swift_retain();
}

uint64_t CoverIssueViewLayout.downloadProgressBarFrame.getter()
{
  return swift_retain();
}

uint64_t CoverIssueViewLayout.cloudIconFrame.getter()
{
  return swift_retain();
}

uint64_t CoverIssueViewLayout.issueCoverViewLayoutAttributes.getter()
{
  return swift_retain();
}

uint64_t CoverIssueViewLayout.secondaryIssueCoverViewLayoutAttributes.getter()
{
  return swift_retain();
}

uint64_t CoverIssueViewLayout.selectionImageViewFrame.getter()
{
  return swift_retain();
}

uint64_t CoverIssueViewLayout.init()@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v11 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v10 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v3 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v4 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v5 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v6 = sub_1C15172BC();
  sub_1C118B42C(0, &qword_1EB85C7C0, (uint64_t (*)(void))sub_1C0165C0C, (uint64_t)&type metadata for IssueCoverViewLayoutAttributes, MEMORY[0x1E4FAB4F0]);
  swift_allocObject();
  uint64_t v7 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v8 = sub_1C15172BC();
  swift_allocObject();
  uint64_t result = sub_1C15172BC();
  *a1 = v11;
  a1[1] = v10;
  a1[2] = v2;
  a1[3] = v3;
  a1[4] = v4;
  a1[5] = v5;
  a1[6] = v6;
  a1[7] = v7;
  a1[8] = v8;
  a1[9] = result;
  return result;
}

double CoverIssueViewLayout.Attributes.frame.getter()
{
  return *(double *)v0;
}

double CoverIssueViewLayout.Attributes.titleLabelFrame.getter()
{
  return *(double *)(v0 + 32);
}

double CoverIssueViewLayout.Attributes.accessoryFrame.getter()
{
  return *(double *)(v0 + 64);
}

double CoverIssueViewLayout.Attributes.moreActionsButtonFrame.getter()
{
  return *(double *)(v0 + 96);
}

double CoverIssueViewLayout.Attributes.followButtonFrame.getter()
{
  return *(double *)(v0 + 128);
}

double CoverIssueViewLayout.Attributes.downloadProgressBarFrame.getter()
{
  return *(double *)(v0 + 160);
}

double CoverIssueViewLayout.Attributes.cloudIconFrame.getter()
{
  return *(double *)(v0 + 192);
}

double CoverIssueViewLayout.Attributes.issueCoverViewLayoutAttributes.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 272);
  double result = *(double *)(v1 + 280);
  long long v4 = *(_OWORD *)(v1 + 240);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 224);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 256);
  *(void *)(a1 + 48) = v2;
  *(double *)(a1 + 56) = result;
  return result;
}

double CoverIssueViewLayout.Attributes.secondaryIssueCoverViewLayoutAttributes.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 336);
  double result = *(double *)(v1 + 344);
  long long v4 = *(_OWORD *)(v1 + 304);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 288);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 320);
  *(void *)(a1 + 48) = v2;
  *(double *)(a1 + 56) = result;
  return result;
}

double CoverIssueViewLayout.Attributes.selectionImageViewFrame.getter()
{
  return *(double *)(v0 + 352);
}

unint64_t sub_1C11896B8(char a1)
{
  unint64_t result = 0x656D617266;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x62614C656C746974;
      break;
    case 2:
      unint64_t result = 0x726F737365636361;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0x6F634964756F6C63;
      break;
    case 7:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 8:
      unint64_t result = 0xD000000000000027;
      break;
    case 9:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C1189824()
{
  return sub_1C11896B8(*v0);
}

uint64_t sub_1C118982C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C118CAC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1189854(uint64_t a1)
{
  unint64_t v2 = sub_1C118B3D8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1189890(uint64_t a1)
{
  unint64_t v2 = sub_1C118B3D8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CoverIssueViewLayout.Attributes.encode(to:)(void *a1)
{
  sub_1C118B42C(0, &qword_1EA1AC608, (uint64_t (*)(void))sub_1C118B3D8, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v24 - v6;
  long long v56 = *v1;
  uint64_t v8 = *((void *)v1 + 2);
  uint64_t v9 = *((void *)v1 + 3);
  uint64_t v54 = *((void *)v1 + 4);
  uint64_t v53 = *((void *)v1 + 5);
  uint64_t v55 = *((void *)v1 + 6);
  uint64_t v52 = *((void *)v1 + 7);
  uint64_t v51 = *((void *)v1 + 8);
  uint64_t v50 = *((void *)v1 + 9);
  uint64_t v48 = *((void *)v1 + 10);
  uint64_t v47 = *((void *)v1 + 11);
  long long v44 = v1[6];
  uint64_t v46 = *((void *)v1 + 14);
  uint64_t v45 = *((void *)v1 + 15);
  long long v41 = v1[8];
  uint64_t v43 = *((void *)v1 + 18);
  uint64_t v42 = *((void *)v1 + 19);
  long long v38 = v1[10];
  uint64_t v40 = *((void *)v1 + 22);
  uint64_t v39 = *((void *)v1 + 23);
  long long v35 = v1[12];
  uint64_t v37 = *((void *)v1 + 26);
  uint64_t v36 = *((void *)v1 + 27);
  long long v29 = v1[14];
  uint64_t v34 = *((void *)v1 + 30);
  uint64_t v33 = *((void *)v1 + 31);
  uint64_t v49 = *((void *)v1 + 34);
  uint64_t v10 = *((void *)v1 + 42);
  uint64_t v11 = a1[3];
  uint64_t v30 = *((void *)v1 + 32);
  uint64_t v31 = *((void *)v1 + 33);
  uint64_t v32 = *((void *)v1 + 35);
  long long v25 = v1[18];
  uint64_t v26 = *((void *)v1 + 38);
  uint64_t v27 = *((void *)v1 + 39);
  uint64_t v12 = *((void *)v1 + 41);
  uint64_t v28 = *((void *)v1 + 40);
  uint64_t v14 = *((void *)v1 + 43);
  uint64_t v13 = *((void *)v1 + 44);
  uint64_t v15 = *((void *)v1 + 45);
  uint64_t v16 = *((void *)v1 + 46);
  uint64_t v17 = *((void *)v1 + 47);
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1C118B3D8();
  sub_1C1520F0C();
  long long v58 = v56;
  uint64_t v59 = v8;
  uint64_t v60 = v9;
  char v65 = 0;
  type metadata accessor for CGRect(0);
  sub_1BFE1331C(&qword_1EA197288);
  uint64_t v18 = v4;
  uint64_t v19 = v57;
  sub_1C152080C();
  if (v19) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v21 = v50;
  uint64_t v22 = v51;
  uint64_t v23 = v49;
  *(void *)&long long v58 = v54;
  *((void *)&v58 + 1) = v53;
  uint64_t v59 = v55;
  uint64_t v60 = v52;
  char v65 = 1;
  sub_1C152080C();
  *(void *)&long long v58 = v22;
  *((void *)&v58 + 1) = v21;
  uint64_t v59 = v48;
  uint64_t v60 = v47;
  char v65 = 2;
  sub_1C152080C();
  long long v58 = v44;
  uint64_t v59 = v46;
  uint64_t v60 = v45;
  char v65 = 3;
  sub_1C152080C();
  long long v58 = v41;
  uint64_t v59 = v43;
  uint64_t v60 = v42;
  char v65 = 4;
  sub_1C152080C();
  long long v58 = v38;
  uint64_t v59 = v40;
  uint64_t v60 = v39;
  char v65 = 5;
  sub_1C152080C();
  long long v58 = v35;
  uint64_t v59 = v37;
  uint64_t v60 = v36;
  char v65 = 6;
  sub_1C152080C();
  long long v58 = v29;
  uint64_t v59 = v34;
  uint64_t v60 = v33;
  uint64_t v61 = v30;
  uint64_t v62 = v31;
  uint64_t v63 = v23;
  uint64_t v64 = v32;
  char v65 = 7;
  sub_1C0165CBC();
  sub_1C152080C();
  long long v58 = v25;
  uint64_t v59 = v26;
  uint64_t v60 = v27;
  uint64_t v61 = v28;
  uint64_t v62 = v12;
  uint64_t v63 = v10;
  uint64_t v64 = v14;
  char v65 = 8;
  sub_1C152080C();
  *(void *)&long long v58 = v13;
  *((void *)&v58 + 1) = v15;
  uint64_t v59 = v16;
  uint64_t v60 = v17;
  char v65 = 9;
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v18);
}

uint64_t CoverIssueViewLayout.Attributes.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C118B42C(0, &qword_1EB85E0D8, (uint64_t (*)(void))sub_1C118B3D8, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v77 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v40 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C118B3D8();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v76 = v6;
    type metadata accessor for CGRect(0);
    char v84 = 0;
    sub_1BFE1331C(&qword_1EB87A290);
    sub_1C15206EC();
    long long v9 = v78;
    long long v10 = v79;
    char v84 = 1;
    sub_1C15206EC();
    long long v11 = v78;
    long long v12 = v79;
    char v84 = 2;
    sub_1C15206EC();
    uint64_t v72 = *((void *)&v12 + 1);
    uint64_t v73 = v12;
    uint64_t v74 = *((void *)&v11 + 1);
    uint64_t v75 = v11;
    long long v13 = v78;
    long long v14 = v79;
    char v84 = 3;
    sub_1C15206EC();
    uint64_t v68 = *((void *)&v14 + 1);
    uint64_t v69 = v14;
    uint64_t v70 = *((void *)&v13 + 1);
    uint64_t v71 = v13;
    long long v15 = v78;
    long long v16 = v79;
    char v84 = 4;
    sub_1C15206EC();
    uint64_t v64 = *((void *)&v16 + 1);
    uint64_t v65 = v16;
    uint64_t v66 = *((void *)&v15 + 1);
    uint64_t v67 = v15;
    long long v17 = v78;
    long long v18 = v79;
    char v84 = 5;
    sub_1C15206EC();
    uint64_t v60 = *((void *)&v18 + 1);
    uint64_t v61 = v18;
    uint64_t v62 = *((void *)&v17 + 1);
    uint64_t v63 = v17;
    long long v19 = v78;
    long long v20 = v79;
    char v84 = 6;
    sub_1C15206EC();
    uint64_t v58 = *((void *)&v78 + 1);
    uint64_t v59 = v78;
    uint64_t v56 = *((void *)&v79 + 1);
    uint64_t v57 = v79;
    char v84 = 7;
    sub_1C0165C64();
    sub_1C15206EC();
    uint64_t v54 = *((void *)&v78 + 1);
    uint64_t v55 = v78;
    uint64_t v52 = *((void *)&v79 + 1);
    uint64_t v53 = v79;
    uint64_t v51 = v80;
    uint64_t v50 = v81;
    uint64_t v48 = v82;
    uint64_t v49 = v83;
    char v84 = 8;
    sub_1C15206EC();
    uint64_t v46 = *((void *)&v78 + 1);
    uint64_t v47 = v78;
    uint64_t v44 = *((void *)&v79 + 1);
    uint64_t v45 = v79;
    uint64_t v43 = v80;
    uint64_t v42 = v81;
    uint64_t v22 = v82;
    uint64_t v41 = v83;
    char v84 = 9;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v8, v77);
    *(_OWORD *)a2 = v9;
    *(_OWORD *)(a2 + 16) = v10;
    uint64_t v23 = v74;
    *(void *)(a2 + 32) = v75;
    *(void *)(a2 + 40) = v23;
    uint64_t v24 = v72;
    *(void *)(a2 + 48) = v73;
    *(void *)(a2 + 56) = v24;
    uint64_t v25 = v70;
    *(void *)(a2 + 64) = v71;
    *(void *)(a2 + 72) = v25;
    uint64_t v26 = v68;
    *(void *)(a2 + 80) = v69;
    *(void *)(a2 + 88) = v26;
    uint64_t v27 = v66;
    *(void *)(a2 + 96) = v67;
    *(void *)(a2 + 104) = v27;
    uint64_t v28 = v64;
    *(void *)(a2 + 112) = v65;
    *(void *)(a2 + 120) = v28;
    uint64_t v29 = v62;
    *(void *)(a2 + 128) = v63;
    *(void *)(a2 + 136) = v29;
    uint64_t v30 = v60;
    *(void *)(a2 + 144) = v61;
    *(void *)(a2 + 152) = v30;
    *(_OWORD *)(a2 + 160) = v19;
    *(_OWORD *)(a2 + 176) = v20;
    uint64_t v31 = v58;
    *(void *)(a2 + 192) = v59;
    *(void *)(a2 + 200) = v31;
    uint64_t v32 = v56;
    *(void *)(a2 + 208) = v57;
    *(void *)(a2 + 216) = v32;
    uint64_t v33 = v54;
    *(void *)(a2 + 224) = v55;
    *(void *)(a2 + 232) = v33;
    uint64_t v34 = v52;
    *(void *)(a2 + 240) = v53;
    *(void *)(a2 + 248) = v34;
    uint64_t v35 = v50;
    *(void *)(a2 + 256) = v51;
    *(void *)(a2 + 264) = v35;
    *(void *)(a2 + 272) = v48;
    uint64_t v36 = v47;
    *(void *)(a2 + 280) = v49;
    *(void *)(a2 + 288) = v36;
    uint64_t v37 = v45;
    *(void *)(a2 + 296) = v46;
    *(void *)(a2 + 304) = v37;
    uint64_t v38 = v43;
    *(void *)(a2 + 312) = v44;
    *(void *)(a2 + 320) = v38;
    *(void *)(a2 + 328) = v42;
    *(void *)(a2 + 336) = v22;
    *(void *)(a2 + 344) = v41;
    long long v39 = v79;
    *(_OWORD *)(a2 + 352) = v78;
    *(_OWORD *)(a2 + 368) = v39;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C118A6F0(uint64_t a1)
{
  unint64_t v2 = sub_1C118CED8();
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t sub_1C118A72C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CoverIssueViewLayout.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1C118A744(void *a1)
{
  return CoverIssueViewLayout.Attributes.encode(to:)(a1);
}

uint64_t sub_1C118A75C()
{
  sub_1C01BC844();
  return sub_1C151798C();
}

uint64_t CoverIssueViewLayout.Context.key.getter()
{
  return swift_retain();
}

uint64_t CoverIssueViewLayout.Context.model.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 88);
  long long v3 = *(_OWORD *)(v1 + 120);
  v11[6] = *(_OWORD *)(v1 + 104);
  v12[0] = v3;
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)(v1 + 129);
  long long v4 = *(_OWORD *)(v1 + 24);
  long long v5 = *(_OWORD *)(v1 + 56);
  void v11[2] = *(_OWORD *)(v1 + 40);
  uint64_t v11[3] = v5;
  v11[4] = *(_OWORD *)(v1 + 72);
  v11[5] = v2;
  v11[0] = *(_OWORD *)(v1 + 8);
  v11[1] = v4;
  long long v6 = *(_OWORD *)(v1 + 88);
  long long v7 = *(_OWORD *)(v1 + 120);
  a1[6] = *(_OWORD *)(v1 + 104);
  a1[7] = v7;
  *(_OWORD *)((char *)a1 + 121) = *(_OWORD *)(v1 + 129);
  long long v8 = *(_OWORD *)(v1 + 24);
  long long v9 = *(_OWORD *)(v1 + 56);
  a1[2] = *(_OWORD *)(v1 + 40);
  a1[3] = v9;
  a1[4] = *(_OWORD *)(v1 + 72);
  a1[5] = v6;
  *a1 = *(_OWORD *)(v1 + 8);
  a1[1] = v8;
  return sub_1C0187FB0((uint64_t)v11);
}

uint64_t CoverIssueViewLayout.Context.secondaryModel.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1BFF66964(v1 + 152, (uint64_t)v4, (unint64_t *)&qword_1EB882CD0);
  sub_1BFF66964((uint64_t)v4, a1, (unint64_t *)&qword_1EB882CD0);
  return sub_1C118B494((uint64_t)v4);
}

uint64_t CoverIssueViewLayout.Context.styler.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFC66384(v1 + 296, a1);
}

uint64_t sub_1C118A8F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v4 = sub_1C0FBAE48();
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v3 + 80))(v4);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_1C118A9A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v4 = sub_1C0FBAE48();
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v3 + 88))(v4);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_1C118AA50@<X0>(void *a1@<X0>, void **a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  sub_1BFF66964((uint64_t)(a2 + 9), (uint64_t)v14, &qword_1EB85CE38);
  sub_1BFF66964((uint64_t)v14, (uint64_t)v15, &qword_1EB85CE38);
  if (v16 == 1 || !v17)
  {
    long long v7 = *a2;
    sub_1C0187FB0((uint64_t)a2);
    id v8 = objc_msgSend(v7, sel_coverDate);
    sub_1C151E62C();
    swift_bridgeObjectRelease();

    sub_1C01880A4((uint64_t)a2);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v9 = sub_1C151E6DC();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 96))(v9, v11, v5, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v12;
  return result;
}

uint64_t sub_1C118AB98@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  int v4 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v6 = sub_1C0FBAF58();
  if (v4 == 2) {
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(v5 + 96))(v6);
  }
  else {
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(v5 + 104))(v6);
  }
  uint64_t v8 = v7;
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v8;
  return result;
}

uint64_t sub_1C118AC68@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C118A8F0(a1, a2);
}

uint64_t sub_1C118AC70@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  uint64_t v7 = sub_1C151E6DC();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 112))(v7, v9, v3, v4);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v10;
  return result;
}

uint64_t sub_1C118AD98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  uint64_t v7 = sub_1C151E6DC();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 120))(v7, v9, v3, v4);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v10;
  return result;
}

uint64_t sub_1C118AED0@<X0>(id *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C118B024(a1);
  uint64_t v6 = v5;
  id v7 = *a1;
  id v8 = objc_msgSend(*a1, sel_coverDate);
  uint64_t v9 = sub_1C151E62C();
  uint64_t v11 = v10;

  sub_1BFF27ECC();
  LOBYTE(v8) = sub_1C151FEDC();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    sub_1C118B2F8(0, (unint64_t *)&qword_1EB87A898, MEMORY[0x1E4FBBE00]);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C1527210;
    *(void *)(v13 + 32) = v4;
    *(void *)(v13 + 40) = v6;
    id v14 = objc_msgSend(v7, sel_coverDate, v9, v11);
    uint64_t v15 = sub_1C151E62C();
    uint64_t v17 = v16;

    *(void *)(v13 + 48) = v15;
    *(void *)(v13 + 56) = v17;
    uint64_t v4 = sub_1C151A2DC();
    uint64_t v6 = v18;
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a2 = v4;
  a2[1] = v6;
  return result;
}

uint64_t sub_1C118B024(id *a1)
{
  id v1 = *a1;
  id v2 = objc_msgSend(*a1, sel_title);
  sub_1C151E62C();

  id v3 = objc_msgSend(objc_msgSend(v1, sel_sourceChannel), sel_name);
  swift_unknownObjectRelease();
  uint64_t v4 = sub_1C151E62C();
  uint64_t v6 = v5;

  uint64_t v21 = v4;
  sub_1BFF27ECC();
  LOBYTE(v4) = sub_1C151FEDC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
    id v7 = objc_msgSend(v1, sel_title, v21, v6);
    uint64_t v8 = sub_1C151E62C();
  }
  else
  {
    sub_1C118B2F8(0, (unint64_t *)&qword_1EB87A898, MEMORY[0x1E4FBBE00]);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C1527210;
    id v10 = objc_msgSend(objc_msgSend(v1, sel_sourceChannel, v21, v6), sel_name);
    swift_unknownObjectRelease();
    uint64_t v11 = sub_1C151E62C();
    uint64_t v13 = v12;

    *(void *)(v9 + 32) = v11;
    *(void *)(v9 + 40) = v13;
    id v14 = objc_msgSend(v1, sel_title);
    uint64_t v15 = sub_1C151E62C();
    uint64_t v17 = v16;

    *(void *)(v9 + 48) = v15;
    *(void *)(v9 + 56) = v17;
    uint64_t v8 = sub_1C151A2DC();
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    if (!v19) {
      return 0;
    }
  }
  return v8;
}

void CoverIssueViewLayout.Options.traits.getter(void *a1@<X8>)
{
  *a1 = *v1;
}

NewsFeed::CoverIssueViewLayout::Traits __swiftcall CoverIssueViewLayout.Traits.init(rawValue:)(NewsFeed::CoverIssueViewLayout::Traits rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static CoverIssueViewLayout.Traits.showTitle.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static CoverIssueViewLayout.Traits.includeBottomInset.getter(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t CoverIssueViewLayout.Traits.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t sub_1C118B288@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C118A9A0(a1, a2);
}

uint64_t sub_1C118B298@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C118AA50(a1, (void **)(v2 + 16), a2);
}

uint64_t sub_1C118B2A8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C118AB98(a1, v2 + 16, a2);
}

id sub_1C118B2BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_1C1393C20(a1, *(void (**)(_OWORD *__return_ptr, unsigned char *))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
  *a2 = result;
  return result;
}

uint64_t sub_1C118B2F0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C118AED0((id *)(v1 + 16), a1);
}

void sub_1C118B2F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1BFC77FBC(255, (unint64_t *)&qword_1EB879C00);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C118B368()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C118B3A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C1393AD8(a1, *(void (**)(_OWORD *__return_ptr, unsigned char *))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
  *a2 = result;
  a2[1] = v5;
  return result;
}

unint64_t sub_1C118B3D8()
{
  unint64_t result = qword_1EB85D448;
  if (!qword_1EB85D448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D448);
  }
  return result;
}

void sub_1C118B42C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C118B494(uint64_t a1)
{
  return a1;
}

uint64_t _s8NewsFeed20CoverIssueViewLayoutV7ContextV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)a2;
  BOOL v6 = *(void *)(*(void *)a1 + 16) == *(void *)(*(void *)a2 + 16)
    && *(void *)(*(void *)a1 + 24) == *(void *)(v5 + 24);
  if (v6 || (sub_1C1520A9C() & 1) != 0)
  {
    if (*(void *)(v4 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier) == *(void *)(v5
                                                                                             + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier)
      && *(void *)(v4 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier + 8) == *(void *)(v5
                                                                                                 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier
                                                                                                 + 8))
    {
      sub_1C01BC5C8(a1, (uint64_t)v12);
      sub_1C01BC5C8(a2, (uint64_t)v11);
    }
    else
    {
      char v8 = sub_1C1520A9C();
      sub_1C01BC5C8(a1, (uint64_t)v12);
      sub_1C01BC5C8(a2, (uint64_t)v11);
      char v9 = 0;
      if ((v8 & 1) == 0) {
        goto LABEL_18;
      }
    }
    if (v13 == v11[2] && v14 == v11[3]) {
      char v9 = 1;
    }
    else {
      char v9 = sub_1C1520A9C();
    }
  }
  else
  {
    sub_1C01BC5C8(a1, (uint64_t)v12);
    sub_1C01BC5C8(a2, (uint64_t)v11);
    char v9 = 0;
  }
LABEL_18:
  sub_1C01BC710((uint64_t)v12);
  sub_1C01BC710((uint64_t)v11);
  return v9 & 1;
}

unint64_t sub_1C118B630()
{
  unint64_t result = qword_1EA1AC610;
  if (!qword_1EA1AC610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC610);
  }
  return result;
}

unint64_t sub_1C118B690()
{
  unint64_t result = qword_1EB85D460;
  if (!qword_1EB85D460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D460);
  }
  return result;
}

unint64_t sub_1C118B6E8()
{
  unint64_t result = qword_1EA1AC618;
  if (!qword_1EA1AC618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC618);
  }
  return result;
}

unint64_t sub_1C118B740()
{
  unint64_t result = qword_1EA1AC620;
  if (!qword_1EA1AC620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC620);
  }
  return result;
}

unint64_t sub_1C118B798()
{
  unint64_t result = qword_1EA1AC628;
  if (!qword_1EA1AC628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC628);
  }
  return result;
}

unint64_t sub_1C118B7F0()
{
  unint64_t result = qword_1EA1AC630;
  if (!qword_1EA1AC630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC630);
  }
  return result;
}

void *assignWithCopy for CoverIssueViewLayout(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for CoverIssueViewLayout()
{
  return &type metadata for CoverIssueViewLayout;
}

void *__swift_memcpy384_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x180uLL);
}

uint64_t getEnumTagSinglePayload for CoverIssueViewLayout.Attributes(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 384)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CoverIssueViewLayout.Attributes(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 376) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 384) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CoverIssueViewLayout.Attributes()
{
  return &type metadata for CoverIssueViewLayout.Attributes;
}

uint64_t destroy for CoverIssueViewLayout.Context(uint64_t a1)
{
  swift_release();

  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 88) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 136) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = *(void **)(a1 + 152);
  if (v2)
  {

    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 232) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(a1 + 280) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
  }
  __swift_destroy_boxed_opaque_existential_1(a1 + 296);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for CoverIssueViewLayout.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  BOOL v6 = *(void **)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 88);
  swift_retain();
  id v8 = v4;
  swift_bridgeObjectRetain();
  id v9 = v6;
  if (v7 == 1)
  {
    long long v10 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v10;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  }
  else
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v7;
    uint64_t v11 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v11;
    uint64_t v13 = *(void **)(a2 + 112);
    uint64_t v12 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = v13;
    *(void *)(a1 + 120) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v13;
  }
  uint64_t v15 = (void *)(a2 + 128);
  unint64_t v16 = *(void *)(a2 + 136);
  if (v16 >= 0x11)
  {
    *(void *)(a1 + 128) = *v15;
    *(void *)(a1 + 136) = v16;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 128) = *(_OWORD *)v15;
  }
  uint64_t v17 = *(void **)(a2 + 152);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 160);
    uint64_t v19 = *(void *)(a2 + 168);
    *(void *)(a1 + 152) = v17;
    *(void *)(a1 + 160) = v18;
    *(void *)(a1 + 168) = v19;
    *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    long long v20 = *(void **)(a2 + 208);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = v20;
    *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
    uint64_t v21 = *(void *)(a2 + 232);
    id v22 = v17;
    swift_bridgeObjectRetain();
    id v23 = v20;
    if (v21 == 1)
    {
      long long v24 = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = v24;
      *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    }
    else
    {
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = v21;
      uint64_t v29 = *(void *)(a2 + 248);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = v29;
      uint64_t v31 = *(void **)(a2 + 256);
      uint64_t v30 = *(void *)(a2 + 264);
      *(void *)(a1 + 256) = v31;
      *(void *)(a1 + 264) = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v32 = v31;
    }
    uint64_t v33 = (void *)(a2 + 272);
    unint64_t v34 = *(void *)(a2 + 280);
    if (v34 >= 0x11)
    {
      *(void *)(a1 + 272) = *v33;
      *(void *)(a1 + 280) = v34;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 272) = *(_OWORD *)v33;
    }
    *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
  }
  else
  {
    long long v25 = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 264) = v25;
    *(_OWORD *)(a1 + 273) = *(_OWORD *)(a2 + 273);
    long long v26 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v26;
    long long v27 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v27;
    long long v28 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v28;
  }
  long long v35 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 320) = v35;
  (**(void (***)(uint64_t, uint64_t))(v35 - 8))(a1 + 296, a2 + 296);
  uint64_t v36 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v36;
  uint64_t v37 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v37;
  uint64_t v38 = *(void *)(a2 + 376);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = v38;
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CoverIssueViewLayout.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v7 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  id v8 = *(void **)(a2 + 64);
  id v9 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v8;
  id v10 = v8;

  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v11 = (long long *)(a1 + 80);
  uint64_t v12 = (long long *)(a2 + 80);
  uint64_t v13 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88) == 1)
  {
    if (v13 == 1)
    {
      long long v14 = *v12;
      long long v15 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v15;
      long long *v11 = v14;
    }
    else
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      uint64_t v18 = *(void **)(a2 + 112);
      *(void *)(a1 + 112) = v18;
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v19 = v18;
    }
  }
  else if (v13 == 1)
  {
    sub_1C0FBC5C0(a1 + 80);
    long long v17 = *(_OWORD *)(a2 + 96);
    long long v16 = *(_OWORD *)(a2 + 112);
    long long *v11 = *v12;
    *(_OWORD *)(a1 + 96) = v17;
    *(_OWORD *)(a1 + 112) = v16;
  }
  else
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v20 = *(void **)(a2 + 112);
    uint64_t v21 = *(void **)(a1 + 112);
    *(void *)(a1 + 112) = v20;
    id v22 = v20;

    *(void *)(a1 + 120) = *(void *)(a2 + 120);
  }
  unint64_t v23 = *(void *)(a2 + 136);
  if (*(void *)(a1 + 136) < 0x11uLL)
  {
    if (v23 >= 0x11)
    {
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v23 < 0x11)
  {
    sub_1C01A7564(a1 + 128);
LABEL_13:
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    goto LABEL_15;
  }
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_15:
  long long v24 = (_OWORD *)(a1 + 152);
  long long v25 = *(void **)(a1 + 152);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  long long v27 = (_OWORD *)(a2 + 152);
  long long v26 = *(void **)(a2 + 152);
  if (v25)
  {
    if (v26)
    {
      *(void *)(a1 + 152) = v26;
      id v28 = v26;

      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
      uint64_t v29 = *(void *)(a2 + 184);
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *(void *)(a1 + 184) = v29;
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      uint64_t v30 = *(void **)(a2 + 208);
      uint64_t v31 = *(void **)(a1 + 208);
      *(void *)(a1 + 208) = v30;
      id v32 = v30;

      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      uint64_t v33 = (long long *)(a1 + 224);
      unint64_t v34 = (long long *)(a2 + 224);
      uint64_t v35 = *(void *)(a2 + 232);
      if (*(void *)(a1 + 232) == 1)
      {
        if (v35 == 1)
        {
          long long v36 = *v34;
          long long v37 = *(_OWORD *)(a2 + 256);
          *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
          *(_OWORD *)(a1 + 256) = v37;
          long long *v33 = v36;
        }
        else
        {
          *(void *)(a1 + 224) = *(void *)(a2 + 224);
          *(void *)(a1 + 232) = *(void *)(a2 + 232);
          *(void *)(a1 + 240) = *(void *)(a2 + 240);
          *(void *)(a1 + 248) = *(void *)(a2 + 248);
          uint64_t v61 = *(void **)(a2 + 256);
          *(void *)(a1 + 256) = v61;
          *(void *)(a1 + 264) = *(void *)(a2 + 264);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v62 = v61;
        }
      }
      else if (v35 == 1)
      {
        sub_1C0FBC5C0(a1 + 224);
        long long v52 = *(_OWORD *)(a2 + 240);
        long long v51 = *(_OWORD *)(a2 + 256);
        long long *v33 = *v34;
        *(_OWORD *)(a1 + 240) = v52;
        *(_OWORD *)(a1 + 256) = v51;
      }
      else
      {
        *(void *)(a1 + 224) = *(void *)(a2 + 224);
        *(void *)(a1 + 232) = *(void *)(a2 + 232);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(a1 + 240) = *(void *)(a2 + 240);
        *(void *)(a1 + 248) = *(void *)(a2 + 248);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v63 = *(void **)(a2 + 256);
        uint64_t v64 = *(void **)(a1 + 256);
        *(void *)(a1 + 256) = v63;
        id v65 = v63;

        *(void *)(a1 + 264) = *(void *)(a2 + 264);
      }
      unint64_t v66 = *(void *)(a2 + 280);
      if (*(void *)(a1 + 280) >= 0x11uLL)
      {
        if (v66 >= 0x11)
        {
          *(void *)(a1 + 272) = *(void *)(a2 + 272);
          *(void *)(a1 + 280) = *(void *)(a2 + 280);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_39;
        }
        sub_1C01A7564(a1 + 272);
      }
      else if (v66 >= 0x11)
      {
        goto LABEL_34;
      }
      *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
      goto LABEL_39;
    }
    sub_1C118C424(a1 + 152);
    *long long v24 = *v27;
    long long v45 = *(_OWORD *)(a2 + 216);
    long long v47 = *(_OWORD *)(a2 + 168);
    long long v46 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v45;
    *(_OWORD *)(a1 + 168) = v47;
    *(_OWORD *)(a1 + 184) = v46;
    long long v49 = *(_OWORD *)(a2 + 248);
    long long v48 = *(_OWORD *)(a2 + 264);
    long long v50 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 273) = *(_OWORD *)(a2 + 273);
    *(_OWORD *)(a1 + 248) = v49;
    *(_OWORD *)(a1 + 264) = v48;
    *(_OWORD *)(a1 + 232) = v50;
  }
  else
  {
    if (v26)
    {
      *(void *)(a1 + 152) = v26;
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
      uint64_t v38 = *(void *)(a2 + 184);
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *(void *)(a1 + 184) = v38;
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      long long v39 = *(void **)(a2 + 208);
      *(void *)(a1 + 208) = v39;
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      uint64_t v40 = *(void *)(a2 + 232);
      id v41 = v26;
      swift_bridgeObjectRetain();
      id v42 = v39;
      if (v40 == 1)
      {
        long long v43 = *(_OWORD *)(a2 + 224);
        long long v44 = *(_OWORD *)(a2 + 256);
        *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
        *(_OWORD *)(a1 + 256) = v44;
        *(_OWORD *)(a1 + 224) = v43;
      }
      else
      {
        *(void *)(a1 + 224) = *(void *)(a2 + 224);
        *(void *)(a1 + 232) = *(void *)(a2 + 232);
        *(void *)(a1 + 240) = *(void *)(a2 + 240);
        *(void *)(a1 + 248) = *(void *)(a2 + 248);
        uint64_t v59 = *(void **)(a2 + 256);
        *(void *)(a1 + 256) = v59;
        *(void *)(a1 + 264) = *(void *)(a2 + 264);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v60 = v59;
      }
      if (*(void *)(a2 + 280) < 0x11uLL)
      {
        *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
LABEL_39:
        *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
        goto LABEL_40;
      }
LABEL_34:
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      swift_bridgeObjectRetain();
      goto LABEL_39;
    }
    *long long v24 = *v27;
    long long v53 = *(_OWORD *)(a2 + 168);
    long long v54 = *(_OWORD *)(a2 + 184);
    long long v55 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v55;
    *(_OWORD *)(a1 + 168) = v53;
    *(_OWORD *)(a1 + 184) = v54;
    long long v56 = *(_OWORD *)(a2 + 232);
    long long v57 = *(_OWORD *)(a2 + 248);
    long long v58 = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 273) = *(_OWORD *)(a2 + 273);
    *(_OWORD *)(a1 + 248) = v57;
    *(_OWORD *)(a1 + 264) = v58;
    *(_OWORD *)(a1 + 232) = v56;
  }
LABEL_40:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 296), (uint64_t *)(a2 + 296));
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_retain();
  swift_release();
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_retain();
  swift_release();
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  swift_retain();
  swift_release();
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  swift_retain();
  swift_release();
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  swift_retain();
  swift_release();
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  swift_retain();
  swift_release();
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C118C424(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy392_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x188uLL);
}

uint64_t assignWithTake for CoverIssueViewLayout.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  uint64_t v7 = *(void **)(a1 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;

  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  if (*(void *)(a1 + 88) == 1) {
    goto LABEL_4;
  }
  uint64_t v8 = *(void *)(a2 + 88);
  if (v8 == 1)
  {
    sub_1C0FBC5C0(a1 + 80);
LABEL_4:
    long long v9 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v9;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    goto LABEL_6;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);

  *(void *)(a1 + 120) = *(void *)(a2 + 120);
LABEL_6:
  uint64_t v12 = (_OWORD *)(a2 + 128);
  if (*(void *)(a1 + 136) < 0x11uLL)
  {
LABEL_9:
    *(_OWORD *)(a1 + 128) = *v12;
    goto LABEL_11;
  }
  unint64_t v13 = *(void *)(a2 + 136);
  if (v13 < 0x11)
  {
    sub_1C01A7564(a1 + 128);
    goto LABEL_9;
  }
  *(void *)(a1 + 128) = *(void *)v12;
  *(void *)(a1 + 136) = v13;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v14 = *(void *)(a2 + 152);
  long long v15 = *(void **)(a1 + 152);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  if (v15)
  {
    if (v14)
    {
      *(void *)(a1 + 152) = v14;

      uint64_t v16 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v16;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      uint64_t v17 = *(void *)(a2 + 208);
      uint64_t v18 = *(void **)(a1 + 208);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = v17;

      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      if (*(void *)(a1 + 232) != 1)
      {
        uint64_t v19 = *(void *)(a2 + 232);
        if (v19 != 1)
        {
          *(void *)(a1 + 224) = *(void *)(a2 + 224);
          *(void *)(a1 + 232) = v19;
          swift_bridgeObjectRelease();
          uint64_t v25 = *(void *)(a2 + 248);
          *(void *)(a1 + 240) = *(void *)(a2 + 240);
          *(void *)(a1 + 248) = v25;
          swift_bridgeObjectRelease();
          long long v26 = *(void **)(a1 + 256);
          *(void *)(a1 + 256) = *(void *)(a2 + 256);

          *(void *)(a1 + 264) = *(void *)(a2 + 264);
LABEL_20:
          long long v27 = (void *)(a2 + 272);
          if (*(void *)(a1 + 280) >= 0x11uLL)
          {
            unint64_t v28 = *(void *)(a2 + 280);
            if (v28 >= 0x11)
            {
              *(void *)(a1 + 272) = *v27;
              *(void *)(a1 + 280) = v28;
              swift_bridgeObjectRelease();
              goto LABEL_25;
            }
            sub_1C01A7564(a1 + 272);
          }
          *(_OWORD *)(a1 + 272) = *(_OWORD *)v27;
LABEL_25:
          *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
          goto LABEL_26;
        }
        sub_1C0FBC5C0(a1 + 224);
      }
      long long v20 = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = v20;
      *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
      goto LABEL_20;
    }
    sub_1C118C424(a1 + 152);
  }
  long long v21 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = v21;
  *(_OWORD *)(a1 + 273) = *(_OWORD *)(a2 + 273);
  long long v22 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v22;
  long long v23 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v23;
  long long v24 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v24;
LABEL_26:
  __swift_destroy_boxed_opaque_existential_1(a1 + 296);
  long long v29 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v29;
  uint64_t v30 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = v30;
  swift_release();
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_release();
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  swift_release();
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  swift_release();
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  swift_release();
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  swift_release();
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CoverIssueViewLayout.Context(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 392)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoverIssueViewLayout.Context(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 392) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 392) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoverIssueViewLayout.Context()
{
  return &type metadata for CoverIssueViewLayout.Context;
}

ValueMetadata *type metadata accessor for CoverIssueViewLayout.Options()
{
  return &type metadata for CoverIssueViewLayout.Options;
}

ValueMetadata *type metadata accessor for CoverIssueViewLayout.Traits()
{
  return &type metadata for CoverIssueViewLayout.Traits;
}

unsigned char *storeEnumTagSinglePayload for CoverIssueViewLayout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C118C984);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoverIssueViewLayout.Attributes.CodingKeys()
{
  return &type metadata for CoverIssueViewLayout.Attributes.CodingKeys;
}

unint64_t sub_1C118C9C0()
{
  unint64_t result = qword_1EA1AC638;
  if (!qword_1EA1AC638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC638);
  }
  return result;
}

unint64_t sub_1C118CA18()
{
  unint64_t result = qword_1EB85D458;
  if (!qword_1EB85D458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D458);
  }
  return result;
}

unint64_t sub_1C118CA70()
{
  unint64_t result = qword_1EB85D450;
  if (!qword_1EB85D450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D450);
  }
  return result;
}

uint64_t sub_1C118CAC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x62614C656C746974 && a2 == 0xEF656D6172466C65 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xEE00656D61724679 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C160B9E0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C1636150 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C1636170 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F634964756F6C63 && a2 == 0xEE00656D6172466ELL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001C1608EF0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x80000001C1636190 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C16361C0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

unint64_t sub_1C118CED8()
{
  unint64_t result = qword_1EA1AC640;
  if (!qword_1EA1AC640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AC640);
  }
  return result;
}