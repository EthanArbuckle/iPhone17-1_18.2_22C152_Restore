uint64_t type metadata accessor for PuzzleStreak()
{
  uint64_t result;

  result = qword_1EB8813A0;
  if (!qword_1EB8813A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFDAA760(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BFDAA7CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BFDAA83C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BFDAA8BC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C0067164(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFDAA928()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFDAA978()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFDAA9D8()
{
  unint64_t result = qword_1EB8882E0;
  if (!qword_1EB8882E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8882E0);
  }
  return result;
}

uint64_t sub_1BFDAAA2C(void *a1)
{
  return FormatBackground.encode(to:)(a1);
}

uint64_t FormatBackground.encode(to:)(void *a1)
{
  v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  v88 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  v90 = (char *)&v86 - v7;
  MEMORY[0x1F4188790](v8);
  v86 = (char *)&v86 - v9;
  MEMORY[0x1F4188790](v10);
  v87 = (char *)&v86 - v11;
  MEMORY[0x1F4188790](v12);
  v89 = (char *)&v86 - v13;
  MEMORY[0x1F4188790](v14);
  v16 = (char *)&v86 - v15;
  MEMORY[0x1F4188790](v17);
  v19 = (char *)&v86 - v18;
  MEMORY[0x1F4188790](v20);
  v22 = (char *)&v86 - v21;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v23 - 8);
  v25 = (char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v26 = *v2;
  uint64_t v27 = a1[3];
  uint64_t v28 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  unint64_t v29 = sub_1BFEB6A24();
  v97 = v25;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatBackground, v30, v27, (uint64_t)&type metadata for FormatBackground, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v28, (uint64_t)v25, v29, (uint64_t)&off_1F1C39B68);
  switch(v26 >> 61)
  {
    case 1uLL:
      long long v36 = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      v91[0] = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v91[1] = v36;
      long long v37 = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      v91[2] = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      v91[3] = v37;
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v38 = sub_1C151928C();
      uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v19, v39, v38);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v40 = (uint64_t)v97;
      sub_1BFDAB76C(1, v91, (uint64_t)v19);
      sub_1BFEFEB68((uint64_t)v19, type metadata accessor for FormatVersionRequirement);
      uint64_t v41 = v40;
      goto LABEL_30;
    case 2uLL:
      long long v42 = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
      v92[4] = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
      v92[5] = v42;
      long long v43 = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
      v92[6] = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
      v92[7] = v43;
      long long v44 = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      v92[0] = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v92[1] = v44;
      long long v45 = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      v92[2] = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      v92[3] = v45;
      if (qword_1EB887658 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_1C151928C();
      uint64_t v47 = __swift_project_value_buffer(v46, (uint64_t)qword_1EB93CAF8);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v16, v47, v46);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v48 = (uint64_t)v97;
      sub_1C0696FE8(2, v92, (uint64_t)v16);
      goto LABEL_29;
    case 3uLL:
      uint64_t v49 = *(void *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      sub_1BFF05D18();
      uint64_t v51 = (uint64_t)v89;
      v52 = &v89[*(int *)(v50 + 48)];
      v53 = &v89[*(int *)(v50 + 64)];
      sub_1BFF7B774(v49);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v54 = sub_1C151928C();
      uint64_t v55 = __swift_project_value_buffer(v54, (uint64_t)qword_1EB93CAB0);
      v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16);
      v56(v51, v55, v54);
      if (qword_1EB8849D0 != -1) {
        swift_once();
      }
      uint64_t v57 = __swift_project_value_buffer(v54, (uint64_t)qword_1EB93C828);
      v56((uint64_t)v52, v57, v54);
      type metadata accessor for FormatVersionRequirement.Value(0);
      *(void *)v53 = 0;
      *((void *)v53 + 1) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = (uint64_t)v97;
      sub_1C0697198(3, v49, v51);
      sub_1BFEFEB68(v51, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v58, (uint64_t (*)(void))sub_1BFEFF7D8);
      return sub_1BFF7C0EC(v49);
    case 4uLL:
      long long v60 = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
      v93[6] = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
      v93[7] = v60;
      v94[0] = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x90);
      *(_OWORD *)((char *)v94 + 9) = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x99);
      long long v61 = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      v93[2] = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      v93[3] = v61;
      long long v62 = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
      v93[4] = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
      v93[5] = v62;
      long long v63 = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      v93[0] = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v93[1] = v63;
      sub_1C0445120((uint64_t)v93);
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v64 = sub_1C151928C();
      uint64_t v65 = __swift_project_value_buffer(v64, (uint64_t)qword_1EB93CA80);
      uint64_t v66 = (uint64_t)v87;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 16))(v87, v65, v64);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v67 = (uint64_t)v97;
      sub_1C069732C(4, v93, v66);
      sub_1BFEFEB68(v66, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v67, (uint64_t (*)(void))sub_1BFEFF7D8);
      return sub_1C05D9B78((uint64_t)v93);
    case 5uLL:
      uint64_t v68 = *(void *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v69 = *(void *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v70 = qword_1EB8875F8;
      swift_retain();
      swift_retain();
      if (v70 != -1) {
        swift_once();
      }
      uint64_t v71 = sub_1C151928C();
      uint64_t v72 = __swift_project_value_buffer(v71, (uint64_t)qword_1EB93C9F0);
      uint64_t v73 = (uint64_t)v86;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v71 - 8) + 16))(v86, v72, v71);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v74 = (uint64_t)v97;
      sub_1C06974F4(5, v68, v69, v73);
      sub_1BFEFEB68(v73, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v74, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_release();
      goto LABEL_22;
    case 6uLL:
      long long v75 = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
      v95[6] = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
      v95[7] = v75;
      v95[8] = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x90);
      char v96 = *(unsigned char *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0xA0);
      long long v76 = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      v95[2] = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      v95[3] = v76;
      long long v77 = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
      v95[4] = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
      v95[5] = v77;
      long long v78 = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      v95[0] = *(_OWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v95[1] = v78;
      sub_1C0445048((uint64_t)v95);
      if (qword_1EB887610 != -1) {
        swift_once();
      }
      uint64_t v79 = sub_1C151928C();
      uint64_t v80 = __swift_project_value_buffer(v79, (uint64_t)qword_1EB93CA20);
      uint64_t v81 = (uint64_t)v90;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v79 - 8) + 16))(v90, v80, v79);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v82 = (uint64_t)v97;
      sub_1C0697688(6, v95, v81);
      sub_1BFEFEB68(v81, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v82, (uint64_t (*)(void))sub_1BFEFF7D8);
      return sub_1C05D9AA0((uint64_t)v95);
    case 7uLL:
      char v83 = *(unsigned char *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v84 = sub_1C151928C();
      uint64_t v85 = __swift_project_value_buffer(v84, (uint64_t)qword_1EB93CA50);
      v16 = v88;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16))(v88, v85, v84);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v48 = (uint64_t)v97;
      sub_1C0697850(7, v83, (uint64_t)v16);
LABEL_29:
      sub_1BFEFEB68((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
      uint64_t v41 = v48;
LABEL_30:
      uint64_t result = sub_1BFEFEB68(v41, (uint64_t (*)(void))sub_1BFEFF7D8);
      break;
    default:
      uint64_t v31 = *(void *)(v26 + 16);
      uint64_t v32 = qword_1EB882D28;
      swift_retain();
      if (v32 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_1C151928C();
      uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v22, v34, v33);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v35 = (uint64_t)v97;
      sub_1BFDAB584(0, v31, (uint64_t)v22);
      sub_1BFEFEB68((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v35, (uint64_t (*)(void))sub_1BFEFF7D8);
LABEL_22:
      uint64_t result = swift_release();
      break;
  }
  return result;
}

uint64_t sub_1BFDAB584(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C09000FC;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDAB718();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE10198();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDAB718()
{
  unint64_t result = qword_1EB865BF0;
  if (!qword_1EB865BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865BF0);
  }
  return result;
}

uint64_t sub_1BFDAB76C(char a1, long long *a2, uint64_t a3)
{
  char v22 = a1;
  long long v7 = a2[1];
  long long v18 = *a2;
  long long v19 = v7;
  long long v8 = a2[3];
  long long v20 = a2[2];
  long long v21 = v8;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C09000FC;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDAB718();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFDAB90C();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDAB90C()
{
  unint64_t result = qword_1EB85B738;
  if (!qword_1EB85B738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B738);
  }
  return result;
}

uint64_t sub_1BFDAB960@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatRatio.init(from:)(a1, a2);
}

uint64_t FormatRatio.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v23 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v23;
  uint64_t v13 = v9;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        unint64_t v17 = *v16;
        if (*v16 >= 4) {
          break;
        }
        v16 += 2;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v19 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v20 = v19;
      *(void *)(v20 + 8) = v17;
      *(void *)(v20 + 16) = &unk_1F1B874F8;
      *(_OWORD *)(v20 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v19, v17);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFDABCE0();
  long long v24 = 0uLL;
  sub_1C15206EC();
  char v18 = v25;
  sub_1BFE41AFC();
  long long v24 = xmmword_1C152C800;
  sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  *(void *)uint64_t v12 = v25;
  *(unsigned char *)(v12 + 8) = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDABCE0()
{
  unint64_t result = qword_1EB886F20;
  if (!qword_1EB886F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB886F20);
  }
  return result;
}

unint64_t sub_1BFDABD34(void *a1)
{
  return FormatTextSize.encode(to:)(a1);
}

unint64_t FormatTextSize.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  long long v77 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  long long v76 = (char *)&v72 - v6;
  MEMORY[0x1F4188790](v7);
  long long v75 = (char *)&v72 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v74 = (char *)&v72 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v72 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v72 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v73 = (char *)&v72 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v72 = (char *)&v72 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v72 - v22;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v24 - 8);
  unint64_t v26 = (char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v27 = *v1;
  uint64_t v28 = a1[3];
  uint64_t v29 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  sub_1BFEB6A24();
  long long v78 = v26;
  sub_1BFEFBB88((uint64_t)&type metadata for FormatCodingKeys, v30, v28, (uint64_t)&type metadata for FormatVersions.JazzkonC, v29, (uint64_t)&off_1F1C39B68, (uint64_t)v26);
  switch(v27 >> 61)
  {
    case 1uLL:
      uint64_t v40 = *(void *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v39 = *(void *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_bridgeObjectRetain();
      sub_1BFF415D4(v39);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_1C151928C();
      uint64_t v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v16, v42, v41);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = (uint64_t)v78;
      sub_1C0698988(3, v40, v39, (uint64_t)v16);
      sub_1BFEFEAA8((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEAA8(v43, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_bridgeObjectRelease();
      return sub_1BFF4160C(v39);
    case 2uLL:
      uint64_t v45 = *(void *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_1C151928C();
      uint64_t v47 = __swift_project_value_buffer(v46, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v13, v47, v46);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v48 = (uint64_t)v78;
      sub_1BFDACB3C(5, v45, (uint64_t)v13);
      uint64_t v49 = (uint64_t)v13;
      goto LABEL_36;
    case 3uLL:
      uint64_t v50 = *(void *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v51 = sub_1C151928C();
      uint64_t v52 = __swift_project_value_buffer(v51, (uint64_t)qword_1EB93CAB0);
      uint64_t v53 = (uint64_t)v74;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v74, v52, v51);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v48 = (uint64_t)v78;
      sub_1BFDACB3C(6, v50, v53);
      goto LABEL_35;
    case 4uLL:
      uint64_t v54 = *(void *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v55 = qword_1EB8875F8;
      swift_retain();
      if (v55 != -1) {
        swift_once();
      }
      uint64_t v56 = sub_1C151928C();
      uint64_t v57 = __swift_project_value_buffer(v56, (uint64_t)qword_1EB93C9F0);
      uint64_t v58 = (uint64_t)v76;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v76, v57, v56);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v59 = 8;
      goto LABEL_21;
    case 5uLL:
      uint64_t v54 = *(void *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v60 = qword_1EB8875F8;
      swift_retain();
      if (v60 != -1) {
        swift_once();
      }
      uint64_t v61 = sub_1C151928C();
      uint64_t v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1EB93C9F0);
      uint64_t v58 = (uint64_t)v75;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v75, v62, v61);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v59 = 7;
LABEL_21:
      uint64_t v63 = v54;
      uint64_t v64 = (uint64_t)v78;
      sub_1BFDAC9A8(v59, v63, v58);
      sub_1BFEFEAA8(v58, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEAA8(v64, (uint64_t (*)(void))sub_1BFEFF7D8);
      return swift_release();
    case 6uLL:
      if (v27 == 0xC000000000000000)
      {
        uint64_t v48 = (uint64_t)v78;
        if (qword_1EB882D28 != -1) {
          swift_once();
        }
        uint64_t v68 = sub_1C151928C();
        uint64_t v69 = __swift_project_value_buffer(v68, (uint64_t)qword_1EB93CAB0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16))(v23, v69, v68);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        sub_1BFDAC800(0, (uint64_t)v23);
        uint64_t v49 = (uint64_t)v23;
      }
      else
      {
        uint64_t v48 = (uint64_t)v78;
        if (v27 == 0xC000000000000008)
        {
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v65 = sub_1C151928C();
          uint64_t v66 = __swift_project_value_buffer(v65, (uint64_t)qword_1EB93CAB0);
          uint64_t v53 = (uint64_t)v72;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v65 - 8) + 16))(v72, v66, v65);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v67 = 1;
        }
        else
        {
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v70 = sub_1C151928C();
          uint64_t v71 = __swift_project_value_buffer(v70, (uint64_t)qword_1EB93CAB0);
          uint64_t v53 = (uint64_t)v73;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16))(v73, v71, v70);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v67 = 4;
        }
        sub_1BFDAC800(v67, v53);
LABEL_35:
        uint64_t v49 = v53;
      }
LABEL_36:
      sub_1BFEFEAA8(v49, type metadata accessor for FormatVersionRequirement);
      uint64_t v38 = v48;
      return sub_1BFEFEAA8(v38, (uint64_t (*)(void))sub_1BFEFF7D8);
    default:
      unint64_t v31 = *(void *)(v27 + 16);
      uint64_t v32 = a1[3];
      uint64_t v33 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v32);
      sub_1BFF35EA4(v31);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_1C151928C();
      uint64_t v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1EB93CAB0);
      uint64_t v36 = (uint64_t)v77;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v77, v35, v34);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = v79;
      sub_1BFE97CE8(v36, (uint64_t)sub_1C0FB8AF0, 0, v32, v33);
      if (v37)
      {
        sub_1BFF322A8(v31);
        sub_1BFEFEAA8(v36, type metadata accessor for FormatVersionRequirement);
        uint64_t v38 = (uint64_t)v78;
        return sub_1BFEFEAA8(v38, (uint64_t (*)(void))sub_1BFEFF7D8);
      }
      else
      {
        sub_1BFEFEAA8(v36, type metadata accessor for FormatVersionRequirement);
        unint64_t v80 = v31;
        FormatSize.encode(to:)(a1);
        sub_1BFEFEAA8((uint64_t)v78, (uint64_t (*)(void))sub_1BFEFF7D8);
        return sub_1BFF322A8(v31);
      }
  }
}

uint64_t sub_1BFDAC800(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C08E56F4;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDAC954();
    v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDAC954()
{
  unint64_t result = qword_1EB85B750;
  if (!qword_1EB85B750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B750);
  }
  return result;
}

uint64_t sub_1BFDAC9A8(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08E56F4;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDAC954();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFF8B470();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDACB3C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08E56F4;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDAC954();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB879EF0, (uint64_t)&type metadata for FormatTextNodeAlternative, MEMORY[0x1E4FBB320]);
    sub_1BFDACCFC();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDACCFC()
{
  unint64_t result = qword_1EB85C470;
  if (!qword_1EB85C470)
  {
    sub_1BFE9DEBC(255, (unint64_t *)&qword_1EB879EF0, (uint64_t)&type metadata for FormatTextNodeAlternative, MEMORY[0x1E4FBB320]);
    sub_1C006ED10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C470);
  }
  return result;
}

uint64_t sub_1BFDACD90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatParagraphStyle.init(from:)(a1, a2);
}

uint64_t FormatParagraphStyle.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1C0861980();
  uint64_t v7 = v6;
  uint64_t v67 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0861A14();
  sub_1C085F050(&qword_1EB891EC0, (void (*)(uint64_t))sub_1C0861A14);
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v10 = a1[3];
    uint64_t v66 = a1;
    __swift_project_boxed_opaque_existential_1(a1, v10);
    uint64_t v11 = sub_1C1520EAC();
    LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
    swift_bridgeObjectRelease();
    uint64_t v12 = v67;
    uint64_t v13 = v9;
    if (v10)
    {
      uint64_t v14 = sub_1C152070C();
      uint64_t v15 = *(void *)(v14 + 16);
      if (v15)
      {
        uint64_t v16 = (unsigned char *)(v14 + 48);
        while (*v16 != 1)
        {
          v16 += 24;
          if (!--v15) {
            goto LABEL_7;
          }
        }
        uint64_t v22 = v12;
        uint64_t v23 = *((void *)v16 - 2);
        uint64_t v24 = *((void *)v16 - 1);
        swift_bridgeObjectRetain_n();
        uint64_t v25 = swift_bridgeObjectRelease();
        MEMORY[0x1F4188790](v25);
        *(&v41 - 4) = (uint64_t)&_s10CodingKeysON_262;
        *(&v41 - 3) = sub_1C0861A98();
        *(&v41 - 2) = sub_1BFDAD874();
        *(&v41 - 1) = sub_1C0861AEC();
        swift_getKeyPath();
        swift_retain();
        uint64_t v26 = sub_1C085FB14((uint64_t)&unk_1F1B680F0);
        swift_release_n();
        sub_1C02570B4();
        uint64_t v3 = (void *)swift_allocError();
        *(void *)uint64_t v27 = v23;
        *(void *)(v27 + 8) = v24;
        *(void *)(v27 + 16) = v26;
        *(_OWORD *)(v27 + 24) = xmmword_1C15363B0;
        swift_willThrow();
        sub_1BFE94AD4(v23, v24, 1);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v7);
        a1 = v66;
        goto LABEL_10;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    sub_1BFDAD970();
    long long v92 = 0uLL;
    char v93 = 0;
    sub_1C152065C();
    int v17 = v90;
    long long v92 = xmmword_1C153AB20;
    char v93 = 0;
    sub_1BFE7E344();
    sub_1C152065C();
    int v65 = v17;
    uint64_t v18 = v90;
    int v19 = v91;
    long long v92 = xmmword_1C1557FA0;
    char v93 = 0;
    sub_1C152065C();
    uint64_t v63 = v18;
    int v64 = v19;
    uint64_t v20 = v90;
    LODWORD(v18) = v91;
    long long v92 = xmmword_1C1557FB0;
    char v93 = 0;
    sub_1C152065C();
    uint64_t v62 = v20;
    int v61 = v18;
    uint64_t v21 = v90;
    LODWORD(v20) = v91;
    long long v92 = xmmword_1C1557FD0;
    char v93 = 0;
    sub_1BFDAD8C8();
    sub_1C152065C();
    int v59 = v20;
    uint64_t v60 = v21;
    LOBYTE(v20) = v90;
    long long v92 = xmmword_1C1557FC0;
    char v93 = 0;
    sub_1BFDAD91C();
    sub_1C152065C();
    LOBYTE(v21) = v90;
    long long v92 = xmmword_1C1557FE0;
    char v93 = 0;
    sub_1C152065C();
    uint64_t v58 = v90;
    int v57 = v91;
    long long v92 = xmmword_1C1557FF0;
    char v93 = 0;
    sub_1C152065C();
    uint64_t v56 = v90;
    int v55 = v91;
    long long v92 = xmmword_1C1558010;
    char v93 = 0;
    sub_1C152065C();
    uint64_t v28 = v90;
    int v53 = v91;
    long long v92 = xmmword_1C1558020;
    char v93 = 0;
    uint64_t v54 = v7;
    uint64_t v29 = v13;
    sub_1C152065C();
    uint64_t v52 = v90;
    int v51 = v91;
    long long v92 = xmmword_1C1558030;
    char v93 = 0;
    sub_1C152065C();
    uint64_t v50 = v90;
    int v49 = v91;
    long long v92 = xmmword_1C1558040;
    char v93 = 0;
    sub_1C152065C();
    uint64_t v48 = v90;
    int v47 = v91;
    long long v92 = xmmword_1C1558050;
    char v93 = 0;
    sub_1C152065C();
    uint64_t v46 = v90;
    int v45 = v91;
    long long v92 = xmmword_1C1533150;
    char v93 = 0;
    sub_1C152065C();
    uint64_t v44 = v90;
    int v43 = v91;
    long long v92 = xmmword_1C1558060;
    char v93 = 0;
    sub_1C152065C();
    uint64_t v42 = v90;
    unsigned __int8 v30 = v91;
    long long v92 = xmmword_1C1558000;
    char v93 = 0;
    char v31 = sub_1C152061C();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v29, v54);
    char v32 = v64;
    char v94 = v64;
    char v89 = v61;
    char v87 = v59;
    char v84 = v57;
    char v82 = v55;
    char v80 = v53;
    char v78 = v51;
    char v76 = v49;
    char v74 = v47;
    char v72 = v45;
    char v70 = v43;
    unsigned __int8 v68 = v30;
    *(unsigned char *)a2 = v65;
    *(_DWORD *)(a2 + 1) = v90;
    *(_DWORD *)(a2 + 4) = *(_DWORD *)((char *)&v90 + 3);
    *(void *)(a2 + 8) = v63;
    *(unsigned char *)(a2 + 16) = v32;
    *(_DWORD *)(a2 + 17) = *(_DWORD *)v95;
    *(_DWORD *)(a2 + 20) = *(_DWORD *)&v95[3];
    *(void *)(a2 + 24) = v62;
    *(unsigned char *)(a2 + 32) = v89;
    *(_DWORD *)(a2 + 33) = *(_DWORD *)v88;
    *(_DWORD *)(a2 + 36) = *(_DWORD *)&v88[3];
    *(void *)(a2 + 40) = v60;
    *(unsigned char *)(a2 + 48) = v87;
    *(unsigned char *)(a2 + 49) = v20;
    *(unsigned char *)(a2 + 50) = v21;
    int v33 = v85;
    *(unsigned char *)(a2 + 55) = v86;
    *(_DWORD *)(a2 + 51) = v33;
    *(void *)(a2 + 56) = v58;
    *(unsigned char *)(a2 + 64) = v84;
    *(_DWORD *)(a2 + 68) = *(_DWORD *)&v83[3];
    *(_DWORD *)(a2 + 65) = *(_DWORD *)v83;
    *(void *)(a2 + 72) = v56;
    *(unsigned char *)(a2 + 80) = v82;
    *(_DWORD *)(a2 + 84) = *(_DWORD *)&v81[3];
    *(_DWORD *)(a2 + 81) = *(_DWORD *)v81;
    *(void *)(a2 + 88) = v28;
    *(unsigned char *)(a2 + 96) = v80;
    int v34 = *(_DWORD *)v79;
    *(_DWORD *)(a2 + 100) = *(_DWORD *)&v79[3];
    *(_DWORD *)(a2 + 97) = v34;
    *(void *)(a2 + 104) = v52;
    *(unsigned char *)(a2 + 112) = v78;
    int v35 = *(_DWORD *)v77;
    *(_DWORD *)(a2 + 116) = *(_DWORD *)&v77[3];
    *(_DWORD *)(a2 + 113) = v35;
    *(void *)(a2 + 120) = v50;
    *(unsigned char *)(a2 + 128) = v76;
    int v36 = *(_DWORD *)v75;
    *(_DWORD *)(a2 + 132) = *(_DWORD *)&v75[3];
    *(_DWORD *)(a2 + 129) = v36;
    *(void *)(a2 + 136) = v48;
    *(unsigned char *)(a2 + 144) = v74;
    int v37 = *(_DWORD *)v73;
    *(_DWORD *)(a2 + 148) = *(_DWORD *)&v73[3];
    *(_DWORD *)(a2 + 145) = v37;
    *(void *)(a2 + 152) = v46;
    *(unsigned char *)(a2 + 160) = v72;
    int v38 = *(_DWORD *)v71;
    *(_DWORD *)(a2 + 164) = *(_DWORD *)&v71[3];
    *(_DWORD *)(a2 + 161) = v38;
    *(void *)(a2 + 168) = v44;
    *(unsigned char *)(a2 + 176) = v70;
    int v39 = *(_DWORD *)v69;
    *(_DWORD *)(a2 + 180) = *(_DWORD *)&v69[3];
    *(_DWORD *)(a2 + 177) = v39;
    *(void *)(a2 + 184) = v42;
    *(unsigned char *)(a2 + 192) = v68;
    *(unsigned char *)(a2 + 193) = v31;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  }
LABEL_10:
  sub_1C0038728(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDAD874()
{
  unint64_t result = qword_1EB889A20;
  if (!qword_1EB889A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889A20);
  }
  return result;
}

unint64_t sub_1BFDAD8C8()
{
  unint64_t result = qword_1EB877DD0;
  if (!qword_1EB877DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB877DD0);
  }
  return result;
}

unint64_t sub_1BFDAD91C()
{
  unint64_t result = qword_1EB884AD0;
  if (!qword_1EB884AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884AD0);
  }
  return result;
}

unint64_t sub_1BFDAD970()
{
  unint64_t result = qword_1EB8769A8;
  if (!qword_1EB8769A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8769A8);
  }
  return result;
}

uint64_t sub_1BFDAD9C4(void *a1)
{
  return FormatBlock.encode(to:)(a1);
}

uint64_t FormatBlock.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  int v49 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v50 = (char *)v48 - v8;
  MEMORY[0x1F4188790](v9);
  int v51 = (char *)v48 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v48 - v12;
  sub_1C0879064();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_1C087918C();
  uint64_t v20 = v19;
  uint64_t v21 = sub_1C085F050(&qword_1EB892470, (void (*)(uint64_t))sub_1C087918C);
  sub_1BFEFBD78(v4, v22, v17, v4, v20, (uint64_t)&type metadata for FormatVersions.StarSky, v18, (uint64_t)v16, v21, (uint64_t)&off_1F1C39BA8);
  uint64_t v23 = v2[2];
  uint64_t v24 = v2[3];
  uint64_t v52 = v2;
  uint64_t v25 = qword_1EB887638;
  swift_bridgeObjectRetain();
  if (v25 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1C151928C();
  uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1EB93CA98);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
  v28(v13, v27, v26);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = v53;
  sub_1C06C6EF0(v23, v24, 0, 0, 0, (uint64_t)v13, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v30 = (uint64_t)v16;
  if (!v29)
  {
    char v31 = v52;
    swift_beginAccess();
    uint64_t v32 = v31[4];
    uint64_t v33 = (uint64_t)v51;
    v28(v51, v27, v26);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    char v34 = sub_1C0845050(v33, 1, 0, 0, (uint64_t)sub_1C01B158C, 0);
    uint64_t v53 = 0;
    if (v34)
    {
      long long v58 = xmmword_1C153AB20;
      char v59 = 0;
      uint64_t v57 = v32;
      sub_1C08790F8();
      v48[1] = v36;
      sub_1C085F050(&qword_1EB86EB90, (void (*)(uint64_t))sub_1C08790F8);
      sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB863300, (uint64_t)&type metadata for FormatSourceMapNode, MEMORY[0x1E4FBB320]);
      sub_1BFE407E0();
      uint64_t v37 = v53;
      sub_1C1520BAC();
      uint64_t v53 = v37;
      if (v37)
      {
        sub_1BFEFEB68((uint64_t)v51, type metadata accessor for FormatVersionRequirement);
LABEL_6:
        swift_bridgeObjectRelease();
        return sub_1BFEFEB68(v30, (uint64_t (*)(void))sub_1C0879064);
      }
      uint64_t v33 = (uint64_t)v51;
    }
    sub_1BFEFEB68(v33, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v38 = (uint64_t)v50;
    v28(v50, v27, v26);
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = v53;
    sub_1C06DF288(v39, 2, 0, 0);
    sub_1BFEFEB68(v38, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    if (v40) {
      return sub_1BFEFEB68(v30, (uint64_t (*)(void))sub_1C0879064);
    }
    uint64_t v41 = v52;
    swift_beginAccess();
    uint64_t v42 = v41[6];
    uint64_t v43 = (uint64_t)v49;
    v28(v49, v27, v26);
    swift_storeEnumTagMultiPayload();
    uint64_t v44 = *(void *)(v42 + 16);
    swift_bridgeObjectRetain();
    if (v44 && (sub_1C0845050(v43, 3, 0, 0, (uint64_t)sub_1C01B158C, 0) & 1) != 0)
    {
      long long v55 = xmmword_1C1557FB0;
      char v56 = 0;
      uint64_t v45 = swift_bridgeObjectRetain();
      uint64_t v46 = sub_1BFE71F8C(v45);
      swift_bridgeObjectRelease();
      uint64_t v54 = v46;
      swift_retain();
      sub_1BFE726FC((uint64_t *)&v54, sub_1BFE72780, sub_1BFE72EAC);
      swift_release();
      uint64_t v60 = (uint64_t)v54;
      sub_1C08790F8();
      sub_1C085F050(&qword_1EB86EB90, (void (*)(uint64_t))sub_1C08790F8);
      uint64_t v47 = MEMORY[0x1E4FBB1A0];
      sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1BFE71F14((unint64_t *)&qword_1EB85DF50, (unint64_t *)&qword_1EB879F20, v47);
      sub_1C1520BAC();
      swift_release();
      uint64_t v43 = (uint64_t)v49;
    }
    sub_1BFEFEB68(v43, type metadata accessor for FormatVersionRequirement);
    goto LABEL_6;
  }
  return sub_1BFEFEB68(v30, (uint64_t (*)(void))sub_1C0879064);
}

uint64_t sub_1BFDAE180@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBoolBinding.init(from:)(a1, a2);
}

uint64_t FormatBoolBinding.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v31 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v26 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
    uint64_t v10 = a1;
LABEL_19:
    sub_1C0038728(v10, (uint64_t)v3);
    swift_willThrow();

    uint64_t v24 = (uint64_t)v10;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  uint64_t v11 = v7;
  uint64_t v12 = v31;
  uint64_t v13 = a1[3];
  uint64_t v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  uint64_t v14 = sub_1C1520EAC();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = v9;
  if (v13)
  {
    uint64_t v16 = sub_1C152070C();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = (unint64_t *)(v16 + 40);
      while (1)
      {
        unint64_t v19 = *v18;
        if (*v18 >= 4) {
          break;
        }
        v18 += 2;
        if (!--v17) {
          goto LABEL_8;
        }
      }
      uint64_t v22 = *(v18 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v23 = v22;
      *(void *)(v23 + 8) = v19;
      *(void *)(v23 + 16) = &unk_1F1B841C0;
      *(_OWORD *)(v23 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v22, v19);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v10 = v27;
      goto LABEL_19;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BFDAE7A8();
  long long v30 = 0uLL;
  sub_1C15206EC();
  switch((char)v28)
  {
    case 1:
      long long v30 = xmmword_1C152C800;
      sub_1BFDAE7FC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v21 = v28;
      __int16 v20 = 0x2000;
      break;
    case 2:
      long long v30 = xmmword_1C152C800;
      sub_1BFDAE8F8();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v21 = v28;
      __int16 v20 = 0x4000;
      break;
    case 3:
      long long v30 = xmmword_1C152C800;
      sub_1BFDAE8A4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v21 = v28;
      __int16 v20 = v29 | 0x6000;
      break;
    case 4:
      long long v30 = xmmword_1C152C800;
      sub_1BFCBCC3C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v21 = v28;
      __int16 v20 = 0x8000;
      break;
    case 5:
      long long v30 = xmmword_1C152C800;
      sub_1C017E284();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v21 = v28;
      __int16 v20 = v29 | 0xA000;
      break;
    case 6:
      long long v30 = xmmword_1C152C800;
      sub_1C0879B24();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v21 = v28;
      __int16 v20 = -16384;
      break;
    case 7:
      long long v30 = xmmword_1C152C800;
      sub_1C0465CB0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v21 = v28;
      __int16 v20 = -8192;
      break;
    default:
      long long v30 = xmmword_1C152C800;
      sub_1BFDAE850();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      __int16 v20 = 0;
      uint64_t v21 = v28;
      break;
  }
  uint64_t v24 = (uint64_t)v27;
  *(void *)uint64_t v12 = v21;
  *(_WORD *)(v12 + 8) = v20;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

unint64_t sub_1BFDAE7A8()
{
  unint64_t result = qword_1EB8881F0;
  if (!qword_1EB8881F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8881F0);
  }
  return result;
}

unint64_t sub_1BFDAE7FC()
{
  unint64_t result = qword_1EB8770C0;
  if (!qword_1EB8770C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8770C0);
  }
  return result;
}

unint64_t sub_1BFDAE850()
{
  unint64_t result = qword_1EB8772A8;
  if (!qword_1EB8772A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8772A8);
  }
  return result;
}

unint64_t sub_1BFDAE8A4()
{
  unint64_t result = qword_1EB875FE8;
  if (!qword_1EB875FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875FE8);
  }
  return result;
}

unint64_t sub_1BFDAE8F8()
{
  unint64_t result = qword_1EB87EB60;
  if (!qword_1EB87EB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87EB60);
  }
  return result;
}

uint64_t sub_1BFDAE94C(void *a1)
{
  return FormatColorProcessor.encode(to:)(a1);
}

uint64_t FormatColorProcessor.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  long long v77 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v79 = (char *)&v76 - v7;
  MEMORY[0x1F4188790](v8);
  char v78 = (char *)&v76 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v76 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v76 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v76 - v17;
  MEMORY[0x1F4188790](v19);
  char v76 = (char *)&v76 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v76 - v22;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v27 = *v2;
  uint64_t v28 = a1[3];
  uint64_t v29 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  unint64_t v30 = sub_1BFEB6A24();
  char v80 = v26;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatColorProcessor, v31, v28, (uint64_t)&type metadata for FormatColorProcessor, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v29, (uint64_t)v26, v30, (uint64_t)&off_1F1C39B68);
  switch(v27 >> 61)
  {
    case 1uLL:
      char v38 = *(unsigned char *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      double v39 = *(double *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_1C151928C();
      uint64_t v41 = __swift_project_value_buffer(v40, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v15, v41, v40);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v36 = (uint64_t)v80;
      sub_1BFDAFA50(3, v38, (uint64_t)v15, v39);
      uint64_t v37 = (uint64_t)v15;
      goto LABEL_27;
    case 2uLL:
      uint64_t v42 = *(void *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v43 = *(void *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v44 = qword_1EB882D28;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v44 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_1C151928C();
      uint64_t v46 = __swift_project_value_buffer(v45, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v12, v46, v45);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v47 = v42;
      uint64_t v48 = (uint64_t)v80;
      sub_1BFDAF538(4, v47, v43, (uint64_t)v12);
      sub_1BFEFEB68((uint64_t)v12, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v48, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_bridgeObjectRelease();
      return swift_release();
    case 3uLL:
      uint64_t v49 = *(void *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v50 = qword_1EB887638;
      swift_retain();
      if (v50 != -1) {
        swift_once();
      }
      uint64_t v51 = sub_1C151928C();
      uint64_t v52 = __swift_project_value_buffer(v51, (uint64_t)qword_1EB93CA98);
      uint64_t v53 = (uint64_t)v78;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v78, v52, v51);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v54 = v49;
      uint64_t v55 = (uint64_t)v80;
      sub_1BFDAF720(5, v54, v53);
      uint64_t v56 = v53;
      goto LABEL_17;
    case 4uLL:
      uint64_t v57 = *(void *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v58 = *(void *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      char v59 = *(unsigned char *)((v27 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v60 = qword_1EB887650;
      swift_retain();
      if (v60 != -1) {
        swift_once();
      }
      uint64_t v61 = sub_1C151928C();
      uint64_t v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1EB93CAE0);
      uint64_t v63 = (uint64_t)v79;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v79, v62, v61);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v64 = v57;
      uint64_t v55 = (uint64_t)v80;
      sub_1BFDAF8B4(6, v64, v58, v59, v63);
      uint64_t v56 = v63;
LABEL_17:
      sub_1BFEFEB68(v56, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v55, (uint64_t (*)(void))sub_1BFEFF7D8);
      return swift_release();
    case 5uLL:
      if (v27 == 0xA000000000000000)
      {
        uint64_t v36 = (uint64_t)v80;
        if (qword_1EB882D28 != -1) {
          swift_once();
        }
        uint64_t v71 = sub_1C151928C();
        uint64_t v72 = __swift_project_value_buffer(v71, (uint64_t)qword_1EB93CAB0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v71 - 8) + 16))(v23, v72, v71);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        sub_1C0733BD0(0, (uint64_t)v23);
        uint64_t v37 = (uint64_t)v23;
LABEL_27:
        sub_1BFEFEB68(v37, type metadata accessor for FormatVersionRequirement);
        uint64_t v73 = v36;
      }
      else
      {
        uint64_t v66 = (uint64_t)v80;
        if (v27 == 0xA000000000000008)
        {
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v67 = sub_1C151928C();
          uint64_t v68 = __swift_project_value_buffer(v67, (uint64_t)qword_1EB93CAB0);
          uint64_t v69 = (uint64_t)v76;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v67 - 8) + 16))(v76, v68, v67);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v70 = 1;
        }
        else
        {
          if (qword_1EB887630 != -1) {
            swift_once();
          }
          uint64_t v74 = sub_1C151928C();
          uint64_t v75 = __swift_project_value_buffer(v74, (uint64_t)qword_1EB93CA80);
          uint64_t v69 = (uint64_t)v77;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v74 - 8) + 16))(v77, v75, v74);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v70 = 7;
        }
        sub_1C0733BD0(v70, v69);
        sub_1BFEFEB68(v69, type metadata accessor for FormatVersionRequirement);
        uint64_t v73 = v66;
      }
      return sub_1BFEFEB68(v73, (uint64_t (*)(void))sub_1BFEFF7D8);
    default:
      char v32 = *(unsigned char *)(v27 + 16);
      double v33 = *(double *)(v27 + 24);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_1C151928C();
      uint64_t v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v18, v35, v34);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v36 = (uint64_t)v80;
      sub_1BFDAF2F8(2, v32, (uint64_t)v18, v33);
      uint64_t v37 = (uint64_t)v18;
      goto LABEL_27;
  }
}

uint64_t sub_1BFDAF2F8(char a1, char a2, uint64_t a3, double a4)
{
  char v19 = a1;
  char v17 = a2;
  double v18 = a4;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C090820C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDAF490();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFDAF4E4();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDAF490()
{
  unint64_t result = qword_1EB866A60;
  if (!qword_1EB866A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866A60);
  }
  return result;
}

unint64_t sub_1BFDAF4E4()
{
  unint64_t result = qword_1EB85C298;
  if (!qword_1EB85C298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C298);
  }
  return result;
}

uint64_t sub_1BFDAF538(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C090820C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDAF490();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFDAF6CC();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDAF6CC()
{
  unint64_t result = qword_1EB85C250;
  if (!qword_1EB85C250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C250);
  }
  return result;
}

uint64_t sub_1BFDAF720(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C090820C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDAF490();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE10198();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDAF8B4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  char v20 = a4 & 1;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C090820C;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDAF490();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFDAFC3C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDAFA50(char a1, char a2, uint64_t a3, double a4)
{
  char v19 = a1;
  char v17 = a2;
  double v18 = a4;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C090820C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDAF490();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFDAFBE8();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDAFBE8()
{
  unint64_t result = qword_1EB85C2A0;
  if (!qword_1EB85C2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C2A0);
  }
  return result;
}

unint64_t sub_1BFDAFC3C()
{
  unint64_t result = qword_1EB860770;
  if (!qword_1EB860770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860770);
  }
  return result;
}

void *initializeWithCopy for HeadlineViewLayout(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1BFDAFD64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSelectorExpression.init(from:)(a1, a2);
}

uint64_t FormatSelectorExpression.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  v23[0] = a2;
  sub_1C0860D40();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0860DD4();
  sub_1C085F050(&qword_1EB892140, (void (*)(uint64_t))sub_1C0860DD4);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)v23[0];
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      long long v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v17 = *((void *)v15 - 1);
      v23[0] = *((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v18 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v18);
      v23[-4] = &_s10CodingKeysON_265;
      v23[-3] = sub_1C0860E58();
      v23[-2] = sub_1BFDB00F4();
      v23[-1] = sub_1C0860EAC();
      swift_getKeyPath();
      swift_retain();
      uint64_t v19 = sub_1C085FA20((uint64_t)&unk_1F1B66758);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v20 = v23[0];
      *(void *)uint64_t v21 = v23[0];
      *(void *)(v21 + 8) = v17;
      *(void *)(v21 + 16) = v19;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v20, v17, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE9420C();
  v23[1] = 0;
  v23[2] = 0;
  char v24 = 0;
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v16 = v26;
  *uint64_t v12 = v25;
  v12[1] = v16;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDB00F4()
{
  unint64_t result = qword_1EB88B698;
  if (!qword_1EB88B698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88B698);
  }
  return result;
}

uint64_t sub_1BFDB0148()
{
  return sub_1C151E57C() & 1;
}

uint64_t sub_1BFDB01D8(void *a1)
{
  return FormatWebEmbedNode.encode(to:)(a1);
}

uint64_t FormatWebEmbedNode.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v107 = (uint64_t)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v108 = (char *)&v103 - v8;
  MEMORY[0x1F4188790](v9);
  v109 = (char *)&v103 - v10;
  MEMORY[0x1F4188790](v11);
  v110 = (char *)&v103 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v112 = (uint64_t)&v103 - v14;
  MEMORY[0x1F4188790](v15);
  v111 = (char *)&v103 - v16;
  MEMORY[0x1F4188790](v17);
  v113 = (char *)&v103 - v18;
  MEMORY[0x1F4188790](v19);
  v114 = (char *)&v103 - v20;
  MEMORY[0x1F4188790](v21);
  v115 = (char *)&v103 - v22;
  MEMORY[0x1F4188790](v23);
  v116 = (char *)&v103 - v24;
  MEMORY[0x1F4188790](v25);
  v117 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v103 - v26);
  MEMORY[0x1F4188790](v27);
  v118 = (char *)&v103 - v28;
  MEMORY[0x1F4188790](v29);
  v119 = (char *)&v103 - v30;
  MEMORY[0x1F4188790](v31);
  double v33 = (char *)&v103 - v32;
  sub_1C08CC8A8();
  MEMORY[0x1F4188790](v34 - 8);
  uint64_t v36 = (char *)&v103 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a1[3];
  uint64_t v37 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v38);
  sub_1C08CC9D0();
  uint64_t v40 = v39;
  uint64_t v41 = sub_1C085F050(&qword_1EB891D40, (void (*)(uint64_t))sub_1C08CC9D0);
  sub_1BFEFBD78(v4, v42, v38, v4, v40, (uint64_t)&type metadata for FormatVersions.JazzkonC, v37, (uint64_t)v36, v41, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v43 = v2[2];
  uint64_t v44 = v2[3];
  v120 = v2;
  uint64_t v45 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v45 != -1) {
    swift_once();
  }
  uint64_t v46 = sub_1C151928C();
  uint64_t v47 = __swift_project_value_buffer(v46, (uint64_t)qword_1EB93CAB0);
  uint64_t v48 = *(void *)(v46 - 8);
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
  uint64_t v50 = (char *)(v48 + 16);
  v49(v33, v47, v46);
  uint64_t v51 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v52 = v121;
  sub_1C06D3D9C(v43, v44, 0, 0, 0, (uint64_t)v33, (uint64_t)sub_1C01B158C, 0);
  if (v52)
  {
    sub_1BFEFEB68((uint64_t)v33, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v53 = (uint64_t)v36;
    return sub_1BFEFEB68(v53, (uint64_t (*)(void))sub_1C08CC8A8);
  }
  sub_1BFEFEB68((uint64_t)v33, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v121 = 0;
  uint64_t v54 = v120[4];
  uint64_t v55 = (uint64_t)v119;
  v49(v119, v47, v46);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  uint64_t v56 = v121;
  sub_1C06BE5BC(v54, 1, 0, 0, v55, (uint64_t)sub_1C01B158C, 0);
  if (v56)
  {
    sub_1BFEFEB68(v55, type metadata accessor for FormatVersionRequirement);
    swift_release();
    uint64_t v53 = (uint64_t)v36;
    return sub_1BFEFEB68(v53, (uint64_t (*)(void))sub_1C08CC8A8);
  }
  sub_1BFEFEB68(v55, type metadata accessor for FormatVersionRequirement);
  swift_release();
  uint64_t v121 = 0;
  uint64_t v57 = v120[5];
  uint64_t v58 = v120[6];
  uint64_t v59 = (uint64_t)v118;
  v49(v118, v47, v46);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v119 = v36;
  uint64_t v60 = v121;
  sub_1C0718EF8(v57, v58, 2, 0, 0, v59, (uint64_t)sub_1C01B158C, 0);
  if (v60)
  {
    sub_1BFEFEB68(v59, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v53 = (uint64_t)v119;
    return sub_1BFEFEB68(v53, (uint64_t (*)(void))sub_1C08CC8A8);
  }
  uint64_t v61 = v50;
  uint64_t v106 = v47;
  uint64_t v121 = v46;
  sub_1BFEFEB68(v59, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v62 = v120[7];
  uint64_t v63 = qword_1EB887630;
  swift_retain();
  if (v63 != -1) {
    swift_once();
  }
  uint64_t v64 = v121;
  uint64_t v65 = __swift_project_value_buffer(v121, (uint64_t)qword_1EB93CA80);
  uint64_t v66 = (uint64_t)v117;
  v49((char *)v117, v65, v64);
  swift_storeEnumTagMultiPayload();
  v118 = v61;
  sub_1C0719140(v62, 3, 0, 0, v66, (uint64_t)sub_1C01B158C, 0);
  uint64_t v104 = v65;
  sub_1BFEFEB68(v66, type metadata accessor for FormatVersionRequirement);
  swift_release();
  uint64_t v67 = v120;
  unint64_t v68 = v120[8];
  uint64_t v69 = (uint64_t)v116;
  uint64_t v70 = v106;
  v49(v116, v106, v64);
  uint64_t v105 = v51;
  swift_storeEnumTagMultiPayload();
  sub_1BFF35EA4(v68);
  sub_1C06BE754(v68, 4, 0, 0, v69, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v69, type metadata accessor for FormatVersionRequirement);
  sub_1BFF322A8(v68);
  uint64_t v71 = (uint64_t)v115;
  v49(v115, v104, v64);
  swift_storeEnumTagMultiPayload();
  uint64_t v72 = swift_retain();
  sub_1C07193B0(v72, 5, 0, 0, v71, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v71, type metadata accessor for FormatVersionRequirement);
  swift_release();
  swift_beginAccess();
  uint64_t v73 = (uint64_t)v114;
  v49(v114, v70, v64);
  swift_storeEnumTagMultiPayload();
  uint64_t v74 = swift_bridgeObjectRetain();
  sub_1C06D3FDC(v74, 6, 0, 0);
  sub_1BFEFEB68(v73, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v76 = (uint64_t)v113;
  v49(v113, v70, v64);
  swift_storeEnumTagMultiPayload();
  uint64_t v77 = swift_retain();
  sub_1C0719600(v77, 7, 0, 0, v76, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v76, type metadata accessor for FormatVersionRequirement);
  swift_release();
  swift_beginAccess();
  uint64_t v78 = v67[12];
  uint64_t v79 = (uint64_t)v111;
  v117 = (void (*)(uint64_t, uint64_t, uint64_t))v49;
  v49(v111, v70, v64);
  swift_storeEnumTagMultiPayload();
  if (v78)
  {
    sub_1C083BF7C(v79, 8, 0, 0, (uint64_t)sub_1C01B158C, 0);
    long long v129 = xmmword_1C1558010;
    char v130 = 0;
    *(void *)&long long v127 = v78;
    sub_1C08CC93C();
    sub_1C085F050(&qword_1EB86E290, (void (*)(uint64_t))sub_1C08CC93C);
    sub_1C1520BAC();
    uint64_t v79 = (uint64_t)v111;
  }
  sub_1BFEFEB68(v79, type metadata accessor for FormatVersionRequirement);
  char v80 = v120;
  swift_beginAccess();
  unint64_t v81 = v80[13];
  sub_1BFE6FA30(v81);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v82 = v121;
  uint64_t v83 = __swift_project_value_buffer(v121, (uint64_t)qword_1EB93CA98);
  v117(v112, v83, v82);
  swift_storeEnumTagMultiPayload();
  if (v81 == 0x8000000000000000)
  {
    char v84 = v119;
  }
  else
  {
    char v84 = v119;
    if (sub_1C083BF7C(v112, 9, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v127 = xmmword_1C1558020;
      char v128 = 0;
      *(void *)&long long v125 = v81;
      sub_1C08CC93C();
      sub_1C085F050(&qword_1EB86E290, (void (*)(uint64_t))sub_1C08CC93C);
      sub_1C009DA10();
      sub_1C1520BAC();
    }
    char v80 = v120;
  }
  uint64_t v85 = (uint64_t)v110;
  sub_1BFEFEB68(v112, type metadata accessor for FormatVersionRequirement);
  sub_1BFF0056C(v81);
  swift_beginAccess();
  char v86 = *((unsigned char *)v80 + 112);
  uint64_t v87 = v121;
  if (qword_1EB887650 != -1) {
    swift_once();
  }
  uint64_t v88 = __swift_project_value_buffer(v87, (uint64_t)qword_1EB93CAE0);
  v117(v85, v88, v87);
  swift_storeEnumTagMultiPayload();
  if ((v86 & 1) == 0)
  {
    if (sub_1C083BF7C(v85, 10, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v125 = xmmword_1C1558030;
      char v126 = 0;
      LOBYTE(v123) = 0;
      sub_1C08CC93C();
      sub_1C085F050(&qword_1EB86E290, (void (*)(uint64_t))sub_1C08CC93C);
      sub_1C1520BAC();
    }
    char v80 = v120;
    uint64_t v85 = (uint64_t)v110;
  }
  sub_1BFEFEB68(v85, type metadata accessor for FormatVersionRequirement);
  uint64_t v89 = v80[15];
  unsigned __int8 v90 = *((unsigned char *)v80 + 128);
  uint64_t v91 = (uint64_t)v109;
  v117((uint64_t)v109, v106, v121);
  swift_storeEnumTagMultiPayload();
  uint64_t v92 = (uint64_t)v84;
  sub_1C0719870(v89, v90, 11, 0, 0, v91, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v91, type metadata accessor for FormatVersionRequirement);
  uint64_t v93 = v80[17];
  uint64_t v94 = v80[18];
  uint64_t v95 = (uint64_t)v108;
  v117((uint64_t)v108, v104, v121);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C0718EF8(v93, v94, 12, 0, 0, v95, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v95, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v96 = v80[19];
  uint64_t v97 = qword_1EB887640;
  swift_bridgeObjectRetain();
  if (v97 != -1) {
    swift_once();
  }
  uint64_t v98 = v121;
  uint64_t v99 = __swift_project_value_buffer(v121, (uint64_t)qword_1EB93CAC8);
  v117(v107, v99, v98);
  swift_storeEnumTagMultiPayload();
  if (*(void *)(v96 + 16))
  {
    if (sub_1C083BF7C(v107, 13, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v123 = xmmword_1C1533150;
      char v124 = 0;
      uint64_t v100 = swift_bridgeObjectRetain();
      v101 = sub_1BFE71F8C(v100);
      swift_bridgeObjectRelease();
      v122 = v101;
      swift_retain();
      sub_1BFE726FC((uint64_t *)&v122, sub_1BFE72780, sub_1BFE72EAC);
      swift_release();
      uint64_t v131 = (uint64_t)v122;
      sub_1C08CC93C();
      sub_1C085F050(&qword_1EB86E290, (void (*)(uint64_t))sub_1C08CC93C);
      uint64_t v102 = MEMORY[0x1E4FBB1A0];
      sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1BFE71F14((unint64_t *)&qword_1EB85DF50, (unint64_t *)&qword_1EB879F20, v102);
      sub_1C1520BAC();
      swift_release();
    }
  }
  sub_1BFEFEB68(v107, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BFEFEB68(v92, (uint64_t (*)(void))sub_1C08CC8A8);
}

unint64_t sub_1BFDB1740()
{
  unint64_t result = qword_1EB85BF78;
  if (!qword_1EB85BF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BF78);
  }
  return result;
}

uint64_t sub_1BFDB1794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FormatLatestCompatibleFileReference.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t FormatLatestCompatibleFileReference.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v31 = a4;
  uint64_t v8 = type metadata accessor for FormatFileReference();
  uint64_t v9 = sub_1C151FD8C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v29 - v11;
  uint64_t v32 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v29 - v14;
  sub_1BFC66384(a1, (uint64_t)v33);
  FormatFileReferenceCollection.init(from:)(v33, &v34);
  if (v4) {
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  v29[0] = v9;
  v29[1] = 0;
  uint64_t v30 = a1;
  uint64_t v17 = v34;
  v33[0] = v34;
  type metadata accessor for FormatFileReferenceCollection();
  FormatFileReferenceCollection.latestFormatCompatible.getter();
  uint64_t v18 = v32;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v12, 1, v8) == 1)
  {
    uint64_t v19 = (*(uint64_t (**)(char *, void))(v10 + 8))(v12, v29[0]);
    v33[0] = v17;
    MEMORY[0x1F4188790](v19);
    v29[-2] = a2;
    v29[-1] = a3;
    uint64_t v20 = sub_1C151ED5C();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v23 = sub_1C035E7C8((void (*)(char *, char *))sub_1C1301B3C, (uint64_t)&v29[-4], v20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v22);
    swift_bridgeObjectRelease();
    v33[0] = v23;
    sub_1BFED9C20();
    sub_1BFE99E40();
    uint64_t v24 = sub_1C151E55C();
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    sub_1C02570B4();
    swift_allocError();
    *uint64_t v27 = v24;
    v27[1] = v26;
    v27[3] = 0;
    v27[4] = 0;
    v27[2] = 0;
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v30);
    uint64_t v28 = *(uint64_t (**)(void))(v18 + 32);
    ((void (*)(char *, char *, uint64_t))v28)(v15, v12, v8);
    *(void *)(v31 + *(int *)(type metadata accessor for FormatLatestCompatibleFileReference() + 36)) = v17;
    return v28();
  }
}

uint64_t Array<A>.latestFormatCompatible.getter()
{
  if (qword_1EB87BD00 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C151928C();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB8799C8);
  return Array<A>.latestFormatCompatible(with:)();
}

uint64_t Array<A>.latestFormatCompatible(with:)()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BFDB1C90()
{
  unint64_t result = qword_1EB8714E0;
  if (!qword_1EB8714E0)
  {
    sub_1C151928C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8714E0);
  }
  return result;
}

uint64_t Array<A>.formatCompatible(with:)()
{
  return sub_1C152023C();
}

uint64_t type metadata accessor for FormatLatestCompatibleFileReference()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FormatFileReferenceCollection()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FormatFileReferenceCollection.latestFormatCompatible.getter()
{
  type metadata accessor for FormatFileReference();
  return Array<A>.latestFormatCompatible.getter();
}

uint64_t initializeWithCopy for FeedLayoutCacheItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFDB1E78@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatContentSlot.init(from:)(a1, a2);
}

uint64_t FormatContentSlot.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BFDB2650(0, &qword_1EB87A538, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFDB2854();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v27) = 0;
  uint64_t v11 = sub_1C152069C();
  uint64_t v25 = v12;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
  char v26 = 1;
  sub_1BFDB23BC((unint64_t *)&qword_1EB879DC8, (void (*)(void))sub_1C0081A44);
  sub_1C152065C();
  uint64_t v13 = v27;
  if (!v27) {
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  uint64_t v24 = v13;
  sub_1BFC6CA08(0, &qword_1EB880CF8);
  char v26 = 2;
  sub_1BFDB27D8(&qword_1EB880D00, (void (*)(void))sub_1BFD34D88);
  sub_1C152065C();
  uint64_t v14 = v27;
  if (!v27) {
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = v14;
  sub_1BFDB2774(0, &qword_1EB890000, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItem, MEMORY[0x1E4FBB320]);
  char v26 = 3;
  sub_1BFDB26B4(&qword_1EB890008, &qword_1EB889FD8);
  sub_1C152065C();
  uint64_t v15 = v27;
  if (!v27) {
    uint64_t v15 = MEMORY[0x1E4FBC860];
  }
  uint64_t v22 = v15;
  sub_1BFEBC4B4();
  char v26 = 4;
  sub_1BFDB25E8();
  sub_1C152065C();
  if (v27) {
    uint64_t v16 = v27;
  }
  else {
    uint64_t v16 = MEMORY[0x1E4FBC870];
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v18 = v24;
  uint64_t v17 = v25;
  *a2 = v11;
  a2[1] = v17;
  uint64_t v20 = v22;
  uint64_t v19 = v23;
  a2[2] = v18;
  a2[3] = v19;
  a2[4] = v20;
  a2[5] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFDB23BC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFC6CA08(255, (unint64_t *)&qword_1EB879DC0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFDB2438(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0CB31B0(255, (unint64_t *)&qword_1EB879DC0, (uint64_t)&type metadata for FormatProperty, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFDB24C8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFE9DFF4(255, (unint64_t *)&qword_1EB879DC0, (uint64_t)&type metadata for FormatProperty, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFDB2558(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFE9E040(255, (unint64_t *)&qword_1EB879DC0, (uint64_t)&type metadata for FormatProperty, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BFDB25E8()
{
  unint64_t result = qword_1EB87A020;
  if (!qword_1EB87A020)
  {
    sub_1BFEBC4B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87A020);
  }
  return result;
}

void sub_1BFDB2650(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFDB2854();
    unint64_t v7 = a3(a1, &type metadata for FormatContentSlot.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1BFDB26B4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFDB2774(255, &qword_1EB890000, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItem, MEMORY[0x1E4FBB320]);
    sub_1C0075C44(a2, (void (*)(uint64_t))type metadata accessor for FormatContentSlotItem);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFDB2774(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFDB27D8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFC6CA08(255, &qword_1EB880CF8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BFDB2854()
{
  unint64_t result = qword_1EB875608;
  if (!qword_1EB875608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875608);
  }
  return result;
}

uint64_t sub_1BFDB28A8(void *a1)
{
  return FormatColorComponent.encode(to:)(a1);
}

uint64_t FormatColorComponent.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v55 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v54 = (char *)&v49 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v53 = (char *)&v49 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v52 = (char *)&v49 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v51 = (char *)&v49 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v50 = (char *)&v49 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v49 = (char *)&v49 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v49 - v18;
  uint64_t v56 = *v1;
  uint64_t v57 = a1;
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1C151928C();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB93CAB0);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
  v24(v19, v23, v22);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = v60;
  sub_1BFE97CE8((uint64_t)v19, (uint64_t)sub_1C01B158C, 0, v20, v21);
  if (v25) {
    return sub_1BFEFEB68((uint64_t)v19, type metadata accessor for FormatVersionRequirement);
  }
  sub_1BFEFEB68((uint64_t)v19, type metadata accessor for FormatVersionRequirement);
  uint64_t v27 = v57;
  uint64_t v60 = 0;
  switch(v56)
  {
    case 1:
      uint64_t v31 = v57[3];
      uint64_t v56 = v57[4];
      __swift_project_boxed_opaque_existential_1(v57, v31);
      uint64_t v32 = (uint64_t)v50;
      v24(v50, v23, v22);
      swift_storeEnumTagMultiPayload();
      uint64_t v33 = v60;
      sub_1BFE97CE8(v32, (uint64_t)sub_1C01B158C, 0, v31, v56);
      uint64_t result = sub_1BFEFEB68(v32, type metadata accessor for FormatVersionRequirement);
      if (!v33) {
        goto LABEL_20;
      }
      break;
    case 2:
      uint64_t v34 = v57[3];
      uint64_t v56 = v57[4];
      __swift_project_boxed_opaque_existential_1(v57, v34);
      uint64_t v35 = (uint64_t)v51;
      v24(v51, v23, v22);
      swift_storeEnumTagMultiPayload();
      uint64_t v36 = v60;
      sub_1BFE97CE8(v35, (uint64_t)sub_1C01B158C, 0, v34, v56);
      uint64_t result = sub_1BFEFEB68(v35, type metadata accessor for FormatVersionRequirement);
      if (!v36) {
        goto LABEL_20;
      }
      break;
    case 3:
      uint64_t v37 = v57[3];
      uint64_t v56 = v57[4];
      __swift_project_boxed_opaque_existential_1(v57, v37);
      uint64_t v38 = (uint64_t)v52;
      v24(v52, v23, v22);
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = v60;
      sub_1BFE97CE8(v38, (uint64_t)sub_1C01B158C, 0, v37, v56);
      uint64_t result = sub_1BFEFEB68(v38, type metadata accessor for FormatVersionRequirement);
      if (!v39) {
        goto LABEL_20;
      }
      break;
    case 4:
      uint64_t v40 = v57[3];
      uint64_t v56 = v57[4];
      __swift_project_boxed_opaque_existential_1(v57, v40);
      uint64_t v41 = (uint64_t)v53;
      v24(v53, v23, v22);
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = v60;
      sub_1BFE97CE8(v41, (uint64_t)sub_1C01B158C, 0, v40, v56);
      uint64_t result = sub_1BFEFEB68(v41, type metadata accessor for FormatVersionRequirement);
      if (!v42) {
        goto LABEL_20;
      }
      break;
    case 5:
      uint64_t v43 = v57[3];
      uint64_t v56 = v57[4];
      __swift_project_boxed_opaque_existential_1(v57, v43);
      uint64_t v44 = (uint64_t)v54;
      v24(v54, v23, v22);
      swift_storeEnumTagMultiPayload();
      uint64_t v45 = v60;
      sub_1BFE97CE8(v44, (uint64_t)sub_1C01B158C, 0, v43, v56);
      uint64_t result = sub_1BFEFEB68(v44, type metadata accessor for FormatVersionRequirement);
      if (!v45) {
        goto LABEL_20;
      }
      break;
    case 6:
      uint64_t v46 = v57[3];
      uint64_t v56 = v57[4];
      __swift_project_boxed_opaque_existential_1(v57, v46);
      uint64_t v47 = (uint64_t)v55;
      v24(v55, v23, v22);
      swift_storeEnumTagMultiPayload();
      uint64_t v48 = v60;
      sub_1BFE97CE8(v47, (uint64_t)sub_1C01B158C, 0, v46, v56);
      uint64_t result = sub_1BFEFEB68(v47, type metadata accessor for FormatVersionRequirement);
      if (!v48) {
        goto LABEL_20;
      }
      break;
    default:
      uint64_t v28 = v57[3];
      uint64_t v56 = v57[4];
      __swift_project_boxed_opaque_existential_1(v57, v28);
      uint64_t v29 = (uint64_t)v49;
      v24(v49, v23, v22);
      swift_storeEnumTagMultiPayload();
      uint64_t v30 = v60;
      sub_1BFE97CE8(v29, (uint64_t)sub_1C01B158C, 0, v28, v56);
      uint64_t result = sub_1BFEFEB68(v29, type metadata accessor for FormatVersionRequirement);
      if (!v30)
      {
LABEL_20:
        __swift_project_boxed_opaque_existential_1(v27, v27[3]);
        sub_1C1520EEC();
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v59);
        sub_1C1520AFC();
        swift_bridgeObjectRelease();
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      }
      break;
  }
  return result;
}

uint64_t sub_1BFDB30C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDB3284();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDB30FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDB3284();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDB3134@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDB3284();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDB316C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDB3284();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDB31A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDB3284();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDB31DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDB3284();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDB3214@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDB3284();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDB324C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDB3284();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDB3284()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFDB32CC(void *a1)
{
  return FormatGradient.encode(to:)(a1);
}

uint64_t FormatGradient.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v44 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v45 = (char *)&v42 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v42 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v42 - v13;
  sub_1C0889344();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *v1;
  uint64_t v46 = v1[1];
  double v19 = *((double *)v1 + 2);
  double v20 = *((double *)v1 + 3);
  double v21 = *((double *)v1 + 4);
  double v22 = *((double *)v1 + 5);
  uint64_t v23 = v1[6];
  uint64_t v42 = v1[7];
  uint64_t v43 = v23;
  uint64_t v24 = a1[3];
  uint64_t v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_1C0889218();
  uint64_t v27 = v26;
  uint64_t v28 = sub_1C085F050(&qword_1EB892520, (void (*)(uint64_t))sub_1C0889218);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatGradient, v29, v24, (uint64_t)&type metadata for FormatGradient, v27, (uint64_t)&type metadata for FormatVersions.JazzkonC, v25, (uint64_t)v17, v28, (uint64_t)&off_1F1C39B68);
  uint64_t v30 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v30 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1C151928C();
  uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1EB93CAB0);
  uint64_t v33 = *(void *)(v31 - 8);
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
  uint64_t v47 = v33 + 16;
  v48(v14, v32, v31);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06C4F1C(v18, 0, 0, 0, (uint64_t)v14, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v48(v11, v32, v31);
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = swift_bridgeObjectRetain();
    sub_1C07255E0(v34, 1, 0, 0, (uint64_t)v11, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v35 = (uint64_t)v45;
    v48(v45, v32, v31);
    swift_storeEnumTagMultiPayload();
    sub_1C06C50E0(2, 0, 0, v35, (uint64_t)sub_1C01B158C, 0, v19, v20, v21, v22);
    sub_1BFEFEB68(v35, type metadata accessor for FormatVersionRequirement);
    uint64_t v36 = v48;
    uint64_t v38 = v42;
    uint64_t v37 = v43;
    sub_1BFDB3920(v43);
    if (qword_1EB887658 != -1) {
      swift_once();
    }
    uint64_t v39 = __swift_project_value_buffer(v31, (uint64_t)qword_1EB93CAF8);
    uint64_t v40 = (uint64_t)v44;
    v36(v44, v39, v31);
    swift_storeEnumTagMultiPayload();
    sub_1C0725864(v37, v38, 3, 0, 0, v40, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v40, type metadata accessor for FormatVersionRequirement);
    sub_1BFDB3960(v37);
  }
  return sub_1BFEFEB68((uint64_t)v17, (uint64_t (*)(void))sub_1C0889344);
}

unint64_t sub_1BFDB3838()
{
  unint64_t result = qword_1EB85C338;
  if (!qword_1EB85C338)
  {
    sub_1BFE9DEBC(255, &qword_1EB879D10, (uint64_t)&type metadata for FormatColor, MEMORY[0x1E4FBB320]);
    sub_1BFE10198();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C338);
  }
  return result;
}

unint64_t sub_1BFDB38CC()
{
  unint64_t result = qword_1EB85BE00;
  if (!qword_1EB85BE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BE00);
  }
  return result;
}

uint64_t sub_1BFDB3920(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BFDB3960(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BFDB39A0(uint64_t a1)
{
  return sub_1BFDB39C8(a1, v1[5], v1[6], v1[2], v1[3]) & 1;
}

uint64_t sub_1BFDB39C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C151A31C();
  uint64_t v32 = a5;
  uint64_t v31 = a1;
  BlueprintItem<>.feedItem.getter(v13, a5);
  uint64_t v14 = FeedItem.identifier.getter();
  uint64_t v16 = v15;
  sub_1BFEE2FE0((uint64_t)v12, type metadata accessor for FeedItem);
  LOBYTE(v14) = sub_1BFF896B4(v14, v16, a2);
  swift_bridgeObjectRelease();
  if (v14) {
    return 1;
  }
  uint64_t v18 = *(void *)(a3 + 56);
  uint64_t v28 = v5;
  uint64_t v29 = a3 + 56;
  uint64_t v19 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  uint64_t v21 = v20 & v18;
  int64_t v30 = (unint64_t)(v19 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v23 = 0;
  while (v21)
  {
    v21 &= v21 - 1;
LABEL_7:
    swift_bridgeObjectRetain();
    BlueprintItem<>.feedItem.getter(v13, v32);
    FeedItem.identifier.getter();
    sub_1BFEE2FE0((uint64_t)v12, type metadata accessor for FeedItem);
    char v24 = sub_1C151E89C();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v24)
    {
      uint64_t v17 = 1;
LABEL_25:
      swift_release();
      return v17;
    }
  }
  int64_t v25 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v25 >= v30) {
    goto LABEL_24;
  }
  uint64_t v26 = *(void *)(v29 + 8 * v25);
  ++v23;
  if (v26) {
    goto LABEL_22;
  }
  int64_t v23 = v25 + 1;
  if (v25 + 1 >= v30) {
    goto LABEL_24;
  }
  uint64_t v26 = *(void *)(v29 + 8 * v23);
  if (v26) {
    goto LABEL_22;
  }
  int64_t v23 = v25 + 2;
  if (v25 + 2 >= v30) {
    goto LABEL_24;
  }
  uint64_t v26 = *(void *)(v29 + 8 * v23);
  if (v26)
  {
LABEL_22:
    uint64_t v21 = (v26 - 1) & v26;
    goto LABEL_7;
  }
  int64_t v27 = v25 + 3;
  if (v27 >= v30)
  {
LABEL_24:
    uint64_t v17 = 0;
    goto LABEL_25;
  }
  uint64_t v26 = *(void *)(v29 + 8 * v27);
  if (v26)
  {
    int64_t v23 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v23 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v23 >= v30) {
      goto LABEL_24;
    }
    uint64_t v26 = *(void *)(v29 + 8 * v23);
    ++v27;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1BFDB3CB4(void *a1)
{
  return FormatStateMachineEvent.encode(to:)(a1);
}

uint64_t FormatStateMachineEvent.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v48 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v50 = (char *)&v40 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v40 - v8;
  sub_1C08B8FCC();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v1[1];
  uint64_t v51 = *v1;
  uint64_t v49 = v1[2];
  uint64_t v14 = v1[4];
  uint64_t v46 = v1[3];
  uint64_t v47 = v14;
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1C08B8EA0();
  uint64_t v18 = v17;
  uint64_t v19 = sub_1C085F050(&qword_1EB892090, (void (*)(uint64_t))sub_1C08B8EA0);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatStateMachineEvent, v20, v15, (uint64_t)&type metadata for FormatStateMachineEvent, v18, (uint64_t)&type metadata for FormatVersions.JazzkonG, v16, (uint64_t)v12, v19, (uint64_t)&off_1F1C39AE8);
  uint64_t v21 = qword_1EB887640;
  swift_bridgeObjectRetain();
  if (v21 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1C151928C();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB93CAC8);
  uint64_t v24 = *(void *)(v22 - 8);
  int64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v26 = v24 + 16;
  v25(v9, v23, v22);
  uint64_t v27 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = v52;
  sub_1C06B5230(v51, v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v28)
  {
    uint64_t v32 = (uint64_t)v12;
  }
  else
  {
    uint64_t v29 = v12;
    uint64_t v30 = (uint64_t)v50;
    v25(v50, v23, v22);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    uint64_t v52 = v29;
    char v31 = sub_1C0833798(v30, 1, 0, 0, (uint64_t)sub_1C01B158C, 0);
    uint64_t v44 = v23;
    uint64_t v45 = v25;
    uint64_t v42 = v27;
    uint64_t v43 = v26;
    uint64_t v41 = v22;
    if (v31)
    {
      long long v54 = xmmword_1C153AB20;
      char v55 = 0;
      uint64_t v34 = swift_bridgeObjectRetain();
      uint64_t v35 = sub_1BFE71F8C(v34);
      swift_bridgeObjectRelease();
      uint64_t v53 = v35;
      swift_retain();
      sub_1BFE726FC((uint64_t *)&v53, sub_1BFE72780, sub_1BFE72EAC);
      swift_release();
      uint64_t v56 = (uint64_t)v53;
      sub_1C08B9060();
      sub_1C085F050(&qword_1EB86E670, (void (*)(uint64_t))sub_1C08B9060);
      uint64_t v36 = MEMORY[0x1E4FBB1A0];
      sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1BFE71F14((unint64_t *)&qword_1EB85DF50, (unint64_t *)&qword_1EB879F20, v36);
      sub_1C1520BAC();
      uint64_t v51 = 0;
      swift_release();
      uint64_t v30 = (uint64_t)v50;
    }
    else
    {
      uint64_t v51 = 0;
    }
    sub_1BFEFEB68(v30, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v37 = (uint64_t)v48;
    v45(v48, v44, v41);
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = v47;
    swift_bridgeObjectRetain();
    uint64_t v39 = (uint64_t)v52;
    sub_1C06B5230(v46, v38, 2, 0, 0, v37, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v37, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v32 = v39;
  }
  return sub_1BFEFEB68(v32, (uint64_t (*)(void))sub_1C08B8FCC);
}

uint64_t sub_1BFDB42C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatAccessibilityProperty.init(from:)(a1, a2);
}

uint64_t FormatAccessibilityProperty.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v27 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v26 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
    uint64_t v10 = a1;
LABEL_18:
    sub_1C0038728(v10, (uint64_t)v3);
    swift_willThrow();

    uint64_t v24 = (uint64_t)v10;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  uint64_t v11 = v7;
  uint64_t v12 = v27;
  uint64_t v13 = a1[3];
  uint64_t v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  uint64_t v14 = sub_1C1520EAC();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = v9;
  if (v13)
  {
    uint64_t v16 = sub_1C152070C();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = (unint64_t *)(v16 + 40);
      while (1)
      {
        unint64_t v19 = *v18;
        if (*v18 >= 4) {
          break;
        }
        v18 += 2;
        if (!--v17) {
          goto LABEL_8;
        }
      }
      uint64_t v22 = *(v18 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v23 = v22;
      *(void *)(v23 + 8) = v19;
      *(void *)(v23 + 16) = &unk_1F1B83928;
      *(_OWORD *)(v23 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v22, v19);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v10 = v26;
      goto LABEL_18;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BFDB48CC();
  long long v28 = 0uLL;
  sub_1C15206EC();
  switch((char)v29)
  {
    case 1:
      long long v28 = xmmword_1C152C800;
      sub_1BFDB4920();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      char v20 = 0;
      uint64_t v21 = v29 | 0x1000000000000000;
      break;
    case 2:
      long long v28 = xmmword_1C152C800;
      sub_1BFDB4920();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      char v20 = 0;
      uint64_t v21 = v29 | 0x2000000000000000;
      break;
    case 3:
      long long v28 = xmmword_1C152C800;
      sub_1BFDB4920();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      char v20 = 0;
      uint64_t v21 = v29 | 0x3000000000000000;
      break;
    case 4:
      long long v28 = xmmword_1C152C800;
      sub_1BFDB4920();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v21 = v29;
      goto LABEL_20;
    case 5:
      long long v28 = xmmword_1C152C800;
      sub_1BFDB4920();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v21 = v29 | 0x1000000000000000;
      goto LABEL_20;
    case 6:
      sub_1BFEFF3E8(0, &qword_1EB873EB8, (uint64_t (*)(void))sub_1C086E9C4, (uint64_t)&type metadata for FormatAccessibilityTrait, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
      long long v28 = xmmword_1C152C800;
      sub_1C086EA18();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v21 = v29 | 0x2000000000000000;
LABEL_20:
      char v20 = 1;
      break;
    default:
      long long v28 = xmmword_1C152C800;
      sub_1BFDB4920();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      char v20 = 0;
      uint64_t v21 = v29;
      break;
  }
  uint64_t v24 = (uint64_t)v26;
  *(void *)uint64_t v12 = v21;
  *(unsigned char *)(v12 + 8) = v20;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

unint64_t sub_1BFDB48CC()
{
  unint64_t result = qword_1EB88C730;
  if (!qword_1EB88C730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88C730);
  }
  return result;
}

unint64_t sub_1BFDB4920()
{
  unint64_t result = qword_1EB878800;
  if (!qword_1EB878800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878800);
  }
  return result;
}

uint64_t sub_1BFDB4974@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFDB49A0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFDB49A0(void *a1)
{
  sub_1C0908CDC(0, &qword_1EB890B38, (void (*)(void))sub_1C08F7950, (void (*)(void))sub_1C08F77C4);
  uint64_t v74 = v2;
  uint64_t v72 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v73 = (char *)&v66 - v3;
  sub_1BFE893AC();
  uint64_t v78 = v4;
  uint64_t v75 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v81 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE8928C();
  uint64_t v79 = v6;
  uint64_t v76 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  *(void *)&long long v85 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE89214();
  *(void *)&long long v82 = v8;
  uint64_t v77 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  *(void *)&long long v84 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0908CDC(0, &qword_1EB8713F0, (void (*)(void))sub_1BFF95748, (void (*)(void))sub_1C00800EC);
  *(void *)&long long v87 = v10;
  *(void *)&long long v86 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v83 = (uint64_t)&v66 - v11;
  sub_1C0908CDC(0, &qword_1EB87C750, (void (*)(void))sub_1C007F424, (void (*)(void))sub_1C007F478);
  uint64_t v13 = v12;
  unint64_t v80 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v66 - v14;
  sub_1C08F79A4();
  uint64_t v17 = v16;
  uint64_t v88 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08947DC();
  sub_1C085F050(&qword_1EB892540, (void (*)(uint64_t))sub_1C08947DC);
  uint64_t v21 = (uint64_t)v89;
  sub_1C1520EBC();
  uint64_t v22 = (void *)v21;
  if (v21)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v22);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v20;
  }
  uint64_t v89 = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v23 = sub_1C1520EAC();
  char v24 = Dictionary<>.errorOnUnknownKeys.getter(v23);
  swift_bridgeObjectRelease();
  uint64_t v25 = v17;
  if (v24)
  {
    uint64_t v26 = sub_1C152070C();
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      long long v28 = (unsigned char *)(v26 + 48);
      while (*v28 != 1)
      {
        v28 += 24;
        if (!--v27) {
          goto LABEL_7;
        }
      }
      uint64_t v34 = *((void *)v28 - 2);
      uint64_t v33 = *((void *)v28 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v35 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v35);
      sub_1C0894860();
      sub_1BFDB5B18();
      sub_1C08948B4();
      swift_getKeyPath();
      swift_retain();
      uint64_t v20 = sub_1C085FB14((uint64_t)&unk_1F1B69730);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v22 = (void *)swift_allocError();
      *(void *)uint64_t v36 = v34;
      *(void *)(v36 + 8) = v33;
      *(void *)(v36 + 16) = v20;
      *(_OWORD *)(v36 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v34, v33, 1);
      (*(void (**)(char *, uint64_t))(v88 + 8))(v19, v25);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v29 = sub_1C07F0DDC((uint64_t)v19, 0, 0, 0, (void (*)(void, __n128))sub_1C08F79A4);
  uint64_t v31 = v30;
  long long v92 = xmmword_1C153AB20;
  char v93 = 0;
  uint64_t v32 = sub_1C152069C();
  uint64_t v38 = v37;
  uint64_t v71 = v32;
  long long v92 = xmmword_1C1557FA0;
  char v93 = 0;
  sub_1BFE1CFFC();
  sub_1C15206EC();
  uint64_t v70 = v29;
  uint64_t v39 = v90;
  long long v92 = xmmword_1C1557FB0;
  char v93 = 0;
  sub_1BFE3CEF4();
  sub_1C152065C();
  uint64_t v68 = v39;
  uint64_t v67 = v90;
  long long v66 = xmmword_1C1557FD0;
  long long v92 = xmmword_1C1557FD0;
  char v93 = 0;
  char v41 = sub_1C152071C();
  uint64_t v69 = v25;
  if (v41)
  {
    long long v90 = v66;
    char v91 = 0;
    sub_1C08B07C8();
    uint64_t v42 = (uint64_t)v89;
    sub_1C15206EC();
    *(void *)&long long v66 = v38;
    uint64_t v43 = v87;
    uint64_t v44 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v42, v13);
    uint64_t v45 = v43;
  }
  else
  {
    *(void *)&long long v66 = v38;
    uint64_t v44 = MEMORY[0x1E4FBC860];
    uint64_t v45 = v87;
  }
  long long v87 = xmmword_1C1557FC0;
  long long v92 = xmmword_1C1557FC0;
  char v93 = 0;
  char v46 = sub_1C152071C();
  uint64_t v47 = v86;
  uint64_t v89 = (char *)v44;
  if (v46)
  {
    long long v90 = v87;
    char v91 = 0;
    sub_1C086D01C();
    uint64_t v48 = v83;
    sub_1C15206EC();
    *(void *)&long long v87 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v45);
  }
  else
  {
    *(void *)&long long v87 = MEMORY[0x1E4FBC860];
  }
  long long v86 = xmmword_1C1557FE0;
  long long v92 = xmmword_1C1557FE0;
  char v93 = 0;
  char v49 = sub_1C152071C();
  uint64_t v50 = v88;
  uint64_t v51 = v85;
  uint64_t v52 = v84;
  if (v49)
  {
    long long v90 = v86;
    char v91 = 0;
    sub_1C085F050(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    uint64_t v53 = v82;
    sub_1C15206EC();
    *(void *)&long long v86 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v52, v53);
    uint64_t v51 = v85;
  }
  else
  {
    *(void *)&long long v86 = MEMORY[0x1E4FBC870];
  }
  long long v84 = xmmword_1C1557FF0;
  long long v92 = xmmword_1C1557FF0;
  char v93 = 0;
  if (sub_1C152071C())
  {
    long long v90 = v84;
    char v91 = 0;
    sub_1C085F050(&qword_1EB87C728, (void (*)(uint64_t))sub_1BFE8928C);
    uint64_t v54 = v79;
    sub_1C15206EC();
    uint64_t v55 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v51, v54);
    uint64_t v56 = v88;
  }
  else
  {
    uint64_t v56 = v50;
    uint64_t v55 = MEMORY[0x1E4FBC860];
  }
  long long v85 = xmmword_1C1558010;
  long long v92 = xmmword_1C1558010;
  char v93 = 0;
  char v57 = sub_1C152071C();
  uint64_t v58 = v81;
  if (v57)
  {
    long long v90 = v85;
    char v91 = 0;
    sub_1C085F050(&qword_1EB87C718, (void (*)(uint64_t))sub_1BFE893AC);
    uint64_t v59 = v78;
    sub_1C15206EC();
    *(void *)&long long v85 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v58, v59);
    uint64_t v56 = v88;
  }
  else
  {
    *(void *)&long long v85 = MEMORY[0x1E4FBC860];
  }
  long long v84 = xmmword_1C1558020;
  long long v92 = xmmword_1C1558020;
  char v93 = 0;
  char v60 = sub_1C152071C();
  uint64_t v61 = v68;
  if (v60)
  {
    long long v90 = v84;
    char v91 = 0;
    sub_1C15206EC();
    uint64_t v83 = v94;
  }
  else
  {
    uint64_t v83 = 0;
  }
  long long v84 = xmmword_1C1558030;
  long long v92 = xmmword_1C1558030;
  char v93 = 0;
  if (sub_1C152071C())
  {
    long long v90 = v84;
    char v91 = 0;
    sub_1BFE3D540();
    sub_1C15206EC();
    *(void *)&long long v84 = v55;
    unint64_t v62 = v94;
  }
  else
  {
    *(void *)&long long v84 = v55;
    unint64_t v62 = 0x8000000000000000;
  }
  long long v82 = xmmword_1C1558040;
  long long v92 = xmmword_1C1558040;
  char v93 = 0;
  if (sub_1C152071C())
  {
    unint64_t v80 = v62;
    unint64_t v81 = (char *)v31;
    long long v90 = v82;
    char v91 = 0;
    sub_1C08F7A38();
    uint64_t v63 = v73;
    uint64_t v64 = v74;
    sub_1C15206EC();
    uint64_t v65 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v63, v64);
    uint64_t v31 = (uint64_t)v81;
    unint64_t v62 = v80;
  }
  else
  {
    uint64_t v65 = MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, uint64_t))(v56 + 8))(v19, v69);
  *(void *)&long long v92 = v61;
  *(void *)&long long v90 = v67;
  uint64_t v94 = v62;
  type metadata accessor for FormatItemNode();
  swift_allocObject();
  uint64_t v20 = (uint64_t)sub_1C0F11420(v70, v31, v71, v66, (uint64_t *)&v92, (uint64_t *)&v90, (uint64_t)v89, v87, v86, v84, v85, v83, &v94, v65);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v20;
}

unint64_t sub_1BFDB5B18()
{
  unint64_t result = qword_1EB8874B0;
  if (!qword_1EB8874B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8874B0);
  }
  return result;
}

uint64_t FeedModelFactory.create(headline:context:namespace:nativeAdInfo:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v36 = a5;
  uint64_t v10 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v19 = MEMORY[0x1E4FBB1A0];
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C1527210;
  *(void *)(v20 + 32) = a3;
  *(void *)(v20 + 40) = a4;
  swift_bridgeObjectRetain();
  id v21 = objc_msgSend(a1, sel_identifier);
  uint64_t v22 = sub_1C151E62C();
  uint64_t v24 = v23;

  *(void *)(v20 + 48) = v22;
  *(void *)(v20 + 56) = v24;
  uint64_t v37 = v20;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v19, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v25 = sub_1C151E55C();
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  long long v28 = v35;
  sub_1BFDB60D4(v25, v27, a1, v35, v36, (uint64_t)v18);
  swift_bridgeObjectRelease();
  sub_1BFDB5E54((uint64_t)v18, (uint64_t)v15, type metadata accessor for FeedHeadline);
  sub_1BFDB5E54((uint64_t)v28, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedContext);
  sub_1BFF976E8((uint64_t)v15, a6, type metadata accessor for FeedHeadline);
  sub_1BFDB5FF4();
  uint64_t v30 = v29;
  sub_1BFF976E8((uint64_t)v12, a6 + *(int *)(v29 + 52), (uint64_t (*)(void))type metadata accessor for FeedContext);
  uint64_t v31 = (void *)(a6 + *(int *)(v30 + 56));
  *uint64_t v31 = 0;
  v31[1] = 0;
  uint64_t v32 = (uint64_t (**)())(a6 + *(int *)(v30 + 64));
  *uint64_t v32 = sub_1BFE31C54;
  v32[1] = 0;
  return sub_1BFF5B58C((uint64_t)v18, type metadata accessor for FeedHeadline);
}

uint64_t sub_1BFDB5E54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFDB5EBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFDB5F24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFDB5F8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1BFDB5FF4()
{
  if (!qword_1EB865550)
  {
    type metadata accessor for FeedHeadline(255);
    sub_1C002C76C(&qword_1EB886BB8, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    sub_1C002C76C(&qword_1EB873770, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    unint64_t v0 = type metadata accessor for FeedModel();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB865550);
    }
  }
}

uint64_t sub_1BFDB60D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a1;
  sub_1BFEEF4F8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v25 - v16;
  sub_1BFDB6680(a3, (uint64_t)a4, (char *)&v25 - v16);
  sub_1BFDB6378(a3, (uint64_t)a4, &v29);
  uint64_t v18 = v29;
  uint64_t v19 = type metadata accessor for FeedContext();
  if (*((unsigned char *)a4 + *(int *)(v19 + 36)) == 1)
  {
    swift_unknownObjectRetain_n();
    LOBYTE(v20) = 1;
  }
  else
  {
    uint64_t v21 = v19;
    int v22 = v17[*(int *)(v12 + 32)];
    uint64_t v23 = (void *)*a4;
    swift_unknownObjectRetain_n();
    unsigned int v20 = objc_msgSend(v23, sel_containsHeadline_, a3);
    if (v20 && !v22) {
      LOBYTE(v20) = *((unsigned char *)a4 + *(int *)(v21 + 32));
    }
  }
  char v32 = v20;
  sub_1BFEE91C4(v26, (uint64_t)v11);
  sub_1BFEDDEE8((uint64_t)v17, (uint64_t)v14);
  uint64_t v31 = v18;
  uint64_t v29 = 0;
  char v30 = 1;
  swift_bridgeObjectRetain();
  FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(v28, a2, a3, (uint64_t)a3, &v32, (uint64_t)v11, (uint64_t)v14, &v31, v27, (uint64_t)&v29);
  return sub_1BFDB6318((uint64_t)v17, type metadata accessor for FeedHeadline.State);
}

uint64_t sub_1BFDB6318(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_1BFDB6378@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (*(unsigned char *)(a2 + *(int *)(type metadata accessor for FeedContext() + 24)) == 1)
  {
    if (objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrack))
    {
      id result = objc_msgSend(a1, sel_narrativeTrack);
      if (result) {
        goto LABEL_15;
      }
    }
    if (objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrackSample))
    {
      id result = objc_msgSend(a1, sel_narrativeTrackSample);
      if (result)
      {
        uint64_t v6 = result;
        if (qword_1EB87B060 == -1) {
          goto LABEL_13;
        }
        goto LABEL_16;
      }
      goto LABEL_15;
    }
LABEL_14:
    id result = 0;
    goto LABEL_15;
  }
  if (objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrackSample))
  {
    id result = objc_msgSend(a1, sel_narrativeTrackSample);
    if (result) {
      goto LABEL_15;
    }
  }
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_narrativeTrack) & 1) == 0) {
    goto LABEL_14;
  }
  id result = objc_msgSend(a1, sel_narrativeTrack);
  if (result)
  {
    uint64_t v6 = result;
    if (qword_1EB87B060 == -1)
    {
LABEL_13:
      id v7 = (id)qword_1EB93C700;
      sub_1C151F36C();
      sub_1BFEEF4F8(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
      *(void *)(v8 + 56) = sub_1BFC39268(0, (unint64_t *)&qword_1EB8901F0);
      *(void *)(v8 + 64) = sub_1C13BB3C8();
      *(void *)(v8 + 32) = v6;
      id v9 = v6;
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
LABEL_16:
    swift_once();
    goto LABEL_13;
  }
LABEL_15:
  *a3 = result;
  return result;
}

uint64_t sub_1BFDB6680@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v6 = type metadata accessor for FeedItem.SharedState(0);
  *(void *)&double v7 = MEMORY[0x1F4188790](v6 - 8).n128_u64[0];
  id v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v3 + 16);
  id v11 = objc_msgSend(a1, sel_articleID, v7, v26);
  if (!v11)
  {
    sub_1C151E62C();
    id v11 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  unint64_t v12 = (unint64_t)objc_msgSend(v10, sel_likingStatusForArticleID_, v11);

  uint64_t v13 = *(void **)(v3 + 24);
  id v14 = objc_msgSend(a1, sel_articleID);
  if (!v14)
  {
    sub_1C151E62C();
    id v14 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  unsigned __int8 v15 = objc_msgSend(v13, sel_isArticleOnReadingList_, v14);

  sub_1BFDB6910(a1, (uint64_t)v9);
  id v16 = objc_msgSend(a1, sel_articleID);
  if (!v16)
  {
    sub_1C151E62C();
    id v16 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  unsigned __int8 v17 = objc_msgSend(v10, sel_hasArticleBeenMarkedAsOffensive_, v16);

  unsigned __int8 v18 = objc_msgSend(v13, sel_shouldHideHeadline_, a1);
  id v19 = objc_msgSend(a1, sel_sourceChannelID);
  if (v19)
  {
    unsigned int v20 = v19;
    unsigned __int8 v21 = objc_msgSend(*(id *)(v3 + 32), sel_hasMutedSubscriptionForTagID_, v19);
  }
  else
  {
    unsigned __int8 v21 = 0;
  }
  if (v12 >= 3) {
    char v22 = 2;
  }
  else {
    char v22 = 0x10002u >> (8 * v12);
  }
  sub_1BFDB6C10(a1, &v27);
  char v23 = v27;
  *a3 = v22;
  a3[1] = v15 ^ 1;
  uint64_t v24 = (int *)type metadata accessor for FeedHeadline.State(0);
  uint64_t result = sub_1BFEDDE80((uint64_t)v9, (uint64_t)&a3[v24[6]], type metadata accessor for FeedItem.SharedState);
  a3[v24[7]] = v17 ^ 1;
  a3[v24[8]] = v23;
  a3[v24[9]] = v18;
  a3[v24[10]] = v21;
  return result;
}

uint64_t sub_1BFDB6910@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFEEF4F8(0, (unint64_t *)&qword_1EB87C618, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  double v7 = (char *)&v18 - v6;
  uint64_t v8 = v2[9];
  uint64_t v9 = v2[10];
  __swift_project_boxed_opaque_existential_1(v2 + 6, v8);
  id v10 = objc_msgSend(a1, sel_articleID);
  uint64_t v11 = sub_1C151E62C();
  uint64_t v13 = v12;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 32))(v11, v13, v8, v9);
  swift_bridgeObjectRelease();
  uint64_t v14 = type metadata accessor for SharedItem();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v7, 1, v14) == 1)
  {
    sub_1BFDB6BB4((uint64_t)v7);
    uint64_t v16 = 1;
  }
  else
  {
    sub_1BFEDDE80((uint64_t)v7, a2, (uint64_t (*)(void))type metadata accessor for SharedItem);
    uint64_t v16 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a2, v16, 1, v14);
}

uint64_t sub_1BFDB6AE0()
{
  return swift_release();
}

uint64_t sub_1BFDB6BB4(uint64_t a1)
{
  sub_1BFEDD8F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BFDB6C10(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = *(void **)(v2 + 40);
  unsigned int v6 = objc_msgSend(a1, sel_isPaid);
  if (objc_msgSend(a1, sel_respondsToSelector_, sel_isBundlePaid)) {
    unsigned __int8 v7 = objc_msgSend(a1, sel_isBundlePaid);
  }
  else {
    unsigned __int8 v7 = 0;
  }
  uint64_t v8 = &selRef_setSpacing_;
  id v9 = objc_msgSend(a1, sel_sourceChannel);
  uint64_t v10 = (uint64_t)v9;
  if (v9)
  {
    id v11 = objc_msgSend(v9, sel_identifier);
    swift_unknownObjectRelease();
    uint64_t v12 = sub_1C151E62C();
    uint64_t v10 = v13;

    if (v6) {
      goto LABEL_6;
    }
LABEL_11:
    if (v7) {
      goto LABEL_15;
    }
    goto LABEL_12;
  }
  uint64_t v12 = 0;
  if (!v6) {
    goto LABEL_11;
  }
LABEL_6:
  id v14 = objc_msgSend(v5, sel_purchaseProvider);
  if (v10)
  {
    id v15 = objc_msgSend(v14, sel_purchasedTagIDs);
    uint64_t v16 = sub_1C151EFBC();

    LOBYTE(v15) = sub_1BFF896B4(v12, v10, v16);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      if ((v7 & 1) == 0) {
        goto LABEL_34;
      }
      goto LABEL_15;
    }
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    char v17 = 0;
    goto LABEL_40;
  }
  swift_unknownObjectRelease();
  if ((v7 & 1) == 0) {
    goto LABEL_34;
  }
LABEL_15:
  if (!v10) {
    goto LABEL_37;
  }
  uint64_t v18 = (char *)objc_msgSend(objc_msgSend(v5, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v18, v18 + 1))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v30 = 0u;
    long long v31 = 0u;
  }
  sub_1BFEDDE80((uint64_t)&v30, (uint64_t)v32, (uint64_t (*)(void))sub_1BFEFE510);
  if (!v33)
  {
    sub_1BFDB6318((uint64_t)v32, (uint64_t (*)(void))sub_1BFEFE510);
    goto LABEL_24;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_24:
    id v19 = 0;
    unint64_t v21 = 0;
    goto LABEL_25;
  }
  id v19 = v29;
  id v20 = objc_msgSend(v29, sel_integerValue);
  if (v20 == (id)-1)
  {

    uint64_t v8 = &selRef_setSpacing_;
    goto LABEL_36;
  }
  unint64_t v21 = (unint64_t)v20;
LABEL_25:
  if (objc_getAssociatedObject(v18, (const void *)~v21))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v30 = 0u;
    long long v31 = 0u;
  }
  sub_1BFEDDE80((uint64_t)&v30, (uint64_t)v32, (uint64_t (*)(void))sub_1BFEFE510);
  if (!v33)
  {
    sub_1BFDB6318((uint64_t)v32, (uint64_t (*)(void))sub_1BFEFE510);
LABEL_33:

    uint64_t v8 = &selRef_setSpacing_;
    if (v21) {
      goto LABEL_36;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_33;
  }
  id v22 = v29;
  unsigned __int8 v23 = objc_msgSend(v22, sel_integerValue);

  char v24 = v23 ^ v21;
  uint64_t v8 = &selRef_setSpacing_;
  if ((v24 & 1) == 0) {
    goto LABEL_34;
  }
LABEL_36:
  id v25 = objc_msgSend(objc_msgSend(v5, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  id v26 = objc_msgSend(v25, sel_bundleChannelIDs);

  char v27 = (void *)sub_1C151E5EC();
  LOBYTE(v25) = objc_msgSend(v26, sel_containsObject_, v27);
  swift_bridgeObjectRelease();

  if (v25) {
    goto LABEL_13;
  }
LABEL_37:
  unsigned int v28 = objc_msgSend(v5, sel_canGetBundleSubscriptionToChannel_, objc_msgSend(a1, v8[66]));
  swift_unknownObjectRelease();
  if (v28) {
    char v17 = 1;
  }
  else {
    char v17 = 2;
  }
LABEL_40:
  *a2 = v17;
}

uint64_t sub_1BFDB70C8()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701667182;
      break;
    case 2:
      uint64_t result = 0x7470697263736564;
      break;
    case 3:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

id FeedItemSupplementaryRenderer.render(in:supplementaryData:layoutAttributes:actionSenderHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v25 = sub_1C151C13C();
  uint64_t v10 = *(void *)(v25 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v25);
  v24[0] = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)sub_1C14A4374((uint64_t)a1, a2, a3);
  v24[2] = v13;
  v24[1] = swift_getObjectType();
  id v14 = v12;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  sub_1C14A4A08(a1, v14, a2, a3, a4, a5);

  id v28 = v14;
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = v24[0];
  uint64_t v18 = v25;
  (*(void (**)(void, uint64_t, uint64_t))(v10 + 16))(v24[0], a2, v25);
  unint64_t v19 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v15;
  *(void *)(v20 + 24) = v16;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 32))(v20 + v19, v17, v18);
  unint64_t v21 = (uint64_t *)(v20 + ((v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v22 = v27;
  *unint64_t v21 = v26;
  v21[1] = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C1519E7C();
  swift_release();
  swift_release();
  swift_release();
  return v14;
}

void sub_1BFDB739C()
{
  if (!qword_1EB871598)
  {
    type metadata accessor for FormatLayoutView();
    sub_1C14A6A20(&qword_1EB875310, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutView);
    unint64_t v0 = sub_1C151B6CC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871598);
    }
  }
}

void sub_1BFDB7434(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  if (!*a2)
  {
    sub_1C0CC981C(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HeadlineView);
    sub_1C0CC9880(a5, a3, a4);
    unint64_t v9 = sub_1C151B01C();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1BFDB74D4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  if (!*a2)
  {
    sub_1C12CA0A8(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HeadlineView);
    sub_1BFDB7574(a5, a3, a4);
    unint64_t v9 = sub_1C151B01C();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1BFDB7574(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C12CA0A8(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HeadlineView);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FeedItemRendererType.render(in:at:layoutAttributes:actionSenderHandler:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = *a3;
  char v10 = 1;
  uint64_t v9 = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t *, uint64_t, uint64_t, uint64_t))(a7 + 72))(a1, a2, &v10, &v9, a4, a5, a6);
}

void FeedItemRenderer.render(in:at:options:layoutAttributes:actionSenderHandler:)(void *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v44 = a7;
  uint64_t v41 = sub_1C151677C();
  uint64_t v13 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v36 = v14;
  uint64_t v40 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v15 = *a3;
  uint64_t v45 = *a4;
  uint64_t v16 = v45;
  sub_1C12C45BC(a1, a2, &v45, (unint64_t *)&v46);
  uint64_t v17 = (uint64_t)v46;
  uint64_t v18 = (void *)sub_1C0CC91BC();
  char v46 = (void *)v16;
  int v39 = v15;
  LOBYTE(v45) = v15;
  id v19 = v18;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v42 = a5;
  uint64_t v43 = a6;
  sub_1C12C4C10(a1, a2, v19, (uint64_t *)&v46, (char *)&v45, a5, a6);

  uint64_t v35 = v17;
  char v46 = (void *)v17;
  uint64_t v20 = (void *)sub_1C0CC91BC();
  v34[2] = v21;
  v34[1] = swift_getObjectType();
  char v46 = v20;
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v24 = v40;
  uint64_t v25 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v40, v38, v41);
  unint64_t v26 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v27 = v26 + v36;
  unint64_t v28 = (v26 + v36) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = swift_allocObject();
  unint64_t v30 = v28 + v29;
  *(void *)(v29 + 16) = v22;
  *(void *)(v29 + 24) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v29 + v26, v24, v25);
  *(unsigned char *)(v29 + v27) = v39;
  long long v31 = v43;
  *(void *)(v30 + 8) = v42;
  *(void *)(v30 + 16) = v31;
  id v32 = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C1519E7C();
  swift_release();
  uint64_t v33 = v46;
  swift_release();
  swift_release();

  *uint64_t v44 = v35;
}

void sub_1BFDB7904()
{
  if (!qword_1EB885138)
  {
    sub_1C12CA0A8(255, (unint64_t *)&unk_1EB882B60, MEMORY[0x1E4FABD78], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB885138);
    }
  }
}

uint64_t sub_1BFDB7998(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C12CA0A8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFDB7A08(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C12CA0A8(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFDB7A88(void *a1)
{
  return sub_1BFDB7AAC(a1);
}

uint64_t sub_1BFDB7AAC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *MEMORY[0x1E4FBC8C8] & *a1;
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v5);
  uint64_t v7 = (void *)(v4 + *MEMORY[0x1E4FAC3C0]);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  (*(void (**)(void *, void, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, *v7, v9, v5, v6);
  char v10 = v2 + 7;
  uint64_t v12 = v2[10];
  uint64_t v11 = v2[11];
  __swift_project_boxed_opaque_existential_1(v10, v12);
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(a1, v8, v9, v12, v11);
}

void sub_1BFDB7BB4()
{
  unint64_t v0 = (void *)sub_1C151AFCC();
  sub_1C151F8EC();

  id v1 = (id)sub_1C151AFCC();
  objc_msgSend(v1, sel_setIsAccessibilityElement_, 1);
}

uint64_t sub_1BFDB7C24(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = (id *)a2;
  uint64_t v45 = a1;
  sub_1BFDB80C0(a2, (uint64_t)&v51);
  id v41 = v51;
  uint64_t v2 = sub_1C151B7EC();
  uint64_t v49 = *(void *)(v2 - 8);
  uint64_t v50 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v48 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151AE4C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v43 = (uint64_t *)((char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t **)((char *)&v40 - v8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t **)((char *)&v40 - v11);
  uint64_t v13 = (uint64_t *)swift_allocObject();
  uint64_t v14 = sub_1C151BA9C();
  uint64_t v15 = MEMORY[0x1E4FACAB8];
  v13[5] = v14;
  v13[6] = v15;
  __swift_allocate_boxed_opaque_existential_0(v13 + 2);
  sub_1C151BA8C();
  *uint64_t v12 = v13;
  uint64_t v16 = *MEMORY[0x1E4FAC348];
  uint64_t v17 = *(void (**)(uint64_t **, uint64_t, uint64_t))(v5 + 104);
  v17(v12, v16, v4);
  uint64_t v18 = (uint64_t *)swift_allocObject();
  v18[5] = v14;
  v18[6] = MEMORY[0x1E4FACAB8];
  __swift_allocate_boxed_opaque_existential_0(v18 + 2);
  sub_1C151BA8C();
  *uint64_t v9 = v18;
  v17(v9, v16, v4);
  sub_1BFDB81EC();
  uint64_t v20 = v19;
  uint64_t v21 = swift_allocBox();
  uint64_t v23 = v22;
  uint64_t v24 = v22 + *(int *)(v20 + 48);
  uint64_t v46 = v5;
  uint64_t v47 = v9;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t **, uint64_t))(v5 + 16);
  unint64_t v26 = v9;
  uint64_t v27 = v12;
  v25(v23, v26, v4);
  v25(v24, v12, v4);
  unint64_t v28 = v43;
  uint64_t v29 = v44;
  *uint64_t v43 = v21;
  v17((uint64_t **)v28, *MEMORY[0x1E4FAC350], v4);
  sub_1C151AFAC();
  unint64_t v30 = (void *)sub_1C151AF9C();
  sub_1BFDB80C0((uint64_t)v29, (uint64_t)v54);
  long long v31 = (void *)v54[0];
  if (v54[0] >= 2)
  {
    id v34 = v41;
  }
  else
  {
    uint64_t v32 = v42[5];
    uint64_t v33 = v42[6];
    __swift_project_boxed_opaque_existential_1(v42 + 2, v32);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v33 + 8))(v53, v32, v33);
    long long v31 = (void *)v53[0];

    sub_1C1318960(v29);
  }
  objc_msgSend(v30, sel_setBackgroundColor_, v31);

  uint64_t v35 = (void *)sub_1C151AF9C();
  sub_1BFDB80C0((uint64_t)v29, (uint64_t)v53);
  sub_1C151B7CC();

  uint64_t v36 = (void *)sub_1C151AF9C();
  sub_1BFDB80C0((uint64_t)v29, (uint64_t)v52);
  sub_1C151B7DC();

  uint64_t v37 = (void *)sub_1C151AF9C();
  (*(void (**)(char *, void, uint64_t))(v49 + 104))(v48, *MEMORY[0x1E4FAC958], v50);
  sub_1C151B7FC();

  uint64_t v38 = *(void (**)(uint64_t **, uint64_t))(v46 + 8);
  v38(v47, v4);
  return ((uint64_t (*)(uint64_t **, uint64_t))v38)(v27, v4);
}

uint64_t sub_1BFDB80C0(uint64_t a1, uint64_t a2)
{
  sub_1BFE4F908(0, &qword_1EB876580, (uint64_t)&type metadata for FormatCellSelection.Background.Resolved, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1BFDB8148@<X0>(void *a1@<X2>, void **a2@<X3>, id *a3@<X4>, void **a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = *a2;
  id v11 = *a3;
  id v8 = *a3;
  *a4 = *a2;
  a4[1] = v8;
  id v9 = v7;
  return v11;
}

id ColorPaletteProviding.baseColorPalette.getter@<X0>(void **a1@<X8>)
{
  return sub_1BFDB8148(&qword_1EB87AFA8, (void **)&qword_1EB875180, (id *)algn_1EB875188, a1);
}

void sub_1BFDB81EC()
{
  if (!qword_1EB871548)
  {
    sub_1C151AE4C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB871548);
    }
  }
}

uint64_t sub_1BFDB8254(void *a1, const void *a2, char *a3)
{
  memcpy(v7, a2, sizeof(v7));
  uint64_t v5 = type metadata accessor for HeadlineViewLayout.Context(0);
  return sub_1C0E009E8(a1, v7, (void *)((char *)a1 + *(int *)(v5 + 24)), a3);
}

uint64_t type metadata accessor for HeadlineView()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1BFDB82CC@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v3 = *(void *)(v2 + *(int *)(a1 + 52));
  *a2 = v3;
  return sub_1BFEDCA78(v3);
}

uint64_t type metadata accessor for FeedItemRenderer()
{
  return self;
}

void sub_1BFDB8300()
{
  if (!qword_1EB871568)
  {
    type metadata accessor for FormatLayoutView();
    sub_1C12CAA3C(&qword_1EB875310, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutView);
    unint64_t v0 = sub_1C151B01C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871568);
    }
  }
}

id FormatLayoutViewRenderer.renderAction<A>(context:itemData:contextLayoutOptions:view:actionSenderHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return FormatLayoutViewRenderer.renderAction<A>(context:itemData:contextLayoutOptions:view:sourceItemData:actionSenderHandler:)(a1, a2, a3, a4, a5, a5, a6, a7, a8);
}

void sub_1BFDB83D4(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151AE4C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v8 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(a1, sel_setBackgroundColor_, v8);

  uint64_t v9 = *(void *)(a2 + 32);
  if (!v9)
  {
    objc_msgSend(a1, sel_setAccessibilityIgnoresInvertColors_, 0);
LABEL_9:
    uint64_t v55 = 1;
    long long v56 = 0u;
    long long v57 = 0u;
    long long v58 = 0u;
    char v59 = 0;
    sub_1BFDB7C24((uint64_t)a1, (uint64_t)&v55);
    return;
  }
  objc_msgSend(a1, sel_setAccessibilityIgnoresInvertColors_, *(unsigned char *)(v9 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors) & 1);
  unsigned int v10 = *(unsigned __int8 *)(v9 + 176);
  if (v10 > 1)
  {
    if (v10 == 2)
    {
      sub_1BFDB81EC();
      uint64_t v27 = v26;
      uint64_t v28 = swift_allocBox();
      uint64_t v30 = v29 + *(int *)(v27 + 48);
      sub_1C151AE3C();
      long long v31 = *(void (**)(uint64_t, void, uint64_t))(v5 + 104);
      v31(v30, *MEMORY[0x1E4FAC340], v4);
      *uint64_t v7 = v28;
      v31((uint64_t)v7, *MEMORY[0x1E4FAC350], v4);
      sub_1C151AFAC();
      return;
    }
    goto LABEL_9;
  }
  uint64_t v11 = *(void *)(v9 + 120);
  uint64_t v12 = *(void *)(v9 + 128);
  uint64_t v14 = *(void *)(v9 + 136);
  uint64_t v13 = *(void *)(v9 + 144);
  uint64_t v16 = *(void *)(v9 + 152);
  uint64_t v15 = *(void *)(v9 + 160);
  uint64_t v17 = *(void *)(v9 + 168);
  if (v10)
  {
    unint64_t v32 = v11 & 0xF000000000000007;
    if ((v11 & 0xF000000000000007) == 0xD000000000000007)
    {
      uint64_t v33 = v11;
      uint64_t v34 = 0;
      __int16 v35 = 0;
    }
    else if (v32 == 0xF000000000000007)
    {
      __int16 v35 = 1;
      uint64_t v33 = v11;
      sub_1BFF8C720(v11, v12, v14, v13, v16, v15, v17, 1);
      uint64_t v34 = 0;
    }
    else
    {
      uint64_t v38 = *(void *)(a2 + 64);
      uint64_t v55 = v11;
      uint64_t v39 = v12;
      uint64_t v40 = v11;
      sub_1BFFA1B88(v11, v39, v14, v13, v16, v15, v17, 1);
      uint64_t v50 = v39;
      sub_1BFFA1B88(v40, v39, v14, v13, v16, v15, v17, 1);
      swift_retain();
      double v41 = FormatFloat.value(contextLayoutOptions:)(v38);
      uint64_t v42 = v50;
      sub_1BFF8C720(v40, v50, v14, v13, v16, v15, v17, 1);
      uint64_t v33 = v40;
      uint64_t v43 = v40;
      uint64_t v12 = v42;
      sub_1BFF8C720(v43, v42, v14, v13, v16, v15, v17, 1);
      __int16 v35 = 0;
      uint64_t v34 = *(void *)&v41;
    }
    sub_1C1316E0C((uint64_t)a1, v34, v35 | ((v32 == 0xD000000000000007) << 8));
    sub_1BFF8C720(v33, v12, v14, v13, v16, v15, v17, 1);
  }
  else
  {
    uint64_t v50 = v12;
    uint64_t v49 = v11;
    uint64_t v48 = v17;
    uint64_t v47 = v15;
    uint64_t v46 = v16;
    uint64_t v45 = v14;
    uint64_t v44 = v13;
    if ((v17 & 0xF000000000000007) == 0xD000000000000007)
    {
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      char v24 = 0;
      uint64_t v25 = 1;
    }
    else
    {
      uint64_t v55 = v11;
      *(void *)&long long v56 = v12;
      *((void *)&v56 + 1) = v14;
      *(void *)&long long v57 = v13;
      *((void *)&v57 + 1) = v16;
      LOBYTE(v58) = v15 & 1;
      *((void *)&v58 + 1) = v17;
      uint64_t v36 = v12;
      uint64_t v37 = *(void *)(a2 + 64);
      sub_1BFFA1B88(v11, v36, v14, v13, v16, v15, v17, 0);
      FormatCellSelection.Background.resolve(context:)(v37, (uint64_t)v51);
      uint64_t v25 = v51[0];
      uint64_t v18 = v51[1];
      uint64_t v19 = v51[2];
      uint64_t v20 = v51[3];
      uint64_t v21 = v51[4];
      uint64_t v22 = v52;
      uint64_t v23 = v53;
      char v24 = v54;
    }
    uint64_t v55 = v25;
    *(void *)&long long v56 = v18;
    *((void *)&v56 + 1) = v19;
    *(void *)&long long v57 = v20;
    *((void *)&v57 + 1) = v21;
    *(void *)&long long v58 = v22;
    *((void *)&v58 + 1) = v23;
    char v59 = v24;
    sub_1BFDB7C24((uint64_t)a1, (uint64_t)&v55);
    sub_1BFF8C720(v49, v50, v45, v44, v46, v47, v48, 0);
    sub_1BFDB8960((id)v25);
  }
}

void sub_1BFDB8960(id a1)
{
  if (a1 != (id)1) {
}
  }

unint64_t sub_1BFDB8970()
{
  unint64_t result = qword_1EB87C800;
  if (!qword_1EB87C800)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB87C800);
  }
  return result;
}

uint64_t sub_1BFDB89C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTypeDefinition.init(from:)(a1, a2);
}

uint64_t FormatTypeDefinition.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = v2;
  uint64_t v33 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v26 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v10 = v7;
    uint64_t v11 = v33;
    uint64_t v12 = a1[3];
    uint64_t v27 = a1;
    __swift_project_boxed_opaque_existential_1(a1, v12);
    uint64_t v13 = sub_1C1520EAC();
    LOBYTE(v12) = Dictionary<>.errorOnUnknownKeys.getter(v13);
    swift_bridgeObjectRelease();
    if (v12)
    {
      uint64_t v14 = sub_1C152070C();
      uint64_t v15 = *(void *)(v14 + 16);
      if (v15)
      {
        uint64_t v16 = (unint64_t *)(v14 + 40);
        while (1)
        {
          unint64_t v17 = *v16;
          if (*v16 >= 4) {
            break;
          }
          v16 += 2;
          if (!--v15) {
            goto LABEL_7;
          }
        }
        uint64_t v23 = *(v16 - 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        sub_1C02570B4();
        unint64_t v3 = (void *)swift_allocError();
        *(void *)uint64_t v24 = v23;
        *(void *)(v24 + 8) = v17;
        *(void *)(v24 + 16) = &unk_1F1B88920;
        *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
        swift_willThrow();
        sub_1C0257108(v23, v17);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
        a1 = v27;
        goto LABEL_14;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    sub_1BFDB8E0C();
    long long v29 = 0uLL;
    sub_1C15206EC();
    if ((_BYTE)v28)
    {
      if (v28 == 1)
      {
        long long v28 = xmmword_1C152C800;
        sub_1BFDB8EB4();
        sub_1C15206EC();
        a1 = v27;
        (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
        uint64_t v19 = *((void *)&v29 + 1);
        uint64_t v18 = v29;
        long long v20 = v30;
        long long v21 = v31;
        char v22 = v32 | 0x40;
LABEL_17:
        *(void *)uint64_t v11 = v18;
        *(void *)(v11 + 8) = v19;
        *(_OWORD *)(v11 + 16) = v20;
        *(_OWORD *)(v11 + 32) = v21;
        *(unsigned char *)(v11 + 48) = v22;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      long long v29 = xmmword_1C152C800;
      sub_1BFDB8F08();
      sub_1C15206EC();
      a1 = v27;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
      uint64_t v19 = 0;
      uint64_t v18 = v28;
      long long v20 = 0uLL;
      char v22 = 0x80;
    }
    else
    {
      long long v29 = xmmword_1C152C800;
      sub_1BFDB8E60();
      sub_1C15206EC();
      a1 = v27;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
      uint64_t v19 = 0;
      char v22 = 0;
      uint64_t v18 = v28;
      long long v20 = 0uLL;
    }
    long long v21 = 0uLL;
    goto LABEL_17;
  }
LABEL_14:
  sub_1C0038728(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDB8E0C()
{
  unint64_t result = qword_1EB889C68;
  if (!qword_1EB889C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889C68);
  }
  return result;
}

unint64_t sub_1BFDB8E60()
{
  unint64_t result = qword_1EB876CC8;
  if (!qword_1EB876CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876CC8);
  }
  return result;
}

unint64_t sub_1BFDB8EB4()
{
  unint64_t result = qword_1EB878C70;
  if (!qword_1EB878C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878C70);
  }
  return result;
}

unint64_t sub_1BFDB8F08()
{
  unint64_t result = qword_1EB87BAD8;
  if (!qword_1EB87BAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87BAD8);
  }
  return result;
}

uint64_t sub_1BFDB8F5C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatType.init(from:)(a1, a2);
}

uint64_t FormatType.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3 = v2;
  sub_1C086BA04();
  uint64_t v7 = v6;
  uint64_t v40 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C086BA98();
  sub_1C085F050(&qword_1EB892460, (void (*)(uint64_t))sub_1C086BA98);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v39 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v40;
  uint64_t v13 = v9;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v21 = *((void *)v16 - 1);
      uint64_t v39 = (uint64_t *)*((void *)v16 - 2);
      uint64_t v22 = v12;
      uint64_t v23 = v7;
      swift_bridgeObjectRetain_n();
      uint64_t v24 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v24);
      *(&v37 - 4) = (uint64_t)&_s10CodingKeysON_219;
      *(&v37 - 3) = sub_1C086BB1C();
      *(&v37 - 2) = sub_1BFDB93C8();
      *(&v37 - 1) = sub_1C086BB70();
      swift_getKeyPath();
      swift_retain();
      uint64_t v25 = sub_1C085FB14((uint64_t)&unk_1F1B82060);
      swift_release_n();
      sub_1C02570B4();
      unint64_t v3 = (void *)swift_allocError();
      uint64_t v26 = (uint64_t)v39;
      *(void *)uint64_t v27 = v39;
      *(void *)(v27 + 8) = v21;
      *(void *)(v27 + 16) = v25;
      *(_OWORD *)(v27 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v26, v21, 1);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v23);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v43 = 0uLL;
  LOBYTE(v44) = 0;
  uint64_t v17 = sub_1C152069C();
  uint64_t v19 = v18;
  long long v43 = xmmword_1C153AB20;
  LOBYTE(v44) = 0;
  uint64_t v20 = sub_1C152060C();
  uint64_t v29 = v28;
  uint64_t v38 = v20;
  long long v41 = xmmword_1C1557FA0;
  char v42 = 0;
  sub_1BFDB941C();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v7);
  char v31 = v46;
  long long v32 = v43;
  long long v33 = v44;
  long long v34 = v45;
  uint64_t v36 = v38;
  __int16 v35 = v39;
  *uint64_t v39 = v17;
  v35[1] = v19;
  v35[2] = v36;
  v35[3] = v29;
  *((_OWORD *)v35 + 2) = v32;
  *((_OWORD *)v35 + 3) = v33;
  *((_OWORD *)v35 + 4) = v34;
  *((unsigned char *)v35 + 80) = v31;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDB93C8()
{
  unint64_t result = qword_1EB886EB0;
  if (!qword_1EB886EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB886EB0);
  }
  return result;
}

unint64_t sub_1BFDB941C()
{
  unint64_t result = qword_1EB876CD0;
  if (!qword_1EB876CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876CD0);
  }
  return result;
}

uint64_t destroy for FeedSlot()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFDB94D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatLocalizationString.Selector.init(from:)(a1, a2);
}

uint64_t FormatLocalizationString.Selector.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3 = v2;
  sub_1C0897EDC();
  uint64_t v7 = v6;
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0897F70();
  sub_1C085F050(&qword_1EB892130, (void (*)(uint64_t))sub_1C0897F70);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v32;
  uint64_t v13 = v9;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v21 = *((void *)v16 - 1);
      uint64_t v31 = *((void *)v16 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v22 = swift_bridgeObjectRelease();
      uint64_t v23 = v12;
      MEMORY[0x1F4188790](v22);
      *(&v31 - 4) = (uint64_t)&_s10CodingKeysON_104;
      *(&v31 - 3) = sub_1C0897FF4();
      *(&v31 - 2) = sub_1BFDB98D0();
      *(&v31 - 1) = sub_1C0898048();
      swift_getKeyPath();
      swift_retain();
      uint64_t v24 = sub_1C085FB14((uint64_t)&unk_1F1B86208);
      swift_release_n();
      sub_1C02570B4();
      unint64_t v3 = (void *)swift_allocError();
      uint64_t v25 = v31;
      *(void *)uint64_t v26 = v31;
      *(void *)(v26 + 8) = v21;
      *(void *)(v26 + 16) = v24;
      *(_OWORD *)(v26 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v25, v21, 1);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v7);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE9420C();
  long long v33 = 0uLL;
  char v34 = 0;
  sub_1C15206EC();
  uint64_t v17 = v9;
  uint64_t v18 = v7;
  uint64_t v19 = v12;
  uint64_t v20 = v36;
  uint64_t v31 = v35;
  long long v33 = xmmword_1C153AB20;
  char v34 = 0;
  uint64_t v28 = sub_1C152069C();
  uint64_t v30 = v29;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
  *a2 = v31;
  a2[1] = v20;
  a2[2] = v28;
  a2[3] = v30;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDB98D0()
{
  unint64_t result = qword_1EB88B668;
  if (!qword_1EB88B668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88B668);
  }
  return result;
}

uint64_t destroy for HeadlineViewLayout()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1BFDB99A8(void *a1)
{
  return FormatBindingTextExpression.encode(to:)(a1);
}

uint64_t FormatBindingTextExpression.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v55 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v36 - v8;
  sub_1C0877638();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C086A198(v3, (uint64_t)v54);
  uint64_t v13 = *(void *)(v3 + 64);
  uint64_t v42 = *(void *)(v3 + 56);
  uint64_t v43 = v13;
  unint64_t v40 = *(void *)(v3 + 72);
  uint64_t v41 = *(void *)(v3 + 80);
  uint64_t v38 = *(void *)(v3 + 88);
  uint64_t v39 = *(void *)(v3 + 96);
  int v37 = *(unsigned __int8 *)(v3 + 106);
  int v36 = *(unsigned __int16 *)(v3 + 104);
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1C087750C();
  uint64_t v17 = v16;
  uint64_t v18 = sub_1C085F050(&qword_1EB892280, (void (*)(uint64_t))sub_1C087750C);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatBindingTextExpression, v19, v14, (uint64_t)&type metadata for FormatBindingTextExpression, v17, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v12, v18, (uint64_t)&off_1F1C39B68);
  sub_1C086A1F4((uint64_t)v54, (void (*)(void, void, void, void, void, void, void, void))sub_1BFF2A99C);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1C151928C();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93CAB0);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
  v22(v9, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06AE044((uint64_t)v54, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  sub_1C086A1F4((uint64_t)v54, (void (*)(void, void, void, void, void, void, void, void))sub_1BFF0084C);
  if (!v2)
  {
    int v23 = v36 | (v37 << 16);
    v22(v55, v21, v20);
    swift_storeEnumTagMultiPayload();
    unsigned int v24 = v23;
    BOOL v25 = (v23 & 0xE00000) == 12582912;
    uint64_t v26 = v39;
    uint64_t v27 = v38;
    uint64_t v28 = v41;
    uint64_t v29 = v42;
    unint64_t v30 = v40;
    uint64_t v31 = v43;
    if (v25 && (v24 & 0xFFFFFF) == 0xC00000 && v42 == 1 && !(v40 | v43 | v41 | v38 | v39))
    {
      sub_1BFF2B090(1, 0, v40, v41, v38, v39, 0xC00000u);
      uint64_t v32 = (uint64_t)v55;
    }
    else
    {
      sub_1BFF2B090(v42, v43, v40, v41, v38, v39, v24);
      uint64_t v33 = (uint64_t)v55;
      char v34 = sub_1C082D548((uint64_t)v55, 1, 0, 0, (uint64_t)sub_1C01B158C, 0);
      uint64_t v32 = v33;
      uint64_t v31 = v43;
      if (v34)
      {
        long long v52 = xmmword_1C153AB20;
        char v53 = 0;
        uint64_t v29 = v42;
        uint64_t v44 = v42;
        uint64_t v45 = v43;
        unint64_t v46 = v30;
        uint64_t v47 = v28;
        uint64_t v48 = v27;
        uint64_t v49 = v26;
        char v51 = BYTE2(v24);
        __int16 v50 = v24;
        sub_1C08776CC();
        sub_1C085F050(&qword_1EB86E8C0, (void (*)(uint64_t))sub_1C08776CC);
        sub_1C0068E1C();
        uint64_t v28 = v41;
        unint64_t v30 = v40;
        sub_1C1520BAC();
        uint64_t v32 = (uint64_t)v55;
        uint64_t v31 = v43;
      }
      else
      {
        uint64_t v29 = v42;
      }
    }
    sub_1BFEFEB68(v32, type metadata accessor for FormatVersionRequirement);
    sub_1BFF00C44(v29, v31, v30, v28, v27, v26, v24);
  }
  return sub_1BFEFEB68((uint64_t)v12, (uint64_t (*)(void))sub_1C0877638);
}

uint64_t sub_1BFDB9F28@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatAccessibilityContent.init(from:)(a1, a2);
}

uint64_t FormatAccessibilityContent.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  *(void *)&long long v33 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v32 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_12:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  unint64_t v40 = a2;
  uint64_t v10 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_1C1520EAC();
  char v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = v33;
  uint64_t v14 = v9;
  if (v12)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unint64_t *)(v15 + 40);
      while (1)
      {
        unint64_t v18 = *v17;
        if (*v17 >= 4) {
          break;
        }
        v17 += 2;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v23 = *(v17 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v24 = v23;
      *(void *)(v24 + 8) = v18;
      *(void *)(v24 + 16) = &unk_1F1B838B0;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v23, v18);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
      a1 = v10;
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFDBA44C();
  long long v34 = 0uLL;
  sub_1C15206EC();
  if ((_BYTE)v39)
  {
    if (v39 == 1)
    {
      sub_1BFD18A88(0, &qword_1EB875FB8, (void (*)(void))sub_1C006E77C);
      long long v39 = xmmword_1C152C800;
      sub_1BFDBA4A0();
      sub_1C15206EC();
      uint64_t v19 = v40;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v7);
      uint64_t v20 = v35;
      long long v33 = v34;
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = v33;
      *(void *)(v21 + 32) = v20;
      unint64_t v22 = v21 | 0x4000000000000000;
    }
    else
    {
      sub_1C08FC718(0, (unint64_t *)&qword_1EB873EF8, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
      long long v39 = xmmword_1C152C800;
      sub_1C08662B4();
      sub_1C15206EC();
      uint64_t v19 = v40;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v7);
      long long v30 = v34;
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = v30;
      unint64_t v22 = v31 | 0x8000000000000000;
    }
    a1 = v10;
  }
  else
  {
    long long v39 = xmmword_1C152C800;
    sub_1BFE2F78C();
    sub_1C15206EC();
    a1 = v10;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    long long v32 = v35;
    long long v33 = v34;
    uint64_t v26 = v36;
    uint64_t v27 = v37;
    __int16 v28 = v38;
    unint64_t v22 = swift_allocObject();
    long long v29 = v32;
    *(_OWORD *)(v22 + 16) = v33;
    *(_OWORD *)(v22 + 32) = v29;
    *(void *)(v22 + 48) = v26;
    *(void *)(v22 + 56) = v27;
    *(_WORD *)(v22 + 64) = v28;
    uint64_t v19 = v40;
  }
  unint64_t *v19 = v22;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDBA44C()
{
  unint64_t result = qword_1EB88BFD0;
  if (!qword_1EB88BFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88BFD0);
  }
  return result;
}

unint64_t sub_1BFDBA4A0()
{
  unint64_t result = qword_1EB875FB0;
  if (!qword_1EB875FB0)
  {
    sub_1BFD18A88(255, &qword_1EB875FB8, (void (*)(void))sub_1C006E77C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875FB0);
  }
  return result;
}

uint64_t sub_1BFDBA524@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatTextNodeFormat.Token.init(from:)(a1, a2);
}

uint64_t FormatTextNodeFormat.Token.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v44 = a2;
  sub_1BFE89214();
  uint64_t v4 = v3;
  uint64_t v42 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C086E010();
  uint64_t v8 = v7;
  uint64_t v43 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C086E0A4();
  sub_1C085F050(&qword_1EB892630, (void (*)(uint64_t))sub_1C086E0A4);
  uint64_t v11 = v45;
  sub_1C1520EBC();
  char v12 = v11;
  if (v11)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v12);
    swift_willThrow();

    uint64_t v30 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  uint64_t v41 = v6;
  uint64_t v13 = a1[3];
  uint64_t v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  uint64_t v14 = sub_1C1520EAC();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  uint64_t v16 = v43;
  uint64_t v15 = v44;
  if (v13)
  {
    uint64_t v17 = sub_1C152070C();
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = (unsigned char *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18) {
          goto LABEL_7;
        }
      }
      uint64_t v24 = *((void *)v19 - 2);
      uint64_t v23 = *((void *)v19 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v25 = swift_bridgeObjectRelease();
      uint64_t v26 = v8;
      MEMORY[0x1F4188790](v25);
      *((void *)&v37 - 4) = &_s10CodingKeysON_209;
      *((void *)&v37 - 3) = sub_1C086E128();
      *((void *)&v37 - 2) = sub_1BFDBAB60();
      *((void *)&v37 - 1) = sub_1C086E17C();
      swift_getKeyPath();
      swift_retain();
      uint64_t v27 = sub_1C085FB14((uint64_t)&unk_1F1B82A40);
      swift_release_n();
      sub_1C02570B4();
      char v12 = (void *)swift_allocError();
      *(void *)uint64_t v28 = v24;
      *(void *)(v28 + 8) = v23;
      *(void *)(v28 + 16) = v27;
      *(_OWORD *)(v28 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v24, v23, 1);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v26);
      a1 = v45;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v48 = 0uLL;
  char v49 = 0;
  uint64_t v20 = sub_1C152069C();
  uint64_t v22 = v21;
  long long v48 = xmmword_1C153AB20;
  char v49 = 0;
  sub_1BFE3CF48();
  sub_1C15206EC();
  uint64_t v39 = v20;
  uint64_t v40 = v22;
  uint64_t v29 = v46;
  type metadata accessor for FormatTextNodeStyle();
  long long v48 = xmmword_1C1557FA0;
  char v49 = 0;
  sub_1C085F050(&qword_1EB8890A0, (void (*)(uint64_t))type metadata accessor for FormatTextNodeStyle);
  sub_1C152065C();
  uint64_t v38 = v29;
  uint64_t v32 = v46;
  long long v37 = xmmword_1C1557FB0;
  long long v48 = xmmword_1C1557FB0;
  char v49 = 0;
  if (sub_1C152071C())
  {
    long long v46 = v37;
    char v47 = 0;
    sub_1C085F050(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    long long v33 = v41;
    sub_1C15206EC();
    uint64_t v34 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v33, v4);
  }
  else
  {
    uint64_t v34 = MEMORY[0x1E4FBC870];
  }
  uint64_t v35 = v38;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v8);
  uint64_t v36 = v40;
  *uint64_t v15 = v39;
  v15[1] = v36;
  v15[2] = v35;
  v15[3] = v32;
  void v15[4] = v34;
  uint64_t v30 = (uint64_t)v45;
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

unint64_t sub_1BFDBAB60()
{
  unint64_t result = qword_1EB885570;
  if (!qword_1EB885570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB885570);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FormatLayoutValue(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

unint64_t sub_1BFDBABEC()
{
  unint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x65756C6176;
      break;
    case 2:
      unint64_t result = 0x6E65646E65706564;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatCommandAction.__deallocating_deinit()
{
  FormatCommandAction.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatCommandAction.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FormatDecorationProviderFactory.create(content:regions:options:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[0] = MEMORY[0x1E4FBC870];
  if (!(a2 >> 62))
  {
    uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v29 = a3;
    if (v11) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x1E4FBC870];
LABEL_12:
    sub_1BFDBB6C4(a1, (uint64_t)v10);
    char v16 = *(unsigned char *)(v4 + 33);
    uint64_t v17 = *(void *)(v4 + 40);
    uint64_t v18 = *(void *)(v4 + 64);
    uint64_t v19 = *(void *)(v4 + 72);
    uint64_t v20 = *(void **)(v4 + 80);
    uint64_t v21 = *(void *)(v4 + 88);
    uint64_t v22 = *(void *)(v4 + 96);
    uint64_t v23 = *(void *)(v4 + 104);
    LOBYTE(v30[0]) = *(unsigned char *)(v4 + 32);
    BYTE1(v30[0]) = v16;
    v30[1] = v17;
    long long v31 = *(_OWORD *)(v4 + 48);
    uint64_t v32 = v18;
    uint64_t v33 = v19;
    uint64_t v34 = v20;
    uint64_t v35 = v21;
    uint64_t v36 = v22;
    uint64_t v37 = v23;
    uint64_t v24 = *(void **)(v4 + 16);
    uint64_t v25 = *(void *)(v4 + 24);
    swift_bridgeObjectRetain();
    id v26 = v24;
    swift_bridgeObjectRetain();
    sub_1BFF1E730(v19, v20);
    uint64_t v27 = v29;
    swift_bridgeObjectRetain();
    swift_retain();
    return sub_1BFDBB198((uint64_t)v10, (uint64_t)v26, (char *)v30, v27, v15, v25);
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C15204BC();
  uint64_t v11 = result;
  uint64_t v29 = a3;
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  if (v11 >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0) {
        MEMORY[0x1C18C7CB0](v13, a2);
      }
      else {
        swift_retain();
      }
      ++v13;
      uint64_t v14 = swift_bridgeObjectRetain();
      sub_1BFDBAF2C(v14);
      swift_release();
    }
    while (v11 != v13);
    swift_bridgeObjectRelease();
    uint64_t v15 = v30[0];
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_1BFDBAF2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedGroupItem();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v23 - v10;
  int64_t v12 = 0;
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v24 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v12 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v17) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v17) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v24 + 8 * v12);
      if (!v21)
      {
        int64_t v12 = v20 + 2;
        if (v20 + 2 >= v17) {
          goto LABEL_23;
        }
        unint64_t v21 = *(void *)(v24 + 8 * v12);
        if (!v21)
        {
          int64_t v12 = v20 + 3;
          if (v20 + 3 >= v17) {
            goto LABEL_23;
          }
          unint64_t v21 = *(void *)(v24 + 8 * v12);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v16 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_5:
    sub_1BFED3AEC(*(void *)(a1 + 48) + *(void *)(v3 + 72) * v19, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
    sub_1C111D600((uint64_t)v11, (uint64_t)v5);
    sub_1BFED30EC((uint64_t)v8, (uint64_t)v5);
    sub_1BFECFCE4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
  }
  int64_t v22 = v20 + 4;
  if (v22 >= v17)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v17) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1BFDBB198(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v11 = *a3;
  char v34 = a3[1];
  uint64_t v32 = *((void *)a3 + 2);
  uint64_t v33 = *((void *)a3 + 1);
  uint64_t v30 = *((void *)a3 + 4);
  uint64_t v31 = *((void *)a3 + 3);
  uint64_t v28 = *((void *)a3 + 6);
  uint64_t v29 = *((void *)a3 + 5);
  uint64_t v26 = *((void *)a3 + 8);
  uint64_t v27 = *((void *)a3 + 7);
  uint64_t v25 = *((void *)a3 + 9);
  uint64_t v12 = type metadata accessor for FormatContent.Resolved();
  uint64_t v13 = *(int *)(v12 + 28);
  uint64_t v14 = *(int *)(v12 + 32);
  uint64_t v15 = *(void *)(a1 + v13);
  uint64_t v16 = *(void *)(a1 + v14);
  uint64_t v17 = *(void *)(v16 + 16);
  unint64_t v18 = MEMORY[0x1E4FBC860];
  if (v17)
  {
    uint64_t v23 = *(void *)(a1 + v13);
    char v24 = v11;
    *(void *)&long long v35 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C152028C();
    uint64_t v19 = v16 + 56;
    do
    {
      sub_1BFEE0A78();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      v19 += 80;
      --v17;
    }
    while (v17);
    unint64_t v18 = v35;
    swift_bridgeObjectRelease();
    char v11 = v24;
    uint64_t v15 = v23;
  }
  *(void *)&long long v35 = v15;
  swift_bridgeObjectRetain();
  sub_1BFDBB6AC(v18);
  uint64_t v20 = v35;
  uint64_t v36 = type metadata accessor for FormatLogger();
  uint64_t v37 = &protocol witness table for FormatLogger;
  *(void *)&long long v35 = swift_initStaticObject();
  type metadata accessor for FormatDecorationProvider();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  *(void *)(v21 + 24) = a2;
  *(unsigned char *)(v21 + 32) = v11;
  *(unsigned char *)(v21 + 33) = v34;
  *(void *)(v21 + 40) = v33;
  *(void *)(v21 + 48) = v32;
  *(void *)(v21 + 56) = v31;
  *(void *)(v21 + 64) = v30;
  *(void *)(v21 + 72) = v29;
  *(void *)(v21 + 80) = v28;
  *(void *)(v21 + 88) = v27;
  *(void *)(v21 + 96) = v26;
  *(void *)(v21 + 104) = v25;
  *(void *)(v21 + 112) = a4;
  *(void *)(v21 + 120) = a5;
  *(void *)(v21 + 128) = a6;
  sub_1BFC773DC(&v35, v21 + 136);
  sub_1BFF9CA1C(a1, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  return v21;
}

uint64_t type metadata accessor for FormatDecorationProvider()
{
  return self;
}

uint64_t sub_1BFDBB43C@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BFDBB474(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], a2);
}

uint64_t sub_1BFDBB474@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  long long v15 = a1[7];
  long long v37 = a1[6];
  long long v38 = v15;
  long long v39 = a1[8];
  long long v16 = a1[3];
  long long v33 = a1[2];
  long long v34 = v16;
  long long v17 = a1[5];
  long long v35 = a1[4];
  long long v36 = v17;
  long long v18 = a1[1];
  long long v31 = *a1;
  long long v32 = v18;
  sub_1C0187D08((uint64_t)&v31);
  uint64_t v19 = type metadata accessor for FormatLogger();
  swift_retain();
  uint64_t inited = swift_initStaticObject();
  a9[3] = (uint64_t)&type metadata for FormatGroupLayoutFactory;
  a9[4] = sub_1BFDBB614();
  uint64_t v21 = swift_allocObject();
  *a9 = v21;
  *(void *)(v21 + 200) = v19;
  *(void *)(v21 + 208) = &protocol witness table for FormatLogger;
  *(void *)(v21 + 176) = inited;
  uint64_t v22 = *(void *)(a3 + 8);
  sub_1BFC66384(a3 + 16, v21 + 224);
  long long v23 = v38;
  *(_OWORD *)(v21 + 112) = v37;
  *(_OWORD *)(v21 + 128) = v23;
  *(_OWORD *)(v21 + 144) = v39;
  long long v24 = v34;
  *(_OWORD *)(v21 + 48) = v33;
  *(_OWORD *)(v21 + 64) = v24;
  long long v25 = v36;
  *(_OWORD *)(v21 + 80) = v35;
  *(_OWORD *)(v21 + 96) = v25;
  long long v26 = v32;
  *(_OWORD *)(v21 + 16) = v31;
  *(_OWORD *)(v21 + 32) = v26;
  uint64_t v27 = MEMORY[0x1E4FBC870];
  *(void *)(v21 + 160) = a2;
  *(void *)(v21 + 168) = v27;
  *(void *)(v21 + 216) = v22;
  *(void *)(v21 + 264) = a4;
  *(void *)(v21 + 272) = a5;
  *(void *)(v21 + 280) = a6;
  *(void *)(v21 + 288) = a7;
  *(void *)(v21 + 296) = a8;
  *(void *)(v21 + 304) = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FormatLogger()
{
  return self;
}

unint64_t sub_1BFDBB614()
{
  unint64_t result = qword_1EB878268;
  if (!qword_1EB878268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878268);
  }
  return result;
}

uint64_t sub_1BFDBB668(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF019A4(a1, a2, a3, (void *)*v3, (void (*)(void))sub_1BFF05F54, (unint64_t *)&qword_1EB8779F0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1BFDBB6AC(unint64_t a1)
{
  return sub_1BFE4E3FC(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1BFE4E80C);
}

uint64_t sub_1BFDBB6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContent.Resolved();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFDBB728(long long *a1, long long *a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, long long *a7, long long *a8, long long *a9, long long *a10, uint64_t a11, long long *a12, long long a13, uint64_t a14, uint64_t a15, long long *a16, long long *a17, long long *a18)
{
  *(_WORD *)(v18 + 472) = 514;
  sub_1BFDBB8A8();
  swift_allocObject();
  *(void *)(v18 + 480) = sub_1C1518D9C();
  sub_1BFC773DC(a1, v18 + 16);
  sub_1BFC773DC(a2, v18 + 56);
  sub_1BFC773DC(a3, v18 + 96);
  *(void *)(v18 + 136) = a4;
  *(void *)(v18 + 144) = a5;
  *(void *)(v18 + 152) = a6;
  sub_1BFC773DC(a7, v18 + 160);
  sub_1BFC773DC(a8, v18 + 200);
  sub_1BFC773DC(a9, v18 + 240);
  sub_1BFC773DC(a10, v18 + 280);
  *(_OWORD *)(v18 + 320) = a13;
  *(void *)(v18 + 336) = a14;
  *(void *)(v18 + 344) = a15;
  sub_1BFC773DC(a16, v18 + 352);
  sub_1BFC773DC(a17, v18 + 392);
  sub_1BFC773DC(a18, v18 + 432);
  *(void *)(v18 + 488) = a11;
  sub_1BFC773DC(a12, v18 + 496);
  return v18;
}

void sub_1BFDBB8A8()
{
  if (!qword_1EB87C788)
  {
    sub_1C1515FDC();
    type metadata accessor for FormatService.CacheFormatFile(255);
    sub_1C014FD48((unint64_t *)&qword_1EB871100, 255, MEMORY[0x1E4F276F0]);
    unint64_t v0 = sub_1C1518DAC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87C788);
    }
  }
}

uint64_t sub_1BFDBB958@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatURL.init(from:)(a1, a2);
}

uint64_t FormatURL.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v32 = type metadata accessor for FormatAbsoluteURL();
  MEMORY[0x1F4188790](v32);
  long long v33 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v34 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v31 - v6;
  uint64_t v8 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  char v11 = v39;
  sub_1C1520EBC();
  uint64_t v12 = v11;
  if (v11)
  {
    uint64_t v13 = a1;
LABEL_15:
    sub_1C0038728(v13, (uint64_t)v12);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  v31[0] = (uint64_t)v10;
  v31[1] = v8;
  long long v39 = v7;
  uint64_t v15 = v34;
  uint64_t v14 = v35;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v16 = sub_1C1520EAC();
  char v17 = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  uint64_t v13 = a1;
  if (v17)
  {
    uint64_t v18 = sub_1C152070C();
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      uint64_t v20 = (unint64_t *)(v18 + 40);
      while (1)
      {
        unint64_t v21 = *v20;
        if (*v20 >= 4) {
          break;
        }
        v20 += 2;
        if (!--v19) {
          goto LABEL_8;
        }
      }
      uint64_t v25 = *(v20 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v12 = (void *)swift_allocError();
      *(void *)uint64_t v26 = v25;
      *(void *)(v26 + 8) = v21;
      *(void *)(v26 + 16) = &unk_1F1B81640;
      *(_OWORD *)(v26 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v25, v21);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v39, v5);
      goto LABEL_15;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BFDBBF28();
  *(_OWORD *)long long v37 = 0uLL;
  uint64_t v22 = v39;
  sub_1C15206EC();
  if ((_BYTE)v36)
  {
    if (v36 == 1)
    {
      long long v36 = xmmword_1C152C800;
      sub_1BFDBBFD0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v5);
      long long v23 = *(_OWORD *)&v37[8];
      uint64_t v24 = v31[0];
      *(void *)v31[0] = *(void *)v37;
      *(_OWORD *)(v24 + 8) = v23;
    }
    else
    {
      long long v36 = xmmword_1C152C800;
      sub_1BFDBBF7C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v5);
      uint64_t v29 = *(void *)&v37[16];
      char v30 = v38;
      uint64_t v24 = v31[0];
      *(_OWORD *)v31[0] = *(_OWORD *)v37;
      *(void *)(v24 + 16) = v29;
      *(unsigned char *)(v24 + 24) = v30;
    }
  }
  else
  {
    *(_OWORD *)long long v37 = xmmword_1C152C800;
    sub_1C085F050(&qword_1EB85EAC0, (void (*)(uint64_t))type metadata accessor for FormatAbsoluteURL);
    uint64_t v27 = (uint64_t)v33;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v5);
    uint64_t v24 = v31[0];
    sub_1BFE7FB8C(v27, v31[0], (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
  }
  swift_storeEnumTagMultiPayload();
  sub_1BFE7FB8C(v24, v14, (uint64_t (*)(void))type metadata accessor for FormatURL);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t type metadata accessor for FormatAbsoluteURL()
{
  uint64_t result = qword_1EB875558;
  if (!qword_1EB875558) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1BFDBBF28()
{
  unint64_t result = qword_1EB88FE80;
  if (!qword_1EB88FE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88FE80);
  }
  return result;
}

unint64_t sub_1BFDBBF7C()
{
  unint64_t result = qword_1EB875538;
  if (!qword_1EB875538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875538);
  }
  return result;
}

unint64_t sub_1BFDBBFD0()
{
  unint64_t result = qword_1EB874930;
  if (!qword_1EB874930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874930);
  }
  return result;
}

uint64_t sub_1BFDBC024(void *a1, uint64_t a2)
{
  return FormatSelectorValueSelector.encode(to:)(a1, a2);
}

uint64_t FormatSelectorValueSelector.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v40 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v38 = *(void *)(a2 + 16);
  uint64_t v36 = v11;
  uint64_t v12 = _s10CodingKeysOMa_236();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v15 = swift_getWitnessTable();
  *(void *)&long long v44 = v12;
  *((void *)&v44 + 1) = WitnessTable;
  uint64_t v45 = v14;
  uint64_t v46 = v15;
  uint64_t v16 = type metadata accessor for FormatCodingKeysContainer();
  uint64_t v17 = swift_getWitnessTable();
  sub_1C152083C();
  swift_getWitnessTable();
  uint64_t v47 = type metadata accessor for VersionedKeyedEncodingContainer();
  uint64_t v41 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  uint64_t v37 = a2;
  sub_1BFEFBD78(a2, v22, v20, a2, v16, (uint64_t)&type metadata for FormatVersions.Azden, v21, (uint64_t)v19, v17, (uint64_t)&off_1F1C39A68);
  uint64_t v24 = *v3;
  uint64_t v23 = v3[1];
  long long v39 = v3;
  v43[0] = v24;
  v43[1] = v23;
  long long v44 = 0uLL;
  LOBYTE(v45) = 0;
  uint64_t v25 = qword_1EB8875F8;
  swift_bridgeObjectRetain();
  if (v25 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1C151928C();
  uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1EB93C9F0);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
  v28(v10, v27, v26);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  unint64_t v29 = sub_1BFE79808();
  uint64_t v30 = v42;
  sub_1BFEFFFF0((uint64_t)v43, (uint64_t)&v44, (uint64_t)v10, (uint64_t)sub_1C01B158C, 0, v47, (uint64_t)&type metadata for FormatSelector, v29);
  sub_1BFEFEB68((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v30) {
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v19, v47);
  }
  uint64_t v32 = (uint64_t)v40;
  uint64_t v33 = (uint64_t)v39 + *(int *)(v37 + 36);
  long long v44 = xmmword_1C153AB20;
  LOBYTE(v45) = 0;
  v28(v40, v27, v26);
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = v47;
  sub_1BFEFFFF0(v33, (uint64_t)&v44, v32, (uint64_t)sub_1C01B158C, 0, v47, v38, *(void *)(v36 + 16));
  sub_1BFEFEB68(v32, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v19, v34);
}

uint64_t sub_1BFDBC4C8()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFDBC518()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFDBC578()
{
  unint64_t result = qword_1EB887D10;
  if (!qword_1EB887D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887D10);
  }
  return result;
}

unint64_t sub_1BFDBC5CC(void *a1)
{
  return FormatAccessibilityProperty.encode(to:)(a1);
}

unint64_t FormatAccessibilityProperty.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v65 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v64 = (char *)&v61 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v63 = (char *)&v61 - v9;
  MEMORY[0x1F4188790](v10);
  unint64_t v62 = (char *)&v61 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v61 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v61 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v61 - v19;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v24 = *(void *)v2;
  int v25 = *(unsigned __int8 *)(v2 + 8);
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  unint64_t v28 = sub_1BFEB6A24();
  long long v66 = v23;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatAccessibilityProperty, v29, v26, (uint64_t)&type metadata for FormatAccessibilityProperty, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v23, v28, (uint64_t)&off_1F1C39B68);
  if (v25) {
    int v30 = 4;
  }
  else {
    int v30 = 0;
  }
  switch((v24 >> 60) & 3 | v30)
  {
    case 1uLL:
      unint64_t v36 = v24 & 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v37 = qword_1EB882D28;
      swift_retain();
      if (v37 != -1) {
        swift_once();
      }
      uint64_t v38 = sub_1C151928C();
      uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v17, v39, v38);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v40 = 1;
      goto LABEL_23;
    case 2uLL:
      uint64_t v41 = qword_1EB882D28;
      swift_retain();
      if (v41 != -1) {
        swift_once();
      }
      uint64_t v42 = sub_1C151928C();
      uint64_t v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v14, v43, v42);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = (uint64_t)v66;
      sub_1BFDBCDF4(2, v24 & 0xCFFFFFFFFFFFFFFFLL, (uint64_t)v14);
      uint64_t v45 = (uint64_t)v14;
      goto LABEL_25;
    case 3uLL:
      unint64_t v36 = v24 & 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v46 = qword_1EB882D28;
      swift_retain();
      if (v46 != -1) {
        swift_once();
      }
      uint64_t v47 = sub_1C151928C();
      uint64_t v48 = __swift_project_value_buffer(v47, (uint64_t)qword_1EB93CAB0);
      uint64_t v17 = v62;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v62, v48, v47);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v40 = 3;
      goto LABEL_23;
    case 4uLL:
      uint64_t v49 = qword_1EB882D28;
      swift_retain();
      if (v49 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_1C151928C();
      uint64_t v51 = __swift_project_value_buffer(v50, (uint64_t)qword_1EB93CAB0);
      uint64_t v17 = v63;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v63, v51, v50);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v40 = 4;
      uint64_t v52 = v24;
      goto LABEL_24;
    case 5uLL:
      unint64_t v36 = v24 & 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v53 = qword_1EB882D28;
      swift_retain();
      if (v53 != -1) {
        swift_once();
      }
      uint64_t v54 = sub_1C151928C();
      uint64_t v55 = __swift_project_value_buffer(v54, (uint64_t)qword_1EB93CAB0);
      uint64_t v17 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v64, v55, v54);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v40 = 5;
LABEL_23:
      uint64_t v52 = v36;
LABEL_24:
      uint64_t v44 = (uint64_t)v66;
      sub_1BFDBCDF4(v40, v52, (uint64_t)v17);
      uint64_t v45 = (uint64_t)v17;
LABEL_25:
      sub_1BFEFEB68(v45, type metadata accessor for FormatVersionRequirement);
      uint64_t v35 = v44;
      goto LABEL_26;
    case 6uLL:
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_1C151928C();
      uint64_t v58 = __swift_project_value_buffer(v57, (uint64_t)qword_1EB93CAB0);
      uint64_t v59 = (uint64_t)v65;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(v65, v58, v57);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v60 = (uint64_t)v66;
      sub_1BFDBD030(6, v24, v59);
      sub_1BFEFEB68(v59, type metadata accessor for FormatVersionRequirement);
      return sub_1BFEFEB68(v60, (uint64_t (*)(void))sub_1BFEFF7D8);
    default:
      uint64_t v31 = qword_1EB882D28;
      swift_retain();
      if (v31 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_1C151928C();
      uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v20, v33, v32);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = (uint64_t)v66;
      sub_1BFDBCDF4(0, v24, (uint64_t)v20);
      sub_1BFEFEB68((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
      uint64_t v35 = v34;
LABEL_26:
      sub_1BFEFEB68(v35, (uint64_t (*)(void))sub_1BFEFF7D8);
      return sub_1BFF4BCA0(v24, v25);
  }
}

uint64_t sub_1BFDBCDF4(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C09012D4;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDBCF88();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFDBCFDC();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDBCF88()
{
  unint64_t result = qword_1EB868110;
  if (!qword_1EB868110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868110);
  }
  return result;
}

unint64_t sub_1BFDBCFDC()
{
  unint64_t result = qword_1EB8787F8;
  if (!qword_1EB8787F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8787F8);
  }
  return result;
}

uint64_t sub_1BFDBD030(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C09012D4;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDBCF88();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB873EB8, (uint64_t (*)(void))sub_1C086E9C4, (uint64_t)&type metadata for FormatAccessibilityTrait, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C09012E0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDBD204@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDBD23C();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDBD23C()
{
  uint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1BFDBD290@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FormatSwitchValue.DefaultValue.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t FormatSwitchValue.DefaultValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a1;
  uint64_t v60 = a3;
  uint64_t v54 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v61 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v55 = v6;
  long long v56 = (char *)&v46 - v7;
  uint64_t v59 = v8;
  uint64_t v9 = _s10CodingKeysOMa_38();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v62 = v9;
  uint64_t v63 = WitnessTable;
  uint64_t v52 = v12;
  uint64_t v53 = v11;
  uint64_t v64 = v11;
  uint64_t v65 = v12;
  uint64_t v13 = type metadata accessor for FormatCodingKeysContainer();
  swift_getWitnessTable();
  uint64_t v14 = sub_1C152072C();
  uint64_t v57 = *(void *)(v14 - 8);
  uint64_t v58 = v14;
  MEMORY[0x1F4188790](v14);
  char v16 = (char *)&v46 - v15;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  char v17 = (void *)v66;
  sub_1C1520EBC();
  uint64_t v18 = v17;
  if (v17) {
    goto LABEL_15;
  }
  uint64_t v66 = v13;
  uint64_t v49 = v9;
  uint64_t v50 = 0;
  uint64_t v48 = WitnessTable;
  uint64_t v51 = v16;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v19 = sub_1C1520EAC();
  char v20 = Dictionary<>.errorOnUnknownKeys.getter(v19);
  swift_bridgeObjectRelease();
  uint64_t v21 = v60;
  uint64_t v22 = (uint64_t)v61;
  uint64_t v23 = v56;
  uint64_t v24 = v57;
  uint64_t v25 = v58;
  if ((v20 & 1) == 0)
  {
LABEL_11:
    uint64_t v62 = 0;
    uint64_t v63 = 0;
    LOBYTE(v64) = 0;
    uint64_t v39 = v55;
    char v40 = v50;
    uint64_t v41 = v51;
    sub_1C15206EC();
    if (!v40)
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v41, v25);
      (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v22, v23, v39);
      sub_1BFD66DA0(v22, v39, v21);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v41, v25);
    uint64_t v18 = v40;
LABEL_15:
    sub_1C0038728(v3, (uint64_t)v18);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  uint64_t v26 = sub_1C152070C();
  uint64_t v27 = v66;
  if (!MEMORY[0x1C18C6870](v26, v66))
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v47 = v3;
  uint64_t v28 = 0;
  uint64_t v29 = (char *)(v26 + 48);
  while (1)
  {
    char v30 = sub_1C151ECDC();
    uint64_t result = sub_1C151EC7C();
    if ((v30 & 1) == 0) {
      break;
    }
    if (__OFADD__(v28, 1)) {
      goto LABEL_18;
    }
    uint64_t v66 = v28 + 1;
    uint64_t v32 = v26;
    uint64_t v34 = *((void *)v29 - 2);
    uint64_t v33 = *((void *)v29 - 1);
    char v35 = *v29;
    uint64_t v62 = v34;
    uint64_t v63 = v33;
    LOBYTE(v64) = v35;
    sub_1BFE94AB4(v34, v33, v35);
    uint64_t v36 = sub_1C0D990EC(v27);
    if (v37)
    {
      uint64_t v42 = v36;
      uint64_t v43 = v37;
      swift_bridgeObjectRelease();
      uint64_t v44 = sub_1C0D98F50(v49, v48, v53, v52);
      sub_1C02570B4();
      uint64_t v18 = (void *)swift_allocError();
      *(void *)uint64_t v45 = v42;
      *(void *)(v45 + 8) = v43;
      *(void *)(v45 + 16) = v44;
      *(_OWORD *)(v45 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v62, v63, v64);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v51, v58);
      uint64_t v3 = v47;
      goto LABEL_15;
    }
    sub_1BFE94AD4(v34, v33, v35);
    uint64_t v26 = v32;
    uint64_t v38 = MEMORY[0x1C18C6870](v32, v27);
    ++v28;
    v29 += 24;
    uint64_t v21 = v60;
    uint64_t v22 = (uint64_t)v61;
    if (v66 == v38)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = v47;
      uint64_t v25 = v58;
      uint64_t v23 = v56;
      uint64_t v24 = v57;
      goto LABEL_11;
    }
  }
  uint64_t result = sub_1C152016C();
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t _s10CodingKeysOMa_38()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFDBD7C0@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatTextSize.init(from:)(a1, a2);
}

uint64_t FormatTextSize.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  sub_1BFEFF588(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v36 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v32 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v33 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = sub_1C1520EAC();
  char v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = v36;
  uint64_t v12 = v8;
  if ((v10 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v13 = sub_1C152070C();
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
LABEL_8:
    sub_1BFDBDE18();
    v35[0] = 0uLL;
    sub_1C15206EC();
    switch((char)v34)
    {
      case 1:
        unint64_t v18 = 0xC000000000000008;
        (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v6);
        break;
      case 2:
        sub_1BFC66384((uint64_t)a1, (uint64_t)v35);
        FormatSize.init(from:)(v35, (unint64_t *)&v34);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v6);
        uint64_t v17 = v34;
        unint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = v17;
        break;
      case 3:
        sub_1BFEFF588(0, &qword_1EB891570, (uint64_t (*)(void))sub_1C08E5700, (uint64_t)&type metadata for FormatTextSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
        long long v34 = xmmword_1C152C800;
        sub_1C0FB8CD8();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v6);
        long long v22 = v35[0];
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = v22;
        unint64_t v18 = v23 | 0x2000000000000000;
        break;
      case 4:
        (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v6);
        unint64_t v18 = 0xC000000000000010;
        break;
      case 5:
        sub_1C0FB8C48();
        v35[0] = xmmword_1C152C800;
        sub_1BFDBDE6C();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v6);
        uint64_t v24 = v34;
        uint64_t v25 = swift_allocObject();
        *(void *)(v25 + 16) = v24;
        unint64_t v18 = v25 | 0x4000000000000000;
        break;
      case 6:
        sub_1C0FB8C48();
        v35[0] = xmmword_1C152C800;
        sub_1BFDBDE6C();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v6);
        uint64_t v26 = v34;
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = v26;
        unint64_t v18 = v27 | 0x6000000000000000;
        break;
      case 7:
        v35[0] = xmmword_1C152C800;
        sub_1BFE3CF48();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v6);
        uint64_t v28 = v34;
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = v28;
        unint64_t v18 = v29 | 0xA000000000000000;
        break;
      case 8:
        v35[0] = xmmword_1C152C800;
        sub_1BFE3CF48();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v6);
        uint64_t v30 = v34;
        uint64_t v31 = swift_allocObject();
        *(void *)(v31 + 16) = v30;
        unint64_t v18 = v31 | 0x8000000000000000;
        break;
      default:
        (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v6);
        unint64_t v18 = 0xC000000000000000;
        break;
    }
    *uint64_t v33 = v18;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    unint64_t v16 = *v15;
    if (*v15 >= 4) {
      break;
    }
    v15 += 2;
    if (!--v14) {
      goto LABEL_7;
    }
  }
  uint64_t v19 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1C02570B4();
  swift_allocError();
  *(void *)uint64_t v20 = v19;
  *(void *)(v20 + 8) = v16;
  *(void *)(v20 + 16) = &unk_1F1B891B0;
  *(_OWORD *)(v20 + 24) = xmmword_1C15363B0;
  swift_willThrow();
  sub_1C0257108(v19, v16);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v6);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDBDE18()
{
  unint64_t result = qword_1EB874CB0;
  if (!qword_1EB874CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874CB0);
  }
  return result;
}

unint64_t sub_1BFDBDE6C()
{
  unint64_t result = qword_1EB879EF8;
  if (!qword_1EB879EF8)
  {
    sub_1C0FB8C48();
    sub_1C006ECBC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879EF8);
  }
  return result;
}

uint64_t sub_1BFDBDEDC(void *a1)
{
  return FormatAccessibilityContent.encode(to:)(a1);
}

uint64_t FormatAccessibilityContent.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v35[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v35[-v7 - 8];
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v35[-v10 - 8];
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v35[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  unint64_t v15 = *v1;
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  unint64_t v18 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatAccessibilityContent, v19, v16, (uint64_t)&type metadata for FormatAccessibilityContent, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v14, v18, (uint64_t)&off_1F1C39B68);
  if (!(v15 >> 62))
  {
    sub_1C086A198(v15 + 16, (uint64_t)v35);
    if (qword_1EB882D28 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1C151928C();
    uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1EB93CAB0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v11, v28, v27);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BFDBE390(0, (uint64_t)v35, (uint64_t)v11);
    sub_1BFEFEB68((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
    return sub_1BFEFEB68((uint64_t)v14, (uint64_t (*)(void))sub_1BFEFF7D8);
  }
  if (v15 >> 62 != 1)
  {
    uint64_t v29 = *(void *)((v15 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v30 = *(void *)((v15 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v31 = qword_1EB882D28;
    swift_bridgeObjectRetain();
    if (v31 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_1C151928C();
    uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1EB93CAB0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v5, v33, v32);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BFDBE584(2, v29, v30, (uint64_t)v5);
    sub_1BFEFEB68((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1BFEFEB68((uint64_t)v14, (uint64_t (*)(void))sub_1BFEFF7D8);
  }
  uint64_t v20 = *(void *)((v15 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v21 = *(void *)((v15 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  uint64_t v22 = *(void *)((v15 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
  uint64_t v23 = qword_1EB882D28;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v23 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1C151928C();
  uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EB93CAB0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v8, v25, v24);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BFDBE74C(1, v20, v21, v22, (uint64_t)v8);
  sub_1BFEFEB68((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  sub_1BFEFEB68((uint64_t)v14, (uint64_t (*)(void))sub_1BFEFF7D8);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BFDBE390(char a1, uint64_t a2, uint64_t a3)
{
  v16[55] = a1;
  sub_1C086A198(a2, (uint64_t)v16);
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C09014E0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDBE530();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE1AB4C();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDBE530()
{
  unint64_t result = qword_1EB867D58;
  if (!qword_1EB867D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867D58);
  }
  return result;
}

uint64_t sub_1BFDBE584(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C09014E0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDBE530();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FC718(0, (unint64_t *)&qword_1EB873EF8, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08EC8E4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDBE74C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C09014E0;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDBE530();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFD18A88(0, &qword_1EB875FB8, (void (*)(void))sub_1C006E77C);
    sub_1BFDBE918();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDBE918()
{
  unint64_t result = qword_1EB85B9E0;
  if (!qword_1EB85B9E0)
  {
    sub_1BFD18A88(255, &qword_1EB875FB8, (void (*)(void))sub_1C006E77C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B9E0);
  }
  return result;
}

uint64_t sub_1BFDBE99C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatLocalizationString.init(from:)(a1, a2);
}

uint64_t FormatLocalizationString.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v48 = a2;
  sub_1C0908CDC(0, &qword_1EB871400, (void (*)(void))sub_1C00700D4, (void (*)(void))sub_1C0070128);
  uint64_t v46 = *(void *)(v5 - 8);
  uint64_t v47 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v39 - v6;
  sub_1C0897B64();
  uint64_t v9 = v8;
  uint64_t v45 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0897BF8();
  sub_1C085F050(&qword_1EB892120, (void (*)(uint64_t))sub_1C0897BF8);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    uint64_t v31 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v31);
  }
  uint64_t v43 = v7;
  uint64_t v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = v9;
  uint64_t v16 = v47;
  long long v15 = v48;
  uint64_t v17 = v46;
  if (v13)
  {
    uint64_t v18 = sub_1C152070C();
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      uint64_t v20 = (unsigned char *)(v18 + 48);
      while (*v20 != 1)
      {
        v20 += 24;
        if (!--v19) {
          goto LABEL_7;
        }
      }
      uint64_t v25 = v14;
      uint64_t v26 = *((void *)v20 - 2);
      uint64_t v27 = *((void *)v20 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v28 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v28);
      *((void *)&v39 - 4) = &_s10CodingKeysON_105;
      *((void *)&v39 - 3) = sub_1C0897C7C();
      *((void *)&v39 - 2) = sub_1BFDBEF04();
      *((void *)&v39 - 1) = sub_1C0897CD0();
      swift_getKeyPath();
      swift_retain();
      uint64_t v29 = sub_1C085FB14((uint64_t)&unk_1F1B861E0);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v30 = v26;
      *(void *)(v30 + 8) = v27;
      *(void *)(v30 + 16) = v29;
      *(_OWORD *)(v30 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v26, v27, 1);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v25);
      a1 = v44;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v51 = 0uLL;
  char v52 = 0;
  uint64_t v21 = sub_1C152069C();
  uint64_t v23 = v22;
  uint64_t v42 = v21;
  long long v51 = xmmword_1C153AB20;
  char v52 = 0;
  uint64_t v24 = sub_1C152060C();
  uint64_t v34 = v33;
  uint64_t v40 = v24;
  uint64_t v41 = v23;
  long long v39 = xmmword_1C1557FA0;
  long long v51 = xmmword_1C1557FA0;
  char v52 = 0;
  char v35 = sub_1C152071C();
  uint64_t v36 = v45;
  if (v35)
  {
    long long v49 = v39;
    char v50 = 0;
    sub_1C0897D24();
    sub_1C15206EC();
    uint64_t v37 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v43, v16);
  }
  else
  {
    uint64_t v37 = MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v14);
  uint64_t v38 = v41;
  *long long v15 = v42;
  v15[1] = v38;
  v15[2] = v40;
  v15[3] = v34;
  void v15[4] = v37;
  uint64_t v31 = (uint64_t)v44;
  return __swift_destroy_boxed_opaque_existential_1(v31);
}

unint64_t sub_1BFDBEF04()
{
  unint64_t result = qword_1EB88B650;
  if (!qword_1EB88B650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88B650);
  }
  return result;
}

uint64_t sub_1BFDBEF58(void *a1)
{
  return FormatAdMetricsNode.encode(to:)(a1);
}

uint64_t FormatAdMetricsNode.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v69 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v70 = (char *)&v69 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v71 = (char *)&v69 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v72 = (char *)&v69 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v73 = (char *)&v69 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v74 = (char *)&v69 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v75 = (char *)&v69 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v77 = (char *)&v69 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v69 - v22;
  sub_1C0862390();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1[3];
  uint64_t v28 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  sub_1C08624B8();
  uint64_t v30 = v29;
  uint64_t v31 = sub_1C085F050(&qword_1EB891D50, (void (*)(uint64_t))sub_1C08624B8);
  sub_1BFEFBD78(v4, v32, v27, v4, v30, (uint64_t)&type metadata for FormatVersions.Azden, v28, (uint64_t)v26, v31, (uint64_t)&off_1F1C39A68);
  swift_beginAccess();
  uint64_t v33 = v2[2];
  uint64_t v34 = v2[3];
  uint64_t v76 = v2;
  uint64_t v35 = qword_1EB8875F8;
  swift_bridgeObjectRetain();
  if (v35 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1C151928C();
  uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB93C9F0);
  uint64_t v38 = *(void *)(v36 - 8);
  long long v39 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
  uint64_t v40 = (char *)(v38 + 16);
  v39(v23, v37, v36);
  uint64_t v41 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = v78;
  sub_1C06D39F8(v33, v34, 0, 0, 0, (uint64_t)v23, (uint64_t)sub_1C01B158C, 0);
  if (v42)
  {
    sub_1BFEFEB68((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v43 = (uint64_t)v77;
    v39(v77, v37, v36);
    swift_storeEnumTagMultiPayload();
    sub_1C06BE100(1, 0, 0, v43, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v43, type metadata accessor for FormatVersionRequirement);
    uint64_t v45 = v76[4];
    uint64_t v44 = v76[5];
    uint64_t v46 = (uint64_t)v75;
    uint64_t v77 = (char *)v37;
    ((void (*)(char *))v39)(v75);
    uint64_t v78 = v41;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1C06BE290(v45, v44, 2, 0, 0, v46, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v46, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v47 = v76;
    unint64_t v48 = v76[6];
    uint64_t v49 = (uint64_t)v74;
    v39(v74, (uint64_t)v77, v36);
    swift_storeEnumTagMultiPayload();
    sub_1BFF35EA4(v48);
    sub_1C06BE424(v48, 3, 0, 0, v49, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v49, type metadata accessor for FormatVersionRequirement);
    sub_1BFF322A8(v48);
    char v50 = v47;
    uint64_t v51 = v47[7];
    uint64_t v52 = qword_1EB887630;
    swift_retain();
    if (v52 != -1) {
      swift_once();
    }
    uint64_t v53 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB93CA80);
    uint64_t v54 = (uint64_t)v73;
    v39(v73, v53, v36);
    swift_storeEnumTagMultiPayload();
    sub_1C0718CA8(v51, 4, 0, 0, v54, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v54, type metadata accessor for FormatVersionRequirement);
    swift_release();
    swift_beginAccess();
    uint64_t v55 = (uint64_t)v72;
    uint64_t v75 = v40;
    v39(v72, (uint64_t)v77, v36);
    swift_storeEnumTagMultiPayload();
    uint64_t v56 = swift_bridgeObjectRetain();
    sub_1C06D3C38(v56, 5, 0, 0);
    sub_1BFEFEB68(v55, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v58 = v50[9];
    uint64_t v59 = (uint64_t)v71;
    v39(v71, (uint64_t)v77, v36);
    swift_storeEnumTagMultiPayload();
    if (v58)
    {
      char v60 = sub_1C083BD40(v59, 6, 0, 0, (uint64_t)sub_1C01B158C, 0);
      uint64_t v61 = (uint64_t)v70;
      if (v60)
      {
        long long v83 = xmmword_1C1557FE0;
        char v84 = 0;
        *(void *)&long long v81 = v58;
        sub_1C0862424();
        sub_1C085F050(&qword_1EB86E2A0, (void (*)(uint64_t))sub_1C0862424);
        sub_1C1520BAC();
      }
    }
    else
    {
      uint64_t v61 = (uint64_t)v70;
    }
    sub_1BFEFEB68((uint64_t)v71, type metadata accessor for FormatVersionRequirement);
    uint64_t v62 = v76;
    swift_beginAccess();
    unint64_t v63 = v62[10];
    sub_1BFE6FA30(v63);
    if (qword_1EB887638 != -1) {
      swift_once();
    }
    uint64_t v64 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB93CA98);
    v39((char *)v61, v64, v36);
    swift_storeEnumTagMultiPayload();
    if (v63 != 0x8000000000000000 && (sub_1C083BD40(v61, 7, 0, 0, (uint64_t)sub_1C01B158C, 0) & 1) != 0)
    {
      uint64_t v77 = (char *)v39;
      long long v81 = xmmword_1C1557FF0;
      char v82 = 0;
      *(void *)&long long v79 = v63;
      sub_1C0862424();
      sub_1C085F050(&qword_1EB86E2A0, (void (*)(uint64_t))sub_1C0862424);
      sub_1C009DA10();
      sub_1C1520BAC();
      long long v39 = (void (*)(char *, uint64_t, uint64_t))v77;
    }
    sub_1BFEFEB68(v61, type metadata accessor for FormatVersionRequirement);
    sub_1BFF0056C(v63);
    uint64_t v65 = v76;
    swift_beginAccess();
    char v66 = *((unsigned char *)v65 + 88);
    if (qword_1EB887650 != -1) {
      swift_once();
    }
    uint64_t v67 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB93CAE0);
    uint64_t v68 = (uint64_t)v69;
    v39(v69, v67, v36);
    swift_storeEnumTagMultiPayload();
    if (v66 & 1) == 0 && (sub_1C083BD40(v68, 8, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v79 = xmmword_1C1558010;
      char v80 = 0;
      char v85 = 0;
      sub_1C0862424();
      sub_1C085F050(&qword_1EB86E2A0, (void (*)(uint64_t))sub_1C0862424);
      sub_1C1520BAC();
    }
    sub_1BFEFEB68(v68, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BFEFEB68((uint64_t)v26, (uint64_t (*)(void))sub_1C0862390);
}

unint64_t sub_1BFDBFCA8()
{
  unint64_t result = qword_1EB85BF88;
  if (!qword_1EB85BF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BF88);
  }
  return result;
}

uint64_t sub_1BFDBFCFC(void *a1)
{
  return FormatCornerRadius.encode(to:)(a1);
}

uint64_t FormatCornerRadius.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v25 - v7;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = *(double *)v1;
  uint64_t v12 = *(void *)(v1 + 8);
  int v14 = *(char *)(v1 + 16);
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  unint64_t v17 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatCornerRadius, v18, v15, (uint64_t)&type metadata for FormatCornerRadius, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v11, v17, (uint64_t)&off_1F1C39B68);
  if (v14 < 0)
  {
    if (qword_1EB882D28 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1C151928C();
    uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB93CAB0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v5, v23, v22);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BFDC028C(1, LOBYTE(v13) & 1, (uint64_t)v5);
    uint64_t v21 = (uint64_t)v5;
  }
  else
  {
    if (qword_1EB882D28 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1C151928C();
    uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB93CAB0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v8, v20, v19);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BFDC0048(0, v12, v14 & 1, (uint64_t)v8, v13);
    uint64_t v21 = (uint64_t)v8;
  }
  sub_1BFEFEB68(v21, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68((uint64_t)v11, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFDC0048(char a1, uint64_t a2, char a3, uint64_t a4, double a5)
{
  char v8 = a1 & 1;
  char v21 = a1 & 1;
  double v18 = a5;
  uint64_t v19 = a2;
  char v20 = a3;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = v8;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  v16[2] = sub_1C08FCD90;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDC01E4();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFDC0238();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDC01E4()
{
  unint64_t result = qword_1EB866328;
  if (!qword_1EB866328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866328);
  }
  return result;
}

unint64_t sub_1BFDC0238()
{
  unint64_t result = qword_1EB85B9F0;
  if (!qword_1EB85B9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B9F0);
  }
  return result;
}

uint64_t sub_1BFDC028C(char a1, char a2, uint64_t a3)
{
  char v6 = a1 & 1;
  char v17 = a1 & 1;
  char v16 = a2;
  sub_1BFEFF7D8();
  char v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FCD90;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDC01E4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    if ((v16 & 1) == 0)
    {
      long long v15 = xmmword_1C152C800;
      sub_1BFDC0428();
      sub_1C1520BAC();
    }
  }
  return swift_release();
}

unint64_t sub_1BFDC0428()
{
  unint64_t result = qword_1EB860138;
  if (!qword_1EB860138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860138);
  }
  return result;
}

uint64_t sub_1BFDC047C@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatColor.init(from:)(a1, a2);
}

uint64_t sub_1BFDC0494(void *a1)
{
  return FormatFontWeight.encode(to:)(a1);
}

uint64_t FormatFontWeight.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v62 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v61 = (char *)&v54 - v6;
  MEMORY[0x1F4188790](v7);
  char v60 = (char *)&v54 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (char *)&v54 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v58 = (char *)&v54 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v57 = (char *)&v54 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v56 = (char *)&v54 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v55 = (char *)&v54 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v54 = (char *)&v54 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v54 - v22;
  uint64_t v24 = (void *)*v1;
  unint64_t v63 = a1;
  uint64_t v64 = v24;
  uint64_t v25 = a1[3];
  uint64_t v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_1C151928C();
  uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1EB93CAB0);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16);
  v29(v23, v28, v27);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = v67;
  sub_1BFE97CE8((uint64_t)v23, (uint64_t)sub_1C01B158C, 0, v25, v26);
  if (v30) {
    return sub_1BFEFEB68((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
  }
  sub_1BFEFEB68((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
  switch((unint64_t)v64)
  {
    case 1uLL:
      uint64_t v67 = 0;
      uint64_t v35 = v63;
      uint64_t v36 = v63[3];
      uint64_t v64 = (void *)v63[4];
      __swift_project_boxed_opaque_existential_1(v63, v36);
      uint64_t v37 = (uint64_t)v55;
      v29(v55, v28, v27);
      swift_storeEnumTagMultiPayload();
      uint64_t v38 = v67;
      sub_1BFE97CE8(v37, (uint64_t)sub_1C01B158C, 0, v36, (uint64_t)v64);
      uint64_t v39 = v37;
      uint64_t v32 = v35;
      uint64_t result = sub_1BFEFEB68(v39, type metadata accessor for FormatVersionRequirement);
      if (!v38) {
        goto LABEL_17;
      }
      return result;
    case 2uLL:
      uint64_t v32 = v63;
      uint64_t v40 = v63[3];
      uint64_t v67 = v63[4];
      uint64_t v64 = __swift_project_boxed_opaque_existential_1(v63, v40);
      uint64_t v41 = (uint64_t)v56;
      v29(v56, v28, v27);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v41, (uint64_t)sub_1C01B158C, 0, v40, v67);
      sub_1BFEFEB68(v41, type metadata accessor for FormatVersionRequirement);
      goto LABEL_17;
    case 3uLL:
      uint64_t v32 = v63;
      uint64_t v42 = v63[3];
      uint64_t v67 = v63[4];
      uint64_t v64 = __swift_project_boxed_opaque_existential_1(v63, v42);
      uint64_t v43 = (uint64_t)v57;
      v29(v57, v28, v27);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v43, (uint64_t)sub_1C01B158C, 0, v42, v67);
      sub_1BFEFEB68(v43, type metadata accessor for FormatVersionRequirement);
      goto LABEL_17;
    case 4uLL:
      uint64_t v32 = v63;
      uint64_t v44 = v63[3];
      uint64_t v67 = v63[4];
      uint64_t v64 = __swift_project_boxed_opaque_existential_1(v63, v44);
      uint64_t v45 = (uint64_t)v58;
      v29(v58, v28, v27);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v45, (uint64_t)sub_1C01B158C, 0, v44, v67);
      sub_1BFEFEB68(v45, type metadata accessor for FormatVersionRequirement);
      goto LABEL_17;
    case 5uLL:
      uint64_t v32 = v63;
      uint64_t v46 = v63[3];
      uint64_t v67 = v63[4];
      uint64_t v64 = __swift_project_boxed_opaque_existential_1(v63, v46);
      uint64_t v47 = (uint64_t)v59;
      v29(v59, v28, v27);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v47, (uint64_t)sub_1C01B158C, 0, v46, v67);
      sub_1BFEFEB68(v47, type metadata accessor for FormatVersionRequirement);
      goto LABEL_17;
    case 6uLL:
      uint64_t v32 = v63;
      uint64_t v48 = v63[3];
      uint64_t v67 = v63[4];
      uint64_t v64 = __swift_project_boxed_opaque_existential_1(v63, v48);
      uint64_t v49 = (uint64_t)v60;
      v29(v60, v28, v27);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v49, (uint64_t)sub_1C01B158C, 0, v48, v67);
      sub_1BFEFEB68(v49, type metadata accessor for FormatVersionRequirement);
      goto LABEL_17;
    case 7uLL:
      uint64_t v32 = v63;
      uint64_t v50 = v63[3];
      uint64_t v67 = v63[4];
      uint64_t v64 = __swift_project_boxed_opaque_existential_1(v63, v50);
      uint64_t v51 = (uint64_t)v61;
      v29(v61, v28, v27);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v51, (uint64_t)sub_1C01B158C, 0, v50, v67);
      sub_1BFEFEB68(v51, type metadata accessor for FormatVersionRequirement);
      goto LABEL_17;
    case 8uLL:
      uint64_t v32 = v63;
      uint64_t v52 = v63[3];
      uint64_t v67 = v63[4];
      uint64_t v64 = __swift_project_boxed_opaque_existential_1(v63, v52);
      uint64_t v53 = (uint64_t)v62;
      v29(v62, v28, v27);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v53, (uint64_t)sub_1C01B158C, 0, v52, v67);
      sub_1BFEFEB68(v53, type metadata accessor for FormatVersionRequirement);
      goto LABEL_17;
    default:
      uint64_t v32 = v63;
      uint64_t v33 = v63[3];
      uint64_t v67 = v63[4];
      uint64_t v64 = __swift_project_boxed_opaque_existential_1(v63, v33);
      uint64_t v34 = (uint64_t)v54;
      v29(v54, v28, v27);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v34, (uint64_t)sub_1C01B158C, 0, v33, v67);
      sub_1BFEFEB68(v34, type metadata accessor for FormatVersionRequirement);
LABEL_17:
      __swift_project_boxed_opaque_existential_1(v32, v32[3]);
      sub_1C1520EEC();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v65, v66);
      sub_1C1520AFC();
      swift_bridgeObjectRelease();
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
      break;
  }
  return result;
}

uint64_t sub_1BFDC0EB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatProperty.init(from:)(a1, a2);
}

uint64_t FormatProperty.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v16[0] = a2;
  sub_1BFDC113C(0, (unint64_t *)&unk_1EB87A520, (uint64_t (*)(void))sub_1BFDC1228, (uint64_t)&type metadata for FormatProperty.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v16 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFDC1228();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = (uint64_t *)v16[0];
  char v18 = 0;
  uint64_t v11 = sub_1C152069C();
  uint64_t v13 = v12;
  char v17 = 1;
  sub_1BFDC11D4();
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v14 = v16[1];
  swift_bridgeObjectRetain();
  sub_1BFDC11A4(v14);
  swift_bridgeObjectRelease();
  *uint64_t v10 = v11;
  v10[1] = v13;
  v10[2] = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1BFDC11BC(v14);
}

void sub_1BFDC113C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1BFDC11A4(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BFDC11BC(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

unint64_t sub_1BFDC11D4()
{
  unint64_t result = qword_1EB876898[0];
  if (!qword_1EB876898[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB876898);
  }
  return result;
}

unint64_t sub_1BFDC1228()
{
  unint64_t result = qword_1EB874BC8;
  if (!qword_1EB874BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874BC8);
  }
  return result;
}

uint64_t sub_1BFDC127C@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatAsyncImageContent.init(from:)(a1, a2);
}

uint64_t FormatAsyncImageContent.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v3 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = &v55[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  *(void *)&long long v59 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v55[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  unint64_t v10 = (void *)v60;
  sub_1C1520EBC();
  uint64_t v11 = v10;
  if (v10)
  {
LABEL_20:
    sub_1C0038728(a1, (uint64_t)v11);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v58 = v5;
  *(void *)&long long v60 = v3;
  uint64_t v12 = v59;
  uint64_t v13 = v71;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v14 = sub_1C1520EAC();
  char v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  uint64_t v16 = v9;
  if (v15)
  {
    uint64_t v17 = sub_1C152070C();
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = (unint64_t *)(v17 + 40);
      while (1)
      {
        unint64_t v20 = *v19;
        if (*v19 >= 4) {
          break;
        }
        v19 += 2;
        if (!--v18) {
          goto LABEL_7;
        }
      }
      uint64_t v23 = *(v19 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v11 = (void *)swift_allocError();
      *(void *)uint64_t v24 = v23;
      *(void *)(v24 + 8) = v20;
      *(void *)(v24 + 16) = &unk_1F1B83BF8;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v23, v20);
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v16, v7);
      goto LABEL_20;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFDC1C70();
  *(_OWORD *)uint64_t v61 = 0uLL;
  sub_1C15206EC();
  uint64_t v21 = v13;
  switch((char)v70)
  {
    case 1:
      long long v70 = xmmword_1C152C800;
      sub_1BFDC1CC4();
      sub_1C15206EC();
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v16, v7);
      long long v59 = *(_OWORD *)&v61[16];
      long long v60 = *(_OWORD *)v61;
      uint64_t v25 = v62;
      char v26 = (char)v63;
      unint64_t v22 = swift_allocObject();
      long long v27 = v59;
      *(_OWORD *)(v22 + 16) = v60;
      *(_OWORD *)(v22 + 32) = v27;
      *(void *)(v22 + 48) = v25;
      *(unsigned char *)(v22 + 56) = v26;
      break;
    case 2:
      long long v70 = xmmword_1C152C800;
      sub_1BFD4B0D0();
      sub_1C15206EC();
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v16, v7);
      long long v59 = *(_OWORD *)v61;
      uint64_t v28 = *(void *)&v61[16];
      char v29 = v61[24];
      uint64_t v30 = v62;
      uint64_t v58 = v63;
      __int16 v31 = v64;
      long long v57 = v65;
      uint64_t v32 = v66;
      uint64_t v33 = v67;
      int v56 = v68;
      *(void *)&long long v60 = v69;
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = v59;
      *(void *)(v34 + 32) = v28;
      *(unsigned char *)(v34 + 40) = v29;
      uint64_t v35 = v58;
      *(void *)(v34 + 48) = v30;
      *(void *)(v34 + 56) = v35;
      *(_WORD *)(v34 + 64) = v31;
      *(_OWORD *)(v34 + 72) = v57;
      *(void *)(v34 + 88) = v32;
      *(void *)(v34 + 96) = v33;
      uint64_t v21 = v13;
      *(unsigned char *)(v34 + 104) = v56;
      unint64_t v22 = v34 | 0x1000000000000000;
      *(void *)(v34 + 112) = v60;
      break;
    case 3:
      long long v70 = xmmword_1C152C800;
      sub_1BFD4B178();
      sub_1C15206EC();
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v16, v7);
      long long v59 = *(_OWORD *)&v61[16];
      long long v60 = *(_OWORD *)v61;
      uint64_t v36 = v62;
      uint64_t v37 = v63;
      char v38 = v64;
      uint64_t v39 = swift_allocObject();
      long long v40 = v59;
      *(_OWORD *)(v39 + 16) = v60;
      *(_OWORD *)(v39 + 32) = v40;
      *(void *)(v39 + 48) = v36;
      *(void *)(v39 + 56) = v37;
      unint64_t v22 = v39 | 0x2000000000000000;
      *(unsigned char *)(v39 + 64) = v38;
      break;
    case 4:
      sub_1BFD18A88(0, &qword_1EB875FA8, (void (*)(void))sub_1C0036630);
      long long v70 = xmmword_1C152C800;
      sub_1BFDC1D18();
      sub_1C15206EC();
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v16, v7);
      uint64_t v41 = *(void *)&v61[16];
      long long v60 = *(_OWORD *)v61;
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = v60;
      *(void *)(v42 + 32) = v41;
      unint64_t v22 = v42 | 0x3000000000000000;
      break;
    case 5:
      *(_OWORD *)uint64_t v61 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB8758D8, (void (*)(uint64_t))type metadata accessor for FormatRemoteImage);
      uint64_t v43 = (uint64_t)v58;
      sub_1C15206EC();
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v16, v7);
      uint64_t v44 = swift_allocBox();
      sub_1BFE7FB8C(v43, v45, (uint64_t (*)(void))type metadata accessor for FormatRemoteImage);
      unint64_t v22 = v44 | 0x4000000000000000;
      break;
    case 6:
      sub_1BFEFF3E8(0, &qword_1EB875B60, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
      long long v70 = xmmword_1C152C800;
      sub_1BFDC1DF0();
      sub_1C15206EC();
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v16, v7);
      long long v46 = *(_OWORD *)v61;
      uint64_t v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = v46;
      unint64_t v22 = v47 | 0x5000000000000000;
      break;
    case 7:
      sub_1BFEFF3E8(0, &qword_1EB8783F8, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
      long long v70 = xmmword_1C152C800;
      sub_1C0873814();
      sub_1C15206EC();
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v16, v7);
      long long v48 = *(_OWORD *)v61;
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = v48;
      unint64_t v22 = v49 | 0x6000000000000000;
      break;
    case 8:
      long long v70 = xmmword_1C152C800;
      sub_1BFDC1D9C();
      sub_1C15206EC();
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v16, v7);
      uint64_t v50 = *(void *)v61;
      long long v60 = *(_OWORD *)&v61[8];
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = v50;
      *(_OWORD *)(v51 + 24) = v60;
      unint64_t v22 = v51 | 0x7000000000000000;
      break;
    case 9:
      sub_1BFEFF3E8(0, &qword_1EB866958, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
      long long v70 = xmmword_1C152C800;
      sub_1BFDC1E80();
      sub_1C15206EC();
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v16, v7);
      long long v53 = *(_OWORD *)v61;
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = v53;
      unint64_t v22 = v54 | 0x8000000000000000;
      break;
    default:
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v16, v7);
      unint64_t v22 = 0x9000000000000000;
      break;
  }
  *uint64_t v21 = v22;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDC1C70()
{
  unint64_t result = qword_1EB88ACF0;
  if (!qword_1EB88ACF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88ACF0);
  }
  return result;
}

unint64_t sub_1BFDC1CC4()
{
  unint64_t result = qword_1EB8774F8;
  if (!qword_1EB8774F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8774F8);
  }
  return result;
}

unint64_t sub_1BFDC1D18()
{
  unint64_t result = qword_1EB875FA0;
  if (!qword_1EB875FA0)
  {
    sub_1BFD18A88(255, &qword_1EB875FA8, (void (*)(void))sub_1C0036630);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875FA0);
  }
  return result;
}

unint64_t sub_1BFDC1D9C()
{
  unint64_t result = qword_1EB8754D0;
  if (!qword_1EB8754D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8754D0);
  }
  return result;
}

unint64_t sub_1BFDC1DF0()
{
  unint64_t result = qword_1EB875B58;
  if (!qword_1EB875B58)
  {
    sub_1BFEFF3E8(255, &qword_1EB875B60, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875B58);
  }
  return result;
}

unint64_t sub_1BFDC1E80()
{
  unint64_t result = qword_1EB866950;
  if (!qword_1EB866950)
  {
    sub_1BFEFF3E8(255, &qword_1EB866958, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866950);
  }
  return result;
}

unint64_t sub_1BFDC1F10(void *a1)
{
  return FormatBindingExpression.encode(to:)(a1);
}

unint64_t FormatBindingExpression.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v71 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  long long v70 = (char *)&v66 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v69 = (char *)&v66 - v8;
  MEMORY[0x1F4188790](v9);
  unsigned __int8 v68 = (char *)&v66 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v67 = (char *)&v66 - v12;
  MEMORY[0x1F4188790](v13);
  char v15 = (char *)&v66 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v66 = (char *)&v66 - v17;
  MEMORY[0x1F4188790](v18);
  unint64_t v20 = (char *)&v66 - v19;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v24 = *(void *)v1;
  unint64_t v84 = *(void *)(v1 + 8);
  unint64_t v82 = *(void *)(v1 + 16);
  uint64_t v83 = *(void *)(v1 + 24);
  uint64_t v78 = *(void *)(v1 + 32);
  uint64_t v79 = *(void *)(v1 + 40);
  uint64_t v80 = *(void *)(v1 + 48);
  uint64_t v81 = *(void *)(v1 + 56);
  uint64_t v77 = *(void *)(v1 + 64);
  unint64_t v76 = *(void *)(v1 + 72);
  uint64_t v75 = *(void *)(v1 + 80);
  uint64_t v74 = *(void *)(v1 + 88);
  uint64_t v73 = *(void *)(v1 + 96);
  unsigned int v25 = *(unsigned __int8 *)(v1 + 106);
  unsigned int v26 = *(unsigned __int16 *)(v1 + 104);
  unsigned int v72 = v26 | (v25 << 16);
  uint64_t v27 = a1[3];
  uint64_t v28 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  unint64_t v29 = sub_1BFEB6A24();
  uint64_t v105 = v23;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatBindingExpression, v30, v27, (uint64_t)&type metadata for FormatBindingExpression, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v28, (uint64_t)v23, v29, (uint64_t)&off_1F1C39B68);
  switch((v25 >> 2) & 4 | (v26 >> 14))
  {
    case 1u:
      *(void *)&long long v91 = v24;
      *((void *)&v91 + 1) = v84;
      unint64_t v92 = v82;
      uint64_t v93 = v83;
      uint64_t v94 = v78;
      uint64_t v95 = v79;
      __int16 v96 = v80;
      uint64_t v97 = v81;
      uint64_t v98 = v77;
      unint64_t v99 = v76;
      uint64_t v100 = v75;
      uint64_t v101 = v74;
      uint64_t v102 = v73;
      __int16 v103 = v72 & 0x3FFF;
      char v104 = (v72 & 0xEF3FFF) >> 16;
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_1C151928C();
      uint64_t v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1EB93CAB0);
      uint64_t v43 = (uint64_t)v66;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v66, v42, v41);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = (uint64_t)v105;
      sub_1BFDC2DE4(1, &v91, v43);
      goto LABEL_20;
    case 2u:
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_1C151928C();
      uint64_t v46 = __swift_project_value_buffer(v45, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v15, v46, v45);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = (uint64_t)v105;
      sub_1BFDC2B9C(2, v24, v84 & 0x1FFFF, (uint64_t)v15);
      uint64_t v47 = (uint64_t)v15;
      goto LABEL_21;
    case 3u:
      if (qword_1EB887618 != -1) {
        swift_once();
      }
      uint64_t v48 = sub_1C151928C();
      uint64_t v49 = __swift_project_value_buffer(v48, (uint64_t)qword_1EB93CA38);
      uint64_t v43 = (uint64_t)v67;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v67, v49, v48);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v85 = v24 & 1;
      uint64_t v44 = (uint64_t)v105;
      sub_1C0681E28(3, v24 & 0x101, v43);
      goto LABEL_20;
    case 4u:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_1C151928C();
      uint64_t v51 = __swift_project_value_buffer(v50, (uint64_t)qword_1EB93CA98);
      uint64_t v43 = (uint64_t)v68;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v68, v51, v50);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = (uint64_t)v105;
      sub_1C0681FC8(4, v24 & 1, v43);
      goto LABEL_20;
    case 5u:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v52 = sub_1C151928C();
      uint64_t v53 = __swift_project_value_buffer(v52, (uint64_t)qword_1EB93CA80);
      uint64_t v43 = (uint64_t)v69;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v69, v53, v52);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = (uint64_t)v105;
      sub_1BFDC31DC(5, v24, v84, v82, v83, v43);
LABEL_20:
      uint64_t v47 = v43;
LABEL_21:
      sub_1BFEFEB68(v47, type metadata accessor for FormatVersionRequirement);
      return sub_1BFEFEB68(v44, (uint64_t (*)(void))sub_1BFEFF7D8);
    case 6u:
      unint64_t v54 = v24;
      sub_1BFF58F10(v24);
      unint64_t v55 = v84;
      unint64_t v56 = v82;
      sub_1BFF8401C(v84, v82);
      if (qword_1EB887668 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_1C151928C();
      uint64_t v58 = __swift_project_value_buffer(v57, (uint64_t)qword_1EB93CB10);
      uint64_t v59 = (uint64_t)v70;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(v70, v58, v57);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v60 = (uint64_t)v105;
      sub_1C0682160(6, v24, v55, v56, v59);
      goto LABEL_28;
    case 7u:
      unint64_t v55 = v84;
      unint64_t v56 = v82;
      sub_1C05D8AD4(v84);
      unint64_t v54 = v24;
      if (qword_1EB8849C8 != -1) {
        swift_once();
      }
      uint64_t v61 = sub_1C151928C();
      uint64_t v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1EB93C790);
      uint64_t v59 = (uint64_t)v71;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v71, v62, v61);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v60 = (uint64_t)v105;
      sub_1C06822F8(7, v24, v55, v56, v59);
LABEL_28:
      uint64_t v63 = v83;
      uint64_t v64 = v79;
      uint64_t v65 = v78;
      sub_1BFEFEB68(v59, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v60, (uint64_t (*)(void))sub_1BFEFF7D8);
      unint64_t result = sub_1BFF77374(v54, v55, v56, v63, v65, v64, v80, v81, v77, v76, v75, v74, v73, v72);
      break;
    default:
      unint64_t v31 = v24;
      *(void *)&long long v86 = v24;
      unint64_t v32 = v84;
      unint64_t v33 = v82;
      *((void *)&v86 + 1) = v84;
      unint64_t v87 = v82;
      uint64_t v34 = v83;
      uint64_t v35 = v78;
      uint64_t v88 = v83;
      uint64_t v89 = v78;
      uint64_t v36 = v79;
      __int16 v90 = v79 & 0x1FF;
      sub_1BFF2B584(v31, v84, v82, v83, v78, v79);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_1C151928C();
      uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v20, v38, v37);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = (uint64_t)v105;
      sub_1BFDC2FE8(0, &v86, (uint64_t)v20);
      sub_1BFEFEB68((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v39, (uint64_t (*)(void))sub_1BFEFF7D8);
      unint64_t result = sub_1BFF77374(v31, v32, v33, v34, v35, v36, v80, v81, v77, v76, v75, v74, v73, v72);
      break;
  }
  return result;
}

uint64_t sub_1BFDC2B9C(char a1, uint64_t a2, int a3, uint64_t a4)
{
  char v20 = a1;
  uint64_t v17 = a2;
  __int16 v18 = a3;
  char v19 = BYTE2(a3) & 1;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FF770;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDC2D3C();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFDC2D90();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDC2D3C()
{
  unint64_t result = qword_1EB867328;
  if (!qword_1EB867328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867328);
  }
  return result;
}

unint64_t sub_1BFDC2D90()
{
  unint64_t result = qword_1EB85BFC0;
  if (!qword_1EB85BFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BFC0);
  }
  return result;
}

uint64_t sub_1BFDC2DE4(char a1, long long *a2, uint64_t a3)
{
  char v25 = a1;
  long long v7 = a2[5];
  long long v23 = a2[4];
  *(_OWORD *)unint64_t v24 = v7;
  *(_OWORD *)&v24[11] = *(long long *)((char *)a2 + 91);
  long long v8 = a2[1];
  long long v19 = *a2;
  long long v20 = v8;
  long long v9 = a2[3];
  long long v21 = a2[2];
  long long v22 = v9;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v3 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08FF770;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v4 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDC2D3C();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1BFDC2F94();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDC2F94()
{
  unint64_t result = qword_1EB85BFC8;
  if (!qword_1EB85BFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BFC8);
  }
  return result;
}

uint64_t sub_1BFDC2FE8(char a1, long long *a2, uint64_t a3)
{
  char v19 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  *(_OWORD *)long long v18 = v7;
  *(_OWORD *)&v18[10] = *(long long *)((char *)a2 + 26);
  sub_1BFEFF7D8();
  long long v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FF770;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDC2D3C();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFDC3188();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDC3188()
{
  unint64_t result = qword_1EB85C088;
  if (!qword_1EB85C088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C088);
  }
  return result;
}

uint64_t sub_1BFDC31DC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  __int16 v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  v17[2] = sub_1C08FF770;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDC2D3C();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1BFDC3380();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDC3380()
{
  unint64_t result = qword_1EB867D88;
  if (!qword_1EB867D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867D88);
  }
  return result;
}

uint64_t sub_1BFDC33D4(void *a1)
{
  return FormatBindingBoolExpression.encode(to:)(a1);
}

uint64_t FormatBindingBoolExpression.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  char v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v24 - v6;
  sub_1C0875C58();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)v1;
  __int16 v11 = *(_WORD *)(v1 + 8);
  int v30 = *(unsigned __int8 *)(v1 + 10);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1C0875B2C();
  uint64_t v15 = v14;
  uint64_t v16 = sub_1C085F050(&qword_1EB892270, (void (*)(uint64_t))sub_1C0875B2C);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatBindingBoolExpression, v17, v12, (uint64_t)&type metadata for FormatBindingBoolExpression, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v10, v16, (uint64_t)&off_1F1C39B68);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1C151928C();
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EB93CAB0);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  v20(v7, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = v27;
  sub_1C06AE1E4(v26, v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  if (!v21)
  {
    uint64_t v22 = (uint64_t)v25;
    v20(v25, v19, v18);
    swift_storeEnumTagMultiPayload();
    if (v30 & 1) == 0 && (sub_1C082D784(v22, 1, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v28 = xmmword_1C153AB20;
      char v29 = 0;
      char v31 = 0;
      sub_1C0875CEC();
      sub_1C085F050(&qword_1EB86E8B0, (void (*)(uint64_t))sub_1C0875CEC);
      sub_1C1520BAC();
    }
    sub_1BFEFEB68(v22, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BFEFEB68((uint64_t)v10, (uint64_t (*)(void))sub_1C0875C58);
}

unint64_t sub_1BFDC37B8()
{
  unint64_t result = qword_1EB85B8F8;
  if (!qword_1EB85B8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B8F8);
  }
  return result;
}

uint64_t sub_1BFDC380C@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatDimensionSizingValue.init(from:)(a1, a2);
}

uint64_t FormatDimensionSizingValue.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v41 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v36 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  uint64_t v9 = v2;
  if (v2)
  {
LABEL_9:
    sub_1C0038728(a1, (uint64_t)v9);
    swift_willThrow();

    uint64_t v19 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v19);
  }
  uint64_t v10 = a2;
  uint64_t v11 = a1[3];
  uint64_t v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  uint64_t v12 = sub_1C1520EAC();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = v41;
  uint64_t v14 = v8;
  if (v11)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unint64_t *)(v15 + 40);
      while (1)
      {
        unint64_t v18 = *v17;
        if (*v17 >= 4) {
          break;
        }
        v17 += 2;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v23 = *(v17 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v9 = (void *)swift_allocError();
      *(void *)uint64_t v24 = v23;
      *(void *)(v24 + 8) = v18;
      *(void *)(v24 + 16) = &unk_1F1B82950;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v23, v18);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v6);
      a1 = v37;
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFDC3F3C();
  long long v40 = 0uLL;
  sub_1C15206EC();
  switch((char)v38)
  {
    case 1:
      sub_1BFE41AFC();
      long long v40 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v6);
      uint64_t v25 = v38;
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v25;
      unint64_t v22 = v26 | 0x2000000000000000;
      break;
    case 2:
      sub_1C08FC718(0, &qword_1EB873F18, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
      long long v40 = xmmword_1C152C800;
      sub_1C086DDD8();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v6);
      uint64_t v27 = v38;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v27;
      unint64_t v22 = v28 | 0x4000000000000000;
      break;
    case 3:
      (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v6);
      unint64_t v22 = 0xC000000000000000;
      break;
    case 4:
      unint64_t v22 = 0xC000000000000008;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v6);
      break;
    case 5:
      (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v6);
      unint64_t v22 = 0xC000000000000010;
      break;
    case 6:
      long long v40 = xmmword_1C152C800;
      sub_1BFD73B28();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v6);
      uint64_t v29 = v38;
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = v29;
      unint64_t v22 = v30 | 0x6000000000000000;
      break;
    case 7:
      long long v40 = xmmword_1C152C800;
      sub_1BFE41E98();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v6);
      uint64_t v31 = v38;
      char v32 = v39;
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v31;
      *(unsigned char *)(v33 + 24) = v32;
      unint64_t v22 = v33 | 0x8000000000000000;
      break;
    case 8:
      sub_1BFE41AFC();
      long long v40 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v6);
      uint64_t v34 = v38;
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v34;
      unint64_t v22 = v35 | 0xA000000000000000;
      break;
    default:
      sub_1BFE41AFC();
      long long v40 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v6);
      uint64_t v21 = v38;
      unint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v21;
      break;
  }
  uint64_t v19 = (uint64_t)v37;
  *uint64_t v10 = v22;
  return __swift_destroy_boxed_opaque_existential_1(v19);
}

unint64_t sub_1BFDC3F3C()
{
  unint64_t result = qword_1EB88C248;
  if (!qword_1EB88C248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88C248);
  }
  return result;
}

uint64_t sub_1BFDC3F90(void *a1)
{
  return FormatFont.encode(to:)(a1);
}

uint64_t FormatFont.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v57 = (uint64_t)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v56 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v55 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v55 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v55 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v55 - v18;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v20 - 8);
  unint64_t v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = *v2;
  uint64_t v25 = a1[3];
  uint64_t v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  unint64_t v26 = sub_1BFEB6A24();
  uint64_t v64 = v22;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatFont, v27, v25, (uint64_t)&type metadata for FormatFont, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v24, (uint64_t)v22, v26, (uint64_t)&off_1F1C39B68);
  switch(v23 >> 61)
  {
    case 1uLL:
      long long v35 = *(_OWORD *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      v60[0] = *(_OWORD *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v60[1] = v35;
      __int16 v61 = *(_WORD *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_1C151928C();
      uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v16, v37, v36);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = (uint64_t)v64;
      sub_1BFDC494C(1, v60, (uint64_t)v16);
      uint64_t v33 = type metadata accessor for FormatVersionRequirement;
      uint64_t v34 = (uint64_t)v16;
      goto LABEL_14;
    case 2uLL:
      uint64_t v38 = swift_projectBox();
      uint64_t v39 = v57;
      sub_1BFE80E70(v38, v57, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_1C151928C();
      uint64_t v41 = __swift_project_value_buffer(v40, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v13, v41, v40);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = (uint64_t)v64;
      sub_1C069E420(2, v39, (uint64_t)v13);
      sub_1BFEFEB68((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
      uint64_t v33 = (uint64_t (*)(void))type metadata accessor for FormatRemoteFont;
      uint64_t v34 = v39;
      goto LABEL_14;
    case 3uLL:
      uint64_t v42 = v23 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v43 = *(void *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v44 = *(void *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v45 = *(void *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      char v46 = *(unsigned char *)(v42 + 40);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v47 = sub_1C151928C();
      uint64_t v48 = __swift_project_value_buffer(v47, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v10, v48, v47);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = (uint64_t)v64;
      sub_1C069E5F4(3, v43, v44, v45, v46, (uint64_t)v10);
      uint64_t v33 = type metadata accessor for FormatVersionRequirement;
      uint64_t v34 = (uint64_t)v10;
      goto LABEL_14;
    case 4uLL:
      long long v50 = *(_OWORD *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      v62[0] = *(_OWORD *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v62[1] = v50;
      uint64_t v63 = *(void *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      sub_1C05DC2C0((uint64_t)v62);
      if (qword_1EB887640 != -1) {
        swift_once();
      }
      uint64_t v51 = sub_1C151928C();
      uint64_t v52 = __swift_project_value_buffer(v51, (uint64_t)qword_1EB93CAC8);
      uint64_t v53 = (uint64_t)v56;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v56, v52, v51);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v54 = (uint64_t)v64;
      sub_1C069E790(4, v62, v53);
      sub_1BFEFEB68(v53, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v54, (uint64_t (*)(void))sub_1BFEFF7D8);
      return sub_1C05DC300((uint64_t)v62);
    default:
      long long v28 = *(_OWORD *)(v23 + 64);
      v58[2] = *(_OWORD *)(v23 + 48);
      v58[3] = v28;
      __int16 v59 = *(_WORD *)(v23 + 80);
      long long v29 = *(_OWORD *)(v23 + 32);
      v58[0] = *(_OWORD *)(v23 + 16);
      v58[1] = v29;
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_1C151928C();
      uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v19, v31, v30);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = (uint64_t)v64;
      sub_1BFDC46FC(0, v58, (uint64_t)v19);
      uint64_t v33 = type metadata accessor for FormatVersionRequirement;
      uint64_t v34 = (uint64_t)v19;
LABEL_14:
      sub_1BFEFEB68(v34, v33);
      return sub_1BFEFEB68(v32, (uint64_t (*)(void))sub_1BFEFF7D8);
  }
}

uint64_t sub_1BFDC46FC(char a1, long long *a2, uint64_t a3)
{
  char v23 = a1;
  long long v7 = a2[3];
  long long v20 = a2[2];
  long long v21 = v7;
  __int16 v22 = *((_WORD *)a2 + 32);
  long long v8 = a2[1];
  long long v18 = *a2;
  long long v19 = v8;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  void v16[2] = sub_1C0907A9C;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDC48A4();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFDC48F8();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDC48A4()
{
  unint64_t result = qword_1EB8655F8;
  if (!qword_1EB8655F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8655F8);
  }
  return result;
}

unint64_t sub_1BFDC48F8()
{
  unint64_t result = qword_1EB85B8C8;
  if (!qword_1EB85B8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B8C8);
  }
  return result;
}

uint64_t sub_1BFDC494C(char a1, long long *a2, uint64_t a3)
{
  char v20 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  __int16 v19 = *((_WORD *)a2 + 16);
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0907A9C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDC48A4();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFDC4AEC();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDC4AEC()
{
  unint64_t result = qword_1EB85B860;
  if (!qword_1EB85B860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B860);
  }
  return result;
}

uint64_t sub_1BFDC4B40@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  a1[3] = &type metadata for TraversalOnlyEncoder.UnkeyedContainer;
  a1[4] = sub_1BFDC4BA4();
  *a1 = v4;
  a1[1] = v3;
  a1[2] = 0;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BFDC4BA4()
{
  unint64_t result = qword_1EB862EE0;
  if (!qword_1EB862EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862EE0);
  }
  return result;
}

uint64_t sub_1BFDC4BF8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return FeedGroupKnobsRules.init(from:)(a1, a2);
}

uint64_t FeedGroupKnobsRules.init(from:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v75 = a2;
  type metadata accessor for FeedGroupKnobsRules.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_1C152072C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v76 = v4;
  uint64_t v77 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v115 = a1;
  long long v7 = (void *)a1;
  uint64_t v9 = (char *)&v42 - v8;
  __swift_project_boxed_opaque_existential_1(v7, v6);
  sub_1C1520EBC();
  if (!v2)
  {
    sub_1BFDC6EB0();
    LOBYTE(v102) = 0;
    sub_1BFDC6DF0(&qword_1EB8866C8, (void (*)(uint64_t))sub_1BFDC6EB0);
    sub_1C152065C();
    uint64_t v10 = v9;
    uint64_t v11 = v114;
    LOBYTE(v102) = 1;
    uint64_t v74 = v10;
    sub_1C152065C();
    uint64_t v73 = v11;
    uint64_t v12 = v113;
    LOBYTE(v102) = 2;
    sub_1C152065C();
    uint64_t v13 = v112;
    sub_1BFDC70BC();
    LOBYTE(v102) = 3;
    sub_1BFDC6DF0(&qword_1EB8861C0, (void (*)(uint64_t))sub_1BFDC70BC);
    sub_1C152065C();
    uint64_t v71 = v12;
    uint64_t v72 = v111;
    sub_1BFDC6E38();
    uint64_t v15 = v14;
    LOBYTE(v102) = 4;
    uint64_t v70 = sub_1BFDC6DF0(&qword_1EB8866D8, (void (*)(uint64_t))sub_1BFDC6E38);
    sub_1C152065C();
    uint64_t v16 = v110;
    LOBYTE(v102) = 5;
    sub_1C152065C();
    uint64_t v68 = v13;
    uint64_t v69 = v16;
    uint64_t v18 = v109;
    LOBYTE(v102) = 6;
    sub_1C152065C();
    uint64_t v67 = v15;
    uint64_t v19 = v108;
    sub_1BFDC6FB8();
    LOBYTE(v102) = 7;
    sub_1BFDC6DF0(&qword_1EB8864F8, (void (*)(uint64_t))sub_1BFDC6FB8);
    sub_1C152065C();
    uint64_t v64 = v18;
    uint64_t v65 = v19;
    uint64_t v66 = v107;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v22 = swift_getAssociatedConformanceWitness();
    uint64_t v23 = swift_getAssociatedConformanceWitness();
    uint64_t v102 = AssociatedTypeWitness;
    uint64_t v103 = AssociatedConformanceWitness;
    uint64_t v104 = v22;
    uint64_t v105 = v23;
    type metadata accessor for FeedGroupKnobsRuleSet();
    LOBYTE(v102) = 8;
    swift_getWitnessTable();
    sub_1C152065C();
    uint64_t v24 = v66;
    uint64_t v63 = v106;
    LOBYTE(v101) = 9;
    sub_1C152065C();
    uint64_t v62 = v102;
    LOBYTE(v100) = 10;
    sub_1C152065C();
    uint64_t v61 = v101;
    LOBYTE(v99) = 11;
    sub_1C152065C();
    uint64_t v60 = v100;
    LOBYTE(v98) = 12;
    sub_1C152065C();
    uint64_t v59 = v99;
    LOBYTE(v97) = 13;
    sub_1C152065C();
    uint64_t v58 = v98;
    LOBYTE(v96) = 14;
    sub_1C152065C();
    uint64_t v57 = v97;
    LOBYTE(v95) = 15;
    sub_1C152065C();
    uint64_t v70 = v96;
    LOBYTE(v94) = 16;
    sub_1C152065C();
    uint64_t v67 = v95;
    LOBYTE(v93) = 17;
    sub_1C152065C();
    uint64_t v56 = v94;
    LOBYTE(v92) = 18;
    sub_1C152065C();
    uint64_t v55 = v93;
    LOBYTE(v91) = 19;
    sub_1C152065C();
    uint64_t v54 = v92;
    sub_1BFDC72C0();
    LOBYTE(v90) = 20;
    sub_1BFDC6DF0(&qword_1EB886190, (void (*)(uint64_t))sub_1BFDC72C0);
    sub_1C152065C();
    uint64_t v53 = v91;
    LOBYTE(v89) = 21;
    sub_1C152065C();
    uint64_t v52 = v90;
    sub_1BFDC7134();
    LOBYTE(v88) = 22;
    sub_1BFDC6DF0(&qword_1EB8861B0, (void (*)(uint64_t))sub_1BFDC7134);
    sub_1C152065C();
    uint64_t v51 = v89;
    LOBYTE(v87) = 23;
    sub_1C152065C();
    uint64_t v50 = v88;
    sub_1BFDC723C();
    LOBYTE(v86) = 24;
    sub_1BFDC6DF0(&qword_1EB884960, (void (*)(uint64_t))sub_1BFDC723C);
    sub_1C152065C();
    uint64_t v49 = v87;
    LOBYTE(v85) = 25;
    sub_1C152065C();
    uint64_t v48 = v86;
    sub_1BFDC6F40();
    LOBYTE(v84) = 26;
    sub_1BFDC6DF0(&qword_1EB8866B8, (void (*)(uint64_t))sub_1BFDC6F40);
    sub_1C152065C();
    uint64_t v47 = v85;
    LOBYTE(v83) = 27;
    sub_1C152065C();
    uint64_t v46 = v84;
    sub_1BFDC71B8();
    LOBYTE(v82) = 28;
    sub_1BFDC6DF0(&qword_1EB8861A0, (void (*)(uint64_t))sub_1BFDC71B8);
    sub_1C152065C();
    uint64_t v45 = v83;
    LOBYTE(v81) = 29;
    sub_1C152065C();
    uint64_t v25 = v82;
    sub_1C03C6FC0();
    LOBYTE(v80) = 30;
    sub_1BFDC6DF0(&qword_1EB894288, (void (*)(uint64_t))sub_1C03C6FC0);
    sub_1C152065C();
    uint64_t v44 = v81;
    sub_1C03C7044();
    LOBYTE(v79) = 31;
    sub_1BFDC6DF0(&qword_1EB894258, (void (*)(uint64_t))sub_1C03C7044);
    sub_1C152065C();
    uint64_t v43 = v80;
    char v78 = 32;
    sub_1C152065C();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v74, v76);
    uint64_t v26 = v72;
    uint64_t v27 = v75;
    uint64_t v28 = v71;
    *uint64_t v75 = v73;
    v27[1] = v28;
    v27[2] = v68;
    v27[3] = v26;
    uint64_t v29 = v79;
    uint64_t v30 = v64;
    v27[4] = v69;
    v27[5] = v30;
    v27[6] = v65;
    v27[7] = v24;
    uint64_t v31 = v62;
    v27[8] = v63;
    v27[9] = v31;
    uint64_t v32 = v60;
    v27[10] = v61;
    v27[11] = v32;
    uint64_t v33 = v58;
    v27[12] = v59;
    v27[13] = v33;
    uint64_t v34 = v70;
    v27[14] = v57;
    v27[15] = v34;
    uint64_t v35 = v56;
    v27[16] = v67;
    v27[17] = v35;
    uint64_t v36 = v54;
    v27[18] = v55;
    v27[19] = v36;
    uint64_t v37 = v52;
    v27[20] = v53;
    v27[21] = v37;
    uint64_t v38 = v50;
    v27[22] = v51;
    v27[23] = v38;
    uint64_t v39 = v48;
    v27[24] = v49;
    v27[25] = v39;
    uint64_t v40 = v46;
    v27[26] = v47;
    v27[27] = v40;
    v27[28] = v45;
    v27[29] = v25;
    uint64_t v41 = v43;
    v27[30] = v44;
    v27[31] = v41;
    v27[32] = v29;
  }
  return __swift_destroy_boxed_opaque_existential_1(v115);
}

uint64_t sub_1BFDC6DF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFDC6E38()
{
  if (!qword_1EB8866E0)
  {
    unint64_t v0 = type metadata accessor for FeedGroupKnobsRuleValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8866E0);
    }
  }
}

void sub_1BFDC6EB0()
{
  if (!qword_1EB8866D0)
  {
    unint64_t v0 = type metadata accessor for FeedGroupKnobsRuleValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8866D0);
    }
  }
}

uint64_t type metadata accessor for FeedGroupKnobsRuleSet()
{
  return swift_getGenericMetadata();
}

void sub_1BFDC6F40()
{
  if (!qword_1EB8866C0)
  {
    unint64_t v0 = type metadata accessor for FeedGroupKnobsRuleValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8866C0);
    }
  }
}

void sub_1BFDC6FB8()
{
  if (!qword_1EB886500)
  {
    sub_1BFDC7470();
    sub_1BFDC6DF0(&qword_1EB870AA0, (void (*)(uint64_t))sub_1BFDC7470);
    sub_1BFDC6DF0(&qword_1EB870A90, (void (*)(uint64_t))sub_1BFDC7470);
    sub_1BFDC6DF0(&qword_1EB870A98, (void (*)(uint64_t))sub_1BFDC7470);
    unint64_t v0 = type metadata accessor for FeedGroupKnobsRuleList();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB886500);
    }
  }
}

void sub_1BFDC70BC()
{
  if (!qword_1EB8861C8)
  {
    unint64_t v0 = type metadata accessor for FeedGroupKnobsRuleSet();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8861C8);
    }
  }
}

void sub_1BFDC7134()
{
  if (!qword_1EB8861B8)
  {
    sub_1BFDC735C();
    sub_1C0084F48();
    sub_1C0084EF4();
    unint64_t v0 = type metadata accessor for FeedGroupKnobsRuleSet();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8861B8);
    }
  }
}

void sub_1BFDC71B8()
{
  if (!qword_1EB8861A8)
  {
    sub_1C00853F0();
    sub_1C00854EC();
    sub_1C0085498();
    unint64_t v0 = type metadata accessor for FeedGroupKnobsRuleSet();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8861A8);
    }
  }
}

void sub_1BFDC723C()
{
  if (!qword_1EB884968)
  {
    sub_1BFDC73B0();
    sub_1C0086440();
    sub_1C00863EC();
    unint64_t v0 = type metadata accessor for FeedGroupKnobsRuleSet();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884968);
    }
  }
}

void sub_1BFDC72C0()
{
  if (!qword_1EB886198)
  {
    sub_1BFDC741C();
    sub_1BFD4BCD4();
    sub_1BFD4BC80();
    unint64_t v0 = type metadata accessor for FeedGroupKnobsRuleSet();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB886198);
    }
  }
}

uint64_t type metadata accessor for FeedGroupKnobsRules.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1BFDC735C()
{
  unint64_t result = qword_1EB886C98;
  if (!qword_1EB886C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB886C98);
  }
  return result;
}

unint64_t sub_1BFDC73B0()
{
  unint64_t result = qword_1EB8849A8;
  if (!qword_1EB8849A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8849A8);
  }
  return result;
}

uint64_t type metadata accessor for FeedGroupKnobsRuleValue()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1BFDC741C()
{
  unint64_t result = qword_1EB871990;
  if (!qword_1EB871990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB871990);
  }
  return result;
}

void sub_1BFDC7470()
{
  if (!qword_1EB870AA8)
  {
    unint64_t v0 = type metadata accessor for FeedGroupEmitterRuleEdition();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB870AA8);
    }
  }
}

unint64_t sub_1BFDC74E8()
{
  unint64_t result = qword_1EB8713A0;
  if (!qword_1EB8713A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8713A0);
  }
  return result;
}

unint64_t sub_1BFDC753C()
{
  unint64_t result = qword_1EB870B88;
  if (!qword_1EB870B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870B88);
  }
  return result;
}

uint64_t sub_1BFDC7590@<X0>(uint64_t *a1@<X8>)
{
  return FormatLayout.fastDecode(decoder:)(a1);
}

uint64_t FormatLayout.fastDecode(decoder:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C15178AC();
  if (!v1)
  {
    uint64_t v8 = v4;
    uint64_t v9 = v5;
    uint64_t v10 = v6;
    uint64_t v11 = v7;
    sub_1C15178DC();
    sub_1C15178BC();
    sub_1C15178DC();
    sub_1C15178DC();
    uint64_t v12 = sub_1C15178CC();
    uint64_t v14 = sub_1C15178CC();
    sub_1BFDC77B8();
    sub_1C15178BC();
    uint64_t v13 = type metadata accessor for FormatLayoutAttributes();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v8;
    *(void *)(result + 24) = v9;
    *(void *)(result + 32) = v10;
    *(void *)(result + 40) = v11;
    *(void *)(result + 48) = v21;
    *(void *)(result + 56) = v22;
    *(void *)(result + 64) = v19;
    *(void *)(result + 72) = v20;
    *(void *)(result + 80) = v17;
    *(void *)(result + 88) = v18;
    *(void *)(result + 96) = v15;
    *(void *)(result + 104) = v16;
    *(void *)(result + 112) = v12;
    *(void *)(result + 120) = v14;
    *(unsigned char *)(result + 128) = v23;
    a1[3] = v13;
    *a1 = result;
  }
  return result;
}

unint64_t sub_1BFDC77B8()
{
  unint64_t result = qword_1EB877B10;
  if (!qword_1EB877B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB877B10);
  }
  return result;
}

uint64_t type metadata accessor for FormatLayoutAttributes()
{
  return self;
}

uint64_t sub_1BFDC7830(void *a1)
{
  return FormatSlotNode.encode(to:)(a1);
}

uint64_t FormatSlotNode.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v59 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v60 = (uint64_t)&v57 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v61 = (uint64_t)&v57 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v62 = (uint64_t)&v57 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v57 - v14;
  sub_1C08B3980();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  uint64_t v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_1C08B3AA8();
  uint64_t v22 = v21;
  uint64_t v23 = sub_1C085F050(&qword_1EB892560, (void (*)(uint64_t))sub_1C08B3AA8);
  sub_1BFEFBD78(v4, v24, v20, v4, v22, (uint64_t)&type metadata for FormatVersions.JazzkonC, v19, (uint64_t)v18, v23, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v25 = v2[2];
  uint64_t v26 = v2[3];
  uint64_t v63 = (uint64_t)v2;
  uint64_t v27 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v27 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1C151928C();
  uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1EB93CAB0);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16);
  v30(v15, v29, v28);
  uint64_t v31 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v65 = v18;
  uint64_t v32 = v64;
  sub_1C06C40CC(v25, v26, 0, 0, 0, (uint64_t)v15, (uint64_t)sub_1C01B158C, 0);
  if (v32)
  {
    sub_1BFEFEB68((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v33 = (uint64_t)v65;
  }
  else
  {
    uint64_t v64 = v31;
    uint64_t v58 = (void (*)(uint64_t, uint64_t, uint64_t))v30;
    sub_1BFEFEB68((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v34 = v63;
    swift_beginAccess();
    int v35 = *(unsigned __int8 *)(v34 + 32);
    if (qword_1EB887638 != -1) {
      swift_once();
    }
    uint64_t v36 = v28;
    uint64_t v37 = __swift_project_value_buffer(v28, (uint64_t)qword_1EB93CA98);
    uint64_t v38 = v62;
    uint64_t v39 = v58;
    v58(v62, v37, v36);
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = (uint64_t)v65;
    if (v35)
    {
      char v40 = sub_1C0842F34(v38, 1, 0, 0, (uint64_t)sub_1C01B158C, 0);
      uint64_t v41 = v63;
      if (v40)
      {
        long long v71 = xmmword_1C153AB20;
        char v72 = 0;
        LOBYTE(v69) = 1;
        sub_1C08B3A14();
        sub_1C085F050(&qword_1EB86ECA0, (void (*)(uint64_t))sub_1C08B3A14);
        sub_1C1520BAC();
        uint64_t v39 = v58;
      }
    }
    else
    {
      uint64_t v41 = v63;
    }
    sub_1BFEFEB68(v62, type metadata accessor for FormatVersionRequirement);
    swift_beginAccess();
    uint64_t v42 = *(void *)(v41 + 40);
    uint64_t v43 = v61;
    v39(v61, v29, v36);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    char v44 = sub_1C0842F34(v43, 2, 0, 0, (uint64_t)sub_1C01B158C, 0);
    if (v44)
    {
      long long v69 = xmmword_1C1557FA0;
      char v70 = 0;
      *(void *)&long long v67 = v42;
      sub_1C08B3A14();
      uint64_t v63 = v46;
      sub_1C085F050(&qword_1EB86ECA0, (void (*)(uint64_t))sub_1C08B3A14);
      sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB863300, (uint64_t)&type metadata for FormatSourceMapNode, MEMORY[0x1E4FBB320]);
      sub_1BFE407E0();
      sub_1C1520BAC();
      uint64_t v33 = (uint64_t)v65;
    }
    sub_1BFEFEB68(v61, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v47 = *(void *)(v41 + 48);
    uint64_t v48 = v60;
    uint64_t v49 = v29;
    v58(v60, v29, v36);
    swift_storeEnumTagMultiPayload();
    uint64_t v50 = *(void *)(v47 + 16);
    swift_bridgeObjectRetain();
    if (v50)
    {
      if (sub_1C0842F34(v48, 3, 0, 0, (uint64_t)sub_1C01B158C, 0))
      {
        long long v67 = xmmword_1C1557FB0;
        char v68 = 0;
        uint64_t v51 = swift_bridgeObjectRetain();
        uint64_t v52 = sub_1BFE71F8C(v51);
        swift_bridgeObjectRelease();
        uint64_t v66 = v52;
        swift_retain();
        sub_1BFE726FC((uint64_t *)&v66, sub_1BFE72780, sub_1BFE72EAC);
        swift_release();
        uint64_t v63 = (uint64_t)v66;
        uint64_t v73 = (uint64_t)v66;
        sub_1C08B3A14();
        uint64_t v62 = v53;
        uint64_t v61 = sub_1C085F050(&qword_1EB86ECA0, (void (*)(uint64_t))sub_1C08B3A14);
        uint64_t v54 = MEMORY[0x1E4FBB1A0];
        sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
        sub_1BFE71F14((unint64_t *)&qword_1EB85DF50, (unint64_t *)&qword_1EB879F20, v54);
        uint64_t v33 = (uint64_t)v65;
        sub_1C1520BAC();
        swift_release();
      }
      uint64_t v49 = v29;
    }
    sub_1BFEFEB68(v60, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v55 = (uint64_t)v59;
    v58((uint64_t)v59, v49, v36);
    swift_storeEnumTagMultiPayload();
    uint64_t v56 = swift_bridgeObjectRetain();
    sub_1C06DB3A0(v56, 4, 0, 0);
    sub_1BFEFEB68(v55, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BFEFEB68(v33, (uint64_t (*)(void))sub_1C08B3980);
}

uint64_t sub_1BFDC82AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatStyle.init(from:)(a1, a2);
}

uint64_t FormatStyle.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v63 = a2;
  sub_1BFE8928C();
  uint64_t v62 = v3;
  uint64_t v59 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v66 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0908CDC(0, &qword_1EB87C710, (void (*)(void))sub_1C0084750, (void (*)(void))sub_1C00847A4);
  uint64_t v64 = v5;
  uint64_t v60 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  *(void *)&long long v65 = (char *)&v52 - v6;
  sub_1C0908CDC(0, &qword_1EB8713F0, (void (*)(void))sub_1BFF95748, (void (*)(void))sub_1C00800EC);
  uint64_t v8 = v7;
  uint64_t v61 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v52 - v9;
  sub_1C08BA28C();
  uint64_t v12 = v11;
  uint64_t v67 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08BA320();
  sub_1C085F050(&qword_1EB8924A0, (void (*)(uint64_t))sub_1C08BA320);
  uint64_t v15 = (void *)v68;
  sub_1C1520EBC();
  uint64_t v16 = v15;
  if (v15)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v16);
    swift_willThrow();

    uint64_t v35 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v35);
  }
  *(void *)&long long v68 = v10;
  uint64_t v17 = v67;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v18 = sub_1C1520EAC();
  char v19 = Dictionary<>.errorOnUnknownKeys.getter(v18);
  swift_bridgeObjectRelease();
  uint64_t v20 = v66;
  if (v19)
  {
    uint64_t v21 = sub_1C152070C();
    uint64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      uint64_t v23 = (unsigned char *)(v21 + 48);
      while (*v23 != 1)
      {
        v23 += 24;
        if (!--v22) {
          goto LABEL_7;
        }
      }
      *(void *)&long long v68 = a1;
      uint64_t v27 = *((void *)v23 - 2);
      uint64_t v28 = *((void *)v23 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v29 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v29);
      uint64_t v66 = v14;
      *(&v52 - 4) = (uint64_t)&_s10CodingKeysON_39;
      *(&v52 - 3) = sub_1C08BA3A4();
      *(&v52 - 2) = sub_1BFDC8BF4();
      *(&v52 - 1) = sub_1C08BA3F8();
      swift_getKeyPath();
      swift_retain();
      uint64_t v30 = sub_1C085FB14((uint64_t)&unk_1F1B69540);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v31 = swift_allocError();
      *(void *)uint64_t v32 = v27;
      *(void *)(v32 + 8) = v28;
      *(void *)(v32 + 16) = v30;
      *(_OWORD *)(v32 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      uint64_t v33 = v27;
      uint64_t v16 = (void *)v31;
      uint64_t v34 = v28;
      a1 = (void *)v68;
      sub_1BFE94AD4(v33, v34, 1);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v66, v12);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v71 = 0uLL;
  char v72 = 0;
  uint64_t v24 = sub_1C152069C();
  uint64_t v26 = v25;
  uint64_t v58 = v24;
  long long v71 = xmmword_1C153AB20;
  char v72 = 0;
  uint64_t v37 = sub_1C152060C();
  uint64_t v56 = v38;
  uint64_t v57 = v26;
  long long v71 = xmmword_1C1557FA0;
  char v72 = 0;
  uint64_t v53 = sub_1C152060C();
  uint64_t v55 = v39;
  long long v54 = xmmword_1C1557FB0;
  long long v71 = xmmword_1C1557FB0;
  char v72 = 0;
  char v40 = sub_1C152071C();
  if (v40)
  {
    long long v69 = v54;
    char v70 = 0;
    sub_1C086D01C();
    sub_1C15206EC();
    uint64_t v41 = v68;
    *(void *)&long long v54 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v41, v8);
  }
  else
  {
    *(void *)&long long v54 = MEMORY[0x1E4FBC860];
  }
  uint64_t v42 = v65;
  long long v68 = xmmword_1C1557FD0;
  long long v71 = xmmword_1C1557FD0;
  char v72 = 0;
  if (sub_1C152071C())
  {
    uint64_t v61 = v37;
    long long v69 = v68;
    char v70 = 0;
    sub_1C086CF8C();
    uint64_t v43 = v42;
    uint64_t v44 = v64;
    sub_1C15206EC();
    *(void *)&long long v68 = a1;
    uint64_t v45 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v43, v44);
    uint64_t v37 = v61;
  }
  else
  {
    *(void *)&long long v68 = a1;
    uint64_t v45 = MEMORY[0x1E4FBC860];
  }
  long long v65 = xmmword_1C1557FC0;
  long long v71 = xmmword_1C1557FC0;
  char v72 = 0;
  if (sub_1C152071C())
  {
    long long v69 = v65;
    char v70 = 0;
    sub_1C085F050(&qword_1EB87C728, (void (*)(uint64_t))sub_1BFE8928C);
    uint64_t v46 = v62;
    sub_1C15206EC();
    uint64_t v47 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v20, v46);
    uint64_t v17 = v67;
  }
  else
  {
    uint64_t v47 = MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v12);
  uint64_t v48 = v63;
  uint64_t v49 = v57;
  *uint64_t v63 = v58;
  v48[1] = v49;
  uint64_t v50 = v56;
  void v48[2] = v37;
  v48[3] = v50;
  uint64_t v51 = v55;
  v48[4] = v53;
  v48[5] = v51;
  v48[6] = v54;
  v48[7] = v45;
  v48[8] = v47;
  uint64_t v35 = v68;
  return __swift_destroy_boxed_opaque_existential_1(v35);
}

unint64_t sub_1BFDC8BF4()
{
  unint64_t result = qword_1EB886FE8;
  if (!qword_1EB886FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB886FE8);
  }
  return result;
}

uint64_t sub_1BFDC8C48@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatGroup.init(from:)(a1, a2);
}

uint64_t FormatGroup.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v109 = a2;
  sub_1C0908CDC(0, &qword_1EB884ED8, (void (*)(void))sub_1C00743E8, (void (*)(void))sub_1C007443C);
  uint64_t v108 = v3;
  uint64_t v104 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v107 = (char *)&v91 - v4;
  sub_1C0908CDC(0, &qword_1EB87C710, (void (*)(void))sub_1C0084750, (void (*)(void))sub_1C00847A4);
  uint64_t v113 = v5;
  uint64_t v105 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v112 = (char *)&v91 - v6;
  sub_1BFE8928C();
  uint64_t v114 = v7;
  uint64_t v106 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v115 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE89214();
  uint64_t v121 = v9;
  uint64_t v110 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  *(void *)&long long v122 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0908CDC(0, &qword_1EB87C740, (void (*)(void))sub_1C0080144, (void (*)(void))sub_1C0080240);
  uint64_t v118 = v11;
  uint64_t v111 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  v117 = (char *)&v91 - v12;
  sub_1C0908CDC(0, &qword_1EB8713F0, (void (*)(void))sub_1BFF95748, (void (*)(void))sub_1C00800EC);
  uint64_t v119 = v13;
  uint64_t v116 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  *(void *)&long long v120 = (char *)&v91 - v14;
  sub_1C0908CDC(0, (unint64_t *)&qword_1EB884858, (void (*)(void))sub_1C00795B8, (void (*)(void))sub_1BFC3A24C);
  uint64_t v16 = v15;
  long long v123 = *(void (***)(void, void))(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v91 - v17;
  sub_1C0889A90();
  uint64_t v20 = v19;
  uint64_t v124 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0889B24();
  sub_1C085F050(&qword_1EB892480, (void (*)(uint64_t))sub_1C0889B24);
  uint64_t v24 = (void *)v125;
  sub_1C1520EBC();
  uint64_t v25 = v24;
  if (v24)
  {
    uint64_t v26 = v23;
LABEL_11:
    sub_1C0038728(v26, (uint64_t)v25);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  *(void *)&long long v125 = v18;
  __swift_project_boxed_opaque_existential_1(v23, v23[3]);
  uint64_t v27 = sub_1C1520EAC();
  char v28 = Dictionary<>.errorOnUnknownKeys.getter(v27);
  swift_bridgeObjectRelease();
  uint64_t v26 = v23;
  if (v28)
  {
    uint64_t v29 = sub_1C152070C();
    uint64_t v30 = *(void *)(v29 + 16);
    if (v30)
    {
      uint64_t v31 = (unsigned char *)(v29 + 48);
      while (*v31 != 1)
      {
        v31 += 24;
        if (!--v30) {
          goto LABEL_8;
        }
      }
      uint64_t v36 = v22;
      uint64_t v37 = v20;
      uint64_t v39 = *((void *)v31 - 2);
      uint64_t v38 = *((void *)v31 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v40 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v40);
      *(&v91 - 4) = (uint64_t)&_s10CodingKeysON_133;
      *(&v91 - 3) = sub_1C0889BA8();
      *(&v91 - 2) = sub_1BFDCA0D0();
      *(&v91 - 1) = sub_1C0889BFC();
      swift_getKeyPath();
      swift_retain();
      uint64_t v41 = sub_1C085FB14((uint64_t)&unk_1F1B694E8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v25 = (void *)swift_allocError();
      *(void *)uint64_t v42 = v39;
      *(void *)(v42 + 8) = v38;
      *(void *)(v42 + 16) = v41;
      *(_OWORD *)(v42 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v39, v38, 1);
      (*(void (**)(char *, uint64_t))(v124 + 8))(v36, v37);
      goto LABEL_11;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  long long v128 = 0uLL;
  char v129 = 0;
  uint64_t v32 = sub_1C152069C();
  uint64_t v34 = v33;
  long long v128 = xmmword_1C153AB20;
  char v129 = 0;
  uint64_t v35 = sub_1C152060C();
  uint64_t v44 = v43;
  uint64_t v102 = v35;
  uint64_t v103 = v32;
  long long v128 = xmmword_1C1557FA0;
  char v129 = 0;
  uint64_t v45 = sub_1C152060C();
  uint64_t v48 = v47;
  uint64_t v100 = v45;
  long long v101 = xmmword_1C1557FB0;
  long long v128 = xmmword_1C1557FB0;
  char v129 = 0;
  char v49 = sub_1C152071C();
  if (v49)
  {
    long long v126 = v101;
    char v127 = 0;
    sub_1BFDCA258();
    sub_1C15206EC();
    *(void *)&long long v101 = v34;
    int v50 = v130[0];
  }
  else
  {
    *(void *)&long long v101 = v34;
    int v50 = 2;
  }
  long long v128 = xmmword_1C1557FD0;
  char v129 = 0;
  sub_1BFDCA178();
  sub_1C085F050(&qword_1EB88D368, (void (*)(uint64_t))sub_1BFDCA178);
  sub_1C15206EC();
  int v51 = v50;
  uint64_t v52 = v126;
  long long v128 = xmmword_1C1557FC0;
  char v129 = 0;
  sub_1BFDCA124();
  sub_1C152065C();
  uint64_t v99 = v52;
  int v96 = v51;
  uint64_t v98 = v44;
  unint64_t v97 = *((void *)&v126 + 1);
  uint64_t v53 = v126;
  long long v128 = xmmword_1C1557FE0;
  char v129 = 0;
  sub_1BFCAB4C0();
  uint64_t v54 = v125;
  sub_1C15206EC();
  uint64_t v95 = v53;
  uint64_t v94 = sub_1C1517E5C();
  v123[1](v54, v16);
  long long v125 = xmmword_1C1557FF0;
  long long v128 = xmmword_1C1557FF0;
  char v129 = 0;
  if (sub_1C152071C())
  {
    long long v126 = v125;
    char v127 = 0;
    sub_1C086D01C();
    uint64_t v55 = v119;
    uint64_t v56 = v120;
    sub_1C15206EC();
    uint64_t v93 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v56, v55);
  }
  else
  {
    uint64_t v93 = MEMORY[0x1E4FBC860];
  }
  uint64_t v57 = v121;
  long long v125 = xmmword_1C1558010;
  long long v128 = xmmword_1C1558010;
  char v129 = 0;
  uint64_t v58 = v22;
  char v59 = sub_1C152071C();
  uint64_t v60 = v20;
  uint64_t v61 = v122;
  if (v59)
  {
    long long v126 = v125;
    char v127 = 0;
    sub_1C08758E0();
    uint64_t v62 = v117;
    uint64_t v63 = v118;
    sub_1C15206EC();
    uint64_t v121 = v48;
    uint64_t v64 = v58;
    uint64_t v65 = sub_1C1517E5C();
    uint64_t v66 = v63;
    uint64_t v67 = v65;
    (*(void (**)(char *, uint64_t))(v111 + 8))(v62, v66);
  }
  else
  {
    uint64_t v121 = v48;
    uint64_t v64 = v58;
    uint64_t v67 = MEMORY[0x1E4FBC860];
  }
  long long v125 = xmmword_1C1558020;
  long long v128 = xmmword_1C1558020;
  char v129 = 0;
  if (sub_1C152071C())
  {
    long long v126 = v125;
    char v127 = 0;
    sub_1C085F050(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    sub_1C15206EC();
    long long v123 = 0;
    *(void *)&long long v125 = v60;
    uint64_t v68 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v61, v57);
  }
  else
  {
    long long v123 = 0;
    *(void *)&long long v125 = v60;
    uint64_t v68 = MEMORY[0x1E4FBC870];
  }
  long long v122 = xmmword_1C1558030;
  long long v128 = xmmword_1C1558030;
  char v129 = 0;
  if (sub_1C152071C())
  {
    long long v126 = v122;
    char v127 = 0;
    sub_1C085F050(&qword_1EB87C728, (void (*)(uint64_t))sub_1BFE8928C);
    long long v69 = v115;
    uint64_t v70 = v114;
    long long v71 = v123;
    sub_1C15206EC();
    long long v123 = v71;
    if (v71)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFFD0438(v95, v97);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void))(v124 + 8))(v64, v125);
      uint64_t v25 = v123;
      goto LABEL_11;
    }
    uint64_t v72 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v69, v70);
  }
  else
  {
    uint64_t v72 = MEMORY[0x1E4FBC860];
  }
  long long v122 = xmmword_1C1558040;
  long long v128 = xmmword_1C1558040;
  char v129 = 0;
  char v73 = sub_1C152071C();
  uint64_t v92 = v26;
  uint64_t v74 = v68;
  if (v73)
  {
    long long v126 = v122;
    char v127 = 0;
    sub_1C086CF8C();
    uint64_t v75 = v64;
    uint64_t v76 = v123;
    sub_1C15206EC();
    long long v123 = v76;
    if (v76)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFFD0438(v95, v97);
      swift_bridgeObjectRelease();
LABEL_41:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void))(v124 + 8))(v75, v125);
      uint64_t v25 = v123;
      uint64_t v26 = v92;
      goto LABEL_11;
    }
    uint64_t v77 = v113;
    char v78 = v112;
    *(void *)&long long v122 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v105 + 8))(v78, v77);
  }
  else
  {
    uint64_t v75 = v64;
    *(void *)&long long v122 = MEMORY[0x1E4FBC860];
  }
  long long v120 = xmmword_1C1558050;
  long long v128 = xmmword_1C1558050;
  char v129 = 0;
  if (sub_1C152071C())
  {
    long long v126 = v120;
    char v127 = 0;
    sub_1BFDCA204();
    uint64_t v79 = v123;
    sub_1C15206EC();
    long long v123 = v79;
    if (v79)
    {
LABEL_40:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFFD0438(v95, v97);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    char v80 = v130[0];
  }
  else
  {
    char v80 = -64;
  }
  long long v120 = xmmword_1C1533150;
  long long v128 = xmmword_1C1533150;
  char v129 = 0;
  if (sub_1C152071C())
  {
    long long v126 = v120;
    char v127 = 0;
    sub_1C0889C50();
    uint64_t v81 = v123;
    sub_1C15206EC();
    long long v123 = v81;
    if (v81) {
      goto LABEL_40;
    }
    uint64_t v83 = v108;
    uint64_t v84 = v107;
    uint64_t v82 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v104 + 8))(v84, v83);
  }
  else
  {
    uint64_t v82 = MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, void))(v124 + 8))(v75, v125);
  uint64_t v85 = v109;
  uint64_t v86 = v101;
  uint64_t *v109 = v103;
  v85[1] = v86;
  uint64_t v87 = v98;
  v85[2] = v102;
  v85[3] = v87;
  uint64_t v88 = v121;
  v85[4] = v100;
  v85[5] = v88;
  *((unsigned char *)v85 + 48) = v96;
  *(_DWORD *)((char *)v85 + 49) = v126;
  *((_DWORD *)v85 + 13) = *(_DWORD *)((char *)&v126 + 3);
  uint64_t v89 = v95;
  v85[7] = v99;
  v85[8] = v89;
  uint64_t v90 = v94;
  v85[9] = v97;
  v85[10] = v90;
  v85[11] = v93;
  v85[12] = v67;
  v85[13] = v74;
  v85[14] = v72;
  v85[15] = v122;
  *((unsigned char *)v85 + 128) = v80;
  *((_DWORD *)v85 + 33) = *(_DWORD *)&v130[3];
  *(_DWORD *)((char *)v85 + 129) = *(_DWORD *)v130;
  v85[17] = v82;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
}

unint64_t sub_1BFDCA0D0()
{
  unint64_t result = qword_1EB886EE8;
  if (!qword_1EB886EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB886EE8);
  }
  return result;
}

unint64_t sub_1BFDCA124()
{
  unint64_t result = qword_1EB87F870;
  if (!qword_1EB87F870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87F870);
  }
  return result;
}

void sub_1BFDCA178()
{
  if (!qword_1EB88D370[0])
  {
    unint64_t v0 = type metadata accessor for FormatCodingColumnSetStrategy.SetOrSingle();
    if (!v1) {
      atomic_store(v0, qword_1EB88D370);
    }
  }
}

unint64_t sub_1BFDCA204()
{
  unint64_t result = qword_1EB878578;
  if (!qword_1EB878578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878578);
  }
  return result;
}

unint64_t sub_1BFDCA258()
{
  unint64_t result = qword_1EB8767B0;
  if (!qword_1EB8767B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8767B0);
  }
  return result;
}

uint64_t sub_1BFDCA2AC()
{
  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_1BFDCA2D4(uint64_t a1)
{
  return sub_1BFDCA2E8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BFDCA2E8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1C05FB4B8(a1, a2, a3, a4, &qword_1EB8903E8, (uint64_t)&type metadata for FeedGroupEmitterRuleOutput);
}

uint64_t sub_1BFDCA2FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BFDCA350(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t destroy for FeedGroupEmitterRuleOutput(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 56);
  return sub_1BFDCA350(v2, v3, v4);
}

uint64_t sub_1BFDCA3A4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for FeedGroupEmitterRuleOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(v2 + 40);
  uint64_t v6 = *(void *)(v2 + 48);
  LOBYTE(v2) = *(unsigned char *)(v2 + 56);
  sub_1BFDCA484(v5, v6, v2);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v2;
  return a1;
}

uint64_t sub_1BFDCA484(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_1BFDCA49C(uint64_t *a1, uint64_t *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;
  unint64_t v9 = v7 + 24;
  if (v8 <= v9) {
    size_t v10 = v9;
  }
  else {
    size_t v10 = v8;
  }
  uint64_t v11 = sub_1C151928C();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84)) {
    size_t v13 = *(void *)(v12 + 64);
  }
  else {
    size_t v13 = *(void *)(v12 + 64) + 1;
  }
  if (v10 <= v13) {
    unint64_t v14 = v13;
  }
  else {
    unint64_t v14 = v10;
  }
  if (v14 <= 0x10) {
    uint64_t v15 = 16;
  }
  else {
    uint64_t v15 = v14;
  }
  if (v15 > 3) {
    goto LABEL_17;
  }
  unsigned int v16 = ((1 << (8 * v15)) + 3) >> (8 * v15);
  uint64_t v17 = 2;
  if (v16 > 0xFFDB) {
    uint64_t v17 = 4;
  }
  if (v16 <= 0xDB) {
LABEL_17:
  }
    uint64_t v17 = 1;
  unint64_t v18 = v17 + v15;
  int v19 = *(_DWORD *)(v12 + 80) | *(_DWORD *)(v5 + 80);
  if (v18 > 0x18 || (v19 & 0x1000F8) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + (((v19 & 0xF8 | 7u) + 16) & ~(unint64_t)(v19 & 0xF8 | 7u)));
    swift_retain();
    return a1;
  }
  if (v15 > 3) {
    goto LABEL_25;
  }
  unsigned int v24 = ((1 << (8 * v15)) + 3) >> (8 * v15);
  if (v24 > 0xFFDB)
  {
    unsigned int v23 = *(_DWORD *)((char *)a2 + v15);
    goto LABEL_30;
  }
  if (v24 <= 0xDB) {
LABEL_25:
  }
    unsigned int v23 = *((unsigned __int8 *)a2 + v15);
  else {
    unsigned int v23 = *(unsigned __int16 *)((char *)a2 + v15);
  }
LABEL_30:
  unsigned int v25 = v23 - 36;
  if (v23 >= 0x24)
  {
    if (v15 <= 3) {
      uint64_t v26 = v15;
    }
    else {
      uint64_t v26 = 4;
    }
    switch(v26)
    {
      case 1:
        int v27 = *(unsigned __int8 *)a2;
        if (v15 < 4) {
          goto LABEL_42;
        }
        goto LABEL_43;
      case 2:
        int v27 = *(unsigned __int16 *)a2;
        if (v15 >= 4) {
          goto LABEL_43;
        }
        goto LABEL_42;
      case 3:
        int v27 = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
        if (v15 >= 4) {
          goto LABEL_43;
        }
        goto LABEL_42;
      case 4:
        int v27 = *(_DWORD *)a2;
        if (v15 < 4) {
LABEL_42:
        }
          v27 |= v25 << (8 * v15);
LABEL_43:
        unsigned int v23 = v27 + 36;
        break;
      default:
        break;
    }
  }
  switch(v23)
  {
    case 0u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      if (v15 <= 3)
      {
        unsigned int v28 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v28 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 0;
          return a1;
        }
        if (v28 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 0;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 0;
      break;
    case 1u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      if (v15 <= 3)
      {
        unsigned int v29 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v29 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 1;
          return a1;
        }
        if (v29 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 1;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 1;
      break;
    case 2u:
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v30 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v30 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 2;
          return a1;
        }
        if (v30 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 2;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 2;
      break;
    case 3u:
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v31 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v31 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 3;
          return a1;
        }
        if (v31 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 3;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 3;
      break;
    case 4u:
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v32 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v32 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 4;
          return a1;
        }
        if (v32 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 4;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 4;
      break;
    case 5u:
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      unint64_t v33 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v34 = *(void *)(v33 + 16);
      unint64_t v35 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v35 = *(_OWORD *)v33;
      *(void *)(v35 + 16) = v34;
      if (v15 <= 3)
      {
        unsigned int v36 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v36 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 5;
          return a1;
        }
        if (v36 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 5;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 5;
      break;
    case 6u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v37 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v37 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 6;
          return a1;
        }
        if (v37 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 6;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 6;
      break;
    case 7u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v38 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v38 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 7;
          return a1;
        }
        if (v38 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 7;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 7;
      break;
    case 8u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v39 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v39 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 8;
          return a1;
        }
        if (v39 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 8;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 8;
      break;
    case 9u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v40 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v40 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 9;
          return a1;
        }
        if (v40 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 9;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 9;
      break;
    case 0xAu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v41 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v41 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 10;
          return a1;
        }
        if (v41 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 10;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 10;
      break;
    case 0xBu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v42 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v42 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 11;
          return a1;
        }
        if (v42 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 11;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 11;
      break;
    case 0xCu:
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v43 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v43 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 12;
          return a1;
        }
        if (v43 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 12;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 12;
      break;
    case 0xDu:
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v44 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v44 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 13;
          return a1;
        }
        if (v44 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 13;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 13;
      break;
    case 0xEu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v45 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v45 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 14;
          return a1;
        }
        if (v45 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 14;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 14;
      break;
    case 0xFu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v46 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v46 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 15;
          return a1;
        }
        if (v46 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 15;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 15;
      break;
    case 0x10u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v47 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v47 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 16;
          return a1;
        }
        if (v47 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 16;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 16;
      break;
    case 0x11u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v48 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v48 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 17;
          return a1;
        }
        if (v48 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 17;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 17;
      break;
    case 0x12u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v49 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v49 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 18;
          return a1;
        }
        if (v49 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 18;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 18;
      break;
    case 0x13u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v50 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v50 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 19;
          return a1;
        }
        if (v50 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 19;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 19;
      break;
    case 0x14u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v51 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v51 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 20;
          return a1;
        }
        if (v51 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 20;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 20;
      break;
    case 0x15u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v52 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v52 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 21;
          return a1;
        }
        if (v52 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 21;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 21;
      break;
    case 0x16u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v53 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v53 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 22;
          return a1;
        }
        if (v53 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 22;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 22;
      break;
    case 0x17u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v54 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v54 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 23;
          return a1;
        }
        if (v54 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 23;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 23;
      break;
    case 0x18u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v55 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v55 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 24;
          return a1;
        }
        if (v55 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 24;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 24;
      break;
    case 0x19u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v56 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v56 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 25;
          return a1;
        }
        if (v56 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 25;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 25;
      break;
    case 0x1Au:
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 > 3) {
        goto LABEL_198;
      }
      unsigned int v69 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      if (v69 > 0xFFDB)
      {
        *(_DWORD *)((char *)a1 + v15) = 26;
        return a1;
      }
      if (v69 <= 0xDB) {
LABEL_198:
      }
        *((unsigned char *)a1 + v15) = 26;
      else {
        *(_WORD *)((char *)a1 + v15) = 26;
      }
      break;
    case 0x1Bu:
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        unsigned int v68 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v68 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 27;
          return a1;
        }
        if (v68 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 27;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 27;
      break;
    case 0x1Cu:
      uint64_t v57 = a2[1];
      *a1 = *a2;
      a1[1] = v57;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v58 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v58 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 28;
          return a1;
        }
        if (v58 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 28;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 28;
      break;
    case 0x1Du:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v59 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v59 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 29;
          return a1;
        }
        if (v59 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 29;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 29;
      break;
    case 0x1Eu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v60 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v60 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 30;
          return a1;
        }
        if (v60 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 30;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 30;
      break;
    case 0x1Fu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v61 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v61 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 31;
          return a1;
        }
        if (v61 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 31;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 31;
      break;
    case 0x20u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v62 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v62 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 32;
          return a1;
        }
        if (v62 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 32;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 32;
      break;
    case 0x21u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v63 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v63 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 33;
          return a1;
        }
        if (v63 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 33;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 33;
      break;
    case 0x22u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v64 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v64 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 34;
          return a1;
        }
        if (v64 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 34;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 34;
      break;
    case 0x23u:
      *a1 = *a2;
      swift_retain();
      if (v15 <= 3)
      {
        unsigned int v65 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v65 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 35;
          return a1;
        }
        if (v65 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 35;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 35;
      break;
    default:
      if (v15 > 3) {
        goto LABEL_187;
      }
      unsigned int v66 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      uint64_t v67 = 2;
      if (v66 > 0xFFDB) {
        uint64_t v67 = 4;
      }
      if (v66 <= 0xDB) {
LABEL_187:
      }
        uint64_t v67 = 1;
      memcpy(a1, a2, v67 + v15);
      break;
  }
  return a1;
}

uint64_t FeedGroupConfigType.rules<A>()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for FeedGroupEmitterRule();
  sub_1C152089C();
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 72);
  swift_allocObject();
  uint64_t v7 = sub_1C151EC6C();
  uint64_t v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(a3 + 64))(a1, a3);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t))(a3 + 72))(a1, a3);
  swift_storeEnumTagMultiPayload();
  *(void *)(v9 + 2 * v6) = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 80))(a1, a3);
  swift_storeEnumTagMultiPayload();
  *(void *)(v9 + 3 * v6) = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 88))(a1, a3);
  swift_storeEnumTagMultiPayload();
  *(void *)(v9 + 4 * v6) = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 96))(a1, a3);
  swift_storeEnumTagMultiPayload();
  *(void *)(v9 + 5 * v6) = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 104))(a1, a3);
  swift_storeEnumTagMultiPayload();
  sub_1C151ED5C();
  return v7;
}

uint64_t sub_1BFDCB9B4(uint64_t a1, uint64_t a2)
{
  sub_1C126D168();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFDCBA18()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1BFDCBA40()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

void FeedGroupConfigType.priority.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1BFDCBA74()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_1BFDCBA9C(uint64_t a1)
{
  return sub_1BFDCBAC0(a1, v1[4], v1[2], v1[3]) & 1;
}

uint64_t sub_1BFDCBAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151928C();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v9);
  size_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a4 + 8))(a3, a4, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BFEC001C((uint64_t)v8);
    char v14 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
    char v14 = sub_1C1518F6C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  return v14 & 1;
}

uint64_t sub_1BFDCBC78@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatAndExpression.init(from:)(a1, a2);
}

uint64_t FormatAndExpression.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  unsigned int v25 = a2;
  sub_1C085FE58();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C085FEEC();
  sub_1C085F050(&qword_1EB891D60, (void (*)(uint64_t))sub_1C085FEEC);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v25;
  uint64_t v13 = v7;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      unsigned int v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      unsigned int v25 = (void *)*((void *)v16 - 2);
      uint64_t v18 = *((void *)v16 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v19 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v19);
      *(&v25 - 4) = &_s10CodingKeysON_268;
      *(&v25 - 3) = (void *)sub_1C085FF70();
      *(&v25 - 2) = (void *)sub_1BFDCC080();
      *(&v25 - 1) = (void *)sub_1C085FFC4();
      swift_getKeyPath();
      swift_retain();
      uint64_t v20 = sub_1C085FB14((uint64_t)&unk_1F1B65AB8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v21 = (uint64_t)v25;
      *(void *)uint64_t v22 = v25;
      *(void *)(v22 + 8) = v18;
      *(void *)(v22 + 16) = v20;
      *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v21, v18, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE240A8();
  long long v26 = 0uLL;
  char v27 = 0;
  sub_1C15206EC();
  uint64_t v17 = v28;
  long long v26 = xmmword_1C153AB20;
  char v27 = 0;
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  uint64_t v24 = v28;
  *uint64_t v12 = v17;
  v12[1] = v24;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDCC080()
{
  unint64_t result = qword_1EB888A38;
  if (!qword_1EB888A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888A38);
  }
  return result;
}

uint64_t sub_1BFDCC0D4(void *a1)
{
  return FormatFontScalingData.encode(to:)(a1);
}

uint64_t FormatFontScalingData.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  long long v26 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = &v24[-v6];
  sub_1C0885960();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = *(void *)v1;
  char v11 = *(unsigned char *)(v1 + 8);
  int v25 = *(unsigned __int8 *)(v1 + 9);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1C0885834();
  uint64_t v15 = v14;
  uint64_t v16 = sub_1C085F050(&qword_1EB891FA0, (void (*)(uint64_t))sub_1C0885834);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatFontScalingData, v17, v12, (uint64_t)&type metadata for FormatFontScalingData, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v10, v16, (uint64_t)&off_1F1C39B68);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1C151928C();
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EB93CAB0);
  uint64_t v20 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  v20(v7, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = v28;
  sub_1C070243C(v27, v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  if (!v21)
  {
    uint64_t v22 = (uint64_t)v26;
    v20(v26, v19, v18);
    swift_storeEnumTagMultiPayload();
    sub_1C06B87A0(v25, 1, 0, 0, v22, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v22, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BFEFEB68((uint64_t)v10, (uint64_t (*)(void))sub_1C0885960);
}

unint64_t sub_1BFDCC42C()
{
  unint64_t result = qword_1EB85BD68;
  if (!qword_1EB85BD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BD68);
  }
  return result;
}

uint64_t sub_1BFDCC480(void *a1)
{
  return FormatSymbolName.encode(to:)(a1);
}

uint64_t FormatSymbolName.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v33[-v7 - 8];
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v9 - 8);
  char v11 = &v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = &v33[-v13 - 8];
  uint64_t v16 = *(void *)v1;
  uint64_t v15 = *(void *)(v1 + 8);
  uint64_t v17 = *(void *)(v1 + 16);
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    uint64_t v18 = a1[3];
    uint64_t v19 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v18);
    sub_1BFEB6A24();
    sub_1BFEFBB88((uint64_t)&type metadata for FormatCodingKeys, v20, v18, (uint64_t)&type metadata for FormatVersions.JazzkonG, v19, (uint64_t)&off_1F1C39AE8, (uint64_t)v14);
    if (qword_1EB887640 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1C151928C();
    uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB93CAC8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v8, v22, v21);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1C06962E0(0, v16, v15, v17, (uint64_t)v8);
    sub_1BFEFEB08((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
    return sub_1BFEFEB08((uint64_t)v14, (uint64_t (*)(void))sub_1BFEFF7D8);
  }
  else
  {
    uint64_t v24 = a1[3];
    uint64_t v25 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v24);
    uint64_t v26 = swift_bridgeObjectRetain();
    if (sub_1BFDCC904(v26, v24, (uint64_t)&type metadata for FormatVersions.JazzkonG, v25, (uint64_t)&off_1F1C39AE8))
    {
      uint64_t v27 = a1[3];
      uint64_t v28 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v27);
      sub_1BFEB6A24();
      sub_1BFEFBB88((uint64_t)&type metadata for FormatCodingKeys, v29, v27, (uint64_t)&type metadata for FormatVersions.JazzkonG, v28, (uint64_t)&off_1F1C39AE8, (uint64_t)v11);
      if (qword_1EB887640 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_1C151928C();
      uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1EB93CAC8);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v5, v31, v30);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFDCCE28(1, v16, v15, (uint64_t)v5);
      sub_1BFEFEB08((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
      sub_1BFDEB9E0(v16, v15, v17, 0);
      return sub_1BFEFEB08((uint64_t)v11, (uint64_t (*)(void))sub_1BFEFF7D8);
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1C1520EEC();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v34);
      sub_1C1520AFC();
      sub_1BFDEB9E0(v16, v15, v17, 0);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    }
  }
}

uint64_t sub_1BFDCC904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v50 = a5;
  uint64_t v48 = a1;
  uint64_t v9 = sub_1C151928C();
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v44 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v11 - 8);
  unsigned int v43 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v14);
  unsigned int v52 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a3;
  uint64_t v16 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for FormatVersionInfo(0);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  unsigned int v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFD268(0, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v42 - v25;
  uint64_t v51 = v5;
  uint64_t v53 = a2;
  uint64_t v45 = a4;
  uint64_t v27 = sub_1C1520EFC();
  Dictionary<>.formatCodingVersionInfo.getter(v27, (uint64_t)v26);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v26, 1, v20))
  {
    sub_1BFE546A8((uint64_t)v26, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo);
    int v28 = 2;
    uint64_t v30 = v49;
    uint64_t v29 = v50;
    uint64_t v31 = v48;
  }
  else
  {
    sub_1BFDCD3F4((uint64_t)v26, (uint64_t)v23, type metadata accessor for FormatVersionInfo);
    sub_1BFE546A8((uint64_t)v26, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo);
    uint64_t v32 = v48;
    uint64_t v30 = v49;
    uint64_t v33 = v50;
    char v34 = sub_1C02EE068(v48, v49, v50);
    sub_1BFDCD640((uint64_t)v23, type metadata accessor for FormatVersionInfo);
    int v28 = v34 & 1;
    uint64_t v29 = v33;
    uint64_t v31 = v32;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v31, v30);
  unint64_t v35 = v52;
  uint64_t v36 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v52, v51, v53);
  if (v28 == 2)
  {
    uint64_t v37 = (uint64_t)v43;
    sub_1BFEFE740((uint64_t)v19, v30, v29);
    uint64_t v38 = sub_1C1520EFC();
    uint64_t v39 = v44;
    Dictionary<>.formatVersion.getter(v38, v44);
    swift_bridgeObjectRelease();
    char v40 = sub_1BFDCCFF0(v39);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v39, v47);
    sub_1BFDCD640(v37, type metadata accessor for FormatVersionRequirement);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v35, v36);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v30);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v35, v36);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v30);
    char v40 = v28 != 0;
  }
  return v40 & 1;
}

uint64_t sub_1BFDCCE28(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v7 = a1 & 1;
  char v19 = a1 & 1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = v7;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C09025BC;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDCD5EC();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FC718(0, (unint64_t *)&qword_1EB873EF8, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08EC8E4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDCCFF0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C151928C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v32 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v31 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v31 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v31 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = type metadata accessor for FormatVersionRequirement.Value(0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDCD3F4(v2, (uint64_t)v21, type metadata accessor for FormatVersionRequirement.Value);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v18, v21, v4);
    sub_1BFDCD6A0((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
    char v23 = sub_1C151E57C() ^ 1;
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v18, v21, v4);
    char v23 = sub_1C151921C();
LABEL_5:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v18, v4);
    return v23 & 1;
  }
  sub_1BFF05D18();
  uint64_t v25 = &v21[*(int *)(v24 + 48)];
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v26(v15, v21, v4);
  v26(v12, v25, v4);
  sub_1BFDCD6A0((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
  LOBYTE(v25) = sub_1C151E57C();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v27(v9, a1, v4);
  int v28 = v32;
  v27(v32, (uint64_t)v12, v4);
  if (v25) {
    char v23 = 0;
  }
  else {
    char v23 = sub_1C151921C();
  }
  uint64_t v29 = *(void (**)(char *, uint64_t))(v5 + 8);
  v29(v28, v4);
  v29(v9, v4);
  v29(v12, v4);
  v29(v15, v4);
  return v23 & 1;
}

uint64_t sub_1BFDCD3F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFDCD45C(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = sub_1C151928C();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
    v9(a1, a2, v8);
    sub_1BFF05D18();
    uint64_t v11 = v10;
    v9(a1 + *(int *)(v10 + 48), a2 + *(int *)(v10 + 48), v8);
    uint64_t v7 = *(int *)(v11 + 64);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v15 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
      goto LABEL_7;
    }
    uint64_t v5 = sub_1C151928C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
    uint64_t v7 = *(int *)(v6 + 48);
  }
  uint64_t v12 = (void *)(a1 + v7);
  uint64_t v13 = (void *)(a2 + v7);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
LABEL_7:
  swift_storeEnumTagMultiPayload();
  return a1;
}

unint64_t sub_1BFDCD5EC()
{
  unint64_t result = qword_1EB85B8B8;
  if (!qword_1EB85B8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B8B8);
  }
  return result;
}

uint64_t sub_1BFDCD640(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFDCD6A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFDCD6E8(void *a1)
{
  return FormatPoint.encode(to:)(a1);
}

uint64_t FormatPoint.encode(to:)(void *a1)
{
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v26 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v25 - v7;
  sub_1C08628F4();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = *v1;
  double v12 = v1[1];
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1C08627C8();
  uint64_t v17 = v16;
  uint64_t v18 = sub_1C085F050(&qword_1EB892490, (void (*)(uint64_t))sub_1C08627C8);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatPoint, v19, v14, (uint64_t)&type metadata for FormatPoint, v17, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v11, v18, (uint64_t)&off_1F1C39B68);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1C151928C();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93CAB0);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
  v22(v8, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06C6BC4(0, 0, 0, (uint64_t)v8, (uint64_t)sub_1C01B158C, 0, v13);
  sub_1BFEFEB68((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    uint64_t v23 = (uint64_t)v26;
    v22(v26, v21, v20);
    swift_storeEnumTagMultiPayload();
    sub_1C06C6BC4(1, 0, 0, v23, (uint64_t)sub_1C01B158C, 0, v12);
    sub_1BFEFEB68(v23, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BFEFEB68((uint64_t)v11, (uint64_t (*)(void))sub_1C08628F4);
}

uint64_t type metadata accessor for FeedGroupEmitterRule()
{
  return __swift_instantiateGenericMetadata();
}

void FeedGroupEmitterRule.evaluate(cursor:slots:)(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  v389 = a4;
  uint64_t v380 = a2;
  v388 = a1;
  sub_1C0368F0C(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v365 = (uint64_t)&v341 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v364 = (uint64_t)&v341 - v8;
  uint64_t v378 = sub_1C151928C();
  uint64_t v377 = *(void *)(v378 - 8);
  MEMORY[0x1F4188790](v378);
  v345 = (char *)&v341 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  v353 = (char *)&v341 - v11;
  MEMORY[0x1F4188790](v12);
  v344 = (char *)&v341 - v13;
  MEMORY[0x1F4188790](v14);
  v352 = (char *)&v341 - v15;
  sub_1C0368F0C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
  MEMORY[0x1F4188790](v16 - 8);
  v351 = (char *)&v341 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v363 = (uint64_t)&v341 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v367 = (uint64_t)&v341 - v21;
  MEMORY[0x1F4188790](v22);
  v350 = (char *)&v341 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v362 = (uint64_t)&v341 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v366 = (uint64_t)&v341 - v27;
  uint64_t v376 = sub_1C15165FC();
  uint64_t v375 = *(void *)(v376 - 8);
  MEMORY[0x1F4188790](v376);
  v372 = (char *)&v341 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v374 = sub_1C151661C();
  uint64_t v373 = *(void *)(v374 - 8);
  MEMORY[0x1F4188790](v374);
  v371 = (char *)&v341 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *(void *)(a3 + 16);
  uint64_t v30 = *(void *)(a3 + 24);
  uint64_t v32 = type metadata accessor for FeedCursorGroup();
  uint64_t v370 = sub_1C151FD8C();
  uint64_t v369 = *(void *)(v370 - 8);
  MEMORY[0x1F4188790](v370);
  v347 = (char *)&v341 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  v360 = (char *)&v341 - v35;
  MEMORY[0x1F4188790](v36);
  v346 = (char *)&v341 - v37;
  MEMORY[0x1F4188790](v38);
  v359 = (char *)&v341 - v39;
  uint64_t v387 = v32;
  uint64_t v379 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v40);
  v343 = (char *)&v341 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v42);
  v349 = (char *)&v341 - v43;
  MEMORY[0x1F4188790](v44);
  v342 = (char *)&v341 - v45;
  MEMORY[0x1F4188790](v46);
  v348 = (char *)&v341 - v47;
  sub_1BFDD2EEC();
  MEMORY[0x1F4188790](v48 - 8);
  v361 = (char *)&v341 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v357 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  v355 = (char *)&v341 - v50;
  uint64_t v51 = swift_checkMetadataState();
  uint64_t v354 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v53 = (char *)&v341 - v52;
  swift_getAssociatedTypeWitness();
  uint64_t v384 = v31;
  uint64_t v385 = v30;
  swift_getAssociatedConformanceWitness();
  uint64_t v54 = swift_getAssociatedTypeWitness();
  uint64_t v55 = swift_getAssociatedConformanceWitness();
  uint64_t v381 = v54;
  uint64_t v382 = v55;
  uint64_t v386 = swift_getAssociatedTypeWitness();
  uint64_t v383 = *(void *)(v386 - 8);
  MEMORY[0x1F4188790](v386);
  uint64_t v57 = (char *)&v341 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v58);
  unsigned int v60 = (char *)&v341 - v59;
  MEMORY[0x1F4188790](v61);
  v368 = (char *)&v341 - v62;
  MEMORY[0x1F4188790](v63);
  unsigned int v65 = (char *)&v341 - v64;
  MEMORY[0x1F4188790](v66);
  unsigned int v68 = (char *)&v341 - v67;
  MEMORY[0x1F4188790](v69);
  long long v71 = (char *)&v341 - v70;
  MEMORY[0x1F4188790](v72);
  uint64_t v74 = (char *)&v341 - v73;
  __n128 v76 = MEMORY[0x1F4188790](v75);
  char v78 = (uint64_t *)((char *)&v341 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t, __n128))(v79 + 16))(v78, v390, a3, v76);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      int v84 = *(unsigned __int8 *)v78;
      unint64_t v85 = 0xD000000000000014;
      uint64_t v86 = "Feature is available";
      goto LABEL_145;
    case 2:
      uint64_t v87 = v386;
      uint64_t v88 = *(uint64_t *)((char *)v78 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      uint64_t v89 = v383;
      uint64_t v90 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v383 + 32))(v74, v78, v87);
      MEMORY[0x1F4188790](v90);
      uint64_t v91 = v385;
      *(&v341 - 4) = v384;
      *(&v341 - 3) = v91;
      *(&v341 - 2) = (uint64_t)v74;
      if (sub_1C151EBFC() >= v88)
      {
        v395[0] = 0;
        v395[1] = 0xE000000000000000;
        sub_1C15200FC();
        swift_bridgeObjectRelease();
        v395[0] = 0x7563636F2078614DLL;
        v395[1] = 0xEF2065636E657272;
        uint64_t v393 = v88;
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        char v94 = 0;
        unint64_t v92 = v395[0];
        unint64_t v93 = v395[1];
      }
      else
      {
        unint64_t v92 = 0;
        unint64_t v93 = 0;
        char v94 = 2;
      }
      (*(void (**)(char *, uint64_t))(v89 + 8))(v74, v87);
      goto LABEL_194;
    case 3:
      uint64_t v95 = v386;
      uint64_t v390 = *(uint64_t *)((char *)v78 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      (*(void (**)(char *, uint64_t *, uint64_t))(v383 + 32))(v71, v78, v95);
      uint64_t v96 = v384;
      uint64_t v97 = v385;
      (*(void (**)(uint64_t, uint64_t))(v385 + 64))(v384, v385);
      uint64_t v98 = v355;
      (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v51, AssociatedConformanceWitness);
      (*(void (**)(char *, uint64_t))(v354 + 8))(v53, v51);
      uint64_t v99 = AssociatedTypeWitness;
      uint64_t v100 = swift_getAssociatedConformanceWitness();
      uint64_t v101 = (*(uint64_t (**)(uint64_t, uint64_t))(v100 + 48))(v99, v100);
      uint64_t v102 = (*(uint64_t (**)(char *, uint64_t))(v357 + 8))(v98, v99);
      v395[0] = v101;
      MEMORY[0x1F4188790](v102);
      *(&v341 - 2) = v96;
      *(&v341 - 1) = v97;
      swift_getAssociatedTypeWitness();
      uint64_t v103 = sub_1C151ED5C();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v106 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0362DBC, (uint64_t)(&v341 - 4), v103, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v105);
      swift_bridgeObjectRelease();
      uint64_t v107 = sub_1BFEF4060(v106);
      swift_bridgeObjectRelease();
      uint64_t v108 = FeedGroupEmitterCursor.allGroups.getter();
      MEMORY[0x1F4188790](v108);
      *(&v341 - 4) = v96;
      *(&v341 - 3) = v97;
      *(&v341 - 2) = (uint64_t)v71;
      *(&v341 - 1) = v107;
      uint64_t v109 = sub_1C151EBFC();
      uint64_t v110 = v390;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v109 >= v110)
      {
        v395[0] = 0;
        v395[1] = 0xE000000000000000;
        sub_1C15200FC();
        swift_bridgeObjectRelease();
        v395[0] = 0xD00000000000001ALL;
        v395[1] = 0x80000001C160C540;
        uint64_t v393 = v110;
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        char v94 = 0;
        unint64_t v92 = v395[0];
        unint64_t v93 = v395[1];
      }
      else
      {
        unint64_t v92 = 0;
        unint64_t v93 = 0;
        char v94 = 2;
      }
      (*(void (**)(char *, uint64_t))(v383 + 8))(v71, v386);
      goto LABEL_194;
    case 4:
      uint64_t v111 = v386;
      uint64_t v112 = *(uint64_t *)((char *)v78 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      uint64_t v113 = v383;
      (*(void (**)(char *, uint64_t *, uint64_t))(v383 + 32))(v68, v78, v111);
      uint64_t v114 = v388;
      uint64_t v115 = FeedGroupEmitterCursor.allGroups.getter();
      MEMORY[0x1F4188790](v115);
      *(&v341 - 2) = (uint64_t)v68;
      *(&v341 - 1) = (uint64_t)v114;
      uint64_t v116 = sub_1C151EBFC();
      swift_bridgeObjectRelease();
      if (v116 >= v112)
      {
        v395[0] = 0;
        v395[1] = 0xE000000000000000;
        sub_1C15200FC();
        swift_bridgeObjectRelease();
        v395[0] = 0xD000000000000020;
        v395[1] = 0x80000001C160C510;
        uint64_t v393 = v112;
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        char v94 = 0;
        unint64_t v92 = v395[0];
        unint64_t v93 = v395[1];
      }
      else
      {
        unint64_t v92 = 0;
        unint64_t v93 = 0;
        char v94 = 2;
      }
      (*(void (**)(char *, uint64_t))(v113 + 8))(v68, v111);
      goto LABEL_194;
    case 5:
      sub_1BFDC7470();
      uint64_t v117 = v386;
      uint64_t v118 = *(uint64_t *)((char *)v78 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      uint64_t v119 = v383;
      (*(void (**)(char *, uint64_t *, uint64_t))(v383 + 32))(v65, v78, v117);
      long long v120 = v361;
      sub_1C035FE90(v361);
      uint64_t v121 = FeedGroupEmitterCursor.allGroups.getter();
      MEMORY[0x1F4188790](v121);
      uint64_t v122 = v385;
      *(&v341 - 4) = v384;
      *(&v341 - 3) = v122;
      *(&v341 - 2) = (uint64_t)v65;
      *(&v341 - 1) = (uint64_t)v120;
      uint64_t v123 = sub_1C151EBFC();
      swift_bridgeObjectRelease();
      if (v123 >= v118)
      {
        v395[0] = 0;
        v395[1] = 0xE000000000000000;
        sub_1C15200FC();
        swift_bridgeObjectRelease();
        v395[0] = 0xD00000000000001BLL;
        v395[1] = 0x80000001C160C4F0;
        uint64_t v393 = v118;
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        char v94 = 0;
        unint64_t v92 = v395[0];
        unint64_t v93 = v395[1];
      }
      else
      {
        unint64_t v92 = 0;
        unint64_t v93 = 0;
        char v94 = 2;
      }
      sub_1C0362BA0((uint64_t)v120, (uint64_t (*)(void))sub_1BFDD2EEC);
      (*(void (**)(char *, uint64_t))(v119 + 8))(v65, v117);
      goto LABEL_194;
    case 6:
      uint64_t v124 = *v78;
      uint64_t v125 = v387;
      v395[0] = *(uint64_t *)((char *)v388 + *(void *)(*v388 + 136));
      sub_1C151ED5C();
      swift_getWitnessTable();
      long long v126 = v359;
      sub_1C151E52C();
      uint64_t v127 = v379;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v379 + 48))(v126, 1, v125) == 1) {
        goto LABEL_20;
      }
      long long v128 = v348;
      (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v348, v126, v125);
      char v129 = *(void (**)(void))(v382 + 64);
      swift_checkMetadataState();
      char v130 = v368;
      v129();
      uint64_t v131 = v386;
      swift_getAssociatedConformanceWitness();
      char v132 = sub_1C151F03C();
      (*(void (**)(char *, uint64_t))(v383 + 8))(v130, v131);
      if ((v132 & 1) == 0) {
        goto LABEL_24;
      }
      goto LABEL_196;
    case 7:
      uint64_t v124 = *v78;
      if (v380) {
        goto LABEL_176;
      }
      uint64_t v125 = v387;
      v395[0] = *(uint64_t *)((char *)v388 + *(void *)(*v388 + 136));
      sub_1C151ED5C();
      swift_getWitnessTable();
      long long v126 = v346;
      sub_1C151E52C();
      uint64_t v127 = v379;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v379 + 48))(v126, 1, v125) == 1)
      {
LABEL_20:
        (*(void (**)(char *, uint64_t))(v369 + 8))(v126, v370);
        swift_getAssociatedConformanceWitness();
        if (sub_1C151F01C()) {
          goto LABEL_206;
        }
        goto LABEL_212;
      }
      long long v128 = v342;
      (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v342, v126, v125);
      v328 = *(void (**)(void))(v382 + 64);
      swift_checkMetadataState();
      v329 = v368;
      v328();
      uint64_t v330 = v386;
      swift_getAssociatedConformanceWitness();
      char v331 = sub_1C151F03C();
      (*(void (**)(char *, uint64_t))(v383 + 8))(v329, v330);
      if ((v331 & 1) == 0)
      {
LABEL_24:
        v395[0] = 0;
        v395[1] = 0xE000000000000000;
        sub_1C15200FC();
        sub_1C151E80C();
        uint64_t v393 = v124;
        sub_1C151F04C();
        swift_getWitnessTable();
        sub_1C1520A3C();
        swift_bridgeObjectRelease();
        unint64_t v138 = v395[0];
        unint64_t v139 = v395[1];
        (*(void (**)(char *, uint64_t))(v127 + 8))(v128, v125);
        goto LABEL_25;
      }
LABEL_196:
      (*(void (**)(char *, uint64_t))(v127 + 8))(v128, v125);
      goto LABEL_197;
    case 8:
      uint64_t v124 = *v78;
      uint64_t v125 = v387;
      v395[0] = *(uint64_t *)((char *)v388 + *(void *)(*v388 + 136));
      sub_1C151ED5C();
      swift_getWitnessTable();
      v133 = v360;
      sub_1C151E52C();
      uint64_t v127 = v379;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v379 + 48))(v133, 1, v125) == 1) {
        goto LABEL_28;
      }
      long long v128 = v349;
      (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v349, v133, v125);
      v134 = *(void (**)(void))(v382 + 64);
      swift_checkMetadataState();
      v135 = v368;
      v134();
      uint64_t v136 = v386;
      swift_getAssociatedConformanceWitness();
      char v137 = sub_1C151F03C();
      (*(void (**)(char *, uint64_t))(v383 + 8))(v135, v136);
      if (v137) {
        goto LABEL_24;
      }
      goto LABEL_196;
    case 9:
      uint64_t v124 = *v78;
      if (v380) {
        goto LABEL_176;
      }
      uint64_t v141 = v387;
      v395[0] = *(uint64_t *)((char *)v388 + *(void *)(*v388 + 136));
      sub_1C151ED5C();
      swift_getWitnessTable();
      v133 = v347;
      sub_1C151E52C();
      uint64_t v142 = v379;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v379 + 48))(v133, 1, v141) != 1)
      {
        v333 = v343;
        (*(void (**)(char *, char *, uint64_t))(v142 + 32))(v343, v133, v141);
        v334 = *(void (**)(void))(v382 + 64);
        swift_checkMetadataState();
        v335 = v368;
        v334();
        uint64_t v336 = v386;
        swift_getAssociatedConformanceWitness();
        char v337 = sub_1C151F03C();
        (*(void (**)(char *, uint64_t))(v383 + 8))(v335, v336);
        if (v337)
        {
          v395[0] = 0;
          v395[1] = 0xE000000000000000;
          sub_1C15200FC();
          sub_1C151E80C();
          uint64_t v393 = v124;
          sub_1C151F04C();
          swift_getWitnessTable();
          sub_1C1520A3C();
          swift_bridgeObjectRelease();
          unint64_t v138 = v395[0];
          unint64_t v139 = v395[1];
          (*(void (**)(char *, uint64_t))(v142 + 8))(v333, v141);
LABEL_25:
          char v140 = 1;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v142 + 8))(v333, v141);
LABEL_197:
          swift_bridgeObjectRelease();
          unint64_t v138 = 0;
          unint64_t v139 = 0;
          char v140 = 2;
        }
        v332 = v389;
        unint64_t *v389 = v138;
        v332[1] = v139;
        *((unsigned char *)v332 + 16) = v140;
        return;
      }
LABEL_28:
      (*(void (**)(char *, uint64_t))(v369 + 8))(v133, v370);
      swift_getAssociatedConformanceWitness();
      if ((sub_1C151F01C() & 1) == 0) {
        goto LABEL_206;
      }
      goto LABEL_212;
    case 10:
      uint64_t v143 = *v78;
      v395[0] = *(uint64_t *)((char *)v388 + *(void *)(*v388 + 136));
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      uint64_t v144 = v385;
      *(&v341 - 4) = v384;
      *(&v341 - 3) = v144;
      *(&v341 - 2) = v143;
      sub_1C151ED5C();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      char v145 = sub_1C151EA2C();
      swift_bridgeObjectRelease();
      if ((v145 & 1) == 0) {
        goto LABEL_33;
      }
      goto LABEL_176;
    case 11:
      uint64_t v143 = *v78;
      v395[0] = *(uint64_t *)((char *)v388 + *(void *)(*v388 + 136));
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      uint64_t v146 = v385;
      *(&v341 - 4) = v384;
      *(&v341 - 3) = v146;
      *(&v341 - 2) = v143;
      sub_1C151ED5C();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      char v147 = sub_1C151EA2C();
      swift_bridgeObjectRelease();
      if ((v147 & 1) == 0) {
        goto LABEL_176;
      }
LABEL_33:
      v395[0] = 0;
      v395[1] = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      uint64_t v393 = v143;
      swift_getAssociatedConformanceWitness();
      sub_1C151F04C();
      swift_getWitnessTable();
      sub_1C1520A3C();
      swift_bridgeObjectRelease();
      unint64_t v148 = v395[1];
      v149 = v389;
      unint64_t *v389 = v395[0];
      v149[1] = v148;
      *((unsigned char *)v149 + 16) = 1;
      return;
    case 12:
      uint64_t v150 = v386;
      uint64_t v151 = *(uint64_t *)((char *)v78 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      uint64_t v152 = v383;
      (*(void (**)(char *, uint64_t *, uint64_t))(v383 + 32))(v60, v78, v150);
      uint64_t v392 = *(uint64_t *)((char *)v388 + *(void *)(*v388 + 136));
      sub_1C151ED5C();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      sub_1C151E53C();
      uint64_t v392 = v395[0];
      sub_1C15204AC();
      swift_getWitnessTable();
      uint64_t v392 = sub_1C151ED7C();
      MEMORY[0x1F4188790](v392);
      uint64_t v153 = v385;
      *(&v341 - 4) = v384;
      *(&v341 - 3) = v153;
      *(&v341 - 2) = (uint64_t)v60;
      swift_getWitnessTable();
      sub_1C151F10C();
      swift_bridgeObjectRelease();
      if (v394)
      {
        (*(void (**)(char *, uint64_t))(v152 + 8))(v60, v150);
        goto LABEL_177;
      }
      uint64_t v313 = v393;
      if (v393 >= v151)
      {
        unint64_t v314 = 0;
        unint64_t v315 = 0;
        char v316 = 2;
      }
      else
      {
        v395[0] = 0;
        v395[1] = 0xE000000000000000;
        sub_1C15200FC();
        sub_1C151E80C();
        uint64_t v391 = v313;
        sub_1C1520A3C();
        sub_1C151E80C();
        uint64_t v391 = v151;
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        unint64_t v314 = v395[0];
        unint64_t v315 = v395[1];
        char v316 = 1;
      }
      (*(void (**)(char *, uint64_t))(v152 + 8))(v60, v150);
      goto LABEL_211;
    case 13:
      uint64_t v154 = v386;
      uint64_t v155 = *(uint64_t *)((char *)v78 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      uint64_t v156 = v383;
      v157 = v57;
      (*(void (**)(char *, uint64_t *, uint64_t))(v383 + 32))(v57, v78, v154);
      if (v380) {
        goto LABEL_38;
      }
      uint64_t v392 = *(uint64_t *)((char *)v388 + *(void *)(*v388 + 136));
      sub_1C151ED5C();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      sub_1C151E53C();
      uint64_t v392 = v395[0];
      sub_1C15204AC();
      swift_getWitnessTable();
      uint64_t v392 = sub_1C151ED7C();
      MEMORY[0x1F4188790](v392);
      uint64_t v158 = v385;
      *(&v341 - 4) = v384;
      *(&v341 - 3) = v158;
      *(&v341 - 2) = (uint64_t)v57;
      swift_getWitnessTable();
      sub_1C151F10C();
      swift_bridgeObjectRelease();
      if (v394)
      {
LABEL_38:
        (*(void (**)(char *, uint64_t))(v156 + 8))(v57, v154);
        goto LABEL_177;
      }
      uint64_t v338 = v393;
      if (v393 >= v155)
      {
        unint64_t v314 = 0;
        unint64_t v315 = 0;
        char v316 = 2;
      }
      else
      {
        v395[0] = 0;
        v395[1] = 0xE000000000000000;
        sub_1C15200FC();
        sub_1C151E80C();
        uint64_t v391 = v338;
        sub_1C1520A3C();
        sub_1C151E80C();
        uint64_t v391 = v155;
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        unint64_t v314 = v395[0];
        unint64_t v315 = v395[1];
        char v316 = 1;
      }
      (*(void (**)(char *, uint64_t))(v156 + 8))(v157, v154);
LABEL_211:
      v339 = v389;
      unint64_t *v389 = v314;
      v339[1] = v315;
      *((unsigned char *)v339 + 16) = v316;
      return;
    case 14:
      uint64_t v124 = *v78;
      v395[0] = *(uint64_t *)((char *)v388 + *(void *)(*v388 + 152));
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      uint64_t v159 = v385;
      *(&v341 - 2) = v384;
      *(&v341 - 1) = v159;
      uint64_t v160 = sub_1C151ED5C();
      swift_bridgeObjectRetain();
      uint64_t v161 = swift_getWitnessTable();
      uint64_t v162 = v160;
      uint64_t v163 = v386;
      uint64_t v165 = sub_1C035E7C8((void (*)(char *, char *))sub_1C036902C, (uint64_t)(&v341 - 4), v162, v386, MEMORY[0x1E4FBC248], v161, MEMORY[0x1E4FBC278], v164);
      swift_bridgeObjectRelease();
      v395[0] = v165;
      sub_1C151ED5C();
      uint64_t v166 = swift_getAssociatedConformanceWitness();
      swift_getWitnessTable();
      uint64_t v167 = sub_1C151F05C();
      if (sub_1C151F01C()) {
        goto LABEL_44;
      }
      uint64_t v124 = MEMORY[0x1C18C6B20](v167, v124, v163, v166);
      swift_bridgeObjectRelease();
      if (sub_1C151F01C()) {
        goto LABEL_212;
      }
      goto LABEL_206;
    case 15:
      uint64_t v124 = *v78;
      if (v380) {
        goto LABEL_176;
      }
      v395[0] = *(uint64_t *)((char *)v388 + *(void *)(*v388 + 152));
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      uint64_t v168 = v385;
      *(&v341 - 2) = v384;
      *(&v341 - 1) = v168;
      uint64_t v169 = sub_1C151ED5C();
      swift_bridgeObjectRetain();
      uint64_t v170 = swift_getWitnessTable();
      uint64_t v171 = v169;
      uint64_t v172 = v386;
      uint64_t v174 = sub_1C035E7C8((void (*)(char *, char *))sub_1C036902C, (uint64_t)(&v341 - 4), v171, v386, MEMORY[0x1E4FBC248], v170, MEMORY[0x1E4FBC278], v173);
      swift_bridgeObjectRelease();
      v395[0] = v174;
      sub_1C151ED5C();
      uint64_t v175 = swift_getAssociatedConformanceWitness();
      swift_getWitnessTable();
      uint64_t v176 = sub_1C151F05C();
      if (sub_1C151F01C())
      {
LABEL_44:
        swift_bridgeObjectRelease();
        if (sub_1C151F01C()) {
          goto LABEL_206;
        }
      }
      else
      {
        uint64_t v124 = MEMORY[0x1C18C6B20](v176, v124, v172, v175);
        swift_bridgeObjectRelease();
        if ((sub_1C151F01C() & 1) == 0) {
          goto LABEL_206;
        }
      }
      goto LABEL_212;
    case 16:
      uint64_t v177 = *v78;
      v395[0] = *(uint64_t *)((char *)v388 + *(void *)(*v388 + 152));
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      uint64_t v178 = v385;
      *(&v341 - 2) = v384;
      *(&v341 - 1) = v178;
      uint64_t v179 = sub_1C151ED5C();
      swift_bridgeObjectRetain();
      uint64_t v180 = swift_getWitnessTable();
      uint64_t v181 = v179;
      uint64_t v182 = v386;
      uint64_t v184 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0362D40, (uint64_t)(&v341 - 4), v181, v386, MEMORY[0x1E4FBC248], v180, MEMORY[0x1E4FBC278], v183);
      swift_bridgeObjectRelease();
      v395[0] = v184;
      sub_1C151ED5C();
      uint64_t v185 = swift_getAssociatedConformanceWitness();
      swift_getWitnessTable();
      uint64_t v186 = sub_1C151F05C();
      if (sub_1C151F01C() & 1) != 0 || (sub_1C151F01C()) {
        goto LABEL_53;
      }
      uint64_t v124 = MEMORY[0x1C18C6B20](v186, v177, v182, v185);
      swift_bridgeObjectRelease();
      if ((sub_1C151F01C() & 1) == 0) {
        goto LABEL_212;
      }
      goto LABEL_206;
    case 17:
      uint64_t v187 = *v78;
      if (v380) {
        goto LABEL_176;
      }
      v395[0] = *(uint64_t *)((char *)v388 + *(void *)(*v388 + 152));
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      uint64_t v188 = v385;
      *(&v341 - 2) = v384;
      *(&v341 - 1) = v188;
      uint64_t v189 = sub_1C151ED5C();
      swift_bridgeObjectRetain();
      uint64_t v190 = swift_getWitnessTable();
      uint64_t v191 = v189;
      uint64_t v192 = v386;
      uint64_t v194 = sub_1C035E7C8((void (*)(char *, char *))sub_1C036902C, (uint64_t)(&v341 - 4), v191, v386, MEMORY[0x1E4FBC248], v190, MEMORY[0x1E4FBC278], v193);
      swift_bridgeObjectRelease();
      v395[0] = v194;
      sub_1C151ED5C();
      uint64_t v195 = swift_getAssociatedConformanceWitness();
      swift_getWitnessTable();
      uint64_t v196 = sub_1C151F05C();
      if (sub_1C151F01C() & 1) != 0 || (sub_1C151F01C())
      {
LABEL_53:
        swift_bridgeObjectRelease();
        goto LABEL_176;
      }
      uint64_t v124 = MEMORY[0x1C18C6B20](v196, v187, v192, v195);
      swift_bridgeObjectRelease();
      if (sub_1C151F01C())
      {
LABEL_206:
        swift_bridgeObjectRelease();
        unint64_t v82 = 0;
        unint64_t v83 = 0;
        char v308 = 2;
      }
      else
      {
LABEL_212:
        v395[0] = 0;
        v395[1] = 0xE000000000000000;
        sub_1C15200FC();
        sub_1C151E80C();
        uint64_t v393 = v124;
        sub_1C151F04C();
        swift_getWitnessTable();
        sub_1C1520A3C();
LABEL_213:
        swift_bridgeObjectRelease();
        unint64_t v82 = v395[0];
        unint64_t v83 = v395[1];
        char v308 = 1;
      }
LABEL_214:
      v340 = v389;
      unint64_t *v389 = v82;
      v340[1] = v83;
      *((unsigned char *)v340 + 16) = v308;
      return;
    case 18:
      if ((sub_1C0452010(*((unsigned char *)v388 + *(void *)(*v388 + 192)), *v78) & 1) == 0) {
        goto LABEL_57;
      }
      goto LABEL_206;
    case 19:
      if ((sub_1C0452010(*((unsigned char *)v388 + *(void *)(*v388 + 192)), *v78) & 1) == 0) {
        goto LABEL_206;
      }
LABEL_57:
      v395[0] = 0;
      v395[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      strcpy((char *)v395, "Cursor kind ");
      BYTE5(v395[1]) = 0;
      HIWORD(v395[1]) = -5120;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C00BC560();
      sub_1C151EFCC();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_213;
    case 20:
      uint64_t v197 = *v78;
      v198 = v371;
      sub_1C15165BC();
      uint64_t v199 = v375;
      v200 = v372;
      uint64_t v201 = v376;
      (*(void (**)(char *, void, uint64_t))(v375 + 104))(v372, *MEMORY[0x1E4F27C68], v376);
      uint64_t v202 = sub_1C151660C();
      (*(void (**)(char *, uint64_t))(v199 + 8))(v200, v201);
      (*(void (**)(char *, uint64_t))(v373 + 8))(v198, v374);
      LOBYTE(v202) = sub_1BFFC399C(v202, v197);
      swift_bridgeObjectRelease();
      unint64_t v82 = 0xD000000000000017;
      v203 = "Requires not specified days";
      BOOL v81 = (v202 & 1) == 0;
      goto LABEL_138;
    case 21:
      uint64_t v204 = *v78;
      v205 = v371;
      sub_1C15165BC();
      uint64_t v206 = v375;
      v207 = v372;
      uint64_t v208 = v376;
      (*(void (**)(char *, void, uint64_t))(v375 + 104))(v372, *MEMORY[0x1E4F27C68], v376);
      uint64_t v209 = sub_1C151660C();
      (*(void (**)(char *, uint64_t))(v206 + 8))(v207, v208);
      (*(void (**)(char *, uint64_t))(v373 + 8))(v205, v374);
      LOBYTE(v209) = sub_1BFFC399C(v209, v204);
      swift_bridgeObjectRelease();
      unint64_t v82 = 0xD00000000000001BLL;
      BOOL v210 = (v209 & 1) == 0;
      if ((v209 & 1) == 0) {
        unint64_t v82 = 0;
      }
      unint64_t v83 = 0x80000001C160C220;
      goto LABEL_149;
    case 22:
      uint64_t v211 = *v78;
      v212 = v388;
      uint64_t v213 = *v388;
      uint64_t v214 = (uint64_t)v388 + *(void *)(*v388 + 176);
      v215 = *(void **)(v214 + *(int *)(type metadata accessor for FeedContext() + 56));
      if (!v215)
      {
        swift_bridgeObjectRelease();
        if (qword_1EB87B060 != -1) {
          goto LABEL_220;
        }
        goto LABEL_182;
      }
      uint64_t v216 = v211 + 56;
      uint64_t v217 = 1 << *(unsigned char *)(v211 + 32);
      uint64_t v218 = -1;
      if (v217 < 64) {
        uint64_t v218 = ~(-1 << v217);
      }
      unint64_t v219 = v218 & *(void *)(v211 + 56);
      uint64_t v220 = (uint64_t)v212 + *(void *)(v213 + 200);
      int64_t v221 = (unint64_t)(v217 + 63) >> 6;
      id v222 = v215;
      int64_t v223 = 0;
      while (2)
      {
        if (v219)
        {
          unint64_t v224 = __clz(__rbit64(v219));
          v219 &= v219 - 1;
          unint64_t v225 = v224 | (v223 << 6);
LABEL_67:
          LOBYTE(v395[0]) = *(unsigned char *)(*(void *)(v211 + 48) + v225);
          if (sub_1C11A53C0(v220, (unsigned __int8 *)v395)) {
            goto LABEL_157;
          }
          continue;
        }
        break;
      }
      int64_t v226 = v223 + 1;
      if (!__OFADD__(v223, 1))
      {
        if (v226 >= v221) {
          goto LABEL_184;
        }
        unint64_t v227 = *(void *)(v216 + 8 * v226);
        ++v223;
        if (!v227)
        {
          int64_t v223 = v226 + 1;
          if (v226 + 1 >= v221) {
            goto LABEL_184;
          }
          unint64_t v227 = *(void *)(v216 + 8 * v223);
          if (!v227)
          {
            int64_t v223 = v226 + 2;
            if (v226 + 2 >= v221) {
              goto LABEL_184;
            }
            unint64_t v227 = *(void *)(v216 + 8 * v223);
            if (!v227)
            {
              int64_t v228 = v226 + 3;
              if (v228 >= v221) {
                goto LABEL_184;
              }
              unint64_t v227 = *(void *)(v216 + 8 * v228);
              if (!v227)
              {
                while (1)
                {
                  int64_t v223 = v228 + 1;
                  if (__OFADD__(v228, 1)) {
                    goto LABEL_218;
                  }
                  if (v223 >= v221) {
                    break;
                  }
                  unint64_t v227 = *(void *)(v216 + 8 * v223);
                  ++v228;
                  if (v227) {
                    goto LABEL_82;
                  }
                }
LABEL_184:
                swift_release();

                v303 = "Requires specified time of day";
                unint64_t v304 = 0xD00000000000001ELL;
                goto LABEL_185;
              }
              int64_t v223 = v228;
            }
          }
        }
LABEL_82:
        unint64_t v219 = (v227 - 1) & v227;
        unint64_t v225 = __clz(__rbit64(v227)) + (v223 << 6);
        goto LABEL_67;
      }
      __break(1u);
LABEL_217:
      __break(1u);
LABEL_218:
      __break(1u);
LABEL_219:
      __break(1u);
LABEL_220:
      swift_once();
LABEL_182:
      id v321 = (id)qword_1EB93C700;
      sub_1C151F36C();
      sub_1C15197BC();

      v322 = v389;
      unint64_t *v389 = 0;
      v322[1] = 0;
      *((unsigned char *)v322 + 16) = 2;
      return;
    case 23:
      uint64_t v229 = *v78;
      v230 = v388;
      uint64_t v231 = *v388;
      uint64_t v232 = (uint64_t)v388 + *(void *)(*v388 + 176);
      v233 = *(void **)(v232 + *(int *)(type metadata accessor for FeedContext() + 56));
      if (v233)
      {
        uint64_t v234 = v229 + 56;
        uint64_t v235 = 1 << *(unsigned char *)(v229 + 32);
        uint64_t v236 = -1;
        if (v235 < 64) {
          uint64_t v236 = ~(-1 << v235);
        }
        unint64_t v237 = v236 & *(void *)(v229 + 56);
        uint64_t v238 = (uint64_t)v230 + *(void *)(v231 + 200);
        int64_t v239 = (unint64_t)(v235 + 63) >> 6;
        id v222 = v233;
        int64_t v240 = 0;
        do
        {
          if (v237)
          {
            unint64_t v241 = __clz(__rbit64(v237));
            v237 &= v237 - 1;
            unint64_t v242 = v241 | (v240 << 6);
          }
          else
          {
            int64_t v243 = v240 + 1;
            if (__OFADD__(v240, 1)) {
              goto LABEL_217;
            }
            if (v243 >= v239) {
              goto LABEL_157;
            }
            unint64_t v244 = *(void *)(v234 + 8 * v243);
            ++v240;
            if (!v244)
            {
              int64_t v240 = v243 + 1;
              if (v243 + 1 >= v239) {
                goto LABEL_157;
              }
              unint64_t v244 = *(void *)(v234 + 8 * v240);
              if (!v244)
              {
                int64_t v240 = v243 + 2;
                if (v243 + 2 >= v239) {
                  goto LABEL_157;
                }
                unint64_t v244 = *(void *)(v234 + 8 * v240);
                if (!v244)
                {
                  int64_t v245 = v243 + 3;
                  if (v245 >= v239) {
                    goto LABEL_157;
                  }
                  unint64_t v244 = *(void *)(v234 + 8 * v245);
                  if (!v244)
                  {
                    while (1)
                    {
                      int64_t v240 = v245 + 1;
                      if (__OFADD__(v245, 1)) {
                        goto LABEL_219;
                      }
                      if (v240 >= v239) {
                        break;
                      }
                      unint64_t v244 = *(void *)(v234 + 8 * v240);
                      ++v245;
                      if (v244) {
                        goto LABEL_103;
                      }
                    }
LABEL_157:

                    swift_release();
                    goto LABEL_177;
                  }
                  int64_t v240 = v245;
                }
              }
            }
LABEL_103:
            unint64_t v237 = (v244 - 1) & v244;
            unint64_t v242 = __clz(__rbit64(v244)) + (v240 << 6);
          }
          LOBYTE(v395[0]) = *(unsigned char *)(*(void *)(v229 + 48) + v242);
        }
        while ((sub_1C11A53C0(v238, (unsigned __int8 *)v395) & 1) == 0);
        swift_release();

        v323 = v389;
        unint64_t *v389 = 0xD00000000000001CLL;
        v323[1] = 0x80000001C160C160;
        *((unsigned char *)v323 + 16) = 0;
        return;
      }
      swift_bridgeObjectRelease();
      if (qword_1EB87B060 != -1) {
        goto LABEL_220;
      }
      goto LABEL_182;
    case 24:
      uint64_t v246 = *v78;
      if (!*(void *)(*v78 + 16)) {
        goto LABEL_176;
      }
      FeedGroupEmitterCursor.feedMode.getter(v395);
      if (sub_1C04522BC(v395[0], v246)) {
        goto LABEL_176;
      }
      v395[0] = 0;
      v395[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v247 = 0xD000000000000014;
      v248 = "Requires feed modes ";
      goto LABEL_109;
    case 25:
      uint64_t v249 = *v78;
      FeedGroupEmitterCursor.feedMode.getter(v395);
      if ((sub_1C04522BC(v395[0], v249) & 1) == 0) {
        goto LABEL_176;
      }
      v395[0] = 0;
      v395[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v247 = 0xD000000000000018;
      v248 = "Requires not feed modes ";
LABEL_109:
      v395[0] = v247;
      v395[1] = (unint64_t)(v248 - 32) | 0x8000000000000000;
      sub_1C00863EC();
      goto LABEL_174;
    case 26:
      uint64_t v250 = v366;
      sub_1BFEC1200((uint64_t)v78, v366);
      uint64_t v251 = v362;
      sub_1C0362C78(v250, v362, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      uint64_t v252 = v377;
      v253 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v377 + 48);
      uint64_t v254 = v378;
      if (v253(v251, 1, v378) == 1) {
        goto LABEL_117;
      }
      v255 = *(void (**)(char *, uint64_t, uint64_t))(v252 + 32);
      v256 = v352;
      v255(v352, v251, v254);
      uint64_t v251 = (uint64_t)v350;
      (*(void (**)(uint64_t))(v385 + 56))(v384);
      if (v253(v251, 1, v254) == 1) {
        goto LABEL_116;
      }
      uint64_t v257 = v251;
      v258 = v344;
      v255(v344, v257, v254);
      if ((sub_1C151921C() & 1) == 0) {
        goto LABEL_192;
      }
      v395[0] = 0;
      v395[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      strcpy((char *)v395, "App version ");
      BYTE5(v395[1]) = 0;
      HIWORD(v395[1]) = -5120;
      sub_1C0092AA4((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_189;
    case 27:
      uint64_t v250 = v367;
      sub_1BFEC1200((uint64_t)v78, v367);
      uint64_t v251 = v363;
      sub_1C0362C78(v250, v363, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      uint64_t v252 = v377;
      v259 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v377 + 48);
      uint64_t v254 = v378;
      if (v259(v251, 1, v378) == 1) {
        goto LABEL_117;
      }
      v260 = *(void (**)(char *, uint64_t, uint64_t))(v252 + 32);
      v256 = v353;
      v260(v353, v251, v254);
      uint64_t v251 = (uint64_t)v351;
      (*(void (**)(uint64_t))(v385 + 56))(v384);
      if (v259(v251, 1, v254) == 1)
      {
LABEL_116:
        (*(void (**)(char *, uint64_t))(v252 + 8))(v256, v254);
LABEL_117:
        v261 = (void (*)(uint64_t))MEMORY[0x1E4FAB0A8];
        sub_1C0362CE4(v250, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
        sub_1C0362CE4(v251, &qword_1EB871500, v261);
        goto LABEL_177;
      }
      uint64_t v325 = v251;
      v258 = v345;
      v260(v345, v325, v254);
      sub_1C0092AA4((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
      if (sub_1C151E57C())
      {
        v395[0] = 0;
        v395[1] = 0xE000000000000000;
        sub_1C15200FC();
        sub_1C151E80C();
        sub_1C0092AA4((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
LABEL_189:
        sub_1C151E80C();
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        char v94 = 0;
        unint64_t v92 = v395[0];
        unint64_t v93 = v395[1];
      }
      else
      {
LABEL_192:
        unint64_t v92 = 0;
        unint64_t v93 = 0;
        char v94 = 2;
      }
      v326 = *(void (**)(char *, uint64_t))(v252 + 8);
      v326(v258, v254);
      v326(v256, v254);
      sub_1C0362CE4(v250, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
LABEL_194:
      v327 = v389;
      unint64_t *v389 = v92;
      v327[1] = v93;
      *((unsigned char *)v327 + 16) = v94;
      return;
    case 28:
      uint64_t v263 = *v78;
      uint64_t v262 = v78[1];
      v264 = v388;
      v395[0] = *(uint64_t *)((char *)v388 + *(void *)(*v388 + 136));
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      uint64_t v265 = v385;
      *(&v341 - 4) = v384;
      *(&v341 - 3) = v265;
      *(&v341 - 2) = v263;
      *(&v341 - 1) = v262;
      sub_1C151ED5C();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      char v266 = sub_1C151EA2C();
      swift_bridgeObjectRelease();
      if ((v266 & 1) == 0)
      {
        v395[0] = *(uint64_t *)((char *)v264 + *(void *)(*v264 + 152));
        MEMORY[0x1F4188790](v395[0]);
        *(&v341 - 4) = v317;
        *(&v341 - 3) = v265;
        *(&v341 - 2) = v263;
        *(&v341 - 1) = v262;
        swift_bridgeObjectRetain();
        char v318 = sub_1C151EA2C();
        swift_bridgeObjectRelease();
        if ((v318 & 1) == 0) {
          goto LABEL_176;
        }
      }
      v395[0] = 0;
      v395[1] = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      goto LABEL_175;
    case 29:
      uint64_t v267 = *v78;
      uint64_t v268 = (uint64_t)v388 + *(void *)(*v388 + 176);
      uint64_t v269 = type metadata accessor for FeedContext();
      sub_1BFDD320C(*(void *)(v268 + *(int *)(v269 + 44)), v267, (uint64_t)v389);
      goto LABEL_122;
    case 30:
      uint64_t v270 = *v78;
      uint64_t v271 = (uint64_t)v388 + *(void *)(*v388 + 176);
      uint64_t v272 = type metadata accessor for FeedContext();
      sub_1BFDD2F80(*(void *)(v271 + *(int *)(v272 + 44)), v270, (uint64_t)v389);
LABEL_122:
      swift_bridgeObjectRelease();
      return;
    case 31:
      uint64_t v273 = *v78;
      if (!*(void *)(*v78 + 16)) {
        goto LABEL_176;
      }
      v274 = v388;
      uint64_t v275 = *(void *)(*v388 + 176);
      v276 = (uint64_t *)((char *)v274 + *(int *)(type metadata accessor for FeedContext() + 48) + v275);
      uint64_t v277 = *v276;
      uint64_t v278 = v276[1];
      sub_1BFE40340(*v276, v278);
      char v279 = sub_1C0451920(v277, v278, v273);
      sub_1BFEE653C(v277, v278);
      if (v279) {
        goto LABEL_176;
      }
      v395[0] = 0;
      v395[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v280 = 0xD00000000000001CLL;
      v281 = "Only supported on platforms ";
      goto LABEL_129;
    case 32:
      uint64_t v282 = *v78;
      if (!*(void *)(*v78 + 16)) {
        goto LABEL_176;
      }
      v283 = v388;
      uint64_t v284 = *(void *)(*v388 + 176);
      v285 = (uint64_t *)((char *)v283 + *(int *)(type metadata accessor for FeedContext() + 48) + v284);
      uint64_t v286 = *v285;
      uint64_t v287 = v285[1];
      sub_1BFE40340(*v285, v287);
      char v288 = sub_1C0451920(v286, v287, v282);
      sub_1BFEE653C(v286, v287);
      if ((v288 & 1) == 0) {
        goto LABEL_176;
      }
      v395[0] = 0;
      v395[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v280 = 0xD00000000000001BLL;
      v281 = "Not supported on platforms ";
LABEL_129:
      v395[0] = v280;
      v395[1] = (unint64_t)(v281 - 32) | 0x8000000000000000;
      sub_1C0085498();
      goto LABEL_174;
    case 33:
      uint64_t v289 = *v78;
      v290 = v388;
      uint64_t v291 = *(void *)(*v388 + 176);
      uint64_t v292 = (uint64_t)v290 + *(int *)(type metadata accessor for FeedContext() + 20) + v291;
      uint64_t v293 = v364;
      sub_1C0362C78(v292, v364, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
      uint64_t v294 = type metadata accessor for BundleSession();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v294 - 8) + 48))(v293, 1, v294) == 1) {
        goto LABEL_135;
      }
      unsigned __int8 v295 = *(unsigned char *)(v293 + *(int *)(v294 + 24));
      sub_1C0362BA0(v293, (uint64_t (*)(void))type metadata accessor for BundleSession);
      if (!*(void *)(v289 + 16) || (sub_1C0452404(v295, v289) & 1) != 0) {
        goto LABEL_176;
      }
      v395[0] = 0;
      v395[1] = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v296 = 0xD00000000000002ELL;
      v297 = "Only supported while in bundle session states ";
      goto LABEL_173;
    case 34:
      uint64_t v298 = *v78;
      v299 = v388;
      uint64_t v300 = *(void *)(*v388 + 176);
      uint64_t v301 = (uint64_t)v299 + *(int *)(type metadata accessor for FeedContext() + 20) + v300;
      uint64_t v293 = v365;
      sub_1C0362C78(v301, v365, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
      uint64_t v302 = type metadata accessor for BundleSession();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v302 - 8) + 48))(v293, 1, v302) == 1)
      {
LABEL_135:
        swift_bridgeObjectRelease();
        sub_1C0362CE4(v293, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
        v303 = "Requires bundle session";
        unint64_t v304 = 0xD000000000000017;
LABEL_185:
        unint64_t v320 = (unint64_t)(v303 - 32) | 0x8000000000000000;
        goto LABEL_186;
      }
      unsigned __int8 v319 = *(unsigned char *)(v293 + *(int *)(v302 + 24));
      sub_1C0362BA0(v293, (uint64_t (*)(void))type metadata accessor for BundleSession);
      if (*(void *)(v298 + 16) && (sub_1C0452404(v319, v298) & 1) != 0)
      {
        v395[0] = 0;
        v395[1] = 0xE000000000000000;
        sub_1C15200FC();
        swift_bridgeObjectRelease();
        unint64_t v296 = 0xD00000000000002DLL;
        v297 = "Not supported while in bundle session states ";
LABEL_173:
        v395[0] = v296;
        v395[1] = (unint64_t)(v297 - 32) | 0x8000000000000000;
        sub_1C0362C00();
LABEL_174:
        sub_1C151EFCC();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_175:
        unint64_t v304 = v395[0];
        unint64_t v320 = v395[1];
LABEL_186:
        v324 = v389;
        unint64_t *v389 = v304;
        v324[1] = v320;
        *((unsigned char *)v324 + 16) = 0;
        return;
      }
LABEL_176:
      swift_bridgeObjectRelease();
LABEL_177:
      v312 = v389;
      unint64_t *v389 = 0;
      v312[1] = 0;
LABEL_178:
      *((unsigned char *)v312 + 16) = 2;
      return;
    case 35:
      v305 = *(void (**)(uint64_t *, uint64_t))(*v78 + 32);
      swift_retain();
      v305(v388, v380);
      swift_release();
      swift_release();
      return;
    case 36:
      uint64_t v306 = (uint64_t)v388 + *(void *)(*v388 + 176);
      uint64_t v307 = type metadata accessor for FeedContext();
      v203 = "Requires no bundle subscription";
      BOOL v81 = *(unsigned char *)(v306 + *(int *)(v307 + 24)) == 0;
      unint64_t v82 = 0xD00000000000001CLL;
LABEL_138:
      if (!v81) {
        unint64_t v82 = 0;
      }
      unint64_t v83 = (unint64_t)v203 | 0x8000000000000000;
      goto LABEL_141;
    case 37:
      uint64_t v309 = (uint64_t)v388 + *(void *)(*v388 + 176);
      int v84 = *(unsigned __int8 *)(v309 + *(int *)(type metadata accessor for FeedContext() + 24));
      unint64_t v85 = 0xD00000000000001FLL;
      uint64_t v86 = "Requires no bundle subscription";
LABEL_145:
      v310 = v86 - 32;
      BOOL v210 = v84 == 0;
      if (v84) {
        unint64_t v82 = v85;
      }
      else {
        unint64_t v82 = 0;
      }
      unint64_t v83 = (unint64_t)v310 | 0x8000000000000000;
LABEL_149:
      if (v210) {
        unint64_t v83 = 0;
      }
      if (v210) {
        char v308 = 2;
      }
      else {
        char v308 = 0;
      }
      goto LABEL_214;
    case 38:
      v311 = v389;
      *(_OWORD *)v389 = xmmword_1C15406B0;
      *((unsigned char *)v311 + 16) = 1;
      return;
    case 39:
      v312 = v389;
      unint64_t *v389 = (*((unsigned char *)v388 + *(void *)(*v388 + 208)) & 1) == 0;
      v312[1] = 0;
      goto LABEL_178;
    default:
      BOOL v81 = *(unsigned char *)v78 == 0;
      if (*(unsigned char *)v78) {
        unint64_t v82 = 0;
      }
      else {
        unint64_t v82 = 0xD000000000000018;
      }
      unint64_t v83 = 0x80000001C160C580;
LABEL_141:
      if (v81)
      {
        char v308 = 0;
      }
      else
      {
        unint64_t v83 = 0;
        char v308 = 2;
      }
      goto LABEL_214;
  }
}

void *sub_1BFDD1CF0(void *a1, void *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;
  unint64_t v9 = v7 + 24;
  if (v8 <= v9) {
    size_t v10 = v9;
  }
  else {
    size_t v10 = v8;
  }
  uint64_t v11 = sub_1C151928C();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84)) {
    size_t v13 = *(void *)(v12 + 64);
  }
  else {
    size_t v13 = *(void *)(v12 + 64) + 1;
  }
  if (v10 <= v13) {
    unint64_t v14 = v13;
  }
  else {
    unint64_t v14 = v10;
  }
  if (v14 <= 0x10) {
    uint64_t v15 = 16;
  }
  else {
    uint64_t v15 = v14;
  }
  if (v15 > 3) {
    goto LABEL_14;
  }
  unsigned int v17 = ((1 << (8 * v15)) + 3) >> (8 * v15);
  if (v17 > 0xFFDB)
  {
    unsigned int v16 = *(_DWORD *)((char *)a2 + v15);
  }
  else
  {
    if (v17 <= 0xDB)
    {
LABEL_14:
      unsigned int v16 = *((unsigned __int8 *)a2 + v15);
      goto LABEL_19;
    }
    unsigned int v16 = *(unsigned __int16 *)((char *)a2 + v15);
  }
LABEL_19:
  unsigned int v18 = v16 - 36;
  if (v16 >= 0x24)
  {
    if (v15 <= 3) {
      uint64_t v19 = v15;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *(unsigned __int8 *)a2;
        if (v15 < 4) {
          goto LABEL_31;
        }
        goto LABEL_32;
      case 2:
        int v20 = *(unsigned __int16 *)a2;
        if (v15 >= 4) {
          goto LABEL_32;
        }
        goto LABEL_31;
      case 3:
        int v20 = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
        if (v15 >= 4) {
          goto LABEL_32;
        }
        goto LABEL_31;
      case 4:
        int v20 = *(_DWORD *)a2;
        if (v15 < 4) {
LABEL_31:
        }
          v20 |= v18 << (8 * v15);
LABEL_32:
        unsigned int v16 = v20 + 36;
        break;
      default:
        break;
    }
  }
  switch(v16)
  {
    case 0u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      if (v15 <= 3)
      {
        unsigned int v21 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v21 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 0;
          return a1;
        }
        if (v21 > 0xDB)
        {
          *(_WORD *)((char *)a1 + v15) = 0;
          return a1;
        }
      }
      *((unsigned char *)a1 + v15) = 0;
      break;
    case 1u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      if (v15 <= 3)
      {
        __int16 v22 = 1;
        unsigned int v23 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v23 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 1;
          return a1;
        }
        if (v23 > 0xDB) {
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 1;
      break;
    case 2u:
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v24 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v24 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 2;
          return a1;
        }
        if (v24 > 0xDB)
        {
          __int16 v22 = 2;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 2;
      break;
    case 3u:
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v25 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v25 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 3;
          return a1;
        }
        if (v25 > 0xDB)
        {
          __int16 v22 = 3;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 3;
      break;
    case 4u:
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v26 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v26 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 4;
          return a1;
        }
        if (v26 > 0xDB)
        {
          __int16 v22 = 4;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 4;
      break;
    case 5u:
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      unint64_t v27 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v28 = *(void *)(v27 + 16);
      unint64_t v29 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v29 = *(_OWORD *)v27;
      *(void *)(v29 + 16) = v28;
      if (v15 <= 3)
      {
        unsigned int v30 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v30 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 5;
          return a1;
        }
        if (v30 > 0xDB)
        {
          __int16 v22 = 5;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 5;
      break;
    case 6u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v31 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v31 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 6;
          return a1;
        }
        if (v31 > 0xDB)
        {
          __int16 v22 = 6;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 6;
      break;
    case 7u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v32 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v32 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 7;
          return a1;
        }
        if (v32 > 0xDB)
        {
          __int16 v22 = 7;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 7;
      break;
    case 8u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v33 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v33 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 8;
          return a1;
        }
        if (v33 > 0xDB)
        {
          __int16 v22 = 8;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 8;
      break;
    case 9u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v34 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v34 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 9;
          return a1;
        }
        if (v34 > 0xDB)
        {
          __int16 v22 = 9;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 9;
      break;
    case 0xAu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v35 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v35 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 10;
          return a1;
        }
        if (v35 > 0xDB)
        {
          __int16 v22 = 10;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 10;
      break;
    case 0xBu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v36 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v36 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 11;
          return a1;
        }
        if (v36 > 0xDB)
        {
          __int16 v22 = 11;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 11;
      break;
    case 0xCu:
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v37 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v37 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 12;
          return a1;
        }
        if (v37 > 0xDB)
        {
          __int16 v22 = 12;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 12;
      break;
    case 0xDu:
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v15 <= 3)
      {
        unsigned int v38 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v38 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 13;
          return a1;
        }
        if (v38 > 0xDB)
        {
          __int16 v22 = 13;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 13;
      break;
    case 0xEu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v39 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v39 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 14;
          return a1;
        }
        if (v39 > 0xDB)
        {
          __int16 v22 = 14;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 14;
      break;
    case 0xFu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v40 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v40 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 15;
          return a1;
        }
        if (v40 > 0xDB)
        {
          __int16 v22 = 15;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 15;
      break;
    case 0x10u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v41 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v41 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 16;
          return a1;
        }
        if (v41 > 0xDB)
        {
          __int16 v22 = 16;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 16;
      break;
    case 0x11u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v42 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v42 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 17;
          return a1;
        }
        if (v42 > 0xDB)
        {
          __int16 v22 = 17;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 17;
      break;
    case 0x12u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v43 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v43 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 18;
          return a1;
        }
        if (v43 > 0xDB)
        {
          __int16 v22 = 18;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 18;
      break;
    case 0x13u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v44 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v44 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 19;
          return a1;
        }
        if (v44 > 0xDB)
        {
          __int16 v22 = 19;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 19;
      break;
    case 0x14u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v45 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v45 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 20;
          return a1;
        }
        if (v45 > 0xDB)
        {
          __int16 v22 = 20;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 20;
      break;
    case 0x15u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v46 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v46 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 21;
          return a1;
        }
        if (v46 > 0xDB)
        {
          __int16 v22 = 21;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 21;
      break;
    case 0x16u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v47 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v47 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 22;
          return a1;
        }
        if (v47 > 0xDB)
        {
          __int16 v22 = 22;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 22;
      break;
    case 0x17u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v48 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v48 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 23;
          return a1;
        }
        if (v48 > 0xDB)
        {
          __int16 v22 = 23;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 23;
      break;
    case 0x18u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v49 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v49 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 24;
          return a1;
        }
        if (v49 > 0xDB)
        {
          __int16 v22 = 24;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 24;
      break;
    case 0x19u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v50 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v50 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 25;
          return a1;
        }
        if (v50 > 0xDB)
        {
          __int16 v22 = 25;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 25;
      break;
    case 0x1Au:
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        unsigned int v63 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v63 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 26;
          return a1;
        }
        if (v63 > 0xDB)
        {
          __int16 v22 = 26;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 26;
      break;
    case 0x1Bu:
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, v13);
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      if (v15 <= 3)
      {
        unsigned int v62 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v62 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 27;
          return a1;
        }
        if (v62 > 0xDB)
        {
          __int16 v22 = 27;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 27;
      break;
    case 0x1Cu:
      uint64_t v51 = a2[1];
      *a1 = *a2;
      a1[1] = v51;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v52 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v52 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 28;
          return a1;
        }
        if (v52 > 0xDB)
        {
          __int16 v22 = 28;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 28;
      break;
    case 0x1Du:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v53 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v53 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 29;
          return a1;
        }
        if (v53 > 0xDB)
        {
          __int16 v22 = 29;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 29;
      break;
    case 0x1Eu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v54 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v54 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 30;
          return a1;
        }
        if (v54 > 0xDB)
        {
          __int16 v22 = 30;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 30;
      break;
    case 0x1Fu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v55 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v55 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 31;
          return a1;
        }
        if (v55 > 0xDB)
        {
          __int16 v22 = 31;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 31;
      break;
    case 0x20u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v56 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v56 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 32;
          return a1;
        }
        if (v56 > 0xDB)
        {
          __int16 v22 = 32;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 32;
      break;
    case 0x21u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v57 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v57 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 33;
          return a1;
        }
        if (v57 > 0xDB)
        {
          __int16 v22 = 33;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 33;
      break;
    case 0x22u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      if (v15 <= 3)
      {
        unsigned int v58 = ((1 << (8 * v15)) + 3) >> (8 * v15);
        if (v58 > 0xFFDB)
        {
          *(_DWORD *)((char *)a1 + v15) = 34;
          return a1;
        }
        if (v58 > 0xDB)
        {
          __int16 v22 = 34;
          goto LABEL_261;
        }
      }
      *((unsigned char *)a1 + v15) = 34;
      break;
    case 0x23u:
      *a1 = *a2;
      swift_retain();
      if (v15 > 3) {
        goto LABEL_171;
      }
      unsigned int v59 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      if (v59 > 0xFFDB)
      {
        *(_DWORD *)((char *)a1 + v15) = 35;
        return a1;
      }
      if (v59 > 0xDB)
      {
        __int16 v22 = 35;
LABEL_261:
        *(_WORD *)((char *)a1 + v15) = v22;
      }
      else
      {
LABEL_171:
        *((unsigned char *)a1 + v15) = 35;
      }
      break;
    default:
      if (v15 > 3) {
        goto LABEL_176;
      }
      unsigned int v60 = ((1 << (8 * v15)) + 3) >> (8 * v15);
      uint64_t v61 = 2;
      if (v60 > 0xFFDB) {
        uint64_t v61 = 4;
      }
      if (v60 <= 0xDB) {
LABEL_176:
      }
        uint64_t v61 = 1;
      memcpy(a1, a2, v61 + v15);
      break;
  }
  return a1;
}

uint64_t type metadata accessor for FeedCursorGroup()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1BFDD2EEC()
{
  if (!qword_1EB870FF8)
  {
    sub_1C151631C();
    sub_1C0092AA4((unint64_t *)&qword_1EB870780, MEMORY[0x1E4F27928]);
    unint64_t v0 = sub_1C151E5BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB870FF8);
    }
  }
}

uint64_t sub_1BFDD2F80@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(void *)(a2 + 16)) {
    goto LABEL_10;
  }
  uint64_t v5 = result;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C11C53AC(a2, v5);
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_10:
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 16) = 2;
    return result;
  }
  uint64_t v7 = sub_1C00B1170(v6);
  swift_release();
  uint64_t v20 = v7;
  swift_retain();
  sub_1C0362E1C(&v20, sub_1C0636360, sub_1C0362EA0);
  swift_release();
  uint64_t v8 = v20;
  int64_t v9 = *(void *)(v20 + 16);
  if (v9)
  {
    uint64_t v19 = a3;
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v9, 0);
    uint64_t v10 = 0;
    uint64_t v11 = v20;
    do
    {
      int v22 = *(_DWORD *)(v8 + 4 * v10 + 32);
      uint64_t v12 = sub_1C152088C();
      uint64_t v14 = v13;
      uint64_t v20 = v11;
      unint64_t v16 = *(void *)(v11 + 16);
      unint64_t v15 = *(void *)(v11 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1BFF661B8(v15 > 1, v16 + 1, 1);
        uint64_t v11 = v20;
      }
      ++v10;
      *(void *)(v11 + 16) = v16 + 1;
      uint64_t v17 = v11 + 16 * v16;
      *(void *)(v17 + 32) = v12;
      *(void *)(v17 + 40) = v14;
    }
    while (v9 != v10);
    swift_release();
    a3 = v19;
  }
  else
  {
    swift_release();
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  uint64_t v20 = v11;
  sub_1BFCA5A7C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  sub_1C151E55C();
  swift_bridgeObjectRelease();
  uint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  uint64_t v20 = 0xD000000000000026;
  unint64_t v21 = 0x80000001C160CA00;
  sub_1C151E80C();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v18 = v21;
  *(void *)a3 = v20;
  *(void *)(a3 + 8) = v18;
  *(unsigned char *)(a3 + 16) = 0;
  return result;
}

uint64_t sub_1BFDD320C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(void *)(a2 + 16)
    && (uint64_t v5 = result,
        swift_bridgeObjectRetain(),
        uint64_t v6 = *(void *)(sub_1C11C53AC(a2, v5) + 16),
        uint64_t result = swift_release(),
        !v6))
  {
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C00B1170(v7);
    swift_bridgeObjectRelease();
    uint64_t v21 = v8;
    swift_retain();
    sub_1C0362E1C(&v21, sub_1C0636360, sub_1C0362EA0);
    swift_release();
    uint64_t v9 = v21;
    int64_t v10 = *(void *)(v21 + 16);
    if (v10)
    {
      uint64_t v20 = a3;
      uint64_t v21 = MEMORY[0x1E4FBC860];
      sub_1BFF661B8(0, v10, 0);
      uint64_t v11 = 0;
      uint64_t v12 = v21;
      do
      {
        int v23 = *(_DWORD *)(v9 + 4 * v11 + 32);
        uint64_t v13 = sub_1C152088C();
        uint64_t v15 = v14;
        uint64_t v21 = v12;
        unint64_t v17 = *(void *)(v12 + 16);
        unint64_t v16 = *(void *)(v12 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1BFF661B8(v16 > 1, v17 + 1, 1);
          uint64_t v12 = v21;
        }
        ++v11;
        *(void *)(v12 + 16) = v17 + 1;
        uint64_t v18 = v12 + 16 * v17;
        *(void *)(v18 + 32) = v13;
        *(void *)(v18 + 40) = v15;
      }
      while (v10 != v11);
      swift_release();
      a3 = v20;
    }
    else
    {
      swift_release();
      uint64_t v12 = MEMORY[0x1E4FBC860];
    }
    uint64_t v21 = v12;
    sub_1BFCA5A7C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1BFE99E40();
    sub_1C151E55C();
    swift_bridgeObjectRelease();
    uint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_1C15200FC();
    sub_1C151E80C();
    sub_1C151E80C();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v19 = v22;
    *(void *)a3 = v21;
    *(void *)(a3 + 8) = v19;
    *(unsigned char *)(a3 + 16) = 0;
  }
  else
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 16) = 2;
  }
  return result;
}

unint64_t sub_1BFDD3498()
{
  return sub_1C07E9B3C(*v0);
}

uint64_t FormatButtonNode.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v155 = (char *)v152 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v156 = (char *)v152 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  v157 = (char *)v152 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v158 = (uint64_t)v152 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v159 = (uint64_t)v152 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v160 = (uint64_t)v152 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v161 = (uint64_t)v152 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v162 = (char *)v152 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v163 = (char *)v152 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v164 = (char *)v152 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v169 = (char *)v152 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v166 = (uint64_t)v152 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v165 = (char *)v152 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v167 = (char *)v152 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v168 = (char *)v152 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v170 = (char *)v152 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  uint64_t v171 = (uint64_t)v152 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  uint64_t v174 = (uint64_t)v152 - v41;
  MEMORY[0x1F4188790](v40);
  unsigned int v43 = (char *)v152 - v42;
  sub_1C08602E4();
  MEMORY[0x1F4188790](v44 - 8);
  unsigned int v46 = (char *)v152 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = a1[3];
  uint64_t v48 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v47);
  sub_1C086040C();
  uint64_t v50 = v49;
  uint64_t v51 = sub_1C085F050(&qword_1EB891BB0, (void (*)(uint64_t))sub_1C086040C);
  sub_1BFEFBD78(v4, v52, v47, v4, v50, (uint64_t)&type metadata for FormatVersions.JazzkonC, v48, (uint64_t)v46, v51, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v53 = v2[2];
  uint64_t v54 = v2[3];
  uint64_t v172 = v2;
  uint64_t v55 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v55 != -1) {
    swift_once();
  }
  uint64_t v56 = sub_1C151928C();
  uint64_t v57 = __swift_project_value_buffer(v56, (uint64_t)qword_1EB93CAB0);
  uint64_t v58 = *(void *)(v56 - 8);
  unsigned int v59 = *(void (**)(void))(v58 + 16);
  unsigned int v60 = (char *)(v58 + 16);
  uint64_t v173 = v57;
  ((void (*)(char *))v59)(v43);
  uint64_t v61 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v62 = v190;
  sub_1C06D8014(v53, v54, 0, 0, 0, (uint64_t)v43, (uint64_t)sub_1C01B158C, 0);
  if (v62)
  {
    sub_1BFEFEB68((uint64_t)v43, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v63 = (uint64_t)v46;
    return sub_1BFEFEB68(v63, (uint64_t (*)(void))sub_1C08602E4);
  }
  uint64_t v190 = 0;
  sub_1BFEFEB68((uint64_t)v43, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  unsigned int v65 = v172;
  swift_beginAccess();
  unint64_t v66 = v65[4];
  uint64_t v154 = v59;
  ((void (*)(uint64_t, uint64_t, uint64_t))v59)(v174, v173, v56);
  swift_storeEnumTagMultiPayload();
  if (((v66 >> 59) & 0x1E | (v66 >> 2) & 1) == 0x16 && v66 == 0xB000000000000008)
  {
    uint64_t v153 = v46;
    uint64_t v67 = v60;
    unsigned int v68 = v154;
    uint64_t v69 = v56;
  }
  else
  {
    sub_1BFF35EA4(v66);
    uint64_t v78 = v190;
    char v79 = sub_1C0840B74(v174, 1, 0, 0, (uint64_t)sub_1C01B158C, 0);
    if (v78)
    {
      sub_1BFEFEB68(v174, type metadata accessor for FormatVersionRequirement);
      sub_1BFF322A8(v66);
      goto LABEL_5;
    }
    uint64_t v153 = v46;
    uint64_t v67 = v60;
    unsigned int v68 = v154;
    if (v79)
    {
      uint64_t v69 = v56;
      long long v188 = xmmword_1C153AB20;
      char v189 = 0;
      unint64_t v187 = v66;
      sub_1C0860378();
      uint64_t v190 = v83;
      v152[1] = sub_1C085F050(&qword_1EB86E0B0, (void (*)(uint64_t))sub_1C0860378);
      sub_1BFE1D79C();
      sub_1C1520BAC();
      uint64_t v190 = 0;
      unsigned int v65 = v172;
    }
    else
    {
      uint64_t v190 = 0;
      uint64_t v69 = v56;
    }
  }
  uint64_t v70 = v190;
  sub_1BFEFEB68(v174, type metadata accessor for FormatVersionRequirement);
  sub_1BFF322A8(v66);
  uint64_t v71 = v65[5];
  uint64_t v72 = qword_1EB887630;
  swift_retain();
  if (v72 != -1) {
    swift_once();
  }
  uint64_t v73 = v69;
  uint64_t v74 = __swift_project_value_buffer(v69, (uint64_t)qword_1EB93CA80);
  uint64_t v75 = v171;
  __n128 v76 = v68;
  uint64_t v77 = v67;
  ((void (*)(uint64_t, uint64_t, uint64_t))v76)(v171, v74, v73);
  swift_storeEnumTagMultiPayload();
  unsigned int v46 = v153;
  sub_1C071E7D0(v71, 2, 0, 0, v75, (uint64_t)sub_1C01B158C, 0);
  if (v70)
  {
    sub_1BFEFEB68(v75, type metadata accessor for FormatVersionRequirement);
    swift_release();
    goto LABEL_5;
  }
  sub_1BFEFEB68(v75, type metadata accessor for FormatVersionRequirement);
  swift_release();
  char v80 = v172;
  swift_beginAccess();
  uint64_t v81 = (uint64_t)v170;
  ((void (*)(char *, uint64_t, uint64_t))v154)(v170, v173, v73);
  uint64_t v174 = v61;
  swift_storeEnumTagMultiPayload();
  uint64_t v82 = swift_bridgeObjectRetain();
  sub_1C06D8254(v82, 3, 0, 0);
  sub_1BFEFEB68(v81, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v84 = v80[7];
  uint64_t v85 = (uint64_t)v168;
  uint64_t v170 = v77;
  uint64_t v171 = v73;
  uint64_t v86 = v73;
  uint64_t v87 = v154;
  ((void (*)(char *, uint64_t, uint64_t))v154)(v168, v173, v86);
  swift_storeEnumTagMultiPayload();
  if (v84)
  {
    char v88 = sub_1C0840B74(v85, 4, 0, 0, (uint64_t)sub_1C01B158C, 0);
    uint64_t v89 = (uint64_t)v169;
    if (v88)
    {
      long long v185 = xmmword_1C1557FD0;
      char v186 = 0;
      *(void *)&long long v183 = v84;
      sub_1C0860378();
      sub_1C085F050(&qword_1EB86E0B0, (void (*)(uint64_t))sub_1C0860378);
      sub_1C1520BAC();
    }
    char v80 = v172;
  }
  else
  {
    uint64_t v89 = (uint64_t)v169;
  }
  sub_1BFEFEB68(v85, type metadata accessor for FormatVersionRequirement);
  swift_beginAccess();
  unint64_t v90 = v80[8];
  sub_1BFE6FA30(v90);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v91 = __swift_project_value_buffer(v171, (uint64_t)qword_1EB93CA98);
  uint64_t v92 = (uint64_t)v167;
  unint64_t v93 = v87;
  v87();
  swift_storeEnumTagMultiPayload();
  if (v90 != 0x8000000000000000)
  {
    char v101 = sub_1C0840B74(v92, 5, 0, 0, (uint64_t)sub_1C01B158C, 0);
    if (v101)
    {
      uint64_t v168 = (char *)v91;
      long long v183 = xmmword_1C1557FC0;
      char v184 = 0;
      *(void *)&long long v181 = v90;
      sub_1C0860378();
      sub_1C085F050(&qword_1EB86E0B0, (void (*)(uint64_t))sub_1C0860378);
      sub_1C009DA10();
      sub_1C1520BAC();
      uint64_t v91 = (uint64_t)v168;
      uint64_t v89 = (uint64_t)v169;
    }
    uint64_t v92 = (uint64_t)v167;
  }
  sub_1BFEFEB68(v92, type metadata accessor for FormatVersionRequirement);
  sub_1BFF0056C(v90);
  char v94 = v172;
  swift_beginAccess();
  char v95 = *((unsigned char *)v94 + 72);
  if (qword_1EB887650 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v171, (uint64_t)qword_1EB93CAE0);
  uint64_t v96 = (uint64_t)v165;
  v87();
  swift_storeEnumTagMultiPayload();
  if ((v95 & 1) == 0)
  {
    char v102 = sub_1C0840B74(v96, 6, 0, 0, (uint64_t)sub_1C01B158C, 0);
    if (v102)
    {
      long long v181 = xmmword_1C1557FE0;
      char v182 = 0;
      LOBYTE(v179) = 0;
      sub_1C0860378();
      sub_1C085F050(&qword_1EB86E0B0, (void (*)(uint64_t))sub_1C0860378);
      sub_1C1520BAC();
      uint64_t v96 = (uint64_t)v165;
    }
  }
  sub_1BFEFEB68(v96, type metadata accessor for FormatVersionRequirement);
  uint64_t v97 = v172;
  swift_beginAccess();
  uint64_t v98 = v97[10];
  uint64_t v99 = v166;
  ((void (*)(uint64_t, uint64_t, uint64_t))v87)(v166, v173, v171);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  char v100 = sub_1C0840B74(v99, 7, 0, 0, (uint64_t)sub_1C01B158C, 0);
  uint64_t v168 = (char *)v91;
  if (v100)
  {
    long long v179 = xmmword_1C1557FF0;
    char v180 = 0;
    uint64_t v178 = v98;
    sub_1C0860378();
    sub_1C085F050(&qword_1EB86E0B0, (void (*)(uint64_t))sub_1C0860378);
    sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB863300, (uint64_t)&type metadata for FormatSourceMapNode, MEMORY[0x1E4FBB320]);
    sub_1BFE407E0();
    sub_1C1520BAC();
    uint64_t v89 = (uint64_t)v169;
  }
  sub_1BFEFEB68(v166, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v103 = v171;
  ((void (*)(uint64_t, uint64_t, uint64_t))v93)(v89, v173, v171);
  swift_storeEnumTagMultiPayload();
  uint64_t v104 = swift_bridgeObjectRetain();
  sub_1C06D83B8(v104, 8, 0, 0);
  sub_1BFEFEB68(v89, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v190 = 0;
  uint64_t v105 = v172;
  uint64_t v106 = v172[12];
  uint64_t v107 = (uint64_t)v164;
  ((void (*)(char *, uint64_t, uint64_t))v93)(v164, v173, v103);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  uint64_t v108 = v190;
  sub_1C06C256C(v106, 9, 0, 0, v107, (uint64_t)sub_1C01B158C, 0);
  if (v108)
  {
    sub_1BFEFEB68(v107, type metadata accessor for FormatVersionRequirement);
    swift_release();
    unsigned int v46 = v153;
    goto LABEL_5;
  }
  sub_1BFEFEB68(v107, type metadata accessor for FormatVersionRequirement);
  swift_release();
  uint64_t v109 = v105[13];
  uint64_t v110 = (uint64_t)v163;
  ((void (*)(char *, uint64_t, uint64_t))v93)(v163, v173, v103);
  swift_storeEnumTagMultiPayload();
  sub_1BFDC11A4(v109);
  sub_1C071EA20(v109, 10, 0, 0, v110, (uint64_t)sub_1C01B158C, 0);
  uint64_t v190 = 0;
  sub_1BFEFEB68(v110, type metadata accessor for FormatVersionRequirement);
  sub_1BFDC11BC(v109);
  uint64_t v111 = v105[14];
  sub_1BFDC11A4(v111);
  if (qword_1EB887658 != -1) {
    swift_once();
  }
  uint64_t v112 = v171;
  uint64_t v113 = __swift_project_value_buffer(v171, (uint64_t)qword_1EB93CAF8);
  uint64_t v114 = (uint64_t)v162;
  ((void (*)(char *, uint64_t, uint64_t))v93)(v162, v113, v112);
  swift_storeEnumTagMultiPayload();
  uint64_t v115 = v190;
  sub_1C071EC78(v111, 11, 0, 0, v114, (uint64_t)sub_1C01B158C, 0);
  if (v115)
  {
    sub_1BFEFEB68(v114, type metadata accessor for FormatVersionRequirement);
    sub_1BFDC11BC(v111);
    unsigned int v46 = v153;
    goto LABEL_5;
  }
  sub_1BFEFEB68(v114, type metadata accessor for FormatVersionRequirement);
  sub_1BFDC11BC(v111);
  uint64_t v116 = v172[15];
  uint64_t v117 = v161;
  ((void (*)(uint64_t, uint64_t, uint64_t))v93)(v161, v113, v112);
  swift_storeEnumTagMultiPayload();
  sub_1BFDC11A4(v116);
  uint64_t v118 = v153;
  sub_1C071EA20(v116, 12, 0, 0, v117, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v161, type metadata accessor for FormatVersionRequirement);
  sub_1BFDC11BC(v116);
  uint64_t v119 = v172[16];
  LOBYTE(v116) = *((unsigned char *)v172 + 136);
  uint64_t v120 = v160;
  ((void (*)(uint64_t, uint64_t, uint64_t))v154)(v160, v173, v171);
  swift_storeEnumTagMultiPayload();
  sub_1C071EED0(v119, v116, 13, 0, 0, v120, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v160, type metadata accessor for FormatVersionRequirement);
  uint64_t v121 = v159;
  ((void (*)(uint64_t, char *, uint64_t))v154)(v159, v168, v171);
  swift_storeEnumTagMultiPayload();
  uint64_t v122 = swift_retain();
  sub_1C071F10C(v122, 14, 0, 0, v121, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v159, type metadata accessor for FormatVersionRequirement);
  swift_release();
  uint64_t v123 = v172;
  swift_beginAccess();
  uint64_t v124 = v123[19];
  uint64_t v125 = qword_1EB887640;
  swift_bridgeObjectRetain();
  if (v125 != -1) {
    swift_once();
  }
  uint64_t v126 = v171;
  uint64_t v127 = __swift_project_value_buffer(v171, (uint64_t)qword_1EB93CAC8);
  ((void (*)(uint64_t, uint64_t, uint64_t))v154)(v158, v127, v126);
  swift_storeEnumTagMultiPayload();
  if (*(void *)(v124 + 16) && (sub_1C0840B74(v158, 15, 0, 0, (uint64_t)sub_1C01B158C, 0) & 1) != 0)
  {
    long long v176 = xmmword_1C1558000;
    char v177 = 0;
    uint64_t v128 = swift_bridgeObjectRetain();
    char v129 = sub_1BFE71F8C(v128);
    swift_bridgeObjectRelease();
    v175[0] = (uint64_t)v129;
    swift_retain();
    sub_1BFE726FC(v175, sub_1BFE72780, sub_1BFE72EAC);
    uint64_t v190 = 0;
    swift_release();
    v175[3] = v175[0];
    sub_1C0860378();
    uint64_t v169 = v130;
    sub_1C085F050(&qword_1EB86E0B0, (void (*)(uint64_t))sub_1C0860378);
    uint64_t v131 = MEMORY[0x1E4FBB1A0];
    sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1BFE71F14((unint64_t *)&qword_1EB85DF50, (unint64_t *)&qword_1EB879F20, v131);
    uint64_t v132 = v190;
    sub_1C1520BAC();
    if (v132)
    {
      swift_release();
      sub_1BFEFEB68(v158, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      unsigned int v46 = v118;
      goto LABEL_5;
    }
    swift_release();
  }
  sub_1BFEFEB68(v158, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v133 = v172;
  swift_beginAccess();
  uint64_t v134 = v133[20];
  uint64_t v135 = v133[21];
  uint64_t v136 = (uint64_t)v157;
  ((void (*)(char *, char *, uint64_t))v154)(v157, v168, v171);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C071F37C(v134, v135, 16, 0, 0, v136, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v136, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  char v137 = v172;
  swift_beginAccess();
  uint64_t v138 = v137[22];
  sub_1BFF05D18();
  char v140 = &v156[*(int *)(v139 + 48)];
  uint64_t v141 = &v156[*(int *)(v139 + 64)];
  ((void (*)(char *, uint64_t, uint64_t))v154)(v156, v173, v171);
  uint64_t v142 = qword_1EB887620;
  swift_bridgeObjectRetain();
  if (v142 != -1) {
    swift_once();
  }
  uint64_t v143 = v171;
  uint64_t v144 = __swift_project_value_buffer(v171, (uint64_t)qword_1EB93CA50);
  ((void (*)(char *, uint64_t, uint64_t))v154)(v140, v144, v143);
  *(void *)uint64_t v141 = 0;
  *((void *)v141 + 1) = 0;
  uint64_t v145 = (uint64_t)v156;
  swift_storeEnumTagMultiPayload();
  sub_1C06D851C(v138, 17, 0, 0);
  sub_1BFEFEB68(v145, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v146 = v172;
  swift_beginAccess();
  uint64_t v147 = v146[23];
  uint64_t v148 = qword_1EB8849D0;
  swift_bridgeObjectRetain();
  if (v148 != -1) {
    swift_once();
  }
  uint64_t v149 = v171;
  uint64_t v150 = __swift_project_value_buffer(v171, (uint64_t)qword_1EB93C828);
  uint64_t v151 = (uint64_t)v155;
  ((void (*)(char *, uint64_t, uint64_t))v154)(v155, v150, v149);
  swift_storeEnumTagMultiPayload();
  sub_1C06D868C(v147, 18, 0, 0);
  sub_1BFEFEB68(v151, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v63 = (uint64_t)v118;
  return sub_1BFEFEB68(v63, (uint64_t (*)(void))sub_1C08602E4);
}

uint64_t sub_1BFDD507C()
{
  return sub_1C07530E0(*v0);
}

unint64_t sub_1BFDD5084()
{
  unint64_t result = qword_1EB85BFD0;
  if (!qword_1EB85BFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BFD0);
  }
  return result;
}

unint64_t sub_1BFDD50D8()
{
  unint64_t result = qword_1EB877420;
  if (!qword_1EB877420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB877420);
  }
  return result;
}

unint64_t sub_1BFDD512C()
{
  unint64_t result = qword_1EB85C468;
  if (!qword_1EB85C468)
  {
    sub_1BFE9DEBC(255, &qword_1EB85DF38, (uint64_t)&type metadata for FormatButtonNodeStateMask, MEMORY[0x1E4FBB320]);
    sub_1C006F590();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C468);
  }
  return result;
}

uint64_t sub_1BFDD51C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDD52D8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDD51F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDD52D8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDD5230@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDD52D8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDD5268@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDD52D8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDD52A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDD52D8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDD52D8()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFDD5320(void *a1)
{
  return FormatHeadlineBinding.Text.encode(to:)(a1);
}

uint64_t FormatHeadlineBinding.Text.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v115 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v114 = (char *)&v114 - v6;
  MEMORY[0x1F4188790](v7);
  v133 = (char *)&v114 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v132 = (char *)&v114 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v116 = (char *)&v114 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v118 = (char *)&v114 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v117 = (char *)&v114 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v119 = (char *)&v114 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v120 = (char *)&v114 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v121 = (char *)&v114 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v122 = (char *)&v114 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v123 = (char *)&v114 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v124 = (char *)&v114 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v125 = (char *)&v114 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v126 = (char *)&v114 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v131 = (char *)&v114 - v34;
  MEMORY[0x1F4188790](v35);
  char v130 = (char *)&v114 - v36;
  MEMORY[0x1F4188790](v37);
  uint64_t v127 = (char *)&v114 - v38;
  MEMORY[0x1F4188790](v39);
  uint64_t v128 = (char *)&v114 - v40;
  MEMORY[0x1F4188790](v41);
  char v129 = (char *)&v114 - v42;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v43 - 8);
  uint64_t v45 = (char *)&v114 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = *v1;
  uint64_t v47 = v1[1];
  uint64_t v49 = v1[2];
  uint64_t v48 = v1[3];
  uint64_t v50 = v1[4];
  uint64_t v134 = v1[5];
  uint64_t v135 = v46;
  uint64_t v51 = *((unsigned __int8 *)v1 + 48);
  uint64_t v52 = a1[3];
  uint64_t v53 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v52);
  unint64_t v54 = sub_1BFEB6A24();
  uint64_t v143 = v45;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatHeadlineBinding.Text, v55, v52, (uint64_t)&type metadata for FormatHeadlineBinding.Text, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v53, (uint64_t)v45, v54, (uint64_t)&off_1F1C39B68);
  switch(v51)
  {
    case 1:
      v138[0] = v135;
      v138[1] = v47;
      v138[2] = v49;
      uint64_t v139 = v48;
      uint64_t v140 = v50;
      uint64_t v141 = v134;
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v61 = sub_1C151928C();
      uint64_t v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1EB93CAB0);
      uint64_t v58 = (uint64_t)v131;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v131, v62, v61);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      unsigned int v59 = v138;
      char v60 = 4;
      goto LABEL_8;
    case 2:
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v64 = sub_1C151928C();
      uint64_t v65 = __swift_project_value_buffer(v64, (uint64_t)qword_1EB93CAE0);
      uint64_t v58 = (uint64_t)v132;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 16))(v132, v65, v64);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v63 = (uint64_t)v143;
      sub_1C06883D0(16, v135 & 1, v58);
      goto LABEL_15;
    case 3:
      if (qword_1EB887658 != -1) {
        swift_once();
      }
      uint64_t v66 = sub_1C151928C();
      uint64_t v67 = __swift_project_value_buffer(v66, (uint64_t)qword_1EB93CAF8);
      uint64_t v58 = (uint64_t)v133;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16))(v133, v67, v66);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v63 = (uint64_t)v143;
      sub_1C0688568(17, v58);
      goto LABEL_15;
    case 4:
      if (v49 | v47 | v135 | v48 | v50 | v134)
      {
        uint64_t v70 = v49 | v47 | v48 | v50 | v134;
        if (v135 == 1 && !v70)
        {
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v71 = sub_1C151928C();
          uint64_t v72 = __swift_project_value_buffer(v71, (uint64_t)qword_1EB93CAB0);
          uint64_t v58 = (uint64_t)v128;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v71 - 8) + 16))(v128, v72, v71);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v73 = 1;
          goto LABEL_76;
        }
        if (v135 == 2 && !v70)
        {
          if (qword_1EB887638 != -1) {
            swift_once();
          }
          uint64_t v76 = sub_1C151928C();
          uint64_t v77 = __swift_project_value_buffer(v76, (uint64_t)qword_1EB93CA98);
          uint64_t v58 = (uint64_t)v127;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16))(v127, v77, v76);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v73 = 2;
          goto LABEL_76;
        }
        if (v135 == 3 && !v70)
        {
          if (qword_1EB887638 != -1) {
            swift_once();
          }
          uint64_t v78 = sub_1C151928C();
          uint64_t v79 = __swift_project_value_buffer(v78, (uint64_t)qword_1EB93CA98);
          uint64_t v58 = (uint64_t)v126;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v126, v79, v78);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v73 = 5;
          goto LABEL_76;
        }
        if (v135 == 4 && !v70)
        {
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v80 = sub_1C151928C();
          uint64_t v81 = __swift_project_value_buffer(v80, (uint64_t)qword_1EB93CAB0);
          uint64_t v58 = (uint64_t)v125;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16))(v125, v81, v80);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v73 = 6;
          goto LABEL_76;
        }
        if (v135 == 5 && !v70)
        {
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v82 = sub_1C151928C();
          uint64_t v83 = __swift_project_value_buffer(v82, (uint64_t)qword_1EB93CAB0);
          uint64_t v58 = (uint64_t)v124;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v124, v83, v82);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v73 = 7;
          goto LABEL_76;
        }
        if (v135 == 6 && !v70)
        {
          if (qword_1EB887638 != -1) {
            swift_once();
          }
          uint64_t v84 = sub_1C151928C();
          uint64_t v85 = __swift_project_value_buffer(v84, (uint64_t)qword_1EB93CA98);
          uint64_t v58 = (uint64_t)v123;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16))(v123, v85, v84);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v73 = 8;
          goto LABEL_76;
        }
        if (v135 == 7 && !v70)
        {
          if (qword_1EB887638 != -1) {
            swift_once();
          }
          uint64_t v86 = sub_1C151928C();
          uint64_t v87 = __swift_project_value_buffer(v86, (uint64_t)qword_1EB93CA98);
          uint64_t v58 = (uint64_t)v122;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v86 - 8) + 16))(v122, v87, v86);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v73 = 14;
          goto LABEL_76;
        }
        if (v135 == 8 && !v70)
        {
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v88 = sub_1C151928C();
          uint64_t v89 = __swift_project_value_buffer(v88, (uint64_t)qword_1EB93CAB0);
          uint64_t v58 = (uint64_t)v121;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v88 - 8) + 16))(v121, v89, v88);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v73 = 9;
          goto LABEL_76;
        }
        if (v135 == 9 && !v70)
        {
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v90 = sub_1C151928C();
          uint64_t v91 = __swift_project_value_buffer(v90, (uint64_t)qword_1EB93CAB0);
          uint64_t v58 = (uint64_t)v120;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v90 - 8) + 16))(v120, v91, v90);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v73 = 10;
          goto LABEL_76;
        }
        if (v135 == 10 && !v70)
        {
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v92 = sub_1C151928C();
          uint64_t v93 = __swift_project_value_buffer(v92, (uint64_t)qword_1EB93CAB0);
          uint64_t v58 = (uint64_t)v119;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 16))(v119, v93, v92);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v73 = 11;
          goto LABEL_76;
        }
        if (v135 == 11 && !v70)
        {
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v94 = sub_1C151928C();
          uint64_t v95 = __swift_project_value_buffer(v94, (uint64_t)qword_1EB93CAB0);
          uint64_t v58 = (uint64_t)v117;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v94 - 8) + 16))(v117, v95, v94);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v73 = 12;
          goto LABEL_76;
        }
        if (v135 != 12 || v70)
        {
          if (v135 != 13 || v70)
          {
            if (v135 != 14 || v70)
            {
              if (qword_1EB887630 != -1) {
                swift_once();
              }
              uint64_t v110 = sub_1C151928C();
              uint64_t v111 = __swift_project_value_buffer(v110, (uint64_t)qword_1EB93CA80);
              uint64_t v112 = (uint64_t)v115;
              (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v110 - 8) + 16))(v115, v111, v110);
              type metadata accessor for FormatVersionRequirement.Value(0);
              swift_storeEnumTagMultiPayload();
              uint64_t v113 = v136;
              sub_1BFDD668C(19, v112);
              if (!v113)
              {
                uint64_t v63 = (uint64_t)v143;
                uint64_t v68 = (uint64_t)v115;
                goto LABEL_16;
              }
              char v101 = &v140;
            }
            else
            {
              if (qword_1EB887628 != -1) {
                swift_once();
              }
              uint64_t v106 = sub_1C151928C();
              uint64_t v107 = __swift_project_value_buffer(v106, (uint64_t)qword_1EB93CA68);
              uint64_t v108 = (uint64_t)v114;
              (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v106 - 8) + 16))(v114, v107, v106);
              type metadata accessor for FormatVersionRequirement.Value(0);
              swift_storeEnumTagMultiPayload();
              uint64_t v109 = v136;
              sub_1BFDD668C(18, v108);
              char v101 = &v139;
              if (!v109) {
                goto LABEL_95;
              }
            }
          }
          else
          {
            if (qword_1EB887638 != -1) {
              swift_once();
            }
            uint64_t v102 = sub_1C151928C();
            uint64_t v103 = __swift_project_value_buffer(v102, (uint64_t)qword_1EB93CA98);
            uint64_t v104 = (uint64_t)v116;
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v102 - 8) + 16))(v116, v103, v102);
            type metadata accessor for FormatVersionRequirement.Value(0);
            swift_storeEnumTagMultiPayload();
            uint64_t v105 = v136;
            sub_1BFDD668C(15, v104);
            char v101 = &v141;
            if (!v105) {
              goto LABEL_95;
            }
          }
        }
        else
        {
          if (qword_1EB8875F8 != -1) {
            swift_once();
          }
          uint64_t v97 = sub_1C151928C();
          uint64_t v98 = __swift_project_value_buffer(v97, (uint64_t)qword_1EB93C9F0);
          uint64_t v99 = (uint64_t)v118;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v97 - 8) + 16))(v118, v98, v97);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          uint64_t v100 = v136;
          sub_1BFDD668C(13, v99);
          char v101 = &v142;
          if (!v100)
          {
LABEL_95:
            uint64_t v68 = *(v101 - 32);
            uint64_t v63 = (uint64_t)v143;
            goto LABEL_16;
          }
        }
        uint64_t v58 = *(v101 - 32);
        uint64_t v63 = (uint64_t)v143;
        goto LABEL_15;
      }
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v74 = sub_1C151928C();
      uint64_t v75 = __swift_project_value_buffer(v74, (uint64_t)qword_1EB93CAB0);
      uint64_t v58 = (uint64_t)v129;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v74 - 8) + 16))(v129, v75, v74);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v73 = 0;
LABEL_76:
      uint64_t v63 = (uint64_t)v143;
      uint64_t v96 = v136;
      sub_1BFDD668C(v73, v58);
      if (v96)
      {
LABEL_15:
        uint64_t v68 = v58;
        goto LABEL_16;
      }
      uint64_t v68 = v58;
LABEL_16:
      sub_1BFEFEB68(v68, type metadata accessor for FormatVersionRequirement);
      return sub_1BFEFEB68(v63, (uint64_t (*)(void))sub_1BFEFF7D8);
    default:
      v137[0] = v135;
      v137[1] = v47;
      v137[2] = v49;
      v137[3] = v48;
      v137[4] = v50;
      v137[5] = v134;
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v56 = sub_1C151928C();
      uint64_t v57 = __swift_project_value_buffer(v56, (uint64_t)qword_1EB93CA98);
      uint64_t v58 = (uint64_t)v130;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v130, v57, v56);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      unsigned int v59 = v137;
      char v60 = 3;
LABEL_8:
      uint64_t v63 = (uint64_t)v143;
      sub_1BFDD6834(v60, (uint64_t)v59, v58);
      goto LABEL_15;
  }
}

uint64_t sub_1BFDD668C(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C08F9444;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDD67E0();
    v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDD67E0()
{
  unint64_t result = qword_1EB866DE0;
  if (!qword_1EB866DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866DE0);
  }
  return result;
}

uint64_t sub_1BFDD6834(char a1, uint64_t a2, uint64_t a3)
{
  char v24 = a1;
  sub_1C08C0584(a2, (uint64_t)&v21);
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  uint64_t v18 = sub_1C08F9444;
  uint64_t v19 = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDD67E0();
    long long v20 = 0uLL;
    sub_1C1520BAC();
    uint64_t v13 = v23;
    if (v23 == 1)
    {
      sub_1BFF51C94(v21, v22, 1);
      sub_1BFF51C94(0, 0, 1);
    }
    else
    {
      uint64_t v15 = v22;
      uint64_t v16 = v21;
      sub_1BFF523A4(v21, v22, v23);
      sub_1BFF51C94(v16, v15, v13);
      sub_1BFF51C94(0, 0, 1);
      long long v20 = xmmword_1C152C800;
      sub_1BFDD6A70();
      sub_1C1520BAC();
    }
  }
  return swift_release();
}

unint64_t sub_1BFDD6A70()
{
  unint64_t result = qword_1EB85AD20;
  if (!qword_1EB85AD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85AD20);
  }
  return result;
}

uint64_t sub_1BFDD6AC4(void *a1)
{
  return FormatTextNodeFormat.encode(to:)(a1);
}

uint64_t FormatTextNodeFormat.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v29 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v28 - v6;
  sub_1C086E4B8();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v1;
  v28[1] = v1[1];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1C086E38C();
  uint64_t v15 = v14;
  uint64_t v16 = sub_1C085F050(&qword_1EB892620, (void (*)(uint64_t))sub_1C086E38C);
  uint64_t v31 = v10;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatTextNodeFormat, v17, v12, (uint64_t)&type metadata for FormatTextNodeFormat, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v10, v16, (uint64_t)&off_1F1C39B68);
  uint64_t v18 = qword_1EB882D28;
  swift_retain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C151928C();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB93CAB0);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  v21(v7, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = v30;
  sub_1C06C821C(v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (v22)
  {
    uint64_t v23 = (uint64_t)v31;
  }
  else
  {
    uint64_t v24 = (uint64_t)v29;
    v21(v29, v20, v19);
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v26 = (uint64_t)v31;
    sub_1C06C83B4(v25, 1, 0, 0, v24, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v24, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v23 = v26;
  }
  return sub_1BFEFEB68(v23, (uint64_t (*)(void))sub_1C086E4B8);
}

unint64_t sub_1BFDD6E50()
{
  unint64_t result = qword_1EB85C300;
  if (!qword_1EB85C300)
  {
    sub_1BFE9DEBC(255, &qword_1EB879C88, (uint64_t)&type metadata for FormatTextNodeFormat.Token, MEMORY[0x1E4FBB320]);
    sub_1C008E0C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C300);
  }
  return result;
}

uint64_t FormatNodeContext.__deallocating_deinit()
{
  FormatNodeContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatContextLayoutOptions.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFDD6F84@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFDD6FB0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFDD6FB0(void *a1)
{
  uint64_t v2 = v1;
  sub_1C0908CDC(0, (unint64_t *)&qword_1EB884858, (void (*)(void))sub_1C00795B8, (void (*)(void))sub_1BFC3A24C);
  uint64_t v34 = v4;
  uint64_t v32 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v30 - v5;
  sub_1C0902744();
  uint64_t v8 = v7;
  uint64_t v33 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C086D8CC();
  sub_1C085F050(&qword_1EB8920B0, (void (*)(uint64_t))sub_1C086D8CC);
  sub_1C1520EBC();
  if (v1)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v2);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v11;
  }
  uint64_t v12 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_1C1520EAC();
  char v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = v8;
  uint64_t v17 = v33;
  uint64_t v16 = v34;
  if (v14)
  {
    uint64_t v31 = v15;
    uint64_t v18 = sub_1C152070C();
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      uint64_t v20 = (unsigned char *)(v18 + 48);
      while (*v20 != 1)
      {
        v20 += 24;
        if (!--v19) {
          goto LABEL_7;
        }
      }
      uint64_t v23 = *((void *)v20 - 2);
      uint64_t v22 = *((void *)v20 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v24 = swift_bridgeObjectRelease();
      uint64_t v25 = v17;
      MEMORY[0x1F4188790](v24);
      *(&v30 - 4) = (uint64_t)&_s10CodingKeysON_211;
      *(&v30 - 3) = sub_1C086D950();
      *(&v30 - 2) = sub_1BFDD7444();
      *(&v30 - 1) = sub_1C086D9A4();
      swift_getKeyPath();
      swift_retain();
      uint64_t v26 = sub_1C085FA20((uint64_t)&unk_1F1B82670);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v2 = (void *)swift_allocError();
      *(void *)uint64_t v27 = v23;
      *(void *)(v27 + 8) = v22;
      *(void *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v23, v22, 1);
      uint64_t v28 = *(void (**)(char *, uint64_t))(v25 + 8);
      uint64_t v11 = v25 + 8;
      v28(v10, v31);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t v15 = v31;
  }
  sub_1BFCAB4C0();
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  char v37 = 0;
  sub_1C15206EC();
  uint64_t v21 = sub_1C1517E5C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v16);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
  type metadata accessor for FormatSwitchNodeDefault();
  uint64_t v11 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v11 + 16) = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v11;
}

unint64_t sub_1BFDD7444()
{
  unint64_t result = qword_1EB88AED0;
  if (!qword_1EB88AED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88AED0);
  }
  return result;
}

uint64_t sub_1BFDD7498(void *a1)
{
  return FormatCorner.encode(to:)(a1);
}

uint64_t FormatCorner.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  char v37 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v36 = (char *)&v33 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v35 = (char *)&v33 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v34 = (char *)&v33 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v33 = (char *)&v33 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v38 = *v1;
  uint64_t v39 = a1;
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1C151928C();
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EB93CAB0);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  v20(v15, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = v42;
  sub_1BFE97CE8((uint64_t)v15, (uint64_t)sub_1C01B158C, 0, v16, v17);
  uint64_t result = sub_1BFEFEB68((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
  if (!v21)
  {
    switch(v38)
    {
      case 1:
        uint64_t v25 = v39[3];
        uint64_t v42 = v39[4];
        __swift_project_boxed_opaque_existential_1(v39, v25);
        uint64_t v26 = (uint64_t)v34;
        v20(v34, v19, v18);
        swift_storeEnumTagMultiPayload();
        sub_1BFE97CE8(v26, (uint64_t)sub_1C01B158C, 0, v25, v42);
        sub_1BFEFEB68(v26, type metadata accessor for FormatVersionRequirement);
        break;
      case 2:
        uint64_t v27 = v39[3];
        uint64_t v42 = v39[4];
        __swift_project_boxed_opaque_existential_1(v39, v27);
        uint64_t v28 = (uint64_t)v35;
        v20(v35, v19, v18);
        swift_storeEnumTagMultiPayload();
        sub_1BFE97CE8(v28, (uint64_t)sub_1C01B158C, 0, v27, v42);
        sub_1BFEFEB68(v28, type metadata accessor for FormatVersionRequirement);
        break;
      case 3:
        uint64_t v29 = v39[3];
        uint64_t v42 = v39[4];
        __swift_project_boxed_opaque_existential_1(v39, v29);
        uint64_t v30 = (uint64_t)v36;
        v20(v36, v19, v18);
        swift_storeEnumTagMultiPayload();
        sub_1BFE97CE8(v30, (uint64_t)sub_1C01B158C, 0, v29, v42);
        sub_1BFEFEB68(v30, type metadata accessor for FormatVersionRequirement);
        break;
      case 4:
        uint64_t v31 = v39[3];
        uint64_t v42 = v39[4];
        __swift_project_boxed_opaque_existential_1(v39, v31);
        uint64_t v32 = (uint64_t)v37;
        v20(v37, v19, v18);
        swift_storeEnumTagMultiPayload();
        sub_1BFE97CE8(v32, (uint64_t)sub_1C01B158C, 0, v31, v42);
        sub_1BFEFEB68(v32, type metadata accessor for FormatVersionRequirement);
        break;
      default:
        uint64_t v23 = v39[3];
        uint64_t v42 = v39[4];
        __swift_project_boxed_opaque_existential_1(v39, v23);
        uint64_t v24 = (uint64_t)v33;
        v20(v33, v19, v18);
        swift_storeEnumTagMultiPayload();
        sub_1BFE97CE8(v24, (uint64_t)sub_1C01B158C, 0, v23, v42);
        sub_1BFEFEB68(v24, type metadata accessor for FormatVersionRequirement);
        break;
    }
    __swift_project_boxed_opaque_existential_1(v39, v39[3]);
    sub_1C1520EEC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
    sub_1C1520AFC();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  }
  return result;
}

uint64_t sub_1BFDD7AEC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatHeadlineBinding.Image.init(from:)(a1, a2);
}

uint64_t FormatHeadlineBinding.Image.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFDD7B40(a1, (void (*)(uint64_t))sub_1BFDD7E2C, (uint64_t)&_s10CodingTypeON_92, (uint64_t)&unk_1F1B85650, a2);
}

uint64_t sub_1BFDD7B40@<X0>(void *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  uint64_t v28 = a4;
  uint64_t v29 = a3;
  uint64_t v31 = a5;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v9 = v8;
  uint64_t v30 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v11 = (char *)&v26 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  uint64_t v12 = v5;
  if (v5)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v12);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v27 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_1C1520EAC();
  char v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  uint64_t v15 = swift_bridgeObjectRelease();
  uint64_t v17 = v30;
  uint64_t v16 = v31;
  if (v14)
  {
    uint64_t v18 = sub_1C152070C();
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      uint64_t v20 = (unint64_t *)(v18 + 40);
      while (1)
      {
        unint64_t v21 = *v20;
        if (*v20 >= 4) {
          break;
        }
        v20 += 2;
        if (!--v19) {
          goto LABEL_7;
        }
      }
      uint64_t v23 = *(v20 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v12 = (void *)swift_allocError();
      *(void *)uint64_t v24 = v23;
      *(void *)(v24 + 8) = v21;
      *(void *)(v24 + 16) = v28;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v23, v21);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v27);
      goto LABEL_10;
    }
LABEL_7:
    uint64_t v15 = swift_bridgeObjectRelease();
  }
  a2(v15);
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v22 = v27;
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v22);
  unsigned char *v16 = v34;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDD7E2C()
{
  unint64_t result = qword_1EB88A278;
  if (!qword_1EB88A278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A278);
  }
  return result;
}

unint64_t sub_1BFDD7E80()
{
  unint64_t result = qword_1EB88AF98;
  if (!qword_1EB88AF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88AF98);
  }
  return result;
}

unint64_t sub_1BFDD7ED4()
{
  unint64_t result = qword_1EB88D920;
  if (!qword_1EB88D920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88D920);
  }
  return result;
}

unint64_t sub_1BFDD7F28()
{
  unint64_t result = qword_1EB88A268;
  if (!qword_1EB88A268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A268);
  }
  return result;
}

unint64_t sub_1BFDD7F7C()
{
  unint64_t result = qword_1EB8880D8;
  if (!qword_1EB8880D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8880D8);
  }
  return result;
}

unint64_t sub_1BFDD7FD0()
{
  unint64_t result = qword_1EB88A500;
  if (!qword_1EB88A500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A500);
  }
  return result;
}

unint64_t sub_1BFDD8024()
{
  unint64_t result = qword_1EB88DDE0;
  if (!qword_1EB88DDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88DDE0);
  }
  return result;
}

unint64_t sub_1BFDD8078()
{
  unint64_t result = qword_1EB88A2A8;
  if (!qword_1EB88A2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A2A8);
  }
  return result;
}

unint64_t sub_1BFDD80CC()
{
  unint64_t result = qword_1EB87EB70;
  if (!qword_1EB87EB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87EB70);
  }
  return result;
}

unint64_t sub_1BFDD8120()
{
  unint64_t result = qword_1EB8880B8;
  if (!qword_1EB8880B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8880B8);
  }
  return result;
}

unint64_t sub_1BFDD8174()
{
  unint64_t result = qword_1EB888720;
  if (!qword_1EB888720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888720);
  }
  return result;
}

unint64_t sub_1BFDD81C8()
{
  unint64_t result = qword_1EB8880F8;
  if (!qword_1EB8880F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8880F8);
  }
  return result;
}

unint64_t sub_1BFDD821C()
{
  unint64_t result = qword_1EB886FE0;
  if (!qword_1EB886FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB886FE0);
  }
  return result;
}

uint64_t sub_1BFDD8270(void *a1)
{
  return FormatSymbolConfig.Size.encode(to:)(a1);
}

uint64_t FormatSymbolConfig.Size.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v31 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v33 = &v29[-v8];
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v29[-v10];
  sub_1C08BD5CC();
  MEMORY[0x1F4188790](v12 - 8);
  char v14 = &v29[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = *(void *)v1;
  int v32 = *(unsigned __int8 *)(v1 + 8);
  int v30 = *(unsigned __int8 *)(v1 + 9);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1C08BD4A0();
  uint64_t v19 = v18;
  uint64_t v20 = sub_1C085F050(&qword_1EB891D10, (void (*)(uint64_t))sub_1C08BD4A0);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatSymbolConfig.Size, v21, v16, (uint64_t)&type metadata for FormatSymbolConfig.Size, v19, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v14, v20, (uint64_t)&off_1F1C39B68);
  uint64_t v22 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1C151928C();
  uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1EB93CAB0);
  uint64_t v25 = *(void (**)(unsigned char *))(*(void *)(v23 - 8) + 16);
  uint64_t v34 = v24;
  v25(v11);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06BF0E0(v15, 0, 0, 0, (uint64_t)v11, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    uint64_t v26 = (uint64_t)v33;
    ((void (*)(unsigned char *, uint64_t, uint64_t))v25)(v33, v34, v23);
    swift_storeEnumTagMultiPayload();
    sub_1C071A390(v32, 1, 0, 0, v26, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v26, type metadata accessor for FormatVersionRequirement);
    uint64_t v27 = (uint64_t)v31;
    ((void (*)(unsigned char *, uint64_t, uint64_t))v25)(v31, v34, v23);
    swift_storeEnumTagMultiPayload();
    sub_1C071A5B4(v30, 2, 0, 0, v27, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v27, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BFEFEB68((uint64_t)v14, (uint64_t (*)(void))sub_1C08BD5CC);
}

uint64_t FormatEdgeInsetsEquation.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v36 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v38 = (char *)&v35 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v35 - v11;
  MEMORY[0x1F4188790](v10);
  char v14 = (char *)&v35 - v13;
  sub_1C0883BF8();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *v1;
  uint64_t v39 = v1[1];
  uint64_t v37 = v1[2];
  uint64_t v35 = v1[3];
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_1C0883ACC();
  uint64_t v22 = v21;
  uint64_t v23 = sub_1C085F050(&qword_1EB8920E0, (void (*)(uint64_t))sub_1C0883ACC);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatEdgeInsetsEquation, v24, v19, (uint64_t)&type metadata for FormatEdgeInsetsEquation, v22, (uint64_t)&type metadata for FormatVersions.JazzkonC, v20, (uint64_t)v17, v23, (uint64_t)&off_1F1C39B68);
  uint64_t v25 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v25 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1C151928C();
  uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1EB93CAB0);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
  uint64_t v41 = v27;
  uint64_t v40 = v28;
  ((void (*)(char *))v28)(v14);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06B43A4(v18, 0, 0, 0, (uint64_t)v14, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v40(v12, v41, v26);
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = swift_bridgeObjectRetain();
    sub_1C06B43A4(v29, 1, 0, 0, (uint64_t)v12, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68((uint64_t)v12, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v30 = (uint64_t)v38;
    v40(v38, v41, v26);
    swift_storeEnumTagMultiPayload();
    uint64_t v31 = swift_bridgeObjectRetain();
    sub_1C06B43A4(v31, 2, 0, 0, v30, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v30, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v32 = (uint64_t)v36;
    v40(v36, v41, v26);
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = swift_bridgeObjectRetain();
    sub_1C06B43A4(v33, 3, 0, 0, v32, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v32, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BFEFEB68((uint64_t)v17, (uint64_t (*)(void))sub_1C0883BF8);
}

unint64_t sub_1BFDD8B60()
{
  unint64_t result = qword_1EB874A58;
  if (!qword_1EB874A58)
  {
    sub_1BFEFF3E8(255, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874A58);
  }
  return result;
}

unint64_t sub_1BFDD8BF0()
{
  unint64_t result = qword_1EB85BA38;
  if (!qword_1EB85BA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BA38);
  }
  return result;
}

unint64_t sub_1BFDD8C44()
{
  unint64_t result = qword_1EB85B9B0;
  if (!qword_1EB85B9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B9B0);
  }
  return result;
}

uint64_t sub_1BFDD8C98@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatBackground.init(from:)(a1, a2);
}

uint64_t FormatBackground.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  *(void *)&long long v51 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v51 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_11:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  uint64_t v10 = a1[3];
  uint64_t v62 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  uint64_t v11 = sub_1C1520EAC();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  uint64_t v12 = v51;
  uint64_t v13 = v9;
  if (v10)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        unint64_t v17 = *v16;
        if (*v16 >= 4) {
          break;
        }
        v16 += 2;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v21 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v22 = v21;
      *(void *)(v22 + 8) = v17;
      *(void *)(v22 + 16) = &unk_1F1B83D10;
      *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v21, v17);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v7);
      a1 = v62;
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFDD9494();
  long long v52 = 0uLL;
  sub_1C15206EC();
  uint64_t v18 = a2;
  switch((char)v61)
  {
    case 1:
      long long v61 = xmmword_1C152C800;
      sub_1BFDD94E8();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v7);
      long long v25 = v52;
      long long v51 = v53;
      long long v26 = v54;
      long long v27 = v55;
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = v25;
      *(_OWORD *)(v28 + 32) = v51;
      *(_OWORD *)(v28 + 48) = v26;
      unint64_t v20 = v28 | 0x2000000000000000;
      *(_OWORD *)(v28 + 64) = v27;
      break;
    case 2:
      long long v61 = xmmword_1C152C800;
      sub_1C0874710();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v7);
      uint64_t v29 = swift_allocObject();
      long long v30 = v57;
      *(_OWORD *)(v29 + 80) = v56;
      *(_OWORD *)(v29 + 96) = v30;
      long long v31 = v59;
      *(_OWORD *)(v29 + 112) = v58;
      *(_OWORD *)(v29 + 128) = v31;
      long long v32 = v53;
      *(_OWORD *)(v29 + 16) = v52;
      *(_OWORD *)(v29 + 32) = v32;
      long long v33 = v55;
      *(_OWORD *)(v29 + 48) = v54;
      *(_OWORD *)(v29 + 64) = v33;
      unint64_t v20 = v29 | 0x4000000000000000;
      break;
    case 3:
      long long v52 = xmmword_1C152C800;
      sub_1BFE10CC4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v7);
      uint64_t v34 = v61;
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v34;
      unint64_t v20 = v35 | 0x6000000000000000;
      break;
    case 4:
      long long v61 = xmmword_1C152C800;
      sub_1C03A9F84();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v7);
      uint64_t v36 = swift_allocObject();
      long long v37 = v59;
      *(_OWORD *)(v36 + 112) = v58;
      *(_OWORD *)(v36 + 128) = v37;
      *(_OWORD *)(v36 + 144) = *(_OWORD *)v60;
      *(_OWORD *)(v36 + 153) = *(_OWORD *)&v60[9];
      long long v38 = v55;
      *(_OWORD *)(v36 + 48) = v54;
      *(_OWORD *)(v36 + 64) = v38;
      long long v39 = v57;
      *(_OWORD *)(v36 + 80) = v56;
      *(_OWORD *)(v36 + 96) = v39;
      long long v40 = v53;
      *(_OWORD *)(v36 + 16) = v52;
      *(_OWORD *)(v36 + 32) = v40;
      unint64_t v20 = v36 | 0x8000000000000000;
      break;
    case 5:
      long long v61 = xmmword_1C152C800;
      sub_1C08745EC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v7);
      long long v41 = v52;
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = v41;
      unint64_t v20 = v42 | 0xA000000000000000;
      break;
    case 6:
      long long v61 = xmmword_1C152C800;
      sub_1C08744D8();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v7);
      uint64_t v43 = swift_allocObject();
      long long v44 = v59;
      *(_OWORD *)(v43 + 112) = v58;
      *(_OWORD *)(v43 + 128) = v44;
      *(_OWORD *)(v43 + 144) = *(_OWORD *)v60;
      *(unsigned char *)(v43 + 160) = v60[16];
      long long v45 = v55;
      *(_OWORD *)(v43 + 48) = v54;
      *(_OWORD *)(v43 + 64) = v45;
      long long v46 = v57;
      *(_OWORD *)(v43 + 80) = v56;
      *(_OWORD *)(v43 + 96) = v46;
      long long v47 = v53;
      unint64_t v20 = v43 | 0xC000000000000000;
      *(_OWORD *)(v43 + 16) = v52;
      *(_OWORD *)(v43 + 32) = v47;
      break;
    case 7:
      long long v52 = xmmword_1C152C800;
      sub_1C0874484();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v7);
      char v48 = v61;
      uint64_t v49 = swift_allocObject();
      *(unsigned char *)(v49 + 16) = v48;
      unint64_t v20 = v49 | 0xE000000000000000;
      break;
    default:
      long long v52 = xmmword_1C152C800;
      sub_1BFE113DC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v7);
      uint64_t v19 = v61;
      unint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v19;
      break;
  }
  uint64_t v50 = (uint64_t)v62;
  *uint64_t v18 = v20;
  uint64_t v23 = v50;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

unint64_t sub_1BFDD9494()
{
  unint64_t result = qword_1EB887B20;
  if (!qword_1EB887B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887B20);
  }
  return result;
}

unint64_t sub_1BFDD94E8()
{
  unint64_t result = qword_1EB874A98;
  if (!qword_1EB874A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874A98);
  }
  return result;
}

uint64_t sub_1BFDD953C(void *a1, uint64_t a2)
{
  return sub_1BFDD9554(a1, a2);
}

uint64_t sub_1BFDD9554(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v6 - 8);
  long long v37 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v35 = *(void *)(a2 + 16);
  uint64_t v33 = v11;
  uint64_t v12 = _s10CodingKeysOMa_291();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v15 = swift_getWitnessTable();
  *(void *)&long long v41 = v12;
  *((void *)&v41 + 1) = WitnessTable;
  uint64_t v42 = v14;
  uint64_t v43 = v15;
  uint64_t v16 = type metadata accessor for FormatCodingKeysContainer();
  uint64_t v17 = swift_getWitnessTable();
  sub_1C152083C();
  swift_getWitnessTable();
  uint64_t v40 = type metadata accessor for VersionedKeyedEncodingContainer();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v19 = (char *)&v33 - v18;
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  uint64_t v34 = a2;
  sub_1BFEFBD78(a2, v22, v20, a2, v16, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v19, v17, (uint64_t)&off_1F1C39B68);
  uint64_t v36 = v3;
  uint64_t v44 = *v3;
  long long v41 = 0uLL;
  LOBYTE(v42) = 0;
  uint64_t v23 = qword_1EB882D28;
  swift_retain();
  if (v23 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1C151928C();
  uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EB93CAB0);
  long long v26 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
  v26(v10, v25, v24);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  unint64_t v27 = sub_1BFE40874();
  uint64_t v28 = v39;
  sub_1BFEFFFF0((uint64_t)&v44, (uint64_t)&v41, (uint64_t)v10, (uint64_t)sub_1C01B158C, 0, v40, (uint64_t)&type metadata for FormatExpression, v27);
  sub_1BFEFEB68((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (v28) {
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v19, v40);
  }
  uint64_t v30 = (uint64_t)v37;
  uint64_t v31 = (uint64_t)v36 + *(int *)(v34 + 36);
  long long v41 = xmmword_1C153AB20;
  LOBYTE(v42) = 0;
  v26(v37, v25, v24);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = v40;
  sub_1BFEFFFF0(v31, (uint64_t)&v41, v30, (uint64_t)sub_1C01B158C, 0, v40, v35, *(void *)(v33 + 16));
  sub_1BFEFEB68(v30, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v19, v32);
}

uint64_t sub_1BFDD99E8(void *a1)
{
  return FormatItemKind.encode(to:)(a1);
}

uint64_t FormatItemKind.encode(to:)(void *a1)
{
  uint64_t v153 = a1;
  sub_1BFDE4564(0, (unint64_t *)&unk_1EB85C650, (uint64_t (*)(void))sub_1BFDE45CC, (uint64_t)&type metadata for FormatItemKind.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v150 = *(void *)(v2 - 8);
  uint64_t v151 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v152 = (char *)&v150 - v3;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  MEMORY[0x1F4188790](v5);
  MEMORY[0x1F4188790](v6);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v150 - v8;
  MEMORY[0x1F4188790](v10);
  MEMORY[0x1F4188790]((char *)&v150 - v11);
  MEMORY[0x1F4188790](v12);
  MEMORY[0x1F4188790](v13);
  MEMORY[0x1F4188790](v14);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v150 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v150 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v150 - v22;
  MEMORY[0x1F4188790](v24);
  long long v26 = (char *)&v150 - v25;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v150 - v28;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v150 - v31;
  MEMORY[0x1F4188790](v33);
  uint64_t v43 = (char *)&v150 - v42;
  unint64_t v44 = v1[1];
  switch(v44)
  {
    case 0uLL:
      long long v45 = v153;
      __swift_project_boxed_opaque_existential_1(v153, v153[3]);
      sub_1C1520EEC();
      uint64_t v46 = v45[3];
      uint64_t v47 = v45[4];
      __swift_project_boxed_opaque_existential_1(v45, v46);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v48 = sub_1C151928C();
      uint64_t v49 = __swift_project_value_buffer(v48, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v43, v49, v48);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v50 = v154;
      sub_1BFE97CE8((uint64_t)v43, (uint64_t)sub_1C0351774, 0, v46, v47);
      sub_1BFE9627C((uint64_t)v43);
      if (v50) {
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v155);
      }
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v155, v156);
      goto LABEL_71;
    case 1uLL:
      uint64_t v64 = v153;
      __swift_project_boxed_opaque_existential_1(v153, v153[3]);
      sub_1C1520EEC();
      uint64_t v65 = v64[3];
      uint64_t v66 = v64[4];
      __swift_project_boxed_opaque_existential_1(v64, v65);
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v67 = sub_1C151928C();
      uint64_t v68 = __swift_project_value_buffer(v67, (uint64_t)qword_1EB93CA50);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v67 - 8) + 16))(v32, v68, v67);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v69 = v154;
      sub_1BFE97CE8((uint64_t)v32, (uint64_t)sub_1C0351790, 0, v65, v66);
      uint64_t v70 = (uint64_t)v32;
      if (v69) {
        goto LABEL_67;
      }
      sub_1BFE9627C((uint64_t)v32);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v155, v156);
      goto LABEL_71;
    case 2uLL:
      uint64_t v71 = v153;
      __swift_project_boxed_opaque_existential_1(v153, v153[3]);
      sub_1C1520EEC();
      uint64_t v72 = v71[3];
      uint64_t v73 = v71[4];
      __swift_project_boxed_opaque_existential_1(v71, v72);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v74 = sub_1C151928C();
      uint64_t v75 = __swift_project_value_buffer(v74, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v74 - 8) + 16))(v29, v75, v74);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v76 = v154;
      sub_1BFE97CE8((uint64_t)v29, (uint64_t)sub_1C03517AC, 0, v72, v73);
      uint64_t v70 = (uint64_t)v29;
      if (v76) {
        goto LABEL_67;
      }
      sub_1BFE9627C((uint64_t)v29);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v155, v156);
      goto LABEL_71;
    case 3uLL:
      uint64_t v77 = v153;
      __swift_project_boxed_opaque_existential_1(v153, v153[3]);
      sub_1C1520EEC();
      uint64_t v78 = v77[3];
      uint64_t v79 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v78);
      if (qword_1EB887640 != -1) {
        swift_once();
      }
      uint64_t v80 = sub_1C151928C();
      uint64_t v81 = __swift_project_value_buffer(v80, (uint64_t)qword_1EB93CAC8);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16))(v26, v81, v80);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v82 = v154;
      sub_1BFE97CE8((uint64_t)v26, (uint64_t)sub_1C03517C8, 0, v78, v79);
      uint64_t v70 = (uint64_t)v26;
      if (v82) {
        goto LABEL_67;
      }
      sub_1BFE9627C((uint64_t)v26);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v155, v156);
      goto LABEL_71;
    case 4uLL:
      uint64_t v83 = v153;
      __swift_project_boxed_opaque_existential_1(v153, v153[3]);
      sub_1C1520EEC();
      uint64_t v84 = v83[3];
      uint64_t v85 = v83[4];
      __swift_project_boxed_opaque_existential_1(v83, v84);
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v86 = sub_1C151928C();
      uint64_t v87 = __swift_project_value_buffer(v86, (uint64_t)qword_1EB93CA50);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v86 - 8) + 16))(v23, v87, v86);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v88 = v154;
      sub_1BFE97CE8((uint64_t)v23, (uint64_t)sub_1C03517E4, 0, v84, v85);
      if (!v88) {
        goto LABEL_70;
      }
      goto LABEL_66;
    case 5uLL:
      uint64_t v89 = v153;
      __swift_project_boxed_opaque_existential_1(v153, v153[3]);
      sub_1C1520EEC();
      uint64_t v90 = v89[3];
      uint64_t v91 = v89[4];
      __swift_project_boxed_opaque_existential_1(v89, v90);
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v92 = sub_1C151928C();
      uint64_t v93 = __swift_project_value_buffer(v92, (uint64_t)qword_1EB93CA08);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 16))(v20, v93, v92);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v94 = v154;
      sub_1BFE97CE8((uint64_t)v20, (uint64_t)sub_1C0351800, 0, v90, v91);
      if (v94)
      {
        sub_1BFE9627C((uint64_t)v20);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v155);
      }
      sub_1BFE9627C((uint64_t)v20);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v155, v156);
      goto LABEL_71;
    case 6uLL:
      uint64_t v95 = v153;
      __swift_project_boxed_opaque_existential_1(v153, v153[3]);
      sub_1C1520EEC();
      uint64_t v96 = v95[3];
      uint64_t v97 = v95[4];
      __swift_project_boxed_opaque_existential_1(v95, v96);
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v98 = sub_1C151928C();
      uint64_t v99 = __swift_project_value_buffer(v98, (uint64_t)qword_1EB93CA08);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v98 - 8) + 16))(v17, v99, v98);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v100 = v154;
      sub_1BFE97CE8((uint64_t)v17, (uint64_t)sub_1C035181C, 0, v96, v97);
      uint64_t v70 = (uint64_t)v17;
      if (v100) {
        goto LABEL_67;
      }
      sub_1BFE9627C((uint64_t)v17);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v155, v156);
      goto LABEL_71;
    case 7uLL:
      uint64_t v23 = v38;
      char v101 = v153;
      __swift_project_boxed_opaque_existential_1(v153, v153[3]);
      sub_1C1520EEC();
      uint64_t v102 = v101[3];
      uint64_t v103 = v101[4];
      __swift_project_boxed_opaque_existential_1(v101, v102);
      if (qword_1EB887628 != -1) {
        swift_once();
      }
      uint64_t v104 = sub_1C151928C();
      uint64_t v105 = __swift_project_value_buffer(v104, (uint64_t)qword_1EB93CA68);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v104 - 8) + 16))(v23, v105, v104);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v106 = v154;
      sub_1BFE97CE8((uint64_t)v23, (uint64_t)sub_1C0351838, 0, v102, v103);
      if (!v106) {
        goto LABEL_70;
      }
      goto LABEL_66;
    case 8uLL:
      uint64_t v23 = v37;
      uint64_t v107 = v153;
      __swift_project_boxed_opaque_existential_1(v153, v153[3]);
      sub_1C1520EEC();
      uint64_t v108 = v107[3];
      uint64_t v109 = v107[4];
      __swift_project_boxed_opaque_existential_1(v107, v108);
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v110 = sub_1C151928C();
      uint64_t v111 = __swift_project_value_buffer(v110, (uint64_t)qword_1EB93CA80);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v110 - 8) + 16))(v23, v111, v110);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v112 = v154;
      sub_1BFE97CE8((uint64_t)v23, (uint64_t)sub_1C0351854, 0, v108, v109);
      if (!v112) {
        goto LABEL_70;
      }
      goto LABEL_66;
    case 9uLL:
      uint64_t v23 = v36;
      uint64_t v113 = v153;
      __swift_project_boxed_opaque_existential_1(v153, v153[3]);
      sub_1C1520EEC();
      uint64_t v114 = v113[3];
      uint64_t v115 = v113[4];
      __swift_project_boxed_opaque_existential_1(v113, v114);
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v116 = sub_1C151928C();
      uint64_t v117 = __swift_project_value_buffer(v116, (uint64_t)qword_1EB93CA80);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v116 - 8) + 16))(v23, v117, v116);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v118 = v154;
      sub_1BFE97CE8((uint64_t)v23, (uint64_t)sub_1C0351870, 0, v114, v115);
      if (!v118) {
        goto LABEL_70;
      }
      goto LABEL_66;
    case 0xAuLL:
      uint64_t v23 = v35;
      uint64_t v119 = v153;
      __swift_project_boxed_opaque_existential_1(v153, v153[3]);
      sub_1C1520EEC();
      uint64_t v120 = v119[3];
      uint64_t v121 = v119[4];
      __swift_project_boxed_opaque_existential_1(v119, v120);
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v122 = sub_1C151928C();
      uint64_t v123 = __swift_project_value_buffer(v122, (uint64_t)qword_1EB93CA80);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v122 - 8) + 16))(v23, v123, v122);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v124 = v154;
      sub_1BFE97CE8((uint64_t)v23, (uint64_t)sub_1C035188C, 0, v120, v121);
      if (!v124) {
        goto LABEL_70;
      }
      goto LABEL_66;
    case 0xBuLL:
      uint64_t v23 = v34;
      uint64_t v125 = v153;
      __swift_project_boxed_opaque_existential_1(v153, v153[3]);
      sub_1C1520EEC();
      uint64_t v126 = v125[3];
      uint64_t v127 = v125[4];
      __swift_project_boxed_opaque_existential_1(v125, v126);
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v128 = sub_1C151928C();
      uint64_t v129 = __swift_project_value_buffer(v128, (uint64_t)qword_1EB93CA80);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v128 - 8) + 16))(v23, v129, v128);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v130 = v154;
      sub_1BFE97CE8((uint64_t)v23, (uint64_t)sub_1C03518A8, 0, v126, v127);
      if (!v130) {
        goto LABEL_70;
      }
      goto LABEL_66;
    case 0xCuLL:
      uint64_t v23 = v9;
      uint64_t v131 = v153;
      __swift_project_boxed_opaque_existential_1(v153, v153[3]);
      sub_1C1520EEC();
      uint64_t v132 = v131[3];
      uint64_t v133 = v131[4];
      __swift_project_boxed_opaque_existential_1(v131, v132);
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v134 = sub_1C151928C();
      uint64_t v135 = __swift_project_value_buffer(v134, (uint64_t)qword_1EB93CA80);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v134 - 8) + 16))(v9, v135, v134);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v136 = (uint64_t)v9;
      uint64_t v137 = v154;
      sub_1BFE97CE8(v136, (uint64_t)sub_1C03518C4, 0, v132, v133);
      if (!v137) {
        goto LABEL_70;
      }
      goto LABEL_66;
    case 0xDuLL:
      uint64_t v23 = v41;
      uint64_t v138 = v153;
      __swift_project_boxed_opaque_existential_1(v153, v153[3]);
      sub_1C1520EEC();
      uint64_t v139 = v138[3];
      uint64_t v140 = v138[4];
      __swift_project_boxed_opaque_existential_1(v138, v139);
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v141 = sub_1C151928C();
      uint64_t v142 = __swift_project_value_buffer(v141, (uint64_t)qword_1EB93CA80);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v141 - 8) + 16))(v23, v142, v141);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v143 = v154;
      sub_1BFE97CE8((uint64_t)v23, (uint64_t)sub_1C03518E0, 0, v139, v140);
      if (!v143) {
        goto LABEL_70;
      }
      goto LABEL_66;
    case 0xEuLL:
      uint64_t v23 = v40;
      uint64_t v144 = v153;
      __swift_project_boxed_opaque_existential_1(v153, v153[3]);
      sub_1C1520EEC();
      uint64_t v145 = v144[3];
      uint64_t v146 = v144[4];
      __swift_project_boxed_opaque_existential_1(v144, v145);
      if (qword_1EB8849C8 != -1) {
        swift_once();
      }
      uint64_t v147 = sub_1C151928C();
      uint64_t v148 = __swift_project_value_buffer(v147, (uint64_t)qword_1EB93C790);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v147 - 8) + 16))(v23, v148, v147);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v149 = v154;
      sub_1BFE97CE8((uint64_t)v23, (uint64_t)sub_1C03518FC, 0, v145, v146);
      if (v149)
      {
LABEL_66:
        uint64_t v70 = (uint64_t)v23;
LABEL_67:
        sub_1BFE9627C(v70);
      }
      else
      {
LABEL_70:
        sub_1BFE9627C((uint64_t)v23);
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v155, v156);
LABEL_71:
        sub_1C1520AFC();
      }
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v155);
    default:
      uint64_t v51 = v39;
      uint64_t v52 = v151;
      uint64_t v53 = *v1;
      long long v54 = v153;
      __swift_project_boxed_opaque_existential_1(v153, v153[3]);
      sub_1BFDE45CC();
      swift_bridgeObjectRetain();
      long long v55 = v152;
      sub_1C1520F0C();
      uint64_t v56 = v54[3];
      uint64_t v57 = v54[4];
      __swift_project_boxed_opaque_existential_1(v54, v56);
      if (qword_1EB887610 != -1) {
        swift_once();
      }
      uint64_t v58 = sub_1C151928C();
      uint64_t v59 = __swift_project_value_buffer(v58, (uint64_t)qword_1EB93CA20);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v51, v59, v58);
      type metadata accessor for FormatVersionRequirement.Value(0);
      uint64_t v60 = swift_storeEnumTagMultiPayload();
      MEMORY[0x1F4188790](v60);
      *(&v150 - 2) = v53;
      *(&v150 - 1) = v44;
      uint64_t v61 = v154;
      sub_1BFE97CE8(v51, (uint64_t)sub_1C0351FD0, (uint64_t)(&v150 - 4), v56, v57);
      if (v61)
      {
        sub_1BFF8F648(v53, v44);
        sub_1BFE9627C(v51);
        uint64_t v62 = v150;
      }
      else
      {
        sub_1BFE9627C(v51);
        LOBYTE(v155[0]) = 0;
        sub_1C00820B8();
        sub_1C152080C();
        v155[0] = v53;
        v155[1] = v44;
        char v157 = 1;
        sub_1C0081F4C();
        sub_1C152080C();
        uint64_t v62 = v150;
        sub_1BFF8F648(v53, v44);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v55, v52);
  }
}

uint64_t sub_1BFDDB28C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return FormatCommandValue.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t FormatCommandValue.encode(to:)(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v42 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v43 = (char *)&v40 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = a2[2];
  uint64_t v12 = a2[4];
  uint64_t v46 = a2[3];
  uint64_t v47 = v11;
  uint64_t v45 = v12;
  uint64_t v13 = _s10CodingKeysOMa_174();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v16 = swift_getWitnessTable();
  *(void *)&long long v52 = v13;
  *((void *)&v52 + 1) = WitnessTable;
  uint64_t v53 = v15;
  uint64_t v54 = v16;
  uint64_t v17 = type metadata accessor for FormatCodingKeysContainer();
  uint64_t v18 = swift_getWitnessTable();
  sub_1C152083C();
  swift_getWitnessTable();
  uint64_t v19 = type metadata accessor for VersionedKeyedEncodingContainer();
  uint64_t v48 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v40 - v20;
  uint64_t v23 = a1[3];
  uint64_t v22 = a1[4];
  uint64_t v24 = __swift_project_boxed_opaque_existential_1(a1, v23);
  long long v41 = a2;
  sub_1BFEFBD78((uint64_t)a2, (uint64_t)v24, v23, (uint64_t)a2, v17, (uint64_t)&type metadata for FormatVersions.JazzkonC, v22, (uint64_t)v21, v18, (uint64_t)&off_1F1C39B68);
  uint64_t v55 = *v50;
  long long v52 = 0uLL;
  LOBYTE(v53) = 0;
  uint64_t v25 = qword_1EB882D28;
  swift_retain();
  if (v25 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1C151928C();
  uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1EB93CAB0);
  unint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
  v44(v10, v27, v26);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  unint64_t v28 = sub_1BFDDB8E8();
  uint64_t v29 = v49;
  sub_1BFEFFFF0((uint64_t)&v55, (uint64_t)&v52, (uint64_t)v10, (uint64_t)sub_1C01B158C, 0, v19, (uint64_t)&type metadata for FormatCommand, v28);
  sub_1BFEFEB68((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (v29) {
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v21, v19);
  }
  uint64_t v55 = v50[1];
  long long v52 = xmmword_1C153AB20;
  LOBYTE(v53) = 0;
  uint64_t v31 = v27;
  uint64_t v32 = (uint64_t)v43;
  uint64_t v49 = v31;
  ((void (*)(char *))v44)(v43);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for FormatCommandValue.CaseValue();
  uint64_t v33 = v19;
  uint64_t v34 = sub_1C151ED5C();
  swift_bridgeObjectRetain();
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v35 = swift_getWitnessTable();
  sub_1BFEFFFF0((uint64_t)&v55, (uint64_t)&v52, v32, (uint64_t)sub_1C01B158C, 0, v33, v34, v35);
  sub_1BFEFEB68(v32, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v36 = (uint64_t)v42;
  uint64_t v37 = (uint64_t)v50 + *((int *)v41 + 12);
  long long v52 = xmmword_1C1557FA0;
  LOBYTE(v53) = 0;
  v44(v42, v49, v26);
  swift_storeEnumTagMultiPayload();
  uint64_t v38 = type metadata accessor for FormatCommandValue.DefaultValue();
  uint64_t v39 = swift_getWitnessTable();
  sub_1BFEFFFF0(v37, (uint64_t)&v52, v36, (uint64_t)sub_1C01B158C, 0, v33, v38, v39);
  sub_1BFEFEB68(v36, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, void))(v48 + 8))(v21, 0);
}

unint64_t sub_1BFDDB8E8()
{
  unint64_t result = qword_1EB85B6F0;
  if (!qword_1EB85B6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B6F0);
  }
  return result;
}

uint64_t FormatCommandValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v69 = a5;
  uint64_t v59 = type metadata accessor for FormatCommandValue.DefaultValue();
  uint64_t v68 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v57 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v58 = (char *)&v53 - v11;
  uint64_t v62 = a2;
  uint64_t v63 = a3;
  uint64_t v64 = a4;
  uint64_t v12 = _s10CodingKeysOMa_174();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v15 = swift_getWitnessTable();
  *(void *)&long long v71 = v12;
  *((void *)&v71 + 1) = WitnessTable;
  uint64_t v60 = v14;
  uint64_t v61 = WitnessTable;
  uint64_t v72 = v14;
  uint64_t v73 = v15;
  uint64_t v16 = type metadata accessor for FormatCodingKeysContainer();
  swift_getWitnessTable();
  uint64_t v17 = sub_1C152072C();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v65 = v17;
  uint64_t v66 = v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v53 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v21 = (void *)v67;
  sub_1C1520EBC();
  uint64_t v22 = v21;
  if (v21) {
    goto LABEL_15;
  }
  uint64_t v54 = v15;
  uint64_t v55 = v12;
  uint64_t v67 = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v23 = sub_1C1520EAC();
  uint64_t v24 = Dictionary<>.errorOnUnknownKeys.getter(v23);
  swift_bridgeObjectRelease();
  uint64_t v25 = v68;
  uint64_t v26 = v69;
  uint64_t v27 = v65;
  uint64_t v28 = v66;
  uint64_t v29 = v20;
  if ((v24 & 1) == 0)
  {
LABEL_11:
    sub_1BFDDBFF8();
    long long v71 = 0uLL;
    LOBYTE(v72) = 0;
    uint64_t v42 = (void *)v67;
    sub_1C15206EC();
    uint64_t v22 = v42;
    if (!v42)
    {
      uint64_t v56 = a1;
      uint64_t v67 = v74;
      type metadata accessor for FormatCommandValue.CaseValue();
      uint64_t v43 = v27;
      sub_1C151ED5C();
      long long v71 = xmmword_1C153AB20;
      LOBYTE(v72) = 0;
      uint64_t v70 = swift_getWitnessTable();
      swift_getWitnessTable();
      sub_1C15206EC();
      uint64_t v48 = v67;
      uint64_t v66 = v74;
      long long v71 = xmmword_1C1557FA0;
      LOBYTE(v72) = 0;
      uint64_t v49 = v59;
      swift_getWitnessTable();
      uint64_t v50 = v58;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v43);
      *(void *)&long long v71 = v48;
      uint64_t v51 = (uint64_t)v57;
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v57, v50, v49);
      sub_1BFDDC04C(&v71, v66, v51, v26);
      uint64_t v52 = (uint64_t)v56;
      return __swift_destroy_boxed_opaque_existential_1(v52);
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v27);
LABEL_15:
    sub_1C0038728(a1, (uint64_t)v22);
    swift_willThrow();

    uint64_t v52 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v52);
  }
  uint64_t v30 = sub_1C152070C();
  if (!MEMORY[0x1C18C6870](v30, v16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v53 = v20;
  uint64_t v56 = a1;
  uint64_t v31 = 0;
  uint64_t v32 = (char *)(v30 + 48);
  while (1)
  {
    char v33 = sub_1C151ECDC();
    uint64_t result = sub_1C151EC7C();
    if ((v33 & 1) == 0) {
      break;
    }
    uint64_t v35 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      goto LABEL_18;
    }
    uint64_t v37 = *((void *)v32 - 2);
    uint64_t v36 = *((void *)v32 - 1);
    char v38 = *v32;
    *(void *)&long long v71 = v37;
    *((void *)&v71 + 1) = v36;
    LOBYTE(v72) = v38;
    sub_1BFE94AB4(v37, v36, v38);
    uint64_t v39 = sub_1C0D990EC(v16);
    if (v40)
    {
      uint64_t v44 = v40;
      uint64_t v45 = v39;
      swift_bridgeObjectRelease();
      uint64_t v46 = sub_1C0D98F50(v55, v61, v60, v54);
      sub_1C02570B4();
      uint64_t v22 = (void *)swift_allocError();
      *(void *)uint64_t v47 = v45;
      *(void *)(v47 + 8) = v44;
      *(void *)(v47 + 16) = v46;
      *(_OWORD *)(v47 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v71, *((uint64_t *)&v71 + 1), v72);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v53, v65);
      a1 = v56;
      goto LABEL_15;
    }
    sub_1BFE94AD4(v37, v36, v38);
    uint64_t v41 = MEMORY[0x1C18C6870](v30, v16);
    ++v31;
    v32 += 24;
    uint64_t v25 = v68;
    if (v35 == v41)
    {
      uint64_t v26 = v69;
      swift_bridgeObjectRelease();
      a1 = v56;
      uint64_t v27 = v65;
      uint64_t v28 = v66;
      uint64_t v29 = v53;
      goto LABEL_11;
    }
  }
  uint64_t result = sub_1C152016C();
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t _s10CodingKeysOMa_174()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1BFDDBFF8()
{
  unint64_t result = qword_1EB874420;
  if (!qword_1EB874420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874420);
  }
  return result;
}

uint64_t sub_1BFDDC04C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = *a1;
  a4[1] = a2;
  uint64_t v5 = (char *)a4 + *(int *)(type metadata accessor for FormatCommandValue() + 48);
  uint64_t v6 = type metadata accessor for FormatCommandValue.DefaultValue();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  return v7(v5, a3, v6);
}

uint64_t type metadata accessor for FormatCommandValue.DefaultValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FormatCommandValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFDDC134@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return FormatLocalizationCollection.init(from:)(a1, a2);
}

uint64_t sub_1BFDDC14C(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BFDDC374();
  sub_1BFDDC404(&qword_1EB85C360, &qword_1EB85B670);
  sub_1C1520B2C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t FormatLocalizationCollection.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520E9C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1BFDDC374();
    sub_1BFDDC404(&qword_1EB85C368, &qword_1EB85B678);
    sub_1C1520AEC();
    sub_1BFDDC494(v8[6], &v7);
    long long v6 = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    *a2 = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BFDDC374()
{
  if (!qword_1EB879D58)
  {
    sub_1C0158DBC(255, (unint64_t *)&qword_1EB874190, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879D58);
    }
  }
}

uint64_t sub_1BFDDC404(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFDDC374();
    sub_1BFDDCD88(a2, (void (*)(uint64_t))sub_1BFFC2244);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFDDC494(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v47 = a2;
  sub_1BFFC2244();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v52 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = *(void *)(a1 + 16);
  if (!v49)
  {
    long long v7 = (void *)MEMORY[0x1E4FBC868];
LABEL_25:
    uint64_t v46 = v47;
    *uint64_t v47 = a1;
    v46[1] = v7;
    return;
  }
  uint64_t v51 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  long long v7 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v50 = a1;
  uint64_t v48 = v4;
  while (1)
  {
    if (v6 >= *(void *)(a1 + 16)) {
      goto LABEL_30;
    }
    uint64_t v8 = *(void *)(v4 + 72);
    uint64_t v9 = v52;
    uint64_t v53 = v6;
    sub_1BFDDCD24(v51 + v8 * v6, v52);
    uint64_t v10 = *(void *)(v9 + 48);
    swift_bridgeObjectRetain();
    sub_1BFDDCCC8(v9);
    uint64_t v11 = *(void *)(v10 + 16);
    uint64_t v54 = v10;
    if (v11) {
      break;
    }
LABEL_3:
    unint64_t v6 = v53 + 1;
    swift_bridgeObjectRelease();
    a1 = v50;
    uint64_t v4 = v48;
    if (v6 == v49)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
  uint64_t v12 = (uint64_t *)(v10 + 64);
  while (1)
  {
    uint64_t v15 = *(v12 - 4);
    uint64_t v16 = *(v12 - 3);
    uint64_t v17 = *(v12 - 1);
    uint64_t v57 = *(v12 - 2);
    uint64_t v18 = *v12;
    uint64_t v19 = v7[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19)
    {
      swift_bridgeObjectRetain();
      unint64_t v20 = sub_1BFEF2D8C(v15, v16);
      if (v21)
      {
        char v38 = (uint64_t *)(v7[7] + 40 * v20);
        uint64_t v39 = *v38;
        uint64_t v53 = v18;
        uint64_t v40 = v38[1];
        uint64_t v55 = v38[2];
        uint64_t v56 = v39;
        uint64_t v42 = v38[3];
        uint64_t v41 = v38[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        type metadata accessor for FormatPackageError();
        sub_1BFDDCD88((unint64_t *)&qword_1EA198A90, (void (*)(uint64_t))type metadata accessor for FormatPackageError);
        swift_allocError();
        *uint64_t v43 = v15;
        v43[1] = v16;
        void v43[2] = v57;
        v43[3] = v17;
        uint64_t v44 = v56;
        v43[4] = v53;
        v43[5] = v44;
        uint64_t v45 = v55;
        v43[6] = v40;
        v43[7] = v45;
        v43[8] = v42;
        v43[9] = v41;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v55 = v11;
    swift_bridgeObjectRetain_n();
    uint64_t v56 = v17;
    swift_bridgeObjectRetain();
    uint64_t v22 = v18;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v58 = v7;
    unint64_t v25 = sub_1BFEF2D8C(v15, v16);
    uint64_t v26 = v7[2];
    BOOL v27 = (v24 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27)) {
      break;
    }
    char v29 = v24;
    if (v7[3] >= v28)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        long long v7 = v58;
        if (v24) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_1C106BA24();
        long long v7 = v58;
        if (v29) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_1BFDDC91C(v28, isUniquelyReferenced_nonNull_native);
      unint64_t v30 = sub_1BFEF2D8C(v15, v16);
      if ((v29 & 1) != (v31 & 1)) {
        goto LABEL_31;
      }
      unint64_t v25 = v30;
      long long v7 = v58;
      if (v29)
      {
LABEL_7:
        uint64_t v13 = (uint64_t *)(v7[7] + 40 * v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *uint64_t v13 = v15;
        v13[1] = v16;
        uint64_t v14 = v56;
        v13[2] = v57;
        v13[3] = v14;
        v13[4] = v22;
        goto LABEL_8;
      }
    }
    v7[(v25 >> 6) + 8] |= 1 << v25;
    uint64_t v32 = (uint64_t *)(v7[6] + 16 * v25);
    *uint64_t v32 = v15;
    v32[1] = v16;
    char v33 = (uint64_t *)(v7[7] + 40 * v25);
    *char v33 = v15;
    v33[1] = v16;
    uint64_t v34 = v56;
    v33[2] = v57;
    v33[3] = v34;
    v33[4] = v22;
    uint64_t v35 = v7[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_29;
    }
    v7[2] = v37;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v12 += 5;
    uint64_t v11 = v55 - 1;
    if (v55 == 1) {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  sub_1C1520CFC();
  __break(1u);
}

uint64_t sub_1BFDDC91C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1BFDDCC60();
  char v40 = a2;
  uint64_t v6 = sub_1C15204EC();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      char v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      uint64_t v32 = (uint64_t *)(*(void *)(v5 + 56) + 40 * v21);
      uint64_t v33 = v32[1];
      uint64_t v34 = v32[3];
      uint64_t v41 = *v32;
      uint64_t v42 = v32[2];
      uint64_t v35 = v32[4];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1C1520DBC();
      sub_1C151E77C();
      uint64_t result = sub_1C1520E0C();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *uint64_t v18 = v30;
      v18[1] = v31;
      uint64_t v19 = (void *)(*(void *)(v7 + 56) + 40 * v17);
      void *v19 = v41;
      v19[1] = v33;
      v19[2] = v42;
      v19[3] = v34;
      v19[4] = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_1BFDDCC60()
{
  if (!qword_1EB87A430)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A430);
    }
  }
}

uint64_t sub_1BFDDCCC8(uint64_t a1)
{
  sub_1BFFC2244();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BFDDCD24(uint64_t a1, uint64_t a2)
{
  sub_1BFFC2244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFDDCD88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFDDCDD0(void *a1)
{
  return FormatContent.Resolved.encode(to:)(a1);
}

uint64_t FormatContent.Resolved.encode(to:)(void *a1)
{
  sub_1BFEE3854(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v40 = (uint64_t)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE38BBC(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v41 = (uint64_t)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0BF5AE8();
  uint64_t v42 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v43 = (uint64_t)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC8548(0);
  uint64_t v44 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0BF5B6C();
  uint64_t v46 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v47 = (uint64_t)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09D684C();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF01444(0, &qword_1EB85C648, (uint64_t (*)(void))sub_1BFDDEEC8, (uint64_t)&_s8ResolvedV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  unint64_t v20 = (char *)v38 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFDDEEC8();
  uint64_t v21 = v49;
  sub_1C1520F0C();
  LOBYTE(v51) = 0;
  int64_t v22 = v48;
  sub_1C15207CC();
  if (!v22)
  {
    v38[3] = v13;
    uint64_t v39 = v15;
    uint64_t v48 = (int *)type metadata accessor for FormatContent.Resolved();
    LOBYTE(v51) = 1;
    sub_1C151631C();
    sub_1BFF87894((unint64_t *)&unk_1EB871150, MEMORY[0x1E4F27928]);
    sub_1C152080C();
    unint64_t v23 = v48;
    uint64_t v51 = *(void *)(v21 + v48[6]);
    char v50 = 2;
    sub_1BFEF9B1C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    uint64_t v25 = v24;
    uint64_t v26 = sub_1BFD4A970((unint64_t *)&qword_1EB85DF50);
    sub_1C152080C();
    v38[1] = v26;
    v38[2] = v25;
    uint64_t v51 = *(void *)(v21 + v23[7]);
    char v50 = 3;
    sub_1C00BB2E0(0);
    sub_1BFDDEF1C(&qword_1EB85C430, sub_1C00BB2E0, (void (*)(void))sub_1C0BF5DB0);
    sub_1C152080C();
    uint64_t v51 = *(void *)(v21 + v23[8]);
    char v50 = 4;
    sub_1BFEF9B1C(0, (unint64_t *)&unk_1EB890010, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, MEMORY[0x1E4FBB320]);
    sub_1C0BF5DE4(&qword_1EB86B110, (void (*)(void))sub_1C007594C);
    sub_1C152080C();
    uint64_t v51 = *(void *)(v21 + v23[9]);
    char v50 = 5;
    sub_1BFD48758(0);
    sub_1BFDDEF1C((unint64_t *)&qword_1EB85C3C0, sub_1BFD48758, (void (*)(void))sub_1C0083014);
    sub_1C152080C();
    uint64_t v51 = *(void *)(v21 + v23[10]);
    char v50 = 6;
    sub_1BFE82920(0, (unint64_t *)&qword_1EB87A010, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBB510]);
    sub_1BFE38A3C((unint64_t *)&qword_1EB85C4F0);
    sub_1C152080C();
    uint64_t v27 = swift_unknownObjectRetain();
    uint64_t v28 = (uint64_t)v39;
    sub_1BFDE05DC(v27, (uint64_t)v39);
    LOBYTE(v51) = 7;
    sub_1BFDDEF1C(&qword_1EB85ABE8, (void (*)(uint64_t))sub_1C09D684C, (void (*)(void))sub_1C0BF5E74);
    sub_1C152080C();
    sub_1BFECF0C4(v28, (uint64_t (*)(void))sub_1C09D684C);
    char v29 = *(void **)(v21 + v23[12]);
    id v30 = v29;
    uint64_t v31 = v47;
    sub_1BFDE008C(v29, v47);
    LOBYTE(v51) = 8;
    sub_1BFDDEF1C(&qword_1EB85F328, (void (*)(uint64_t))sub_1C0BF5B6C, (void (*)(void))sub_1C0BF5EF8);
    sub_1C152080C();
    sub_1BFECF0C4(v31, (uint64_t (*)(void))sub_1C0BF5B6C);
    uint64_t v32 = swift_unknownObjectRetain();
    uint64_t v33 = v45;
    sub_1BFDE0354(v32, v45);
    LOBYTE(v51) = 12;
    sub_1BFDDEF1C(&qword_1EB85AC08, sub_1BFEC8548, (void (*)(void))sub_1BFE0AB9C);
    sub_1C152080C();
    sub_1BFECF0C4(v33, (uint64_t (*)(void))sub_1BFEC8548);
    LOBYTE(v51) = 13;
    sub_1BFEE6554(0);
    sub_1BFDDEF1C(&qword_1EB865B98, sub_1BFEE6554, (void (*)(void))sub_1C0BF5F7C);
    sub_1C152080C();
    uint64_t v51 = *(void *)(v49 + v48[17]);
    char v50 = 10;
    sub_1C152080C();
    uint64_t v34 = *(void **)(v49 + v48[15]);
    id v35 = v34;
    sub_1BFDE08A8(v34, v43);
    LOBYTE(v51) = 9;
    sub_1BFDDEF1C(&qword_1EB85ABA8, (void (*)(uint64_t))sub_1C0BF5AE8, (void (*)(void))sub_1C0BF5FB0);
    sub_1C152080C();
    sub_1BFECF0C4(v43, (uint64_t (*)(void))sub_1C0BF5AE8);
    LOBYTE(v51) = *(unsigned char *)(v49 + v48[16]);
    char v50 = 11;
    sub_1BFEF9B1C(0, &qword_1EB85E5C8, (uint64_t)&type metadata for FeedSubscriptionPaidAccess, MEMORY[0x1E4FBB718]);
    sub_1BFDDFF60();
    sub_1C152080C();
    uint64_t v37 = v40;
    sub_1C0BF9308(v49 + v48[18], v40, (uint64_t (*)(void))sub_1BFEE3854);
    Reference<A>.init(value:)(v37, v41);
    LOBYTE(v51) = 14;
    sub_1BFE38BF0(0);
    sub_1BFF87894((unint64_t *)&unk_1EB8611B0, sub_1BFE38BF0);
    sub_1C152078C();
    sub_1BFECF0C4(v41, (uint64_t (*)(void))sub_1BFE38BBC);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
}

uint64_t sub_1BFDDDA14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void FormatContent.Resolved.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v84 = a2;
  sub_1C0BF5AE8();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v85 = (uint64_t)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE38BBC(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v87 = (uint64_t)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE3854(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v86 = (uint64_t)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE6554(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v88 = (uint64_t)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC8548(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v89 = (uint64_t)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0BF5B6C();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v92 = (uint64_t)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09D684C();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C151631C();
  uint64_t v90 = *(void *)(v18 - 8);
  uint64_t v91 = v18;
  MEMORY[0x1F4188790](v18);
  unint64_t v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF01444(0, (unint64_t *)&unk_1EB85C5B8, (uint64_t (*)(void))sub_1BFDDEEC8, (uint64_t)&_s8ResolvedV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v22 = v21;
  uint64_t v93 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v78 - v23;
  uint64_t v97 = (int *)type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1F4188790](v97);
  uint64_t v96 = (uint64_t *)((char *)&v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFDDEEC8();
  uint64_t v26 = v95;
  sub_1C1520EBC();
  if (v26)
  {
    uint64_t v95 = v26;
    uint64_t v31 = v96;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    int v94 = 0;
    int v32 = 0;
    LODWORD(v92) = 0;
    LODWORD(v93) = 0;
    uint64_t v33 = v97;
    goto LABEL_9;
  }
  uint64_t v27 = v20;
  uint64_t v28 = v17;
  uint64_t v83 = a1;
  LOBYTE(v99) = 0;
  uint64_t v29 = sub_1C152069C();
  uint64_t v30 = v22;
  uint64_t v34 = v96;
  *uint64_t v96 = v29;
  v34[1] = v35;
  LOBYTE(v99) = 1;
  sub_1BFF87894(&qword_1EB871168, MEMORY[0x1E4F27928]);
  uint64_t v36 = v27;
  uint64_t v37 = v24;
  uint64_t v38 = v91;
  sub_1C15206EC();
  uint64_t v39 = v97;
  (*(void (**)(char *, char *, uint64_t))(v90 + 32))((char *)v34 + v97[5], v36, v38);
  sub_1BFEF9B1C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  uint64_t v41 = v40;
  char v98 = 2;
  uint64_t v42 = sub_1BFD4A970((unint64_t *)&qword_1EB879F50);
  sub_1C15206EC();
  uint64_t v81 = v42;
  uint64_t v82 = v41;
  *(uint64_t *)((char *)v34 + v39[6]) = v99;
  sub_1C00BB2E0(0);
  char v98 = 3;
  sub_1BFDDEF1C(&qword_1EB85C438, sub_1C00BB2E0, (void (*)(void))sub_1C0BF5BF0);
  sub_1C15206EC();
  *(uint64_t *)((char *)v34 + v39[7]) = v99;
  sub_1BFEF9B1C(0, (unint64_t *)&unk_1EB890010, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, MEMORY[0x1E4FBB320]);
  char v98 = 4;
  sub_1C0BF5DE4(&qword_1EB86B118, (void (*)(void))sub_1C00758F8);
  sub_1C15206EC();
  *(uint64_t *)((char *)v34 + v39[8]) = v99;
  sub_1BFD48758(0);
  char v98 = 5;
  sub_1BFDDEF1C((unint64_t *)&qword_1EB879DA0, sub_1BFD48758, (void (*)(void))sub_1C0082FE0);
  sub_1C15206EC();
  *(uint64_t *)((char *)v34 + v39[9]) = v99;
  sub_1BFE82920(0, (unint64_t *)&qword_1EB87A010, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBB510]);
  char v98 = 6;
  sub_1BFE38A3C((unint64_t *)&qword_1EB87A020);
  sub_1C152065C();
  uint64_t v43 = MEMORY[0x1E4FBC870];
  if (v99) {
    uint64_t v43 = v99;
  }
  *(uint64_t *)((char *)v34 + v39[10]) = v43;
  sub_1C0BF59D0(0, (unint64_t *)&unk_1EB85ABD0, (uint64_t)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  uint64_t v45 = v44;
  LOBYTE(v99) = 7;
  sub_1C0BF5C24();
  uint64_t v46 = (uint64_t)v28;
  sub_1C152065C();
  uint64_t v79 = v37;
  uint64_t v80 = v30;
  uint64_t v47 = *(void *)(v45 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v46, 1, v45) == 1)
  {
    sub_1BFECF0C4(v46, (uint64_t (*)(void))sub_1C09D684C);
    uint64_t v48 = 0;
  }
  else
  {
    sub_1C151948C();
    uint64_t v48 = v99;
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v45);
  }
  *(uint64_t *)((char *)v34 + v97[11]) = v48;
  sub_1C0BF59D0(0, (unint64_t *)&unk_1EB85E4C0, (uint64_t)&qword_1EB87B090, 0x1E4F7E4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
  uint64_t v50 = v49;
  LOBYTE(v99) = 8;
  sub_1C0BF5CA8();
  uint64_t v51 = v92;
  sub_1C152065C();
  int v94 = 1;
  uint64_t v52 = *(void *)(v50 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v51, 1, v50) == 1)
  {
    sub_1BFECF0C4(v92, (uint64_t (*)(void))sub_1C0BF5B6C);
    uint64_t v53 = 0;
  }
  else
  {
    uint64_t v54 = v92;
    sub_1C151948C();
    uint64_t v53 = v99;
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v54, v50);
  }
  *(uint64_t *)((char *)v96 + v97[12]) = v53;
  sub_1C0BF59D0(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  uint64_t v56 = v55;
  LOBYTE(v99) = 12;
  sub_1BFE0AB18();
  sub_1C152065C();
  uint64_t v95 = 0;
  uint64_t v57 = *(void *)(v56 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v89, 1, v56) == 1)
  {
    sub_1BFECF0C4(v89, (uint64_t (*)(void))sub_1BFEC8548);
    uint64_t v58 = 0;
  }
  else
  {
    uint64_t v59 = v89;
    sub_1C151948C();
    uint64_t v58 = v99;
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v59, v56);
  }
  *(uint64_t *)((char *)v96 + v97[13]) = v58;
  type metadata accessor for FormatWebEmbed.Resolved();
  LOBYTE(v99) = 13;
  sub_1BFF87894((unint64_t *)&unk_1EB85B7B8, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
  uint64_t v60 = v95;
  sub_1C152065C();
  uint64_t v95 = v60;
  if (v60)
  {
    (*(void (**)(char *, uint64_t))(v93 + 8))(v79, v80);
    LODWORD(v92) = 0;
    LODWORD(v93) = 0;
    int v32 = 1;
LABEL_32:
    uint64_t v31 = v96;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v90 + 8))((char *)v31 + v97[5], v91);
    uint64_t v33 = v97;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    if (v94)
    {

      goto LABEL_10;
    }
LABEL_9:
    if (!v32)
    {
      if (!v92) {
        goto LABEL_11;
      }
      goto LABEL_6;
    }
LABEL_10:
    swift_unknownObjectRelease();
    if ((v92 & 1) == 0)
    {
LABEL_11:
      if (!v93) {
        return;
      }
      goto LABEL_12;
    }
LABEL_6:
    sub_1BFECF0C4((uint64_t)v31 + v33[14], (uint64_t (*)(void))sub_1BFEE6554);
    if ((v93 & 1) == 0) {
      return;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  sub_1BFDDF6A4(v88, (uint64_t)v96 + v97[14], (uint64_t (*)(void))sub_1BFEE6554);
  char v98 = 10;
  uint64_t v61 = v95;
  sub_1C15206EC();
  uint64_t v95 = v61;
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v93 + 8))(v79, v80);
    LODWORD(v93) = 0;
    int v32 = 1;
    LODWORD(v92) = 1;
    goto LABEL_32;
  }
  *(uint64_t *)((char *)v96 + v97[17]) = v99;
  char v98 = 11;
  sub_1BFDDFFF4();
  uint64_t v62 = v95;
  sub_1C152065C();
  uint64_t v95 = v62;
  if (v62) {
    goto LABEL_31;
  }
  *((unsigned char *)v96 + v97[16]) = v99;
  sub_1BFE38BF0(0);
  uint64_t v64 = v63;
  LOBYTE(v99) = 14;
  sub_1BFF87894(&qword_1EB884880, sub_1BFE38BF0);
  uint64_t v65 = v95;
  sub_1C152065C();
  uint64_t v95 = v65;
  if (v65)
  {
LABEL_31:
    (*(void (**)(char *, uint64_t))(v93 + 8))(v79, v80);
    int v32 = 1;
    LODWORD(v92) = 1;
    LODWORD(v93) = 1;
    goto LABEL_32;
  }
  uint64_t v66 = *(void *)(v64 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v87, 1, v64) == 1)
  {
    sub_1BFECF0C4(v87, (uint64_t (*)(void))sub_1BFE38BBC);
    uint64_t v67 = sub_1C151D6DC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v86, 1, 1, v67);
  }
  else
  {
    uint64_t v69 = v86;
    uint64_t v68 = v87;
    sub_1C151948C();
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v68, v64);
    uint64_t v70 = sub_1C151D6DC();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v69, 0, 1, v70);
  }
  sub_1BFDDF6A4(v86, (uint64_t)v96 + v97[18], (uint64_t (*)(void))sub_1BFEE3854);
  sub_1C0BF59D0(0, &qword_1EB85AB98, (uint64_t)&qword_1EB85C530, 0x1E4F7E7F0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
  uint64_t v72 = v71;
  LOBYTE(v99) = 9;
  sub_1C0BF5D2C();
  uint64_t v73 = v95;
  sub_1C152065C();
  if (v73)
  {
    (*(void (**)(char *, uint64_t))(v93 + 8))(v79, v80);

    uint64_t v74 = 0;
  }
  else
  {
    uint64_t v75 = *(void *)(v72 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v85, 1, v72) == 1)
    {
      (*(void (**)(char *, uint64_t))(v93 + 8))(v79, v80);
      sub_1BFECF0C4(v85, (uint64_t (*)(void))sub_1C0BF5AE8);
      uint64_t v74 = 0;
    }
    else
    {
      uint64_t v76 = v85;
      sub_1C151948C();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v79, v80);
      uint64_t v74 = v99;
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v76, v72);
    }
  }
  uint64_t v77 = (uint64_t)v96;
  *(uint64_t *)((char *)v96 + v97[15]) = v74;
  sub_1C0BF9308(v77, v84, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
  sub_1BFECF0C4(v77, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
}

unint64_t sub_1BFDDEEC8()
{
  unint64_t result = qword_1EB85B700;
  if (!qword_1EB85B700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B700);
  }
  return result;
}

uint64_t sub_1BFDDEF1C(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FormatPluginFactory.prepare(content:)(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v42 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v39 = (uint64_t)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFECA220(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v44 = (char *)v38 - v6;
  uint64_t v45 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v7 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v9 = (void *)((char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t v10 = *(void *)(v1 + 192);
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v13 = sub_1BFF896B4(v11, v12, v10);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BFEFFC1C(&v50, v11, v12);
    swift_endAccess();
    swift_bridgeObjectRelease();
    type metadata accessor for FormatContent.Resolved();
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C0BF1170(v15);
    swift_bridgeObjectRelease();
    uint64_t v48 = *(void *)(v16 + 16);
    if (v48)
    {
      uint64_t v17 = *(void *)(v1 + 184);
      uint64_t v18 = (uint64_t *)(v17 + 136);
      uint64_t v19 = v7;
      unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v38[8] = v16;
      unint64_t v47 = v16 + v20;
      uint64_t v40 = v17 + 128;
      v38[7] = v17 + 120;
      v38[6] = v17 + 112;
      v38[5] = v17 + 104;
      void v38[4] = v17 + 96;
      v38[3] = v17 + 88;
      v38[2] = v17 + 80;
      uint64_t v43 = v17;
      v38[1] = v17 + 72;
      swift_beginAccess();
      uint64_t v21 = 0;
      uint64_t v46 = *(void *)(v19 + 72);
      v42 += 6;
      uint64_t v22 = (uint64_t)v44;
      uint64_t v41 = v18;
      while (1)
      {
        sub_1C0080F9C(v47 + v46 * v21, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
        uint64_t v23 = *v18;
        uint64_t v24 = *v9;
        uint64_t v25 = v9[1];
        if (!*(void *)(*v18 + 16)) {
          goto LABEL_22;
        }
        uint64_t v26 = v3;
        sub_1C1520DBC();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        uint64_t v27 = sub_1C1520E0C();
        uint64_t v28 = -1 << *(unsigned char *)(v23 + 32);
        unint64_t v29 = v27 & ~v28;
        if (((*(void *)(v23 + 56 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
          goto LABEL_21;
        }
        uint64_t v30 = *(void *)(v23 + 48);
        uint64_t v31 = (void *)(v30 + 16 * v29);
        BOOL v32 = *v31 == v24 && v31[1] == v25;
        if (!v32 && (sub_1C1520A9C() & 1) == 0) {
          break;
        }
LABEL_4:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v3 = v26;
        uint64_t v22 = (uint64_t)v44;
        uint64_t v18 = v41;
LABEL_5:
        ++v21;
        sub_1C0080F3C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
        if (v21 == v48) {
          return swift_bridgeObjectRelease();
        }
      }
      uint64_t v33 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v33;
        if (((*(void *)(v23 + 56 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
          break;
        }
        uint64_t v34 = (void *)(v30 + 16 * v29);
        BOOL v35 = *v34 == v24 && v34[1] == v25;
        if (v35 || (sub_1C1520A9C() & 1) != 0) {
          goto LABEL_4;
        }
      }
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = v26;
      uint64_t v22 = (uint64_t)v44;
      uint64_t v18 = v41;
LABEL_22:
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1BFEFFC1C(&v49, v24, v25);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_1C0AB2C18((uint64_t)v9 + *(int *)(v45 + 32), v22);
      if ((*v42)(v22, 1, v3) == 1)
      {
        sub_1C0AB2CAC(v22);
      }
      else
      {
        uint64_t v36 = v39;
        sub_1C0080F9C(v22, v39, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1C0080F3C(v36, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          sub_1C0080F3C(v22, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        }
        else
        {
          sub_1C0080F3C(v22, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          swift_release();
        }
      }
      swift_retain();
      uint64_t v37 = swift_retain();
      sub_1C0FB9A84(v37);
      swift_release();
      swift_release();
      goto LABEL_5;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FormatContentSubgroup.ResolvedContainer.webEmbeds.getter()
{
  return sub_1C104CF18(sub_1C1046A68);
}

uint64_t _s8ResolvedVwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0DEC420);
}

uint64_t sub_1BFDDF6A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFDDF70C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFDDF774(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFDDF7D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFEC0B68(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFDDF830(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFEC0BBC(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFDDF8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1BFDDF900(uint64_t result)
{
  uint64_t v3 = *(void *)(result + 16);
  uint64_t v4 = *(void **)v1;
  int64_t v5 = *(void *)(*(void *)v1 + 16);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = result;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6) {
      int64_t v10 = v5 + v3;
    }
    else {
      int64_t v10 = v5;
    }
    uint64_t v4 = sub_1C0EE03E0(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    int64_t v9 = v4[3] >> 1;
  }
  uint64_t v11 = v4[2];
  uint64_t v12 = v9 - v11;
  uint64_t result = sub_1BFDDFD18((uint64_t)v40, &v4[2 * v11 + 4], v9 - v11, v7);
  if (result < v3) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, result);
    uint64_t v15 = v13 + result;
    if (v14)
    {
      __break(1u);
      goto LABEL_51;
    }
    v4[2] = v15;
  }
  if (result != v12) {
    goto LABEL_13;
  }
LABEL_16:
  int64_t v2 = v4[2];
  uint64_t v7 = v41;
  uint64_t v38 = v40[1];
  uint64_t v39 = v40[0];
  int64_t v6 = v42;
  uint64_t v37 = v41;
  if (!v43)
  {
LABEL_51:
    int64_t v30 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      return result;
    }
    int64_t v21 = (unint64_t)(v7 + 64) >> 6;
    if (v30 >= v21) {
      goto LABEL_13;
    }
    unint64_t v34 = *(void *)(v38 + 8 * v30);
    if (!v34)
    {
      int64_t v35 = v6 + 2;
      if (v6 + 2 >= v21) {
        goto LABEL_13;
      }
      unint64_t v34 = *(void *)(v38 + 8 * v35);
      if (v34)
      {
LABEL_59:
        int64_t v30 = v35;
      }
      else
      {
        if (v6 + 3 >= v21) {
          goto LABEL_13;
        }
        unint64_t v34 = *(void *)(v38 + 8 * (v6 + 3));
        if (!v34) {
          goto LABEL_65;
        }
        int64_t v30 = v6 + 3;
      }
    }
LABEL_54:
    unint64_t v16 = (v34 - 1) & v34;
    unint64_t v17 = __clz(__rbit64(v34)) + (v30 << 6);
    int64_t v6 = v30;
    uint64_t v7 = v37;
    goto LABEL_18;
  }
  unint64_t v16 = (v43 - 1) & v43;
  unint64_t v17 = __clz(__rbit64(v43)) | (v42 << 6);
LABEL_18:
  uint64_t v18 = (uint64_t *)(*(void *)(v39 + 56) + 16 * v17);
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v19) {
    goto LABEL_13;
  }
  int64_t v22 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    unint64_t v23 = v4[3];
    int64_t v24 = v23 >> 1;
    if ((uint64_t)(v23 >> 1) < v2 + 1)
    {
      uint64_t v4 = sub_1C0EE03E0((void *)(v23 > 1), v2 + 1, 1, v4);
      int64_t v24 = v4[3] >> 1;
    }
    if (v2 < v24) {
      break;
    }
LABEL_20:
    v4[2] = v2;
    if (!v19) {
      goto LABEL_13;
    }
  }
  while (1)
  {
    unint64_t v29 = &v4[2 * v2 + 4];
    *unint64_t v29 = v19;
    v29[1] = v20;
    ++v2;
    if (!v16) {
      break;
    }
    unint64_t v25 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v26 = v25 | (v6 << 6);
LABEL_26:
    uint64_t v27 = (uint64_t *)(*(void *)(v39 + 56) + 16 * v26);
    uint64_t v19 = *v27;
    uint64_t v20 = v27[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19) {
      BOOL v28 = v2 < v24;
    }
    else {
      BOOL v28 = 0;
    }
    if (!v28) {
      goto LABEL_20;
    }
  }
  int64_t v30 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v30 >= v22) {
      goto LABEL_55;
    }
    unint64_t v31 = *(void *)(v38 + 8 * v30);
    if (v31) {
      goto LABEL_41;
    }
    int64_t v32 = v6 + 2;
    if (v6 + 2 >= v22) {
      goto LABEL_55;
    }
    unint64_t v31 = *(void *)(v38 + 8 * v32);
    if (!v31)
    {
      if (v6 + 3 >= v22) {
        goto LABEL_55;
      }
      unint64_t v31 = *(void *)(v38 + 8 * (v6 + 3));
      if (v31)
      {
        int64_t v30 = v6 + 3;
        goto LABEL_41;
      }
      int64_t v32 = v6 + 4;
      if (v6 + 4 >= v22) {
        goto LABEL_55;
      }
      unint64_t v31 = *(void *)(v38 + 8 * v32);
      if (!v31)
      {
        int64_t v30 = v6 + 5;
        if (v6 + 5 >= v22) {
          goto LABEL_55;
        }
        unint64_t v31 = *(void *)(v38 + 8 * v30);
        if (!v31)
        {
          int64_t v33 = v6 + 6;
          while (v22 != v33)
          {
            unint64_t v31 = *(void *)(v38 + 8 * v33++);
            if (v31)
            {
              int64_t v30 = v33 - 1;
              goto LABEL_41;
            }
          }
LABEL_55:
          v4[2] = v2;
          goto LABEL_13;
        }
        goto LABEL_41;
      }
    }
    int64_t v30 = v32;
LABEL_41:
    unint64_t v16 = (v31 - 1) & v31;
    unint64_t v26 = __clz(__rbit64(v31)) + (v30 << 6);
    int64_t v6 = v30;
    goto LABEL_26;
  }
  __break(1u);
LABEL_65:
  int64_t v35 = v30 + 3;
  if (v30 + 3 < v21)
  {
    unint64_t v34 = *(void *)(v38 + 8 * v35);
    if (v34) {
      goto LABEL_59;
    }
    v30 += 4;
    if (v30 >= v21) {
      goto LABEL_13;
    }
    unint64_t v34 = *(void *)(v38 + 8 * v30);
    if (!v34)
    {
      int64_t v36 = v6 + 6;
      while (v21 != v36)
      {
        unint64_t v34 = *(void *)(v38 + 8 * v36++);
        if (v34)
        {
          int64_t v30 = v36 - 1;
          goto LABEL_54;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_13:
  uint64_t result = sub_1BFEFB808();
  *(void *)uint64_t v1 = v4;
  return result;
}

uint64_t sub_1BFDDFD18(uint64_t result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  int64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *int64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *uint64_t v11 = *(_OWORD *)(*(void *)(a4 + 56) + 16 * v16);
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v20;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1BFDDFF34(uint64_t a1)
{
  return sub_1C104B958(a1, (uint64_t (*)(void))sub_1C00313F4, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
}

unint64_t sub_1BFDDFF60()
{
  unint64_t result = qword_1EB85EA60;
  if (!qword_1EB85EA60)
  {
    sub_1BFEF9B1C(255, &qword_1EB85E5C8, (uint64_t)&type metadata for FeedSubscriptionPaidAccess, MEMORY[0x1E4FBB718]);
    sub_1C00875CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EA60);
  }
  return result;
}

unint64_t sub_1BFDDFFF4()
{
  unint64_t result = qword_1EB85E5C0;
  if (!qword_1EB85E5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E5C0);
  }
  return result;
}

uint64_t sub_1BFDE0048(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFEC84E0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFDE008C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C151829C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0BF5B6C();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = a1;
  uint64_t v11 = qword_1EB85E858;
  id v12 = a1;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB85E838);
  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13, v4);
  MEMORY[0x1F4188790](v14);
  v20[-2] = sub_1BFC39268(0, (unint64_t *)&qword_1EB87B090);
  swift_getKeyPath();
  sub_1C151946C();

  sub_1C0BF59D0(0, (unint64_t *)&unk_1EB85E4C0, (uint64_t)&qword_1EB87B090, 0x1E4F7E4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v10, 1, v15))
  {
    sub_1BFECF0C4((uint64_t)v10, (uint64_t (*)(void))sub_1C0BF5B6C);
    uint64_t v18 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v10, v16);
    uint64_t v18 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a2, v18, 1, v16);
}

uint64_t sub_1BFDE0354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C151829C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC8548(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = a1;
  uint64_t v11 = qword_1EB85E870;
  swift_unknownObjectRetain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB85AB00);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
  MEMORY[0x1F4188790](v13);
  v19[-2] = sub_1BFF91B1C();
  swift_getKeyPath();
  sub_1C151946C();
  swift_unknownObjectRelease();
  sub_1BFEC84E0();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v14))
  {
    sub_1C00912C8((uint64_t)v10, (uint64_t (*)(void))sub_1BFEC8548);
    uint64_t v17 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a2, v10, v15);
    uint64_t v17 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, v17, 1, v15);
}

uint64_t sub_1BFDE05DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C151829C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09D684C();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = a1;
  uint64_t v11 = qword_1EB85E820;
  swift_unknownObjectRetain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB85AAB0);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
  MEMORY[0x1F4188790](v13);
  v19[-2] = sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A160);
  swift_getKeyPath();
  sub_1C151946C();
  swift_unknownObjectRelease();
  sub_1C09D5C10(0, (unint64_t *)&unk_1EB85ABD0, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding, MEMORY[0x1E4FAB160]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v14))
  {
    sub_1BFDDDA14((uint64_t)v10, (uint64_t (*)(void))sub_1C09D684C);
    uint64_t v17 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a2, v10, v15);
    uint64_t v17 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, v17, 1, v15);
}

uint64_t sub_1BFDE08A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C151829C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0BF5AE8();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = a1;
  uint64_t v11 = qword_1EB85E818;
  id v12 = a1;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB85AA98);
  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13, v4);
  MEMORY[0x1F4188790](v14);
  v20[-2] = sub_1BFC39268(0, (unint64_t *)&qword_1EB85C530);
  swift_getKeyPath();
  sub_1C151946C();

  sub_1C0BF59D0(0, &qword_1EB85AB98, (uint64_t)&qword_1EB85C530, 0x1E4F7E7F0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v10, 1, v15))
  {
    sub_1BFECF0C4((uint64_t)v10, (uint64_t (*)(void))sub_1C0BF5AE8);
    uint64_t v18 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v10, v16);
    uint64_t v18 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a2, v18, 1, v16);
}

uint64_t Reference<A>.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C151829C();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v40 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7ACE8];
  sub_1BFDE101C(0, (unint64_t *)&unk_1EB8812B0, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FAB160]);
  uint64_t v41 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v37 = (char *)&v32 - v9;
  sub_1BFDE101C(0, (unint64_t *)&unk_1EB882A00, v6, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)&v32 - v11;
  uint64_t v13 = sub_1C151D6DC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  int64_t v19 = (char *)&v32 - v18;
  sub_1BFDE1150(a1, (uint64_t)v12, (unint64_t *)&unk_1EB882A00, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    uint64_t v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7ACE8];
    sub_1BFDE10E0(a1, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
    sub_1BFDE10E0((uint64_t)v12, (unint64_t *)&unk_1EB882A00, v20);
    uint64_t v21 = v41;
  }
  else
  {
    uint64_t v35 = a1;
    uint64_t v36 = a2;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
    int64_t v22 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v22(v16, v19, v13);
    uint64_t v33 = sub_1C151D63C();
    uint64_t v24 = v23;
    uint64_t v32 = sub_1C151D66C();
    uint64_t v26 = v25;
    unint64_t v34 = *(void (**)(char *, uint64_t))(v14 + 8);
    v34(v16, v13);
    v22(v16, v19, v13);
    if (qword_1EB862940 != -1) {
      swift_once();
    }
    uint64_t v27 = v39;
    uint64_t v28 = __swift_project_value_buffer(v39, (uint64_t)qword_1EB861180);
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v40, v28, v27);
    sub_1C05F52A8(v33, v24, v32, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v29 = v37;
    sub_1C151945C();
    sub_1BFDE10E0(v35, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
    int64_t v30 = v29;
    uint64_t v21 = v41;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v30, v41);
    v34(v19, v13);
    a2 = v36;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, 1, 1, v21);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  uint64_t v23 = a2;
  uint64_t v21 = sub_1C151829C();
  uint64_t v3 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  int64_t v22 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151D6DC();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v10(v9, a1, v5, v7);
  uint64_t v20 = sub_1C151D63C();
  id v12 = v11;
  int64_t v19 = sub_1C151D66C();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v9, v5);
  uint64_t v24 = a1;
  ((void (*)(char *, uint64_t, uint64_t))v10)(v9, a1, v5);
  if (qword_1EB862940 != -1) {
    swift_once();
  }
  uint64_t v16 = v21;
  uint64_t v17 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB861180);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v22, v17, v16);
  sub_1C05F52A8(v20, v12, v19, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C151945C();
  return ((uint64_t (*)(uint64_t, uint64_t))v15)(v24, v5);
}

{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  int64_t v22 = a2;
  uint64_t v3 = sub_1C151829C();
  uint64_t v21 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDE101C(0, &qword_1EB865580, type metadata accessor for FeedWeather, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = type metadata accessor for FeedWeather(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v21 - v14;
  sub_1BFDE1150(a1, (uint64_t)v8, &qword_1EB865580, type metadata accessor for FeedWeather);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BFDE10E0(a1, &qword_1EB865580, type metadata accessor for FeedWeather);
    sub_1BFDE10E0((uint64_t)v8, &qword_1EB865580, type metadata accessor for FeedWeather);
    sub_1BFDE101C(0, (unint64_t *)&unk_1EB85E888, type metadata accessor for FeedWeather, MEMORY[0x1E4FAB160]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v22, 1, 1, v16);
  }
  else
  {
    uint64_t v18 = v22;
    sub_1C1451738((uint64_t)v8, (uint64_t)v15);
    uint64_t v23 = 0;
    uint64_t v24 = 0xE000000000000000;
    sub_1C151EF6C();
    sub_1C151E80C();
    sub_1C151EF6C();
    sub_1C0373C80((uint64_t)v15, (uint64_t)v12);
    if (qword_1EB85E868 != -1) {
      swift_once();
    }
    int64_t v19 = __swift_project_value_buffer(v3, (uint64_t)qword_1EB85AAE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v5, v19, v3);
    sub_1C151945C();
    sub_1BFDE10E0(a1, &qword_1EB865580, type metadata accessor for FeedWeather);
    sub_1C0085944((uint64_t)v15, type metadata accessor for FeedWeather);
    sub_1BFDE101C(0, (unint64_t *)&unk_1EB85E888, type metadata accessor for FeedWeather, MEMORY[0x1E4FAB160]);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 0, 1, v20);
  }
}

void sub_1BFDE101C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFDE1080(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFDE10E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFDE101C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFDE1150(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFDE101C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFDE11D0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE1358();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE1208@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE1358();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE1240@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0867BE0();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE1278@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFD7C68C();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE12B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE1358();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE12E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE1358();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE1320@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE1358();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE1358()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFDE13A0(void *a1, uint64_t a2)
{
  return FormatUserInterfaceValue.encode(to:)(a1, a2);
}

uint64_t FormatUserInterfaceValue.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v33 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v30 - v7;
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v36 = *(void *)(a2 + 16);
  uint64_t v10 = _s10CodingKeysOMa_12();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v13 = swift_getWitnessTable();
  *(void *)&long long v38 = v10;
  *((void *)&v38 + 1) = WitnessTable;
  uint64_t v39 = v12;
  uint64_t v40 = v13;
  uint64_t v14 = type metadata accessor for FormatCodingKeysContainer();
  uint64_t v15 = swift_getWitnessTable();
  sub_1C152083C();
  swift_getWitnessTable();
  uint64_t v41 = type metadata accessor for VersionedKeyedEncodingContainer();
  uint64_t v34 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  uint64_t v32 = a2;
  sub_1BFEFBD78(a2, v20, v18, a2, v14, (uint64_t)&type metadata for FormatVersions.JazzkonC, v19, (uint64_t)v17, v15, (uint64_t)&off_1F1C39B68);
  long long v38 = 0uLL;
  LOBYTE(v39) = 0;
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1C151928C();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB93CAB0);
  uint64_t v23 = *(void (**)(char *))(*(void *)(v21 - 8) + 16);
  uint64_t v31 = v22;
  v23(v8);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = *(void *)(v9 + 16);
  uint64_t v25 = v35;
  sub_1BFEFFFF0(v37, (uint64_t)&v38, (uint64_t)v8, (uint64_t)sub_1C01B158C, 0, v41, v36, v24);
  sub_1BFEFEB68((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  if (v25) {
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v41);
  }
  uint64_t v27 = (uint64_t)v33;
  uint64_t v28 = v37 + *(int *)(v32 + 36);
  long long v38 = xmmword_1C153AB20;
  LOBYTE(v39) = 0;
  ((void (*)(char *, uint64_t, uint64_t))v23)(v33, v31, v21);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = v41;
  sub_1BFEFFFF0(v28, (uint64_t)&v38, v27, (uint64_t)sub_1C01B158C, 0, v41, v36, v24);
  sub_1BFEFEB68(v27, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v29);
}

uint64_t sub_1BFDE1818@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatOptionEnum.init(from:)(a1, a2);
}

uint64_t FormatOptionEnum.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  unint64_t v43 = a2;
  sub_1BFDE1DAC();
  uint64_t v42 = v5;
  uint64_t v40 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C089F0C8();
  uint64_t v9 = v8;
  uint64_t v41 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C089F15C();
  sub_1C085F050(&qword_1EB891C00, (void (*)(uint64_t))sub_1C089F15C);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v39 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  uint64_t v15 = v42;
  uint64_t v14 = v43;
  if (v13)
  {
    uint64_t v16 = sub_1C152070C();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = (unsigned char *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17) {
          goto LABEL_7;
        }
      }
      uint64_t v23 = *((void *)v18 - 2);
      uint64_t v24 = *((void *)v18 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v25 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v25);
      *((void *)&v35 - 4) = &_s10CodingKeysON_93;
      *((void *)&v35 - 3) = sub_1C089F1E0();
      *((void *)&v35 - 2) = sub_1BFDE1D58();
      *((void *)&v35 - 1) = sub_1C089F234();
      swift_getKeyPath();
      swift_retain();
      uint64_t v26 = sub_1C085FB14((uint64_t)&unk_1F1B867D0);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v27 = v23;
      *(void *)(v27 + 8) = v24;
      *(void *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v23, v24, 1);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v9);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v46 = 0uLL;
  char v47 = 0;
  uint64_t v19 = sub_1C152069C();
  uint64_t v21 = v20;
  uint64_t v38 = v19;
  long long v46 = xmmword_1C153AB20;
  char v47 = 0;
  uint64_t v22 = sub_1C152069C();
  uint64_t v30 = v29;
  uint64_t v36 = v22;
  uint64_t v37 = v21;
  long long v35 = xmmword_1C1557FA0;
  long long v46 = xmmword_1C1557FA0;
  char v47 = 0;
  char v31 = sub_1C152071C();
  uint64_t v32 = v41;
  if (v31)
  {
    long long v44 = v35;
    char v45 = 0;
    sub_1C085F050(&qword_1EB884E30, (void (*)(uint64_t))sub_1BFDE1DAC);
    sub_1C15206EC();
    uint64_t v33 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v15);
  }
  else
  {
    uint64_t v33 = MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v9);
  uint64_t v34 = v37;
  *uint64_t v14 = v38;
  v14[1] = v34;
  v14[2] = v36;
  v14[3] = v30;
  void v14[4] = v33;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDE1D58()
{
  unint64_t result = qword_1EB887E10;
  if (!qword_1EB887E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887E10);
  }
  return result;
}

void sub_1BFDE1DAC()
{
  if (!qword_1EB884E38)
  {
    sub_1C08FC718(255, &qword_1EB8718B0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    sub_1C008DEC4();
    sub_1C008DF48();
    unint64_t v0 = sub_1C15181BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884E38);
    }
  }
}

uint64_t sub_1BFDE1E50@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatFont.init(from:)(a1, a2);
}

uint64_t FormatFont.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v3 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  *(void *)&long long v50 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v48 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  uint64_t v10 = (void *)v52;
  sub_1C1520EBC();
  uint64_t v11 = v10;
  if (v10)
  {
LABEL_15:
    sub_1C0038728(a1, (uint64_t)v11);
    swift_willThrow();

    uint64_t v42 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v42);
  }
  uint64_t v49 = v5;
  *(void *)&long long v52 = v3;
  uint64_t v12 = v51;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_1C1520EAC();
  char v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = v7;
  uint64_t v16 = v9;
  if (v14)
  {
    uint64_t v17 = sub_1C152070C();
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = (unint64_t *)(v17 + 40);
      while (1)
      {
        unint64_t v20 = *v19;
        if (*v19 >= 4) {
          break;
        }
        v19 += 2;
        if (!--v18) {
          goto LABEL_7;
        }
      }
      uint64_t v30 = *(v19 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v11 = (void *)swift_allocError();
      *(void *)uint64_t v31 = v30;
      *(void *)(v31 + 8) = v20;
      *(void *)(v31 + 16) = &unk_1F1B68AE8;
      *(_OWORD *)(v31 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v30, v20);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v7);
      goto LABEL_15;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFDE251C();
  long long v53 = 0uLL;
  sub_1C15206EC();
  uint64_t v21 = a1;
  uint64_t v23 = (uint64_t)v49;
  uint64_t v22 = v50;
  switch((char)v59)
  {
    case 1:
      long long v59 = xmmword_1C152C800;
      sub_1BFDE25C4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v15);
      long long v32 = v53;
      uint64_t v33 = v54;
      uint64_t v34 = v55;
      __int16 v35 = WORD4(v55);
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = v32;
      *(void *)(v36 + 32) = v33;
      *(void *)(v36 + 40) = v34;
      unint64_t v29 = v36 | 0x2000000000000000;
      *(_WORD *)(v36 + 48) = v35;
      break;
    case 2:
      long long v53 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB85D180, (void (*)(uint64_t))type metadata accessor for FormatRemoteFont);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v15);
      uint64_t v37 = swift_allocBox();
      sub_1BFE7FB8C(v23, v38, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
      unint64_t v29 = v37 | 0x4000000000000000;
      break;
    case 3:
      long long v59 = xmmword_1C152C800;
      sub_1C03554E8();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v15);
      long long v52 = v53;
      uint64_t v39 = v54;
      char v40 = v55;
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = v52;
      *(void *)(v41 + 32) = v39;
      *(unsigned char *)(v41 + 40) = v40;
      unint64_t v29 = v41 | 0x6000000000000000;
      break;
    case 4:
      sub_1C08625E4();
      long long v59 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EA19D188, (void (*)(uint64_t))sub_1C08625E4);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v15);
      long long v52 = v53;
      uint64_t v44 = v54;
      char v45 = v55;
      uint64_t v46 = *((void *)&v55 + 1);
      uint64_t v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = v52;
      *(void *)(v47 + 32) = v44;
      *(unsigned char *)(v47 + 40) = v45;
      *(void *)(v47 + 48) = v46;
      unint64_t v29 = v47 | 0x8000000000000000;
      break;
    default:
      long long v59 = xmmword_1C152C800;
      sub_1BFDE2570();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v15);
      long long v24 = v53;
      __int16 v25 = v54;
      char v26 = BYTE2(v54);
      long long v52 = v55;
      long long v50 = v56;
      uint64_t v27 = v57;
      __int16 v28 = v58;
      unint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = v24;
      *(_WORD *)(v29 + 32) = v25;
      *(unsigned char *)(v29 + 34) = v26;
      *(_OWORD *)(v29 + 40) = v52;
      *(_OWORD *)(v29 + 56) = v50;
      *(void *)(v29 + 72) = v27;
      *(_WORD *)(v29 + 80) = v28;
      break;
  }
  *uint64_t v12 = v29;
  uint64_t v42 = (uint64_t)v21;
  return __swift_destroy_boxed_opaque_existential_1(v42);
}

unint64_t sub_1BFDE251C()
{
  unint64_t result = qword_1EB886CB8;
  if (!qword_1EB886CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB886CB8);
  }
  return result;
}

unint64_t sub_1BFDE2570()
{
  unint64_t result = qword_1EB8754F0;
  if (!qword_1EB8754F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8754F0);
  }
  return result;
}

unint64_t sub_1BFDE25C4()
{
  unint64_t result = qword_1EB8752B0;
  if (!qword_1EB8752B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8752B0);
  }
  return result;
}

uint64_t sub_1BFDE2618@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFDE2644(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFDE2644(void *a1)
{
  sub_1BFE8928C();
  uint64_t v60 = v2;
  uint64_t v53 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v54 = &v48[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFE89214();
  uint64_t v55 = v4;
  *(void *)&long long v58 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v56 = &v48[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0908CDC(0, (unint64_t *)&qword_1EB884858, (void (*)(void))sub_1C00795B8, (void (*)(void))sub_1BFC3A24C);
  uint64_t v7 = v6;
  *(void *)&long long v57 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v48[-v8];
  sub_1C08F0358();
  uint64_t v11 = v10;
  uint64_t v59 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v48[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08B3AA8();
  uint64_t v15 = v14;
  sub_1C085F050(&qword_1EB892560, (void (*)(uint64_t))sub_1C08B3AA8);
  uint64_t v16 = (uint64_t)v66;
  sub_1C1520EBC();
  uint64_t v17 = (void *)v16;
  if (v16)
  {
LABEL_13:
    sub_1C0038728(a1, (uint64_t)v17);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v15;
  }
  long long v52 = v9;
  uint64_t v18 = a1[3];
  uint64_t v66 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  uint64_t v19 = sub_1C1520EAC();
  LOBYTE(v18) = Dictionary<>.errorOnUnknownKeys.getter(v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = v60;
  if (v18)
  {
    uint64_t v21 = sub_1C152070C();
    uint64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      uint64_t v23 = (unsigned char *)(v21 + 48);
      while (*v23 != 1)
      {
        v23 += 24;
        if (!--v22) {
          goto LABEL_7;
        }
      }
      uint64_t v27 = v11;
      uint64_t v15 = *((void *)v23 - 2);
      uint64_t v28 = *((void *)v23 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      uint64_t v29 = sub_1C07F7F68();
      sub_1C02570B4();
      uint64_t v17 = (void *)swift_allocError();
      *(void *)uint64_t v30 = v15;
      *(void *)(v30 + 8) = v28;
      *(void *)(v30 + 16) = v29;
      *(_OWORD *)(v30 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v15, v28, 1);
      (*(void (**)(unsigned char *, uint64_t))(v59 + 8))(v13, v27);
      a1 = v66;
      goto LABEL_13;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v64 = 0uLL;
  char v65 = 0;
  uint64_t v24 = sub_1C152069C();
  uint64_t v26 = v25;
  uint64_t v50 = v24;
  long long v51 = xmmword_1C153AB20;
  long long v64 = xmmword_1C153AB20;
  char v65 = 0;
  if (sub_1C152071C())
  {
    long long v62 = v51;
    char v63 = 0;
    sub_1C15206EC();
    *(void *)&long long v51 = v26;
    int v49 = v61;
  }
  else
  {
    int v49 = 0;
    *(void *)&long long v51 = v26;
  }
  long long v64 = xmmword_1C1557FA0;
  char v65 = 0;
  sub_1BFCAB4C0();
  uint64_t v31 = v52;
  uint64_t v32 = v7;
  sub_1C15206EC();
  uint64_t v33 = v58;
  uint64_t v35 = sub_1C1517E5C();
  (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v31, v32);
  long long v57 = xmmword_1C1557FB0;
  long long v64 = xmmword_1C1557FB0;
  char v65 = 0;
  if (sub_1C152071C())
  {
    uint64_t v36 = v35;
    long long v62 = v57;
    char v63 = 0;
    sub_1C085F050(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    uint64_t v37 = v55;
    uint64_t v38 = v56;
    sub_1C15206EC();
    uint64_t v39 = v38;
    uint64_t v40 = v37;
    uint64_t v41 = v11;
    uint64_t v42 = sub_1C1517E5C();
    (*(void (**)(unsigned char *, uint64_t))(v33 + 8))(v39, v40);
    uint64_t v43 = v42;
    uint64_t v35 = v36;
  }
  else
  {
    uint64_t v41 = v11;
    uint64_t v43 = MEMORY[0x1E4FBC870];
  }
  long long v58 = xmmword_1C1557FD0;
  long long v64 = xmmword_1C1557FD0;
  char v65 = 0;
  if (sub_1C152071C())
  {
    long long v62 = v58;
    char v63 = 0;
    sub_1C085F050(&qword_1EB87C728, (void (*)(uint64_t))sub_1BFE8928C);
    uint64_t v44 = v54;
    sub_1C15206EC();
    uint64_t v45 = v59;
    uint64_t v46 = sub_1C1517E5C();
    (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v44, v20);
  }
  else
  {
    uint64_t v46 = MEMORY[0x1E4FBC860];
    uint64_t v45 = v59;
  }
  (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v13, v41);
  type metadata accessor for FormatSlotNode();
  uint64_t v15 = swift_allocObject();
  uint64_t v47 = v51;
  *(void *)(v15 + 16) = v50;
  *(void *)(v15 + 24) = v47;
  swift_beginAccess();
  *(unsigned char *)(v15 + 32) = v49;
  swift_beginAccess();
  *(void *)(v15 + 40) = v35;
  swift_beginAccess();
  *(void *)(v15 + 48) = v43;
  swift_beginAccess();
  *(void *)(v15 + 56) = v46;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  return v15;
}

unint64_t sub_1BFDE2ECC()
{
  unint64_t result = qword_1EB8874F0;
  if (!qword_1EB8874F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8874F0);
  }
  return result;
}

uint64_t sub_1BFDE2F20(void *a1)
{
  return FormatOptionType.encode(to:)(a1);
}

uint64_t FormatOptionType.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v81 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v80 = (char *)&v69 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v79 = (char *)&v69 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v78 = (char *)&v69 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v77 = (char *)&v69 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v76 = (char *)&v69 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v75 = (char *)&v69 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v74 = (char *)&v69 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v73 = (char *)&v69 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v72 = (char *)&v69 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v71 = (char *)&v69 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v70 = (char *)&v69 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v69 - v28;
  uint64_t v30 = *v1;
  uint64_t v82 = a1;
  uint64_t v83 = v30;
  uint64_t v31 = a1[3];
  uint64_t v32 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v31);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_1C151928C();
  uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1EB93CAB0);
  uint64_t v35 = *(void *)(v33 - 8);
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  uint64_t v37 = v35 + 16;
  v36(v29, v34, v33);
  uint64_t v38 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v39 = v84;
  sub_1BFE97CE8((uint64_t)v29, (uint64_t)sub_1C01B158C, 0, v31, v32);
  if (v39) {
    return sub_1BFEFEB68((uint64_t)v29, type metadata accessor for FormatVersionRequirement);
  }
  uint64_t v69 = v37;
  uint64_t v84 = v38;
  sub_1BFEFEB68((uint64_t)v29, type metadata accessor for FormatVersionRequirement);
  uint64_t v41 = v82;
  char v42 = v83;
  uint64_t v43 = v36;
  switch(v83)
  {
    case 1:
      uint64_t v48 = v82[3];
      uint64_t v49 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v48);
      uint64_t v50 = v36;
      long long v51 = v71;
      v50(v71, v34, v33);
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = (uint64_t)v51;
      uint64_t v53 = v48;
      uint64_t v54 = v49;
      goto LABEL_12;
    case 2:
      uint64_t v55 = v82[3];
      uint64_t v81 = (char *)v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v55);
      long long v51 = v72;
      v43(v72, v34, v33);
      swift_storeEnumTagMultiPayload();
      goto LABEL_11;
    case 3:
      uint64_t v55 = v82[3];
      uint64_t v81 = (char *)v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v55);
      long long v51 = v73;
      v43(v73, v34, v33);
      swift_storeEnumTagMultiPayload();
      goto LABEL_11;
    case 4:
      uint64_t v55 = v82[3];
      uint64_t v81 = (char *)v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v55);
      long long v51 = v74;
      v43(v74, v34, v33);
      swift_storeEnumTagMultiPayload();
LABEL_11:
      uint64_t v52 = (uint64_t)v51;
      uint64_t v53 = v55;
      uint64_t v54 = (uint64_t)v81;
LABEL_12:
      sub_1BFE97CE8(v52, (uint64_t)sub_1C01B158C, 0, v53, v54);
      uint64_t v47 = (uint64_t)v51;
      goto LABEL_14;
    case 5:
      uint64_t v56 = v82[3];
      uint64_t v57 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v56);
      uint64_t v58 = (uint64_t)v75;
      v36(v75, v34, v33);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v58, (uint64_t)sub_1C01B158C, 0, v56, v57);
      uint64_t v47 = v58;
      char v42 = v83;
      goto LABEL_14;
    case 6:
      uint64_t v59 = v82[3];
      uint64_t v60 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v59);
      uint64_t v61 = (uint64_t)v76;
      ((void (*)(void))v36)();
      swift_storeEnumTagMultiPayload();
      goto LABEL_17;
    case 7:
      uint64_t v59 = v82[3];
      uint64_t v60 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v59);
      uint64_t v61 = (uint64_t)v77;
      ((void (*)(void))v36)();
      swift_storeEnumTagMultiPayload();
LABEL_17:
      sub_1BFE97CE8(v61, (uint64_t)sub_1C01B158C, 0, v59, v60);
      uint64_t v68 = v61;
      goto LABEL_31;
    case 8:
      uint64_t v62 = v82[3];
      uint64_t v63 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v62);
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v64 = __swift_project_value_buffer(v33, (uint64_t)qword_1EB93CA50);
      uint64_t v68 = (uint64_t)v78;
      v43(v78, v64, v33);
      swift_storeEnumTagMultiPayload();
      goto LABEL_30;
    case 9:
      uint64_t v62 = v82[3];
      uint64_t v63 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v62);
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v65 = __swift_project_value_buffer(v33, (uint64_t)qword_1EB93CA50);
      uint64_t v68 = (uint64_t)v79;
      v43(v79, v65, v33);
      swift_storeEnumTagMultiPayload();
      goto LABEL_30;
    case 10:
      uint64_t v62 = v82[3];
      uint64_t v63 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v62);
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v66 = __swift_project_value_buffer(v33, (uint64_t)qword_1EB93CA98);
      uint64_t v68 = (uint64_t)v80;
      v43(v80, v66, v33);
      swift_storeEnumTagMultiPayload();
      goto LABEL_30;
    case 11:
      uint64_t v62 = v82[3];
      uint64_t v63 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v62);
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v67 = __swift_project_value_buffer(v33, (uint64_t)qword_1EB93CAE0);
      uint64_t v68 = (uint64_t)v81;
      v43(v81, v67, v33);
      swift_storeEnumTagMultiPayload();
LABEL_30:
      sub_1BFE97CE8(v68, (uint64_t)sub_1C01B158C, 0, v62, v63);
LABEL_31:
      sub_1BFEFEB68(v68, type metadata accessor for FormatVersionRequirement);
      break;
    default:
      uint64_t v44 = v82[3];
      uint64_t v45 = v82[4];
      __swift_project_boxed_opaque_existential_1(v82, v44);
      uint64_t v46 = (uint64_t)v70;
      v43(v70, v34, v33);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v46, (uint64_t)sub_1C01B158C, 0, v44, v45);
      uint64_t v47 = v46;
LABEL_14:
      sub_1BFEFEB68(v47, type metadata accessor for FormatVersionRequirement);
      break;
  }
  __swift_project_boxed_opaque_existential_1(v41, v41[3]);
  sub_1C1520EEC();
  char v87 = v42;
  FormatOptionType.rawValue.getter();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v85, v86);
  sub_1C1520AFC();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
}

uint64_t sub_1BFDE3A08@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE3AE8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE3A40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE3AE8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE3A78@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE3AE8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE3AB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE3AE8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE3AE8()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFDE3B30@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatItemKind.init(from:)(a1, a2);
}

uint64_t FormatItemKind.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1BFDE4564(0, &qword_1EB87A510, (uint64_t (*)(void))sub_1BFDE45CC, (uint64_t)&type metadata for FormatItemKind.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520E9C();
  uint64_t v10 = v2;
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v29, v29[3]);
    uint64_t v11 = sub_1C1520ABC();
    uint64_t v14 = v11;
    uint64_t v15 = v12;
    BOOL v16 = v11 == 0x656C6369747261 && v12 == 0xE700000000000000;
    if (v16
      || (sub_1C1520A9C() & 1) != 0
      || v14 == 0x656E696C64616568 && v15 == 0xE800000000000000
      || (sub_1C1520A9C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = 0;
    }
    else if (v14 == 0x6575737369 && v15 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = 1;
    }
    else if (v14 == 0x6465626D45626577 && v15 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = 2;
    }
    else if (v14 == 0x6172546F69647561 && v15 == 0xEA00000000006B63 || (sub_1C1520A9C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = 3;
    }
    else if (v14 == 6775156 && v15 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = 4;
    }
    else
    {
      uint64_t v30 = a2;
      if (sub_1C1520A9C())
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = 4;
      }
      else if (v14 == 0x65726F6373 && v15 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = 5;
      }
      else if (v14 == 0x676E69646E617473 && v15 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = 6;
      }
      else if (v14 == 0x74656B63617262 && v15 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = 7;
      }
      else if (v14 == 0x65726F6353786F62 && v15 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = 8;
      }
      else if (v14 == 0x726F6353656E696CLL && v15 == 0xE900000000000065 || (sub_1C1520A9C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = 9;
      }
      else if (v14 == 0x65527972756A6E69 && v15 == 0xEC00000074726F70 || (sub_1C1520A9C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = 10;
      }
      else if (v14 == 0x6579616C5079656BLL && v15 == 0xE900000000000072 || (sub_1C1520A9C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = 11;
      }
      else if (v14 == 0x656C7A7A7570 && v15 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = 12;
      }
      else if (v14 == 0x7954656C7A7A7570 && v15 == 0xEA00000000006570 || (sub_1C1520A9C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = 13;
      }
      else
      {
        if ((v14 != 0x7453656C7A7A7570 || v15 != 0xEF63697473697461) && (sub_1C1520A9C() & 1) == 0)
        {
          uint64_t v26 = sub_1C15201EC();
          uint64_t v24 = swift_allocError();
          uint64_t v20 = v19;
          sub_1C01AC8BC();
          uint64_t v22 = *(int *)(v21 + 48);
          uint64_t v25 = v20;
          v23[1] = (char *)v20 + v22;
          *uint64_t v20 = MEMORY[0x1E4FBB1A0];
          __swift_project_boxed_opaque_existential_1(a1, a1[3]);
          sub_1C1520E7C();
          unint64_t v27 = 0;
          unint64_t v28 = 0xE000000000000000;
          sub_1C15200FC();
          swift_bridgeObjectRelease();
          unint64_t v27 = 0xD000000000000017;
          unint64_t v28 = 0x80000001C160BA00;
          sub_1C151E80C();
          uint64_t v10 = (void *)v24;
          swift_bridgeObjectRelease();
          sub_1C15201AC();
          (*(void (**)(void *, void))(*(void *)(v26 - 8) + 104))(v25, *MEMORY[0x1E4FBBA80]);
          swift_willThrow();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
          goto LABEL_4;
        }
        swift_bridgeObjectRelease();
        uint64_t v18 = 14;
      }
      a2 = v30;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    uint64_t v17 = 0;
    goto LABEL_12;
  }
  uint64_t v30 = a2;
LABEL_4:
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFDE45CC();
  sub_1C1520EBC();
  LOBYTE(v29[0]) = 0;
  sub_1BFDE4878();
  sub_1C15206EC();
  LOBYTE(v27) = 1;
  sub_1BFDE4824();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

  uint64_t v17 = v29[0];
  uint64_t v18 = v29[1];
  a2 = v30;
LABEL_12:
  *a2 = v17;
  a2[1] = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BFDE4564(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1BFDE45CC()
{
  unint64_t result = qword_1EB874AA0;
  if (!qword_1EB874AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874AA0);
  }
  return result;
}

uint64_t sub_1BFDE4620@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1BFDE4564(0, &qword_1EB87BD70, (uint64_t (*)(void))sub_1BFDE47D0, (uint64_t)&type metadata for FormatItemKind.Object.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFDE47D0();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v15;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v9 = v10;
  v9[1] = v12;
  return result;
}

unint64_t sub_1BFDE47D0()
{
  unint64_t result = qword_1EB87B3C8;
  if (!qword_1EB87B3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87B3C8);
  }
  return result;
}

unint64_t sub_1BFDE4824()
{
  unint64_t result = qword_1EB87B3E0;
  if (!qword_1EB87B3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87B3E0);
  }
  return result;
}

unint64_t sub_1BFDE4878()
{
  unint64_t result = qword_1EB87B3C0;
  if (!qword_1EB87B3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87B3C0);
  }
  return result;
}

uint64_t sub_1BFDE48CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCornerRadius.init(from:)(a1, a2);
}

uint64_t FormatCornerRadius.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v28 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_12:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v9;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        unint64_t v16 = *v15;
        if (*v15 >= 4) {
          break;
        }
        v15 += 2;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v22 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v23 = v22;
      *(void *)(v23 + 8) = v16;
      *(void *)(v23 + 16) = &unk_1F1B848C8;
      *(_OWORD *)(v23 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v22, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFDE4C8C();
  long long v26 = 0uLL;
  sub_1C15206EC();
  if (v25)
  {
    long long v26 = xmmword_1C152C800;
    sub_1BFDE4D34();
    sub_1C152065C();
    uint64_t v17 = v28;
    uint64_t v18 = ((v25 == 2) | v25);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    uint64_t v19 = 0;
    uint64_t v20 = v18 & 1;
    char v21 = 0x80;
  }
  else
  {
    long long v25 = xmmword_1C152C800;
    sub_1BFDE4CE0();
    sub_1C15206EC();
    uint64_t v17 = v28;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    uint64_t v19 = *((void *)&v26 + 1);
    uint64_t v20 = v26;
    char v21 = v27;
  }
  *(void *)uint64_t v17 = v20;
  *(void *)(v17 + 8) = v19;
  *(unsigned char *)(v17 + 16) = v21;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDE4C8C()
{
  unint64_t result = qword_1EB888578;
  if (!qword_1EB888578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888578);
  }
  return result;
}

unint64_t sub_1BFDE4CE0()
{
  unint64_t result = qword_1EB875FD0;
  if (!qword_1EB875FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875FD0);
  }
  return result;
}

unint64_t sub_1BFDE4D34()
{
  unint64_t result = qword_1EB87E9D0;
  if (!qword_1EB87E9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87E9D0);
  }
  return result;
}

uint64_t sub_1BFDE4D88@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDD52D8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE4DC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE4DF8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE4E30@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE4E68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE4EA0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE4ED8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE4F10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE4F48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE4F80@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BFDE4FB8()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFDE5000@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatColorAssignComponentProcessor.init(from:)(a1, a2);
}

uint64_t FormatColorAssignComponentProcessor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  sub_1C087B7F4();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C087B888();
  sub_1C085F050(&qword_1EB8923F0, (void (*)(uint64_t))sub_1C087B888);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v24;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v17 = *((void *)v15 - 1);
      uint64_t v24 = *((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v18 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v18);
      *(&v24 - 4) = (uint64_t)&_s10CodingKeysON_170;
      *(&v24 - 3) = sub_1C087B90C();
      *(&v24 - 2) = sub_1BFDE53DC();
      *(&v24 - 1) = sub_1C087B960();
      swift_getKeyPath();
      swift_retain();
      uint64_t v19 = sub_1C085FB14((uint64_t)&unk_1F1B84440);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v20 = v24;
      *(void *)uint64_t v21 = v24;
      *(void *)(v21 + 8) = v17;
      *(void *)(v21 + 16) = v19;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v20, v17, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFDE5430();
  long long v25 = 0uLL;
  char v26 = 0;
  sub_1C15206EC();
  char v16 = v27;
  long long v25 = xmmword_1C153AB20;
  char v26 = 0;
  sub_1BFE7E344();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v23 = v27;
  *(unsigned char *)uint64_t v12 = v16;
  *(void *)(v12 + 8) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDE53DC()
{
  unint64_t result = qword_1EB88EE30;
  if (!qword_1EB88EE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88EE30);
  }
  return result;
}

unint64_t sub_1BFDE5430()
{
  unint64_t result = qword_1EB876B08;
  if (!qword_1EB876B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876B08);
  }
  return result;
}

uint64_t sub_1BFDE5484()
{
  return sub_1BFDE5490(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1BFDE5490(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  swift_beginAccess();
  swift_retain();
  swift_retain();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1BFDE553C(v6, a2, a3, a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  *(void *)(a1 + 56) = v7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFDE553C(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a4;
  uint64_t v37 = type metadata accessor for FeedBannerAdRequester.ScheduledRequest();
  uint64_t v8 = MEMORY[0x1F4188790](v37);
  uint64_t v36 = (uint64_t)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v30 - v11;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v40 = MEMORY[0x1E4FBC860];
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    v30[1] = v4;
    uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v35 = *(void *)(v10 + 72);
    uint64_t v32 = (v15 + 32) & ~v15;
    uint64_t v16 = a1 + v32;
    long long v31 = xmmword_1C1529AE0;
    uint64_t v33 = a2;
    do
    {
      sub_1BFDEA410(v16, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
      if (a2(&v12[*(int *)(v37 + 20)]))
      {
        uint64_t v21 = a3;
        if (qword_1EB87B058 != -1) {
          swift_once();
        }
        uint64_t v22 = (void *)qword_1EB93C6F8;
        sub_1BFDE8F08(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = v31;
        id v24 = v22;
        uint64_t v25 = sub_1C151D86C();
        uint64_t v27 = v26;
        *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v23 + 64) = sub_1BFE9C558();
        *(void *)(v23 + 32) = v25;
        *(void *)(v23 + 40) = v27;
        sub_1C151F38C();
        sub_1C15197BC();

        swift_bridgeObjectRelease();
        swift_retain();
        uint64_t v38 = sub_1C151D86C();
        uint64_t v39 = v28;
        sub_1C151831C();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        sub_1BFDEA478((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
        a3 = v21;
        a2 = v33;
        uint64_t v20 = v35;
      }
      else
      {
        sub_1BFDE9098((uint64_t)v12, v36, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
        uint64_t v29 = v40;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F6D70(0, *(void *)(v29 + 16) + 1, 1);
          uint64_t v29 = v40;
        }
        unint64_t v18 = *(void *)(v29 + 16);
        unint64_t v17 = *(void *)(v29 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1C05F6D70(v17 > 1, v18 + 1, 1);
          uint64_t v29 = v40;
        }
        *(void *)(v29 + 16) = v18 + 1;
        uint64_t v19 = v29 + v32;
        uint64_t v20 = v35;
        sub_1BFDE9098(v36, v19 + v18 * v35, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
      }
      v16 += v20;
      --v14;
    }
    while (v14);
    return v40;
  }
  return result;
}

uint64_t type metadata accessor for FeedBannerAdRequester.ScheduledRequest()
{
  uint64_t result = qword_1EB87CE30;
  if (!qword_1EB87CE30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFDE5930()
{
  return sub_1BFDE82C4(v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1BFDE5964()
{
  return sub_1BFDE596C(*(void **)(v0 + 16));
}

uint64_t sub_1BFDE596C(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = (char *)a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0xB8);
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v3 + 16))
  {
    uint64_t v5 = swift_bridgeObjectRetain();
    sub_1BFDE5AFC(v5);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v3 = MEMORY[0x1E4FBC860];
    return swift_bridgeObjectRelease();
  }
  else
  {
    *((unsigned char *)a1 + *(void *)((*v2 & *a1) + 0xB0)) = 0;
  }
  return result;
}

uint64_t sub_1BFDE5A30()
{
  return sub_1BFDE5A38(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1BFDE5A38(void *a1, uint64_t a2)
{
  if (*((unsigned char *)a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0xB0)) != 1) {
    return sub_1BFDE5AFC(a2);
  }
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1BFD18D84(v2);
  return swift_endAccess();
}

uint64_t sub_1BFDE5AFC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v39 = a1;
  uint64_t v3 = (void *)(*MEMORY[0x1E4FBC8C8] & *v1);
  uint64_t v4 = sub_1C151BCEC();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v40 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v3[12];
  uint64_t v7 = v3[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v42 = v7;
  uint64_t v43 = v6;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v35 = AssociatedConformanceWitness;
  uint64_t v36 = v3[14];
  uint64_t v11 = v36;
  uint64_t v41 = v3;
  uint64_t v44 = v3[15];
  uint64_t v12 = v44;
  uint64_t v13 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v45 = AssociatedTypeWitness;
  *((void *)&v45 + 1) = v9;
  uint64_t v46 = AssociatedConformanceWitness;
  uint64_t v47 = v11;
  uint64_t v48 = v12;
  uint64_t v49 = v13;
  uint64_t v14 = type metadata accessor for FeedBannerAdBlueprintModifier();
  uint64_t v37 = *(void *)(v14 - 8);
  uint64_t v38 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  unint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v34 = (uint64_t *)((char *)&v33 - v18);
  *((unsigned char *)v1 + v3[22]) = 1;
  uint64_t v19 = (void *)MEMORY[0x1E4FBC8C8];
  sub_1BFC66384((uint64_t)v2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x90), (uint64_t)&v45);
  uint64_t v20 = (void *)((char *)v2 + *(void *)((*v19 & *v2) + 0x98));
  __swift_project_boxed_opaque_existential_1(v20, v20[3]);
  uint64_t v21 = v39;
  swift_bridgeObjectRetain();
  uint64_t v22 = v40;
  sub_1C151C64C();
  uint64_t v23 = v34;
  uint64_t v24 = (uint64_t)v22;
  uint64_t v25 = v35;
  uint64_t v26 = v36;
  FeedBannerAdBlueprintModifier.init(updates:policyValidator:layoutCollection:)(v21, &v45, v24, v34);
  *(void *)&long long v45 = AssociatedTypeWitness;
  *((void *)&v45 + 1) = v9;
  uint64_t v46 = v25;
  uint64_t v47 = v13;
  sub_1C151AC9C();
  uint64_t v28 = v37;
  uint64_t v27 = v38;
  (*(void (**)(char *, void *, uint64_t))(v37 + 16))(v17, v23, v38);
  swift_getWitnessTable();
  *(void *)&long long v45 = sub_1C151AC7C();
  uint64_t v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v30 = (void *)swift_allocObject();
  long long v31 = v41;
  void v30[2] = v42;
  v30[3] = v31[11];
  v30[4] = v43;
  v30[5] = v31[13];
  v30[6] = v26;
  v30[7] = v44;
  v30[8] = v29;
  swift_retain();
  swift_getWitnessTable();
  sub_1C151ACDC();
  swift_release();
  (*(void (**)(void *, uint64_t))(v28 + 8))(v23, v27);
  swift_release();
  return swift_release();
}

uint64_t sub_1BFDE5FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v4);
  uint64_t v5 = a1 + *(int *)(a2 + 72);
  uint64_t v6 = sub_1C151BCEC();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t sub_1BFDE6038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  v9(a1 + 8, v6, v8);
  uint64_t v10 = *(int *)(a3 + 72);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C151BCEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t FeedBannerAdBlueprintModifier.init(updates:policyValidator:layoutCollection:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  sub_1BFC773DC(a2, (uint64_t)(a4 + 1));
  uint64_t v6 = (char *)a4 + *(int *)(type metadata accessor for FeedBannerAdBlueprintModifier() + 72);
  uint64_t v7 = sub_1C151BCEC();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, a3, v7);
}

uint64_t sub_1BFDE61E4()
{
  uint64_t v1 = *(void *)(type metadata accessor for FeedBannerAd() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_1C151D87C() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  CGFloat v8 = *(double *)(v0 + v6);
  CGFloat v9 = *(double *)(v0 + v6 + 8);
  uint64_t v10 = *(void *)(v0 + v7);
  uint64_t v11 = *(void *)(v0 + v7 + 8);
  uint64_t v12 = *(void *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8));
  return sub_1BFDE9F70(v0 + v2, v0 + v5, v10, v11, v12, v8, v9);
}

uint64_t sub_1BFDE62FC(void *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v9 = *(void *)(a4(0) - 8);
    uint64_t v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v12 = a1(&v13, v10);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v13)
      {
        MEMORY[0x1C18C66D0](v12);
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v10 += v11;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v14;
  }
  return result;
}

uint64_t sub_1BFDE6478@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BFDE64B0(a1, v2[8], v2[9], v2[10], v2[2], v2[3], v2[4], v2[5], a2, v2[6], v2[7]);
}

uint64_t sub_1BFDE64B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v52 = a8;
  uint64_t v53 = a4;
  uint64_t v54 = a3;
  uint64_t v60 = a9;
  uint64_t v16 = sub_1C151DBAC();
  uint64_t v57 = *(void *)(v16 - 8);
  uint64_t v58 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v56 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1F4188790](v55);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a5;
  uint64_t v61 = a5;
  uint64_t v62 = a6;
  uint64_t v51 = a7;
  uint64_t v63 = a7;
  uint64_t v64 = a11;
  uint64_t v20 = sub_1C151CC9C();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v50 = a6;
  uint64_t v48 = a11;
  uint64_t v24 = sub_1C151A31C();
  uint64_t v46 = sub_1C151FD8C();
  uint64_t v45 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v26 = (char *)&v44 - v25;
  uint64_t v27 = *(void *)(v24 - 8);
  __n128 v29 = MEMORY[0x1F4188790](v28);
  uint64_t v44 = (void (*)(uint64_t, char *, uint64_t))((char *)&v44 - v30);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v21 + 16))(v23, a2, v20, v29);
  sub_1BFEDE21C();
  uint64_t v47 = v31;
  uint64_t v59 = a1;
  sub_1C151D3AC();
  swift_bridgeObjectRetain();
  sub_1BFF54924((uint64_t)v19);
  sub_1C151CC0C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v26, 1, v24) == 1)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v46);
    if (qword_1EB87B058 != -1) {
      swift_once();
    }
    id v32 = (id)qword_1EB93C6F8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1C1529AE0;
    sub_1C151D3AC();
    uint64_t v34 = v56;
    uint64_t v36 = v57;
    uint64_t v35 = v58;
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v56, &v19[*(int *)(v55 + 20)], v58);
    sub_1BFF54924((uint64_t)v19);
    uint64_t v37 = sub_1C151DB4C();
    uint64_t v39 = v38;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
    *(void *)(v33 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v33 + 64) = sub_1BFE9C558();
    *(void *)(v33 + 32) = v37;
    *(void *)(v33 + 40) = v39;
    sub_1C15197BC();

    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v41 = 0;
  }
  else
  {
    uint64_t v42 = v44;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))((char *)v44, v26, v24);
    uint64_t v61 = v49;
    uint64_t v62 = v50;
    uint64_t v63 = v51;
    uint64_t v64 = v52;
    uint64_t v65 = a10;
    uint64_t v66 = v48;
    uint64_t v43 = (void *)type metadata accessor for FeedBannerAdBlueprintModifier();
    uint64_t v41 = sub_1BFDE6A44(v42, v53, v59, v43);
    uint64_t result = (*(uint64_t (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v42, v24);
  }
  *uint64_t v60 = v41;
  return result;
}

uint64_t type metadata accessor for FeedBannerAdBlueprintModifier()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1BFDE6A44(void (*a1)(uint64_t, char *, uint64_t), uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v88 = a2;
  uint64_t v89 = a4;
  uint64_t v95 = a3;
  char v87 = a1;
  sub_1BFEDE21C();
  uint64_t v5 = v4;
  uint64_t v80 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v78 = v6;
  uint64_t v79 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0FFE76C(0, &qword_1EB8711A8, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v93 = (uint64_t *)((char *)&v75 - v8);
  uint64_t v9 = sub_1C151677C();
  uint64_t v91 = *(void *)(v9 - 8);
  uint64_t v92 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v86 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151D33C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C151DBAC();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v84 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v75 - v19;
  uint64_t v21 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v75 - v25;
  uint64_t v94 = v5;
  sub_1C151D3AC();
  uint64_t v90 = v21;
  uint64_t v27 = &v26[*(int *)(v21 + 20)];
  uint64_t v82 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v82(v20, v27, v15);
  sub_1BFF54924((uint64_t)v26);
  sub_1C151DB8C();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v85 = v15;
  uint64_t v83 = v16 + 8;
  v28(v20, v15);
  if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v14, v11) != *MEMORY[0x1E4F7A8C8])
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_1C151D3AC();
    sub_1C0FFE76C(0, (unint64_t *)&unk_1EB871478, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  __n128 v29 = v89;
  uint64_t v30 = v89[3];
  uint64_t v31 = v89[4];
  id v32 = (void *)v89[7];
  uint64_t v77 = v89[2];
  uint64_t v96 = v77;
  uint64_t v97 = v30;
  uint64_t v76 = v30;
  uint64_t v75 = v31;
  uint64_t v98 = v31;
  *(void *)&long long v99 = v32;
  sub_1C151CC9C();
  uint64_t v33 = (void (*)(void, void, void))v93;
  sub_1C151CC8C();
  uint64_t v34 = v91;
  uint64_t v35 = v33;
  uint64_t v36 = v92;
  uint64_t v37 = v29;
  if ((*(unsigned int (**)(void, uint64_t, uint64_t))(v91 + 48))(v35, 1, v92) == 1)
  {
    sub_1C0FFEEF8((uint64_t)v93);
LABEL_8:
    uint64_t v93 = v32;
    if (qword_1EB87B058 != -1) {
      swift_once();
    }
    id v67 = (id)qword_1EB93C6F8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = xmmword_1C1529AE0;
    sub_1C151D3AC();
    uint64_t v69 = v84;
    uint64_t v70 = v85;
    v82(v84, &v23[*(int *)(v90 + 20)], v85);
    sub_1BFF54924((uint64_t)v23);
    uint64_t v71 = sub_1C151DB4C();
    uint64_t v73 = v72;
    v28(v69, v70);
    *(void *)(v68 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v68 + 64) = sub_1BFE9C558();
    *(void *)(v68 + 32) = v71;
    *(void *)(v68 + 40) = v73;
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    uint64_t v96 = v77;
    uint64_t v97 = v76;
    uint64_t v98 = v75;
    long long v99 = *(_OWORD *)(v37 + 5);
    uint64_t v100 = (void (*)(void, void, void))v93;
    type metadata accessor for FeedBannerAdBlueprintModifier.Errors();
    swift_getWitnessTable();
    swift_allocError();
    sub_1C0FFE76C(0, (unint64_t *)&unk_1EB871478, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151906C();
  }
  uint64_t v39 = v86;
  (*(void (**)(char *, void *, uint64_t))(v34 + 32))(v86, v93, v36);
  uint64_t v40 = v81;
  uint64_t v41 = (void *)sub_1C151BCBC();
  if (!v41)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v39, v36);
    goto LABEL_8;
  }
  uint64_t v42 = v41;
  objc_msgSend(v41, sel_frame);
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;

  MEMORY[0x1F4188790](v51);
  uint64_t v52 = v76;
  *(&v75 - 12) = v77;
  *(&v75 - 11) = v52;
  *(&v75 - 10) = v75;
  *(_OWORD *)(&v75 - 9) = *(_OWORD *)(v53 + 40);
  uint64_t v54 = v95;
  *(&v75 - 7) = (uint64_t)v32;
  *(&v75 - 6) = v54;
  *(&v75 - 5) = v44;
  *(&v75 - 4) = v46;
  *(&v75 - 3) = v48;
  *(&v75 - 2) = v50;
  *(&v75 - 1) = v40;
  sub_1C151932C();
  uint64_t v55 = v80;
  uint64_t v93 = *(void **)(v80 + 16);
  uint64_t v56 = v79;
  uint64_t v57 = v94;
  ((void (*)(char *, uint64_t, uint64_t))v93)(v79, v54, v94);
  uint64_t v58 = *(unsigned __int8 *)(v55 + 80);
  uint64_t v59 = (v58 + 16) & ~v58;
  uint64_t v88 = v58 | 7;
  uint64_t v89 = (void *)(v59 + v78);
  unint64_t v60 = (v59 + v78 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v61 = swift_allocObject();
  char v87 = *(void (**)(uint64_t, char *, uint64_t))(v55 + 32);
  v87(v61 + v59, v56, v57);
  uint64_t v62 = (uint64_t *)(v61 + v60);
  *uint64_t v62 = v44;
  v62[1] = v46;
  long long v62[2] = v48;
  v62[3] = v50;
  uint64_t v63 = (void *)sub_1C1518E7C();
  sub_1C1518FFC();
  swift_release();
  swift_release();

  ((void (*)(char *, uint64_t, uint64_t))v93)(v56, v54, v57);
  uint64_t v64 = swift_allocObject();
  v87(v64 + v59, v56, v57);
  uint64_t v65 = (void *)sub_1C1518E7C();
  uint64_t v66 = sub_1C15190DC();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v91 + 8))(v86, v92);
  return v66;
}

uint64_t FeedBannerAdRequester.scheduleRequest(for:placement:position:createContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v7 = v6;
  uint64_t v72 = a3;
  uint64_t v73 = a4;
  uint64_t v70 = a1;
  uint64_t v11 = sub_1C151E16C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v76 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C151E1DC();
  uint64_t v75 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v74 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1C151D87C();
  uint64_t v68 = *(void *)(v71 - 8);
  uint64_t v16 = *(void *)(v68 + 64);
  MEMORY[0x1F4188790](v71);
  uint64_t v69 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FeedBannerAd();
  uint64_t v67 = *(void *)(v17 - 8);
  uint64_t v18 = *(void *)(v67 + 64);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a2;
  uint64_t v21 = sub_1C151D86C();
  uint64_t v77 = v7;
  double aBlock = *(double *)&v21;
  uint64_t v79 = v22;
  swift_retain();
  LOBYTE(v7) = sub_1C151832C();
  swift_bridgeObjectRelease();
  swift_release();
  if (v7)
  {
    if (qword_1EB87B058 != -1) {
      swift_once();
    }
    uint64_t v23 = (void *)qword_1EB93C6F8;
    sub_1BFDE8F08(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1C1527210;
    id v25 = v23;
    uint64_t v26 = sub_1C151D86C();
    uint64_t v28 = v27;
    uint64_t v29 = MEMORY[0x1E4FBB1A0];
    *(void *)(v24 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v30 = sub_1BFE9C558();
    *(void *)(v24 + 64) = v30;
    *(void *)(v24 + 32) = v26;
    *(void *)(v24 + 40) = v28;
    double aBlock = a5;
    uint64_t v79 = *(void *)&a6;
    type metadata accessor for CGPoint(0);
    uint64_t v31 = sub_1C151E6AC();
    *(void *)(v24 + 96) = v29;
    *(void *)(v24 + 104) = v30;
    *(void *)(v24 + 72) = v31;
    *(void *)(v24 + 80) = v32;
    sub_1C151F38C();
    sub_1C15197BC();

    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v64 = v14;
    uint64_t v65 = v12;
    uint64_t v66 = v11;
    if (qword_1EB87B058 != -1) {
      swift_once();
    }
    uint64_t v34 = (void *)qword_1EB93C6F8;
    sub_1BFDE8F08(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1C1527210;
    id v36 = v34;
    uint64_t v37 = v20;
    uint64_t v38 = sub_1C151D86C();
    uint64_t v40 = v39;
    uint64_t v41 = MEMORY[0x1E4FBB1A0];
    *(void *)(v35 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v42 = sub_1BFE9C558();
    *(void *)(v35 + 64) = v42;
    *(void *)(v35 + 32) = v38;
    *(void *)(v35 + 40) = v40;
    double aBlock = a5;
    uint64_t v79 = *(void *)&a6;
    type metadata accessor for CGPoint(0);
    uint64_t v43 = sub_1C151E6AC();
    *(void *)(v35 + 96) = v41;
    *(void *)(v35 + 104) = v42;
    *(void *)(v35 + 72) = v43;
    *(void *)(v35 + 80) = v44;
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    uint64_t v45 = v77;
    swift_retain();
    uint64_t v84 = sub_1C151D86C();
    uint64_t v85 = v46;
    sub_1C151830C();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v63 = *(void *)(v45 + 40);
    sub_1BFDEA410(v70, (uint64_t)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
    uint64_t v48 = v68;
    uint64_t v47 = v69;
    uint64_t v49 = v37;
    uint64_t v50 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v69, v49, v71);
    unint64_t v51 = (*(unsigned __int8 *)(v67 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
    unint64_t v52 = (v18 + *(unsigned __int8 *)(v48 + 80) + v51) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    unint64_t v53 = (v16 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v54 = (v53 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v55 = swift_allocObject();
    sub_1BFDE9098((uint64_t)v19, v55 + v51, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
    (*(void (**)(unint64_t, char *, uint64_t))(v48 + 32))(v55 + v52, v47, v50);
    uint64_t v56 = (double *)(v55 + v53);
    *uint64_t v56 = a5;
    v56[1] = a6;
    uint64_t v57 = (void *)(v55 + v54);
    uint64_t v58 = v73;
    *uint64_t v57 = v72;
    v57[1] = v58;
    *(void *)(v55 + ((v54 + 23) & 0xFFFFFFFFFFFFFFF8)) = v77;
    uint64_t v82 = sub_1BFDE61E4;
    uint64_t v83 = v55;
    double aBlock = MEMORY[0x1E4F143A8];
    uint64_t v79 = 1107296256;
    uint64_t v80 = sub_1BFC9FC68;
    uint64_t v81 = &block_descriptor_6;
    uint64_t v59 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    unint64_t v60 = v74;
    sub_1C151E19C();
    uint64_t v84 = MEMORY[0x1E4FBC860];
    sub_1BFDE8CF4((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
    sub_1BFDE826C();
    sub_1BFDE8CF4((unint64_t *)&qword_1EB879C80, (void (*)(uint64_t))sub_1BFDE826C);
    uint64_t v61 = v76;
    uint64_t v62 = v66;
    sub_1C151FFBC();
    MEMORY[0x1C18C70C0](0, v60, v61, v59);
    _Block_release(v59);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v61, v62);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v60, v64);
    return swift_release();
  }
}

uint64_t sub_1BFDE7BF8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v9 = sub_1C151E16C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C151E1DC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v17 = (double)*(uint64_t *)(v4 + 64);
  v30.origin.x = a1;
  v30.origin.y = a2;
  v30.size.width = a3;
  v30.size.height = a4;
  double MinX = CGRectGetMinX(v30);
  v31.origin.x = a1;
  v31.origin.y = a2;
  v31.size.width = a3;
  v31.size.height = a4;
  double v19 = MinX - CGRectGetWidth(v31) * v17;
  v32.origin.x = a1;
  v32.origin.y = a2;
  v32.size.width = a3;
  v32.size.height = a4;
  double MinY = CGRectGetMinY(v32);
  v33.origin.x = a1;
  v33.origin.y = a2;
  v33.size.width = a3;
  v33.size.height = a4;
  double v21 = MinY - CGRectGetHeight(v33) * v17;
  v34.origin.x = a1;
  v34.origin.y = a2;
  v34.size.width = a3;
  v34.size.height = a4;
  double v22 = v17 + v17;
  double v23 = v22 * CGRectGetWidth(v34);
  v35.origin.x = a1;
  v35.origin.y = a2;
  v35.size.width = a3;
  v35.size.height = a4;
  double v24 = v22 * CGRectGetHeight(v35);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v4;
  *(double *)(v25 + 24) = v19;
  *(double *)(v25 + 32) = v21;
  *(double *)(v25 + 40) = v23;
  *(double *)(v25 + 48) = v24;
  aBlock[4] = sub_1BFDE5960;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  aBlock[3] = &block_descriptor_21;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  sub_1C151E19C();
  v28[1] = MEMORY[0x1E4FBC860];
  sub_1BFDE8CF4((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
  sub_1BFDE826C();
  sub_1BFDE8CF4((unint64_t *)&qword_1EB879C80, (void (*)(uint64_t))sub_1BFDE826C);
  sub_1C151FFBC();
  MEMORY[0x1C18C70C0](0, v16, v12, v26);
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return swift_release();
}

uint64_t FeedBannerAdRequester.unscheduleRequests(where:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C151E16C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151E1DC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v3;
  v14[3] = a1;
  void v14[4] = a2;
  aBlock[4] = sub_1BFDE5484;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  aBlock[3] = &block_descriptor_12_0;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1C151E19C();
  v17[1] = MEMORY[0x1E4FBC860];
  sub_1BFDE8CF4((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
  sub_1BFDE826C();
  sub_1BFDE8CF4((unint64_t *)&qword_1EB879C80, (void (*)(uint64_t))sub_1BFDE826C);
  sub_1C151FFBC();
  MEMORY[0x1C18C70C0](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void sub_1BFDE826C()
{
  if (!qword_1EB879C70)
  {
    sub_1C151E16C();
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879C70);
    }
  }
}

uint64_t sub_1BFDE82C4(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  sub_1BFEDE21C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v74 = v9;
  uint64_t v75 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v71 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v73 = (uint64_t)v66 - v13;
  uint64_t v81 = type metadata accessor for FeedBannerAdRequester.ScheduledRequest();
  uint64_t v79 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v15 = (char *)v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDE9168();
  uint64_t v17 = v16;
  uint64_t v80 = *(void **)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v78 = (char *)v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDE9100(0);
  MEMORY[0x1F4188790](v19 - 8);
  double v21 = (void *)((char *)v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v22);
  double v24 = (char *)v66 - v23;
  uint64_t v25 = sub_1C151665C();
  uint64_t v70 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v76 = (char *)v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1C151E24C();
  uint64_t v28 = *(void *)(v27 - 8);
  __n128 v29 = MEMORY[0x1F4188790](v27);
  CGRect v31 = (void *)((char *)v66 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  CGRect v32 = (void *)v4[5];
  *CGRect v31 = v32;
  (*(void (**)(void *, void, uint64_t, __n128))(v28 + 104))(v31, *MEMORY[0x1E4FBCBF0], v27, v29);
  id v33 = v32;
  LOBYTE(v32) = sub_1C151E26C();
  (*(void (**)(void *, uint64_t))(v28 + 8))(v31, v27);
  if ((v32 & 1) == 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v68 = v25;
  if (qword_1EB87B058 != -1) {
LABEL_21:
  }
    swift_once();
  CGRect v34 = (void *)qword_1EB93C6F8;
  sub_1BFDE8F08(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1C1529AE0;
  CGFloat v82 = a1;
  CGFloat v83 = a2;
  CGFloat v84 = a3;
  CGFloat v85 = a4;
  type metadata accessor for CGRect(0);
  id v36 = v34;
  uint64_t v37 = sub_1C151E6AC();
  uint64_t v39 = v38;
  *(void *)(v35 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v35 + 64) = sub_1BFE9C558();
  *(void *)(v35 + 32) = v37;
  *(void *)(v35 + 40) = v39;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  sub_1C151664C();
  uint64_t v69 = v4 + 7;
  swift_beginAccess();
  uint64_t v72 = v4;
  uint64_t v4 = (void *)v4[7];
  uint64_t v40 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v80 + 7);
  uint64_t v41 = (void *)v4[2];
  unint64_t v42 = (unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 6);
  uint64_t v67 = (void (**)(char *, uint64_t, uint64_t))(v75 + 16);
  v66[2] = v75 + 32;
  v66[1] = v75 + 8;
  swift_bridgeObjectRetain();
  unint64_t v43 = 0;
  unint64_t v77 = MEMORY[0x1E4FBC860];
  while (1)
  {
    if ((void *)v43 == v41)
    {
      uint64_t v44 = 1;
      unint64_t v43 = (unint64_t)v41;
    }
    else
    {
      if (v43 >= v4[2])
      {
        __break(1u);
        goto LABEL_20;
      }
      uint64_t v80 = (void *)(v43 + 1);
      uint64_t v45 = (uint64_t)v4
          + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))
          + *(void *)(v79 + 72) * v43;
      uint64_t v46 = v24;
      uint64_t v47 = v42;
      uint64_t v48 = v40;
      uint64_t v49 = v15;
      uint64_t v50 = v41;
      unint64_t v51 = v4;
      uint64_t v52 = (uint64_t)&v78[*(int *)(v17 + 48)];
      sub_1BFDEA410(v45, v52, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
      uint64_t v53 = (uint64_t)v21 + *(int *)(v17 + 48);
      *double v21 = v43;
      uint64_t v54 = v52;
      uint64_t v4 = v51;
      uint64_t v41 = v50;
      uint64_t v15 = v49;
      uint64_t v40 = v48;
      unint64_t v42 = v47;
      double v24 = v46;
      sub_1BFDE9098(v54, v53, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
      uint64_t v44 = 0;
      unint64_t v43 = (unint64_t)v80;
    }
    (*v40)(v21, v44, 1, v17);
    sub_1BFDE9098((uint64_t)v21, (uint64_t)v24, (uint64_t (*)(void))sub_1BFDE9100);
    if ((*v42)(v24, 1, v17) == 1) {
      break;
    }
    sub_1BFDE9098((uint64_t)&v24[*(int *)(v17 + 48)], (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
    v86.origin.x = a1;
    v86.origin.y = a2;
    v86.size.width = a3;
    v86.size.height = a4;
    if (CGRectContainsPoint(v86, *(CGPoint *)&v15[*(int *)(v81 + 24)]))
    {
      uint64_t v80 = v4;
      sub_1BFDE91FC(v15, v73);
      (*v67)(v71, v73, v74);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v77 = sub_1BFEDE1D4(0, *(void *)(v77 + 16) + 1, 1, v77);
      }
      unint64_t v56 = *(void *)(v77 + 16);
      unint64_t v55 = *(void *)(v77 + 24);
      unint64_t v57 = v56 + 1;
      if (v56 >= v55 >> 1)
      {
        v66[0] = v56 + 1;
        uint64_t v59 = sub_1BFEDE1D4(v55 > 1, v56 + 1, 1, v77);
        unint64_t v57 = v66[0];
        unint64_t v77 = v59;
      }
      unint64_t v58 = v77;
      *(void *)(v77 + 16) = v57;
      (*(void (**)(unint64_t, char *, uint64_t))(v75 + 32))(v58+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(void *)(v75 + 72) * v56, v71, v74);
      sub_1C151663C();
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v73, v74);
      sub_1BFDEA478((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
      uint64_t v4 = v80;
    }
    else
    {
      sub_1BFDEA478((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1BFDE9134(0);
  sub_1BFDE8CF4(&qword_1EB880C80, sub_1BFDE9134);
  sub_1BFDE8CF4(&qword_1EB880C88, sub_1BFDE9134);
  unint64_t v60 = v76;
  sub_1C151F1CC();
  swift_endAccess();
  uint64_t v61 = v72;
  swift_beginAccess();
  if (v61[2])
  {
    uint64_t v62 = v61[3];
    swift_endAccess();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v64 = *(void (**)(unint64_t, uint64_t, uint64_t))(v62 + 8);
    swift_unknownObjectRetain();
    v64(v77, ObjectType, v62);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v60, v68);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v70 + 8))(v60, v68);
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BFDE8C64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFDE8CAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFDE8CF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFDE8D3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFDE8D84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFDE8DCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFDE8E14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFDE8E5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFDE8EA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFDE8F08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFDE8F6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFDE8FD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFDE9034(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFDE9098(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1BFDE9100(uint64_t a1)
{
}

void sub_1BFDE9134(uint64_t a1)
{
}

void sub_1BFDE9168()
{
  if (!qword_1EB880D30)
  {
    type metadata accessor for FeedBannerAdRequester.ScheduledRequest();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB880D30);
    }
  }
}

uint64_t sub_1BFDE91D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0290B9C);
}

uint64_t sub_1BFDE91E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0290A88);
}

uint64_t sub_1BFDE91FC@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v113 = a2;
  uint64_t v114 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1F4188790](v114);
  uint64_t v95 = (char *)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v94 = (char *)&v90 - v5;
  uint64_t v6 = sub_1C151D1EC();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v108 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151DBAC();
  uint64_t v111 = *(void *)(v8 - 8);
  uint64_t v112 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v91 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v93 = (char *)&v90 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v90 = (char *)&v90 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v92 = (char *)&v90 - v15;
  sub_1BFDEA4D8();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v106 = (uint64_t)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v110 = (uint64_t)&v90 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v105 = (uint64_t)&v90 - v21;
  uint64_t v22 = sub_1C151D33C();
  uint64_t v116 = *(void *)(v22 - 8);
  uint64_t v117 = v22;
  MEMORY[0x1F4188790](v22);
  uint64_t v104 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v102 = (char *)&v90 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v103 = (char *)&v90 - v27;
  sub_1BFDE9E84(0, (unint64_t *)&qword_1EB8717D0, MEMORY[0x1E4F7B0F0]);
  uint64_t v115 = v28;
  uint64_t v107 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  char v101 = (char *)&v90 - v29;
  uint64_t v100 = sub_1C151D87C();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  uint64_t v98 = (char *)&v90 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDE9E84(0, (unint64_t *)&unk_1EB87CB00, MEMORY[0x1E4F7A9E8]);
  uint64_t v97 = v31;
  MEMORY[0x1F4188790](v31);
  uint64_t v96 = (uint64_t)&v90 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)&v90 - v34;
  if (qword_1EB87B058 != -1) {
    swift_once();
  }
  id v36 = (void *)qword_1EB93C6F8;
  sub_1BFDE8F08(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1C1527210;
  uint64_t v38 = type metadata accessor for FeedBannerAdRequester.ScheduledRequest();
  uint64_t v39 = &a1[*(int *)(v38 + 20)];
  id v40 = v36;
  uint64_t v41 = sub_1C151D86C();
  uint64_t v43 = v42;
  uint64_t v44 = MEMORY[0x1E4FBB1A0];
  *(void *)(v37 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v45 = sub_1BFE9C558();
  *(void *)(v37 + 64) = v45;
  *(void *)(v37 + 32) = v41;
  *(void *)(v37 + 40) = v43;
  long long v118 = *(_OWORD *)&a1[*(int *)(v38 + 24)];
  type metadata accessor for CGPoint(0);
  uint64_t v46 = sub_1C151E6AC();
  *(void *)(v37 + 96) = v44;
  *(void *)(v37 + 104) = v45;
  *(void *)(v37 + 72) = v46;
  *(void *)(v37 + 80) = v47;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  sub_1C151D0EC();
  uint64_t v48 = v99;
  uint64_t v49 = v98;
  uint64_t v50 = v39;
  uint64_t v51 = v100;
  uint64_t v52 = (*(uint64_t (**)(char *, char *, uint64_t))(v99 + 16))(v98, v50, v100);
  MEMORY[0x1F4188790](v52);
  *(&v90 - 2) = a1;
  sub_1C151D54C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v51);
  uint64_t v109 = v35;
  uint64_t v53 = v96;
  sub_1BFDEA764((uint64_t)v35, v96);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v54 = *(void **)v53;
    uint64_t v105 = *(void *)(v53 + 8);

    uint64_t v55 = *MEMORY[0x1E4F7A8A8];
    uint64_t v56 = sub_1C151D32C();
    unint64_t v57 = v104;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 104))(v104, v55, v56);
    uint64_t v59 = v116;
    uint64_t v58 = v117;
    (*(void (**)(char *, void, uint64_t))(v116 + 104))(v57, *MEMORY[0x1E4F7A898], v117);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56))(v106, 1, 1, v115);
    unint64_t v60 = (int *)v114;
    sub_1C151DB4C();
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v102, v57, v58);
    sub_1C151DB4C();
    sub_1C151DA9C();
    swift_bridgeObjectRelease();
    uint64_t v61 = v93;
    sub_1C151DB5C();
    uint64_t v63 = *(void *)a1;
    uint64_t v62 = *((void *)a1 + 1);
    uint64_t v65 = v111;
    uint64_t v64 = v112;
    uint64_t v66 = v91;
    (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v91, v61, v112);
    uint64_t v67 = v95;
    *(void *)&v95[v60[6]] = qword_1F1B6CA78;
    uint64_t v68 = &v67[v60[7]];
    *(void *)uint64_t v68 = 0;
    v68[8] = 1;
    *(_OWORD *)&v67[v60[8]] = xmmword_1C1533700;
    *(void *)uint64_t v67 = v63;
    *((void *)v67 + 1) = v62;
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(&v67[v60[5]], v66, v64);
    uint64_t v69 = v106;
    sub_1BFDEA410(v106, v110, (uint64_t (*)(void))sub_1BFDEA4D8);
    sub_1BFDE8CF4(&qword_1EB895030, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C151D39C();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v61, v64);
    swift_release();
    sub_1BFDEA478(v69, (uint64_t (*)(void))sub_1BFDEA4D8);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v104, v117);
  }
  else
  {
    sub_1BFDEA640();
    uint64_t v106 = *(void *)(v53 + *(int *)(v70 + 48));
    uint64_t v71 = v107;
    uint64_t v72 = v101;
    uint64_t v73 = v53;
    uint64_t v74 = v115;
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 32))(v101, v73, v115);
    uint64_t v75 = v117;
    uint64_t v76 = v116;
    unint64_t v77 = v103;
    (*(void (**)(char *, void, uint64_t))(v116 + 104))(v103, *MEMORY[0x1E4F7A8C0], v117);
    uint64_t v78 = v105;
    (*(void (**)(uint64_t, char *, uint64_t))(v71 + 16))(v105, v72, v74);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v78, 0, 1, v74);
    uint64_t v79 = (int *)v114;
    sub_1C151DB4C();
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v102, v77, v75);
    sub_1C151DB4C();
    sub_1C151DA9C();
    swift_bridgeObjectRelease();
    uint64_t v80 = v92;
    sub_1C151DB5C();
    uint64_t v82 = *(void *)a1;
    uint64_t v81 = *((void *)a1 + 1);
    uint64_t v84 = v111;
    uint64_t v83 = v112;
    CGFloat v85 = v90;
    (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v90, v80, v112);
    CGRect v86 = v94;
    *(void *)&v94[v79[6]] = qword_1F1B6CA50;
    char v87 = &v86[v79[7]];
    *(void *)char v87 = 0;
    v87[8] = 1;
    *(_OWORD *)&v86[v79[8]] = xmmword_1C1533700;
    *(void *)CGRect v86 = v82;
    *((void *)v86 + 1) = v81;
    (*(void (**)(char *, char *, uint64_t))(v84 + 32))(&v86[v79[5]], v85, v83);
    uint64_t v88 = v105;
    sub_1BFDEA410(v105, v110, (uint64_t (*)(void))sub_1BFDEA4D8);
    sub_1BFDE8CF4(&qword_1EB895030, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C151D39C();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v80, v83);
    swift_release();
    sub_1BFDEA478(v88, (uint64_t (*)(void))sub_1BFDEA4D8);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v103, v117);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v101, v115);
  }
  return sub_1BFDEA6EC((uint64_t)v109);
}

void sub_1BFDE9E84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = sub_1C151D7BC();
    v8[1] = sub_1C151D87C();
    v8[2] = sub_1BFDE8CF4(&qword_1EB894940, MEMORY[0x1E4F7AE10]);
    v8[3] = MEMORY[0x1E4F7AEA0];
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t sub_1BFDE9F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, CGFloat a6, CGFloat a7)
{
  sub_1BFEDE21C();
  uint64_t v43 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for FeedBannerAdRequester.ScheduledRequest();
  uint64_t v19 = (int *)(v18 - 8);
  uint64_t v42 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v41 - v23;
  sub_1BFDEA410(a1, (uint64_t)&v41 - v23, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
  uint64_t v25 = &v24[v19[7]];
  uint64_t v26 = sub_1C151D87C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v25, a2, v26);
  uint64_t v27 = (double *)&v24[v19[8]];
  *uint64_t v27 = a6;
  v27[1] = a7;
  uint64_t v28 = &v24[v19[9]];
  *(void *)uint64_t v28 = a3;
  *((void *)v28 + 1) = a4;
  swift_retain();
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v44 == 1 && (v45.x = a6, v45.y = a7, !CGRectContainsPoint(*(CGRect *)(a5 + 72), v45)))
  {
    sub_1BFDEA410((uint64_t)v24, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
    id v36 = (unint64_t *)(a5 + 56);
    swift_beginAccess();
    unint64_t v37 = *(void *)(a5 + 56);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a5 + 56) = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v37 = sub_1C0EE3694(0, *(void *)(v37 + 16) + 1, 1, v37);
      *id v36 = v37;
    }
    unint64_t v40 = *(void *)(v37 + 16);
    unint64_t v39 = *(void *)(v37 + 24);
    if (v40 >= v39 >> 1)
    {
      unint64_t v37 = sub_1C0EE3694(v39 > 1, v40 + 1, 1, v37);
      *id v36 = v37;
    }
    *(void *)(v37 + 16) = v40 + 1;
    sub_1BFDE9098((uint64_t)v21, v37+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v40, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
    swift_endAccess();
  }
  else
  {
    sub_1BFDE91FC(v24, (uint64_t)v17);
    swift_beginAccess();
    if (!*(void *)(a5 + 16))
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v43);
      sub_1BFDEA478((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
      return swift_endAccess();
    }
    uint64_t v29 = *(void *)(a5 + 24);
    swift_endAccess();
    uint64_t ObjectType = swift_getObjectType();
    sub_1BFDE8F08(0, &qword_1EB87A5C8, (uint64_t (*)(uint64_t))sub_1BFEDE21C, MEMORY[0x1E4FBBE00]);
    unint64_t v31 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1C1529AE0;
    uint64_t v33 = v43;
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 16))(v32 + v31, v17, v43);
    uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 8);
    swift_unknownObjectRetain();
    v34(v32, ObjectType, v29);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v33);
  }
  return sub_1BFDEA478((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
}

uint64_t sub_1BFDEA410(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFDEA478(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1BFDEA4D8()
{
  if (!qword_1EB8717D8)
  {
    sub_1BFDE9E84(255, (unint64_t *)&qword_1EB8717D0, MEMORY[0x1E4F7B0F0]);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8717D8);
    }
  }
}

uint64_t sub_1BFDEA54C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for FeedBannerAd();
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_1C151DBAC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  if (*(void *)(a1 + *(int *)(v4 + 32) + 8) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = sub_1C151D87C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return swift_release();
}

void sub_1BFDEA640()
{
  if (!qword_1EB8717C8)
  {
    sub_1BFDE9E84(255, (unint64_t *)&qword_1EB8717D0, MEMORY[0x1E4F7B0F0]);
    sub_1BFDE9E84(255, qword_1EB894960, MEMORY[0x1E4F7B068]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB8717C8);
    }
  }
}

uint64_t sub_1BFDEA6EC(uint64_t a1)
{
  sub_1BFDE9E84(0, (unint64_t *)&unk_1EB87CB00, MEMORY[0x1E4F7A9E8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BFDEA764(uint64_t a1, uint64_t a2)
{
  sub_1BFDE9E84(0, (unint64_t *)&unk_1EB87CB00, MEMORY[0x1E4F7A9E8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFDEA7E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatHeadlineBinding.Text.init(from:)(a1, a2);
}

uint64_t FormatHeadlineBinding.Text.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v27 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  uint64_t v9 = v2;
  if (v2)
  {
LABEL_11:
    sub_1C0038728(a1, (uint64_t)v9);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v6;
  uint64_t v11 = v32;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = v8;
  if (v13)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unint64_t *)(v15 + 40);
      while (1)
      {
        unint64_t v18 = *v17;
        if (*v17 >= 4) {
          break;
        }
        v17 += 2;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v23 = *(v17 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v9 = (void *)swift_allocError();
      *(void *)uint64_t v24 = v23;
      *(void *)(v24 + 8) = v18;
      *(void *)(v24 + 16) = &unk_1F1B857E0;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v23, v18);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFDEAFEC();
  long long v28 = 0uLL;
  sub_1C15206EC();
  switch((char)v27)
  {
    case 1:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = xmmword_1C153AB20;
      goto LABEL_35;
    case 2:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = xmmword_1C1557FA0;
      goto LABEL_35;
    case 3:
      long long v27 = xmmword_1C152C800;
      sub_1BFDEB040();
      sub_1C152065C();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = v29;
      if (v29 == 3)
      {
        uint64_t v20 = 0;
        char v22 = 0;
        long long v21 = 0uLL;
        uint64_t v19 = 1;
        goto LABEL_37;
      }
      char v22 = 0;
      uint64_t v20 = v31;
      long long v26 = v30;
      long long v21 = v28;
      break;
    case 4:
      long long v27 = xmmword_1C152C800;
      sub_1BFDEB040();
      sub_1C152065C();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = v29;
      if (v29 == 3)
      {
        uint64_t v20 = 0;
        long long v21 = 0uLL;
        uint64_t v19 = 1;
        char v22 = 1;
        goto LABEL_37;
      }
      uint64_t v20 = v31;
      long long v26 = v30;
      char v22 = 1;
      long long v21 = v28;
      break;
    case 5:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = xmmword_1C1557FB0;
      goto LABEL_35;
    case 6:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = xmmword_1C1557FD0;
      goto LABEL_35;
    case 7:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = xmmword_1C1557FC0;
      goto LABEL_35;
    case 8:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = xmmword_1C1557FE0;
      goto LABEL_35;
    case 9:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = xmmword_1C1558010;
      goto LABEL_35;
    case 10:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = xmmword_1C1558020;
      goto LABEL_35;
    case 11:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = xmmword_1C1558030;
      goto LABEL_35;
    case 12:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = xmmword_1C1558040;
      goto LABEL_35;
    case 13:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = xmmword_1C1558050;
      goto LABEL_35;
    case 14:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = xmmword_1C1557FF0;
      goto LABEL_35;
    case 15:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = xmmword_1C1533150;
      goto LABEL_35;
    case 16:
      long long v28 = xmmword_1C152C800;
      sub_1BFDEB094();
      sub_1C152065C();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      char v22 = v27;
      if (v27 == 2)
      {
        uint64_t v19 = 0;
        uint64_t v20 = 0;
        long long v21 = 0uLL;
LABEL_37:
        long long v26 = 0uLL;
      }
      else
      {
        uint64_t v19 = 0;
        uint64_t v20 = 0;
        long long v26 = 0uLL;
        long long v21 = v27 & 1;
        char v22 = 2;
      }
      break;
    case 17:
      long long v28 = xmmword_1C152C800;
      sub_1C088E744();
      sub_1C152065C();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = 0uLL;
      char v22 = 3;
      goto LABEL_37;
    case 18:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = xmmword_1C1558060;
      goto LABEL_35;
    case 19:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = xmmword_1C1558000;
LABEL_35:
      long long v26 = 0uLL;
      char v22 = 4;
      break;
    default:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v5);
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      long long v21 = 0uLL;
      char v22 = 4;
      goto LABEL_37;
  }
  *(_OWORD *)uint64_t v11 = v21;
  *(void *)(v11 + 16) = v19;
  *(_OWORD *)(v11 + 24) = v26;
  *(void *)(v11 + 40) = v20;
  *(unsigned char *)(v11 + 48) = v22;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDEAFEC()
{
  unint64_t result = qword_1EB88A258;
  if (!qword_1EB88A258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A258);
  }
  return result;
}

unint64_t sub_1BFDEB040()
{
  unint64_t result = qword_1EB871808;
  if (!qword_1EB871808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB871808);
  }
  return result;
}

unint64_t sub_1BFDEB094()
{
  unint64_t result = qword_1EB885818;
  if (!qword_1EB885818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB885818);
  }
  return result;
}

uint64_t sub_1BFDEB0E8(void *a1)
{
  return FormatSymbolImage.encode(to:)(a1);
}

uint64_t FormatSymbolImage.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v61 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v65 = (char *)&v59 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v67 = (char *)&v59 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v73 = (char *)&v59 - v10;
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v59 - v12;
  sub_1C0863AEC();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v1 + 8);
  uint64_t v75 = *(void *)v1;
  uint64_t v18 = *(void *)(v1 + 16);
  char v19 = *(unsigned char *)(v1 + 24);
  uint64_t v20 = *(void *)(v1 + 32);
  uint64_t v71 = *(void *)(v1 + 40);
  uint64_t v72 = v20;
  unsigned int v70 = *(unsigned __int16 *)(v1 + 48);
  uint64_t v66 = *(void *)(v1 + 56);
  uint64_t v68 = *(void *)(v1 + 64);
  uint64_t v21 = *(void *)(v1 + 72);
  uint64_t v63 = *(void *)(v1 + 80);
  uint64_t v64 = v21;
  int v62 = *(unsigned __int8 *)(v1 + 88);
  unint64_t v60 = *(void *)(v1 + 96);
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_1C08639C0();
  uint64_t v25 = v24;
  uint64_t v26 = sub_1C085F050(&qword_1EB891C90, (void (*)(uint64_t))sub_1C08639C0);
  unint64_t v77 = v16;
  uint64_t v27 = (uint64_t)v16;
  char v28 = v19;
  uint64_t v29 = v75;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatSymbolImage, v30, v22, (uint64_t)&type metadata for FormatSymbolImage, v25, (uint64_t)&type metadata for FormatVersions.JazzkonC, v23, v27, v26, (uint64_t)&off_1F1C39B68);
  sub_1BFDEB94C(v29, v17, v18, v28);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1C151928C();
  uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1EB93CAB0);
  uint64_t v33 = *(void *)(v31 - 8);
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
  uint64_t v74 = v33 + 16;
  uint64_t v69 = v34;
  v34((uint64_t)v13, v32, v31);
  uint64_t v35 = (uint64_t (*)(uint64_t))type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  id v36 = v76;
  sub_1C06C0804(v29, v17, v18, v28, 0, 0, 0, (uint64_t)v13, (uint64_t)sub_1C01B158C, 0);
  if (v36)
  {
    sub_1BFEFEB68((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    sub_1BFDEB9E0(v29, v17, v18, v28);
    uint64_t v37 = (uint64_t)v77;
  }
  else
  {
    uint64_t v76 = type metadata accessor for FormatVersionRequirement;
    sub_1BFEFEB68((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    sub_1BFDEB9E0(v29, v17, v18, v28);
    uint64_t v38 = (uint64_t)v73;
    uint64_t v39 = v32;
    unint64_t v40 = v69;
    v69((uint64_t)v73, v39, v31);
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = v71;
    uint64_t v41 = v72;
    uint64_t v43 = v70;
    sub_1BFF62358(v72, v71, v70);
    uint64_t v37 = (uint64_t)v77;
    sub_1C071AC44(v41, v42, v43, 1, 0, 0, v38, (uint64_t)sub_1C01B158C);
    sub_1BFEFEB68(v38, v76);
    sub_1BFF6179C(v41, v42, v43);
    uint64_t v76 = v35;
    sub_1BFF05D18();
    uint64_t v45 = v66;
    uint64_t v46 = (uint64_t)v67;
    uint64_t v47 = &v67[*(int *)(v44 + 48)];
    uint64_t v48 = &v67[*(int *)(v44 + 64)];
    sub_1BFDEB8B4(v66);
    if (qword_1EB887620 != -1) {
      swift_once();
    }
    uint64_t v49 = __swift_project_value_buffer(v31, (uint64_t)qword_1EB93CA50);
    v40(v46, v49, v31);
    if (qword_1EB8849D0 != -1) {
      swift_once();
    }
    uint64_t v75 = __swift_project_value_buffer(v31, (uint64_t)qword_1EB93C828);
    ((void (*)(char *))v40)(v47);
    *(void *)uint64_t v48 = 0;
    *((void *)v48 + 1) = 0;
    swift_storeEnumTagMultiPayload();
    sub_1C071AED8(v45, v68, 2, 0, 0, v46, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v46, type metadata accessor for FormatVersionRequirement);
    sub_1BFDEB900(v45);
    uint64_t v73 = 0;
    uint64_t v51 = v63;
    uint64_t v50 = v64;
    int v52 = v62;
    sub_1BFE94AB4(v64, v63, v62);
    if (qword_1EB8875E0 != -1) {
      swift_once();
    }
    uint64_t v53 = __swift_project_value_buffer(v31, (uint64_t)qword_1EB93C9D8);
    uint64_t v54 = (uint64_t)v65;
    v40((uint64_t)v65, v53, v31);
    swift_storeEnumTagMultiPayload();
    uint64_t v55 = v73;
    sub_1C06D639C(v50, v51, v52, 3, 0, 0, v54, (uint64_t)sub_1C01B158C);
    sub_1BFEFEB68(v54, type metadata accessor for FormatVersionRequirement);
    sub_1BFE94AD4(v50, v51, v52);
    if (!v55)
    {
      uint64_t v56 = (uint64_t)v61;
      v40((uint64_t)v61, v75, v31);
      swift_storeEnumTagMultiPayload();
      unint64_t v57 = v60;
      sub_1C00F5B0C(v60);
      sub_1C071B140(v57, 4, 0, 0, v56, (uint64_t)sub_1C01B158C, 0);
      sub_1BFEFEB68(v56, type metadata accessor for FormatVersionRequirement);
      sub_1C00F5B20(v57);
    }
  }
  return sub_1BFEFEB68(v37, (uint64_t (*)(void))sub_1C0863AEC);
}

uint64_t sub_1BFDEB8B4(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BFDEB900(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BFDEB94C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = vars8;
  }
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BFDEB98C()
{
  unint64_t result = qword_1EB85B8C0;
  if (!qword_1EB85B8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B8C0);
  }
  return result;
}

uint64_t sub_1BFDEB9E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (a4)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1BFDEBA30()
{
  unint64_t result = qword_1EB85BA30;
  if (!qword_1EB85BA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BA30);
  }
  return result;
}

uint64_t sub_1BFDEBA84@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatBindExpression.init(from:)(a1, a2);
}

uint64_t FormatBindExpression.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v48 = a2;
  sub_1C0908CDC(0, &qword_1EB87C740, (void (*)(void))sub_1C0080144, (void (*)(void))sub_1C0080240);
  uint64_t v46 = *(void *)(v5 - 8);
  uint64_t v47 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v39 - v6;
  sub_1C0875720();
  uint64_t v9 = v8;
  uint64_t v49 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08757B4();
  sub_1C085F050(&qword_1EB891E60, (void (*)(uint64_t))sub_1C08757B4);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    uint64_t v31 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v31);
  }
  uint64_t v44 = v7;
  uint64_t v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = v9;
  uint64_t v16 = v47;
  uint64_t v15 = v48;
  uint64_t v17 = v46;
  if (v13)
  {
    uint64_t v18 = sub_1C152070C();
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      uint64_t v20 = (unsigned char *)(v18 + 48);
      while (*v20 != 1)
      {
        v20 += 24;
        if (!--v19) {
          goto LABEL_7;
        }
      }
      uint64_t v24 = v14;
      uint64_t v25 = *((void *)v20 - 2);
      uint64_t v26 = *((void *)v20 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v27 = swift_bridgeObjectRelease();
      char v28 = v11;
      MEMORY[0x1F4188790](v27);
      *(&v39 - 4) = (uint64_t)&_s10CodingKeysON_190;
      *(&v39 - 3) = sub_1C0875838();
      *(&v39 - 2) = sub_1BFDEC0D8();
      *(&v39 - 1) = sub_1C087588C();
      swift_getKeyPath();
      swift_retain();
      uint64_t v29 = sub_1C085FB14((uint64_t)&unk_1F1B83E50);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v30 = v25;
      *(void *)(v30 + 8) = v26;
      *(void *)(v30 + 16) = v29;
      *(_OWORD *)(v30 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v25, v26, 1);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v28, v24);
      a1 = v45;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = sub_1C07F0DDC((uint64_t)v11, 0, 0, 0, (void (*)(void, __n128))sub_1C0875720);
  uint64_t v23 = v22;
  uint64_t v33 = sub_1C07F163C((uint64_t)v11, 1, 0, 0, (uint64_t (*)(void))sub_1BFDEC12C, (void (*)(void, __n128))sub_1C0875720, &qword_1EB87C6B0, (void (*)(uint64_t))sub_1BFDEC12C);
  uint64_t v42 = v21;
  long long v43 = xmmword_1C1557FA0;
  long long v52 = xmmword_1C1557FA0;
  char v53 = 0;
  char v34 = sub_1C152071C();
  if (v34)
  {
    long long v50 = v43;
    char v51 = 0;
    sub_1C15206EC();
    uint64_t v35 = v54;
  }
  else
  {
    uint64_t v35 = 1;
  }
  *(void *)&long long v43 = v35;
  long long v41 = xmmword_1C1557FB0;
  long long v52 = xmmword_1C1557FB0;
  char v53 = 0;
  if (sub_1C152071C())
  {
    uint64_t v40 = v23;
    long long v50 = v41;
    char v51 = 0;
    sub_1C08758E0();
    id v36 = v44;
    sub_1C15206EC();
    uint64_t v37 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, v16);
    uint64_t v23 = v40;
  }
  else
  {
    uint64_t v37 = MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, uint64_t))(v49 + 8))(v11, v14);
  *uint64_t v15 = v42;
  v15[1] = v23;
  uint64_t v38 = v43;
  v15[2] = v33;
  v15[3] = v38;
  void v15[4] = v37;
  uint64_t v31 = (uint64_t)v45;
  return __swift_destroy_boxed_opaque_existential_1(v31);
}

unint64_t sub_1BFDEC0D8()
{
  unint64_t result = qword_1EB889440;
  if (!qword_1EB889440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889440);
  }
  return result;
}

void sub_1BFDEC12C()
{
  if (!qword_1EB87C6B8)
  {
    sub_1BFD86FC0();
    sub_1BFFB39D8();
    sub_1C0081EF8();
    unint64_t v0 = sub_1C1517E6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87C6B8);
    }
  }
}

uint64_t sub_1BFDEC1B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingExpression.init(from:)(a1, a2);
}

uint64_t FormatBindingExpression.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v48 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v36 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
    uint64_t v10 = a1;
LABEL_25:
    sub_1C0038728(v10, (uint64_t)v3);
    swift_willThrow();

    uint64_t v34 = (uint64_t)v10;
    return __swift_destroy_boxed_opaque_existential_1(v34);
  }
  uint64_t v11 = v7;
  uint64_t v12 = v48;
  uint64_t v13 = a1[3];
  uint64_t v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  uint64_t v14 = sub_1C1520EAC();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = v9;
  if (v13)
  {
    uint64_t v16 = sub_1C152070C();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = (unint64_t *)(v16 + 40);
      while (1)
      {
        unint64_t v19 = *v18;
        if (*v18 >= 4) {
          break;
        }
        v18 += 2;
        if (!--v17) {
          goto LABEL_8;
        }
      }
      uint64_t v27 = *(v18 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v28 = v27;
      *(void *)(v28 + 8) = v19;
      *(void *)(v28 + 16) = &unk_1F1B83EC8;
      *(_OWORD *)(v28 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v27, v19);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v10 = v37;
      goto LABEL_25;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BFDEC8E8();
  *(_OWORD *)uint64_t v38 = 0uLL;
  sub_1C15206EC();
  switch((char)v47)
  {
    case 1:
      long long v47 = xmmword_1C152C800;
      sub_1BFDEC990();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v22 = *(void *)v38;
      unsigned long long v23 = *(_OWORD *)&v38[8];
      long long v24 = v39;
      uint64_t v26 = v40;
      long long v29 = v42;
      long long v30 = v43;
      long long v31 = v44;
      uint64_t v20 = v41;
      int v21 = v45 | (v46 << 16) | 0x4000;
      goto LABEL_30;
    case 2:
      *(_OWORD *)uint64_t v38 = xmmword_1C152C800;
      sub_1BFDEC93C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v26 = 0;
      uint64_t v20 = 0;
      uint64_t v32 = 0x10000;
      if (!BYTE10(v47)) {
        uint64_t v32 = 0;
      }
      uint64_t v22 = v47;
      long long v24 = 0uLL;
      unsigned long long v23 = (unint64_t)v32 | (unsigned __int128)WORD4(v47);
      int v21 = 0x8000;
      break;
    case 3:
      *(_OWORD *)uint64_t v38 = xmmword_1C152C800;
      sub_1BFDECB34();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v26 = 0;
      uint64_t v20 = 0;
      uint64_t v33 = 256;
      if (!BYTE1(v47)) {
        uint64_t v33 = 0;
      }
      uint64_t v22 = v33 | v47;
      unsigned long long v23 = 0uLL;
      int v21 = 49152;
      goto LABEL_27;
    case 4:
      *(_OWORD *)uint64_t v38 = xmmword_1C152C800;
      sub_1BFDECAE0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v26 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = v47;
      unsigned long long v23 = 0uLL;
      int v21 = 0x100000;
      goto LABEL_27;
    case 5:
      long long v47 = xmmword_1C152C800;
      sub_1BFDECA8C();
      sub_1C15206EC();
      int v21 = 1064960;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v26 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = *(void *)v38;
      unsigned long long v23 = *(_OWORD *)&v38[8];
      long long v29 = 0uLL;
      long long v24 = (unsigned __int16)v39;
      goto LABEL_29;
    case 6:
      long long v47 = xmmword_1C152C800;
      sub_1BFDECA38();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v26 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = *(void *)v38;
      unsigned long long v23 = *(_OWORD *)&v38[8];
      int v21 = 1081344;
      goto LABEL_27;
    case 7:
      long long v47 = xmmword_1C152C800;
      sub_1C0876068();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v26 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = v38[0];
      unsigned long long v23 = *(_OWORD *)&v38[8];
      int v21 = 1097728;
LABEL_27:
      long long v24 = 0uLL;
      break;
    default:
      long long v47 = xmmword_1C152C800;
      sub_1BFDEC9E4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v6);
      uint64_t v20 = 0;
      int v21 = 0;
      uint64_t v22 = *(void *)v38;
      unsigned long long v23 = *(_OWORD *)&v38[8];
      long long v24 = v39;
      uint64_t v25 = 256;
      if (!BYTE1(v40)) {
        uint64_t v25 = 0;
      }
      uint64_t v26 = v25 | v40;
      break;
  }
  long long v29 = 0uLL;
LABEL_29:
  long long v30 = 0uLL;
  long long v31 = 0uLL;
LABEL_30:
  uint64_t v34 = (uint64_t)v37;
  *(void *)uint64_t v12 = v22;
  *(_OWORD *)(v12 + 8) = v23;
  *(_OWORD *)(v12 + 24) = v24;
  *(void *)(v12 + 40) = v26;
  *(void *)(v12 + 48) = v20;
  *(_OWORD *)(v12 + 56) = v29;
  *(_OWORD *)(v12 + 72) = v30;
  *(_OWORD *)(v12 + 88) = v31;
  *(_WORD *)(v12 + 104) = v21;
  *(unsigned char *)(v12 + 106) = BYTE2(v21);
  return __swift_destroy_boxed_opaque_existential_1(v34);
}

unint64_t sub_1BFDEC8E8()
{
  unint64_t result = qword_1EB88AD10;
  if (!qword_1EB88AD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88AD10);
  }
  return result;
}

unint64_t sub_1BFDEC93C()
{
  unint64_t result = qword_1EB878A28;
  if (!qword_1EB878A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878A28);
  }
  return result;
}

unint64_t sub_1BFDEC990()
{
  unint64_t result = qword_1EB878A30;
  if (!qword_1EB878A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878A30);
  }
  return result;
}

unint64_t sub_1BFDEC9E4()
{
  unint64_t result = qword_1EB878C40;
  if (!qword_1EB878C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878C40);
  }
  return result;
}

unint64_t sub_1BFDECA38()
{
  unint64_t result = qword_1EB88DDD0;
  if (!qword_1EB88DDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88DDD0);
  }
  return result;
}

unint64_t sub_1BFDECA8C()
{
  unint64_t result = qword_1EB88C018;
  if (!qword_1EB88C018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88C018);
  }
  return result;
}

unint64_t sub_1BFDECAE0()
{
  unint64_t result = qword_1EB880A58[0];
  if (!qword_1EB880A58[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB880A58);
  }
  return result;
}

unint64_t sub_1BFDECB34()
{
  unint64_t result = qword_1EB870F28;
  if (!qword_1EB870F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870F28);
  }
  return result;
}

uint64_t sub_1BFDECB88@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = FeedGroupKnobsRuleValue.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t FeedGroupKnobsRuleValue.__allocating_init(from:)(uint64_t a1)
{
  return sub_1BFDECBE0(a1, (void (*)(uint64_t))FeedGroupKnobsRuleValue.init(from:));
}

uint64_t sub_1BFDECBE0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = swift_allocObject();
  a2(a1);
  return v4;
}

uint64_t FeedGroupKnobsRuleValue.init(from:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v27 = *(void **)v2;
  uint64_t v4 = v27[10];
  uint64_t v5 = v27[11];
  uint64_t v6 = v27[12];
  uint64_t v7 = v27[13];
  uint64_t v38 = v4;
  uint64_t v39 = v5;
  uint64_t v30 = v6;
  uint64_t v40 = v6;
  uint64_t v41 = v7;
  uint64_t v32 = v7;
  type metadata accessor for FeedGroupKnobsRuleValue.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_1C152072C();
  uint64_t v23 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  long long v29 = (char *)&v22 - v9;
  uint64_t v25 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v26 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = a1[3];
  uint64_t v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  id v16 = v31;
  sub_1C1520E9C();
  uint64_t v24 = v8;
  if (v16)
  {
    id v31 = v16;
    __swift_project_boxed_opaque_existential_1(v33, v33[3]);
    sub_1C1520EBC();
    LOBYTE(v38) = 0;
    uint64_t v17 = v24;
    sub_1C15206EC();
    uint64_t v38 = v4;
    uint64_t v39 = v5;
    uint64_t v40 = v30;
    uint64_t v41 = v32;
    type metadata accessor for FeedGroupKnobsRuleValue.Selector();
    sub_1C151ED5C();
    LOBYTE(v38) = 1;
    uint64_t v42 = swift_getWitnessTable();
    swift_getWitnessTable();
    sub_1C152065C();
    uint64_t v21 = v34;
    if (!v34) {
      uint64_t v21 = sub_1C151ECBC();
    }

    (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v17);
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v2 + *(void *)(*(void *)v2 + 112), v26, v4);
    *(void *)(v2 + *(void *)(*(void *)v2 + 120)) = v21;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(&v38, v41);
    sub_1C1520AEC();
    uint64_t v19 = v25;
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v2 + *(void *)(*(void *)v2 + 112), v14, v4);
    uint64_t v34 = v4;
    uint64_t v35 = v5;
    uint64_t v36 = v30;
    uint64_t v37 = v32;
    type metadata accessor for FeedGroupKnobsRuleValue.Selector();
    uint64_t v20 = sub_1C151ECBC();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v4);
    *(void *)(v2 + *(void *)(*(void *)v2 + 120)) = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return v2;
}

uint64_t type metadata accessor for FeedGroupKnobsRuleValue.Selector()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for FeedGroupKnobsRuleValue.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for FeedGroupKnobsRuleValue.Selector.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t destroy for FeedGroupTopicDiversityRequirements()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedGroupTopicDiversityRequirements(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFDED3A8(void *a1)
{
  return FormatColorAssignComponentProcessor.encode(to:)(a1);
}

uint64_t FormatColorAssignComponentProcessor.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  v25[0] = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v25 - v6;
  sub_1C087B9B4();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = *(unsigned char *)v1;
  double v12 = *(double *)(v1 + 8);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1C087B888();
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C085F050(&qword_1EB8923F0, (void (*)(uint64_t))sub_1C087B888);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatColorAssignComponentProcessor, v18, v13, (uint64_t)&type metadata for FormatColorAssignComponentProcessor, v16, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v10, v17, (uint64_t)&off_1F1C39B68);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C151928C();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB93CAB0);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  v21(v7, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = v25[1];
  sub_1C06A88F0(v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  if (!v22)
  {
    uint64_t v23 = v25[0];
    v21((char *)v25[0], v20, v19);
    swift_storeEnumTagMultiPayload();
    sub_1C06A8A88(1, 0, 0, v23, (uint64_t)sub_1C01B158C, 0, v12);
    sub_1BFEFEB68(v23, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BFEFEB68((uint64_t)v10, (uint64_t (*)(void))sub_1C087B9B4);
}

unint64_t sub_1BFDED6F8()
{
  unint64_t result = qword_1EB85BB68;
  if (!qword_1EB85BB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BB68);
  }
  return result;
}

uint64_t sub_1BFDED74C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatProcessedColor.init(from:)(a1, a2);
}

uint64_t FormatProcessedColor.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  sub_1C08A4E7C();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08A4F10();
  sub_1C085F050(&qword_1EB891ED0, (void (*)(uint64_t))sub_1C08A4F10);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  double v12 = v24;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v17 = *((void *)v15 - 1);
      uint64_t v24 = (void *)*((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v18 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v18);
      *(&v24 - 4) = &_s10CodingKeysON_79;
      *(&v24 - 3) = (void *)sub_1C08A4F94();
      *(&v24 - 2) = (void *)sub_1BFDEDB58();
      *(&v24 - 1) = (void *)sub_1C08A4FE8();
      swift_getKeyPath();
      swift_retain();
      uint64_t v19 = sub_1C085FB14((uint64_t)&unk_1F1B86E40);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v20 = (uint64_t)v24;
      *(void *)uint64_t v21 = v24;
      *(void *)(v21 + 8) = v17;
      *(void *)(v21 + 16) = v19;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v20, v17, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE113DC();
  long long v25 = 0uLL;
  char v26 = 0;
  sub_1C15206EC();
  uint64_t v16 = v27;
  sub_1BFE9DEBC(0, &qword_1EB879E28, (uint64_t)&type metadata for FormatColorProcessor, MEMORY[0x1E4FBB320]);
  long long v25 = xmmword_1C153AB20;
  char v26 = 0;
  sub_1BFDEDBAC();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v23 = v27;
  *double v12 = v16;
  v12[1] = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDEDB58()
{
  unint64_t result = qword_1EB889A48;
  if (!qword_1EB889A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889A48);
  }
  return result;
}

unint64_t sub_1BFDEDBAC()
{
  unint64_t result = qword_1EB879E30;
  if (!qword_1EB879E30)
  {
    sub_1BFE9DEBC(255, &qword_1EB879E28, (uint64_t)&type metadata for FormatColorProcessor, MEMORY[0x1E4FBB320]);
    sub_1BFD46900();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879E30);
  }
  return result;
}

uint64_t FormatViewNodeStyle.__deallocating_deinit()
{
  FormatViewNodeStyle.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatViewNodeStyle.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF68C0(*(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  sub_1BFEF68AC(*(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned char *)(v0 + 96));
  sub_1BFEF8738(*(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(unsigned char *)(v0 + 184));
  return v0;
}

uint64_t sub_1BFDEDCF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSystemFont.init(from:)(a1, a2);
}

uint64_t FormatSystemFont.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v47 = a2;
  sub_1BFDEE390();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C08BDD6C();
  uint64_t v9 = v8;
  uint64_t v44 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08BDE00();
  sub_1C085F050(&qword_1EB891C40, (void (*)(uint64_t))sub_1C08BDE00);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_19:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    uint64_t v33 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v33);
  }
  uint64_t v42 = v7;
  long long v43 = a1;
  uint64_t v12 = v44;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_1C1520EAC();
  char v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  uint64_t v16 = v46;
  uint64_t v15 = v47;
  uint64_t v17 = v45;
  if (v14)
  {
    uint64_t v18 = sub_1C152070C();
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      uint64_t v20 = (unsigned char *)(v18 + 48);
      while (*v20 != 1)
      {
        v20 += 24;
        if (!--v19) {
          goto LABEL_7;
        }
      }
      uint64_t v29 = *((void *)v20 - 2);
      uint64_t v30 = *((void *)v20 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      uint64_t v31 = sub_1C07F8090();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v32 = v29;
      *(void *)(v32 + 8) = v30;
      *(void *)(v32 + 16) = v31;
      *(_OWORD *)(v32 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v29, v30, 1);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v9);
      a1 = v43;
      goto LABEL_19;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v52 = 0uLL;
  LOBYTE(v53) = 0;
  double v21 = 16.0;
  if (sub_1C152071C())
  {
    long long v50 = 0uLL;
    char v51 = 0;
    sub_1BFE7E344();
    sub_1C15206EC();
    double v21 = v48;
  }
  long long v41 = xmmword_1C153AB20;
  long long v52 = xmmword_1C153AB20;
  LOBYTE(v53) = 0;
  if (sub_1C152071C())
  {
    long long v50 = v41;
    char v51 = 0;
    sub_1BFDEE468();
    sub_1C15206EC();
    double v22 = v48;
    int v23 = v49;
  }
  else
  {
    double v22 = 0.0;
    int v23 = 3072;
  }
  int v40 = v23;
  long long v41 = xmmword_1C1557FA0;
  long long v52 = xmmword_1C1557FA0;
  LOBYTE(v53) = 0;
  if (sub_1C152071C())
  {
    long long v50 = v41;
    char v51 = 0;
    sub_1BFDEE414();
    sub_1C15206EC();
    int v24 = LOBYTE(v48);
  }
  else
  {
    int v24 = 5;
  }
  int v39 = v24;
  long long v41 = xmmword_1C1557FB0;
  long long v52 = xmmword_1C1557FB0;
  LOBYTE(v53) = 0;
  if (sub_1C152071C())
  {
    double v38 = v22;
    long long v50 = v41;
    char v51 = 0;
    sub_1C085F050(&qword_1EB884DE8, (void (*)(uint64_t))sub_1BFDEE390);
    long long v25 = v42;
    sub_1C15206EC();
    uint64_t v26 = sub_1C1517E5C();
    uint64_t v27 = v16;
    uint64_t v28 = v26;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v25, v27);
    double v22 = v38;
  }
  else
  {
    uint64_t v28 = MEMORY[0x1E4FBC870];
  }
  long long v50 = xmmword_1C1557FD0;
  char v51 = 0;
  sub_1BFDEE33C();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v9);
  __int16 v35 = v54;
  long long v36 = v52;
  long long v37 = v53;
  *(double *)uint64_t v15 = v21;
  *(double *)(v15 + 8) = v22;
  *(_WORD *)(v15 + 16) = v40;
  *(unsigned char *)(v15 + 18) = v39;
  *(void *)(v15 + 24) = v28;
  *(_OWORD *)(v15 + 32) = v36;
  *(_OWORD *)(v15 + 48) = v37;
  *(_WORD *)(v15 + 64) = v35;
  uint64_t v33 = (uint64_t)v43;
  return __swift_destroy_boxed_opaque_existential_1(v33);
}

unint64_t sub_1BFDEE2E8()
{
  unint64_t result = qword_1EB888080;
  if (!qword_1EB888080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888080);
  }
  return result;
}

unint64_t sub_1BFDEE33C()
{
  unint64_t result = qword_1EB87F130;
  if (!qword_1EB87F130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87F130);
  }
  return result;
}

void sub_1BFDEE390()
{
  if (!qword_1EB884DF0)
  {
    sub_1C0080558();
    sub_1C0080654();
    sub_1C0080600();
    unint64_t v0 = sub_1C1517E6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884DF0);
    }
  }
}

unint64_t sub_1BFDEE414()
{
  unint64_t result = qword_1EB8752F8;
  if (!qword_1EB8752F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8752F8);
  }
  return result;
}

unint64_t sub_1BFDEE468()
{
  unint64_t result = qword_1EB875630;
  if (!qword_1EB875630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875630);
  }
  return result;
}

void *sub_1BFDEE4BC(void *a1)
{
  return FormatFill.encode(to:)(a1);
}

void *FormatFill.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v53[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v53[-v8];
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v53[-v11];
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = &v53[-v14];
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = &v53[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFF6530C(v2, (uint64_t)v56);
  uint64_t v20 = a1[3];
  uint64_t v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  unint64_t v21 = sub_1BFEB6A24();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatFill, v22, v20, (uint64_t)&type metadata for FormatFill, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v19, (uint64_t)v18, v21, (uint64_t)&off_1F1C39B68);
  sub_1BFF6530C((uint64_t)v56, (uint64_t)v57);
  switch(sub_1C0444FE8((uint64_t)v57))
  {
    case 1u:
      uint64_t v30 = sub_1C0445038((uint64_t)v57);
      uint64_t v31 = *(void *)(v30 + 8);
      *(void *)&v54[0] = *(void *)v30;
      *((void *)&v54[0] + 1) = v31;
      long long v32 = *(_OWORD *)(v30 + 32);
      v54[1] = *(_OWORD *)(v30 + 16);
      v54[2] = v32;
      v54[3] = *(_OWORD *)(v30 + 48);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_1C151928C();
      uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v12, v34, v33);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069E968(1, v54, (uint64_t)v12);
      uint64_t v35 = (uint64_t)v12;
      goto LABEL_11;
    case 2u:
      long long v36 = (long long *)sub_1C0445038((uint64_t)v57);
      long long v37 = v36[5];
      v55[4] = v36[4];
      v55[5] = v37;
      long long v38 = v36[7];
      v55[6] = v36[6];
      v55[7] = v38;
      long long v39 = v36[1];
      v55[0] = *v36;
      v55[1] = v39;
      long long v40 = v36[3];
      v55[2] = v36[2];
      v55[3] = v40;
      if (qword_1EB887658 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_1C151928C();
      uint64_t v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1EB93CAF8);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v9, v42, v41);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069EB08(2, v55, (uint64_t)v9);
      uint64_t v35 = (uint64_t)v9;
LABEL_11:
      sub_1BFEFEB68(v35, type metadata accessor for FormatVersionRequirement);
      return (void *)sub_1BFEFEB68((uint64_t)v18, (uint64_t (*)(void))sub_1BFEFF7D8);
    case 3u:
      uint64_t v44 = *(void *)sub_1C0445038((uint64_t)v57);
      sub_1BFF05D18();
      uint64_t v46 = &v6[*(int *)(v45 + 48)];
      uint64_t v47 = &v6[*(int *)(v45 + 64)];
      sub_1BFF6530C((uint64_t)v56, (uint64_t)v53);
      double v48 = (uint64_t *)sub_1C0445038((uint64_t)v53);
      sub_1BFF7B774(*v48);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v49 = sub_1C151928C();
      uint64_t v50 = __swift_project_value_buffer(v49, (uint64_t)qword_1EB93CAB0);
      char v51 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16);
      v51(v6, v50, v49);
      if (qword_1EB8849D0 != -1) {
        swift_once();
      }
      uint64_t v52 = __swift_project_value_buffer(v49, (uint64_t)qword_1EB93C828);
      v51(v46, v52, v49);
      type metadata accessor for FormatVersionRequirement.Value(0);
      *uint64_t v47 = 0;
      v47[1] = 0;
      swift_storeEnumTagMultiPayload();
      sub_1BFDEED94(3, v44, (uint64_t)v6);
      uint64_t v29 = (uint64_t)v6;
      goto LABEL_17;
    default:
      int v23 = (uint64_t *)sub_1C0445038((uint64_t)v57);
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      sub_1BFF6530C((uint64_t)v56, (uint64_t)v53);
      sub_1C0445038((uint64_t)v53);
      uint64_t v26 = qword_1EB882D28;
      swift_retain();
      swift_retain();
      if (v26 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_1C151928C();
      uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v15, v28, v27);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFDEEB58(0, v24, v25, (uint64_t)v15);
      uint64_t v29 = (uint64_t)v15;
LABEL_17:
      sub_1BFEFEB68(v29, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68((uint64_t)v18, (uint64_t (*)(void))sub_1BFEFF7D8);
      return sub_1C090750C(v56, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF89EC);
  }
}

uint64_t sub_1BFDEEB58(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FBECC;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDEECEC();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFDEED40();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDEECEC()
{
  unint64_t result = qword_1EB861730;
  if (!qword_1EB861730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB861730);
  }
  return result;
}

unint64_t sub_1BFDEED40()
{
  unint64_t result = qword_1EB85B7F8;
  if (!qword_1EB85B7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B7F8);
  }
  return result;
}

uint64_t sub_1BFDEED94(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FBECC;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDEECEC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFDEEF28();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDEEF28()
{
  unint64_t result = qword_1EB85B578;
  if (!qword_1EB85B578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B578);
  }
  return result;
}

uint64_t sub_1BFDEEF7C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_attributedString;
  uint64_t v2 = sub_1C1515B3C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  long long v3 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 80);
  v7[4] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 64);
  v7[5] = v3;
  v8[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 96);
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 105);
  long long v4 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 16);
  v7[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle);
  v7[1] = v4;
  long long v5 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 48);
  v7[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 32);
  v7[3] = v5;
  sub_1BFF630AC((uint64_t)v7);
  return swift_deallocClassInstance();
}

void *initializeWithCopy for FormatOption(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  if (v7 != 1) {
    swift_bridgeObjectRetain();
  }
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v18 = sub_1C151928C();
      char v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      v19(v9, v10, v18);
      sub_1BFF05D18();
      uint64_t v21 = v20;
      v19(&v9[*(int *)(v20 + 48)], &v10[*(int *)(v20 + 48)], v18);
      uint64_t v17 = *(int *)(v21 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v25 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v9, v10, v25);
        goto LABEL_11;
      }
      uint64_t v15 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
      sub_1C015F8A0();
      uint64_t v17 = *(int *)(v16 + 48);
    }
    uint64_t v22 = &v9[v17];
    int v23 = &v10[v17];
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    return a1;
  }
  sub_1C0B3AEC8(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
  memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  return a1;
}

uint64_t sub_1BFDEF320@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatStateMachineDefinition.init(from:)(a1, a2);
}

uint64_t FormatStateMachineDefinition.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFDEF828(0, &qword_1EB87A560, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFDEF7D4();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
  char v38 = 0;
  sub_1BFDEF88C();
  sub_1C15206EC();
  uint64_t v10 = v30;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879EA8);
  char v38 = 1;
  sub_1BFDEF8F4();
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  uint64_t v11 = v30;
  char v38 = 2;
  sub_1BFDF0598();
  uint64_t v25 = v11;
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  uint64_t v26 = v32;
  uint64_t v27 = v31;
  uint64_t v28 = v33;
  uint64_t v29 = v30;
  LODWORD(v11) = v34;
  char v37 = v11;
  uint64_t v30 = v10;
  uint64_t v31 = v25;
  uint64_t v32 = v29;
  uint64_t v33 = v27;
  uint64_t v34 = v26;
  uint64_t v35 = v28;
  char v36 = v11;
  sub_1BFF429DC(v29, v27, v26, v28, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v24 = v11;
  sub_1BFF429DC(v29, v27, v26, v28, v11);
  sub_1BFDEF974();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v26;
  LOBYTE(v11) = v24;
  sub_1BFEC41E8(v29, v27, v26, v28, v24);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = v28;
  uint64_t v14 = v29;
  uint64_t v16 = v27;
  sub_1BFF429DC(v29, v27, v13, v28, v11);
  uint64_t v17 = v14;
  uint64_t v18 = v16;
  sub_1BFEC41E8(v17, v16, v13, v15, v11);
  swift_bridgeObjectRelease();
  uint64_t v19 = v25;
  swift_bridgeObjectRelease();
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v19;
  uint64_t v20 = v29;
  *(void *)(a2 + 16) = v29;
  *(void *)(a2 + 24) = v18;
  uint64_t v21 = v28;
  *(void *)(a2 + 32) = v13;
  *(void *)(a2 + 40) = v21;
  *(unsigned char *)(a2 + 48) = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  char v22 = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BFEC41E8(v20, v27, v13, v21, v22);
}

unint64_t sub_1BFDEF7D4()
{
  unint64_t result = qword_1EB878C58;
  if (!qword_1EB878C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878C58);
  }
  return result;
}

void sub_1BFDEF828(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFDEF7D4();
    unint64_t v7 = a3(a1, &type metadata for FormatStateMachineDefinition.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1BFDEF88C()
{
  unint64_t result = qword_1EB879F50;
  if (!qword_1EB879F50)
  {
    sub_1BFED9C20();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879F50);
  }
  return result;
}

unint64_t sub_1BFDEF8F4()
{
  unint64_t result = qword_1EB879EB8;
  if (!qword_1EB879EB8)
  {
    sub_1BFC6CA08(255, (unint64_t *)&qword_1EB879EA8);
    sub_1C007271C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879EB8);
  }
  return result;
}

uint64_t sub_1BFDEF974()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v76 = *(void *)(*(void *)v0 + 16);
  if (v76)
  {
    uint64_t v2 = *(void *)(v0 + 8);
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 40);
    char v7 = *(unsigned char *)(v0 + 48);
    uint64_t v81 = MEMORY[0x1E4FBC870];
    uint64_t v68 = v3;
    uint64_t v69 = v4;
    uint64_t v70 = *(void *)(v2 + 16);
    if (v70)
    {
      char v63 = v7;
      uint64_t v64 = v6;
      uint64_t v66 = v5;
      uint64_t v74 = v2 + 32;
      uint64_t result = swift_bridgeObjectRetain();
      unint64_t v9 = 0;
      uint64_t v72 = result;
      while (1)
      {
        if (v9 >= *(void *)(result + 16))
        {
          __break(1u);
          goto LABEL_80;
        }
        uint64_t v10 = (uint64_t *)(v74 + 40 * v9);
        uint64_t v11 = v10[1];
        uint64_t v78 = *v10;
        uint64_t v13 = v10[2];
        uint64_t v12 = v10[3];
        uint64_t v14 = v10[4];
        BOOL v15 = v1[4] == v12 && v1[5] == v14;
        if (!v15 && (sub_1C1520A9C() & 1) == 0)
        {
          if (v76 == 1) {
            goto LABEL_29;
          }
          if (v1[6] != v12 || v1[7] != v14)
          {
            uint64_t result = sub_1C1520A9C();
            if ((result & 1) == 0) {
              break;
            }
          }
        }
LABEL_16:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v17 = swift_bridgeObjectRetain();
        uint64_t v18 = sub_1BFDF01FC(v17, v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        char v19 = sub_1BFEFAE14(v18, v13);
        swift_release();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C02570B4();
          swift_allocError();
          *uint64_t v28 = v13;
          v28[1] = (uint64_t)v1;
          void v28[2] = 0;
          v28[3] = 0;
          v28[4] = 0xA000000000000000;
          goto LABEL_44;
        }
        uint64_t v20 = v81;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v21 = sub_1BFF896B4(v78, v11, v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v21)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C02570B4();
          swift_allocError();
          *uint64_t v29 = v78;
          v29[1] = v11;
          void v29[2] = 0;
          v29[3] = 0;
          void v29[4] = 0xB000000000000000;
          goto LABEL_33;
        }
        ++v9;
        swift_bridgeObjectRetain();
        sub_1BFEFFC1C(&v80, v78, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = v72;
        if (v9 == v70)
        {
          swift_bridgeObjectRelease();
          uint64_t v6 = v64;
          uint64_t v3 = v68;
          uint64_t v4 = v69;
          uint64_t v5 = v66;
          char v7 = v63;
          goto LABEL_34;
        }
      }
      if (v76 == 2)
      {
LABEL_29:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C02570B4();
        swift_allocError();
        *(void *)uint64_t v26 = v12;
        *(void *)(v26 + 8) = v14;
        *(void *)(v26 + 16) = v1;
        *(_OWORD *)(v26 + 24) = xmmword_1C15B5930;
        swift_bridgeObjectRetain();
LABEL_33:
        swift_bridgeObjectRetain();
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      char v22 = v1 + 9;
      uint64_t v23 = 2;
      while (1)
      {
        uint64_t v24 = v23 + 1;
        if (__OFADD__(v23, 1)) {
          break;
        }
        if (*(v22 - 1) == v12 && *v22 == v14) {
          goto LABEL_16;
        }
        uint64_t result = sub_1C1520A9C();
        if (result) {
          goto LABEL_16;
        }
        v22 += 2;
        ++v23;
        if (v24 == v76) {
          goto LABEL_29;
        }
      }
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
    }
    else
    {
LABEL_34:
      if (v7)
      {
        uint64_t v30 = v1[2];
        if (v30)
        {
          uint64_t v31 = v1 + 5;
          while (*(v31 - 1) != v3 || v4 != *v31)
          {
            if (sub_1C1520A9C())
            {
              sub_1BFF429DC(v68, v69, v5, v6, 1);
              swift_bridgeObjectRelease();
              return sub_1BFEC41E8(v68, v69, v5, v6, 1);
            }
            v31 += 2;
            --v30;
            uint64_t v3 = v68;
            uint64_t v4 = v69;
            if (!v30) {
              goto LABEL_43;
            }
          }
          return swift_bridgeObjectRelease();
        }
        else
        {
LABEL_43:
          uint64_t v33 = v3;
          uint64_t v34 = v4;
          sub_1BFF429DC(v3, v4, v5, v6, 1);
          swift_bridgeObjectRelease();
          sub_1C02570B4();
          swift_allocError();
          *(void *)uint64_t v35 = v33;
          *(void *)(v35 + 8) = v34;
          *(void *)(v35 + 16) = v1;
          *(_OWORD *)(v35 + 24) = xmmword_1C15B5950;
LABEL_44:
          swift_bridgeObjectRetain();
          return swift_willThrow();
        }
      }
      else
      {
        uint64_t v65 = v6;
        uint64_t v67 = v5;
        uint64_t v71 = *(void *)(v4 + 16);
        if (v71)
        {
          uint64_t v36 = v81;
          uint64_t v73 = v4 + 32;
          sub_1BFF429DC(v3, v4, v5, v6, 0);
          uint64_t v79 = v36 + 56;
          uint64_t result = swift_bridgeObjectRetain();
          unint64_t v37 = 0;
          while (1)
          {
            if (v37 >= *(void *)(v69 + 16)) {
              goto LABEL_81;
            }
            uint64_t v38 = v73 + 40 * v37;
            uint64_t v39 = *(void *)v38;
            uint64_t v40 = *(void *)(v38 + 8);
            char v41 = *(unsigned char *)(v38 + 16);
            uint64_t v42 = *(void *)(v38 + 24);
            uint64_t v43 = *(void *)(v38 + 32);
            if (!*(void *)(v36 + 16)) {
              break;
            }
            sub_1C1520DBC();
            uint64_t v75 = v39;
            uint64_t v77 = v40;
            uint64_t v44 = v40;
            char v45 = v41;
            sub_1BFF5B7E0(v39, v44, v41);
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            sub_1C151E77C();
            uint64_t v46 = sub_1C1520E0C();
            uint64_t v47 = v36;
            uint64_t v48 = -1 << *(unsigned char *)(v36 + 32);
            unint64_t v49 = v46 & ~v48;
            if (((*(void *)(v79 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
            {
              uint64_t v59 = v69;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_76;
            }
            uint64_t v50 = *(void *)(v36 + 48);
            char v51 = (void *)(v50 + 16 * v49);
            BOOL v52 = *v51 == v42 && v51[1] == v43;
            if (!v52 && (sub_1C1520A9C() & 1) == 0)
            {
              uint64_t v53 = ~v48;
              for (unint64_t i = v49 + 1; ; unint64_t i = v55 + 1)
              {
                uint64_t v55 = i & v53;
                if (((*(void *)(v79 + (((i & v53) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v53)) & 1) == 0) {
                  break;
                }
                uint64_t v56 = (void *)(v50 + 16 * v55);
                BOOL v57 = *v56 == v42 && v56[1] == v43;
                if (v57 || (sub_1C1520A9C() & 1) != 0) {
                  goto LABEL_47;
                }
              }
              uint64_t v59 = v69;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v47 = v36;
LABEL_76:
              char v41 = v45;
              uint64_t v39 = v75;
              uint64_t v40 = v77;
LABEL_77:
              swift_bridgeObjectRelease();
              sub_1C02570B4();
              swift_allocError();
              *(void *)uint64_t v62 = v42;
              *(void *)(v62 + 8) = v43;
              *(void *)(v62 + 16) = v47;
              *(_OWORD *)(v62 + 24) = xmmword_1C15B5940;
              swift_bridgeObjectRetain();
              swift_willThrow();
              sub_1BFEC41E8(v68, v59, v67, v65, 0);
              sub_1BFF5B7CC(v39, v40, v41);
              return swift_bridgeObjectRelease();
            }
LABEL_47:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            ++v37;
            sub_1BFF5B7CC(v75, v77, v45);
            uint64_t result = swift_bridgeObjectRelease();
            if (v37 == v71)
            {
              swift_bridgeObjectRelease();
              uint64_t v58 = v65;
              goto LABEL_71;
            }
          }
          sub_1BFF5B7E0(v39, v40, v41);
          swift_bridgeObjectRetain();
          uint64_t v47 = v36;
          uint64_t v59 = v69;
          goto LABEL_77;
        }
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v58 = v6;
        swift_bridgeObjectRetain();
        uint64_t v36 = v81;
LABEL_71:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v60 = sub_1BFF896B4(v67, v58, v36);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v60)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1C02570B4();
          swift_allocError();
          *(void *)uint64_t v61 = v67;
          *(void *)(v61 + 8) = v58;
          *(void *)(v61 + 16) = v36;
          *(_OWORD *)(v61 + 24) = xmmword_1C15B5940;
          swift_bridgeObjectRetain();
          swift_willThrow();
        }
        return sub_1BFEC41E8(v68, v69, v67, v58, 0);
      }
    }
  }
  else
  {
    sub_1C02570B4();
    swift_allocError();
    *uint64_t v27 = 2;
    v27[1] = 0;
    v27[2] = 0;
    v27[3] = 0;
    v27[4] = 0xF000000000000000;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BFDF01FC(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1BFDF0384((void *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1BFDF0384((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x1C18C9B00](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1BFDF0384(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  uint64_t v31 = *(void *)(a3 + 16);
  if (!v31)
  {
    uint64_t v26 = 0;
    goto LABEL_27;
  }
  uint64_t v32 = a4 + 56;
  uint64_t v30 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  for (uint64_t i = 0; i != v31; ++i)
  {
    uint64_t v7 = (uint64_t *)(v30 + 16 * i);
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    sub_1C1520DBC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t v10 = sub_1C1520E0C();
    uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v12 = v10 & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = 1 << v12;
    if (((1 << v12) & *(void *)(v32 + 8 * (v12 >> 6))) == 0) {
      goto LABEL_3;
    }
    uint64_t v15 = *(void *)(a4 + 48);
    uint64_t v16 = (void *)(v15 + 16 * v12);
    BOOL v17 = *v16 == v9 && v16[1] == v8;
    if (!v17 && (sub_1C1520A9C() & 1) == 0)
    {
      uint64_t v21 = ~v11;
      for (unint64_t j = v12 + 1; ; unint64_t j = v23 + 1)
      {
        unint64_t v23 = j & v21;
        if (((*(void *)(v32 + (((j & v21) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v21)) & 1) == 0) {
          break;
        }
        uint64_t v24 = (void *)(v15 + 16 * v23);
        BOOL v25 = *v24 == v9 && v24[1] == v8;
        if (v25 || (sub_1C1520A9C() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v13 = v23 >> 6;
          uint64_t v14 = 1 << v23;
          goto LABEL_12;
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      continue;
    }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_12:
    unint64_t v19 = a1[v13];
    a1[v13] = v14 | v19;
    if ((v14 & v19) == 0 && __OFADD__(v28++, 1))
    {
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a2;
  uint64_t v26 = v28;
LABEL_27:
  swift_retain();
  return sub_1BFEFB580(a1, v5, v26, a4);
}

unint64_t sub_1BFDF0598()
{
  unint64_t result = qword_1EB877DC8;
  if (!qword_1EB877DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB877DC8);
  }
  return result;
}

uint64_t sub_1BFDF05EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCornerRadius.Value.init(from:)(a1, a2);
}

uint64_t FormatCornerRadius.Value.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v27 = a2;
  sub_1C0882280();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0882314();
  sub_1C085F050(&qword_1EB891CC0, (void (*)(uint64_t))sub_1C0882314);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_13:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v27;
  unint64_t v13 = v9;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v19 = *((void *)v16 - 1);
      uint64_t v27 = *((void *)v16 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v20 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v20);
      *((void *)&v26 - 4) = &_s10CodingKeysON_155;
      *((void *)&v26 - 3) = sub_1C0882398();
      *((void *)&v26 - 2) = sub_1BFDF0A40();
      *((void *)&v26 - 1) = sub_1C08823EC();
      swift_getKeyPath();
      swift_retain();
      uint64_t v21 = sub_1C085FB14((uint64_t)&unk_1F1B84968);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v22 = v27;
      *(void *)uint64_t v23 = v27;
      *(void *)(v23 + 8) = v19;
      *(void *)(v23 + 16) = v21;
      *(_OWORD *)(v23 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v22, v19, 1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      goto LABEL_13;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v31 = 0uLL;
  char v32 = 0;
  uint64_t v17 = 0;
  if (sub_1C152071C())
  {
    long long v29 = 0uLL;
    char v30 = 0;
    sub_1BFE7E344();
    sub_1C15206EC();
    uint64_t v17 = v28;
  }
  uint64_t v18 = sub_1C07F1078();
  long long v26 = xmmword_1C1557FA0;
  long long v31 = xmmword_1C1557FA0;
  char v32 = 0;
  if (sub_1C152071C())
  {
    long long v29 = v26;
    char v30 = 0;
    sub_1C15206EC();
    char v25 = v28;
  }
  else
  {
    char v25 = 1;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  *(void *)uint64_t v12 = v17;
  *(void *)(v12 + 8) = v18;
  *(unsigned char *)(v12 + 16) = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDF0A40()
{
  unint64_t result = qword_1EB888598;
  if (!qword_1EB888598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888598);
  }
  return result;
}

unint64_t sub_1BFDF0A94()
{
  unint64_t result = qword_1EB879D40;
  if (!qword_1EB879D40)
  {
    sub_1BFE9DEBC(255, (unint64_t *)&qword_1EB879D38, (uint64_t)&type metadata for FormatCorner, MEMORY[0x1E4FBB320]);
    sub_1C0083124();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879D40);
  }
  return result;
}

uint64_t sub_1BFDF0B28(void *a1)
{
  return FormatVOverlayNode.encode(to:)(a1);
}

uint64_t FormatVOverlayNode.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  CGFloat v85 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  CGRect v86 = (char *)&v84 - v8;
  MEMORY[0x1F4188790](v9);
  char v87 = (char *)&v84 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v88 = (char *)&v84 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v90 = (char *)&v84 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v89 = (char *)&v84 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v91 = (uint64_t (*)(uint64_t))((char *)&v84 - v18);
  MEMORY[0x1F4188790](v19);
  uint64_t v92 = (void (*)(char *, uint64_t, uint64_t))((char *)&v84 - v20);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v84 - v22;
  sub_1C08C5FD0();
  MEMORY[0x1F4188790](v24 - 8);
  long long v26 = (char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  sub_1C08C60F8();
  uint64_t v30 = v29;
  uint64_t v31 = sub_1C085F050(&qword_1EB891D30, (void (*)(uint64_t))sub_1C08C60F8);
  sub_1BFEFBD78(v4, v32, v28, v4, v30, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v26, v31, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v33 = v2[2];
  uint64_t v34 = v2[3];
  uint64_t v94 = v2;
  uint64_t v35 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v35 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1C151928C();
  uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB93CAB0);
  uint64_t v38 = *(void *)(v36 - 8);
  uint64_t v39 = *(void (**)(char *))(v38 + 16);
  uint64_t v40 = v38 + 16;
  uint64_t v93 = v37;
  v39(v23);
  uint64_t v41 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = v95;
  sub_1C06D4380(v33, v34, 0, 0, 0, (uint64_t)v23, (uint64_t)sub_1C01B158C, 0);
  if (v42)
  {
    sub_1BFEFEB68((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v43 = (uint64_t)v26;
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v45 = v94[4];
    uint64_t v44 = v94[5];
    uint64_t v46 = (uint64_t)v92;
    ((void (*)(void, uint64_t, uint64_t))v39)(v92, v93, v36);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    uint64_t v47 = v45;
    uint64_t v43 = (uint64_t)v26;
    sub_1C06BE8EC(v47, v44, 1, 0, 0, v46, (uint64_t)sub_1C01B158C, 0);
    uint64_t v48 = v40;
    uint64_t v95 = v41;
    sub_1BFEFEB68(v46, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    unint64_t v49 = v94;
    swift_beginAccess();
    uint64_t v50 = v49[6];
    uint64_t v51 = qword_1EB887638;
    swift_bridgeObjectRetain();
    if (v51 != -1) {
      swift_once();
    }
    uint64_t v52 = v36;
    uint64_t v53 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB93CA98);
    __int16 v54 = v91;
    ((void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t))v39)(v91, v53, v36);
    swift_storeEnumTagMultiPayload();
    sub_1C06D45C0(v50, 2, 0, 0);
    uint64_t v92 = (void (*)(char *, uint64_t, uint64_t))v39;
    sub_1BFEFEB68((uint64_t)v54, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v56 = (uint64_t)v89;
    uint64_t v57 = v93;
    v92(v89, v93, v36);
    swift_storeEnumTagMultiPayload();
    sub_1BFEFEB68(v56, type metadata accessor for FormatVersionRequirement);
    v92((char *)v56, v57, v36);
    swift_storeEnumTagMultiPayload();
    uint64_t v58 = v57;
    sub_1BFEFEB68(v56, type metadata accessor for FormatVersionRequirement);
    uint64_t v59 = v94;
    swift_beginAccess();
    unint64_t v60 = v59[11];
    uint64_t v61 = (uint64_t)v90;
    v92(v90, v58, v52);
    swift_storeEnumTagMultiPayload();
    uint64_t v62 = v52;
    if (((v60 >> 59) & 0x1E | (v60 >> 2) & 1) != 0x16 || v60 != 0xB000000000000000)
    {
      sub_1BFF35EA4(v60);
      if (sub_1C083C3F4(v61, 5, 0, 0, (uint64_t)sub_1C01B158C, 0))
      {
        long long v101 = xmmword_1C1557FC0;
        char v102 = 0;
        unint64_t v100 = v60;
        sub_1C08C6064();
        sub_1C085F050(&qword_1EB86E270, (void (*)(uint64_t))sub_1C08C6064);
        sub_1BFE1D79C();
        sub_1C1520BAC();
        uint64_t v61 = (uint64_t)v90;
      }
    }
    sub_1BFEFEB68(v61, type metadata accessor for FormatVersionRequirement);
    sub_1BFF322A8(v60);
    char v63 = v94;
    swift_beginAccess();
    uint64_t v64 = (uint64_t)v88;
    v92(v88, v93, v62);
    swift_storeEnumTagMultiPayload();
    uint64_t v65 = swift_bridgeObjectRetain();
    sub_1C06D4744(v65, 6, 0, 0);
    sub_1BFEFEB68(v64, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v66 = v63[13];
    uint64_t v67 = (uint64_t)v87;
    v92(v87, v93, v62);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    char v68 = sub_1C083C3F4(v67, 7, 0, 0, (uint64_t)sub_1C01B158C, 0);
    if (v68)
    {
      long long v98 = xmmword_1C1557FF0;
      char v99 = 0;
      *(void *)&long long v96 = v66;
      sub_1C08C6064();
      sub_1C085F050(&qword_1EB86E270, (void (*)(uint64_t))sub_1C08C6064);
      sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB863300, (uint64_t)&type metadata for FormatSourceMapNode, MEMORY[0x1E4FBB320]);
      sub_1BFE407E0();
      sub_1C1520BAC();
      char v63 = v94;
      uint64_t v67 = (uint64_t)v87;
    }
    uint64_t v93 = v48;
    sub_1BFEFEB68(v67, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v69 = v63;
    LODWORD(v91) = *((unsigned __int8 *)v63 + 112);
    sub_1BFF05D18();
    uint64_t v71 = (uint64_t)v86;
    uint64_t v72 = &v86[*(int *)(v70 + 48)];
    uint64_t v73 = &v86[*(int *)(v70 + 64)];
    if (qword_1EB887620 != -1) {
      swift_once();
    }
    uint64_t v74 = __swift_project_value_buffer(v62, (uint64_t)qword_1EB93CA50);
    uint64_t v75 = (void (*)(char *))v92;
    v92((char *)v71, v74, v62);
    if (qword_1EB893B08 != -1) {
      swift_once();
    }
    uint64_t v76 = __swift_project_value_buffer(v62, (uint64_t)qword_1EB93CBA0);
    uint64_t v77 = v72;
    uint64_t v78 = v76;
    v75(v77);
    *(void *)uint64_t v73 = 0;
    *((void *)v73 + 1) = 0;
    swift_storeEnumTagMultiPayload();
    if (v91 & 1) != 0 && (sub_1C083C3F4(v71, 8, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v96 = xmmword_1C1558010;
      char v97 = 0;
      char v103 = 1;
      sub_1C08C6064();
      sub_1C085F050(&qword_1EB86E270, (void (*)(uint64_t))sub_1C08C6064);
      sub_1C1520BAC();
    }
    uint64_t v79 = v78;
    uint64_t v91 = type metadata accessor for FormatVersionRequirement;
    sub_1BFEFEB68(v71, type metadata accessor for FormatVersionRequirement);
    swift_beginAccess();
    uint64_t v80 = v69[15];
    uint64_t v81 = v69[16];
    int v82 = *((unsigned __int8 *)v69 + 136);
    uint64_t v83 = (uint64_t)v85;
    v92(v85, v79, v62);
    swift_storeEnumTagMultiPayload();
    sub_1BFE94AB4(v80, v81, v82);
    sub_1C06D48A8(v80, v81, v82, 9, 0, 0, v83, (uint64_t)sub_1C01B158C);
    sub_1BFEFEB68(v83, v91);
    sub_1BFE94AD4(v80, v81, v82);
  }
  return sub_1BFEFEB68(v43, (uint64_t (*)(void))sub_1C08C5FD0);
}

uint64_t sub_1BFDF1984(void *a1)
{
  return FormatProcessedColor.encode(to:)(a1);
}

uint64_t FormatProcessedColor.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v29 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v28 - v6;
  sub_1C08A503C();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v1;
  v28[1] = v1[1];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1C08A4F10();
  uint64_t v15 = v14;
  uint64_t v16 = sub_1C085F050(&qword_1EB891ED0, (void (*)(uint64_t))sub_1C08A4F10);
  uint64_t v31 = v10;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatProcessedColor, v17, v12, (uint64_t)&type metadata for FormatProcessedColor, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v10, v16, (uint64_t)&off_1F1C39B68);
  uint64_t v18 = qword_1EB882D28;
  swift_retain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C151928C();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB93CAB0);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  v21(v7, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = v30;
  sub_1C06BA518(v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (v22)
  {
    uint64_t v23 = (uint64_t)v31;
  }
  else
  {
    uint64_t v24 = (uint64_t)v29;
    v21(v29, v20, v19);
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v26 = (uint64_t)v31;
    sub_1C06BA6B0(v25, 1, 0, 0, v24, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v24, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v23 = v26;
  }
  return sub_1BFEFEB68(v23, (uint64_t (*)(void))sub_1C08A503C);
}

unint64_t sub_1BFDF1D10()
{
  unint64_t result = qword_1EB85C408;
  if (!qword_1EB85C408)
  {
    sub_1BFE9DEBC(255, &qword_1EB879E28, (uint64_t)&type metadata for FormatColorProcessor, MEMORY[0x1E4FBB320]);
    sub_1BFD6F3E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C408);
  }
  return result;
}

uint64_t sub_1BFDF1DA4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return FormatSelectorValueSelector.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t FormatSelectorValueSelector.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = a1;
  uint64_t v58 = a3;
  uint64_t v53 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v64 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v70 = (char *)&v49 - v6;
  uint64_t v57 = v7;
  uint64_t v61 = v8;
  uint64_t v9 = _s10CodingKeysOMa_236();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v12 = swift_getWitnessTable();
  *(void *)&long long v67 = v9;
  *((void *)&v67 + 1) = WitnessTable;
  uint64_t v55 = v11;
  uint64_t v56 = WitnessTable;
  uint64_t v68 = v11;
  uint64_t v69 = v12;
  uint64_t v54 = v12;
  uint64_t v13 = type metadata accessor for FormatCodingKeysContainer();
  swift_getWitnessTable();
  uint64_t v14 = sub_1C152072C();
  uint64_t v59 = *(void *)(v14 - 8);
  uint64_t v60 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v49 - v15;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v17 = (void *)v63;
  sub_1C1520EBC();
  uint64_t v18 = v17;
  if (v17) {
    goto LABEL_16;
  }
  uint64_t v50 = v13;
  uint64_t v49 = v9;
  uint64_t v51 = 0;
  uint64_t v52 = v3;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v19 = sub_1C1520EAC();
  uint64_t v20 = Dictionary<>.errorOnUnknownKeys.getter(v19);
  swift_bridgeObjectRelease();
  uint64_t v22 = v58;
  uint64_t v21 = v59;
  uint64_t v23 = (uint64_t)v64;
  uint64_t v24 = v16;
  uint64_t v25 = v60;
  if ((v20 & 1) == 0)
  {
LABEL_11:
    sub_1BFE9420C();
    long long v67 = 0uLL;
    LOBYTE(v68) = 0;
    uint64_t v41 = v51;
    sub_1C15206EC();
    uint64_t v18 = v41;
    if (!v41)
    {
      uint64_t v42 = v65;
      uint64_t v63 = v66;
      long long v67 = xmmword_1C153AB20;
      LOBYTE(v68) = 0;
      uint64_t v43 = v57;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v25);
      *(void *)&long long v67 = v42;
      *((void *)&v67 + 1) = v63;
      (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v23, v70, v43);
      FormatSelectorValueSelector.init(selector:value:)(&v67, v23, v43, v22);
      uint64_t v48 = (uint64_t)v52;
      return __swift_destroy_boxed_opaque_existential_1(v48);
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v25);
LABEL_15:
    uint64_t v3 = v52;
LABEL_16:
    sub_1C0038728(v3, (uint64_t)v18);
    swift_willThrow();

    uint64_t v48 = (uint64_t)v3;
    return __swift_destroy_boxed_opaque_existential_1(v48);
  }
  uint64_t v26 = v60;
  uint64_t v27 = sub_1C152070C();
  uint64_t v28 = v50;
  if (!MEMORY[0x1C18C6870](v27, v50))
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = v26;
    goto LABEL_11;
  }
  uint64_t v29 = 0;
  uint64_t v30 = (char *)(v27 + 48);
  uint64_t v62 = v24;
  uint64_t v63 = v27;
  while (1)
  {
    char v31 = sub_1C151ECDC();
    uint64_t result = sub_1C151EC7C();
    if ((v31 & 1) == 0) {
      break;
    }
    uint64_t v33 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      goto LABEL_19;
    }
    uint64_t v34 = v22;
    uint64_t v36 = *((void *)v30 - 2);
    uint64_t v35 = *((void *)v30 - 1);
    char v37 = *v30;
    *(void *)&long long v67 = v36;
    *((void *)&v67 + 1) = v35;
    LOBYTE(v68) = v37;
    sub_1BFE94AB4(v36, v35, v37);
    uint64_t v38 = sub_1C0D990EC(v28);
    if (v39)
    {
      uint64_t v44 = v39;
      uint64_t v45 = v38;
      swift_bridgeObjectRelease();
      uint64_t v46 = sub_1C0D98F50(v49, v56, v55, v54);
      sub_1C02570B4();
      uint64_t v18 = (void *)swift_allocError();
      *(void *)uint64_t v47 = v45;
      *(void *)(v47 + 8) = v44;
      *(void *)(v47 + 16) = v46;
      *(_OWORD *)(v47 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v67, *((uint64_t *)&v67 + 1), v68);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v62, v60);
      goto LABEL_15;
    }
    sub_1BFE94AD4(v36, v35, v37);
    uint64_t v40 = MEMORY[0x1C18C6870](v63, v28);
    ++v29;
    v30 += 24;
    uint64_t v22 = v34;
    uint64_t v23 = (uint64_t)v64;
    uint64_t v24 = v62;
    if (v33 == v40)
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = v60;
      uint64_t v21 = v59;
      goto LABEL_11;
    }
  }
  uint64_t result = sub_1C152016C();
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t _s10CodingKeysOMa_236()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FormatSelectorValueSelector.init(selector:value:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v6 = a1[1];
  *a4 = *a1;
  a4[1] = v6;
  uint64_t v7 = (char *)a4 + *(int *)(type metadata accessor for FormatSelectorValueSelector() + 36);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  return v8(v7, a2, a3);
}

id sub_1BFDF2404(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = (void *)v3();
  swift_release();

  return v5;
}

id sub_1BFDF246C(uint64_t a1)
{
  return sub_1BFDF247C(a1, *(id *)(v1 + 16), *(unsigned char *)(v1 + 24), *(double *)(v1 + 32));
}

id sub_1BFDF247C(uint64_t a1, id a2, char a3, double a4)
{
  id v6 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  char v9 = a3;
  id v7 = sub_1BFDF24F0(&v9, a4);

  return v7;
}

id sub_1BFDF24F0(unsigned char *a1, double a2)
{
  switch(*a1)
  {
    case 1:
      id v17 = v2;
      sub_1C151FA4C();
      sub_1BFDF288C((uint64_t)v18, (uint64_t)&v19, &qword_1EB85C858, (void (*)(uint64_t))sub_1C00920E8);
      if (v23) {
        goto LABEL_19;
      }
      double v9 = v19;
      double v5 = v21;
      double v6 = v22;
      id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v8 = sel_initWithHue_saturation_brightness_alpha_;
      goto LABEL_16;
    case 2:
      id v17 = v2;
      sub_1C151FA4C();
      sub_1BFDF288C((uint64_t)v18, (uint64_t)&v19, &qword_1EB85C858, (void (*)(uint64_t))sub_1C00920E8);
      if (v23) {
        goto LABEL_19;
      }
      double v10 = v19;
      double v11 = v20;
      double v6 = v22;
      id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v8 = sel_initWithHue_saturation_brightness_alpha_;
      goto LABEL_23;
    case 3:
      id v12 = objc_msgSend(v2, sel_colorWithAlphaComponent_, a2);
      return v12;
    case 4:
      id v17 = v2;
      sub_1C151FA5C();
      sub_1BFDF288C((uint64_t)v18, (uint64_t)&v19, &qword_1EA198E08, (void (*)(uint64_t))sub_1C0281DFC);
      if (v23) {
        goto LABEL_19;
      }
      double v4 = v20;
      double v5 = v21;
      double v6 = v22;
      id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v8 = sel_initWithRed_green_blue_alpha_;
      goto LABEL_13;
    case 5:
      id v17 = v2;
      sub_1C151FA5C();
      sub_1BFDF288C((uint64_t)v18, (uint64_t)&v19, &qword_1EA198E08, (void (*)(uint64_t))sub_1C0281DFC);
      if (v23) {
        goto LABEL_19;
      }
      double v9 = v19;
      double v5 = v21;
      double v6 = v22;
      id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v8 = sel_initWithRed_green_blue_alpha_;
LABEL_16:
      double v14 = v9;
      double v15 = a2;
      goto LABEL_17;
    case 6:
      id v17 = v2;
      sub_1C151FA5C();
      sub_1BFDF288C((uint64_t)v18, (uint64_t)&v19, &qword_1EA198E08, (void (*)(uint64_t))sub_1C0281DFC);
      if (v23) {
        goto LABEL_19;
      }
      double v10 = v19;
      double v11 = v20;
      double v6 = v22;
      id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v8 = sel_initWithRed_green_blue_alpha_;
LABEL_23:
      double v14 = v10;
      double v15 = v11;
      double v16 = a2;
      return objc_msgSend(v7, v8, v14, v15, v16, v6);
    default:
      id v17 = v2;
      sub_1C151FA4C();
      sub_1BFDF288C((uint64_t)v18, (uint64_t)&v19, &qword_1EB85C858, (void (*)(uint64_t))sub_1C00920E8);
      if (v23)
      {
LABEL_19:
        return v17;
      }
      else
      {
        double v4 = v20;
        double v5 = v21;
        double v6 = v22;
        id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
        uint64_t v8 = sel_initWithHue_saturation_brightness_alpha_;
LABEL_13:
        double v14 = a2;
        double v15 = v4;
LABEL_17:
        double v16 = v5;
        return objc_msgSend(v7, v8, v14, v15, v16, v6);
      }
  }
}

uint64_t sub_1BFDF2820(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFEE9D78(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFDF288C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFDF28F8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1BFDF28F8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

id sub_1BFDF294C(uint64_t a1)
{
  return sub_1BFDF295C(a1, *(unsigned char *)(v1 + 16), *(void **)(v1 + 32), *(double *)(v1 + 24));
}

id sub_1BFDF295C(uint64_t a1, char a2, void *a3, double a4)
{
  v12[1] = a2;
  double v7 = sub_1BFDF2A08() + a4;
  if (v7 <= 0.0) {
    double v7 = 0.0;
  }
  if (v7 <= 1.0) {
    double v8 = v7;
  }
  else {
    double v8 = 1.0;
  }
  id v9 = objc_msgSend(a3, sel_resolvedColorWithTraitCollection_, a1);
  v12[0] = a2;
  id v10 = sub_1BFDF24F0(v12, v8);

  return v10;
}

double sub_1BFDF2A08()
{
  switch(*v0)
  {
    case 1:
      sub_1C151FA4C();
      uint64_t v3 = &qword_1EB85C858;
      unint64_t v4 = (void (*)(uint64_t))sub_1C00920E8;
      goto LABEL_12;
    case 2:
      sub_1C151FA4C();
      uint64_t v5 = &qword_1EB85C858;
      uint64_t v6 = (void (*)(uint64_t))sub_1C00920E8;
      goto LABEL_15;
    case 3:
      sub_1C151FA4C();
      sub_1BFDF288C((uint64_t)v8, (uint64_t)v9, &qword_1EB85C858, (void (*)(uint64_t))sub_1C00920E8);
      double result = 0.0;
      if ((v10 & 1) == 0) {
        return *(double *)&v9[3];
      }
      return result;
    case 4:
      sub_1C151FA5C();
      uint64_t v1 = &qword_1EA198E08;
      uint64_t v2 = (void (*)(uint64_t))sub_1C0281DFC;
      goto LABEL_8;
    case 5:
      sub_1C151FA5C();
      uint64_t v3 = &qword_1EA198E08;
      unint64_t v4 = (void (*)(uint64_t))sub_1C0281DFC;
LABEL_12:
      sub_1BFDF288C((uint64_t)v8, (uint64_t)v9, v3, v4);
      double result = 0.0;
      if ((v10 & 1) == 0) {
        return *(double *)&v9[1];
      }
      return result;
    case 6:
      sub_1C151FA5C();
      uint64_t v5 = &qword_1EA198E08;
      uint64_t v6 = (void (*)(uint64_t))sub_1C0281DFC;
LABEL_15:
      sub_1BFDF288C((uint64_t)v8, (uint64_t)v9, v5, v6);
      double result = 0.0;
      if ((v10 & 1) == 0) {
        double result = *(double *)&v9[2];
      }
      break;
    default:
      sub_1C151FA4C();
      uint64_t v1 = &qword_1EB85C858;
      uint64_t v2 = (void (*)(uint64_t))sub_1C00920E8;
LABEL_8:
      sub_1BFDF288C((uint64_t)v8, (uint64_t)v9, v1, v2);
      double result = *(double *)v9;
      if (v10) {
        double result = 0.0;
      }
      break;
  }
  return result;
}

uint64_t sub_1BFDF2BE8(void *a1)
{
  return sub_1BFDF2BF0(a1);
}

uint64_t sub_1BFDF2BF0(void *a1)
{
  return FormatColor.color.getter();
}

id sub_1BFDF2C48(uint64_t a1, id a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(id, uint64_t, uint64_t), uint64_t (*a7)(id, uint64_t, unint64_t))
{
  id v12 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  swift_retain();
  LOBYTE(a6) = a6(v12, a5, a3);
  swift_release();
  if (a6)
  {
    uint64_t v13 = *(void *)(a4 + 16);
    if (v13)
    {
      swift_bridgeObjectRetain_n();
      id v14 = v12;
      uint64_t v15 = 0;
      id v12 = v14;
      do
      {
        double v16 = v12;
        unint64_t v17 = *(void *)(a4 + 8 * v15++ + 32);
        sub_1BFF65DE8(v17);
        id v12 = (id)a7(v12, a5, v17);
        sub_1BFF65E20(v17);
      }
      while (v13 != v15);

      swift_bridgeObjectRelease_n();
    }
  }
  return v12;
}

id sub_1BFDF2D84(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(id, uint64_t, uint64_t), uint64_t (*a4)(id, uint64_t, unint64_t))
{
  uint64_t v8 = *(void *)(a2(0) - 8);
  return sub_1BFDF2C48(a1, *(id *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), v4 + ((*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), a3, a4);
}

id sub_1BFDF2E0C(uint64_t a1)
{
  return sub_1BFDF2D84(a1, (uint64_t (*)(void))type metadata accessor for FormatDecorationContext, (uint64_t (*)(id, uint64_t, uint64_t))sub_1BFDF2E4C, (uint64_t (*)(id, uint64_t, unint64_t))sub_1BFFB2454);
}

uint64_t sub_1BFDF2E4C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FormatDecorationContext();
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v30 - v12;
  switch(a3 >> 61)
  {
    case 1uLL:
      uint64_t v18 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v19 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain_n();
      char v20 = sub_1BFDF2E4C(a1, a2, v18);
      if (v4) {
        goto LABEL_11;
      }
      char v25 = v20;
      swift_release();
      sub_1C0282524(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatDecorationContext);
      if (v25)
      {
        LOBYTE(a1) = 1;
      }
      else
      {
        swift_retain();
        LOBYTE(a1) = sub_1BFDF2E4C(a1, v10, v19);
        swift_release();
      }
      sub_1BFF810A4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatDecorationContext);
      goto LABEL_21;
    case 2uLL:
      uint64_t v21 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      char v22 = sub_1BFDF2E4C(a1, a2, v21);
      if (v4)
      {
        swift_release();
      }
      else
      {
        char v26 = v22;
        swift_release();
        LOBYTE(a1) = v26 ^ 1;
      }
      return a1 & 1;
    case 3uLL:
      LOBYTE(a1) = sub_1BFDF3264(*(double *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18), a1, a2, *(_WORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
      return a1 & 1;
    case 4uLL:
      uint64_t v23 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v24 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain_n();
      sub_1BFF9E978(&v31, a2, v23);
      if (v4) {
        goto LABEL_11;
      }
      swift_release();
      uint64_t v27 = swift_retain();
      Class v28 = FormatColor.color.getter(v27);
      LOBYTE(a1) = sub_1BFDF2E4C(v28, a2, v24);
      swift_release_n();
      swift_release();

      swift_release();
      break;
    default:
      uint64_t v14 = *(void *)(a3 + 16);
      uint64_t v15 = *(void *)(a3 + 24);
      swift_retain();
      swift_retain_n();
      char v16 = sub_1BFDF2E4C(a1, a2, v14);
      if (v4)
      {
LABEL_11:
        swift_release();
        swift_release_n();
      }
      else
      {
        char v17 = v16;
        swift_release();
        sub_1C0282524(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatDecorationContext);
        if (v17)
        {
          swift_retain();
          LOBYTE(a1) = sub_1BFDF2E4C(a1, v13, v15);
          swift_release();
        }
        else
        {
          LOBYTE(a1) = 0;
        }
        sub_1BFF810A4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatDecorationContext);
LABEL_21:
        swift_release();
        swift_release();
      }
      break;
  }
  return a1 & 1;
}

BOOL sub_1BFDF3264(double a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  char v4 = HIBYTE(a4);
  switch((char)a4)
  {
    case 1:
      sub_1C151FA4C();
      uint64_t v8 = &qword_1EB85C858;
      uint64_t v9 = (void (*)(uint64_t))sub_1C00920E8;
      goto LABEL_13;
    case 2:
      sub_1C151FA4C();
      sub_1BFDF2820((uint64_t)v12, (uint64_t)v13, &qword_1EB85C858, (void (*)(uint64_t))sub_1C00920E8);
      double v10 = 0.0;
      if (v14) {
        break;
      }
      goto LABEL_16;
    case 3:
      sub_1C151FA4C();
      sub_1BFDF2820((uint64_t)v12, (uint64_t)v13, &qword_1EB85C858, (void (*)(uint64_t))sub_1C00920E8);
      double v10 = 0.0;
      if ((v14 & 1) == 0) {
        double v10 = *(double *)&v13[3];
      }
      break;
    case 4:
      sub_1C151FA5C();
      uint64_t v6 = &qword_1EA198E08;
      double v7 = (void (*)(uint64_t))sub_1C0281DFC;
      goto LABEL_9;
    case 5:
      sub_1C151FA5C();
      uint64_t v8 = &qword_1EA198E08;
      uint64_t v9 = (void (*)(uint64_t))sub_1C0281DFC;
LABEL_13:
      sub_1BFDF2820((uint64_t)v12, (uint64_t)v13, v8, v9);
      double v10 = 0.0;
      if ((v14 & 1) == 0) {
        double v10 = *(double *)&v13[1];
      }
      break;
    case 6:
      sub_1C151FA5C();
      sub_1BFDF2820((uint64_t)v12, (uint64_t)v13, &qword_1EA198E08, (void (*)(uint64_t))sub_1C0281DFC);
      double v10 = 0.0;
      if (v14 != 1) {
LABEL_16:
      }
        double v10 = *(double *)&v13[2];
      break;
    default:
      sub_1C151FA4C();
      uint64_t v6 = &qword_1EB85C858;
      double v7 = (void (*)(uint64_t))sub_1C00920E8;
LABEL_9:
      sub_1BFDF2820((uint64_t)v12, (uint64_t)v13, v6, v7);
      double v10 = *(double *)v13;
      if (v14) {
        double v10 = 0.0;
      }
      break;
  }
  switch(v4)
  {
    case 1:
    case 7:
      BOOL result = v10 != a1;
      break;
    case 2:
    case 8:
      BOOL result = v10 < a1;
      break;
    case 3:
    case 9:
      BOOL result = v10 <= a1;
      break;
    case 4:
    case 10:
      BOOL result = v10 > a1;
      break;
    case 5:
    case 11:
      BOOL result = v10 >= a1;
      break;
    default:
      BOOL result = v10 == a1;
      break;
  }
  return result;
}

uint64_t sub_1BFDF34DC(void *a1)
{
  return FormatAdjustment.encode(to:)(a1);
}

uint64_t FormatAdjustment.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v244 = (char *)&v219 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  int64_t v243 = (char *)&v219 - v6;
  MEMORY[0x1F4188790](v7);
  int64_t v223 = (char *)&v219 - v8;
  MEMORY[0x1F4188790](v9);
  id v222 = (char *)&v219 - v10;
  MEMORY[0x1F4188790](v11);
  unint64_t v242 = (char *)&v219 - v12;
  MEMORY[0x1F4188790](v13);
  unint64_t v241 = (char *)&v219 - v14;
  MEMORY[0x1F4188790](v15);
  int64_t v239 = (char *)&v219 - v16;
  MEMORY[0x1F4188790](v17);
  int64_t v240 = (char *)&v219 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v238 = (char *)&v219 - v20;
  MEMORY[0x1F4188790](v21);
  unint64_t v237 = (char *)&v219 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v236 = (char *)&v219 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v235 = (char *)&v219 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v234 = (char *)&v219 - v28;
  MEMORY[0x1F4188790](v29);
  v233 = (char *)&v219 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v232 = (char *)&v219 - v32;
  MEMORY[0x1F4188790](v33);
  int64_t v221 = (char *)&v219 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v231 = (char *)&v219 - v36;
  MEMORY[0x1F4188790](v37);
  v230 = (char *)&v219 - v38;
  MEMORY[0x1F4188790](v39);
  uint64_t v229 = (char *)&v219 - v40;
  MEMORY[0x1F4188790](v41);
  int64_t v228 = (char *)&v219 - v42;
  MEMORY[0x1F4188790](v43);
  unint64_t v227 = (char *)&v219 - v44;
  MEMORY[0x1F4188790](v45);
  int64_t v226 = (char *)&v219 - v46;
  MEMORY[0x1F4188790](v47);
  unint64_t v225 = (char *)&v219 - v48;
  MEMORY[0x1F4188790](v49);
  unint64_t v224 = (char *)&v219 - v50;
  MEMORY[0x1F4188790](v51);
  uint64_t v53 = (char *)&v219 - v52;
  MEMORY[0x1F4188790](v54);
  uint64_t v220 = (char *)&v219 - v55;
  MEMORY[0x1F4188790](v56);
  uint64_t v58 = (char *)&v219 - v57;
  MEMORY[0x1F4188790](v59);
  uint64_t v61 = (char *)&v219 - v60;
  MEMORY[0x1F4188790](v62);
  uint64_t v64 = (char *)&v219 - v63;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v65 - 8);
  long long v67 = (char *)&v219 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v68 = *v1;
  uint64_t v69 = a1;
  uint64_t v71 = a1[3];
  uint64_t v70 = a1[4];
  __swift_project_boxed_opaque_existential_1(v69, v71);
  unint64_t v72 = sub_1BFEB6A24();
  int64_t v245 = v67;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatAdjustment, v73, v71, (uint64_t)&type metadata for FormatAdjustment, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v70, (uint64_t)v67, v72, (uint64_t)&off_1F1C39B68);
  switch((v68 >> 59) & 0x1E | (v68 >> 2) & 1)
  {
    case 1uLL:
      char v82 = *(unsigned char *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v83 = sub_1C151928C();
      uint64_t v84 = __swift_project_value_buffer(v83, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16))(v61, v84, v83);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v85 = v82;
      uint64_t v80 = (uint64_t)v245;
      sub_1BFDF5464(1, v85, (uint64_t)v61);
      goto LABEL_46;
    case 2uLL:
      uint64_t v86 = v68 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v87 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v88 = *(void *)(v86 + 24);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v89 = sub_1C151928C();
      uint64_t v90 = __swift_project_value_buffer(v89, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v89 - 8) + 16))(v58, v90, v89);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v91 = v87;
      uint64_t v80 = (uint64_t)v245;
      sub_1BFDF5F3C(2, v91, v88, (uint64_t)v58);
      goto LABEL_42;
    case 3uLL:
      uint64_t v92 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v93 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      if (v93 != -1) {
        swift_once();
      }
      uint64_t v94 = sub_1C151928C();
      uint64_t v95 = __swift_project_value_buffer(v94, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v94 - 8) + 16))(v53, v95, v94);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v96 = (uint64_t)v245;
      sub_1BFDF5BD8(4, v92, (uint64_t)v53);
      uint64_t v97 = (uint64_t)v53;
      goto LABEL_75;
    case 4uLL:
      uint64_t v98 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v99 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      if (v99 != -1) {
        swift_once();
      }
      uint64_t v100 = sub_1C151928C();
      uint64_t v101 = __swift_project_value_buffer(v100, (uint64_t)qword_1EB93CAB0);
      uint64_t v102 = (uint64_t)v224;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v100 - 8) + 16))(v224, v101, v100);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v80 = (uint64_t)v245;
      sub_1BFDF5BD8(5, v98, v102);
      sub_1BFEFEB68(v102, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      goto LABEL_89;
    case 5uLL:
      uint64_t v103 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v104 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      if (v104 != -1) {
        swift_once();
      }
      uint64_t v105 = sub_1C151928C();
      uint64_t v106 = __swift_project_value_buffer(v105, (uint64_t)qword_1EB93CAB0);
      uint64_t v107 = (uint64_t)v225;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v105 - 8) + 16))(v225, v106, v105);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v108 = 6;
      goto LABEL_38;
    case 6uLL:
      uint64_t v103 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v109 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      if (v109 != -1) {
        swift_once();
      }
      uint64_t v110 = sub_1C151928C();
      uint64_t v111 = __swift_project_value_buffer(v110, (uint64_t)qword_1EB93CAB0);
      uint64_t v107 = (uint64_t)v226;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v110 - 8) + 16))(v226, v111, v110);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v108 = 7;
      goto LABEL_38;
    case 7uLL:
      uint64_t v103 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v112 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      if (v112 != -1) {
        swift_once();
      }
      uint64_t v113 = sub_1C151928C();
      uint64_t v114 = __swift_project_value_buffer(v113, (uint64_t)qword_1EB93CAB0);
      uint64_t v107 = (uint64_t)v227;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v113 - 8) + 16))(v227, v114, v113);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v108 = 8;
      goto LABEL_38;
    case 8uLL:
      uint64_t v103 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v115 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      if (v115 != -1) {
        swift_once();
      }
      uint64_t v116 = sub_1C151928C();
      uint64_t v117 = __swift_project_value_buffer(v116, (uint64_t)qword_1EB93CAB0);
      uint64_t v107 = (uint64_t)v228;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v116 - 8) + 16))(v228, v117, v116);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v108 = 9;
      goto LABEL_38;
    case 9uLL:
      uint64_t v118 = v68 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v119 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      char v120 = *(unsigned char *)(v118 + 24);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v121 = sub_1C151928C();
      uint64_t v122 = __swift_project_value_buffer(v121, (uint64_t)qword_1EB93CAB0);
      uint64_t v123 = (uint64_t)v229;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v121 - 8) + 16))(v229, v122, v121);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v124 = v119;
      uint64_t v80 = (uint64_t)v245;
      sub_1BFC481FC(10, v124, v120, v123);
      goto LABEL_84;
    case 0xAuLL:
      uint64_t v103 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v125 = qword_1EB887600;
      swift_bridgeObjectRetain();
      if (v125 != -1) {
        swift_once();
      }
      uint64_t v126 = sub_1C151928C();
      uint64_t v127 = __swift_project_value_buffer(v126, (uint64_t)qword_1EB93CA08);
      uint64_t v107 = (uint64_t)v230;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v126 - 8) + 16))(v230, v127, v126);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v108 = 11;
      goto LABEL_38;
    case 0xBuLL:
      uint64_t v103 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v128 = qword_1EB887600;
      swift_bridgeObjectRetain();
      if (v128 != -1) {
        swift_once();
      }
      uint64_t v129 = sub_1C151928C();
      uint64_t v130 = __swift_project_value_buffer(v129, (uint64_t)qword_1EB93CA08);
      uint64_t v107 = (uint64_t)v231;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v129 - 8) + 16))(v231, v130, v129);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v108 = 12;
LABEL_38:
      uint64_t v96 = (uint64_t)v245;
      sub_1BFDF5BD8(v108, v103, v107);
      goto LABEL_74;
    case 0xCuLL:
      char v131 = *(unsigned char *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v132 = sub_1C151928C();
      uint64_t v133 = __swift_project_value_buffer(v132, (uint64_t)qword_1EB93CAB0);
      uint64_t v58 = v232;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v132 - 8) + 16))(v232, v133, v132);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v134 = v131;
      uint64_t v80 = (uint64_t)v245;
      sub_1BFDF5464(14, v134, (uint64_t)v58);
LABEL_42:
      uint64_t v81 = (uint64_t)v58;
      goto LABEL_88;
    case 0xDuLL:
      uint64_t v135 = v68 & 0xFFFFFFFFFFFFFFBLL;
      char v136 = *(unsigned char *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v137 = *(void *)(v135 + 24);
      uint64_t v138 = *(void *)(v135 + 32);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v139 = sub_1C151928C();
      uint64_t v140 = __swift_project_value_buffer(v139, (uint64_t)qword_1EB93CAB0);
      uint64_t v61 = v233;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v139 - 8) + 16))(v233, v140, v139);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v141 = v136;
      uint64_t v80 = (uint64_t)v245;
      sub_1BFDF6364(15, v141, v137, v138, (uint64_t)v61);
LABEL_46:
      uint64_t v81 = (uint64_t)v61;
      goto LABEL_88;
    case 0xEuLL:
      uint64_t v142 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v143 = qword_1EB882D28;
      swift_retain();
      if (v143 != -1) {
        swift_once();
      }
      uint64_t v144 = sub_1C151928C();
      uint64_t v145 = __swift_project_value_buffer(v144, (uint64_t)qword_1EB93CAB0);
      uint64_t v146 = (uint64_t)v234;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v144 - 8) + 16))(v234, v145, v144);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v147 = 16;
      goto LABEL_53;
    case 0xFuLL:
      uint64_t v142 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v148 = qword_1EB882D28;
      swift_retain();
      if (v148 != -1) {
        swift_once();
      }
      uint64_t v149 = sub_1C151928C();
      uint64_t v150 = __swift_project_value_buffer(v149, (uint64_t)qword_1EB93CAB0);
      uint64_t v146 = (uint64_t)v235;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v149 - 8) + 16))(v235, v150, v149);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v147 = 17;
LABEL_53:
      uint64_t v151 = (uint64_t)v245;
      sub_1BFDF578C(v147, v142, v146);
      uint64_t v152 = v146;
      goto LABEL_80;
    case 0x10uLL:
      uint64_t v153 = v68 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v155 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v154 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      uint64_t v156 = *(void *)(v153 + 32);
      uint64_t v157 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      swift_retain();
      if (v157 != -1) {
        swift_once();
      }
      uint64_t v158 = sub_1C151928C();
      uint64_t v159 = __swift_project_value_buffer(v158, (uint64_t)qword_1EB93CAB0);
      uint64_t v160 = (uint64_t)v236;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v158 - 8) + 16))(v236, v159, v158);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v161 = 18;
      goto LABEL_66;
    case 0x11uLL:
      uint64_t v162 = v68 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v155 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v154 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      uint64_t v156 = *(void *)(v162 + 32);
      uint64_t v163 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      swift_retain();
      if (v163 != -1) {
        swift_once();
      }
      uint64_t v164 = sub_1C151928C();
      uint64_t v165 = __swift_project_value_buffer(v164, (uint64_t)qword_1EB93CAB0);
      uint64_t v160 = (uint64_t)v237;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v164 - 8) + 16))(v237, v165, v164);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v161 = 19;
      goto LABEL_66;
    case 0x12uLL:
      uint64_t v166 = v68 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v155 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v154 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      uint64_t v156 = *(void *)(v166 + 32);
      uint64_t v167 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      swift_retain();
      if (v167 != -1) {
        swift_once();
      }
      uint64_t v168 = sub_1C151928C();
      uint64_t v169 = __swift_project_value_buffer(v168, (uint64_t)qword_1EB93CAB0);
      uint64_t v160 = (uint64_t)v238;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v168 - 8) + 16))(v238, v169, v168);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v161 = 20;
      goto LABEL_66;
    case 0x13uLL:
      uint64_t v170 = v68 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v155 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v154 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      uint64_t v156 = *(void *)(v170 + 32);
      uint64_t v171 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      swift_retain();
      if (v171 != -1) {
        swift_once();
      }
      uint64_t v172 = sub_1C151928C();
      uint64_t v173 = __swift_project_value_buffer(v172, (uint64_t)qword_1EB93CAB0);
      uint64_t v160 = (uint64_t)v240;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v172 - 8) + 16))(v240, v173, v172);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v161 = 21;
LABEL_66:
      uint64_t v174 = (uint64_t)v245;
      sub_1BFDF6178(v161, v155, v154, v156, v160);
      sub_1BFEFEB68(v160, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v174, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_release();
      return swift_bridgeObjectRelease();
    case 0x14uLL:
      uint64_t v176 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v177 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      if (v177 != -1) {
        swift_once();
      }
      uint64_t v178 = sub_1C151928C();
      uint64_t v179 = __swift_project_value_buffer(v178, (uint64_t)qword_1EB93CAB0);
      uint64_t v107 = (uint64_t)v239;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v178 - 8) + 16))(v239, v179, v178);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v180 = 22;
      goto LABEL_73;
    case 0x15uLL:
      uint64_t v176 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v181 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      if (v181 != -1) {
        swift_once();
      }
      uint64_t v182 = sub_1C151928C();
      uint64_t v183 = __swift_project_value_buffer(v182, (uint64_t)qword_1EB93CAB0);
      uint64_t v107 = (uint64_t)v241;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v182 - 8) + 16))(v241, v183, v182);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v180 = 23;
LABEL_73:
      uint64_t v96 = (uint64_t)v245;
      sub_1BFDF5244(v180, v176, v107);
LABEL_74:
      uint64_t v97 = v107;
LABEL_75:
      sub_1BFEFEB68(v97, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      goto LABEL_76;
    case 0x16uLL:
      uint64_t v185 = v68 & 0xFFFFFFFFFFFFFFBLL;
      char v186 = *(unsigned char *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v187 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      char v188 = *(unsigned char *)(v185 + 32);
      uint64_t v189 = qword_1EB887638;
      swift_retain();
      if (v189 != -1) {
        swift_once();
      }
      uint64_t v190 = sub_1C151928C();
      uint64_t v191 = __swift_project_value_buffer(v190, (uint64_t)qword_1EB93CA98);
      uint64_t v192 = (uint64_t)v242;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v190 - 8) + 16))(v242, v191, v190);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v193 = v188;
      uint64_t v151 = (uint64_t)v245;
      sub_1C06979E4(24, v186, v187, v193, v192);
      uint64_t v152 = v192;
LABEL_80:
      sub_1BFEFEB68(v152, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v151, (uint64_t (*)(void))sub_1BFEFF7D8);
      return swift_release();
    case 0x17uLL:
      uint64_t v194 = v68 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v195 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v196 = *(void *)(v194 + 24);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v197 = sub_1C151928C();
      uint64_t v198 = __swift_project_value_buffer(v197, (uint64_t)qword_1EB93CAB0);
      uint64_t v123 = (uint64_t)v243;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v197 - 8) + 16))(v243, v198, v197);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v199 = v195;
      uint64_t v80 = (uint64_t)v245;
      sub_1BFDF5920(27, v199, v196, v123);
LABEL_84:
      uint64_t v81 = v123;
      goto LABEL_88;
    case 0x18uLL:
      v200 = (void *)(v68 & 0xFFFFFFFFFFFFFFBLL);
      uint64_t v201 = *(void *)((v68 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v202 = v200[3];
      uint64_t v203 = v200[4];
      uint64_t v204 = v200[5];
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v205 = sub_1C151928C();
      uint64_t v206 = __swift_project_value_buffer(v205, (uint64_t)qword_1EB93CA98);
      uint64_t v207 = (uint64_t)v244;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v205 - 8) + 16))(v244, v206, v205);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v208 = v201;
      uint64_t v80 = (uint64_t)v245;
      sub_1C0697B88(28, v208, v202, v203, v204, v207);
      uint64_t v81 = v207;
      goto LABEL_88;
    case 0x19uLL:
      uint64_t v96 = (uint64_t)v245;
      switch(__ROR8__(v68 + 0x3FFFFFFFFFFFFFFCLL, 3))
      {
        case 1:
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v213 = sub_1C151928C();
          __swift_project_value_buffer(v213, (uint64_t)qword_1EB93CAB0);
          uint64_t v214 = *(void (**)(void))(*(void *)(v213 - 8) + 16);
          uint64_t v211 = (uint64_t)v221;
          v214();
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v212 = 13;
          break;
        case 2:
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v215 = sub_1C151928C();
          __swift_project_value_buffer(v215, (uint64_t)qword_1EB93CAB0);
          uint64_t v216 = *(void (**)(void))(*(void *)(v215 - 8) + 16);
          uint64_t v211 = (uint64_t)v222;
          v216();
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v212 = 25;
          break;
        case 3:
          if (qword_1EB887640 != -1) {
            swift_once();
          }
          uint64_t v217 = sub_1C151928C();
          __swift_project_value_buffer(v217, (uint64_t)qword_1EB93CAC8);
          uint64_t v218 = *(void (**)(void))(*(void *)(v217 - 8) + 16);
          uint64_t v211 = (uint64_t)v223;
          v218();
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v212 = 26;
          break;
        default:
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v209 = sub_1C151928C();
          __swift_project_value_buffer(v209, (uint64_t)qword_1EB93CAB0);
          BOOL v210 = *(void (**)(void))(*(void *)(v209 - 8) + 16);
          uint64_t v211 = (uint64_t)v220;
          v210();
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v212 = 3;
          break;
      }
      sub_1BFDF5638(v212, v211);
      sub_1BFEFEB68(v211, type metadata accessor for FormatVersionRequirement);
LABEL_76:
      uint64_t v184 = v96;
      break;
    default:
      uint64_t v75 = *(void *)(v68 + 16);
      uint64_t v74 = *(void *)(v68 + 24);
      uint64_t v76 = *(void *)(v68 + 32);
      uint64_t v77 = *(void *)(v68 + 40);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v78 = sub_1C151928C();
      uint64_t v79 = __swift_project_value_buffer(v78, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v64, v79, v78);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v80 = (uint64_t)v245;
      sub_1BFDF5DA4(0, v75, v74, v76, v77, (uint64_t)v64);
      uint64_t v81 = (uint64_t)v64;
LABEL_88:
      sub_1BFEFEB68(v81, type metadata accessor for FormatVersionRequirement);
LABEL_89:
      uint64_t v184 = v80;
      break;
  }
  return sub_1BFEFEB68(v184, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFDF5244(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0903330;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDF5410();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE1C798();
    sub_1C085F050(&qword_1EB85B5A0, (void (*)(uint64_t))sub_1BFE1C798);
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDF5410()
{
  unint64_t result = qword_1EB865BE8;
  if (!qword_1EB865BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865BE8);
  }
  return result;
}

uint64_t sub_1BFDF5464(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0903330;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDF5410();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB873EC8, (uint64_t (*)(void))sub_1C086BEE8, (uint64_t)&type metadata for FormatAnchor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C090333C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDF5638(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C0903330;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDF5410();
    v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDF578C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0903330;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDF5410();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFDF5AF4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDF5920(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0903330;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDF5410();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB877290, (uint64_t (*)(void))sub_1C007F3D0, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchListValue);
    sub_1BFDF5B48();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDF5AF4()
{
  unint64_t result = qword_1EB85C098;
  if (!qword_1EB85C098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C098);
  }
  return result;
}

unint64_t sub_1BFDF5B48()
{
  unint64_t result = qword_1EB85BD48;
  if (!qword_1EB85BD48)
  {
    sub_1BFEFF3E8(255, &qword_1EB877290, (uint64_t (*)(void))sub_1C007F3D0, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchListValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BD48);
  }
  return result;
}

uint64_t sub_1BFDF5BD8(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0903330;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDF5410();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE41AFC();
    sub_1C085F050(&qword_1EB85B598, (void (*)(uint64_t))sub_1BFE41AFC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDF5DA4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v23 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  sub_1BFEFF7D8();
  uint64_t v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  *(void *)(v14 + 32) = v12;
  void v17[2] = sub_1C0903330;
  v17[3] = v14;
  swift_retain();
  char v15 = sub_1BFEFF114(a6, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDF5410();
    long long v18 = 0uLL;
    sub_1C1520BAC();
    long long v18 = xmmword_1C152C800;
    sub_1BFDF60D0();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDF5F3C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C0903330;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDF5410();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFDF6124();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDF60D0()
{
  unint64_t result = qword_1EB85BE40;
  if (!qword_1EB85BE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BE40);
  }
  return result;
}

unint64_t sub_1BFDF6124()
{
  unint64_t result = qword_1EB85BA78;
  if (!qword_1EB85BA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BA78);
  }
  return result;
}

uint64_t sub_1BFDF6178(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  void v16[2] = sub_1C0903330;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDF5410();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFDF6310();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDF6310()
{
  unint64_t result = qword_1EB85C280;
  if (!qword_1EB85C280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C280);
  }
  return result;
}

uint64_t sub_1BFDF6364(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  char v18 = a2 & 1;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  void v16[2] = sub_1C0903330;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDF5410();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFDF6500();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDF6500()
{
  unint64_t result = qword_1EB85BDD0;
  if (!qword_1EB85BDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BDD0);
  }
  return result;
}

uint64_t sub_1BFDF6554@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatColorProcessor.init(from:)(a1, a2);
}

uint64_t FormatColorProcessor.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v34 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v33 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  uint64_t v9 = v2;
  if (v2)
  {
LABEL_9:
    sub_1C0038728(a1, (uint64_t)v9);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v8;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      char v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        unint64_t v16 = *v15;
        if (*v15 >= 4) {
          break;
        }
        v15 += 2;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v19 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v9 = (void *)swift_allocError();
      *(void *)uint64_t v20 = v19;
      *(void *)(v20 + 8) = v16;
      *(void *)(v20 + 16) = &unk_1F1B67F30;
      *(_OWORD *)(v20 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v19, v16);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFDF6B34();
  long long v36 = 0uLL;
  sub_1C15206EC();
  switch((char)v35)
  {
    case 1:
      unint64_t v18 = 0xA000000000000008;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      break;
    case 2:
      long long v35 = xmmword_1C152C800;
      sub_1BFDF6B88();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      char v21 = v36;
      uint64_t v22 = *((void *)&v36 + 1);
      unint64_t v18 = swift_allocObject();
      *(unsigned char *)(v18 + 16) = v21;
      *(void *)(v18 + 24) = v22;
      break;
    case 3:
      long long v35 = xmmword_1C152C800;
      sub_1BFDF6BDC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      char v23 = v36;
      uint64_t v24 = *((void *)&v36 + 1);
      uint64_t v25 = swift_allocObject();
      *(unsigned char *)(v25 + 16) = v23;
      *(void *)(v25 + 24) = v24;
      unint64_t v18 = v25 | 0x2000000000000000;
      break;
    case 4:
      long long v35 = xmmword_1C152C800;
      sub_1BFDF6C30();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      long long v26 = v36;
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = v26;
      unint64_t v18 = v27 | 0x4000000000000000;
      break;
    case 5:
      long long v36 = xmmword_1C152C800;
      sub_1BFE113DC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      uint64_t v28 = v35;
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = v28;
      unint64_t v18 = v29 | 0x6000000000000000;
      break;
    case 6:
      long long v35 = xmmword_1C152C800;
      sub_1BFDF6C84();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      long long v30 = v36;
      char v31 = v37;
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v30;
      *(unsigned char *)(v32 + 32) = v31;
      unint64_t v18 = v32 | 0x8000000000000000;
      break;
    case 7:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      unint64_t v18 = 0xA000000000000010;
      break;
    default:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      unint64_t v18 = 0xA000000000000000;
      break;
  }
  *uint64_t v34 = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFDF6B34()
{
  unint64_t result = qword_1EB8895A0;
  if (!qword_1EB8895A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8895A0);
  }
  return result;
}

unint64_t sub_1BFDF6B88()
{
  unint64_t result = qword_1EB879520[0];
  if (!qword_1EB879520[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB879520);
  }
  return result;
}

unint64_t sub_1BFDF6BDC()
{
  unint64_t result = qword_1EB85DC30;
  if (!qword_1EB85DC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DC30);
  }
  return result;
}

unint64_t sub_1BFDF6C30()
{
  unint64_t result = qword_1EB85D9E0;
  if (!qword_1EB85D9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D9E0);
  }
  return result;
}

unint64_t sub_1BFDF6C84()
{
  unint64_t result = qword_1EB87FC28[0];
  if (!qword_1EB87FC28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB87FC28);
  }
  return result;
}

uint64_t sub_1BFDF6CD8(void *a1)
{
  return FormatBorder.encode(to:)(a1);
}

uint64_t FormatBorder.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v44 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v46 = (char *)&v43 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v48 = (char *)&v43 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v50 = (char *)&v43 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v52 = (char *)&v43 - v12;
  MEMORY[0x1F4188790](v13);
  char v15 = (char *)&v43 - v14;
  sub_1C086B2C4();
  MEMORY[0x1F4188790](v16 - 8);
  unint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)v1;
  uint64_t v51 = *(void *)(v1 + 8);
  uint64_t v49 = *(void *)(v1 + 16);
  int v47 = *(unsigned __int8 *)(v1 + 24);
  int v45 = *(unsigned __int8 *)(v1 + 25);
  uint64_t v43 = *(void *)(v1 + 32);
  uint64_t v21 = a1[3];
  uint64_t v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_1C086B120();
  uint64_t v23 = v22;
  uint64_t v24 = sub_1C085F050(&qword_1EB8924B0, (void (*)(uint64_t))sub_1C086B120);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatBorder, v25, v21, (uint64_t)&type metadata for FormatBorder, v23, (uint64_t)&type metadata for FormatVersions.JazzkonC, v20, (uint64_t)v18, v24, (uint64_t)&off_1F1C39B68);
  uint64_t v26 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_1C151928C();
  uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1EB93CAB0);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16);
  v29(v15, v28, v27);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = v53;
  sub_1C06DDE50(v19, 0, 0, 0, (uint64_t)v15, (uint64_t)sub_1C01B158C, 0);
  if (v30)
  {
    sub_1BFEFEB68((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v31 = (uint64_t)v52;
    v29(v52, v28, v27);
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = v51;
    swift_retain();
    sub_1C06C6700(v32, 1, 0, 0, v31, (uint64_t)sub_1C01B158C, 0);
    uint64_t v53 = 0;
    sub_1BFEFEB68(v31, type metadata accessor for FormatVersionRequirement);
    swift_release();
    uint64_t v33 = (uint64_t)v50;
    uint64_t v52 = (char *)v28;
    v29(v50, v28, v27);
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = v49;
    swift_retain();
    uint64_t v35 = v34;
    uint64_t v36 = v53;
    sub_1C06C6898(v35, 2, 0, 0, v33, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v33, type metadata accessor for FormatVersionRequirement);
    swift_release();
    if (v36) {
      return sub_1BFEFEB68((uint64_t)v18, (uint64_t (*)(void))sub_1C086B2C4);
    }
    if (qword_1EB887638 != -1) {
      swift_once();
    }
    uint64_t v37 = __swift_project_value_buffer(v27, (uint64_t)qword_1EB93CA98);
    uint64_t v38 = (uint64_t)v48;
    v29(v48, v37, v27);
    swift_storeEnumTagMultiPayload();
    sub_1C06DE050(v47, 3, 0, 0, v38, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v38, type metadata accessor for FormatVersionRequirement);
    uint64_t v39 = (uint64_t)v46;
    v29(v46, (uint64_t)v52, v27);
    swift_storeEnumTagMultiPayload();
    sub_1C06DE21C(v45, 4, 0, 0, v39, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v39, type metadata accessor for FormatVersionRequirement);
    uint64_t v41 = (uint64_t)v44;
    v29(v44, (uint64_t)v52, v27);
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = swift_bridgeObjectRetain();
    sub_1C06DE3D8(v42, 5, 0, 0);
    sub_1BFEFEB68(v41, type metadata accessor for FormatVersionRequirement);
  }
  swift_bridgeObjectRelease();
  return sub_1BFEFEB68((uint64_t)v18, (uint64_t (*)(void))sub_1C086B2C4);
}

uint64_t sub_1BFDF73D8(uint64_t result, uint64_t a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
      return 0;
    }
    int64_t v4 = 0;
    uint64_t v24 = result + 56;
    uint64_t v5 = 1 << *(unsigned char *)(result + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(result + 56);
    int64_t v25 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = a2 + 56;
LABEL_7:
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_49:
      __break(1u);
      return result;
    }
    if (v11 < v25)
    {
      unint64_t v12 = *(void *)(v24 + 8 * v11);
      ++v4;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v25) {
        return 1;
      }
      unint64_t v12 = *(void *)(v24 + 8 * v4);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 2;
      if (v11 + 2 >= v25) {
        return 1;
      }
      unint64_t v12 = *(void *)(v24 + 8 * v4);
      if (v12)
      {
LABEL_22:
        unint64_t v7 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
        int v14 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v10);
        sub_1C1520DBC();
        sub_1C151E77C();
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_1C1520E0C();
        uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v17 = v15 & ~v16;
        if ((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
        {
          int64_t v26 = v4;
          uint64_t v18 = ~v16;
          while (1)
          {
            unint64_t v19 = 0xE300000000000000;
            uint64_t v20 = 7368564;
            switch(*(unsigned char *)(*(void *)(a2 + 48) + v17))
            {
              case 1:
                unint64_t v19 = 0xE700000000000000;
                uint64_t v20 = 0x676E696461656CLL;
                break;
              case 2:
                unint64_t v19 = 0xE800000000000000;
                uint64_t v20 = 0x676E696C69617274;
                break;
              case 3:
                unint64_t v19 = 0xE600000000000000;
                uint64_t v20 = 0x6D6F74746F62;
                break;
              case 4:
                uint64_t v20 = 7105633;
                break;
              default:
                break;
            }
            unint64_t v21 = 0xE300000000000000;
            uint64_t v22 = 7368564;
            switch(v14)
            {
              case 1:
                unint64_t v21 = 0xE700000000000000;
                if (v20 == 0x676E696461656CLL) {
                  goto LABEL_37;
                }
                goto LABEL_38;
              case 2:
                unint64_t v21 = 0xE800000000000000;
                if (v20 != 0x676E696C69617274) {
                  goto LABEL_38;
                }
                goto LABEL_37;
              case 3:
                unint64_t v21 = 0xE600000000000000;
                uint64_t v22 = 0x6D6F74746F62;
                goto LABEL_36;
              case 4:
                if (v20 != 7105633) {
                  goto LABEL_38;
                }
                goto LABEL_37;
              default:
LABEL_36:
                if (v20 != v22) {
                  goto LABEL_38;
                }
LABEL_37:
                if (v19 == v21)
                {
                  unint64_t result = swift_bridgeObjectRelease_n();
                  int64_t v4 = v26;
                  goto LABEL_7;
                }
LABEL_38:
                char v23 = sub_1C1520A9C();
                swift_bridgeObjectRelease();
                unint64_t result = swift_bridgeObjectRelease();
                if (v23)
                {
                  int64_t v4 = v26;
                  goto LABEL_7;
                }
                unint64_t v17 = (v17 + 1) & v18;
                if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                  return 0;
                }
                break;
            }
          }
        }
        return 0;
      }
      int64_t v13 = v11 + 3;
      if (v13 < v25)
      {
        unint64_t v12 = *(void *)(v24 + 8 * v13);
        if (v12)
        {
          int64_t v4 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v4 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            goto LABEL_49;
          }
          if (v4 >= v25) {
            return 1;
          }
          unint64_t v12 = *(void *)(v24 + 8 * v4);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
      }
    }
  }
  return 1;
}

unint64_t sub_1BFDF77C4()
{
  unint64_t result = qword_1EB8600E0;
  if (!qword_1EB8600E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8600E0);
  }
  return result;
}

uint64_t sub_1BFDF7818(uint64_t a1)
{
  return sub_1BFE65368(a1, &qword_1EB87A748, (uint64_t)&type metadata for FormatBorderEdge);
}

unint64_t sub_1BFDF782C()
{
  unint64_t result = qword_1EB860C98;
  if (!qword_1EB860C98)
  {
    sub_1BFE9DEBC(255, (unint64_t *)&qword_1EB860C90, (uint64_t)&type metadata for FormatBorderEdge, MEMORY[0x1E4FBB320]);
    sub_1C007F324();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860C98);
  }
  return result;
}

uint64_t sub_1BFDF78C0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFDF792C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1BFDF7954(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1BFDF792C(uint64_t a1)
{
  return sub_1BFDF7940(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BFDF7940(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BFE74F34(a1, a2, a3, a4, &qword_1EB87A748, (uint64_t)&type metadata for FormatBorderEdge);
}

uint64_t sub_1BFDF7954(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_188;
    }
    if (v4) {
      return sub_1BFDF83E8(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_196;
  }
  uint64_t v109 = v4 - 2;
  uint64_t v106 = result;
  uint64_t v104 = a1;
  if (v4 < 2)
  {
    unint64_t v9 = (char *)MEMORY[0x1E4FBC860];
    __dst = (unsigned char *)(MEMORY[0x1E4FBC860] + 32);
    if (v4 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v95 = MEMORY[0x1E4FBC860];
LABEL_151:
      uint64_t v96 = v9;
      if (v12 >= 2)
      {
        uint64_t v97 = *v104;
        do
        {
          unint64_t v98 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_183;
          }
          if (!v97) {
            goto LABEL_195;
          }
          uint64_t v99 = v96;
          uint64_t v100 = *(void *)&v96[16 * v98 + 32];
          uint64_t v101 = *(void *)&v96[16 * v12 + 24];
          sub_1C0953930((unsigned char *)(v97 + v100), (unsigned char *)(v97 + *(void *)&v96[16 * v12 + 16]), v97 + v101, __dst);
          if (v2)
          {
            uint64_t v94 = v95;
            goto LABEL_149;
          }
          if (v101 < v100) {
            goto LABEL_184;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v99 = sub_1C063604C((uint64_t)v99);
          }
          if (v98 >= *((void *)v99 + 2)) {
            goto LABEL_185;
          }
          uint64_t v102 = &v99[16 * v98 + 32];
          *(void *)uint64_t v102 = v100;
          *((void *)v102 + 1) = v101;
          unint64_t v103 = *((void *)v99 + 2);
          if (v12 > v103) {
            goto LABEL_186;
          }
          memmove(&v99[16 * v12 + 16], &v99[16 * v12 + 32], 16 * (v103 - v12));
          uint64_t v96 = v99;
          *((void *)v99 + 2) = v103 - 1;
          unint64_t v12 = v103 - 1;
        }
        while (v103 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v95 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v105 = MEMORY[0x1E4FBC860];
    uint64_t v113 = v1;
  }
  else
  {
    uint64_t v113 = v1;
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_1C151ECCC();
    *(void *)(v8 + 16) = v7;
    uint64_t v105 = v8;
    __dst = (unsigned char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  unint64_t v9 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v107 = v4;
LABEL_16:
  uint64_t v13 = v10++;
  if (v10 < v4)
  {
    unint64_t v14 = 0xE300000000000000;
    uint64_t v15 = 7368564;
    switch(*(unsigned char *)(v11 + v10))
    {
      case 1:
        unint64_t v14 = 0xE700000000000000;
        uint64_t v15 = 0x676E696461656CLL;
        break;
      case 2:
        unint64_t v14 = 0xE800000000000000;
        uint64_t v15 = 0x676E696C69617274;
        break;
      case 3:
        unint64_t v14 = 0xE600000000000000;
        uint64_t v15 = 0x6D6F74746F62;
        break;
      case 4:
        uint64_t v15 = 7105633;
        break;
      default:
        break;
    }
    unint64_t v16 = 0xE300000000000000;
    uint64_t v17 = 7368564;
    switch(*(unsigned char *)(v11 + v13))
    {
      case 1:
        unint64_t v16 = 0xE700000000000000;
        if (v15 == 0x676E696461656CLL) {
          goto LABEL_29;
        }
        goto LABEL_32;
      case 2:
        unint64_t v16 = 0xE800000000000000;
        uint64_t v17 = 0x676E696C69617274;
        goto LABEL_28;
      case 3:
        unint64_t v16 = 0xE600000000000000;
        if (v15 != 0x6D6F74746F62) {
          goto LABEL_32;
        }
        goto LABEL_29;
      case 4:
        if (v15 != 7105633) {
          goto LABEL_32;
        }
        goto LABEL_29;
      default:
LABEL_28:
        if (v15 != v17) {
          goto LABEL_32;
        }
LABEL_29:
        if (v14 == v16) {
          int v18 = 0;
        }
        else {
LABEL_32:
        }
          int v18 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v13 + 2;
        uint64_t v19 = v13;
        if (v13 + 2 >= v4) {
          goto LABEL_55;
        }
        break;
    }
    while (1)
    {
      uint64_t v21 = v19;
      uint64_t v22 = *(unsigned __int8 *)(v11 + v19 + 2);
      uint64_t v23 = *(unsigned __int8 *)(v11 + v19++ + 1);
      unint64_t v24 = 0xE300000000000000;
      uint64_t v25 = 7368564;
      switch(v22)
      {
        case 1:
          unint64_t v24 = 0xE700000000000000;
          uint64_t v25 = 0x676E696461656CLL;
          break;
        case 2:
          unint64_t v24 = 0xE800000000000000;
          uint64_t v25 = 0x676E696C69617274;
          break;
        case 3:
          unint64_t v24 = 0xE600000000000000;
          uint64_t v25 = 0x6D6F74746F62;
          break;
        case 4:
          uint64_t v25 = 7105633;
          break;
        default:
          break;
      }
      unint64_t v26 = 0xE300000000000000;
      uint64_t v27 = 7368564;
      switch(v23)
      {
        case 1:
          unint64_t v26 = 0xE700000000000000;
          if (v25 != 0x676E696461656CLL) {
            goto LABEL_35;
          }
          goto LABEL_49;
        case 2:
          unint64_t v26 = 0xE800000000000000;
          uint64_t v27 = 0x676E696C69617274;
          goto LABEL_48;
        case 3:
          unint64_t v26 = 0xE600000000000000;
          if (v25 != 0x6D6F74746F62) {
            goto LABEL_35;
          }
          goto LABEL_49;
        case 4:
          if (v25 != 7105633) {
            goto LABEL_35;
          }
          goto LABEL_49;
        default:
LABEL_48:
          if (v25 != v27) {
            goto LABEL_35;
          }
LABEL_49:
          if (v24 == v26)
          {
            swift_bridgeObjectRelease_n();
            if (v18)
            {
              uint64_t v10 = v21 + 2;
              uint64_t v4 = v107;
              if (v10 < v13) {
                goto LABEL_189;
              }
              goto LABEL_57;
            }
          }
          else
          {
LABEL_35:
            int v20 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v18 ^ v20))
            {
              uint64_t v10 = v21 + 2;
              uint64_t v4 = v107;
              if ((v18 & 1) == 0) {
                goto LABEL_66;
              }
              goto LABEL_56;
            }
          }
          if (v109 == v19)
          {
            uint64_t v10 = v107;
LABEL_55:
            uint64_t v4 = v107;
            if ((v18 & 1) == 0) {
              goto LABEL_66;
            }
LABEL_56:
            if (v10 < v13) {
              goto LABEL_189;
            }
LABEL_57:
            if (v13 < v10)
            {
              uint64_t v28 = v10 - 1;
              uint64_t v29 = v13;
              while (1)
              {
                if (v29 != v28)
                {
                  if (!v11) {
                    goto LABEL_194;
                  }
                  char v30 = *(unsigned char *)(v11 + v29);
                  *(unsigned char *)(v11 + v29) = *(unsigned char *)(v11 + v28);
                  *(unsigned char *)(v11 + v28) = v30;
                }
                BOOL v72 = ++v29 < v28--;
                if (!v72) {
                  goto LABEL_66;
                }
              }
            }
            goto LABEL_66;
          }
          break;
      }
    }
  }
LABEL_66:
  if (v10 >= v4) {
    goto LABEL_98;
  }
  if (__OFSUB__(v10, v13)) {
    goto LABEL_187;
  }
  if (v10 - v13 >= v106) {
    goto LABEL_98;
  }
  uint64_t v31 = v13 + v106;
  if (__OFADD__(v13, v106)) {
    goto LABEL_190;
  }
  if (v31 >= v4) {
    uint64_t v31 = v4;
  }
  if (v31 >= v13)
  {
    if (v10 == v31) {
      goto LABEL_98;
    }
    uint64_t v32 = (char *)(v11 + v10);
    uint64_t v108 = v13;
    uint64_t v111 = v31;
LABEL_77:
    char v33 = *(unsigned char *)(v11 + v10);
    uint64_t v34 = v32;
    while (1)
    {
      unint64_t v35 = 0xE300000000000000;
      uint64_t v36 = 7368564;
      switch(v33)
      {
        case 1:
          unint64_t v35 = 0xE700000000000000;
          uint64_t v36 = 0x676E696461656CLL;
          break;
        case 2:
          unint64_t v35 = 0xE800000000000000;
          uint64_t v36 = 0x676E696C69617274;
          break;
        case 3:
          unint64_t v35 = 0xE600000000000000;
          uint64_t v36 = 0x6D6F74746F62;
          break;
        case 4:
          uint64_t v36 = 7105633;
          break;
        default:
          break;
      }
      unint64_t v37 = 0xE300000000000000;
      uint64_t v38 = 7368564;
      switch(*(v34 - 1))
      {
        case 1:
          unint64_t v37 = 0xE700000000000000;
          if (v36 == 0x676E696461656CLL) {
            goto LABEL_90;
          }
          goto LABEL_91;
        case 2:
          unint64_t v37 = 0xE800000000000000;
          uint64_t v38 = 0x676E696C69617274;
          goto LABEL_89;
        case 3:
          unint64_t v37 = 0xE600000000000000;
          if (v36 != 0x6D6F74746F62) {
            goto LABEL_91;
          }
          goto LABEL_90;
        case 4:
          if (v36 != 7105633) {
            goto LABEL_91;
          }
          goto LABEL_90;
        default:
LABEL_89:
          if (v36 != v38) {
            goto LABEL_91;
          }
LABEL_90:
          if (v35 == v37)
          {
            swift_bridgeObjectRelease_n();
LABEL_76:
            ++v10;
            ++v32;
            uint64_t v13 = v108;
            if (v10 != v111) {
              goto LABEL_77;
            }
            uint64_t v10 = v111;
LABEL_98:
            if (v10 < v13) {
              goto LABEL_182;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v9 = sub_1C0634CC8(0, *((void *)v9 + 2) + 1, 1, v9);
            }
            unint64_t v41 = *((void *)v9 + 2);
            unint64_t v40 = *((void *)v9 + 3);
            unint64_t v12 = v41 + 1;
            if (v41 >= v40 >> 1) {
              unint64_t v9 = sub_1C0634CC8((char *)(v40 > 1), v41 + 1, 1, v9);
            }
            *((void *)v9 + 2) = v12;
            uint64_t v112 = v9 + 32;
            uint64_t v42 = &v9[16 * v41 + 32];
            *(void *)uint64_t v42 = v13;
            *((void *)v42 + 1) = v10;
            if (v41)
            {
              uint64_t v43 = v9 + 32;
              while (1)
              {
                unint64_t v44 = v12 - 1;
                if (v12 >= 4)
                {
                  uint64_t v49 = &v43[16 * v12];
                  uint64_t v50 = *((void *)v49 - 8);
                  uint64_t v51 = *((void *)v49 - 7);
                  BOOL v55 = __OFSUB__(v51, v50);
                  uint64_t v52 = v51 - v50;
                  if (v55) {
                    goto LABEL_171;
                  }
                  uint64_t v54 = *((void *)v49 - 6);
                  uint64_t v53 = *((void *)v49 - 5);
                  BOOL v55 = __OFSUB__(v53, v54);
                  uint64_t v47 = v53 - v54;
                  char v48 = v55;
                  if (v55) {
                    goto LABEL_172;
                  }
                  unint64_t v56 = v12 - 2;
                  uint64_t v57 = &v43[16 * v12 - 32];
                  uint64_t v59 = *(void *)v57;
                  uint64_t v58 = *((void *)v57 + 1);
                  BOOL v55 = __OFSUB__(v58, v59);
                  uint64_t v60 = v58 - v59;
                  if (v55) {
                    goto LABEL_174;
                  }
                  BOOL v55 = __OFADD__(v47, v60);
                  uint64_t v61 = v47 + v60;
                  if (v55) {
                    goto LABEL_177;
                  }
                  if (v61 >= v52)
                  {
                    uint64_t v79 = &v43[16 * v44];
                    uint64_t v81 = *(void *)v79;
                    uint64_t v80 = *((void *)v79 + 1);
                    BOOL v55 = __OFSUB__(v80, v81);
                    uint64_t v82 = v80 - v81;
                    if (v55) {
                      goto LABEL_181;
                    }
                    BOOL v72 = v47 < v82;
                    goto LABEL_136;
                  }
                }
                else
                {
                  if (v12 != 3)
                  {
                    uint64_t v73 = *((void *)v9 + 4);
                    uint64_t v74 = *((void *)v9 + 5);
                    BOOL v55 = __OFSUB__(v74, v73);
                    uint64_t v66 = v74 - v73;
                    char v67 = v55;
                    goto LABEL_130;
                  }
                  uint64_t v46 = *((void *)v9 + 4);
                  uint64_t v45 = *((void *)v9 + 5);
                  BOOL v55 = __OFSUB__(v45, v46);
                  uint64_t v47 = v45 - v46;
                  char v48 = v55;
                }
                if (v48) {
                  goto LABEL_173;
                }
                unint64_t v56 = v12 - 2;
                uint64_t v62 = &v43[16 * v12 - 32];
                uint64_t v64 = *(void *)v62;
                uint64_t v63 = *((void *)v62 + 1);
                BOOL v65 = __OFSUB__(v63, v64);
                uint64_t v66 = v63 - v64;
                char v67 = v65;
                if (v65) {
                  goto LABEL_176;
                }
                unint64_t v68 = &v43[16 * v44];
                uint64_t v70 = *(void *)v68;
                uint64_t v69 = *((void *)v68 + 1);
                BOOL v55 = __OFSUB__(v69, v70);
                uint64_t v71 = v69 - v70;
                if (v55) {
                  goto LABEL_179;
                }
                if (__OFADD__(v66, v71)) {
                  goto LABEL_180;
                }
                if (v66 + v71 >= v47)
                {
                  BOOL v72 = v47 < v71;
LABEL_136:
                  if (v72) {
                    unint64_t v44 = v56;
                  }
                  goto LABEL_138;
                }
LABEL_130:
                if (v67) {
                  goto LABEL_175;
                }
                uint64_t v75 = &v43[16 * v44];
                uint64_t v77 = *(void *)v75;
                uint64_t v76 = *((void *)v75 + 1);
                BOOL v55 = __OFSUB__(v76, v77);
                uint64_t v78 = v76 - v77;
                if (v55) {
                  goto LABEL_178;
                }
                if (v78 < v66) {
                  goto LABEL_15;
                }
LABEL_138:
                unint64_t v83 = v44 - 1;
                if (v44 - 1 >= v12)
                {
                  __break(1u);
LABEL_168:
                  __break(1u);
LABEL_169:
                  __break(1u);
LABEL_170:
                  __break(1u);
LABEL_171:
                  __break(1u);
LABEL_172:
                  __break(1u);
LABEL_173:
                  __break(1u);
LABEL_174:
                  __break(1u);
LABEL_175:
                  __break(1u);
LABEL_176:
                  __break(1u);
LABEL_177:
                  __break(1u);
LABEL_178:
                  __break(1u);
LABEL_179:
                  __break(1u);
LABEL_180:
                  __break(1u);
LABEL_181:
                  __break(1u);
LABEL_182:
                  __break(1u);
LABEL_183:
                  __break(1u);
LABEL_184:
                  __break(1u);
LABEL_185:
                  __break(1u);
LABEL_186:
                  __break(1u);
LABEL_187:
                  __break(1u);
LABEL_188:
                  __break(1u);
LABEL_189:
                  __break(1u);
LABEL_190:
                  __break(1u);
                  goto LABEL_191;
                }
                uint64_t v84 = v11;
                if (!v11) {
                  goto LABEL_193;
                }
                uint64_t v85 = v10;
                uint64_t v86 = v9;
                uint64_t v87 = v43;
                uint64_t v88 = &v43[16 * v83];
                uint64_t v89 = *(void *)v88;
                uint64_t v90 = &v87[16 * v44];
                uint64_t v91 = *((void *)v90 + 1);
                uint64_t v92 = v84;
                sub_1C0953930((unsigned char *)(v84 + *(void *)v88), (unsigned char *)(v84 + *(void *)v90), v84 + v91, __dst);
                if (v113)
                {
                  uint64_t v94 = v105;
LABEL_149:
                  swift_bridgeObjectRelease();
                  *(void *)(v94 + 16) = 0;
                  return swift_bridgeObjectRelease();
                }
                if (v91 < v89) {
                  goto LABEL_168;
                }
                if (v44 > *((void *)v86 + 2)) {
                  goto LABEL_169;
                }
                *(void *)uint64_t v88 = v89;
                uint64_t v43 = v112;
                *(void *)&v112[16 * v83 + 8] = v91;
                unint64_t v93 = *((void *)v86 + 2);
                if (v44 >= v93) {
                  goto LABEL_170;
                }
                unint64_t v9 = v86;
                unint64_t v12 = v93 - 1;
                memmove(v90, v90 + 16, 16 * (v93 - 1 - v44));
                *((void *)v86 + 2) = v93 - 1;
                uint64_t v11 = v92;
                uint64_t v10 = v85;
                if (v93 <= 2) {
                  goto LABEL_15;
                }
              }
            }
            unint64_t v12 = 1;
LABEL_15:
            uint64_t v4 = v107;
            if (v10 >= v107)
            {
              uint64_t v2 = v113;
              uint64_t v95 = v105;
              goto LABEL_151;
            }
            goto LABEL_16;
          }
LABEL_91:
          char v39 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v39 & 1) == 0) {
            goto LABEL_76;
          }
          if (!v11) {
            goto LABEL_192;
          }
          char v33 = *v34;
          *uint64_t v34 = *(v34 - 1);
          *(v34 - 1) = v33;
          ++v13;
          --v34;
          if (v10 == v13) {
            goto LABEL_76;
          }
          break;
      }
    }
  }
LABEL_191:
  __break(1u);
LABEL_192:
  __break(1u);
LABEL_193:
  __break(1u);
LABEL_194:
  __break(1u);
LABEL_195:
  __break(1u);
LABEL_196:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1BFDF83E8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v16 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = (char *)(*a4 + a3);
    while (1)
    {
      char v8 = *(unsigned char *)(v6 + v4);
      uint64_t v9 = v16;
      uint64_t v10 = v7;
      while (2)
      {
        unint64_t v11 = 0xE300000000000000;
        uint64_t v12 = 7368564;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x676E696461656CLL;
            break;
          case 2:
            unint64_t v11 = 0xE800000000000000;
            uint64_t v12 = 0x676E696C69617274;
            break;
          case 3:
            unint64_t v11 = 0xE600000000000000;
            uint64_t v12 = 0x6D6F74746F62;
            break;
          case 4:
            uint64_t v12 = 7105633;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE300000000000000;
        uint64_t v14 = 7368564;
        switch(*(v10 - 1))
        {
          case 1:
            unint64_t v13 = 0xE700000000000000;
            if (v12 == 0x676E696461656CLL) {
              goto LABEL_19;
            }
            goto LABEL_20;
          case 2:
            unint64_t v13 = 0xE800000000000000;
            if (v12 != 0x676E696C69617274) {
              goto LABEL_20;
            }
            goto LABEL_19;
          case 3:
            unint64_t v13 = 0xE600000000000000;
            uint64_t v14 = 0x6D6F74746F62;
            goto LABEL_18;
          case 4:
            if (v12 != 7105633) {
              goto LABEL_20;
            }
            goto LABEL_19;
          default:
LABEL_18:
            if (v12 != v14) {
              goto LABEL_20;
            }
LABEL_19:
            if (v11 != v13)
            {
LABEL_20:
              char v15 = sub_1C1520A9C();
              swift_bridgeObjectRelease();
              uint64_t result = swift_bridgeObjectRelease();
              if ((v15 & 1) == 0) {
                goto LABEL_5;
              }
              if (!v6)
              {
                __break(1u);
                return result;
              }
              char v8 = *v10;
              *uint64_t v10 = *(v10 - 1);
              *(v10 - 1) = v8;
              ++v9;
              --v10;
              if (v4 == v9) {
                goto LABEL_5;
              }
              continue;
            }
            uint64_t result = swift_bridgeObjectRelease_n();
LABEL_5:
            ++v4;
            ++v7;
            if (v4 == a2) {
              return result;
            }
            break;
        }
        break;
      }
    }
  }
  return result;
}

unint64_t sub_1BFDF85F0()
{
  unint64_t result = qword_1EB85B720;
  if (!qword_1EB85B720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B720);
  }
  return result;
}

uint64_t sub_1BFDF8644()
{
  return sub_1C151EAEC();
}

uint64_t sub_1BFDF8694()
{
  return sub_1C151EB5C();
}

unint64_t sub_1BFDF86F4()
{
  unint64_t result = qword_1EB886CF0;
  if (!qword_1EB886CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB886CF0);
  }
  return result;
}

uint64_t destroy for FormatSourceMapNode()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFDF878C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v5 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4) + 16);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = -v5;
  return result;
}

uint64_t sub_1BFDF87F0(uint64_t a1)
{
  return sub_1BFDF899C(*(void *)(v1 + *(int *)(a1 + 28)));
}

uint64_t sub_1BFDF87FC(uint64_t a1, void *a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = a1 + 32;
    uint64_t v7 = a2 + 4;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    do
    {
      sub_1BFC66384(v6, (uint64_t)&v18);
      uint64_t v9 = v19;
      uint64_t v10 = v20;
      __swift_project_boxed_opaque_existential_1(&v18, v19);
      uint64_t v11 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10) + 16);
      swift_bridgeObjectRelease();
      if (a2[2]
        && (uint64_t v12 = a2[7],
            uint64_t v13 = a2[8],
            __swift_project_boxed_opaque_existential_1(v7, v12),
            uint64_t v14 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13) + 16),
            swift_bridgeObjectRelease(),
            v11 == v14))
      {
        sub_1BFC773DC(&v18, (uint64_t)v17);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1BFFFAC48(0, *(void *)(v8 + 16) + 1, 1);
        }
        uint64_t v8 = v21;
        unint64_t v16 = *(void *)(v21 + 16);
        unint64_t v15 = *(void *)(v21 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_1BFFFAC48(v15 > 1, v16 + 1, 1);
          uint64_t v8 = v21;
        }
        *(void *)(v8 + 16) = v16 + 1;
        sub_1BFC773DC(v17, v8 + 40 * v16 + 32);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
      }
      v6 += 40;
      --v4;
    }
    while (v4);
    return v21;
  }
  return result;
}

uint64_t sub_1BFDF899C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedHeadline(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1BFF01960(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_1BFDF8BA4(v8, (uint64_t)v5, type metadata accessor for FeedHeadline);
      uint64_t v17 = v7;
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1BFF01960(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = sub_1BFDF8CDC((unint64_t *)&unk_1EB873778, 255, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v14);
      sub_1BFDF8BA4((uint64_t)v5, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
      *(void *)(v7 + 16) = v11 + 1;
      sub_1BFC773DC(&v14, v7 + 40 * v11 + 32);
      sub_1C0247540((uint64_t)v5, type metadata accessor for FeedHeadline);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1BFDF8BA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFDF8C0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFDF8C74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFDF8CDC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFDF8D24@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1BFDF8D44(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_1BFDF8D44@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v62 = a3;
  uint64_t v52 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v63 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  BOOL v55 = (char *)&v48 - v7;
  uint64_t v56 = v6;
  uint64_t v57 = v8;
  uint64_t v9 = _s10CodingKeysOMa_291();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v12 = swift_getWitnessTable();
  *(void *)&long long v64 = v9;
  *((void *)&v64 + 1) = WitnessTable;
  uint64_t v53 = v12;
  uint64_t v54 = v11;
  uint64_t v65 = v11;
  uint64_t v66 = v12;
  uint64_t v13 = type metadata accessor for FormatCodingKeysContainer();
  swift_getWitnessTable();
  uint64_t v14 = sub_1C152072C();
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v48 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v17 = v61;
  sub_1C1520EBC();
  long long v18 = v17;
  if (v17)
  {
    uint64_t v19 = a1;
    goto LABEL_17;
  }
  uint64_t v50 = v9;
  uint64_t v51 = v13;
  uint64_t v49 = WitnessTable;
  uint64_t v61 = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v20 = sub_1C1520EAC();
  uint64_t v21 = Dictionary<>.errorOnUnknownKeys.getter(v20);
  swift_bridgeObjectRelease();
  uint64_t v23 = v62;
  uint64_t v22 = (uint64_t)v63;
  uint64_t v24 = v58;
  uint64_t v25 = v59;
  unint64_t v26 = v16;
  uint64_t v19 = a1;
  if ((v21 & 1) == 0)
  {
LABEL_13:
    sub_1BFE240A8();
    long long v64 = 0uLL;
    LOBYTE(v65) = 0;
    unint64_t v41 = v61;
    sub_1C15206EC();
    long long v18 = v41;
    if (!v41)
    {
      uint64_t v61 = v67;
      long long v64 = xmmword_1C153AB20;
      LOBYTE(v65) = 0;
      uint64_t v42 = v55;
      uint64_t v43 = v56;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v25);
      *(void *)&long long v64 = v61;
      (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v22, v42, v43);
      sub_1BFDF92D0(&v64, v22, v43, v23);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v25);
LABEL_17:
    sub_1C0038728(v19, (uint64_t)v18);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  uint64_t v27 = sub_1C152070C();
  uint64_t v28 = v51;
  if (!MEMORY[0x1C18C6870](v27, v51))
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v48 = v19;
  uint64_t v29 = 0;
  char v30 = (char *)(v27 + 48);
  uint64_t v60 = v26;
  while (1)
  {
    char v31 = sub_1C151ECDC();
    uint64_t result = sub_1C151EC7C();
    if ((v31 & 1) == 0) {
      break;
    }
    uint64_t v33 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      goto LABEL_20;
    }
    uint64_t v34 = v27;
    uint64_t v36 = *((void *)v30 - 2);
    uint64_t v35 = *((void *)v30 - 1);
    char v37 = *v30;
    *(void *)&long long v64 = v36;
    *((void *)&v64 + 1) = v35;
    LOBYTE(v65) = v37;
    sub_1BFE94AB4(v36, v35, v37);
    uint64_t v38 = sub_1C0D990EC(v28);
    if (v39)
    {
      uint64_t v44 = v39;
      uint64_t v45 = v38;
      swift_bridgeObjectRelease();
      uint64_t v46 = sub_1C0D98F50(v50, v49, v54, v53);
      sub_1C02570B4();
      long long v18 = (void *)swift_allocError();
      *(void *)uint64_t v47 = v45;
      *(void *)(v47 + 8) = v44;
      *(void *)(v47 + 16) = v46;
      *(_OWORD *)(v47 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v64, *((uint64_t *)&v64 + 1), v65);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v59);
      uint64_t v19 = v48;
      goto LABEL_17;
    }
    sub_1BFE94AD4(v36, v35, v37);
    uint64_t v27 = v34;
    ++v29;
    v30 += 24;
    BOOL v40 = v33 == MEMORY[0x1C18C6870](v34, v28);
    uint64_t v23 = v62;
    uint64_t v22 = (uint64_t)v63;
    unint64_t v26 = v60;
    if (v40)
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = v48;
      uint64_t v24 = v58;
      uint64_t v25 = v59;
      goto LABEL_13;
    }
  }
  uint64_t result = sub_1C152016C();
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t _s10CodingKeysOMa_291()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFDF92D0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = *a1;
  uint64_t v6 = (char *)a4 + *(int *)(type metadata accessor for FormatSwitchValue.CaseValue() + 36);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  return v7(v6, a2, a3);
}

uint64_t type metadata accessor for FormatSwitchValue.CaseValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFDF9374@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FormatOption();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v8, sel_scale);
  uint64_t v10 = v9;

  uint64_t v11 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
  swift_beginAccess();
  uint64_t v12 = *v11;
  int64_t v13 = *(void *)(*v11 + 16);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (v13)
  {
    uint64_t v27 = a2;
    uint64_t v28 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF9524C(0, v13, 0);
    uint64_t v14 = v28;
    uint64_t v15 = *(unsigned __int8 *)(v5 + 80);
    uint64_t v26 = v12;
    uint64_t v16 = v12 + ((v15 + 32) & ~v15);
    uint64_t v17 = *(void *)(v5 + 72);
    do
    {
      sub_1C019FFF0(v16, (uint64_t)v7);
      uint64_t v18 = swift_allocBox();
      sub_1C00AB068((uint64_t)v7, v19);
      uint64_t v28 = v14;
      unint64_t v21 = *(void *)(v14 + 16);
      unint64_t v20 = *(void *)(v14 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1BFF9524C(v20 > 1, v21 + 1, 1);
        uint64_t v14 = v28;
      }
      *(void *)(v14 + 16) = v21 + 1;
      *(void *)(v14 + 8 * v21 + 32) = v18 | 0x4000000000000000;
      v16 += v17;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    a2 = v27;
  }
  type metadata accessor for FormatVariableCollection();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = MEMORY[0x1E4FBC868];
  type metadata accessor for FormatOptionCollection();
  swift_allocObject();
  uint64_t v23 = sub_1BFEF13D8(v14, v22);
  swift_bridgeObjectRelease();
  type metadata accessor for FormatContextLayoutOptions();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  *(void *)(result + 24) = v10;
  *(void *)(result + 32) = 0x3FF0000000000000;
  *(void *)(result + 40) = v23;
  uint64_t v25 = MEMORY[0x1E4FBC870];
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = v25;
  *a2 = result;
  return result;
}

uint64_t sub_1BFDF95F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  char v7 = *(unsigned char *)(*(void *)a1 + 16);
  uint64_t v8 = *(void *)(*(void *)a1 + 24);
  uint64_t v9 = *(void *)(*(void *)a1 + 32);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a3 + 16);
  type metadata accessor for FormatContextLayoutOptions();
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v7;
  *(void *)(v11 + 24) = v8;
  *(void *)(v11 + 32) = v9;
  *(void *)(v11 + 40) = a2;
  *(void *)(v11 + 48) = 0;
  *(void *)(v11 + 56) = v10;
  *a4 = v11;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFDF9690@<X0>(char a1@<W0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  sub_1C15176EC();
  uint64_t v9 = v8;
  sub_1C15174BC();
  uint64_t v11 = v10;
  type metadata accessor for FormatContextLayoutOptions();
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v9;
  *(void *)(v12 + 32) = v11;
  *(void *)(v12 + 40) = a2;
  *(void *)(v12 + 48) = 0;
  *(void *)(v12 + 56) = a3;
  *a4 = v12;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFDF9734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  char v9 = *(unsigned char *)(a1 + *(int *)(v8 + 44));
  sub_1C15176EC();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(a1 + *(int *)(v8 + 32));
  type metadata accessor for FormatContextLayoutOptions();
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = v9;
  *(void *)(v13 + 24) = v11;
  *(void *)(v13 + 32) = v12;
  *(void *)(v13 + 40) = a2;
  *(void *)(v13 + 48) = 0;
  *(void *)(v13 + 56) = a3;
  *a4 = v13;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFDF97E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for GroupLayoutContext() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BFDF9734(v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), a1);
}

uint64_t sub_1BFDF987C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char v5 = *(unsigned char *)(*(void *)a1 + 16);
  uint64_t v6 = *(void *)(*(void *)a1 + 24);
  uint64_t v7 = *(void *)(*(void *)a1 + 32);
  uint64_t v8 = *(void *)(*(void *)a1 + 40);
  type metadata accessor for FormatContextLayoutOptions();
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = v5;
  *(void *)(v9 + 24) = v6;
  *(void *)(v9 + 32) = v7;
  *(void *)(v9 + 40) = v8;
  *(void *)(v9 + 48) = 0;
  *(void *)(v9 + 56) = a2;
  *a3 = v9;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFDF9904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  char v7 = *(unsigned char *)(*(void *)a1 + 16);
  uint64_t v8 = *(void *)(*(void *)a1 + 24);
  uint64_t v9 = *(void *)(*(void *)a1 + 32);
  type metadata accessor for FormatContextLayoutOptions();
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = v7;
  *(void *)(v10 + 24) = v8;
  *(void *)(v10 + 32) = v9;
  *(void *)(v10 + 40) = a2;
  *(void *)(v10 + 48) = 0;
  *(void *)(v10 + 56) = a3;
  *a4 = v10;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FormatContextLayoutOptions()
{
  return self;
}

uint64_t sub_1BFDF99B0(char a1)
{
  if (a1) {
    return 1885433183;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t FormatCompilerOptions.Newsroom.Environment.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C086451C();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1C08643F0();
  uint64_t v14 = v13;
  uint64_t v15 = sub_1C085F050(&qword_1EB891F60, (void (*)(uint64_t))sub_1C08643F0);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatCompilerOptions.Newsroom.Environment, v16, v11, (uint64_t)&type metadata for FormatCompilerOptions.Newsroom.Environment, v14, (uint64_t)&type metadata for FormatVersions.JazzkonC, v12, (uint64_t)v8, v15, (uint64_t)&off_1F1C39B68);
  uint64_t v17 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1C151928C();
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EB93CAB0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v5, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06B8C68(v10, v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BFEFEB68((uint64_t)v8, (uint64_t (*)(void))sub_1C086451C);
}

uint64_t FormatTypeDefinition.Enum.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C08C3EFC();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1C08C3DD0();
  uint64_t v13 = v12;
  uint64_t v14 = sub_1C085F050(&qword_1EB891F20, (void (*)(uint64_t))sub_1C08C3DD0);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatTypeDefinition.Enum, v15, v10, (uint64_t)&type metadata for FormatTypeDefinition.Enum, v13, (uint64_t)&type metadata for FormatVersions.JazzkonC, v11, (uint64_t)v8, v14, (uint64_t)&off_1F1C39B68);
  uint64_t v16 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1C151928C();
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EB93CAB0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v5, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06B92BC(v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BFEFEB68((uint64_t)v8, (uint64_t (*)(void))sub_1C08C3EFC);
}

unint64_t sub_1BFDF9EE0()
{
  unint64_t result = qword_1EB85C418;
  if (!qword_1EB85C418)
  {
    sub_1BFE9DEBC(255, &qword_1EB879E60, (uint64_t)&type metadata for FormatTypeDefinition.Case, MEMORY[0x1E4FBB320]);
    sub_1C0076B84();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C418);
  }
  return result;
}

uint64_t FormatSwitchNodeDefault.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = *v1;
  uint64_t v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C086D7A4();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1C086D8CC();
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C085F050(&qword_1EB8920B0, (void (*)(uint64_t))sub_1C086D8CC);
  sub_1BFEFBD78(v6, v18, v13, v6, v16, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v12, v17, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v19 = v4[2];
  uint64_t v20 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1C151928C();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB93CAB0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v9, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  char v23 = sub_1C0833320((uint64_t)v9, 0, 0, 0, (uint64_t)sub_1C01B158C, 0);
  if (!v3 && (v23 & 1) != 0)
  {
    v25[0] = 0;
    v25[1] = 0;
    char v26 = 0;
    uint64_t v27 = v19;
    sub_1C086D838();
    sub_1C085F050(&qword_1EB86E690, (void (*)(uint64_t))sub_1C086D838);
    sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB863300, (uint64_t)&type metadata for FormatSourceMapNode, MEMORY[0x1E4FBB320]);
    sub_1BFE407E0();
    sub_1C1520BAC();
  }
  sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BFEFEB68((uint64_t)v12, (uint64_t (*)(void))sub_1C086D7A4);
}

uint64_t sub_1BFDFA2E8()
{
  if (*v0) {
    return 1885433183;
  }
  else {
    return 0x7365736163;
  }
}

uint64_t sub_1BFDFA318()
{
  if (*v0) {
    return 1885433183;
  }
  else {
    return 0x726F7463656C6573;
  }
}

uint64_t sub_1BFDFA34C()
{
  if (*v0) {
    return 1885433183;
  }
  else {
    return 0x6E6572646C696863;
  }
}

BOOL sub_1BFDFA380@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1BFDFA3C0();
  *a1 = result;
  return result;
}

BOOL sub_1BFDFA3C0()
{
  uint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

NewsFeed::FormatImageResize_optional __swiftcall FormatImageResize.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

NewsFeed::FeedGroupPaidVisibility_optional __swiftcall FeedGroupPaidVisibility.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

NewsFeed::FormatItemTrait_optional __swiftcall FormatItemTrait.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C1520C8C();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 32;
  switch(v3)
  {
    case 0:
      goto LABEL_34;
    case 1:
      char v5 = 1;
      goto LABEL_34;
    case 2:
      char v5 = 2;
      goto LABEL_34;
    case 3:
      char v5 = 3;
      goto LABEL_34;
    case 4:
      char v5 = 4;
      goto LABEL_34;
    case 5:
      char v5 = 5;
      goto LABEL_34;
    case 6:
      char v5 = 6;
      goto LABEL_34;
    case 7:
      char v5 = 7;
      goto LABEL_34;
    case 8:
      char v5 = 8;
      goto LABEL_34;
    case 9:
      char v5 = 9;
      goto LABEL_34;
    case 10:
      char v5 = 10;
      goto LABEL_34;
    case 11:
      char v5 = 11;
      goto LABEL_34;
    case 12:
      char v5 = 12;
      goto LABEL_34;
    case 13:
      char v5 = 13;
      goto LABEL_34;
    case 14:
      char v5 = 14;
      goto LABEL_34;
    case 15:
      char v5 = 15;
      goto LABEL_34;
    case 16:
      char v5 = 16;
      goto LABEL_34;
    case 17:
      char v5 = 17;
      goto LABEL_34;
    case 18:
      char v5 = 18;
      goto LABEL_34;
    case 19:
      char v5 = 19;
      goto LABEL_34;
    case 20:
      char v5 = 20;
      goto LABEL_34;
    case 21:
      char v5 = 21;
      goto LABEL_34;
    case 22:
      char v5 = 22;
      goto LABEL_34;
    case 23:
      char v5 = 23;
      goto LABEL_34;
    case 24:
      char v5 = 24;
      goto LABEL_34;
    case 25:
      char v5 = 25;
      goto LABEL_34;
    case 26:
      char v5 = 26;
      goto LABEL_34;
    case 27:
      char v5 = 27;
      goto LABEL_34;
    case 28:
      char v5 = 28;
      goto LABEL_34;
    case 29:
      char v5 = 29;
      goto LABEL_34;
    case 30:
      char v5 = 30;
      goto LABEL_34;
    case 31:
      char v5 = 31;
LABEL_34:
      char v6 = v5;
      break;
    case 32:
      break;
    case 33:
      char v6 = 33;
      break;
    case 34:
      char v6 = 34;
      break;
    case 35:
      char v6 = 35;
      break;
    case 36:
      char v6 = 36;
      break;
    case 37:
      char v6 = 37;
      break;
    case 38:
      char v6 = 38;
      break;
    case 39:
      char v6 = 39;
      break;
    case 40:
      char v6 = 40;
      break;
    case 41:
      char v6 = 41;
      break;
    case 42:
      char v6 = 42;
      break;
    case 43:
      char v6 = 43;
      break;
    case 44:
      char v6 = 44;
      break;
    case 45:
      char v6 = 45;
      break;
    case 46:
      char v6 = 46;
      break;
    case 47:
      char v6 = 47;
      break;
    case 48:
      char v6 = 48;
      break;
    case 49:
      char v6 = 49;
      break;
    default:
      char v6 = 50;
      break;
  }
  char *v2 = v6;
  return result;
}

NewsFeed::FormatFontScalingStyle_optional __swiftcall FormatFontScalingStyle.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 12;
  if (v3 < 0xC) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

NewsFeed::FormatAnchor_optional __swiftcall FormatAnchor.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

NewsFeed::FormatFontWeight_optional __swiftcall FormatFontWeight.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 9;
  if (v3 < 9) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

NewsFeed::FormatColorComponent_optional __swiftcall FormatColorComponent.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

NewsFeed::FormatSystemColor_optional __swiftcall FormatSystemColor.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C1520C8C();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 23;
  switch(v3)
  {
    case 0:
      goto LABEL_25;
    case 1:
      char v5 = 1;
      goto LABEL_25;
    case 2:
      char v5 = 2;
      goto LABEL_25;
    case 3:
      char v5 = 3;
      goto LABEL_25;
    case 4:
      char v5 = 4;
      goto LABEL_25;
    case 5:
      char v5 = 5;
      goto LABEL_25;
    case 6:
      char v5 = 6;
      goto LABEL_25;
    case 7:
      char v5 = 7;
      goto LABEL_25;
    case 8:
      char v5 = 8;
      goto LABEL_25;
    case 9:
      char v5 = 9;
      goto LABEL_25;
    case 10:
      char v5 = 10;
      goto LABEL_25;
    case 11:
      char v5 = 11;
      goto LABEL_25;
    case 12:
      char v5 = 12;
      goto LABEL_25;
    case 13:
      char v5 = 13;
      goto LABEL_25;
    case 14:
      char v5 = 14;
      goto LABEL_25;
    case 15:
      char v5 = 15;
      goto LABEL_25;
    case 16:
      char v5 = 16;
      goto LABEL_25;
    case 17:
      char v5 = 17;
      goto LABEL_25;
    case 18:
      char v5 = 18;
      goto LABEL_25;
    case 19:
      char v5 = 19;
      goto LABEL_25;
    case 20:
      char v5 = 20;
      goto LABEL_25;
    case 21:
      char v5 = 21;
      goto LABEL_25;
    case 22:
      char v5 = 22;
LABEL_25:
      char v6 = v5;
      break;
    case 23:
      break;
    case 24:
      char v6 = 24;
      break;
    case 25:
      char v6 = 25;
      break;
    case 26:
      char v6 = 26;
      break;
    case 27:
      char v6 = 27;
      break;
    case 28:
      char v6 = 28;
      break;
    case 29:
      char v6 = 29;
      break;
    case 30:
      char v6 = 30;
      break;
    case 31:
      char v6 = 31;
      break;
    case 32:
      char v6 = 32;
      break;
    case 33:
      char v6 = 33;
      break;
    case 34:
      char v6 = 34;
      break;
    case 35:
      char v6 = 35;
      break;
    case 36:
      char v6 = 36;
      break;
    case 37:
      char v6 = 37;
      break;
    case 38:
      char v6 = 38;
      break;
    case 39:
      char v6 = 39;
      break;
    case 40:
      char v6 = 40;
      break;
    default:
      char v6 = 41;
      break;
  }
  char *v2 = v6;
  return result;
}

uint64_t sub_1BFDFAA10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFDFAA3C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFDFAA3C(void *a1)
{
  sub_1C0908CDC(0, (unint64_t *)&qword_1EB884858, (void (*)(void))sub_1C00795B8, (void (*)(void))sub_1BFC3A24C);
  uint64_t v72 = v2;
  uint64_t v67 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  *(void *)&long long v70 = (char *)&v59 - v3;
  sub_1C0908CDC(0, &qword_1EB87C750, (void (*)(void))sub_1C007F424, (void (*)(void))sub_1C007F478);
  uint64_t v68 = v4;
  uint64_t v66 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v69 = (char *)&v59 - v5;
  sub_1C08EB72C(0, (unint64_t *)&qword_1EB87C780);
  uint64_t v7 = v6;
  uint64_t v71 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v59 - v8;
  sub_1C08EB77C();
  uint64_t v11 = v10;
  uint64_t v73 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08C60F8();
  sub_1C085F050(&qword_1EB891D30, (void (*)(uint64_t))sub_1C08C60F8);
  uint64_t v15 = (uint64_t)v74;
  sub_1C1520EBC();
  uint64_t v16 = (void *)v15;
  if (v15)
  {
LABEL_14:
    sub_1C0038728(a1, (uint64_t)v16);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  *(void *)&long long v65 = v9;
  uint64_t v17 = v72;
  uint64_t v18 = a1[3];
  uint64_t v74 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  uint64_t v19 = sub_1C1520EAC();
  LOBYTE(v18) = Dictionary<>.errorOnUnknownKeys.getter(v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = v73;
  if (v18)
  {
    uint64_t v21 = sub_1C152070C();
    uint64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      char v23 = (unsigned char *)(v21 + 48);
      while (*v23 != 1)
      {
        v23 += 24;
        if (!--v22) {
          goto LABEL_7;
        }
      }
      uint64_t v28 = v20;
      uint64_t v30 = *((void *)v23 - 2);
      uint64_t v29 = *((void *)v23 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v31 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v31);
      sub_1C08C617C();
      sub_1BFDFB634();
      sub_1C08C61D0();
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
      uint64_t v32 = sub_1C085FB14((uint64_t)&unk_1F1B6A450);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v16 = (void *)swift_allocError();
      *(void *)uint64_t v33 = v30;
      *(void *)(v33 + 8) = v29;
      *(void *)(v33 + 16) = v32;
      *(_OWORD *)(v33 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v30, v29, 1);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v11);
      a1 = v74;
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = sub_1C07F0DDC((uint64_t)v13, 0, 0, 0, (void (*)(void, __n128))sub_1C08EB77C);
  uint64_t v26 = v25;
  long long v79 = xmmword_1C153AB20;
  char v80 = 0;
  uint64_t v27 = sub_1C152069C();
  uint64_t v64 = v34;
  uint64_t v61 = v27;
  uint64_t v62 = v24;
  long long v63 = xmmword_1C1557FA0;
  long long v79 = xmmword_1C1557FA0;
  char v80 = 0;
  char v35 = sub_1C152071C();
  if (v35)
  {
    uint64_t v60 = v26;
    long long v77 = v63;
    char v78 = 0;
    sub_1C08EB810();
    uint64_t v36 = v65;
    uint64_t v37 = v7;
    sub_1C15206EC();
    uint64_t v38 = v17;
    *(void *)&long long v63 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v36, v37);
    uint64_t v26 = v60;
  }
  else
  {
    *(void *)&long long v63 = MEMORY[0x1E4FBC860];
    uint64_t v38 = v17;
  }
  long long v79 = xmmword_1C1557FB0;
  char v80 = 0;
  uint64_t v39 = sub_1C152060C();
  uint64_t v42 = v41;
  uint64_t v72 = v39;
  long long v79 = xmmword_1C1557FD0;
  char v80 = 0;
  uint64_t v60 = sub_1C152060C();
  uint64_t v71 = v43;
  long long v65 = xmmword_1C1557FC0;
  long long v79 = xmmword_1C1557FC0;
  char v80 = 0;
  if (sub_1C152071C())
  {
    long long v77 = v65;
    char v78 = 0;
    sub_1BFE1CFFC();
    sub_1C15206EC();
    unint64_t v44 = v75;
  }
  else
  {
    unint64_t v44 = 0xB000000000000000;
  }
  *(void *)&long long v65 = v44;
  long long v59 = xmmword_1C1557FE0;
  long long v79 = xmmword_1C1557FE0;
  char v80 = 0;
  if (sub_1C152071C())
  {
    long long v77 = v59;
    char v78 = 0;
    sub_1C08B07C8();
    uint64_t v45 = v68;
    sub_1C15206EC();
    *(void *)&long long v59 = v42;
    uint64_t v46 = v69;
    uint64_t v47 = sub_1C1517E5C();
    uint64_t v48 = v45;
    uint64_t v49 = v47;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v46, v48);
  }
  else
  {
    *(void *)&long long v59 = v42;
    uint64_t v49 = MEMORY[0x1E4FBC860];
  }
  long long v79 = xmmword_1C1557FF0;
  char v80 = 0;
  sub_1BFCAB4C0();
  uint64_t v50 = v70;
  sub_1C15206EC();
  uint64_t v51 = v38;
  uint64_t v52 = sub_1C1517E5C();
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v50, v51);
  long long v70 = xmmword_1C1558010;
  long long v79 = xmmword_1C1558010;
  char v80 = 0;
  if (sub_1C152071C())
  {
    long long v77 = v70;
    char v78 = 0;
    sub_1C15206EC();
    uint64_t v53 = v49;
    uint64_t v54 = v26;
    char v55 = v75;
  }
  else
  {
    char v55 = 0;
    uint64_t v53 = v49;
    uint64_t v54 = v26;
  }
  uint64_t v56 = v59;
  long long v70 = xmmword_1C1558020;
  long long v79 = xmmword_1C1558020;
  char v80 = 0;
  if (sub_1C152071C())
  {
    long long v77 = v70;
    char v78 = 0;
    sub_1BFFC82FC();
    sub_1C15206EC();
    long long v57 = v75;
    char v58 = v76;
  }
  else
  {
    char v58 = 0;
    long long v57 = 0uLL;
  }
  *(void *)&long long v77 = v65;
  long long v79 = v57;
  char v80 = v58;
  type metadata accessor for FormatVOverlayNode();
  swift_allocObject();
  uint64_t KeyPath = sub_1C0E5AFCC(v62, v54, v61, v64, v63, v72, v56, v60, v71, (uint64_t *)&v77, v53, v52, v55, (uint64_t *)&v79);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v13, v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
  return KeyPath;
}

unint64_t sub_1BFDFB634()
{
  unint64_t result = qword_1EB888860;
  if (!qword_1EB888860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888860);
  }
  return result;
}

void sub_1BFDFB688()
{
  if (!qword_1EB87C780)
  {
    unint64_t v0 = sub_1C15181BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87C780);
    }
  }
}

uint64_t sub_1BFDFB6F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBorder.init(from:)(a1, a2);
}

uint64_t FormatBorder.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  sub_1C08EB72C(0, &qword_1EB884F80);
  uint64_t v4 = v3;
  uint64_t v38 = *((void *)v3 - 1);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v34 - v5;
  sub_1C086B08C();
  uint64_t v8 = v7;
  uint64_t v40 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C086B120();
  sub_1C085F050(&qword_1EB8924B0, (void (*)(uint64_t))sub_1C086B120);
  uint64_t v11 = v41;
  sub_1C1520EBC();
  uint64_t v12 = v11;
  if (v11)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v12);
    swift_willThrow();

    uint64_t v27 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  uint64_t v41 = v4;
  uint64_t v13 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v14 = sub_1C1520EAC();
  char v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  uint64_t v16 = v39;
  if (v15)
  {
    uint64_t v17 = sub_1C152070C();
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = (unsigned char *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18) {
          goto LABEL_7;
        }
      }
      uint64_t v21 = *((void *)v19 - 2);
      uint64_t v22 = *((void *)v19 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v23 = swift_bridgeObjectRelease();
      uint64_t v24 = v8;
      MEMORY[0x1F4188790](v23);
      *((void *)&v34 - 4) = &_s10CodingKeysON_221;
      *((void *)&v34 - 3) = sub_1C086B1A4();
      *((void *)&v34 - 2) = sub_1BFDFBE40();
      *((void *)&v34 - 1) = sub_1C086B1F8();
      swift_getKeyPath();
      swift_retain();
      uint64_t v25 = sub_1C085FB14((uint64_t)&unk_1F1B69568);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v12 = (void *)swift_allocError();
      *(void *)uint64_t v26 = v21;
      *(void *)(v26 + 8) = v22;
      *(void *)(v26 + 16) = v25;
      *(_OWORD *)(v26 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v21, v22, 1);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v24);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = sub_1C07F0F5C((uint64_t)v10);
  long long v44 = xmmword_1C153AB20;
  char v45 = 0;
  sub_1BFE113DC();
  sub_1C15206EC();
  uint64_t v37 = v20;
  uint64_t v29 = v42;
  long long v44 = xmmword_1C1557FA0;
  char v45 = 0;
  sub_1BFDFBE94();
  sub_1C15206EC();
  uint64_t v36 = v29;
  uint64_t v30 = v42;
  long long v35 = xmmword_1C1557FB0;
  long long v44 = xmmword_1C1557FB0;
  char v45 = 0;
  if (sub_1C152071C())
  {
    long long v42 = v35;
    char v43 = 0;
    sub_1BFDFBEE8();
    sub_1C15206EC();
    int v46 = v47;
  }
  else
  {
    int v46 = 1;
  }
  long long v35 = xmmword_1C1557FD0;
  long long v44 = xmmword_1C1557FD0;
  char v45 = 0;
  if (sub_1C152071C())
  {
    long long v42 = v35;
    char v43 = 0;
    sub_1BFDFD194();
    sub_1C15206EC();
    LODWORD(v35) = v47;
  }
  else
  {
    LODWORD(v35) = 0;
  }
  long long v34 = xmmword_1C1557FC0;
  long long v44 = xmmword_1C1557FC0;
  char v45 = 0;
  if (sub_1C152071C())
  {
    long long v42 = v34;
    char v43 = 0;
    sub_1C086B24C();
    uint64_t v31 = v41;
    sub_1C15206EC();
    uint64_t v32 = sub_1C1517E5C();
    (*(void (**)(char *, void *))(v38 + 8))(v6, v31);
  }
  else
  {
    uint64_t v32 = MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v8);
  uint64_t v33 = v36;
  *(void *)uint64_t v16 = v37;
  *(void *)(v16 + 8) = v33;
  *(void *)(v16 + 16) = v30;
  *(unsigned char *)(v16 + 24) = v46;
  *(unsigned char *)(v16 + 25) = v35;
  *(void *)(v16 + 32) = v32;
  uint64_t v27 = (uint64_t)v13;
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

unint64_t sub_1BFDFBE40()
{
  unint64_t result = qword_1EB887008;
  if (!qword_1EB887008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887008);
  }
  return result;
}

unint64_t sub_1BFDFBE94()
{
  unint64_t result = qword_1EB873C70;
  if (!qword_1EB873C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB873C70);
  }
  return result;
}

unint64_t sub_1BFDFBEE8()
{
  unint64_t result = qword_1EB87BF70;
  if (!qword_1EB87BF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87BF70);
  }
  return result;
}

unint64_t sub_1BFDFBF3C()
{
  unint64_t result = qword_1EB87A008;
  if (!qword_1EB87A008)
  {
    sub_1BFEFF3E8(255, (unint64_t *)&qword_1EB87A000, (uint64_t (*)(void))sub_1BFDFD140, (uint64_t)&type metadata for FormatBorderEdge, MEMORY[0x1E4FBB510]);
    sub_1C007F27C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87A008);
  }
  return result;
}

uint64_t sub_1BFDFBFE4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t v2 = sub_1C1520E0C();
    uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
    unint64_t v4 = v2 & ~v3;
    if ((*(void *)(a1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
    {
      uint64_t v5 = ~v3;
      while (2)
      {
        switch(*(unsigned char *)(*(void *)(a1 + 48) + v4))
        {
          case 4:
            swift_bridgeObjectRelease();
            goto LABEL_8;
          default:
            char v6 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            if (v6) {
              goto LABEL_8;
            }
            unint64_t v4 = (v4 + 1) & v5;
            if (((*(void *)(a1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
  uint64_t v7 = sub_1BFDFC8B0((uint64_t)&unk_1F1B65C10);
  char v8 = sub_1BFDF73D8(a1, v7);
  swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_8:
    return sub_1C00B7DF8((uint64_t)&unk_1F1B65C38);
  }
  else
  {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1BFDFC1AC(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  a2();
  uint64_t result = sub_1C151EFFC();
  uint64_t v11 = result;
  if (v6)
  {
    char v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v9 = *v8++;
      a4(&v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

uint64_t sub_1BFDFC22C(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_1C1520DBC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1C1520E0C();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_1BFDFC554(a2, v7, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_24;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xE300000000000000;
    uint64_t v10 = 7368564;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v9 = 0xE700000000000000;
        uint64_t v10 = 0x676E696461656CLL;
        break;
      case 2:
        unint64_t v9 = 0xE800000000000000;
        uint64_t v10 = 0x676E696C69617274;
        break;
      case 3:
        unint64_t v9 = 0xE600000000000000;
        uint64_t v10 = 0x6D6F74746F62;
        break;
      case 4:
        uint64_t v10 = 7105633;
        break;
      default:
        break;
    }
    unint64_t v11 = 0xE300000000000000;
    uint64_t v12 = 7368564;
    switch((char)a2)
    {
      case 1:
        unint64_t v11 = 0xE700000000000000;
        if (v10 == 0x676E696461656CLL) {
          goto LABEL_15;
        }
        goto LABEL_16;
      case 2:
        unint64_t v11 = 0xE800000000000000;
        if (v10 != 0x676E696C69617274) {
          goto LABEL_16;
        }
        goto LABEL_15;
      case 3:
        unint64_t v11 = 0xE600000000000000;
        uint64_t v12 = 0x6D6F74746F62;
        goto LABEL_14;
      case 4:
        if (v10 != 7105633) {
          goto LABEL_16;
        }
        goto LABEL_15;
      default:
LABEL_14:
        if (v10 != v12) {
          goto LABEL_16;
        }
LABEL_15:
        if (v9 != v11)
        {
LABEL_16:
          char v13 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v13) {
            goto LABEL_23;
          }
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_21;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_23:
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_24:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_1BFDFC554(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C02BB5E8();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_1C02C6E30(&qword_1EB87A350, (void (*)(void))sub_1BFDFD140);
        goto LABEL_28;
      }
      sub_1C02C8440();
    }
    uint64_t v8 = *v3;
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C1520E0C();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE300000000000000;
        uint64_t v12 = 7368564;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x676E696461656CLL;
            break;
          case 2:
            unint64_t v11 = 0xE800000000000000;
            uint64_t v12 = 0x676E696C69617274;
            break;
          case 3:
            unint64_t v11 = 0xE600000000000000;
            uint64_t v12 = 0x6D6F74746F62;
            break;
          case 4:
            uint64_t v12 = 7105633;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE300000000000000;
        uint64_t v14 = 7368564;
        switch(v5)
        {
          case 1:
            unint64_t v13 = 0xE700000000000000;
            if (v12 == 0x676E696461656CLL) {
              goto LABEL_22;
            }
            goto LABEL_23;
          case 2:
            unint64_t v13 = 0xE800000000000000;
            uint64_t v14 = 0x676E696C69617274;
            goto LABEL_21;
          case 3:
            unint64_t v13 = 0xE600000000000000;
            if (v12 != 0x6D6F74746F62) {
              goto LABEL_23;
            }
            goto LABEL_22;
          case 4:
            if (v12 != 7105633) {
              goto LABEL_23;
            }
            goto LABEL_22;
          default:
LABEL_21:
            if (v12 != v14) {
              goto LABEL_23;
            }
LABEL_22:
            if (v11 == v13) {
              goto LABEL_31;
            }
LABEL_23:
            char v15 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_32;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_28:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_31:
    swift_bridgeObjectRelease_n();
LABEL_32:
    uint64_t result = sub_1C1520CEC();
    __break(1u);
  }
  else
  {
    *(void *)(v16 + 16) = v19;
  }
  return result;
}

uint64_t sub_1BFDFC8B0(uint64_t a1)
{
  return sub_1BFDFC1AC(a1, (void (*)(void))sub_1BFDFD140, (uint64_t)&type metadata for FormatBorderEdge, (void (*)(char *, void))sub_1BFDFC22C);
}

uint64_t sub_1BFDFC8E4(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_1C1520DBC();
  FormatOptionType.rawValue.getter();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1C1520E0C();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_1BFDFCCF8(a2, v7, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_45;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xE700000000000000;
    uint64_t v10 = 0x6E61656C6F6F62;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v9 = 0xE400000000000000;
        uint64_t v10 = 1702125924;
        break;
      case 2:
        unint64_t v9 = 0xE400000000000000;
        uint64_t v10 = 1836412517;
        break;
      case 3:
        unint64_t v9 = 0xE500000000000000;
        uint64_t v10 = 0x74616F6C66;
        break;
      case 4:
        uint64_t v10 = 0x72656765746E69;
        break;
      case 5:
        unint64_t v9 = 0xE600000000000000;
        uint64_t v10 = 0x676E69727473;
        break;
      case 6:
        unint64_t v9 = 0xE300000000000000;
        uint64_t v10 = 7107189;
        break;
      case 7:
        unint64_t v9 = 0xE500000000000000;
        uint64_t v10 = 0x726F6C6F63;
        break;
      case 8:
        unint64_t v9 = 0xE500000000000000;
        uint64_t v10 = 0x6567616D69;
        break;
      case 9:
        unint64_t v9 = 0xE500000000000000;
        uint64_t v10 = 0x6F65646976;
        break;
      case 0xA:
        unint64_t v9 = 0xE400000000000000;
        uint64_t v10 = 1953394534;
        break;
      case 0xB:
        uint64_t v10 = 0x616C506F65646976;
        unint64_t v9 = 0xEB00000000726579;
        break;
      default:
        break;
    }
    unint64_t v11 = 0xE700000000000000;
    uint64_t v12 = 0x6E61656C6F6F62;
    switch((char)a2)
    {
      case 1:
        unint64_t v11 = 0xE400000000000000;
        if (v10 == 1702125924) {
          goto LABEL_36;
        }
        goto LABEL_37;
      case 2:
        unint64_t v11 = 0xE400000000000000;
        if (v10 != 1836412517) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 3:
        unint64_t v11 = 0xE500000000000000;
        if (v10 != 0x74616F6C66) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 4:
        if (v10 != 0x72656765746E69) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 5:
        unint64_t v11 = 0xE600000000000000;
        if (v10 != 0x676E69727473) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 6:
        unint64_t v11 = 0xE300000000000000;
        if (v10 != 7107189) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 7:
        unint64_t v11 = 0xE500000000000000;
        if (v10 != 0x726F6C6F63) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 8:
        unint64_t v11 = 0xE500000000000000;
        if (v10 != 0x6567616D69) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 9:
        unint64_t v11 = 0xE500000000000000;
        if (v10 != 0x6F65646976) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 10:
        unint64_t v11 = 0xE400000000000000;
        uint64_t v12 = 1953394534;
        goto LABEL_35;
      case 11:
        unint64_t v11 = 0xEB00000000726579;
        if (v10 != 0x616C506F65646976) {
          goto LABEL_37;
        }
        goto LABEL_36;
      default:
LABEL_35:
        if (v10 != v12) {
          goto LABEL_37;
        }
LABEL_36:
        if (v9 != v11)
        {
LABEL_37:
          char v13 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v13) {
            goto LABEL_44;
          }
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_42;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_44:
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_45:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_1BFDFCCF8(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C02BC184();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_1C02C6E30(&qword_1EB87A358, (void (*)(void))sub_1C007E638);
        goto LABEL_49;
      }
      sub_1C02C8F20();
    }
    uint64_t v8 = *v3;
    sub_1C1520DBC();
    FormatOptionType.rawValue.getter();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C1520E0C();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x6E61656C6F6F62;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v11 = 0xE400000000000000;
            uint64_t v12 = 1702125924;
            break;
          case 2:
            unint64_t v11 = 0xE400000000000000;
            uint64_t v12 = 1836412517;
            break;
          case 3:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v12 = 0x74616F6C66;
            break;
          case 4:
            uint64_t v12 = 0x72656765746E69;
            break;
          case 5:
            unint64_t v11 = 0xE600000000000000;
            uint64_t v12 = 0x676E69727473;
            break;
          case 6:
            unint64_t v11 = 0xE300000000000000;
            uint64_t v12 = 7107189;
            break;
          case 7:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v12 = 0x726F6C6F63;
            break;
          case 8:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v12 = 0x6567616D69;
            break;
          case 9:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v12 = 0x6F65646976;
            break;
          case 0xA:
            unint64_t v11 = 0xE400000000000000;
            uint64_t v12 = 1953394534;
            break;
          case 0xB:
            uint64_t v12 = 0x616C506F65646976;
            unint64_t v11 = 0xEB00000000726579;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE700000000000000;
        uint64_t v14 = 0x6E61656C6F6F62;
        switch(v5)
        {
          case 1:
            unint64_t v13 = 0xE400000000000000;
            if (v12 == 1702125924) {
              goto LABEL_43;
            }
            goto LABEL_44;
          case 2:
            unint64_t v13 = 0xE400000000000000;
            if (v12 != 1836412517) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 3:
            unint64_t v13 = 0xE500000000000000;
            if (v12 != 0x74616F6C66) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 4:
            if (v12 != 0x72656765746E69) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 5:
            unint64_t v13 = 0xE600000000000000;
            if (v12 != 0x676E69727473) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 6:
            unint64_t v13 = 0xE300000000000000;
            if (v12 != 7107189) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 7:
            unint64_t v13 = 0xE500000000000000;
            if (v12 != 0x726F6C6F63) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 8:
            unint64_t v13 = 0xE500000000000000;
            uint64_t v14 = 0x6567616D69;
            goto LABEL_42;
          case 9:
            unint64_t v13 = 0xE500000000000000;
            if (v12 != 0x6F65646976) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 10:
            unint64_t v13 = 0xE400000000000000;
            if (v12 != 1953394534) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 11:
            unint64_t v13 = 0xEB00000000726579;
            if (v12 != 0x616C506F65646976) {
              goto LABEL_44;
            }
            goto LABEL_43;
          default:
LABEL_42:
            if (v12 != v14) {
              goto LABEL_44;
            }
LABEL_43:
            if (v11 == v13) {
              goto LABEL_52;
            }
LABEL_44:
            char v15 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_53;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_49:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_52:
    swift_bridgeObjectRelease_n();
LABEL_53:
    uint64_t result = sub_1C1520CEC();
    __break(1u);
  }
  else
  {
    *(void *)(v16 + 16) = v19;
  }
  return result;
}

unint64_t sub_1BFDFD140()
{
  unint64_t result = qword_1EB875280;
  if (!qword_1EB875280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875280);
  }
  return result;
}

unint64_t sub_1BFDFD194()
{
  unint64_t result = qword_1EB874530;
  if (!qword_1EB874530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874530);
  }
  return result;
}

uint64_t sub_1BFDFD1E8(void *a1)
{
  return FormatNodeStyle.encode(to:)(a1);
}

uint64_t FormatNodeStyle.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v126 = (char *)&v112 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v127 = (char *)&v112 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v125 = (char *)&v112 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v124 = (char *)&v112 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v123 = (char *)&v112 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v122 = (char *)&v112 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v121 = (char *)&v112 - v16;
  MEMORY[0x1F4188790](v17);
  char v120 = (char *)&v112 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v119 = (char *)&v112 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v118 = (char *)&v112 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v117 = (char *)&v112 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v116 = (char *)&v112 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v115 = (char *)&v112 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v114 = (char *)&v112 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v113 = (char *)&v112 - v32;
  MEMORY[0x1F4188790](v33);
  long long v35 = (char *)&v112 - v34;
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v112 - v37;
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)&v112 - v40;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v42 - 8);
  long long v44 = (char *)&v112 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = *v1;
  uint64_t v46 = v1[2];
  uint64_t v129 = v1[1];
  uint64_t v130 = v46;
  uint64_t v47 = v1[4];
  uint64_t v131 = v1[3];
  uint64_t v132 = v47;
  unint64_t v48 = v1[6];
  uint64_t v133 = v1[5];
  uint64_t v141 = v1[7];
  uint64_t v49 = a1[3];
  uint64_t v50 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v49);
  unint64_t v51 = sub_1BFEB6A24();
  uint64_t v128 = v44;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatNodeStyle, v52, v49, (uint64_t)&type metadata for FormatNodeStyle, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v50, (uint64_t)v44, v51, (uint64_t)&off_1F1C39B68);
  switch(v48 >> 59)
  {
    case 1uLL:
      uint64_t v58 = qword_1EB882D28;
      swift_retain();
      if (v58 != -1) {
        swift_once();
      }
      uint64_t v59 = sub_1C151928C();
      uint64_t v60 = __swift_project_value_buffer(v59, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v38, v60, v59);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v128;
      sub_1BFDFE420(1, v45, (uint64_t)v38);
      uint64_t v57 = (uint64_t)v38;
      break;
    case 2uLL:
      uint64_t v61 = qword_1EB882D28;
      swift_retain();
      if (v61 != -1) {
        swift_once();
      }
      uint64_t v62 = sub_1C151928C();
      uint64_t v63 = __swift_project_value_buffer(v62, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v35, v63, v62);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v128;
      sub_1BFDFE80C(2, v45, (uint64_t)v35);
      goto LABEL_56;
    case 3uLL:
      uint64_t v64 = qword_1EB882D28;
      swift_retain();
      if (v64 != -1) {
        swift_once();
      }
      uint64_t v65 = sub_1C151928C();
      uint64_t v66 = __swift_project_value_buffer(v65, (uint64_t)qword_1EB93CAB0);
      uint64_t v67 = (uint64_t)v113;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v65 - 8) + 16))(v113, v66, v65);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v128;
      sub_1BFDFED70(3, v45, v67);
      uint64_t v57 = v67;
      break;
    case 4uLL:
      uint64_t v68 = qword_1EB882D28;
      swift_retain();
      if (v68 != -1) {
        swift_once();
      }
      uint64_t v69 = sub_1C151928C();
      uint64_t v70 = __swift_project_value_buffer(v69, (uint64_t)qword_1EB93CAB0);
      long long v35 = v114;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v69 - 8) + 16))(v114, v70, v69);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v128;
      sub_1BFDFEBA4(4, v45, (uint64_t)v35);
      goto LABEL_56;
    case 5uLL:
      uint64_t v71 = qword_1EB887640;
      swift_retain();
      if (v71 != -1) {
        swift_once();
      }
      uint64_t v72 = sub_1C151928C();
      uint64_t v73 = __swift_project_value_buffer(v72, (uint64_t)qword_1EB93CAC8);
      long long v35 = v115;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 16))(v115, v73, v72);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v128;
      sub_1BFDFEF3C(5, v45, (uint64_t)v35);
      goto LABEL_56;
    case 6uLL:
      uint64_t v74 = qword_1EB887640;
      swift_retain();
      if (v74 != -1) {
        swift_once();
      }
      uint64_t v75 = sub_1C151928C();
      uint64_t v76 = __swift_project_value_buffer(v75, (uint64_t)qword_1EB93CAC8);
      long long v35 = v116;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v75 - 8) + 16))(v116, v76, v75);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v128;
      sub_1C0697D20(6, v45, (uint64_t)v35);
      goto LABEL_56;
    case 7uLL:
      uint64_t v77 = qword_1EB887610;
      swift_retain();
      if (v77 != -1) {
        swift_once();
      }
      uint64_t v78 = sub_1C151928C();
      uint64_t v79 = __swift_project_value_buffer(v78, (uint64_t)qword_1EB93CA20);
      long long v35 = v117;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v117, v79, v78);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v128;
      sub_1C0697EEC(7, v45, (uint64_t)v35);
      goto LABEL_56;
    case 8uLL:
      uint64_t v80 = qword_1EB887618;
      swift_retain();
      if (v80 != -1) {
        swift_once();
      }
      uint64_t v81 = sub_1C151928C();
      uint64_t v82 = __swift_project_value_buffer(v81, (uint64_t)qword_1EB93CA38);
      long long v35 = v118;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v81 - 8) + 16))(v118, v82, v81);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v128;
      sub_1BFDFE9D8(8, v45, (uint64_t)v35);
      goto LABEL_56;
    case 9uLL:
      uint64_t v83 = qword_1EB887620;
      swift_retain();
      if (v83 != -1) {
        swift_once();
      }
      uint64_t v84 = sub_1C151928C();
      uint64_t v85 = __swift_project_value_buffer(v84, (uint64_t)qword_1EB93CA50);
      long long v35 = v119;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16))(v119, v85, v84);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v128;
      sub_1C06980B8(9, v45, (uint64_t)v35);
      goto LABEL_56;
    case 0xAuLL:
      uint64_t v86 = qword_1EB887638;
      swift_retain();
      if (v86 != -1) {
        swift_once();
      }
      uint64_t v87 = sub_1C151928C();
      uint64_t v88 = __swift_project_value_buffer(v87, (uint64_t)qword_1EB93CA98);
      long long v35 = v120;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v87 - 8) + 16))(v120, v88, v87);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v128;
      sub_1C0698284(10, v45, (uint64_t)v35);
      goto LABEL_56;
    case 0xBuLL:
      uint64_t v89 = qword_1EB887638;
      swift_retain();
      if (v89 != -1) {
        swift_once();
      }
      uint64_t v90 = sub_1C151928C();
      uint64_t v91 = __swift_project_value_buffer(v90, (uint64_t)qword_1EB93CA98);
      long long v35 = v121;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v90 - 8) + 16))(v121, v91, v90);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v128;
      sub_1BFC4AAAC(11, v45, (uint64_t)v35);
      goto LABEL_56;
    case 0xCuLL:
      uint64_t v92 = qword_1EB887638;
      swift_retain();
      if (v92 != -1) {
        swift_once();
      }
      uint64_t v93 = sub_1C151928C();
      uint64_t v94 = __swift_project_value_buffer(v93, (uint64_t)qword_1EB93CA98);
      long long v35 = v122;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v93 - 8) + 16))(v122, v94, v93);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v128;
      sub_1BFDFF108(12, v45, (uint64_t)v35);
      goto LABEL_56;
    case 0xDuLL:
      uint64_t v95 = qword_1EB887638;
      swift_retain();
      if (v95 != -1) {
        swift_once();
      }
      uint64_t v96 = sub_1C151928C();
      uint64_t v97 = __swift_project_value_buffer(v96, (uint64_t)qword_1EB93CA98);
      long long v35 = v123;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16))(v123, v97, v96);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v128;
      sub_1C0698450(13, v45, (uint64_t)v35);
      goto LABEL_56;
    case 0xEuLL:
      uint64_t v98 = qword_1EB887650;
      swift_retain();
      if (v98 != -1) {
        swift_once();
      }
      uint64_t v99 = sub_1C151928C();
      uint64_t v100 = __swift_project_value_buffer(v99, (uint64_t)qword_1EB93CAE0);
      long long v35 = v124;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v99 - 8) + 16))(v124, v100, v99);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v128;
      sub_1BFC52620(14, v45, (uint64_t)v35);
      goto LABEL_56;
    case 0xFuLL:
      uint64_t v101 = qword_1EB887650;
      swift_retain();
      if (v101 != -1) {
        swift_once();
      }
      uint64_t v102 = sub_1C151928C();
      uint64_t v103 = __swift_project_value_buffer(v102, (uint64_t)qword_1EB93CAE0);
      long long v35 = v125;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v102 - 8) + 16))(v125, v103, v102);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v128;
      sub_1BFC4CB4C(15, v45, (uint64_t)v35);
      goto LABEL_56;
    case 0x10uLL:
      *(void *)&long long v134 = v45;
      *((void *)&v134 + 1) = v129;
      uint64_t v135 = v130;
      uint64_t v136 = v131;
      uint64_t v137 = v132;
      uint64_t v138 = v133;
      __int16 v139 = v48;
      uint64_t v140 = v141;
      if (qword_1EB8875E0 != -1) {
        swift_once();
      }
      uint64_t v104 = sub_1C151928C();
      uint64_t v105 = __swift_project_value_buffer(v104, (uint64_t)qword_1EB93C9D8);
      uint64_t v106 = (uint64_t)v127;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v104 - 8) + 16))(v127, v105, v104);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v107 = (uint64_t)v128;
      sub_1C069861C(16, &v134, v106);
      sub_1BFEFEB68(v106, type metadata accessor for FormatVersionRequirement);
      return sub_1BFEFEB68(v107, (uint64_t (*)(void))sub_1BFEFF7D8);
    case 0x11uLL:
      uint64_t v109 = qword_1EB8849C8;
      swift_retain();
      if (v109 != -1) {
        swift_once();
      }
      uint64_t v110 = sub_1C151928C();
      uint64_t v111 = __swift_project_value_buffer(v110, (uint64_t)qword_1EB93C790);
      long long v35 = v126;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v110 - 8) + 16))(v126, v111, v110);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v128;
      sub_1C06987BC(17, v45, (uint64_t)v35);
LABEL_56:
      uint64_t v57 = (uint64_t)v35;
      break;
    default:
      uint64_t v53 = qword_1EB882D28;
      swift_retain();
      if (v53 != -1) {
        swift_once();
      }
      uint64_t v54 = sub_1C151928C();
      uint64_t v55 = __swift_project_value_buffer(v54, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v41, v55, v54);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v128;
      sub_1BFDFE640(0, v45, (uint64_t)v41);
      uint64_t v57 = (uint64_t)v41;
      break;
  }
  sub_1BFEFEB68(v57, type metadata accessor for FormatVersionRequirement);
  sub_1BFEFEB68(v56, (uint64_t (*)(void))sub_1BFEFF7D8);
  return sub_1BFF94FE4(v45, v129, v130, v131, v132, v133, v48);
}

uint64_t sub_1BFDFE420(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5154;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatTextNodeStyle();
    sub_1C085F050(&qword_1EB866970, (void (*)(uint64_t))type metadata accessor for FormatTextNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFDFE5EC()
{
  unint64_t result = qword_1EB85B7E0;
  if (!qword_1EB85B7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B7E0);
  }
  return result;
}

uint64_t sub_1BFDFE640(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5154;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatViewNodeStyle();
    sub_1C085F050(&qword_1EB866978, (void (*)(uint64_t))type metadata accessor for FormatViewNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDFE80C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5154;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatImageNodeStyle();
    sub_1C085F050(&qword_1EB866A90, (void (*)(uint64_t))type metadata accessor for FormatImageNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDFE9D8(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5154;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatLayeredMediaNodeStyle();
    sub_1C085F050(&qword_1EB868200, (void (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDFEBA4(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5154;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatWebEmbedNodeStyle();
    sub_1C085F050(&qword_1EB867550, (void (*)(uint64_t))type metadata accessor for FormatWebEmbedNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDFED70(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5154;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatItemNodeStyle(0);
    sub_1C085F050(&qword_1EB866898, (void (*)(uint64_t))type metadata accessor for FormatItemNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDFEF3C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5154;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatCustomNodeStyle();
    sub_1C085F050(&qword_1EB866D68, (void (*)(uint64_t))type metadata accessor for FormatCustomNodeStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDFF108(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5154;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFDFE5EC();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatGroupNodeMaskStyle();
    sub_1C085F050(&qword_1EB867640, (void (*)(uint64_t))type metadata accessor for FormatGroupNodeMaskStyle);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFDFF2D4(void *a1)
{
  return FormatTextNodeBinding.encode(to:)(a1);
}

uint64_t FormatTextNodeBinding.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v98 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v97 = (char *)&v85 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v96 = (char *)&v85 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v93 = (char *)&v85 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v92 = (char *)&v85 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v91 = (char *)&v85 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v90 = (char *)&v85 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v89 = (char *)&v85 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v95 = (char *)&v85 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v94 = (char *)&v85 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v88 = (char *)&v85 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v87 = (char *)&v85 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v86 = (char *)&v85 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v85 = (char *)&v85 - v30;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v33 = (char *)&v85 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = *(void *)v1;
  uint64_t v100 = *(void *)(v1 + 8);
  uint64_t v34 = *(void *)(v1 + 24);
  uint64_t v99 = *(void *)(v1 + 16);
  uint64_t v35 = *(void *)(v1 + 32);
  uint64_t v36 = *(void *)(v1 + 40);
  char v37 = *(unsigned char *)(v1 + 48);
  char v38 = *(unsigned char *)(v1 + 49);
  uint64_t v40 = a1[3];
  uint64_t v39 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v40);
  unint64_t v41 = sub_1BFEB6A24();
  uint64_t v108 = v33;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatTextNodeBinding, v42, v40, (uint64_t)&type metadata for FormatTextNodeBinding, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v39, (uint64_t)v33, v41, (uint64_t)&off_1F1C39B68);
  switch((2 * v38) | ((v37 & 8) != 0))
  {
    case 1:
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v47 = sub_1C151928C();
      uint64_t v48 = __swift_project_value_buffer(v47, (uint64_t)qword_1EB93CA50);
      uint64_t v45 = (uint64_t)v86;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v86, v48, v47);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v108;
      sub_1BFE0088C(1, v101, v45);
      goto LABEL_14;
    case 2:
      v104[0] = v101;
      v104[1] = v100;
      v104[2] = v99;
      v104[3] = v34;
      v104[4] = v35;
      v104[5] = v36;
      char v105 = v37;
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v49 = sub_1C151928C();
      uint64_t v50 = __swift_project_value_buffer(v49, (uint64_t)qword_1EB93CAB0);
      uint64_t v45 = (uint64_t)v87;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v87, v50, v49);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v108;
      sub_1BFE00698(2, (uint64_t)v104, v45);
      goto LABEL_14;
    case 3:
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v51 = sub_1C151928C();
      uint64_t v52 = __swift_project_value_buffer(v51, (uint64_t)qword_1EB93CAB0);
      uint64_t v45 = (uint64_t)v88;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v88, v52, v51);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v108;
      sub_1BFE00500(3, v101, v100, v99, v45);
      goto LABEL_14;
    case 4:
      sub_1BFF05D18();
      uint64_t v55 = (uint64_t)v94;
      uint64_t v56 = &v94[*(int *)(v54 + 48)];
      uint64_t v57 = &v94[*(int *)(v54 + 64)];
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v58 = sub_1C151928C();
      uint64_t v59 = __swift_project_value_buffer(v58, (uint64_t)qword_1EB93CAB0);
      uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16);
      v60(v55, v59, v58);
      v60((uint64_t)v56, v59, v58);
      type metadata accessor for FormatVersionRequirement.Value(0);
      *(void *)uint64_t v57 = 0;
      *((void *)v57 + 1) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v108;
      sub_1BFE00500(4, v101, v100, v99, v55);
      goto LABEL_47;
    case 5:
      sub_1BFF05D18();
      uint64_t v55 = (uint64_t)v95;
      uint64_t v62 = &v95[*(int *)(v61 + 48)];
      uint64_t v63 = &v95[*(int *)(v61 + 64)];
      if (qword_1EB887640 != -1) {
        swift_once();
      }
      uint64_t v64 = sub_1C151928C();
      uint64_t v65 = __swift_project_value_buffer(v64, (uint64_t)qword_1EB93CAC8);
      uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 16);
      v66(v55, v65, v64);
      if (qword_1EB887658 != -1) {
        swift_once();
      }
      uint64_t v67 = __swift_project_value_buffer(v64, (uint64_t)qword_1EB93CAF8);
      v66((uint64_t)v62, v67, v64);
      type metadata accessor for FormatVersionRequirement.Value(0);
      *(void *)uint64_t v63 = 0;
      *((void *)v63 + 1) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v108;
      sub_1C0686B20(5, v101, v55);
      goto LABEL_47;
    case 6:
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v68 = sub_1C151928C();
      uint64_t v69 = __swift_project_value_buffer(v68, (uint64_t)qword_1EB93CA50);
      uint64_t v55 = (uint64_t)v89;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16))(v89, v69, v68);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v108;
      sub_1C0686CB4(6, v101, v55);
      goto LABEL_47;
    case 7:
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v70 = sub_1C151928C();
      uint64_t v71 = __swift_project_value_buffer(v70, (uint64_t)qword_1EB93CA08);
      uint64_t v55 = (uint64_t)v90;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16))(v90, v71, v70);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v108;
      sub_1C0686E48(7, v101, v55);
      goto LABEL_47;
    case 8:
      v106[0] = v101;
      v106[1] = v100;
      v106[2] = v99;
      v106[3] = v34;
      v106[4] = v35;
      v106[5] = v36;
      char v107 = v37;
      if (qword_1EB887668 != -1) {
        swift_once();
      }
      uint64_t v72 = sub_1C151928C();
      uint64_t v73 = __swift_project_value_buffer(v72, (uint64_t)qword_1EB93CB10);
      uint64_t v55 = (uint64_t)v91;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 16))(v91, v73, v72);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v108;
      sub_1C0686FDC(8, (uint64_t)v106, v55);
      goto LABEL_47;
    case 9:
      if (qword_1EB887668 != -1) {
        swift_once();
      }
      uint64_t v74 = sub_1C151928C();
      uint64_t v75 = __swift_project_value_buffer(v74, (uint64_t)qword_1EB93CB10);
      uint64_t v55 = (uint64_t)v92;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v74 - 8) + 16))(v92, v75, v74);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v108;
      sub_1C068717C(9, v101, v100 & 1, v55);
      goto LABEL_47;
    case 10:
      if (qword_1EB8849C8 != -1) {
        swift_once();
      }
      uint64_t v76 = sub_1C151928C();
      uint64_t v77 = __swift_project_value_buffer(v76, (uint64_t)qword_1EB93C790);
      uint64_t v55 = (uint64_t)v93;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16))(v93, v77, v76);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v108;
      sub_1C0687318(10, v101, v55);
      goto LABEL_47;
    case 11:
      if (qword_1EB887668 != -1) {
        swift_once();
      }
      uint64_t v78 = sub_1C151928C();
      uint64_t v79 = __swift_project_value_buffer(v78, (uint64_t)qword_1EB93CB10);
      uint64_t v55 = (uint64_t)v96;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v96, v79, v78);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v108;
      sub_1C06874AC(11, v101 & 1, v55);
      goto LABEL_47;
    case 12:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v80 = sub_1C151928C();
      uint64_t v81 = __swift_project_value_buffer(v80, (uint64_t)qword_1EB93CA80);
      uint64_t v55 = (uint64_t)v97;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16))(v97, v81, v80);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v108;
      sub_1C0687644(12, v101, v100, v55);
      goto LABEL_47;
    case 13:
      if (qword_1EB8849D0 != -1) {
        swift_once();
      }
      uint64_t v82 = sub_1C151928C();
      uint64_t v83 = __swift_project_value_buffer(v82, (uint64_t)qword_1EB93C828);
      uint64_t v55 = (uint64_t)v98;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v98, v83, v82);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v108;
      sub_1C06877DC(13, v101, v55);
LABEL_47:
      uint64_t v53 = v55;
      break;
    default:
      v102[0] = v101;
      v102[1] = v100;
      v102[2] = v99;
      v102[3] = v34;
      v102[4] = v35;
      v102[5] = v36;
      char v103 = v37;
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_1C151928C();
      uint64_t v44 = __swift_project_value_buffer(v43, (uint64_t)qword_1EB93CAB0);
      uint64_t v45 = (uint64_t)v85;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v85, v44, v43);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v108;
      sub_1BFE002B8(0, (uint64_t)v102, v45);
LABEL_14:
      uint64_t v53 = v45;
      break;
  }
  sub_1BFEFEB68(v53, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68(v46, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFE002B8(char a1, uint64_t a2, uint64_t a3)
{
  v16[55] = a1;
  sub_1C0223E44(a2, (uint64_t)v16);
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0906920;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE00458();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE004AC();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE00458()
{
  unint64_t result = qword_1EB866F80;
  if (!qword_1EB866F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866F80);
  }
  return result;
}

unint64_t sub_1BFE004AC()
{
  unint64_t result = qword_1EB85BD18;
  if (!qword_1EB85BD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BD18);
  }
  return result;
}

uint64_t sub_1BFE00500(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  void v16[2] = sub_1C0906920;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE00458();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFE0637C();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE00698(char a1, uint64_t a2, uint64_t a3)
{
  v16[55] = a1;
  sub_1C022425C(a2, (uint64_t)v16);
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0906920;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE00458();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE00838();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE00838()
{
  unint64_t result = qword_1EB85BA08;
  if (!qword_1EB85BA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BA08);
  }
  return result;
}

uint64_t sub_1BFE0088C(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C0906920;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE00458();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE00A20();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE00A20()
{
  unint64_t result = qword_1EB860198;
  if (!qword_1EB860198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860198);
  }
  return result;
}

uint64_t sub_1BFE00A74(void *a1)
{
  return FormatCornerRadius.Value.encode(to:)(a1);
}

uint64_t FormatCornerRadius.Value.encode(to:)(void *a1)
{
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v30 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v31 = &v28[-v7];
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v28[-v9];
  sub_1C0882440();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v14 = *(double *)v1;
  int v29 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1C0882314();
  uint64_t v18 = v17;
  uint64_t v19 = sub_1C085F050(&qword_1EB891CC0, (void (*)(uint64_t))sub_1C0882314);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatCornerRadius.Value, v20, v15, (uint64_t)&type metadata for FormatCornerRadius.Value, v18, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v13, v19, (uint64_t)&off_1F1C39B68);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1C151928C();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB93CAB0);
  uint64_t v23 = *(void (**)(unsigned char *))(*(void *)(v21 - 8) + 16);
  uint64_t v32 = v22;
  v23(v10);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06D5F60(0, 0, 0, v14);
  sub_1BFEFEB68((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    uint64_t v24 = (uint64_t)v31;
    ((void (*)(unsigned char *, uint64_t, uint64_t))v23)(v31, v32, v21);
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = swift_bridgeObjectRetain();
    sub_1C06D60A8(v25, 1, 0, 0, v24, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v24, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v26 = (uint64_t)v30;
    ((void (*)(unsigned char *, uint64_t, uint64_t))v23)(v30, v32, v21);
    swift_storeEnumTagMultiPayload();
    if (v29 & 1) == 0 && (sub_1C083DA4C(v26, 2, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v34 = xmmword_1C1557FA0;
      char v35 = 0;
      char v33 = 0;
      sub_1C08824D4();
      sub_1C085F050(&qword_1EB86E1F0, (void (*)(uint64_t))sub_1C08824D4);
      sub_1C1520BAC();
    }
    sub_1BFEFEB68(v26, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BFEFEB68((uint64_t)v13, (uint64_t (*)(void))sub_1C0882440);
}

uint64_t sub_1BFE00F10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    uint64_t v4 = (unsigned __int8 *)(a2 + 32);
    while (1)
    {
      unsigned int v7 = *v3++;
      uint64_t v6 = v7;
      unsigned int v9 = *v4++;
      uint64_t v8 = v9;
      unint64_t v10 = 0xE300000000000000;
      uint64_t v11 = 7105633;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE700000000000000;
          uint64_t v11 = 0x7466654C706F74;
          break;
        case 2:
          unint64_t v10 = 0xE800000000000000;
          uint64_t v11 = 0x7468676952706F74;
          break;
        case 3:
          uint64_t v11 = 0x654C6D6F74746F62;
          unint64_t v10 = 0xEA00000000007466;
          break;
        case 4:
          uint64_t v11 = 0x69526D6F74746F62;
          unint64_t v10 = 0xEB00000000746867;
          break;
        default:
          break;
      }
      unint64_t v12 = 0xE300000000000000;
      uint64_t v13 = 7105633;
      switch(v8)
      {
        case 1:
          unint64_t v12 = 0xE700000000000000;
          if (v11 == 0x7466654C706F74) {
            goto LABEL_19;
          }
          goto LABEL_5;
        case 2:
          unint64_t v12 = 0xE800000000000000;
          if (v11 != 0x7468676952706F74) {
            goto LABEL_5;
          }
          goto LABEL_19;
        case 3:
          uint64_t v13 = 0x654C6D6F74746F62;
          unint64_t v12 = 0xEA00000000007466;
          goto LABEL_18;
        case 4:
          unint64_t v12 = 0xEB00000000746867;
          if (v11 != 0x69526D6F74746F62) {
            goto LABEL_5;
          }
          goto LABEL_19;
        default:
LABEL_18:
          if (v11 != v13) {
            goto LABEL_5;
          }
LABEL_19:
          if (v10 == v12)
          {
            swift_bridgeObjectRelease_n();
            if (!--v2) {
              return 1;
            }
          }
          else
          {
LABEL_5:
            char v5 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v5 & 1) == 0) {
              return 0;
            }
            if (!--v2) {
              return 1;
            }
          }
          break;
      }
    }
  }
  return 1;
}

unint64_t sub_1BFE01114()
{
  unint64_t result = qword_1EB85C348;
  if (!qword_1EB85C348)
  {
    sub_1BFE9DEBC(255, (unint64_t *)&qword_1EB879D38, (uint64_t)&type metadata for FormatCorner, MEMORY[0x1E4FBB320]);
    sub_1C0083178();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C348);
  }
  return result;
}

uint64_t sub_1BFE011A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFE011E0();
  *a1 = result;
  return result;
}

uint64_t sub_1BFE011E0()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xE) {
    return 14;
  }
  else {
    return v0;
  }
}

unint64_t sub_1BFE01228()
{
  unint64_t result = qword_1EB875BB8;
  if (!qword_1EB875BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875BB8);
  }
  return result;
}

uint64_t sub_1BFE0127C()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6572646C696863;
      break;
    case 2:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    case 3:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 4:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatTextNodeFormat.Token.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v42 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v44 = (char *)&v40 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v46 = (char *)&v40 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v40 - v10;
  sub_1C086E1D0();
  MEMORY[0x1F4188790](v12 - 8);
  double v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v1[1];
  uint64_t v47 = *v1;
  uint64_t v45 = v1[2];
  uint64_t v43 = v1[3];
  uint64_t v41 = v1[4];
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1C086E0A4();
  uint64_t v19 = v18;
  uint64_t v20 = sub_1C085F050(&qword_1EB892630, (void (*)(uint64_t))sub_1C086E0A4);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatTextNodeFormat.Token, v21, v16, (uint64_t)&type metadata for FormatTextNodeFormat.Token, v19, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v14, v20, (uint64_t)&off_1F1C39B68);
  uint64_t v22 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1C151928C();
  uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1EB93CAB0);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  v25(v11, v24, v23);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = v48;
  sub_1C06C8578(v47, v15, 0, 0, 0, (uint64_t)v11, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v27 = (uint64_t)v14;
  if (!v26)
  {
    uint64_t v28 = (uint64_t)v46;
    v25(v46, v24, v23);
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = v45;
    swift_retain();
    sub_1C06C870C(v29, 1, 0, 0, v28, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v28, type metadata accessor for FormatVersionRequirement);
    swift_release();
    uint64_t v30 = (uint64_t)v44;
    v25(v44, v24, v23);
    swift_storeEnumTagMultiPayload();
    uint64_t v31 = swift_retain();
    sub_1C0728644(v31, 2, 0, 0, v30, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v30, type metadata accessor for FormatVersionRequirement);
    swift_release();
    uint64_t v32 = qword_1EB887638;
    uint64_t v33 = v41;
    swift_bridgeObjectRetain();
    if (v32 != -1) {
      swift_once();
    }
    uint64_t v34 = __swift_project_value_buffer(v23, (uint64_t)qword_1EB93CA98);
    uint64_t v35 = (uint64_t)v42;
    v25(v42, v34, v23);
    swift_storeEnumTagMultiPayload();
    if (*(void *)(v33 + 16) && (sub_1C0845F90(v35, 3, 0, 0, (uint64_t)sub_1C01B158C, 0) & 1) != 0)
    {
      long long v50 = xmmword_1C1557FB0;
      char v51 = 0;
      uint64_t v36 = swift_bridgeObjectRetain();
      char v37 = sub_1BFE71F8C(v36);
      swift_bridgeObjectRelease();
      uint64_t v49 = v37;
      swift_retain();
      sub_1BFE726FC((uint64_t *)&v49, sub_1BFE72780, sub_1BFE72EAC);
      swift_release();
      uint64_t v52 = (uint64_t)v49;
      sub_1C086E264();
      sub_1C085F050(&qword_1EB86EDC0, (void (*)(uint64_t))sub_1C086E264);
      uint64_t v38 = MEMORY[0x1E4FBB1A0];
      sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1BFE71F14((unint64_t *)&qword_1EB85DF50, (unint64_t *)&qword_1EB879F20, v38);
      sub_1C1520BAC();
      swift_release();
      uint64_t v35 = (uint64_t)v42;
    }
    sub_1BFEFEB68(v35, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BFEFEB68(v27, (uint64_t (*)(void))sub_1C086E1D0);
}

uint64_t sub_1BFE019A8()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6769666E6F63;
      break;
    case 2:
      uint64_t result = 1819044198;
      break;
    case 3:
      uint64_t result = 0x6C616E7265746E69;
      break;
    case 4:
      uint64_t result = 0x726F6C6F63;
      break;
    case 5:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFE01A30()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E65746E6F63;
      break;
    case 2:
      uint64_t result = 0x656C797473;
      break;
    case 3:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 4:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFE01AC4()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x73646E696BLL;
      break;
    case 2:
      uint64_t result = 0x746E756F63;
      break;
    case 3:
      uint64_t result = 0x737469617274;
      break;
    case 4:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFE01B4C()
{
  return sub_1BFE01B64();
}

uint64_t sub_1BFE01B64()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  v4[3] = &type metadata for TraversalOnlyEncoder;
  v4[4] = sub_1BFEFC8E4();
  v4[0] = v2;
  v4[1] = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C151E46C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1BFE01BFC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFE01CDC();
  *a1 = result;
  return result;
}

uint64_t sub_1BFE01C34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFE01CDC();
  *a1 = result;
  return result;
}

uint64_t sub_1BFE01C6C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE1358();
  *a1 = result;
  return result;
}

uint64_t sub_1BFE01CA4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFE01CDC();
  *a1 = result;
  return result;
}

uint64_t sub_1BFE01CDC()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFE01D24@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return FormatSwitchValue.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t FormatSwitchValue.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v39 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v42 = *(void *)(a2 + 24);
  uint64_t v43 = v11;
  uint64_t v12 = _s10CodingKeysOMa_39();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v15 = swift_getWitnessTable();
  *(void *)&long long v46 = v12;
  *((void *)&v46 + 1) = WitnessTable;
  uint64_t v47 = v14;
  uint64_t v48 = v15;
  uint64_t v16 = type metadata accessor for FormatCodingKeysContainer();
  uint64_t v17 = swift_getWitnessTable();
  sub_1C152083C();
  swift_getWitnessTable();
  uint64_t v44 = type metadata accessor for VersionedKeyedEncodingContainer();
  uint64_t v40 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v19 = (char *)&v36 - v18;
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  uint64_t v37 = a2;
  sub_1BFEFBD78(a2, v22, v20, a2, v16, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v19, v17, (uint64_t)&off_1F1C39B68);
  uint64_t v38 = v3;
  uint64_t v49 = *v3;
  long long v46 = 0uLL;
  LOBYTE(v47) = 0;
  uint64_t v23 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v23 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1C151928C();
  uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EB93CAB0);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
  v26(v10, v25, v24);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for FormatSwitchValue.CaseValue();
  uint64_t v27 = sub_1C151ED5C();
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = v41;
  sub_1BFEFFFF0((uint64_t)&v49, (uint64_t)&v46, (uint64_t)v10, (uint64_t)sub_1C01B158C, 0, v44, v27, v28);
  sub_1BFEFEB68((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v29) {
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v19, v44);
  }
  uint64_t v31 = (uint64_t)v38 + *(int *)(v37 + 36);
  long long v46 = xmmword_1C153AB20;
  LOBYTE(v47) = 0;
  uint64_t v32 = (uint64_t)v39;
  v26(v39, v25, v24);
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = type metadata accessor for FormatSwitchValue.DefaultValue();
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v35 = v44;
  sub_1BFEFFFF0(v31, (uint64_t)&v46, v32, (uint64_t)sub_1C01B158C, 0, v44, v33, v34);
  sub_1BFEFEB68(v32, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v19, v35);
}

uint64_t FormatSwitchValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v61 = a4;
  uint64_t v55 = type metadata accessor for FormatSwitchValue.DefaultValue();
  uint64_t v62 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v63 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v56 = (char *)&v46 - v9;
  uint64_t v57 = a2;
  uint64_t v58 = a3;
  uint64_t v10 = _s10CodingKeysOMa_39();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v13 = swift_getWitnessTable();
  *(void *)&long long v66 = v10;
  *((void *)&v66 + 1) = WitnessTable;
  uint64_t v53 = v12;
  uint64_t v54 = WitnessTable;
  uint64_t v67 = v12;
  uint64_t v68 = v13;
  uint64_t v14 = type metadata accessor for FormatCodingKeysContainer();
  swift_getWitnessTable();
  uint64_t v59 = sub_1C152072C();
  uint64_t v64 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v16 = (char *)&v46 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v17 = v60;
  sub_1C1520EBC();
  uint64_t v18 = (void *)v17;
  if (v17) {
    goto LABEL_16;
  }
  uint64_t v50 = v14;
  uint64_t v48 = v13;
  uint64_t v49 = v10;
  char v51 = 0;
  uint64_t v52 = v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v19 = sub_1C1520EAC();
  char v20 = Dictionary<>.errorOnUnknownKeys.getter(v19);
  swift_bridgeObjectRelease();
  uint64_t v21 = v61;
  uint64_t v22 = v62;
  uint64_t v24 = (uint64_t)v63;
  uint64_t v23 = v64;
  uint64_t v25 = v59;
  if ((v20 & 1) == 0)
  {
LABEL_12:
    type metadata accessor for FormatSwitchValue.CaseValue();
    sub_1C151ED5C();
    long long v66 = 0uLL;
    LOBYTE(v67) = 0;
    uint64_t v65 = swift_getWitnessTable();
    swift_getWitnessTable();
    uint64_t v39 = v51;
    uint64_t v38 = v52;
    sub_1C15206EC();
    uint64_t v18 = v39;
    if (!v39)
    {
      uint64_t v60 = v69;
      long long v66 = xmmword_1C153AB20;
      LOBYTE(v67) = 0;
      uint64_t v40 = v55;
      swift_getWitnessTable();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v38, v25);
      (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v24, v56, v40);
      sub_1BFE0288C(v60, v24, v21);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v38, v25);
LABEL_16:
    sub_1C0038728(a1, (uint64_t)v18);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v60 = sub_1C152070C();
  uint64_t v26 = v50;
  if (!MEMORY[0x1C18C6870](v60, v50))
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v47 = a1;
  uint64_t v27 = 0;
  uint64_t v28 = (char *)(v60 + 48);
  while (1)
  {
    char v29 = sub_1C151ECDC();
    uint64_t result = sub_1C151EC7C();
    if ((v29 & 1) == 0) {
      break;
    }
    uint64_t v31 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      goto LABEL_19;
    }
    uint64_t v33 = *((void *)v28 - 2);
    uint64_t v32 = *((void *)v28 - 1);
    char v34 = *v28;
    *(void *)&long long v66 = v33;
    *((void *)&v66 + 1) = v32;
    LOBYTE(v67) = v34;
    sub_1BFE94AB4(v33, v32, v34);
    uint64_t v35 = sub_1C0D990EC(v26);
    if (v36)
    {
      uint64_t v41 = v35;
      uint64_t v42 = v36;
      swift_bridgeObjectRelease();
      uint64_t v43 = sub_1C0D98F50(v49, v54, v53, v48);
      sub_1C02570B4();
      uint64_t v44 = swift_allocError();
      *(void *)uint64_t v45 = v41;
      *(void *)(v45 + 8) = v42;
      *(void *)(v45 + 16) = v43;
      uint64_t v18 = (void *)v44;
      *(_OWORD *)(v45 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v66, *((uint64_t *)&v66 + 1), v67);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v52, v59);
      a1 = v47;
      goto LABEL_16;
    }
    sub_1BFE94AD4(v33, v32, v34);
    ++v27;
    v28 += 24;
    BOOL v37 = v31 == MEMORY[0x1C18C6870](v60, v26);
    uint64_t v21 = v61;
    uint64_t v22 = v62;
    uint64_t v24 = (uint64_t)v63;
    uint64_t v23 = v64;
    if (v37)
    {
      swift_bridgeObjectRelease();
      a1 = v47;
      uint64_t v25 = v59;
      goto LABEL_12;
    }
  }
  uint64_t result = sub_1C152016C();
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t _s10CodingKeysOMa_39()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFE0288C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = (char *)a3 + *(int *)(type metadata accessor for FormatSwitchValue() + 36);
  uint64_t v5 = type metadata accessor for FormatSwitchValue.DefaultValue();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);
  return v6(v4, a2, v5);
}

uint64_t type metadata accessor for FormatSwitchValue.DefaultValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FormatSwitchValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFE0295C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTextNodeBinding.init(from:)(a1, a2);
}

uint64_t FormatTextNodeBinding.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v36 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v29 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_24:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    uint64_t v27 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  uint64_t v10 = v7;
  uint64_t v11 = a1[3];
  uint64_t v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  uint64_t v12 = sub_1C1520EAC();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = v36;
  uint64_t v14 = v9;
  if (v11)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unint64_t *)(v15 + 40);
      while (1)
      {
        unint64_t v18 = *v17;
        if (*v17 >= 4) {
          break;
        }
        v17 += 2;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v25 = *(v17 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v26 = v25;
      *(void *)(v26 + 8) = v18;
      *(void *)(v26 + 16) = &unk_1F1B6DA78;
      *(_OWORD *)(v26 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v25, v18);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v6);
      a1 = v30;
      goto LABEL_24;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE03288();
  *(_OWORD *)uint64_t v32 = 0uLL;
  sub_1C15206EC();
  switch((char)v31)
  {
    case 1:
      *(_OWORD *)uint64_t v32 = xmmword_1C152C800;
      sub_1BFE03384();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      uint64_t v23 = 0;
      char v19 = 0;
      uint64_t v20 = v31;
      long long v21 = 0uLL;
      goto LABEL_26;
    case 2:
      long long v31 = xmmword_1C152C800;
      sub_1BFE03330();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      uint64_t v20 = *(void *)v32;
      long long v21 = *(_OWORD *)&v32[8];
      long long v22 = v33;
      uint64_t v23 = v34;
      char v19 = 1;
      char v24 = v35;
      break;
    case 3:
      long long v31 = xmmword_1C152C800;
      sub_1BFE2DD44();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      uint64_t v23 = 0;
      uint64_t v20 = *(void *)v32;
      long long v21 = *(_OWORD *)&v32[8];
      long long v22 = 0uLL;
      char v19 = 1;
      char v24 = 8;
      break;
    case 4:
      long long v31 = xmmword_1C152C800;
      sub_1BFE2DD44();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      uint64_t v23 = 0;
      char v24 = 0;
      uint64_t v20 = *(void *)v32;
      long long v21 = *(_OWORD *)&v32[8];
      long long v22 = 0uLL;
      char v19 = 2;
      break;
    case 5:
      *(_OWORD *)uint64_t v32 = xmmword_1C152C800;
      sub_1C08655E0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      uint64_t v23 = 0;
      uint64_t v20 = v31;
      long long v21 = 0uLL;
      char v19 = 2;
      goto LABEL_26;
    case 6:
      *(_OWORD *)uint64_t v32 = xmmword_1C152C800;
      sub_1BFCF5D14();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      uint64_t v23 = 0;
      char v24 = 0;
      uint64_t v20 = v31;
      long long v21 = 0uLL;
      char v19 = 3;
      goto LABEL_27;
    case 7:
      *(_OWORD *)uint64_t v32 = xmmword_1C152C800;
      sub_1C086558C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      uint64_t v23 = 0;
      uint64_t v20 = v31;
      long long v21 = 0uLL;
      char v19 = 3;
      goto LABEL_26;
    case 8:
      long long v31 = xmmword_1C152C800;
      sub_1C0865538();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      uint64_t v20 = *(void *)v32;
      long long v21 = *(_OWORD *)&v32[8];
      long long v22 = v33;
      uint64_t v23 = v34;
      char v19 = 4;
      char v24 = v35;
      break;
    case 9:
      *(_OWORD *)uint64_t v32 = xmmword_1C152C800;
      sub_1C08654E4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      uint64_t v23 = 0;
      uint64_t v20 = v31;
      long long v22 = 0uLL;
      long long v21 = BYTE8(v31);
      char v19 = 4;
      char v24 = 8;
      break;
    case 10:
      *(_OWORD *)uint64_t v32 = xmmword_1C152C800;
      sub_1C0865490();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      uint64_t v23 = 0;
      char v24 = 0;
      uint64_t v20 = v31;
      long long v21 = 0uLL;
      char v19 = 5;
      goto LABEL_27;
    case 11:
      *(_OWORD *)uint64_t v32 = xmmword_1C152C800;
      sub_1C086543C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      uint64_t v23 = 0;
      uint64_t v20 = v31;
      long long v21 = 0uLL;
      char v19 = 5;
      goto LABEL_26;
    case 12:
      *(_OWORD *)uint64_t v32 = xmmword_1C152C800;
      sub_1C08653E8();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      uint64_t v23 = 0;
      char v24 = 0;
      uint64_t v20 = v31;
      long long v22 = 0uLL;
      long long v21 = BYTE8(v31);
      char v19 = 6;
      break;
    case 13:
      *(_OWORD *)uint64_t v32 = xmmword_1C152C800;
      sub_1C0865394();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      uint64_t v23 = 0;
      uint64_t v20 = v31;
      long long v21 = 0uLL;
      char v19 = 6;
LABEL_26:
      char v24 = 8;
LABEL_27:
      long long v22 = 0uLL;
      break;
    default:
      long long v31 = xmmword_1C152C800;
      sub_1BFE032DC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      char v19 = 0;
      uint64_t v20 = *(void *)v32;
      long long v21 = *(_OWORD *)&v32[8];
      long long v22 = v33;
      uint64_t v23 = v34;
      char v24 = v35;
      break;
  }
  uint64_t v27 = (uint64_t)v30;
  *(void *)uint64_t v13 = v20;
  *(_OWORD *)(v13 + 8) = v21;
  *(_OWORD *)(v13 + 24) = v22;
  *(void *)(v13 + 40) = v23;
  *(unsigned char *)(v13 + 48) = v24;
  *(unsigned char *)(v13 + 49) = v19;
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

unint64_t sub_1BFE03288()
{
  unint64_t result = qword_1EB88A4C8;
  if (!qword_1EB88A4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A4C8);
  }
  return result;
}

unint64_t sub_1BFE032DC()
{
  unint64_t result = qword_1EB8770C8;
  if (!qword_1EB8770C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8770C8);
  }
  return result;
}

unint64_t sub_1BFE03330()
{
  unint64_t result = qword_1EB875FF0;
  if (!qword_1EB875FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875FF0);
  }
  return result;
}

unint64_t sub_1BFE03384()
{
  unint64_t result = qword_1EB87EB78;
  if (!qword_1EB87EB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87EB78);
  }
  return result;
}

uint64_t sub_1BFE033D8@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return FormatSnippetCollection.init(from:)(a1, a2);
}

uint64_t FormatSnippetCollection.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520E9C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1BFE03B00(0, &qword_1EB880CC0, MEMORY[0x1E4FBB320]);
    sub_1BFE03CCC(&qword_1EB860C68, (unint64_t *)&unk_1EB85FD20);
    sub_1C1520AEC();
    sub_1BFE0354C(v8[6], &v7);
    long long v6 = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    *a2 = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFE0354C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v57 = a2;
  sub_1BFE03B00(0, &qword_1EB8870F0, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  long long v6 = (char *)v54 - v5;
  sub_1BFF1D9F4(0);
  uint64_t v61 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v63 = (uint64_t)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v55 = (void *)((char *)v54 - v11);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (void *)((char *)v54 - v13);
  uint64_t v65 = (void *)MEMORY[0x1E4FBC868];
  sub_1BFE03B60();
  uint64_t result = sub_1C151E3AC();
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    v54[1] = v2;
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v18 = *(void *)(v8 + 72);
    uint64_t v60 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    uint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v56 = a1;
    swift_bridgeObjectRetain();
    uint64_t v59 = v6;
    while (1)
    {
      sub_1BFF1D72C(v17, (uint64_t)v14);
      uint64_t v19 = *v14;
      uint64_t v20 = (uint64_t *)(*v14 + 16);
      swift_beginAccess();
      long long v21 = v65;
      if (v65[2])
      {
        uint64_t v22 = *(void *)(v19 + 24);
        uint64_t v23 = *v20;
        swift_bridgeObjectRetain();
        unint64_t v24 = sub_1BFEF2D8C(v23, v22);
        if (v25)
        {
          sub_1BFF1D72C(v21[7] + v24 * v18, (uint64_t)v6);
          uint64_t v26 = 0;
        }
        else
        {
          uint64_t v26 = 1;
        }
        uint64_t v27 = v61;
        (*v60)(v6, v26, 1, v61);
        swift_bridgeObjectRelease();
        if ((*v58)(v6, 1, v27) != 1)
        {
          swift_bridgeObjectRelease_n();
          char v51 = v55;
          sub_1BFF19F58((uint64_t)v6, (uint64_t)v55);
          type metadata accessor for FormatPackageError();
          sub_1C0BD45E8((unint64_t *)&qword_1EA198A90, (void (*)(uint64_t))type metadata accessor for FormatPackageError);
          swift_allocError();
          uint64_t v52 = *v51;
          void *v53 = *v14;
          v53[1] = v52;
          swift_storeEnumTagMultiPayload();
          swift_retain();
          swift_retain();
          swift_willThrow();
          sub_1BFF19EFC((uint64_t)v51);
          sub_1BFF19EFC((uint64_t)v14);
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        (*v60)(v6, 1, 1, v61);
      }
      uint64_t v62 = v17;
      uint64_t v28 = v18;
      uint64_t v29 = v16;
      sub_1BFE03A88((uint64_t)v6);
      uint64_t v30 = *v14;
      swift_beginAccess();
      uint64_t v31 = *(void *)(v30 + 16);
      uint64_t v32 = *(void *)(v30 + 24);
      long long v33 = v14;
      sub_1BFF1D72C((uint64_t)v14, v63);
      swift_bridgeObjectRetain();
      uint64_t v34 = v65;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v64 = v34;
      unint64_t v37 = sub_1BFEF2D8C(v31, v32);
      uint64_t v38 = v34[2];
      BOOL v39 = (v36 & 1) == 0;
      uint64_t v40 = v38 + v39;
      if (__OFADD__(v38, v39)) {
        break;
      }
      char v41 = v36;
      if (v34[3] >= v40)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1C106B63C();
        }
      }
      else
      {
        sub_1C1055C50(v40, isUniquelyReferenced_nonNull_native);
        unint64_t v42 = sub_1BFEF2D8C(v31, v32);
        if ((v41 & 1) != (v43 & 1)) {
          goto LABEL_26;
        }
        unint64_t v37 = v42;
      }
      uint64_t v14 = v33;
      uint64_t v44 = v64;
      uint64_t v45 = v29;
      if (v41)
      {
        uint64_t v18 = v28;
        sub_1C0BD4584(v63, v64[7] + v37 * v28);
      }
      else
      {
        v64[(v37 >> 6) + 8] |= 1 << v37;
        uint64_t v46 = (uint64_t *)(v44[6] + 16 * v37);
        *uint64_t v46 = v31;
        v46[1] = v32;
        uint64_t v18 = v28;
        sub_1BFF19F58(v63, v44[7] + v37 * v28);
        uint64_t v47 = v44[2];
        BOOL v48 = __OFADD__(v47, 1);
        uint64_t v49 = v47 + 1;
        if (v48) {
          goto LABEL_25;
        }
        v44[2] = v49;
        swift_bridgeObjectRetain();
      }
      uint64_t v65 = v44;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFF19EFC((uint64_t)v14);
      uint64_t v17 = v62 + v18;
      uint64_t v16 = v45 - 1;
      long long v6 = v59;
      if (!v16)
      {
        a1 = v56;
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
  }
  else
  {
    uint64_t v44 = v65;
LABEL_22:
    uint64_t v50 = v57;
    *uint64_t v57 = a1;
    v50[1] = v44;
  }
  return result;
}

uint64_t sub_1BFE03A88(uint64_t a1)
{
  sub_1BFE03B00(0, &qword_1EB8870F0, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BFE03B00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1BFF1D9F4(255);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1BFE03B60()
{
  if (!qword_1EB880C28)
  {
    sub_1BFF1D9F4(255);
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB880C28);
    }
  }
}

uint64_t sub_1BFE03BC8(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BFE03B00(0, &qword_1EB880CC0, MEMORY[0x1E4FBB320]);
  sub_1BFE03CCC(&qword_1EB860C60, &qword_1EB85FD18);
  sub_1C1520B2C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1BFE03CCC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFE03B00(255, &qword_1EB880CC0, MEMORY[0x1E4FBB320]);
    sub_1C0BD45E8(a2, sub_1BFF1D9F4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE03D78@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FormatCompilerPrimitiveProperty.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t FormatCompilerPrimitiveProperty.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v75 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v77 = (char *)&v74 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v76 = (char *)&v74 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v80 = (char *)&v74 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v81 = (char *)&v74 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v82 = (char *)&v74 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v84 = (char *)&v74 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v74 - v19;
  uint64_t v21 = *(void *)(a2 + 16);
  uint64_t v78 = *(void *)(a2 + 24);
  uint64_t v79 = v21;
  uint64_t v22 = _s10CodingKeysOMa_172();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v25 = swift_getWitnessTable();
  *(void *)&long long v90 = v22;
  *((void *)&v90 + 1) = WitnessTable;
  uint64_t v91 = v24;
  uint64_t v92 = v25;
  uint64_t v26 = type metadata accessor for FormatCodingKeysContainer();
  uint64_t v27 = swift_getWitnessTable();
  sub_1C152083C();
  swift_getWitnessTable();
  uint64_t v28 = type metadata accessor for VersionedKeyedEncodingContainer();
  uint64_t v86 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v74 - v29;
  uint64_t v32 = a1[3];
  uint64_t v31 = a1[4];
  long long v33 = __swift_project_boxed_opaque_existential_1(a1, v32);
  uint64_t v83 = a2;
  sub_1BFEFBD78(a2, (uint64_t)v33, v32, a2, v26, (uint64_t)&type metadata for FormatVersions.JazzkonC, v31, (uint64_t)v30, v27, (uint64_t)&off_1F1C39B68);
  uint64_t v34 = v93[1];
  char v35 = v93;
  uint64_t v88 = *v93;
  uint64_t v89 = v34;
  long long v90 = 0uLL;
  LOBYTE(v91) = 0;
  uint64_t v36 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v36 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_1C151928C();
  uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1EB93CAB0);
  uint64_t v39 = *(void *)(v37 - 8);
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
  char v41 = (char *)(v39 + 16);
  v40(v20, v38, v37);
  uint64_t v85 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  unint64_t v42 = v87;
  sub_1BFEFFFF0((uint64_t)&v88, (uint64_t)&v90, (uint64_t)v20, (uint64_t)sub_1C01B158C, 0, v28, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1A8]);
  if (v42)
  {
    sub_1BFEFEB68((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v30, v28);
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    char v43 = v40;
    uint64_t v44 = v35;
    uint64_t v45 = v35[3];
    uint64_t v88 = v35[2];
    uint64_t v89 = v45;
    long long v90 = xmmword_1C153AB20;
    LOBYTE(v91) = 0;
    uint64_t v46 = (uint64_t)v84;
    uint64_t v87 = v43;
    v43(v84, v38, v37);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BFEFFFF0((uint64_t)&v88, (uint64_t)&v90, v46, (uint64_t)sub_1C01B158C, 0, v28, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1A8]);
    sub_1BFEFEB68(v46, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v88 = sub_1BFE059FC();
    uint64_t v89 = v48;
    long long v90 = xmmword_1C1557FA0;
    LOBYTE(v91) = 0;
    uint64_t v49 = (uint64_t)v82;
    uint64_t v84 = v41;
    v87(v82, v38, v37);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BFE315E0((uint64_t)&v88, (uint64_t)&type metadata for FormatCodingEmptyDescriptiveStrategy, (uint64_t)&v90, v49, (uint64_t)sub_1C01B158C, 0, v28, (uint64_t)&type metadata for FormatCodingEmptyDescriptiveStrategy, (uint64_t)&protocol witness table for FormatCodingEmptyDescriptiveStrategy);
    sub_1BFEFEB68(v49, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    LOBYTE(v88) = FormatCompilerPrimitiveProperty.required.getter() & 1;
    long long v90 = xmmword_1C1557FB0;
    LOBYTE(v91) = 0;
    uint64_t v50 = v44;
    uint64_t v51 = (uint64_t)v81;
    uint64_t v52 = v87;
    v87(v81, v38, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BFE315E0((uint64_t)&v88, (uint64_t)&type metadata for FormatCodingTrueStrategy, (uint64_t)&v90, v51, (uint64_t)sub_1C01B158C, 0, v28, (uint64_t)&type metadata for FormatCodingTrueStrategy, (uint64_t)&protocol witness table for FormatCodingTrueStrategy);
    sub_1BFEFEB68(v51, type metadata accessor for FormatVersionRequirement);
    uint64_t v53 = (uint64_t)v50 + *(int *)(v83 + 48);
    long long v90 = xmmword_1C1557FD0;
    LOBYTE(v91) = 0;
    uint64_t v54 = (uint64_t)v80;
    v52(v80, v38, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BFE04994(v53, (uint64_t)&v90, v54, (uint64_t)sub_1C01B158C, 0, v28, v79, *(void *)(v78 + 16));
    uint64_t v55 = v37;
    sub_1BFEFEB68(v54, type metadata accessor for FormatVersionRequirement);
    uint64_t v56 = v83;
    LOBYTE(v88) = FormatCompilerPrimitiveProperty.deprecated.getter(v83) & 1;
    long long v90 = xmmword_1C1557FC0;
    LOBYTE(v91) = 0;
    if (qword_1EB887638 != -1) {
      swift_once();
    }
    uint64_t v57 = __swift_project_value_buffer(v37, (uint64_t)qword_1EB93CA98);
    uint64_t v58 = (uint64_t)v76;
    v87(v76, v57, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BFE315E0((uint64_t)&v88, (uint64_t)&type metadata for FormatCodingFalseStrategy, (uint64_t)&v90, v58, (uint64_t)sub_1C01B158C, 0, v28, (uint64_t)&type metadata for FormatCodingFalseStrategy, (uint64_t)&protocol witness table for FormatCodingFalseStrategy);
    uint64_t v59 = (uint64_t)v77;
    uint64_t v81 = 0;
    uint64_t v82 = v30;
    uint64_t v60 = v28;
    sub_1BFEFEB68(v58, type metadata accessor for FormatVersionRequirement);
    uint64_t v88 = sub_1BFE059F0(v56);
    sub_1BFE0583C();
    uint64_t v62 = v61;
    long long v90 = xmmword_1C1557FE0;
    LOBYTE(v91) = 0;
    uint64_t v63 = qword_1EB887628;
    swift_bridgeObjectRetain();
    if (v63 != -1) {
      swift_once();
    }
    uint64_t v80 = (char *)__swift_project_value_buffer(v55, (uint64_t)qword_1EB93CA68);
    uint64_t v64 = (void (*)(char *, char *, uint64_t))v87;
    ((void (*)(uint64_t))v87)(v59);
    swift_storeEnumTagMultiPayload();
    uint64_t v65 = sub_1C085F050(&qword_1EB88D3F8, (void (*)(uint64_t))sub_1BFE0583C);
    uint64_t v66 = v62;
    uint64_t v67 = v62;
    uint64_t v69 = v81;
    uint64_t v68 = v82;
    sub_1BFE315E0((uint64_t)&v88, v66, (uint64_t)&v90, v59, (uint64_t)sub_1C01B158C, 0, v60, v67, v65);
    sub_1BFEFEB68(v59, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    if (!v69)
    {
      uint64_t v70 = (uint64_t)v93 + *(int *)(v56 + 60);
      long long v90 = xmmword_1C1557FF0;
      LOBYTE(v91) = 0;
      uint64_t v71 = (uint64_t)v75;
      v64(v75, v80, v55);
      swift_storeEnumTagMultiPayload();
      uint64_t v72 = sub_1C1518CDC();
      uint64_t v73 = sub_1C085F050((unint64_t *)&qword_1EB884FD0, MEMORY[0x1E4FAAFC8]);
      sub_1BFE04994(v70, (uint64_t)&v90, v71, (uint64_t)sub_1C01B158C, 0, v60, v72, v73);
      sub_1BFEFEB68(v71, type metadata accessor for FormatVersionRequirement);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v68, v60);
  }
}

uint64_t sub_1BFE04994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v57 = a1;
  uint64_t v58 = a8;
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v47 = a3;
  uint64_t v59 = a2;
  uint64_t v12 = sub_1C151FD8C();
  uint64_t v55 = *(void *)(v12 - 8);
  uint64_t v56 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v54 = (char *)v43 - v13;
  uint64_t v53 = *(void *)(a7 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v44 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a6 + 16);
  uint64_t v16 = *(void *)(a6 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  __n128 v21 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v23 = (char *)v43 - v22;
  uint64_t v48 = a6;
  uint64_t v49 = v9;
  uint64_t v24 = (uint64_t *)(v9 + *(int *)(a6 + 44));
  uint64_t v25 = *v24;
  uint64_t v51 = v24[1];
  uint64_t v52 = v25;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v19 + 16))(v23, v59, AssociatedTypeWitness, v21);
  unint64_t v26 = (*(unsigned __int8 *)(v19 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v27 = (v20 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = (void *)swift_allocObject();
  v43[1] = v17;
  void v43[2] = v16;
  void v28[2] = v17;
  v28[3] = a7;
  v28[4] = v16;
  v28[5] = v58;
  uint64_t v29 = (char *)v28 + v26;
  uint64_t v31 = v53;
  uint64_t v30 = v54;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v29, v23, AssociatedTypeWitness);
  uint64_t v32 = a7;
  uint64_t v33 = v51;
  uint64_t v34 = (void *)((char *)v28 + v27);
  uint64_t v36 = v55;
  uint64_t v35 = v56;
  *uint64_t v34 = v52;
  v34[1] = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v30, v57, v35);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v30, 1, v32) == 1)
  {
    swift_retain();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v30, v35);
  }
  else
  {
    uint64_t v38 = v44;
    uint64_t v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v31 + 32))(v44, v30, v32);
    MEMORY[0x1F4188790](v39);
    uint64_t v40 = v46;
    v43[-4] = v45;
    v43[-3] = v40;
    v43[-2] = sub_1C146B890;
    v43[-1] = v28;
    swift_retain();
    uint64_t v41 = v50;
    char v42 = sub_1BFE31788(v47, v59, (uint64_t)sub_1C146B45C, (uint64_t)&v43[-6], v48);
    if (!v41 && (v42 & 1) != 0) {
      sub_1C1520BAC();
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v38, v32);
    return swift_release();
  }
}

uint64_t FormatCompilerPrimitiveProperty.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v78 = a4;
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v69 = &v61[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  uint64_t v70 = &v61[-v10];
  uint64_t v75 = sub_1C151FD8C();
  uint64_t v85 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v68 = &v61[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  uint64_t v79 = a2;
  uint64_t v80 = &v61[-v13];
  uint64_t v71 = a3;
  uint64_t v14 = _s10CodingKeysOMa_172();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v17 = swift_getWitnessTable();
  *(void *)&long long v82 = v14;
  *((void *)&v82 + 1) = WitnessTable;
  uint64_t v73 = v16;
  uint64_t v74 = WitnessTable;
  uint64_t v83 = v16;
  uint64_t v84 = v17;
  uint64_t v72 = v17;
  uint64_t v18 = type metadata accessor for FormatCodingKeysContainer();
  swift_getWitnessTable();
  uint64_t v19 = sub_1C152072C();
  uint64_t v76 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  __n128 v21 = &v61[-v20];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v22 = v77;
  sub_1C1520EBC();
  uint64_t v23 = v22;
  if (v22) {
    goto LABEL_16;
  }
  uint64_t v65 = v18;
  uint64_t v64 = v14;
  uint64_t v77 = (char *)v19;
  uint64_t v66 = 0;
  uint64_t v24 = a1[3];
  uint64_t v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  uint64_t v25 = sub_1C1520EAC();
  uint64_t v26 = Dictionary<>.errorOnUnknownKeys.getter(v25);
  swift_bridgeObjectRelease();
  uint64_t v27 = v78;
  uint64_t v28 = (uint64_t)v21;
  uint64_t v29 = v75;
  uint64_t v30 = v76;
  if (v26)
  {
    uint64_t v23 = (char *)sub_1C152070C();
    if (MEMORY[0x1C18C6870](v23, v65))
    {
      uint64_t v63 = v28;
      uint64_t v29 = 0;
      uint64_t v31 = v23 + 48;
      uint64_t v32 = v65;
      while (1)
      {
        uint64_t v28 = sub_1C151ECDC();
        sub_1C151EC7C();
        if ((v28 & 1) == 0) {
          break;
        }
        uint64_t v33 = v29 + 1;
        if (__OFADD__(v29, 1)) {
          goto LABEL_19;
        }
        uint64_t v34 = v23;
        uint64_t v36 = *((void *)v31 - 2);
        uint64_t v35 = *((void *)v31 - 1);
        char v37 = *v31;
        *(void *)&long long v82 = v36;
        *((void *)&v82 + 1) = v35;
        LOBYTE(v83) = v37;
        sub_1BFE94AB4(v36, v35, v37);
        uint64_t v38 = sub_1C0D990EC(v32);
        if (v39)
        {
          uint64_t v44 = v39;
          uint64_t v45 = v38;
          swift_bridgeObjectRelease();
          uint64_t v46 = sub_1C0D98F50(v64, v74, v73, v72);
          sub_1C02570B4();
          uint64_t v23 = (char *)swift_allocError();
          *(void *)uint64_t v47 = v45;
          *(void *)(v47 + 8) = v44;
          *(void *)(v47 + 16) = v46;
          *(_OWORD *)(v47 + 24) = xmmword_1C15363B0;
          swift_willThrow();
          sub_1BFE94AD4(v82, *((uint64_t *)&v82 + 1), v83);
          (*(void (**)(uint64_t, char *))(v76 + 8))(v63, v77);
          goto LABEL_15;
        }
        sub_1BFE94AD4(v36, v35, v37);
        uint64_t v23 = v34;
        uint64_t v40 = MEMORY[0x1C18C6870](v34, v32);
        ++v29;
        v31 += 24;
        uint64_t v27 = v78;
        if (v33 == v40)
        {
          swift_bridgeObjectRelease();
          uint64_t v29 = v75;
          uint64_t v30 = v76;
          uint64_t v28 = v63;
          goto LABEL_11;
        }
      }
      sub_1C152016C();
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    swift_bridgeObjectRelease();
  }
LABEL_11:
  long long v82 = 0uLL;
  LOBYTE(v83) = 0;
  uint64_t v31 = v77;
  uint64_t v41 = v66;
  uint64_t v42 = sub_1C152069C();
  uint64_t v23 = (char *)v41;
  if (!v41)
  {
    uint64_t v74 = v42;
    uint64_t v75 = v43;
    long long v82 = xmmword_1C153AB20;
    LOBYTE(v83) = 0;
    uint64_t v72 = sub_1C152069C();
    uint64_t v73 = v48;
    long long v82 = xmmword_1C1557FA0;
    LOBYTE(v83) = 0;
    sub_1BFE7A5A8((uint64_t)&type metadata for FormatCodingEmptyDescriptiveStrategy, (uint64_t)&protocol witness table for FormatCodingEmptyDescriptiveStrategy, (uint64_t)v81);
    uint64_t v65 = v81[0];
    uint64_t v66 = v81[1];
    long long v82 = xmmword_1C1557FB0;
    LOBYTE(v83) = 0;
    sub_1BFE7A5A8((uint64_t)&type metadata for FormatCodingTrueStrategy, (uint64_t)&protocol witness table for FormatCodingTrueStrategy, (uint64_t)v81);
    int v49 = LOBYTE(v81[0]);
    long long v82 = xmmword_1C1557FD0;
    LOBYTE(v83) = 0;
    sub_1C152065C();
    LODWORD(v64) = v49;
    long long v82 = xmmword_1C1557FC0;
    LOBYTE(v83) = 0;
    sub_1BFE7A5A8((uint64_t)&type metadata for FormatCodingFalseStrategy, (uint64_t)&protocol witness table for FormatCodingFalseStrategy, (uint64_t)v81);
    uint64_t v23 = 0;
LABEL_20:
    uint64_t v52 = v28;
    uint64_t v53 = v29;
    int v54 = LOBYTE(v81[0]);
    sub_1BFEFF3E8(0, &qword_1EB890110, (uint64_t (*)(void))sub_1C007C210, (uint64_t)&type metadata for FormatCompilerFlag, MEMORY[0x1E4FBB510]);
    sub_1BFE0583C();
    uint64_t v56 = v55;
    long long v82 = xmmword_1C1557FE0;
    LOBYTE(v83) = 0;
    uint64_t v57 = sub_1C085F050(&qword_1EB88D3F8, (void (*)(uint64_t))sub_1BFE0583C);
    sub_1BFE7A5A8(v56, v57, (uint64_t)v81);
    if (!v23)
    {
      uint64_t v63 = v81[0];
      sub_1C1518CDC();
      long long v82 = xmmword_1C1557FF0;
      LOBYTE(v83) = 0;
      sub_1C085F050(&qword_1EB884FD8, MEMORY[0x1E4FAAFC8]);
      uint64_t v58 = (uint64_t)v70;
      sub_1C152065C();
      int v62 = v54;
      (*(void (**)(uint64_t, char *))(v76 + 8))(v52, v31);
      uint64_t v59 = (uint64_t)v68;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v85 + 32))(v68, v80, v53);
      uint64_t v60 = v69;
      sub_1BFE30878(v58, (uint64_t)v69, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      sub_1BFE058CC(v74, v75, v72, v73, v65, v66, v64, v59, v27, v62, v63, (uint64_t)v60);
      uint64_t v50 = (uint64_t)v67;
      return __swift_destroy_boxed_opaque_existential_1(v50);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v85 + 8))(v80, v29);
    (*(void (**)(uint64_t, char *))(v76 + 8))(v52, v31);
    goto LABEL_15;
  }
  (*(void (**)(uint64_t, char *))(v30 + 8))(v28, v31);
LABEL_15:
  a1 = v67;
LABEL_16:
  sub_1C0038728(a1, (uint64_t)v23);
  swift_willThrow();

  uint64_t v50 = (uint64_t)a1;
  return __swift_destroy_boxed_opaque_existential_1(v50);
}

uint64_t _s10CodingKeysOMa_172()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1BFE0583C()
{
  if (!qword_1EB88D400[0])
  {
    sub_1C007C1BC();
    sub_1C007C168();
    sub_1C007C264();
    sub_1C007C210();
    unint64_t v0 = type metadata accessor for FormatCodingIgnoreSetStrategy();
    if (!v1) {
      atomic_store(v0, qword_1EB88D400);
    }
  }
}

uint64_t sub_1BFE058CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, uint64_t a12)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 48) = a7;
  uint64_t v14 = (int *)type metadata accessor for FormatCompilerPrimitiveProperty();
  uint64_t v15 = a9 + v14[12];
  uint64_t v16 = sub_1C151FD8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a8, v16);
  *(unsigned char *)(a9 + v14[13]) = a10;
  *(void *)(a9 + v14[14]) = a11;
  return sub_1BFE30960(a12, a9 + v14[15], (uint64_t)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE79E3C);
}

uint64_t type metadata accessor for FormatCompilerPrimitiveProperty()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FormatCompilerPrimitiveProperty.required.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_1BFE059F0(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 56));
}

uint64_t sub_1BFE059FC()
{
  return *(void *)(v0 + 32);
}

uint64_t FormatCompilerPrimitiveProperty.deprecated.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

uint64_t sub_1BFE05A10(void *a1)
{
  return FormatColorBinding.encode(to:)(a1);
}

uint64_t FormatColorBinding.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v50 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v51 = (char *)&v47 - v6;
  MEMORY[0x1F4188790](v7);
  int v49 = (char *)&v47 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v47 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v47 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v47 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v47 - v19;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void *)v1;
  uint64_t v52 = *(void *)(v1 + 8);
  uint64_t v53 = v24;
  uint64_t v48 = *(void *)(v1 + 16);
  uint64_t v25 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  unint64_t v28 = sub_1BFEB6A24();
  int v54 = v23;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatColorBinding, v29, v26, (uint64_t)&type metadata for FormatColorBinding, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v23, v28, (uint64_t)&off_1F1C39B68);
  switch(v25)
  {
    case 1:
      if (qword_1EB887658 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_1C151928C();
      uint64_t v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1EB93CAF8);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v17, v35, v34);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = (uint64_t)v54;
      sub_1BFC4D9D4(1, v53, (uint64_t)v17);
      uint64_t v33 = (uint64_t)v17;
      break;
    case 2:
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_1C151928C();
      uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB93CA50);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v14, v37, v36);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = (uint64_t)v54;
      sub_1C06928E0(2, v53, (uint64_t)v14);
      goto LABEL_23;
    case 3:
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v38 = sub_1C151928C();
      uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v11, v39, v38);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = (uint64_t)v54;
      sub_1BFE061E4(3, v53, v52, v48, (uint64_t)v11);
      uint64_t v33 = (uint64_t)v11;
      break;
    case 4:
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_1C151928C();
      uint64_t v41 = __swift_project_value_buffer(v40, (uint64_t)qword_1EB93CA98);
      uint64_t v14 = v49;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v49, v41, v40);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = (uint64_t)v54;
      sub_1C0692A74(4, v53, v52, (uint64_t)v14);
      goto LABEL_23;
    case 5:
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v42 = sub_1C151928C();
      uint64_t v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1EB93CA80);
      uint64_t v14 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v51, v43, v42);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = (uint64_t)v54;
      sub_1C0692C14(5, v53, v52, (uint64_t)v14);
      goto LABEL_23;
    case 6:
      if (qword_1EB887668 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_1C151928C();
      uint64_t v45 = __swift_project_value_buffer(v44, (uint64_t)qword_1EB93CB10);
      uint64_t v14 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v50, v45, v44);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = (uint64_t)v54;
      sub_1C0692DAC(6, v53, v52, (uint64_t)v14);
LABEL_23:
      uint64_t v33 = (uint64_t)v14;
      break;
    default:
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_1C151928C();
      uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v20, v31, v30);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = (uint64_t)v54;
      sub_1BFE06424(0, v53, (uint64_t)v20);
      uint64_t v33 = (uint64_t)v20;
      break;
  }
  sub_1BFEFEB68(v33, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68(v32, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFE061E4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  void v16[2] = sub_1C08FDF90;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE063D0();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFE0637C();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE0637C()
{
  unint64_t result = qword_1EB85BA70;
  if (!qword_1EB85BA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BA70);
  }
  return result;
}

unint64_t sub_1BFE063D0()
{
  unint64_t result = qword_1EB866260;
  if (!qword_1EB866260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866260);
  }
  return result;
}

uint64_t sub_1BFE06424(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FDF90;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE063D0();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE065B8();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE065B8()
{
  unint64_t result = qword_1EB85BD20;
  if (!qword_1EB85BD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BD20);
  }
  return result;
}

uint64_t sub_1BFE0660C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatContentSlotItemObject.Resolved.init(from:)(a1, a2);
}

uint64_t FormatContentSlotItemObject.Resolved.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v144 = a2;
  uint64_t ObjectType = (void *)type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1F4188790](ObjectType);
  uint64_t v138 = (char *)v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v135);
  uint64_t v137 = (char *)v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFECA458(0, &qword_1EB865D40, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v111 = (uint64_t)v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v130 = (char *)v108 - v8;
  uint64_t v128 = type metadata accessor for FormatPuzzleType.Overrides(0);
  uint64_t v121 = *(void *)(v128 - 8);
  MEMORY[0x1F4188790](v128);
  uint64_t v120 = (uint64_t)v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE07F38(0, (unint64_t *)&unk_1EB863F80, (uint64_t)&qword_1EB890220, (uint64_t)&protocolRef_FCPuzzleTypeProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  uint64_t v142 = v10;
  uint64_t v122 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v141 = (char *)v108 - v11;
  sub_1BFE07F38(0, (unint64_t *)&unk_1EB863F30, (uint64_t)&qword_1EB8901B0, (uint64_t)&protocolRef_FCPuzzleProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  uint64_t v136 = v12;
  uint64_t v145 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v143 = (char *)v108 - v13;
  uint64_t v133 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v133);
  long long v134 = (char *)v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE07F38(0, (unint64_t *)&unk_1EB85ABD0, (uint64_t)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  uint64_t v132 = v15;
  uint64_t v124 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v131 = (char *)v108 - v16;
  sub_1BFE07F38(0, (unint64_t *)&unk_1EB85E4C0, (uint64_t)&qword_1EB87B090, 0x1E4F7E4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
  uint64_t v125 = v17;
  uint64_t v118 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v129 = (char *)v108 - v18;
  sub_1BFE07F38(0, &qword_1EB863F10, (uint64_t)&qword_1EB87A120, 0x1E4F7E270, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
  uint64_t v116 = v19;
  uint64_t v112 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v113 = (char *)v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v110 = (char *)v108 - v22;
  sub_1BFE07F38(0, &qword_1EB85AC10, (uint64_t)&qword_1EB85C560, (uint64_t)&protocolRef_FCNewsAppConfiguration, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  uint64_t v115 = v23;
  uint64_t v109 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v114 = (char *)v108 - v24;
  sub_1BFECA458(0, &qword_1EB882F00, (void (*)(uint64_t))type metadata accessor for FormatArticleOverrides);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v123 = (char *)v108 - v26;
  uint64_t v127 = type metadata accessor for FormatArticleOverrides();
  uint64_t v119 = *(void *)(v127 - 8);
  MEMORY[0x1F4188790](v127);
  uint64_t v117 = (uint64_t)v108 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE07F38(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  uint64_t v139 = v28;
  uint64_t v126 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v140 = (char *)v108 - v29;
  sub_1BFE09B5C(0, &qword_1EB86B6B8, MEMORY[0x1E4FBBDC0]);
  uint64_t v147 = *(void *)(v30 - 8);
  uint64_t v148 = v30;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)v108 - v31;
  uint64_t v33 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)v108 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (void *)((char *)v108 - v37);
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)v108 - v40;
  uint64_t v42 = a1[3];
  uint64_t v149 = (uint64_t)a1;
  uint64_t v43 = a1;
  uint64_t v44 = v32;
  __swift_project_boxed_opaque_existential_1(v43, v42);
  sub_1BFE09B08();
  uint64_t v45 = v150;
  sub_1C1520EBC();
  if (v45)
  {
    uint64_t v48 = v149;
  }
  else
  {
    v108[0] = v35;
    v108[1] = v33;
    uint64_t v46 = v145;
    uint64_t v150 = v41;
    LOBYTE(v153[0]) = 0;
    sub_1BFE09BE0();
    uint64_t v47 = v148;
    sub_1C15206EC();
    switch((char)v154)
    {
      case 1:
        LOBYTE(v153[0]) = 2;
        sub_1C0E766F4();
        sub_1C15206EC();
        uint64_t v54 = v155;
        uint64_t ObjectType = v154;
        uint64_t v55 = v156;
        uint64_t v56 = v157;
        LOBYTE(v154) = 1;
        sub_1C0BF5CA8();
        uint64_t v57 = v129;
        uint64_t v58 = v125;
        sub_1C15206EC();
        uint64_t v145 = 0;
        uint64_t v142 = v55;
        uint64_t v143 = v32;
        sub_1C151948C();
        uint64_t v77 = (char *)v154;
        if (v54)
        {
          uint64_t v140 = (char *)objc_allocWithZone(MEMORY[0x1E4F7E510]);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          uint64_t v78 = v77;
          uint64_t v79 = (void *)sub_1C151E5EC();
          swift_bridgeObjectRelease();
          uint64_t v141 = v77;
          if (!v56)
          {
            long long v90 = 0;
            uint64_t v80 = v118;
            uint64_t v81 = (void *)v108[0];
            goto LABEL_34;
          }
          uint64_t v80 = v118;
          uint64_t v81 = (void *)v108[0];
LABEL_32:
          long long v90 = (void *)sub_1C151E5EC();
          swift_bridgeObjectRelease();
LABEL_34:
          id v91 = objc_msgSend(v140, sel_initWithTitle_issueDescription_, v79, v90);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          id v92 = objc_allocWithZone(MEMORY[0x1E4F7E4F8]);
          uint64_t v93 = v141;
          id v94 = objc_msgSend(v92, sel_initWithIssue_overrides_, v141, v91);

          (*(void (**)(char *, uint64_t))(v80 + 8))(v129, v58);
          (*(void (**)(char *, uint64_t))(v147 + 8))(v143, v148);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *uint64_t v81 = v94;
          swift_storeEnumTagMultiPayload();
          uint64_t v95 = (uint64_t)v81;
          goto LABEL_35;
        }
        if (v56)
        {
          uint64_t v140 = (char *)objc_allocWithZone(MEMORY[0x1E4F7E510]);
          uint64_t v141 = v77;
          uint64_t v89 = v77;
          swift_bridgeObjectRetain_n();
          uint64_t v79 = 0;
          uint64_t v80 = v118;
          uint64_t v81 = (void *)v108[0];
          goto LABEL_32;
        }
        (*(void (**)(char *, uint64_t))(v118 + 8))(v57, v58);
        (*(void (**)(char *, uint64_t))(v147 + 8))(v143, v148);
        swift_bridgeObjectRelease_n();
        uint64_t v102 = v108[0];
        *(void *)v108[0] = v77;
        swift_storeEnumTagMultiPayload();
        uint64_t v95 = v102;
LABEL_35:
        uint64_t v63 = v150;
        sub_1BFE07F94(v95, (uint64_t)v150, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
        uint64_t v96 = v149;
        uint64_t v97 = v144;
LABEL_39:
        sub_1BFE07F94((uint64_t)v63, v97, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
        uint64_t v48 = v96;
        break;
      case 2:
        LOBYTE(v154) = 1;
        sub_1C0BF5C24();
        uint64_t v60 = v131;
        uint64_t v59 = v132;
        sub_1C15206EC();
        sub_1C151948C();
        (*(void (**)(char *, uint64_t))(v124 + 8))(v60, v59);
        (*(void (**)(char *, uint64_t))(v147 + 8))(v32, v47);
        *uint64_t v38 = v154;
        goto LABEL_36;
      case 3:
        LOBYTE(v154) = 1;
        sub_1BFE07FFC((unint64_t *)&unk_1EB85B7B8, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
        uint64_t v61 = v134;
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v147 + 8))(v32, v47);
        uint64_t v62 = (uint64_t)v61;
        uint64_t v63 = v150;
        sub_1BFE07F94(v62, (uint64_t)v150, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
        goto LABEL_15;
      case 4:
        LOBYTE(v154) = 1;
        sub_1C120FA24();
        uint64_t v64 = v136;
        sub_1C15206EC();
        char v158 = 2;
        sub_1C0A94710();
        sub_1C152065C();
        uint64_t v65 = v147;
        sub_1C0CB0418((uint64_t)&v154, (uint64_t)v152);
        sub_1C0CB0418((uint64_t)v152, (uint64_t)v153);
        if (sub_1C065DA58((uint64_t)v153) == 1)
        {
          long long v82 = v143;
          sub_1C151948C();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v82, v64);
          (*(void (**)(char *, uint64_t))(v65 + 8))(v44, v47);
          uint64_t v83 = (void *)v151[0];
        }
        else
        {
          sub_1C151948C();
          uint64_t ObjectType = (void *)swift_getObjectType();
          sub_1C0CB0418((uint64_t)v152, (uint64_t)v151);
          uint64_t ObjectType = FCPuzzleProviding.overridden(by:)((uint64_t)v151);
          swift_unknownObjectRelease();
          sub_1C0153D20((uint64_t *)v152);
          (*(void (**)(char *, uint64_t))(v46 + 8))(v143, v64);
          (*(void (**)(char *, uint64_t))(v65 + 8))(v32, v47);
          uint64_t v83 = ObjectType;
        }
        *uint64_t v38 = v83;
        goto LABEL_36;
      case 5:
        LOBYTE(v154) = 1;
        sub_1C120F9A0();
        sub_1C15206EC();
        LOBYTE(v154) = 2;
        sub_1BFE07FFC(&qword_1EB86C5B0, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
        uint64_t v66 = v128;
        sub_1C152065C();
        uint64_t v84 = (uint64_t)v130;
        int v85 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v121 + 48))(v130, 1, v66);
        uint64_t v86 = v122;
        if (v85 == 1)
        {
          sub_1BFE0B8C0(v84, &qword_1EB865D40, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
          uint64_t v87 = v141;
          uint64_t v88 = v142;
          sub_1C151948C();
          (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v88);
          (*(void (**)(char *, uint64_t))(v147 + 8))(v44, v47);
          *uint64_t v38 = v154;
        }
        else
        {
          sub_1BFE07F94(v84, v120, type metadata accessor for FormatPuzzleType.Overrides);
          LOBYTE(v154) = 4;
          sub_1BFE0E864();
          sub_1C15206EC();
          sub_1C151948C();
          uint64_t v143 = v44;
          swift_getObjectType();
          uint64_t v145 = 0;
          uint64_t v99 = v111;
          sub_1BFECBC20(v120, v111, type metadata accessor for FormatPuzzleType.Overrides);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v121 + 56))(v99, 0, 1, v128);
          sub_1C151948C();
          uint64_t v100 = v153[0];
          id v101 = FCPuzzleTypeProviding.overridden(by:assetManager:)(v99, v153[0]);
          swift_unknownObjectRelease();

          sub_1BFE0B8C0(v99, &qword_1EB865D40, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
          (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v116);
          sub_1BFE0AD74(v120, type metadata accessor for FormatPuzzleType.Overrides);
          (*(void (**)(char *, uint64_t))(v86 + 8))(v141, v142);
          (*(void (**)(char *, uint64_t))(v147 + 8))(v143, v47);
          *uint64_t v38 = v101;
        }
LABEL_36:
        swift_storeEnumTagMultiPayload();
        uint64_t v76 = (uint64_t)v38;
        goto LABEL_37;
      case 6:
        LOBYTE(v154) = 1;
        sub_1BFE07FFC(&qword_1EA1AD0F0, (void (*)(uint64_t))type metadata accessor for PuzzleStatistic);
        uint64_t v67 = v137;
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v147 + 8))(v32, v47);
        uint64_t v68 = (uint64_t)v67;
        uint64_t v63 = v150;
        sub_1BFE07F94(v68, (uint64_t)v150, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        goto LABEL_15;
      case 7:
        LOBYTE(v154) = 1;
        sub_1BFE07FFC(&qword_1EB85EAA8, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Resolved);
        uint64_t v69 = v138;
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v147 + 8))(v32, v47);
        uint64_t v70 = (uint64_t)v69;
        uint64_t v63 = v150;
        sub_1BFE07F94(v70, (uint64_t)v150, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
        goto LABEL_15;
      case 8:
        LOBYTE(v153[0]) = 1;
        sub_1BFE38DB4();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v147 + 8))(v32, v47);
        uint64_t v71 = v155;
        char v72 = v156;
        uint64_t v63 = v150;
        *uint64_t v150 = v154;
        v63[1] = v71;
        *((unsigned char *)v63 + 16) = v72;
LABEL_15:
        swift_storeEnumTagMultiPayload();
        goto LABEL_38;
      default:
        uint64_t ObjectType = v38;
        LOBYTE(v154) = 1;
        sub_1BFE0AB18();
        uint64_t v51 = v139;
        uint64_t v50 = v140;
        sub_1C15206EC();
        LOBYTE(v154) = 2;
        sub_1BFE07FFC(qword_1EB88A570, (void (*)(uint64_t))type metadata accessor for FormatArticleOverrides);
        uint64_t v52 = (uint64_t)v123;
        uint64_t v53 = v127;
        sub_1C152065C();
        int v73 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v52, 1, v53);
        uint64_t v74 = v126;
        if (v73 == 1)
        {
          sub_1BFE0B8C0(v52, &qword_1EB882F00, (void (*)(uint64_t))type metadata accessor for FormatArticleOverrides);
          sub_1C151948C();
          (*(void (**)(char *, uint64_t))(v74 + 8))(v50, v51);
          (*(void (**)(char *, uint64_t))(v147 + 8))(v32, v47);
          uint64_t v75 = ObjectType;
          *uint64_t ObjectType = v154;
        }
        else
        {
          sub_1BFE07F94(v52, v117, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
          LOBYTE(v154) = 3;
          sub_1BFE0E7E0();
          sub_1C15206EC();
          LOBYTE(v154) = 4;
          sub_1BFE0E864();
          uint64_t v98 = v110;
          sub_1C15206EC();
          sub_1C151948C();
          uint64_t v143 = v32;
          swift_getObjectType();
          uint64_t v145 = 0;
          sub_1C151948C();
          char v103 = v153[0];
          sub_1C151948C();
          uint64_t v104 = v152[0];
          uint64_t v105 = v117;
          id v106 = FCHeadlineProviding.overridden(by:configuration:assetManager:routeURL:)(v117, (uint64_t)v103, v152[0], v117 + *(int *)(v127 + 36));
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          (*(void (**)(char *, uint64_t))(v112 + 8))(v98, v116);
          (*(void (**)(char *, uint64_t))(v109 + 8))(v114, v115);
          sub_1BFE0AD74(v105, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
          (*(void (**)(char *, uint64_t))(v126 + 8))(v140, v139);
          (*(void (**)(char *, uint64_t))(v147 + 8))(v143, v47);
          char v107 = ObjectType;
          *uint64_t ObjectType = v106;
          uint64_t v75 = v107;
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v76 = (uint64_t)v75;
LABEL_37:
        uint64_t v63 = v150;
        sub_1BFE07F94(v76, (uint64_t)v150, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
LABEL_38:
        uint64_t v96 = v149;
        uint64_t v97 = v144;
        goto LABEL_39;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1(v48);
}

void sub_1BFE07F38(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1C15194BC();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1BFE07F94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE07FFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void FormatContentSlotItemObject.Resolved.encode(to:)(void *a1)
{
  uint64_t v150 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1F4188790](v150);
  unint64_t v156 = (unint64_t)&v126 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v147);
  uint64_t v155 = (uint64_t)&v126 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = type metadata accessor for FormatPuzzleType.Overrides(0);
  MEMORY[0x1F4188790](v135);
  uint64_t v136 = (uint64_t *)((char *)&v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE07F38(0, (unint64_t *)&unk_1EB863F80, (uint64_t)&qword_1EB890220, (uint64_t)&protocolRef_FCPuzzleTypeProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  uint64_t v152 = *(void *)(v5 - 8);
  uint64_t v153 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v151 = (char *)&v126 - v6;
  sub_1BFE07F38(0, (unint64_t *)&unk_1EB863F30, (uint64_t)&qword_1EB8901B0, (uint64_t)&protocolRef_FCPuzzleProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  uint64_t v148 = *(void *)(v7 - 8);
  uint64_t v149 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v146 = (char *)&v126 - v8;
  uint64_t v139 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v139);
  uint64_t v154 = (uint64_t)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE07F38(0, (unint64_t *)&unk_1EB85ABD0, (uint64_t)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  uint64_t v144 = *(void *)(v10 - 8);
  uint64_t v145 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v143 = (char *)&v126 - v11;
  sub_1BFE07F38(0, (unint64_t *)&unk_1EB85E4C0, (uint64_t)&qword_1EB87B090, 0x1E4F7E4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
  uint64_t v141 = *(void *)(v12 - 8);
  uint64_t v142 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v140 = (char *)&v126 - v13;
  sub_1BFC94D0C(0, (unint64_t *)&unk_1EB85E4D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB160]);
  uint64_t v129 = v14;
  uint64_t v131 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v128 = (char *)&v126 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v126 = (char *)&v126 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v127 = (char *)&v126 - v19;
  sub_1BFECA458(0, &qword_1EB882F00, (void (*)(uint64_t))type metadata accessor for FormatArticleOverrides);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v134 = (uint64_t)&v126 - v21;
  uint64_t v22 = type metadata accessor for FormatArticleOverrides();
  uint64_t v132 = *(void *)(v22 - 8);
  uint64_t v133 = v22;
  MEMORY[0x1F4188790](v22);
  uint64_t v130 = (uint64_t)&v126 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = sub_1C151829C();
  uint64_t v183 = *(void *)(v162 - 8);
  MEMORY[0x1F4188790](v162);
  uint64_t v157 = (char *)&v126 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE07F38(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  uint64_t v137 = *(void *)(v25 - 8);
  uint64_t v138 = v25;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v126 - v26;
  uint64_t v28 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v126 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE09B5C(0, &qword_1EB86B928, MEMORY[0x1E4FBBDE0]);
  uint64_t v32 = v31;
  uint64_t v159 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)&v126 - v33;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE09B08();
  char v161 = v34;
  sub_1C1520F0C();
  sub_1BFECBC20(v160, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v36 = v162;
  uint64_t v37 = v183;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v41 = *(void **)v30;
      LOBYTE(v173) = 1;
      LOBYTE(v164) = 0;
      sub_1BFE09C34();
      uint64_t v42 = v161;
      uint64_t v43 = v158;
      sub_1C152080C();
      if (!v43)
      {
        *(void *)&long long v173 = v41;
        uint64_t v78 = qword_1EB85E858;
        id v79 = v41;
        if (v78 != -1) {
          swift_once();
        }
        uint64_t v80 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB85E838);
        uint64_t v81 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 16))(v157, v80, v36);
        MEMORY[0x1F4188790](v81);
        *(&v126 - 2) = (char *)sub_1BFC39268(0, (unint64_t *)&qword_1EB87B090);
        swift_getKeyPath();
        long long v82 = v140;
        sub_1C151947C();

        LOBYTE(v173) = 1;
        sub_1C0BF5EF8();
        uint64_t v83 = v142;
        sub_1C152080C();
        (*(void (**)(char *, uint64_t))(v141 + 8))(v82, v83);
        id v99 = v79;
        id v100 = objc_msgSend(v99, sel_title);
        uint64_t v101 = sub_1C151E62C();
        uint64_t v103 = v102;

        id v104 = objc_msgSend(v99, sel_issueDescription);
        uint64_t v183 = 0;
        id v105 = v104;
        uint64_t v106 = sub_1C151E62C();
        uint64_t v108 = v107;

        *(void *)&long long v173 = v101;
        *((void *)&v173 + 1) = v103;
        *(void *)&long long v174 = v106;
        *((void *)&v174 + 1) = v108;
        LOBYTE(v164) = 2;
        sub_1C0E76748();
        sub_1C152080C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v159 + 8))(v42, v32);

      return;
    case 2:
      uint64_t v44 = *(void *)v30;
      LOBYTE(v173) = 2;
      LOBYTE(v164) = 0;
      sub_1BFE09C34();
      uint64_t v45 = v32;
      uint64_t v46 = v161;
      uint64_t v47 = v158;
      sub_1C152080C();
      if (v47) {
        goto LABEL_14;
      }
      *(void *)&long long v173 = v44;
      uint64_t v48 = qword_1EB85E820;
      swift_unknownObjectRetain();
      if (v48 != -1) {
        swift_once();
      }
      uint64_t v49 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB85AAB0);
      uint64_t v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 16))(v157, v49, v36);
      MEMORY[0x1F4188790](v50);
      *(&v126 - 2) = (char *)sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A160);
      swift_getKeyPath();
      uint64_t v51 = v143;
      sub_1C151947C();
      LOBYTE(v173) = 1;
      sub_1C0BF5E74();
      uint64_t v52 = v145;
      sub_1C152080C();
      swift_unknownObjectRelease();
      uint64_t v53 = v144;
      goto LABEL_38;
    case 3:
      uint64_t v54 = (uint64_t)v30;
      uint64_t v55 = v154;
      sub_1BFE07F94(v54, v154, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      LOBYTE(v173) = 3;
      LOBYTE(v164) = 0;
      sub_1BFE09C34();
      uint64_t v42 = v161;
      uint64_t v56 = v158;
      sub_1C152080C();
      if (!v56)
      {
        LOBYTE(v173) = 1;
        sub_1BFE07FFC(&qword_1EB85B7B0, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
        sub_1C152080C();
      }
      uint64_t v57 = type metadata accessor for FormatWebEmbed.Resolved;
      goto LABEL_24;
    case 4:
      uint64_t v58 = *(void *)v30;
      LOBYTE(v173) = 4;
      LOBYTE(v164) = 0;
      sub_1BFE09C34();
      uint64_t v45 = v32;
      uint64_t v46 = v161;
      uint64_t v59 = v158;
      sub_1C152080C();
      if (v59)
      {
LABEL_14:
        (*(void (**)(char *, uint64_t))(v159 + 8))(v46, v45);
        goto LABEL_17;
      }
      *(void *)&long long v173 = v58;
      uint64_t v84 = qword_1EB863CF0;
      swift_unknownObjectRetain_n();
      if (v84 != -1) {
        swift_once();
      }
      uint64_t v85 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB863CD0);
      uint64_t v86 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 16))(v157, v85, v36);
      MEMORY[0x1F4188790](v86);
      *(&v126 - 2) = (char *)sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB8901B0);
      swift_getKeyPath();
      uint64_t v87 = v146;
      sub_1C151947C();
      swift_unknownObjectRelease();
      char v182 = 1;
      sub_1C120FB58();
      uint64_t v88 = v149;
      sub_1C152080C();
      (*(void (**)(char *, uint64_t))(v148 + 8))(v87, v88);
      uint64_t v109 = (void *)swift_unknownObjectRetain();
      sub_1C0CB1130(v109, (uint64_t *)&v173);
      long long v170 = v179;
      long long v171 = v180;
      long long v172 = v181;
      long long v166 = v175;
      long long v167 = v176;
      long long v168 = v177;
      long long v169 = v178;
      long long v164 = v173;
      long long v165 = v174;
      char v163 = 2;
      sub_1C0A94768();
      sub_1C152080C();
      swift_unknownObjectRelease();
      sub_1C0CB300C((uint64_t)&v173);
      goto LABEL_39;
    case 5:
      uint64_t v60 = *(void *)v30;
      LOBYTE(v173) = 5;
      LOBYTE(v164) = 0;
      sub_1BFE09C34();
      uint64_t v46 = v161;
      uint64_t v61 = v158;
      sub_1C152080C();
      if (v61)
      {
        (*(void (**)(char *, uint64_t))(v159 + 8))(v46, v32);
LABEL_17:
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v160 = v32;
        *(void *)&long long v173 = v60;
        uint64_t v89 = qword_1EB863C68;
        swift_unknownObjectRetain_n();
        if (v89 != -1) {
          swift_once();
        }
        uint64_t v90 = v162;
        uint64_t v91 = __swift_project_value_buffer(v162, (uint64_t)qword_1EB863C48);
        id v92 = v157;
        uint64_t v183 = *(void *)(v183 + 16);
        uint64_t v93 = ((uint64_t (*)(char *, uint64_t, uint64_t))v183)(v157, v91, v90);
        MEMORY[0x1F4188790](v93);
        *(&v126 - 2) = (char *)sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB890220);
        id v94 = v92;
        swift_getKeyPath();
        uint64_t v95 = v151;
        sub_1C151947C();
        swift_unknownObjectRelease();
        LOBYTE(v173) = 1;
        sub_1C120FAC4();
        uint64_t v96 = v153;
        sub_1C152080C();
        (*(void (**)(char *, uint64_t))(v152 + 8))(v95, v96);
        uint64_t v110 = (void *)swift_unknownObjectRetain();
        uint64_t v111 = v136;
        sub_1C036C404(v110, v136);
        LOBYTE(v173) = 2;
        sub_1BFE07FFC(&qword_1EA19A218, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType.Overrides);
        sub_1C152080C();
        sub_1BFE0AD74((uint64_t)v111, type metadata accessor for FormatPuzzleType.Overrides);
        if (qword_1EB863CC0 != -1) {
          swift_once();
        }
        uint64_t v112 = v162;
        uint64_t v113 = __swift_project_value_buffer(v162, (uint64_t)qword_1EB863CA0);
        ((void (*)(char *, uint64_t, uint64_t))v183)(v94, v113, v112);
        uint64_t v51 = v128;
        sub_1C151945C();
        LOBYTE(v173) = 4;
        sub_1BFE0F114();
        uint64_t v45 = v160;
        uint64_t v52 = v129;
        sub_1C152080C();
        swift_unknownObjectRelease();
        uint64_t v53 = v131;
LABEL_38:
        (*(void (**)(char *, uint64_t))(v53 + 8))(v51, v52);
LABEL_39:
        (*(void (**)(char *, uint64_t))(v159 + 8))(v46, v45);
      }
      return;
    case 6:
      uint64_t v62 = (uint64_t)v30;
      uint64_t v55 = v155;
      sub_1BFE07F94(v62, v155, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      LOBYTE(v173) = 6;
      LOBYTE(v164) = 0;
      sub_1BFE09C34();
      uint64_t v42 = v161;
      uint64_t v63 = v158;
      sub_1C152080C();
      if (!v63)
      {
        LOBYTE(v173) = 1;
        sub_1BFE07FFC(&qword_1EA1AD0F8, (void (*)(uint64_t))type metadata accessor for PuzzleStatistic);
        sub_1C152080C();
      }
      uint64_t v57 = type metadata accessor for PuzzleStatistic;
      goto LABEL_24;
    case 7:
      uint64_t v64 = (uint64_t)v30;
      uint64_t v55 = v156;
      sub_1BFE07F94(v64, v156, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
      LOBYTE(v173) = 7;
      LOBYTE(v164) = 0;
      sub_1BFE09C34();
      uint64_t v42 = v161;
      uint64_t v65 = v158;
      sub_1C152080C();
      if (!v65)
      {
        LOBYTE(v173) = 1;
        sub_1BFE07FFC(&qword_1EB85EAA0, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Resolved);
        sub_1C152080C();
      }
      uint64_t v57 = type metadata accessor for FormatCustomItem.Resolved;
LABEL_24:
      sub_1BFE0AD74(v55, (uint64_t (*)(void))v57);
LABEL_25:
      (*(void (**)(char *, uint64_t))(v159 + 8))(v42, v32);
      return;
    case 8:
      uint64_t v67 = *(void *)v30;
      uint64_t v66 = *((void *)v30 + 1);
      char v68 = v30[16];
      LOBYTE(v173) = 8;
      LOBYTE(v164) = 0;
      sub_1BFE09C34();
      uint64_t v69 = v161;
      uint64_t v70 = v158;
      sub_1C152080C();
      if (!v70)
      {
        *(void *)&long long v173 = v67;
        *((void *)&v173 + 1) = v66;
        LOBYTE(v174) = v68;
        LOBYTE(v164) = 1;
        sub_1C065290C();
        sub_1C152080C();
      }
      (*(void (**)(char *, uint64_t))(v159 + 8))(v69, v32);
      swift_bridgeObjectRelease();
      return;
    default:
      uint64_t v38 = *(void *)v30;
      LOBYTE(v173) = 0;
      LOBYTE(v164) = 0;
      sub_1BFE09C34();
      uint64_t v39 = v161;
      uint64_t v40 = v158;
      sub_1C152080C();
      if (v40)
      {
        (*(void (**)(char *, uint64_t))(v159 + 8))(v39, v32);
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v160 = v32;
        *(void *)&long long v173 = v38;
        uint64_t v71 = qword_1EB85E870;
        swift_unknownObjectRetain_n();
        if (v71 != -1) {
          swift_once();
        }
        uint64_t v72 = v162;
        uint64_t v73 = __swift_project_value_buffer(v162, (uint64_t)qword_1EB85AB00);
        uint64_t v74 = v183 + 16;
        char v158 = *(uint64_t (**)(void, void, void))(v183 + 16);
        uint64_t v75 = v158(v157, v73, v72);
        MEMORY[0x1F4188790](v75);
        *(&v126 - 2) = (char *)sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB895E90);
        swift_getKeyPath();
        sub_1C151947C();
        swift_unknownObjectRelease();
        LOBYTE(v173) = 1;
        sub_1BFE0AB9C();
        uint64_t v76 = v160;
        uint64_t v77 = v138;
        sub_1C152080C();
        uint64_t v183 = v74;
        (*(void (**)(char *, uint64_t))(v137 + 8))(v27, v77);
        uint64_t v97 = (void *)swift_unknownObjectRetain();
        uint64_t v98 = v134;
        sub_1BFE09C88(v97, v134);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v132 + 48))(v98, 1, v133) == 1)
        {
          (*(void (**)(char *, uint64_t))(v159 + 8))(v161, v76);
          swift_unknownObjectRelease();
          sub_1BFE0B8C0(v98, &qword_1EB882F00, (void (*)(uint64_t))type metadata accessor for FormatArticleOverrides);
        }
        else
        {
          sub_1BFE07F94(v98, v130, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
          LOBYTE(v173) = 2;
          sub_1BFE07FFC(&qword_1EB866FF0, (void (*)(uint64_t))type metadata accessor for FormatArticleOverrides);
          sub_1C152080C();
          if (qword_1EB85E810 != -1) {
            swift_once();
          }
          uint64_t v114 = v162;
          uint64_t v115 = __swift_project_value_buffer(v162, (uint64_t)qword_1EB85AA80);
          v158(v157, v115, v114);
          uint64_t v116 = v127;
          sub_1C151945C();
          LOBYTE(v173) = 3;
          unint64_t v117 = sub_1BFE0F114();
          uint64_t v118 = v129;
          sub_1C152080C();
          unint64_t v156 = v117;
          uint64_t v119 = v116;
          uint64_t v120 = *(void (**)(char *, uint64_t))(v131 + 8);
          v131 += 8;
          v120(v119, v118);
          if (qword_1EB863CC0 != -1) {
            swift_once();
          }
          uint64_t v121 = v162;
          uint64_t v122 = __swift_project_value_buffer(v162, (uint64_t)qword_1EB863CA0);
          v158(v157, v122, v121);
          uint64_t v123 = v126;
          sub_1C151945C();
          LOBYTE(v173) = 4;
          uint64_t v125 = v160;
          uint64_t v124 = v161;
          sub_1C152080C();
          swift_unknownObjectRelease();
          v120(v123, v118);
          sub_1BFE0AD74(v130, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
          (*(void (**)(char *, uint64_t))(v159 + 8))(v124, v125);
        }
      }
      return;
  }
}

unint64_t sub_1BFE09B08()
{
  unint64_t result = qword_1EB868130;
  if (!qword_1EB868130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868130);
  }
  return result;
}

void sub_1BFE09B5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFE09B08();
    unint64_t v7 = a3(a1, &_s8ResolvedO10CodingKeysON, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t type metadata accessor for FormatPuzzleType.Overrides(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB887EC8);
}

unint64_t sub_1BFE09BE0()
{
  unint64_t result = qword_1EB868168;
  if (!qword_1EB868168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868168);
  }
  return result;
}

unint64_t sub_1BFE09C34()
{
  unint64_t result = qword_1EB868150;
  if (!qword_1EB868150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868150);
  }
  return result;
}

uint64_t sub_1BFE09C88@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFF00BEC();
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v64 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v66 = (uint64_t)&v58 - v7;
  sub_1BFE0E22C(0);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v63 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v67 = (uint64_t)&v58 - v11;
  sub_1BFF97C40();
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v58 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v65 = (uint64_t)&v58 - v19;
  uint64_t v20 = (int *)type metadata accessor for FormatArticleOverrides();
  uint64_t v21 = *((void *)v20 - 1);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (uint64_t *)((char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (objc_msgSend(a1, sel_respondsToSelector_, sel_appliedOverrideMetadata))
  {
    id v24 = objc_msgSend(a1, sel_appliedOverrideMetadata);
    uint64_t v25 = v24;
    uint64_t v61 = v21;
    uint64_t v62 = a2;
    if (!v24)
    {
      uint64_t v36 = sub_1C151631C();
      uint64_t v37 = v65;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v65, 1, 1, v36);
      unint64_t v30 = 0;
      uint64_t v59 = 0;
      uint64_t v60 = 0;
      id v38 = 0;
      uint64_t v39 = v66;
      goto LABEL_25;
    }
    if (objc_msgSend(v24, sel_respondsToSelector_, sel_title))
    {
      id v26 = objc_msgSend(v25, sel_title);
      if (v26)
      {
        uint64_t v27 = v26;
        uint64_t v28 = sub_1C151E62C();
        unint64_t v30 = v29;

        uint64_t v31 = HIBYTE(v30) & 0xF;
        if ((v30 & 0x2000000000000000) == 0) {
          uint64_t v31 = v28 & 0xFFFFFFFFFFFFLL;
        }
        if (v31) {
          goto LABEL_10;
        }
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v28 = 0;
    unint64_t v30 = 0;
LABEL_10:
    id v32 = objc_msgSend(v25, sel_displayDate);
    if (v32)
    {
      uint64_t v33 = v32;
      sub_1C15162BC();

      uint64_t v34 = sub_1C151631C();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v18, 0, 1, v34);
    }
    else
    {
      uint64_t v40 = sub_1C151631C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v18, 1, 1, v40);
    }
    sub_1BFE0D714((uint64_t)v18, v65, (uint64_t (*)(void))sub_1BFF97C40);
    unsigned __int8 v41 = objc_msgSend(v25, sel_respondsToSelector_, sel_shortExcerpt);
    uint64_t v60 = v28;
    if (v41)
    {
      id v38 = objc_msgSend(v25, sel_shortExcerpt);
      uint64_t v39 = v66;
      if (v38)
      {
        uint64_t v42 = sub_1C151E62C();
        unint64_t v44 = v43;

        uint64_t v45 = HIBYTE(v44) & 0xF;
        if ((v44 & 0x2000000000000000) == 0) {
          uint64_t v45 = v42 & 0xFFFFFFFFFFFFLL;
        }
        if (v45)
        {
          id v38 = (id)v44;
          uint64_t v59 = v42;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v59 = 0;
          id v38 = 0;
        }
      }
      else
      {
        uint64_t v59 = 0;
      }
    }
    else
    {
      uint64_t v59 = 0;
      id v38 = 0;
      uint64_t v39 = v66;
    }
    uint64_t v37 = v65;
LABEL_25:
    sub_1BFE0A590(v25, v67);
    unint64_t v46 = (unint64_t)objc_msgSend(a1, sel_storyType);
    unint64_t v47 = 0x50403020106uLL >> (8 * v46);
    if (v46 >= 6) {
      LODWORD(v47) = 6;
    }
    LODWORD(v65) = v47;
    sub_1BFE0A7E4(v25, v39);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_1BFE0D7E4(v37, (uint64_t)v15, (uint64_t (*)(void))sub_1BFF97C40);
    if (v30)
    {
      sub_1BFE0D070((uint64_t)v15, (uint64_t (*)(void))sub_1BFF97C40);
    }
    else
    {
      uint64_t v53 = sub_1C151631C();
      int v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v15, 1, v53);
      sub_1BFE0D070((uint64_t)v15, (uint64_t (*)(void))sub_1BFF97C40);
      if (v54 == 1 && ((v46 < 6) & (0x3Eu >> v46)) == 0)
      {
        uint64_t v48 = v63;
        sub_1BFE0D7E4(v67, v63, (uint64_t (*)(void))sub_1BFE0E22C);
        if (!v38)
        {
          uint64_t v55 = type metadata accessor for FormatArticleThumbnail();
          int v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 48))(v48, 1, v55);
          sub_1BFE0D070(v48, (uint64_t (*)(void))sub_1BFE0E22C);
          uint64_t v49 = v66;
          uint64_t v50 = v64;
          sub_1BFE0D7E4(v66, v64, (uint64_t (*)(void))sub_1BFF00BEC);
          if (v56 == 1)
          {
            uint64_t v57 = sub_1C1515FDC();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 48))(v50, 1, v57) == 1)
            {
              swift_bridgeObjectRelease_n();
              sub_1BFE0D070(v50, (uint64_t (*)(void))sub_1BFF00BEC);
              sub_1BFE0D070(v49, (uint64_t (*)(void))sub_1BFF00BEC);
              sub_1BFE0D070(v67, (uint64_t (*)(void))sub_1BFE0E22C);
              sub_1BFE0D070(v37, (uint64_t (*)(void))sub_1BFF97C40);
              uint64_t v35 = 1;
              a2 = v62;
              goto LABEL_32;
            }
          }
LABEL_31:
          sub_1BFE0D070(v50, (uint64_t (*)(void))sub_1BFF00BEC);
          *uint64_t v23 = v60;
          v23[1] = v30;
          sub_1BFE0D714(v37, (uint64_t)v23 + v20[5], (uint64_t (*)(void))sub_1BFF97C40);
          *((unsigned char *)v23 + v20[6]) = v65;
          uint64_t v51 = (uint64_t *)((char *)v23 + v20[7]);
          *uint64_t v51 = v59;
          v51[1] = (uint64_t)v38;
          sub_1BFE0D714(v67, (uint64_t)v23 + v20[8], (uint64_t (*)(void))sub_1BFE0E22C);
          sub_1BFE0D714(v49, (uint64_t)v23 + v20[9], (uint64_t (*)(void))sub_1BFF00BEC);
          a2 = v62;
          sub_1BFE0D714((uint64_t)v23, v62, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
          uint64_t v35 = 0;
LABEL_32:
          uint64_t v21 = v61;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v21 + 56))(a2, v35, 1, v20);
        }
LABEL_30:
        sub_1BFE0D070(v48, (uint64_t (*)(void))sub_1BFE0E22C);
        uint64_t v49 = v66;
        uint64_t v50 = v64;
        sub_1BFE0D7E4(v66, v64, (uint64_t (*)(void))sub_1BFF00BEC);
        goto LABEL_31;
      }
    }
    uint64_t v48 = v63;
    sub_1BFE0D7E4(v67, v63, (uint64_t (*)(void))sub_1BFE0E22C);
    goto LABEL_30;
  }
  swift_unknownObjectRelease();
  uint64_t v35 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v21 + 56))(a2, v35, 1, v20);
}

id sub_1BFE0A4F8(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(void *)(a1 + *a3 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  return v3;
}

uint64_t storeEnumTagSinglePayload for FormatArticleOverrides(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C100E6D0);
}

uint64_t sub_1BFE0A590@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFE0E22C(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && (objc_msgSend(a1, sel_respondsToSelector_, sel_formatThumbnail) & 1) != 0)
  {
    id v7 = objc_msgSend(a1, sel_formatThumbnail);
    id v8 = v7;
    sub_1BFE0E8E8(v7, (uint64_t)v6);
    uint64_t v9 = type metadata accessor for FormatArticleThumbnail();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
    {

      sub_1BFE0D070((uint64_t)v6, (uint64_t (*)(void))sub_1BFE0E22C);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a2, 1, 1, v9);
    }
    else
    {
      if (sub_1C01BD5E8())
      {
        uint64_t v14 = 1;
      }
      else
      {
        sub_1BFE0D7E4((uint64_t)v6, a2, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnail);
        uint64_t v14 = 0;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a2, v14, 1, v9);

      return sub_1BFE0D070((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnail);
    }
  }
  else
  {
    uint64_t v12 = type metadata accessor for FormatArticleThumbnail();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    return v13(a2, 1, 1, v12);
  }
}

uint64_t storeEnumTagSinglePayload for FormatArticleThumbnail(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C01C27B0);
}

uint64_t sub_1BFE0A7E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFF00BEC();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE0AAF8(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v21 - v13;
  if (!a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))((char *)&v21 - v13, 1, 1, v5);
LABEL_10:
    sub_1BFE0D070((uint64_t)v14, (uint64_t (*)(void))sub_1BFE0AAF8);
    uint64_t v19 = sub_1C1515FDC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a2, 1, 1, v19);
  }
  if (objc_msgSend(a1, sel_respondsToSelector_, sel_routeURL))
  {
    id v15 = objc_msgSend(a1, sel_routeURL);
    if (v15)
    {
      uint64_t v16 = v15;
      sub_1C1515F1C();

      uint64_t v17 = sub_1C1515FDC();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 0, 1, v17);
    }
    else
    {
      uint64_t v18 = sub_1C1515FDC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
    }
    sub_1BFE0D714((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))sub_1BFF00BEC);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v12, 0, 1, v5);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v12, 1, 1, v5);
  }
  sub_1BFE0D714((uint64_t)v12, (uint64_t)v14, (uint64_t (*)(void))sub_1BFE0AAF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1) {
    goto LABEL_10;
  }
  return sub_1BFE0D714((uint64_t)v14, a2, (uint64_t (*)(void))sub_1BFF00BEC);
}

void sub_1BFE0AAF8(uint64_t a1)
{
}

unint64_t sub_1BFE0AB18()
{
  unint64_t result = qword_1EB85AC00;
  if (!qword_1EB85AC00)
  {
    sub_1C0BF59D0(255, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85AC00);
  }
  return result;
}

unint64_t sub_1BFE0AB9C()
{
  unint64_t result = qword_1EB85ABF0;
  if (!qword_1EB85ABF0)
  {
    sub_1C0BF59D0(255, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85ABF0);
  }
  return result;
}

uint64_t sub_1BFE0AD74(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFE0ADD4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t FormatArticle.overrides.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1BFE0B70C(0, &qword_1EB888B48, (uint64_t (*)(void))sub_1C0067A40, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v8 - v4;
  uint64_t v6 = v1 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
  swift_beginAccess();
  sub_1BFE0B824(v6, (uint64_t)v5);
  return sub_1BFE0B61C((uint64_t)v5, a1);
}

void *sub_1BFE0AF14@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  unint64_t result = FormatArticle.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void *FormatArticle.init(from:)(void *a1)
{
  uint64_t v37 = a1;
  uint64_t v2 = v1;
  uint64_t v38 = *v2;
  sub_1BFE0E6A0(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v35 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FormatArticleOverrides();
  uint64_t v34 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE0B70C(0, (unint64_t *)&unk_1EB87A4E8, (uint64_t (*)(void))sub_1BFE0B7D0, (uint64_t)&type metadata for FormatArticle.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v10 = v9;
  uint64_t v33 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v31 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE0B7D0();
  uint64_t v13 = v36;
  sub_1C1520EBC();
  if (v13)
  {
    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  }
  else
  {
    uint64_t v14 = v34;
    id v15 = v35;
    uint64_t v36 = v6;
    id v32 = v8;
    uint64_t v16 = v33;
    char v42 = 0;
    v2[2] = sub_1C152069C();
    v2[3] = v17;
    char v42 = 1;
    sub_1BFE0B680(qword_1EB88A570, (void (*)(uint64_t))type metadata accessor for FormatArticleOverrides);
    uint64_t v18 = v36;
    sub_1C152065C();
    uint64_t v19 = (uint64_t)v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v15, 1, v18) == 1)
    {
      uint64_t v20 = (uint64_t)v32;
      if (qword_1EB88A568 != -1) {
        swift_once();
      }
      uint64_t v21 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB88A548);
      sub_1BFE0CA04(v21, v20);
      sub_1BFE0B774(v19);
    }
    else
    {
      uint64_t v22 = (uint64_t)v15;
      uint64_t v20 = (uint64_t)v32;
      sub_1BFE0B61C(v22, (uint64_t)v32);
    }
    uint64_t v23 = (uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
    swift_beginAccess();
    sub_1BFE0B61C(v20, v23);
    sub_1BFEBC4B4();
    LOBYTE(v40) = 2;
    sub_1BFDB25E8();
    sub_1C152065C();
    uint64_t v36 = v10;
    if (v41) {
      uint64_t v24 = v41;
    }
    else {
      uint64_t v24 = MEMORY[0x1E4FBC870];
    }
    uint64_t v25 = (void *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
    swift_beginAccess();
    void *v25 = v24;
    id v26 = v2;
    sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
    LOBYTE(v43) = 3;
    sub_1BFDB23BC((unint64_t *)&qword_1EB879DC8, (void (*)(void))sub_1C0081A44);
    sub_1C152065C();
    if (v40) {
      uint64_t v27 = v40;
    }
    else {
      uint64_t v27 = MEMORY[0x1E4FBC860];
    }
    uint64_t v28 = (void *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
    swift_beginAccess();
    *uint64_t v28 = v27;
    uint64_t v29 = v36;
    char v39 = 4;
    sub_1BFE0B680(&qword_1EB874340, (void (*)(uint64_t))type metadata accessor for FormatArticle);
    sub_1C152065C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v29);
    *(void *)((char *)v26 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate) = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    return v26;
  }
  return v2;
}

uint64_t getEnumTagSinglePayload for FormatArticleOverrides(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C100E54C);
}

uint64_t sub_1BFE0B61C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatArticleOverrides();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFE0B680(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE0B6C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatArticleOverrides();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFE0B70C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1BFE0B774(uint64_t a1)
{
  sub_1BFE0E6A0(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BFE0B7D0()
{
  unint64_t result = qword_1EB874328;
  if (!qword_1EB874328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874328);
  }
  return result;
}

uint64_t sub_1BFE0B824(uint64_t a1, uint64_t a2)
{
  sub_1BFE0B70C(0, &qword_1EB888B48, (uint64_t (*)(void))sub_1C0067A40, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFE0B8C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFECA458(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

id FCHeadlineProviding.overridden(by:configuration:assetManager:routeURL:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v31 = a2;
  id v30 = a3;
  uint64_t v6 = type metadata accessor for FormatArticleOverrides();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE0E1D8(0, &qword_1EB88A670, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v12 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1BFE0E1D8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v13 - 8);
  id v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v29 - v17;
  char v19 = sub_1BFE0CA68();
  sub_1BFE0C1B4(a4, (uint64_t)v18, (unint64_t *)&qword_1EB8948A0, v12);
  if ((v19 & 1) == 0)
  {
    uint64_t v20 = sub_1C1515FDC();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v18, 1, v20) == 1)
    {
      sub_1BFF516C0((uint64_t)v18, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      uint64_t v21 = v32;
LABEL_5:
      swift_unknownObjectRetain();
      return (id)v21;
    }
  }
  uint64_t v22 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1BFF516C0((uint64_t)v18, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  sub_1BFE0C220();
  sub_1BFE0C1B4(a1 + *(int *)(v6 + 32), (uint64_t)v11, &qword_1EB88A670, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
  id v23 = sub_1BFE0C260((uint64_t)v11, v30);
  sub_1BFE0CA04(a1, (uint64_t)v8);
  sub_1BFE0C1B4(a4, (uint64_t)v15, (unint64_t *)&qword_1EB8948A0, v22);
  id v24 = objc_allocWithZone((Class)type metadata accessor for FormatArticleOverridesMetadata());
  id v25 = v23;
  id v26 = sub_1C144B9F4(v8, (uint64_t)v23, (uint64_t)v15);
  uint64_t v21 = v32;
  id v27 = (id)FCAssignSingleHeadlineMetadata();

  if (!v27) {
    goto LABEL_5;
  }
  return v27;
}

uint64_t sub_1BFE0BD7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE0BDE4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C007E428(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFE0BE50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE0BEB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE0BF20(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFECA32C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFE0BFA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE0C008(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE0C070(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFF2ECDC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFE0C0DC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFE79E3C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFE0C148(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFF5A274(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFE0C1B4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFE0E1D8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_1BFE0C220()
{
  unint64_t result = qword_1EB890260;
  if (!qword_1EB890260)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB890260);
  }
  return result;
}

id sub_1BFE0C260(uint64_t a1, void *a2)
{
  sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v41 - v5;
  sub_1BFE0C89C(0, &qword_1EB88A670, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v41 - v8;
  uint64_t v10 = (int *)type metadata accessor for FormatArticleThumbnail();
  uint64_t v11 = *((void *)v10 - 1);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE0C93C(a1, (uint64_t)v9, &qword_1EB88A670, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10) == 1)
  {

    sub_1BFE0C840(a1, &qword_1EB88A670, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
    sub_1BFE0C840((uint64_t)v9, &qword_1EB88A670, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
    return 0;
  }
  sub_1C01C2F8C((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnail);
  if (sub_1C01BD5E8())
  {

    sub_1BFE0C840(a1, &qword_1EB88A670, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
    sub_1C01C0358((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnail);
    return 0;
  }
  if (*((void *)v13 + 9))
  {
    swift_bridgeObjectRetain();
    id v15 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v15 = 0;
  }
  uint64_t v16 = self;
  id v50 = objc_msgSend(v16, sel_nullableColorWithHexString_, v15);

  if (*((void *)v13 + 5))
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = 0;
  }
  id v49 = objc_msgSend(v16, sel_nullableColorWithHexString_, v17);

  if (*((void *)v13 + 3))
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = 0;
  }
  id v48 = objc_msgSend(v16, sel_nullableColorWithHexString_, v18);

  uint64_t v19 = *((void *)v13 + 7);
  uint64_t v47 = a1;
  if (v19)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = 0;
  }
  id v45 = objc_msgSend(v16, sel_nullableColorWithHexString_, v20);

  uint64_t v21 = *(void *)v13;
  if (v13[8]) {
    uint64_t v21 = 0;
  }
  uint64_t v46 = v21;
  id v43 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1C01C2FF4();
  sub_1BFE0C93C((uint64_t)&v13[v10[9]], (uint64_t)v6, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  id v22 = a2;
  id v44 = sub_1C00A1974((uint64_t)v6, v22);
  sub_1BFE0C93C((uint64_t)&v13[v10[10]], (uint64_t)v6, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  id v23 = v22;
  id v24 = sub_1C00A1974((uint64_t)v6, v23);
  sub_1BFE0C93C((uint64_t)&v13[v10[11]], (uint64_t)v6, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  id v25 = v23;
  id v26 = sub_1C00A1974((uint64_t)v6, v25);
  id v41 = v26;
  sub_1BFE0C93C((uint64_t)&v13[v10[12]], (uint64_t)v6, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  id v27 = v25;
  id v28 = sub_1C00A1974((uint64_t)v6, v27);
  id v42 = v28;
  sub_1BFE0C93C((uint64_t)&v13[v10[13]], (uint64_t)v6, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  id v29 = v27;
  id v30 = sub_1C00A1974((uint64_t)v6, v29);
  id v40 = v28;
  id v38 = v24;
  id v39 = v26;
  uint64_t v31 = v24;
  uint64_t v32 = v44;
  uint64_t v34 = v49;
  uint64_t v33 = v50;
  uint64_t v35 = v48;
  uint64_t v36 = v45;
  id v14 = objc_msgSend(v43, sel_initWithTextColor_backgroundColor_accentColor_primaryColor_focalFrame_lowQualityImage_defaultQualityImage_mediumQualityImage_highQualityImage_ultraQualityImage_, v50, v49, v48, v45, v46, v44, v38, v39, v40, v30);

  sub_1BFE0C840(v47, &qword_1EB88A670, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
  sub_1C01C0358((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnail);
  return v14;
}

uint64_t sub_1BFE0C840(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFE0C89C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1BFE0C89C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for FormatArticleOverridesMetadata()
{
  uint64_t result = qword_1EB88D7F0;
  if (!qword_1EB88D7F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFE0C93C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFE0C89C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFE0C9A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatArticleOverrides();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BFE0CA04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatArticleOverrides();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFE0CA68()
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE0E22C(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for FormatArticleOverrides();
  MEMORY[0x1F4188790](v10);
  uint64_t v42 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v39 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v39 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v39 - v19;
  MEMORY[0x1F4188790](v21);
  id v23 = (char *)&v39 - v22;
  uint64_t v24 = *(void *)(v0 + 8);
  sub_1BFE0D7E4(v0, (uint64_t)&v39 - v22, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
  if (v24)
  {
    sub_1BFE0D070((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
    sub_1BFE0D7E4(v0, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
LABEL_8:
    sub_1BFE0D070((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
    sub_1BFE0D7E4(v0, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
    goto LABEL_9;
  }
  id v40 = v3;
  id v41 = v6;
  sub_1BFE0D7E4((uint64_t)&v23[v10[5]], (uint64_t)v9, (uint64_t (*)(void))sub_1BFF97C40);
  sub_1BFE0D070((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
  uint64_t v25 = sub_1C151631C();
  int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v9, 1, v25);
  sub_1BFE0D070((uint64_t)v9, (uint64_t (*)(void))sub_1BFF97C40);
  sub_1BFE0D7E4(v0, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
  if (v26 != 1) {
    goto LABEL_8;
  }
  int v27 = v20[v10[6]];
  sub_1BFE0D070((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
  sub_1BFE0D7E4(v0, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
  if (v27 != 6)
  {
LABEL_9:
    sub_1BFE0D070((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
    sub_1BFE0D7E4(v0, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
    goto LABEL_10;
  }
  uint64_t v28 = *(void *)&v17[v10[7] + 8];
  swift_bridgeObjectRetain();
  sub_1BFE0D070((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
  swift_bridgeObjectRelease();
  sub_1BFE0D7E4(v0, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
  if (v28)
  {
LABEL_10:
    sub_1BFE0D070((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
    uint64_t v37 = v0;
    uint64_t v33 = v42;
    sub_1BFE0D7E4(v37, v42, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
    goto LABEL_11;
  }
  uint64_t v29 = (uint64_t)v41;
  sub_1BFE0D7E4((uint64_t)&v14[v10[8]], (uint64_t)v41, (uint64_t (*)(void))sub_1BFE0E22C);
  sub_1BFE0D070((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
  uint64_t v30 = type metadata accessor for FormatArticleThumbnail();
  int v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v29, 1, v30);
  sub_1BFE0D070(v29, (uint64_t (*)(void))sub_1BFE0E22C);
  uint64_t v32 = v0;
  uint64_t v33 = v42;
  sub_1BFE0D7E4(v32, v42, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
  if (v31 != 1)
  {
LABEL_11:
    sub_1BFE0D070(v33, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
    return 1;
  }
  uint64_t v34 = (uint64_t)v40;
  sub_1BFE0D7E4(v33 + v10[9], (uint64_t)v40, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE0D070(v33, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
  uint64_t v35 = sub_1C1515FDC();
  BOOL v36 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35) != 1;
  sub_1BFE0D070(v34, (uint64_t (*)(void))sub_1BFF00BEC);
  return v36;
}

uint64_t sub_1BFE0D070(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t FormatArticleOverrides.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v30 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE0E22C(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE0E728(0, &qword_1EB890380, MEMORY[0x1E4FBBDC0]);
  uint64_t v31 = *(void *)(v11 - 8);
  uint64_t v32 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v29 - v12;
  id v14 = (int *)type metadata accessor for FormatArticleOverrides();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE0E6D4();
  uint64_t v33 = v13;
  uint64_t v17 = v34;
  sub_1C1520EBC();
  if (v17) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v34 = v7;
  uint64_t v18 = v31;
  uint64_t v19 = (uint64_t)a1;
  char v41 = 0;
  uint64_t v20 = (uint64_t)v16;
  uint64_t *v16 = sub_1C152060C();
  v16[1] = v21;
  sub_1C151631C();
  char v40 = 1;
  sub_1BFE0D8DC(&qword_1EB871168, MEMORY[0x1E4F27928]);
  sub_1C152065C();
  uint64_t v22 = v14;
  sub_1BFE0D714((uint64_t)v10, v20 + v14[5], (uint64_t (*)(void))sub_1BFF97C40);
  char v38 = 2;
  sub_1BFE0E78C();
  sub_1C152065C();
  *(unsigned char *)(v20 + v14[6]) = v39;
  char v37 = 3;
  uint64_t v23 = sub_1C152060C();
  uint64_t v25 = (uint64_t *)(v20 + v14[7]);
  uint64_t *v25 = v23;
  v25[1] = v26;
  type metadata accessor for FormatArticleThumbnail();
  char v36 = 4;
  sub_1BFE0D8DC(qword_1EB88A618, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
  uint64_t v27 = (uint64_t)v34;
  sub_1C152065C();
  sub_1BFE0D714(v27, v20 + v22[8], (uint64_t (*)(void))sub_1BFE0E22C);
  sub_1C1515FDC();
  char v35 = 5;
  sub_1BFE0D8DC((unint64_t *)&unk_1EB871120, MEMORY[0x1E4F276F0]);
  uint64_t v28 = (uint64_t)v30;
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v33, v32);
  sub_1BFE0D714(v28, v20 + v22[9], (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1BFE0D7E4(v20, v29, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
  __swift_destroy_boxed_opaque_existential_1(v19);
  return sub_1BFE0D070(v20, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
}

uint64_t sub_1BFE0D714(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE0D77C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE0D7E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FormatArticleOverrides()
{
  uint64_t result = qword_1EB881F90;
  if (!qword_1EB881F90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFE0D898(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C151631C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE0D8DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE0D924(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeWithCopy for FormatArticleOverrides(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1BFF97C40();
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = v3[7];
  *((unsigned char *)a1 + v3[6]) = *((unsigned char *)v4 + v3[6]);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)v4 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = v3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)v4 + v18);
  uint64_t v21 = type metadata accessor for FormatArticleThumbnail();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  if (v23(v20, 1, v21))
  {
    sub_1BFE0E22C(0);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v65 = v4;
    uint64_t v67 = v22;
    char v68 = v3;
    void *v19 = *v20;
    *((unsigned char *)v19 + 8) = *((unsigned char *)v20 + 8);
    uint64_t v25 = v20[3];
    void v19[2] = v20[2];
    v19[3] = v25;
    uint64_t v26 = v20[5];
    v19[4] = v20[4];
    v19[5] = v26;
    uint64_t v27 = v20[7];
    v19[6] = v20[6];
    v19[7] = v27;
    uint64_t v28 = (int *)v21;
    uint64_t v29 = v20[9];
    v19[8] = v20[8];
    v19[9] = v29;
    uint64_t v66 = v28;
    uint64_t v30 = v28[9];
    uint64_t v63 = (char *)v20 + v30;
    __dst = (char *)v19 + v30;
    uint64_t v31 = type metadata accessor for FormatArticleThumbnailImage();
    uint64_t v69 = *(void *)(v31 - 8);
    uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v33 = v32;
    if (v32(v63, 1, v31))
    {
      sub_1BFE0E184(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(__dst, v63, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      uint64_t v35 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(__dst, v63, v35);
      *(void *)&__dst[*(int *)(v31 + 20)] = *(void *)&v63[*(int *)(v31 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(__dst, 0, 1, v31);
    }
    uint64_t v36 = v66[10];
    char v37 = (char *)v19 + v36;
    char v38 = (char *)v20 + v36;
    uint64_t v3 = v68;
    uint64_t v4 = v65;
    if (v33((char *)v20 + v36, 1, v31))
    {
      sub_1BFE0E184(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      uint64_t v40 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v37, v38, v40);
      *(void *)&v37[*(int *)(v31 + 20)] = *(void *)&v38[*(int *)(v31 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v37, 0, 1, v31);
    }
    uint64_t v41 = v66[11];
    uint64_t v42 = (char *)v19 + v41;
    id v43 = (char *)v20 + v41;
    if (v33((char *)v20 + v41, 1, v31))
    {
      sub_1BFE0E184(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      uint64_t v45 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v42, v43, v45);
      *(void *)&v42[*(int *)(v31 + 20)] = *(void *)&v43[*(int *)(v31 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v42, 0, 1, v31);
    }
    uint64_t v46 = v66[12];
    uint64_t v47 = (char *)v19 + v46;
    id v48 = (char *)v20 + v46;
    if (v33((char *)v20 + v46, 1, v31))
    {
      sub_1BFE0E184(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      uint64_t v50 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v47, v48, v50);
      *(void *)&v47[*(int *)(v31 + 20)] = *(void *)&v48[*(int *)(v31 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v47, 0, 1, v31);
    }
    uint64_t v51 = v66[13];
    uint64_t v52 = (char *)v19 + v51;
    uint64_t v53 = (char *)v20 + v51;
    if (v33(v53, 1, v31))
    {
      sub_1BFE0E184(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      uint64_t v55 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v52, v53, v55);
      *(void *)&v52[*(int *)(v31 + 20)] = *(void *)&v53[*(int *)(v31 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v52, 0, 1, v31);
    }
    (*(void (**)(void *, void, uint64_t, int *))(v67 + 56))(v19, 0, 1, v66);
  }
  uint64_t v56 = v3[9];
  uint64_t v57 = (char *)a1 + v56;
  uint64_t v58 = (char *)v4 + v56;
  uint64_t v59 = sub_1C1515FDC();
  uint64_t v60 = *(void *)(v59 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
  {
    sub_1BFF00BEC();
    memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
  }
  return a1;
}

void sub_1BFE0E184(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFE0E1D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFE0E22C(uint64_t a1)
{
}

uint64_t destroy for FormatArticleOverrides(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[8];
  uint64_t v8 = (int *)type metadata accessor for FormatArticleThumbnail();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v8 - 1) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 + v8[9];
    uint64_t v10 = type metadata accessor for FormatArticleThumbnailImage();
    uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    if (!v11(v9, 1, v10))
    {
      uint64_t v12 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v9, v12);
    }
    uint64_t v13 = v7 + v8[10];
    if (!v11(v13, 1, v10))
    {
      uint64_t v14 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    }
    uint64_t v15 = v7 + v8[11];
    if (!v11(v15, 1, v10))
    {
      uint64_t v16 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    }
    uint64_t v17 = v7 + v8[12];
    if (!v11(v17, 1, v10))
    {
      uint64_t v18 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    }
    uint64_t v19 = v7 + v8[13];
    if (!v11(v19, 1, v10))
    {
      uint64_t v20 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
    }
  }
  uint64_t v21 = a1 + a2[9];
  uint64_t v22 = sub_1C1515FDC();
  uint64_t v25 = *(void *)(v22 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v21, 1, v22);
  if (!result)
  {
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8);
    return v24(v21, v22);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatArticleThumbnail(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C01C26D8);
}

uint64_t type metadata accessor for FormatArticleThumbnail()
{
  uint64_t result = qword_1EB881FA0;
  if (!qword_1EB881FA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1BFE0E6A0(uint64_t a1)
{
}

unint64_t sub_1BFE0E6D4()
{
  unint64_t result = qword_1EB88A530;
  if (!qword_1EB88A530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A530);
  }
  return result;
}

void sub_1BFE0E728(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFE0E6D4();
    unint64_t v7 = a3(a1, &type metadata for FormatArticleOverrides.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1BFE0E78C()
{
  unint64_t result = qword_1EB88A610;
  if (!qword_1EB88A610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A610);
  }
  return result;
}

unint64_t sub_1BFE0E7E0()
{
  unint64_t result = qword_1EB85E898;
  if (!qword_1EB85E898)
  {
    sub_1BFE07F38(255, &qword_1EB85AC10, (uint64_t)&qword_1EB85C560, (uint64_t)&protocolRef_FCNewsAppConfiguration, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E898);
  }
  return result;
}

unint64_t sub_1BFE0E864()
{
  unint64_t result = qword_1EB863F08;
  if (!qword_1EB863F08)
  {
    sub_1BFE07F38(255, &qword_1EB863F10, (uint64_t)&qword_1EB87A120, 0x1E4F7E270, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863F08);
  }
  return result;
}

uint64_t sub_1BFE0E8E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v91 = (uint64_t)&v80 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v80 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v80 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v80 - v15;
  if (a1)
  {
    uint64_t v81 = v14;
    id v17 = a1;
    id v90 = objc_msgSend(v17, sel_focalFrameBuffer);
    id v18 = objc_msgSend(v17, sel_accentColor);
    if (v18)
    {
      uint64_t v19 = v18;
      id v20 = objc_msgSend(v18, sel_hex);

      uint64_t v21 = sub_1C151E62C();
      uint64_t v88 = v22;
      uint64_t v89 = v21;
    }
    else
    {
      uint64_t v88 = 0;
      uint64_t v89 = 0;
    }
    id v26 = objc_msgSend(v17, sel_backgroundColor);
    if (v26)
    {
      uint64_t v27 = v26;
      id v28 = objc_msgSend(v26, sel_hex);

      uint64_t v29 = sub_1C151E62C();
      uint64_t v86 = v30;
      uint64_t v87 = v29;
    }
    else
    {
      uint64_t v86 = 0;
      uint64_t v87 = 0;
    }
    id v31 = objc_msgSend(v17, sel_primaryColor);
    if (v31)
    {
      uint64_t v32 = v31;
      id v33 = objc_msgSend(v31, sel_hex);

      uint64_t v34 = sub_1C151E62C();
      uint64_t v84 = v35;
      uint64_t v85 = v34;
    }
    else
    {
      uint64_t v84 = 0;
      uint64_t v85 = 0;
    }
    id v36 = objc_msgSend(v17, sel_textColor);
    if (v36)
    {
      char v37 = v36;
      id v38 = objc_msgSend(v36, sel_hex);

      uint64_t v39 = sub_1C151E62C();
      uint64_t v82 = v40;
      uint64_t v83 = v39;
    }
    else
    {
      uint64_t v82 = 0;
      uint64_t v83 = 0;
    }
    id v41 = objc_msgSend(v17, sel_lowQualityImage);
    if (v41)
    {
      id v42 = v41;
      id v43 = [v42 url];
      sub_1C1515F1C();

      id v44 = objc_msgSend(v42, sel_sizeBuffer);
      uint64_t v45 = type metadata accessor for FormatArticleThumbnailImage();
      *(void *)&v16[*(int *)(v45 + 20)] = v44;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v16, 0, 1, v45);
    }
    else
    {
      uint64_t v46 = type metadata accessor for FormatArticleThumbnailImage();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v16, 1, 1, v46);
    }
    id v47 = objc_msgSend(v17, sel_defaultQualityImage);
    uint64_t v48 = v81;
    if (v47)
    {
      id v49 = v47;
      id v50 = [v49 url];
      sub_1C1515F1C();

      id v51 = objc_msgSend(v49, (SEL)&selRef_reloadData + 6);
      uint64_t v52 = type metadata accessor for FormatArticleThumbnailImage();
      *(void *)&v13[*(int *)(v52 + 20)] = v51;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v13, 0, 1, v52);
    }
    else
    {
      uint64_t v53 = type metadata accessor for FormatArticleThumbnailImage();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v13, 1, 1, v53);
    }
    id v54 = objc_msgSend(v17, sel_mediumQualityImage);
    if (v54)
    {
      id v55 = v54;
      id v56 = [v55 url];
      sub_1C1515F1C();

      id v57 = objc_msgSend(v55, (SEL)&selRef_reloadData + 6);
      uint64_t v58 = type metadata accessor for FormatArticleThumbnailImage();
      *(void *)&v10[*(int *)(v58 + 20)] = v57;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v10, 0, 1, v58);
    }
    else
    {
      uint64_t v59 = type metadata accessor for FormatArticleThumbnailImage();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v10, 1, 1, v59);
    }
    id v60 = objc_msgSend(v17, sel_highQualityImage);
    if (v60)
    {
      id v61 = v60;
      id v62 = [v61 url];
      uint64_t v63 = v10;
      uint64_t v64 = v91;
      sub_1C1515F1C();

      id v65 = objc_msgSend(v61, (SEL)&selRef_reloadData + 6);
      uint64_t v66 = type metadata accessor for FormatArticleThumbnailImage();
      *(void *)(v64 + *(int *)(v66 + 20)) = v65;
      uint64_t v67 = v64;
      uint64_t v10 = v63;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v67, 0, 1, v66);
    }
    else
    {
      uint64_t v68 = type metadata accessor for FormatArticleThumbnailImage();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v91, 1, 1, v68);
    }
    id v69 = objc_msgSend(v17, sel_ultraQualityImage);
    if (v69)
    {
      id v70 = v69;
      id v71 = [v70 url];
      sub_1C1515F1C();

      id v72 = objc_msgSend(v70, (SEL)&selRef_reloadData + 6);
      uint64_t v73 = type metadata accessor for FormatArticleThumbnailImage();
      *(void *)(v48 + *(int *)(v73 + 20)) = v72;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v48, 0, 1, v73);
    }
    else
    {
      uint64_t v74 = type metadata accessor for FormatArticleThumbnailImage();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v48, 1, 1, v74);
    }

    *(void *)a2 = v90;
    *(unsigned char *)(a2 + 8) = 0;
    uint64_t v75 = v88;
    *(void *)(a2 + 16) = v89;
    *(void *)(a2 + 24) = v75;
    uint64_t v76 = v86;
    *(void *)(a2 + 32) = v87;
    *(void *)(a2 + 40) = v76;
    uint64_t v77 = v84;
    *(void *)(a2 + 48) = v85;
    *(void *)(a2 + 56) = v77;
    uint64_t v78 = v82;
    *(void *)(a2 + 64) = v83;
    *(void *)(a2 + 72) = v78;
    id v79 = (int *)type metadata accessor for FormatArticleThumbnail();
    sub_1C01C0274((uint64_t)v16, a2 + v79[9]);
    sub_1C01C0274((uint64_t)v13, a2 + v79[10]);
    sub_1C01C0274((uint64_t)v10, a2 + v79[11]);
    sub_1C01C0274(v91, a2 + v79[12]);
    sub_1C01C0274(v48, a2 + v79[13]);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v79 - 1) + 56))(a2, 0, 1, v79);
  }
  else
  {
    uint64_t v23 = type metadata accessor for FormatArticleThumbnail();
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
    return v24(a2, 1, 1, v23);
  }
}

unint64_t sub_1BFE0F114()
{
  unint64_t result = qword_1EB85E8A0;
  if (!qword_1EB85E8A0)
  {
    sub_1BFC94D0C(255, (unint64_t *)&unk_1EB85E4D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB160]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E8A0);
  }
  return result;
}

uint64_t sub_1BFE0F194(void *a1)
{
  return FormatStyle.encode(to:)(a1);
}

uint64_t FormatStyle.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v40 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v42 = (char *)&v39 - v6;
  MEMORY[0x1F4188790](v7);
  id v44 = (char *)&v39 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v39 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v39 - v13;
  sub_1C08BA44C();
  MEMORY[0x1F4188790](v15 - 8);
  id v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *v1;
  uint64_t v18 = v1[1];
  uint64_t v43 = v1[6];
  uint64_t v41 = v1[7];
  uint64_t v39 = v1[8];
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_1C08BA320();
  uint64_t v23 = v22;
  uint64_t v24 = sub_1C085F050(&qword_1EB8924A0, (void (*)(uint64_t))sub_1C08BA320);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatStyle, v25, v20, (uint64_t)&type metadata for FormatStyle, v23, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v17, v24, (uint64_t)&off_1F1C39B68);
  uint64_t v26 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_1C151928C();
  uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1EB93CAB0);
  uint64_t v45 = *(void (**)(char *))(*(void *)(v27 - 8) + 16);
  uint64_t v46 = v28;
  v45(v14);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = v47;
  sub_1C06C6A30(v19, v18, 0, 0, 0, (uint64_t)v14, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v29)
  {
    id v31 = (void (*)(char *, uint64_t, uint64_t))v45;
    uint64_t v30 = v46;
    ((void (*)(char *, uint64_t, uint64_t))v45)(v11, v46, v27);
    swift_storeEnumTagMultiPayload();
    sub_1BFEFEB68((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
    v31(v11, v30, v27);
    swift_storeEnumTagMultiPayload();
    sub_1BFEFEB68((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
    uint64_t v32 = (uint64_t)v44;
    v31(v44, v30, v27);
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = swift_bridgeObjectRetain();
    sub_1C06DE55C(v33, 3, 0, 0);
    sub_1BFEFEB68(v32, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v34 = (uint64_t)v42;
    ((void (*)(char *, uint64_t, uint64_t))v45)(v42, v46, v27);
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = swift_bridgeObjectRetain();
    sub_1C06DE6C0(v35, 4, 0, 0);
    sub_1BFEFEB68(v34, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v36 = (uint64_t)v40;
    ((void (*)(char *, uint64_t, uint64_t))v45)(v40, v46, v27);
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = swift_bridgeObjectRetain();
    sub_1C06DE824(v37, 5, 0, 0);
    sub_1BFEFEB68(v36, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BFEFEB68((uint64_t)v17, (uint64_t (*)(void))sub_1C08BA44C);
}

unint64_t sub_1BFE0F71C()
{
  unint64_t result = qword_1EB85C3E0;
  if (!qword_1EB85C3E0)
  {
    sub_1BFE9DEBC(255, &qword_1EB85C3D8, (uint64_t)&type metadata for FormatNodeStyle, MEMORY[0x1E4FBB320]);
    sub_1C00800EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C3E0);
  }
  return result;
}

unint64_t sub_1BFE0F7B0()
{
  unint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7373616C63;
      break;
    case 2:
      unint64_t result = 0x615272656E726F63;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x726F7463656C6573;
      break;
    case 7:
      unint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFE0F8A0()
{
  uint64_t result = 0x7365676465;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x726F6C6F63;
      break;
    case 2:
      uint64_t result = 0x6874646977;
      break;
    case 3:
      uint64_t result = 0x7465736E69;
      break;
    case 4:
      uint64_t result = 0x706143656E696CLL;
      break;
    case 5:
      uint64_t result = 0x74746150656E696CLL;
      break;
    case 6:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFE0F94C()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701667182;
      break;
    case 2:
      uint64_t result = 0x7470697263736564;
      break;
    case 3:
      uint64_t result = 0x73656C797473;
      break;
    case 4:
      uint64_t result = 0x7365707974;
      break;
    case 5:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    case 6:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFE0FA08()
{
  unint64_t result = qword_1EB873C60;
  if (!qword_1EB873C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB873C60);
  }
  return result;
}

uint64_t sub_1BFE0FA5C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFE0FA8C();
  *a1 = result;
  return result;
}

uint64_t sub_1BFE0FA8C()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xF) {
    return 15;
  }
  else {
    return v0;
  }
}

uint64_t sub_1BFE0FAD8(uint64_t a1)
{
  return sub_1BFE0FAF8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1BFE0FAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1BFE0FB78(a1, a4, a2, a3);
  if (!v4)
  {
    uint64_t v8 = v7;
    swift_retain();
    uint64_t v5 = sub_1C045E428(v8, a4);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v5;
}

uint64_t sub_1BFE0FB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0DF55AC(a1, a2, a3, a4);
}

BOOL sub_1BFE0FB90(uint64_t a1, uint64_t a2)
{
  return sub_1BFE0FB98(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

BOOL sub_1BFE0FB98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return (a3() & 1) == 0;
}

uint64_t sub_1BFE0FBC8(uint64_t a1, uint64_t a2)
{
  return sub_1BFE0FBD0(a1, a2, *(unsigned char *)(v2 + 16));
}

uint64_t sub_1BFE0FBD0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  int v4 = a3;
  uint64_t v5 = sub_1C1517CDC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v4 == 3) {
    unsigned __int8 v9 = 0;
  }
  else {
    unsigned __int8 v9 = a3;
  }
  sub_1BFF81FF0();
  sub_1C1517C7C();
  uint64_t v10 = (_DWORD *)MEMORY[0x1E4FABA50];
  if (v9)
  {
    if (v9 == 1) {
      uint64_t v11 = *MEMORY[0x1E4FABA58];
    }
    else {
      uint64_t v11 = *MEMORY[0x1E4FABA50];
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 104))(v8, v11, v5);
  }
  else
  {
    sub_1C1517B8C();
  }
  swift_release();
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v12 == *v10)
  {
    sub_1C1517C7C();
    sub_1C1517B4C();
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    CGFloat v20 = v19;
    swift_release();
    v32.origin.x = v14;
    v32.origin.y = v16;
    v32.size.width = v18;
    v32.size.height = v20;
    CGRectGetWidth(v32);
    char v21 = sub_1C1517D3C();
  }
  else if (v12 == *MEMORY[0x1E4FABA58])
  {
    sub_1C1517C7C();
    sub_1C1517B4C();
    CGFloat v23 = v22;
    CGFloat v25 = v24;
    CGFloat v27 = v26;
    CGFloat v29 = v28;
    swift_release();
    v33.origin.x = v23;
    v33.origin.y = v25;
    v33.size.width = v27;
    v33.size.height = v29;
    CGRectGetHeight(v33);
    char v21 = sub_1C1517D3C();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v21 = 0;
  }
  return v21 & 1;
}

uint64_t sub_1BFE0FE04(void *a1)
{
  return FormatSolidFill.encode(to:)(a1);
}

uint64_t FormatSolidFill.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v30 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v28 - v6;
  sub_1C08B499C();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *v1;
  unint64_t v29 = v1[1];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1C08B4870();
  uint64_t v15 = v14;
  uint64_t v16 = sub_1C085F050(&qword_1EB8925F0, (void (*)(uint64_t))sub_1C08B4870);
  CGRect v32 = v10;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatSolidFill, v17, v12, (uint64_t)&type metadata for FormatSolidFill, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v10, v16, (uint64_t)&off_1F1C39B68);
  uint64_t v18 = qword_1EB882D28;
  swift_retain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C151928C();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB93CAB0);
  char v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  v21(v7, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = v31;
  sub_1C06D8F38(v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (v22)
  {
    uint64_t v23 = (uint64_t)v32;
  }
  else
  {
    uint64_t v24 = (uint64_t)v30;
    v21(v30, v20, v19);
    swift_storeEnumTagMultiPayload();
    unint64_t v25 = v29;
    swift_retain();
    uint64_t v26 = (uint64_t)v32;
    sub_1C06D90D4(v25, 1, 0, 0, v24, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v24, type metadata accessor for FormatVersionRequirement);
    swift_release();
    uint64_t v23 = v26;
  }
  return sub_1BFEFEB68(v23, (uint64_t (*)(void))sub_1C08B499C);
}

unint64_t sub_1BFE10198()
{
  unint64_t result = qword_1EB873C50;
  if (!qword_1EB873C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB873C50);
  }
  return result;
}

uint64_t sub_1BFE101EC(void *a1)
{
  return FormatOptionEnum.encode(to:)(a1);
}

uint64_t FormatOptionEnum.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v36 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v39 = (char *)&v35 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v35 - v8;
  sub_1C089F288();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v1;
  uint64_t v13 = v1[1];
  uint64_t v15 = v1[3];
  uint64_t v37 = v1[2];
  uint64_t v38 = v15;
  uint64_t v35 = v1[4];
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1C089F15C();
  uint64_t v19 = v18;
  uint64_t v20 = sub_1C085F050(&qword_1EB891C00, (void (*)(uint64_t))sub_1C089F15C);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatOptionEnum, v21, v16, (uint64_t)&type metadata for FormatOptionEnum, v19, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v12, v20, (uint64_t)&off_1F1C39B68);
  uint64_t v22 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1C151928C();
  uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1EB93CAB0);
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  v40(v9, v24, v23);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = v41;
  sub_1C06C1BE0(v14, v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v25)
  {
    uint64_t v28 = (uint64_t)v12;
  }
  else
  {
    uint64_t v26 = (uint64_t)v39;
    v40(v39, v24, v23);
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = v38;
    swift_bridgeObjectRetain();
    sub_1C06C1BE0(v37, v27, 1, 0, 0, v26, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v30 = v40;
    uint64_t v31 = qword_1EB8875F8;
    uint64_t v32 = v35;
    swift_bridgeObjectRetain();
    if (v31 != -1) {
      swift_once();
    }
    uint64_t v33 = __swift_project_value_buffer(v23, (uint64_t)qword_1EB93C9F0);
    uint64_t v34 = (uint64_t)v36;
    v30(v36, v33, v23);
    swift_storeEnumTagMultiPayload();
    sub_1C06D73D0(v32, 2, 0, 0);
    sub_1BFEFEB68(v34, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v28 = (uint64_t)v12;
  }
  return sub_1BFEFEB68(v28, (uint64_t (*)(void))sub_1C089F288);
}

void sub_1BFE10698()
{
  if (!qword_1EB879C98)
  {
    sub_1C08FC718(255, &qword_1EB8718B0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879C98);
    }
  }
}

uint64_t sub_1BFE1071C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFill.init(from:)(a1, a2);
}

uint64_t FormatFill.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v25 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v23 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_14:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    uint64_t v21 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v21);
  }
  uint64_t v9 = a1[3];
  uint64_t v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  uint64_t v10 = sub_1C1520EAC();
  LOBYTE(v9) = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = v8;
  if (v9)
  {
    uint64_t v12 = sub_1C152070C();
    uint64_t v13 = *(void *)(v12 + 16);
    if (v13)
    {
      uint64_t v14 = (unint64_t *)(v12 + 40);
      while (1)
      {
        unint64_t v15 = *v14;
        if (*v14 >= 4) {
          break;
        }
        v14 += 2;
        if (!--v13) {
          goto LABEL_7;
        }
      }
      uint64_t v18 = *(v14 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v19 = v18;
      *(void *)(v19 + 8) = v15;
      *(void *)(v19 + 16) = &unk_1F1B84D68;
      *(_OWORD *)(v19 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v18, v15);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v6);
      a1 = v24;
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE10C1C();
  uint64_t v45 = 0;
  uint64_t v46 = 0;
  sub_1C15206EC();
  uint64_t v17 = v25;
  uint64_t v16 = v26;
  switch(v47)
  {
    case 1:
      long long v35 = xmmword_1C152C800;
      sub_1BFDD94E8();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v6);
      long long v36 = v27;
      long long v37 = v28;
      long long v38 = v29;
      long long v39 = v30;
      sub_1C0884750((uint64_t)&v36);
      goto LABEL_16;
    case 2:
      long long v35 = xmmword_1C152C800;
      sub_1C0874710();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v6);
      long long v31 = v40;
      long long v32 = v41;
      long long v33 = v42;
      long long v34 = v43;
      long long v27 = v36;
      long long v28 = v37;
      long long v29 = v38;
      long long v30 = v39;
      sub_1C088473C((uint64_t)&v27);
      uint64_t v20 = &v27;
      goto LABEL_17;
    case 3:
      long long v27 = xmmword_1C152C800;
      sub_1BFE10CC4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v6);
      *(void *)&long long v36 = v35;
      sub_1C0884728((uint64_t)&v36);
      goto LABEL_16;
    default:
      long long v35 = xmmword_1C152C800;
      sub_1BFE10C70();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v6);
      long long v36 = v27;
      sub_1C0884764((uint64_t)&v36);
LABEL_16:
      uint64_t v20 = &v36;
LABEL_17:
      sub_1BFF6530C((uint64_t)v20, (uint64_t)v44);
      sub_1BFF6530C((uint64_t)v44, v17);
      uint64_t v21 = (uint64_t)v24;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v21);
}

unint64_t sub_1BFE10C1C()
{
  unint64_t result = qword_1EB886CA8;
  if (!qword_1EB886CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB886CA8);
  }
  return result;
}

unint64_t sub_1BFE10C70()
{
  unint64_t result = qword_1EB874F58;
  if (!qword_1EB874F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874F58);
  }
  return result;
}

unint64_t sub_1BFE10CC4()
{
  unint64_t result = qword_1EB85CEF0;
  if (!qword_1EB85CEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85CEF0);
  }
  return result;
}

uint64_t destroy for FormatOption(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(a1 + 24) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch(result)
    {
      case 2:
        uint64_t v9 = sub_1C151928C();
        uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
        v10(v4, v9);
        sub_1BFF05D18();
        v10(v4 + *(int *)(v11 + 48), v9);
        break;
      case 1:
        uint64_t v12 = sub_1C151928C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v4, v12);
        sub_1C015F8A0();
        break;
      case 0:
        uint64_t v7 = sub_1C151928C();
        uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
        return v8(v4, v7);
      default:
        return result;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BFE10F10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0867B8C();
  *a1 = result;
  return result;
}

uint64_t sub_1BFE10F40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0867B38();
  *a1 = result;
  return result;
}

uint64_t sub_1BFE10F70@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatSolidFill.init(from:)(a1, a2);
}

uint64_t FormatSolidFill.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  long long v28 = a2;
  sub_1C08B47DC();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08B4870();
  sub_1C085F050(&qword_1EB8925F0, (void (*)(uint64_t))sub_1C08B4870);
  sub_1C1520EBC();
  if (v2)
  {
    uint64_t v18 = v2;
LABEL_14:
    sub_1C0038728(a1, (uint64_t)v18);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = sub_1C1520EAC();
  char v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = v28;
  uint64_t v12 = v8;
  if (v10)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      unint64_t v15 = (unsigned char *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v21 = *((void *)v15 - 1);
      long long v28 = (uint64_t *)*((void *)v15 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v22 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v22);
      *((void *)&v27 - 4) = &_s10CodingKeysON_50;
      *((void *)&v27 - 3) = sub_1C08B48F4();
      *((void *)&v27 - 2) = sub_1BFE11430();
      *((void *)&v27 - 1) = sub_1C08B4948();
      swift_getKeyPath();
      swift_retain();
      uint64_t v23 = sub_1C085FB14((uint64_t)&unk_1F1B87C28);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v18 = (void *)swift_allocError();
      uint64_t v24 = (uint64_t)v28;
      *(void *)uint64_t v25 = v28;
      *(void *)(v25 + 8) = v21;
      *(void *)(v25 + 16) = v23;
      *(_OWORD *)(v25 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v24, v21, 1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v31 = 0uLL;
  char v32 = 0;
  if (sub_1C152071C())
  {
    long long v29 = 0uLL;
    char v30 = 0;
    sub_1BFE113DC();
    sub_1C15206EC();
    uint64_t v16 = v33;
  }
  else
  {
    uint64_t v17 = swift_allocObject();
    *(unsigned char *)(v17 + 16) = 21;
    *(void *)(v17 + 24) = 0x3FF0000000000000;
    *(unsigned char *)(v17 + 32) = 0;
    uint64_t v16 = v17 | 0x1000000000000000;
  }
  long long v27 = xmmword_1C153AB20;
  long long v31 = xmmword_1C153AB20;
  char v32 = 0;
  if (sub_1C152071C())
  {
    long long v29 = v27;
    char v30 = 0;
    sub_1BFE113DC();
    sub_1C15206EC();
    uint64_t v26 = v33;
  }
  else
  {
    uint64_t v20 = swift_allocObject();
    *(unsigned char *)(v20 + 16) = 2;
    *(void *)(v20 + 24) = 0;
    *(unsigned char *)(v20 + 32) = 0;
    uint64_t v26 = v20 | 0x1000000000000000;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  *uint64_t v11 = v16;
  v11[1] = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFE113DC()
{
  unint64_t result = qword_1EB873C58;
  if (!qword_1EB873C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB873C58);
  }
  return result;
}

unint64_t sub_1BFE11430()
{
  unint64_t result = qword_1EB8879A8;
  if (!qword_1EB8879A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8879A8);
  }
  return result;
}

uint64_t sub_1BFE11484@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatTypeDefinition.Case.init(from:)(a1, a2);
}

uint64_t FormatTypeDefinition.Case.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  long long v36 = a2;
  sub_1C08C3A54();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08C3AE8();
  sub_1C085F050(&qword_1EB891F10, (void (*)(uint64_t))sub_1C08C3AE8);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v35 = v7;
  char v10 = v36;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_1C1520EAC();
  char v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = v9;
  if (v12)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v20 = *((void *)v16 - 2);
      uint64_t v21 = *((void *)v16 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v22 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v22);
      *(&v32 - 4) = (uint64_t)&_s10CodingKeysON_14;
      *(&v32 - 3) = sub_1C08C3B6C();
      *(&v32 - 2) = sub_1BFE118F8();
      *(&v32 - 1) = sub_1C08C3BC0();
      swift_getKeyPath();
      swift_retain();
      uint64_t v23 = sub_1C085FB14((uint64_t)&unk_1F1B88970);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v24 = v20;
      *(void *)(v24 + 8) = v21;
      *(void *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v20, v21, 1);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v41 = 0uLL;
  char v42 = 0;
  uint64_t v17 = sub_1C152069C();
  uint64_t v19 = v18;
  long long v41 = xmmword_1C153AB20;
  char v42 = 0;
  uint64_t v26 = sub_1C152069C();
  uint64_t v28 = v27;
  long long v34 = xmmword_1C1557FA0;
  long long v41 = xmmword_1C1557FA0;
  char v42 = 0;
  char v29 = sub_1C152071C();
  if (v29)
  {
    long long v39 = v34;
    char v40 = 0;
    sub_1C15206EC();
    *(void *)&long long v34 = v37;
    unint64_t v30 = v38;
  }
  else
  {
    *(void *)&long long v34 = 0;
    unint64_t v30 = 0xE000000000000000;
  }
  unint64_t v33 = v30;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v6);
  *char v10 = v17;
  v10[1] = v19;
  void v10[2] = v26;
  v10[3] = v28;
  unint64_t v31 = v33;
  v10[4] = v34;
  v10[5] = v31;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFE118F8()
{
  unint64_t result = qword_1EB889C70;
  if (!qword_1EB889C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889C70);
  }
  return result;
}

uint64_t sub_1BFE1194C(void *a1)
{
  return FormatAndExpression.encode(to:)(a1);
}

uint64_t FormatAndExpression.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v30 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v28 - v6;
  sub_1C0860018();
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v1;
  uint64_t v29 = v1[1];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1C085FEEC();
  uint64_t v15 = v14;
  uint64_t v16 = sub_1C085F050(&qword_1EB891D60, (void (*)(uint64_t))sub_1C085FEEC);
  uint64_t v32 = v10;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatAndExpression, v17, v12, (uint64_t)&type metadata for FormatAndExpression, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v10, v16, (uint64_t)&off_1F1C39B68);
  uint64_t v18 = qword_1EB882D28;
  swift_retain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C151928C();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB93CAB0);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  v21(v7, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = v31;
  sub_1C06BDF68(v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (v22)
  {
    uint64_t v23 = (uint64_t)v32;
  }
  else
  {
    uint64_t v24 = (uint64_t)v30;
    v21(v30, v20, v19);
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = v29;
    swift_retain();
    uint64_t v26 = (uint64_t)v32;
    sub_1C06BDF68(v25, 1, 0, 0, v24, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v24, type metadata accessor for FormatVersionRequirement);
    swift_release();
    uint64_t v23 = v26;
  }
  return sub_1BFEFEB68(v23, (uint64_t (*)(void))sub_1C0860018);
}

uint64_t sub_1BFE11CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BFE129E0(0, &qword_1EB871358, (uint64_t (*)(void))sub_1BFE123B0, (uint64_t)&type metadata for FeedBannerAdViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  __n128 v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = &v14[-v10];
  uint64_t v17 = a1;
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v8 + 104))(&v14[-v10], *MEMORY[0x1E4FAB9E0], v7, v9);
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1BFE11EB0(0, &qword_1EB8712F0, MEMORY[0x1E4FAB6F0]);
  sub_1BFE11F70(&qword_1EB8712E8, &qword_1EB8712F0, v12);
  sub_1C151734C();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v7);
}

void sub_1BFE11EB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for FeedBannerAdViewLayout;
    v8[1] = type metadata accessor for FeedBannerAdViewLayout.Attributes(255);
    _OWORD v8[2] = sub_1BFE123B0();
    v8[3] = sub_1BFE131B4(&qword_1EB872A20, (void (*)(uint64_t))type metadata accessor for FeedBannerAdViewLayout.Attributes);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1BFE11F70(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFE11EB0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE11FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151D9BC();
  MEMORY[0x1F4188790](v6 - 8);
  sub_1BFE13DBC();
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  MEMORY[0x1F4188790](v7);
  __n128 v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE129E0(0, &qword_1EB871358, (uint64_t (*)(void))sub_1BFE123B0, (uint64_t)&type metadata for FeedBannerAdViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v11 = v10;
  uint64_t v18 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v18 - v13;
  v21[6] = a1;
  swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FABA20], v11);
  v21[5] = *(void *)(a2 + 32);
  v21[3] = type metadata accessor for FeedBannerAd();
  v21[4] = sub_1BFE131B4(&qword_1EB895030, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v21);
  sub_1BFF54980(a3, (uint64_t)boxed_opaque_existential_0);
  swift_retain();
  sub_1C151D9AC();
  sub_1BFE12570(0, &qword_1EB871230, MEMORY[0x1E4F7AFF0], (void (*)(void))sub_1C008E324);
  sub_1C151DA8C();
  sub_1BFE123B0();
  sub_1BFE13EC8();
  sub_1BFE131B4((unint64_t *)&unk_1EB8717B0, MEMORY[0x1E4F7B040]);
  sub_1C15175AC();
  uint64_t v16 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1BFE11EB0(0, &qword_1EB8711E8, MEMORY[0x1E4FAB4D0]);
  sub_1BFE11F70(&qword_1EB8711E0, &qword_1EB8711E8, v16);
  sub_1C151736C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v18);
}

unint64_t sub_1BFE123B0()
{
  unint64_t result = qword_1EB872B38[0];
  if (!qword_1EB872B38[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB872B38);
  }
  return result;
}

uint64_t sub_1BFE12404@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13D64();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v8, 0, sizeof(v8));
  char v9 = 1;
  sub_1BFE12570(0, (unint64_t *)&qword_1EB871268, type metadata accessor for CGRect, (void (*)(void))sub_1C061FF30);
  swift_allocObject();
  uint64_t v5 = sub_1C15172BC();
  uint64_t v6 = sub_1C151DA2C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  sub_1BFE12570(0, &qword_1EB871230, MEMORY[0x1E4F7AFF0], (void (*)(void))sub_1C008E324);
  swift_allocObject();
  uint64_t result = sub_1C15172BC();
  *a1 = v5;
  a1[1] = result;
  return result;
}

void sub_1BFE12570(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_1C15172AC();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1BFE125E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    type metadata accessor for CGRect(255);
    uint64_t v7 = v6;
    uint64_t v8 = sub_1BFE1328C(&qword_1EB87A288, type metadata accessor for CGRect);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t FeedBannerAdViewLayout.Attributes.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v20 = sub_1C151DA2C();
  uint64_t v17 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE129E0(0, &qword_1EB87A4D8, (uint64_t (*)(void))sub_1BFE13D10, (uint64_t)&type metadata for FeedBannerAdViewLayout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v21 = v5;
  uint64_t v19 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v17 - v6;
  uint64_t v8 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE13D10();
  uint64_t v11 = v22;
  sub_1C1520EBC();
  if (v11)
  {
    uint64_t v16 = (uint64_t)a1;
  }
  else
  {
    uint64_t v22 = a1;
    uint64_t v13 = v19;
    uint64_t v12 = v20;
    type metadata accessor for CGRect(0);
    char v25 = 0;
    sub_1BFE131B4(&qword_1EB87A290, type metadata accessor for CGRect);
    sub_1C15206EC();
    long long v14 = v24;
    *(_OWORD *)uint64_t v10 = v23;
    *((_OWORD *)v10 + 1) = v14;
    LOBYTE(v23) = 1;
    sub_1BFE131B4(&qword_1EB871798, MEMORY[0x1E4F7AFF0]);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v21);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v10[*(int *)(v8 + 20)], v4, v12);
    sub_1BFE13CAC((uint64_t)v10, v18);
    uint64_t v16 = (uint64_t)v22;
  }
  return __swift_destroy_boxed_opaque_existential_1(v16);
}

void sub_1BFE129E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t HeadlineViewLayout.Attributes.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1BFE13B5C(0, &qword_1EB87A548, (uint64_t (*)(void))sub_1BFE13BC4, (uint64_t)&type metadata for HeadlineViewLayout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v63 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v36 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE13BC4();
  sub_1C1520EBC();
  if (!v2)
  {
    id v62 = a2;
    type metadata accessor for CGRect(0);
    char v66 = 0;
    sub_1BFE13244(&qword_1EB87A290, type metadata accessor for CGRect);
    sub_1C15206EC();
    long long v9 = v64;
    long long v10 = v65;
    char v66 = 1;
    sub_1C15206EC();
    long long v11 = v64;
    long long v12 = v65;
    char v66 = 2;
    sub_1C15206EC();
    uint64_t v58 = *((void *)&v12 + 1);
    uint64_t v59 = v12;
    uint64_t v60 = *((void *)&v11 + 1);
    uint64_t v61 = v11;
    long long v13 = v64;
    long long v14 = v65;
    char v66 = 3;
    sub_1C15206EC();
    uint64_t v54 = *((void *)&v14 + 1);
    uint64_t v55 = v14;
    uint64_t v56 = *((void *)&v13 + 1);
    uint64_t v57 = v13;
    long long v15 = v64;
    long long v16 = v65;
    char v66 = 4;
    sub_1C15206EC();
    uint64_t v50 = *((void *)&v16 + 1);
    uint64_t v51 = v16;
    uint64_t v52 = *((void *)&v15 + 1);
    uint64_t v53 = v15;
    long long v17 = v64;
    long long v18 = v65;
    char v66 = 5;
    sub_1C15206EC();
    uint64_t v46 = *((void *)&v18 + 1);
    uint64_t v47 = v18;
    uint64_t v48 = *((void *)&v17 + 1);
    uint64_t v49 = v17;
    long long v19 = v64;
    long long v20 = v65;
    char v66 = 6;
    sub_1C15206EC();
    uint64_t v44 = *((void *)&v64 + 1);
    uint64_t v45 = v64;
    uint64_t v42 = *((void *)&v65 + 1);
    uint64_t v43 = v65;
    char v66 = 7;
    sub_1C15206EC();
    uint64_t v40 = *((void *)&v64 + 1);
    uint64_t v41 = v64;
    uint64_t v38 = *((void *)&v65 + 1);
    uint64_t v39 = v65;
    type metadata accessor for UIRectCorner(0);
    char v66 = 8;
    sub_1BFE13244((unint64_t *)&unk_1EB87A0D0, type metadata accessor for UIRectCorner);
    sub_1C15206EC();
    uint64_t v37 = v64;
    char v66 = 9;
    sub_1BFE7E344();
    sub_1C15206EC();
    uint64_t v36 = v64;
    char v66 = 10;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v63);
    uint64_t v22 = v62;
    *id v62 = v9;
    v22[1] = v10;
    uint64_t v23 = v60;
    *((void *)v22 + 4) = v61;
    *((void *)v22 + 5) = v23;
    uint64_t v24 = v58;
    *((void *)v22 + 6) = v59;
    *((void *)v22 + 7) = v24;
    uint64_t v25 = v56;
    *((void *)v22 + 8) = v57;
    *((void *)v22 + 9) = v25;
    uint64_t v26 = v54;
    *((void *)v22 + 10) = v55;
    *((void *)v22 + 11) = v26;
    uint64_t v27 = v52;
    *((void *)v22 + 12) = v53;
    *((void *)v22 + 13) = v27;
    uint64_t v28 = v50;
    *((void *)v22 + 14) = v51;
    *((void *)v22 + 15) = v28;
    uint64_t v29 = v48;
    *((void *)v22 + 16) = v49;
    *((void *)v22 + 17) = v29;
    uint64_t v30 = v46;
    *((void *)v22 + 18) = v47;
    *((void *)v22 + 19) = v30;
    v22[10] = v19;
    v22[11] = v20;
    uint64_t v31 = v44;
    *((void *)v22 + 24) = v45;
    *((void *)v22 + 25) = v31;
    uint64_t v32 = v42;
    *((void *)v22 + 26) = v43;
    *((void *)v22 + 27) = v32;
    uint64_t v33 = v40;
    *((void *)v22 + 28) = v41;
    *((void *)v22 + 29) = v33;
    uint64_t v34 = v38;
    *((void *)v22 + 30) = v39;
    *((void *)v22 + 31) = v34;
    *((void *)v22 + 32) = v37;
    *((void *)v22 + 33) = v36;
    long long v35 = v65;
    v22[17] = v64;
    v22[18] = v35;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t sub_1BFE13124(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE1316C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE131B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE131FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE13244(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE1328C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE132D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE1331C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CGRect(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE13360(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for UIRectCorner(uint64_t a1)
{
}

uint64_t HeadlineViewLayout.init()@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v12 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v11 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v10 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v3 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v4 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v5 = sub_1C15172BC();
  sub_1BFE13C18();
  swift_allocObject();
  uint64_t v6 = sub_1C15172BC();
  sub_1BFE13B5C(0, &qword_1EB871220, (uint64_t (*)(void))sub_1C009205C, MEMORY[0x1E4FBC958], MEMORY[0x1E4FAB4F0]);
  swift_allocObject();
  uint64_t v7 = sub_1C15172BC();
  swift_allocObject();
  uint64_t v8 = sub_1C15172BC();
  swift_allocObject();
  uint64_t result = sub_1C15172BC();
  *a1 = v12;
  a1[1] = v11;
  a1[2] = v10;
  a1[3] = v2;
  a1[4] = v3;
  a1[5] = v4;
  a1[6] = v5;
  a1[7] = v6;
  a1[8] = v7;
  a1[9] = v8;
  a1[10] = result;
  return result;
}

uint64_t FormatLayout.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C151635C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v17, 0, sizeof(v17));
  char v18 = 1;
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v6 = sub_1C15172BC();
  sub_1C151634C();
  uint64_t v7 = sub_1C151633C();
  uint64_t v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)&v17[0] = v7;
  *((void *)&v17[0] + 1) = v9;
  sub_1BFE13AFC();
  swift_allocObject();
  uint64_t v10 = sub_1C15172BC();
  v17[0] = xmmword_1C152C800;
  sub_1BFE13900(0, &qword_1EB871250, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], (void (*)(void))sub_1C0065624);
  swift_allocObject();
  uint64_t v11 = sub_1C15172BC();
  v17[0] = 0uLL;
  swift_allocObject();
  uint64_t v12 = sub_1C15172BC();
  v17[0] = 0uLL;
  swift_allocObject();
  uint64_t v13 = sub_1C15172BC();
  sub_1BFE13A08();
  swift_allocObject();
  uint64_t v14 = sub_1C151775C();
  sub_1BFE13A64();
  swift_allocObject();
  uint64_t v15 = sub_1C151775C();
  LOBYTE(v17[0]) = 8;
  sub_1BFE13900(0, (unint64_t *)&qword_1EB87C688, (unint64_t *)&qword_1EB877B28, (uint64_t)&type metadata for FormatAccessibilityRole, (void (*)(void))sub_1C00733AC);
  swift_allocObject();
  uint64_t result = sub_1C15172BC();
  *a1 = v6;
  a1[1] = v10;
  a1[2] = v11;
  a1[3] = v12;
  a1[4] = v13;
  a1[5] = v14;
  a1[6] = v15;
  a1[7] = result;
  return result;
}

void sub_1BFE13900(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, void (*a5)(void))
{
  if (!*a2)
  {
    sub_1BFC77FBC(255, a3);
    a5();
    unint64_t v7 = sub_1C15172AC();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1BFE13974()
{
  if (!qword_1EB871268)
  {
    type metadata accessor for CGRect(255);
    sub_1C0065BD0(&qword_1EB87A288, type metadata accessor for CGRect);
    unint64_t v0 = sub_1C15172AC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871268);
    }
  }
}

void sub_1BFE13A08()
{
  if (!qword_1EB871318)
  {
    sub_1C007CF78();
    unint64_t v0 = sub_1C151776C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871318);
    }
  }
}

void sub_1BFE13A64()
{
  if (!qword_1EB884D98)
  {
    type metadata accessor for FormatAccessibilityLayoutValue();
    sub_1BFF4CF20(&qword_1EB88D700, 255, (void (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue);
    unint64_t v0 = sub_1C151776C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884D98);
    }
  }
}

void sub_1BFE13AFC()
{
  if (!qword_1EB871240)
  {
    unint64_t v0 = sub_1C15172AC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871240);
    }
  }
}

void sub_1BFE13B5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1BFE13BC4()
{
  unint64_t result = qword_1EB8761A8;
  if (!qword_1EB8761A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8761A8);
  }
  return result;
}

void sub_1BFE13C18()
{
  if (!qword_1EB871258)
  {
    type metadata accessor for UIRectCorner(255);
    sub_1BFE13244(&qword_1EB87A0C8, type metadata accessor for UIRectCorner);
    unint64_t v0 = sub_1C15172AC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871258);
    }
  }
}

uint64_t sub_1BFE13CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BFE13D10()
{
  unint64_t result = qword_1EB8729F8;
  if (!qword_1EB8729F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8729F8);
  }
  return result;
}

void sub_1BFE13D64()
{
  if (!qword_1EB8717A0)
  {
    sub_1C151DA2C();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8717A0);
    }
  }
}

void sub_1BFE13DBC()
{
  if (!qword_1EB8712C0)
  {
    sub_1BFE12570(255, &qword_1EB871230, MEMORY[0x1E4F7AFF0], (void (*)(void))sub_1C008E324);
    sub_1C151DA8C();
    sub_1BFE123B0();
    sub_1BFE13EC8();
    sub_1BFE131B4((unint64_t *)&unk_1EB8717B0, MEMORY[0x1E4F7B040]);
    unint64_t v0 = sub_1C15175BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8712C0);
    }
  }
}

unint64_t sub_1BFE13EC8()
{
  unint64_t result = qword_1EB871228;
  if (!qword_1EB871228)
  {
    sub_1BFE12570(255, &qword_1EB871230, MEMORY[0x1E4F7AFF0], (void (*)(void))sub_1C008E324);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB871228);
  }
  return result;
}

uint64_t sub_1BFE13F50()
{
  uint64_t v1 = *(void *)(v0 + 48);
  *(CFTimeInterval *)(v0 + 208) = CACurrentMediaTime();
  id v2 = *(id *)(v1 + 40);
  sub_1C151980C();
  sub_1C151981C();
  sub_1C15197DC();
  uint64_t v3 = sub_1C151981C();
  os_signpost_type_t v4 = sub_1C151F62C();
  if (sub_1C151FD2C())
  {
    uint64_t v5 = *(void *)(v0 + 160);
    uint64_t v6 = *(void *)(v0 + 112);
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    unint64_t v9 = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v8(v5, *(void *)(v0 + 168), v6);
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v10 = 0;
    os_signpost_id_t v11 = sub_1C15197EC();
    _os_signpost_emit_with_name_impl(&dword_1BFC31000, v3, v4, v11, "News.FeedService.EmitGroup", "", v10, 2u);
    MEMORY[0x1C18C9B00](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 120);

    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
    unint64_t v9 = (v12 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v13 = *(void *)(v0 + 200);
  uint64_t v14 = *(void *)(v0 + 160);
  uint64_t v15 = *(void *)(v0 + 168);
  uint64_t v16 = *(void *)(v0 + 112);
  uint64_t v17 = *(void *)(v0 + 120);
  uint64_t v18 = *(void *)(v0 + 48);
  uint64_t v19 = *(void *)(v0 + 56);
  *(void *)(v0 + 216) = v8;
  *(void *)(v0 + 224) = v9;
  v8(v14, v15, v16);
  sub_1C151986C();
  swift_allocObject();
  *(void *)(v0 + 232) = sub_1C151985C();
  long long v20 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  *(void *)(v0 + 240) = v20;
  *(void *)(v0 + 248) = (v17 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v20(v15, v16);
  *(void *)(v0 + 256) = *(void *)(v18 + 104);
  *(void *)(v0 + 32) = v13;
  uint64_t v21 = *(void *)(v18 + 16);
  uint64_t v22 = swift_allocObject();
  *(void *)(v0 + 264) = v22;
  uint64_t v23 = *(void *)(v19 + 80);
  *(void *)(v0 + 272) = v23;
  *(void *)(v22 + 16) = v23;
  uint64_t v24 = *(void *)(v19 + 88);
  *(void *)(v0 + 280) = v24;
  *(void *)(v22 + 24) = v24;
  uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v24 + 40) + **(int **)(v24 + 40));
  uint64_t v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v25;
  void *v25 = v0;
  v25[1] = sub_1BFC7721C;
  return v27(v0 + 16, v0 + 32, v21, sub_1C0085BE8, v22, v23, v24);
}

uint64_t static FeedLocation.container(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (a1 < 0)
  {
    uint64_t v6 = a1 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v6;
    uint64_t v5 = 0x7000000000000000;
  }
  else
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a1;
    uint64_t v5 = 0x2000000000000000;
  }
  *a2 = v5 | v4;
  return swift_retain();
}

unint64_t sub_1BFE142C4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if ((v1 & 0x4000000000000000) != 0)
  {
    unint64_t v3 = v1 & 0xBFFFFFFFFFFFFFFFLL;
    swift_retain();
  }
  else
  {
    uint64_t v2 = swift_retain();
    unint64_t v3 = FeedCursorStore.get(token:)(v2);
    sub_1BFC53D34();
  }
  return v3;
}

uint64_t sub_1BFE14324(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

uint64_t FeedCursorStore.get(token:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1C1517E7C();
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 24);
  v10[0] = v5;
  v10[1] = v4;
  uint64_t v7 = type metadata accessor for FeedCursorContainer();
  swift_bridgeObjectRetain();
  MEMORY[0x1C18C5F70](&v11, v10, v6, MEMORY[0x1E4FBB1A0], v7, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  uint64_t v8 = v11;
  swift_endAccess();
  sub_1C1517E8C();
  return v8;
}

uint64_t type metadata accessor for FeedCursorResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFE1443C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result = FeedCursorContainer.init(cursor:)();
  *a2 = result;
  a2[1] = a1;
  return result;
}

uint64_t sub_1BFE14468()
{
  long long v65 = v0;
  uint64_t v1 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v0[37] + 16);
  v1((uint64_t *)v0[39], v0[15], v0[36]);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v19 = v0[39];
    uint64_t v20 = v0[35];
    uint64_t v21 = v0[32];
    uint64_t v22 = v0[33];
    type metadata accessor for FeedCursor();
    uint64_t v23 = *(void *)(v19 + *(int *)(swift_getTupleTypeMetadata2() + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v20, v19, v21);
    type metadata accessor for FeedCursorContainer();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    unint64_t v25 = swift_allocBox();
    uint64_t v27 = v26;
    uint64_t v28 = *(int *)(TupleTypeMetadata2 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v26, v20, v21);
    *(void *)(v27 + v28) = FeedCursorContainer.init(cursor:)(v23);
    swift_retain();
    unint64_t v29 = sub_1BFE14DE4(v25);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = v0[39];
    uint64_t v5 = v0[33];
    uint64_t v4 = v0[34];
    uint64_t v6 = v0[32];
    type metadata accessor for FeedCursor();
    uint64_t v7 = *(void *)(v3 + *(int *)(swift_getTupleTypeMetadata2() + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v3, v6);
    uint64_t v8 = (uint64_t *)(v7 + *(void *)(*(void *)v7 + 272));
    swift_beginAccess();
    uint64_t v9 = *v8;
    uint64_t v11 = v0[33];
    uint64_t v10 = v0[34];
    uint64_t v12 = v0[32];
    if (v9)
    {
      sub_1C151F38C();
      sub_1C15197BC();
      type metadata accessor for FeedCursorContainer();
      uint64_t v13 = swift_getTupleTypeMetadata2();
      uint64_t v14 = swift_allocBox();
      uint64_t v16 = v15;
      uint64_t v17 = *(int *)(v13 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v15, v10, v12);
      *(void *)(v16 + v17) = FeedCursorContainer.init(cursor:)(v7);
      swift_retain();
      unint64_t v18 = v14;
    }
    else
    {
      type metadata accessor for FeedCursorContainer();
      uint64_t v35 = swift_getTupleTypeMetadata2();
      uint64_t v36 = swift_allocBox();
      uint64_t v38 = v37;
      uint64_t v39 = *(int *)(v35 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v37, v10, v12);
      *(void *)(v38 + v39) = FeedCursorContainer.init(cursor:)(v7);
      swift_retain();
      unint64_t v18 = v36 | 0x4000000000000000;
    }
    unint64_t v29 = sub_1BFE14DE4(v18);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    goto LABEL_12;
  }
  uint64_t v30 = *(void *)v0[39];
  v0[41] = v30;
  uint64_t v31 = (uint64_t *)(v30 + *(void *)(*(void *)v30 + 272));
  swift_beginAccess();
  uint64_t v32 = *v31;
  v0[42] = v32;
  if (!v32)
  {
    if ((v0[40] >> 60) - 5 >= 2)
    {
      uint64_t v52 = (uint64_t *)v0[38];
      uint64_t v53 = v0[36];
      uint64_t v54 = v0[15];
      swift_release();
      v1(v52, v54, v53);
      unint64_t v29 = sub_1C11306E4(v52);
    }
    else
    {
      uint64_t v55 = v0[31];
      uint64_t v41 = v0[28];
      uint64_t v58 = v0[30];
      uint64_t v59 = v0[29];
      uint64_t v42 = v0[26];
      uint64_t v43 = v0[27];
      uint64_t v44 = v0[23];
      uint64_t v56 = v0[25];
      uint64_t v57 = v0[24];
      uint64_t v45 = v0[18];
      (*(void (**)(void))(*(void *)(v0[21] - 8) + 56))();
      unsigned __int8 v60 = 3;
      uint64_t v46 = sub_1C151631C();
      uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56);
      v47(v41, 1, 1, v46);
      v47(v43, 1, 1, v46);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v42, 1, 1, v44);
      uint64_t v48 = type metadata accessor for FeedContext();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v45, 1, 1, v48);
      uint64_t v62 = 0;
      uint64_t v63 = 0;
      long long v61 = 0u;
      __int16 v64 = 256;
      uint64_t v49 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v55, 0, &v60, v41, v43, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
              0,
              0,
              v42,
              v45,
              (uint64_t *)&v61,
              (uint64_t)&v63,
              0,
              0,
              0);
      swift_release();
      sub_1C04276B8(v45, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v42, v57);
      uint64_t v50 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
      sub_1C04276B8(v43, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      sub_1C04276B8(v41, (unint64_t *)&qword_1EB871180, v50);
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v55, v59);
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = FeedCursorContainer.init(cursor:)(v49);
      unint64_t v29 = v51 | 0x8000000000000000;
    }
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v40 = (uint64_t (*)(unint64_t))v0[1];
    return v40(v29);
  }
  swift_retain();
  uint64_t v33 = (void *)swift_task_alloc();
  v0[43] = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_1C040FBBC;
  return sub_1C1250170();
}

uint64_t type metadata accessor for FeedCursor()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_1BFE14C28(void *a1, _DWORD *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8) {
    unint64_t v7 = 8;
  }
  else {
    unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unsigned int v8 = *((unsigned __int8 *)a2 + v7);
  if (v8 >= 3 && (v7 & 0xFFFFFFF8) != 0) {
    unsigned int v8 = *a2 + 3;
  }
  if (v8 == 2)
  {
    *a1 = *(void *)a2;
  }
  else if (v8 == 1)
  {
    (*(void (**)(void *, _DWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    LOBYTE(v8) = 1;
  }
  else
  {
    (*(void (**)(void *, _DWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    LOBYTE(v8) = 0;
    *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  *((unsigned char *)a1 + v7) = v8;
  swift_retain();
  return a1;
}

unint64_t sub_1BFE14DE4(unint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v6 = (char *)&v32 - v5;
  uint64_t v7 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 56) == 1
    && (swift_checkMetadataState(),
        FeedServiceFetchResult.feedContext.getter(a1, (uint64_t)v9),
        char v10 = v9[*(int *)(v7 + 24)],
        sub_1C019CB28((uint64_t)v9),
        (v10 & 1) == 0))
  {
    switch(a1 >> 61)
    {
      case 1uLL:
        uint64_t v20 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v21 = swift_allocObject();
        swift_retain();
        *(void *)(v21 + 16) = sub_1BFE15430();
        *(void *)(v21 + 24) = v20;
        a1 = v21 | 0x2000000000000000;
        break;
      case 2uLL:
        type metadata accessor for FeedCursorContainer();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v23 = swift_projectBox();
        uint64_t v24 = *(void *)(v23 + *(int *)(TupleTypeMetadata2 + 48));
        unint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
        v25(v6, v23, AssociatedTypeWitness);
        uint64_t v26 = swift_allocObject();
        sub_1BFE18054(AssociatedTypeWitness, AssociatedTypeWitness);
        swift_allocObject();
        swift_retain();
        uint64_t v27 = sub_1C151EC6C();
        v25(v28, (uint64_t)v6, AssociatedTypeWitness);
        sub_1BFE94A38(v27);
        uint64_t v29 = sub_1BFE15430();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
        *(void *)(v26 + 16) = v29;
        *(void *)(v26 + 24) = v24;
        a1 = v26 | 0x6000000000000000;
        break;
      case 3uLL:
        uint64_t v30 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v31 = swift_allocObject();
        swift_retain();
        *(void *)(v31 + 16) = sub_1BFE15430();
        *(void *)(v31 + 24) = v30;
        a1 = v31 | 0x6000000000000000;
        break;
      case 4uLL:
        goto LABEL_3;
      default:
        type metadata accessor for FeedCursorContainer();
        uint64_t v12 = swift_getTupleTypeMetadata2();
        uint64_t v13 = swift_projectBox();
        uint64_t v14 = *(void *)(v13 + *(int *)(v12 + 48));
        uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
        v15(v6, v13, AssociatedTypeWitness);
        uint64_t v16 = swift_allocObject();
        sub_1BFE18054(AssociatedTypeWitness, AssociatedTypeWitness);
        swift_allocObject();
        swift_retain();
        uint64_t v17 = sub_1C151EC6C();
        v15(v18, (uint64_t)v6, AssociatedTypeWitness);
        sub_1BFE94A38(v17);
        uint64_t v19 = sub_1BFE15430();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
        *(void *)(v16 + 16) = v19;
        *(void *)(v16 + 24) = v14;
        a1 = v16 | 0x2000000000000000;
        break;
    }
  }
  else
  {
LABEL_3:
    swift_retain();
  }
  return a1;
}

uint64_t FeedServiceFetchResult.feedContext.getter@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  switch(a1 >> 61)
  {
    case 1uLL:
    case 3uLL:
      uint64_t v3 = (uint64_t *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 24);
      break;
    case 4uLL:
      uint64_t v3 = (uint64_t *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 16);
      break;
    default:
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      type metadata accessor for FeedCursorContainer();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v3 = (uint64_t *)(swift_projectBox() + *(int *)(TupleTypeMetadata2 + 48));
      break;
  }
  uint64_t v5 = *v3;
  return FeedCursorContainer.feedContext.getter(v5, a2);
}

uint64_t sub_1BFE15430()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v1 = sub_1C151ECBC();
  sub_1C151ED5C();
  swift_getWitnessTable();
  sub_1C151EA1C();
  return v1;
}

void *sub_1BFE155BC(void *a1)
{
  return sub_1BFE155F8(a1);
}

void *sub_1BFE155F8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v4 - 8);
  sub_1C1517E9C();
  sub_1C1517ECC();
  swift_allocObject();
  v1[2] = sub_1C1517EBC();
  type metadata accessor for FeedCursorContainer();
  v1[3] = sub_1C151E2FC();
  type metadata accessor for FeedCursorStore.WeakWrapper();
  sub_1C151ED5C();
  uint64_t v5 = sub_1C151E2FC();
  uint64_t v6 = MEMORY[0x1E4FBC870];
  v1[5] = a1;
  v1[6] = v6;
  v1[4] = v5;
  uint64_t v7 = qword_1EB886330;
  id v8 = a1;
  if (v7 != -1) {
    swift_once();
  }
  sub_1BFE15788();
  return v2;
}

uint64_t sub_1BFE15788()
{
  sub_1C1517E7C();
  type metadata accessor for FeedCursorStoreManager.WeakWrapper();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  uint64_t v1 = (void *)(v0 + 24);
  swift_beginAccess();
  unint64_t v2 = *(void *)(v0 + 24);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    uint64_t v3 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x1E4FBC860];
    goto LABEL_15;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_14;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = MEMORY[0x1C18C7CB0](i, v2);
    }
    else
    {
      uint64_t v6 = *(void *)(v2 + 8 * i + 32);
      swift_retain();
    }
    uint64_t v7 = MEMORY[0x1C18C9C60](v6 + 16);
    swift_unknownObjectRelease();
    if (v7)
    {
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = v10;
LABEL_15:
  void *v1 = v8;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v9 = swift_retain();
  MEMORY[0x1C18C66D0](v9);
  if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C151EC8C();
  }
  sub_1C151ECEC();
  sub_1C151EBEC();
  swift_endAccess();
  swift_release();
  return sub_1C1517E8C();
}

uint64_t type metadata accessor for FeedCursorStoreManager.WeakWrapper()
{
  return self;
}

uint64_t sub_1BFE159E4(uint64_t a1)
{
  sub_1C1517E7C();
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = sub_1BFE16970(a1);
  uint64_t v6 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v4) = sub_1BFF896B4(v4, v6, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
    sub_1BFFDEB20();
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
    uint64_t v8 = sub_1BFE16970(a1);
    uint64_t v10 = v9;
    *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v7 + 64) = sub_1BFE9C558();
    *(void *)(v7 + 32) = v8;
    *(void *)(v7 + 40) = v10;
    swift_bridgeObjectRetain();
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_1BFE16970(a1);
    uint64_t v13 = v12;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BFEFFC1C(v16, v11, v13);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  v16[0] = sub_1BFE16970(a1);
  v16[1] = v14;
  swift_beginAccess();
  type metadata accessor for FeedCursorContainer();
  sub_1C151E41C();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C151E44C();
  swift_endAccess();
  return sub_1C1517E8C();
}

uint64_t FeedCursorStoreManager.createToken<A>(cursorContainer:)(uint64_t a1)
{
  if ((~a1 & 0xF000000000000007) == 0) {
    return 0;
  }
  uint64_t v3 = a1;
  swift_retain();
  sub_1C1517E7C();
  swift_beginAccess();
  unint64_t v4 = *(void *)(v1 + 24);
  if (v4 >> 62) {
    goto LABEL_21;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v5)
  {
LABEL_5:
    uint64_t v10 = v3;
    uint64_t v3 = 4;
    while (1)
    {
      uint64_t v6 = v3 - 4;
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = MEMORY[0x1C18C7CB0](v3 - 4, v4);
        uint64_t v8 = v3 - 3;
        if (__OFADD__(v6, 1)) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v7 = *(void *)(v4 + 8 * v3);
        swift_retain();
        uint64_t v8 = v3 - 3;
        if (__OFADD__(v6, 1))
        {
LABEL_20:
          __break(1u);
LABEL_21:
          swift_bridgeObjectRetain();
          uint64_t v5 = sub_1C15204BC();
          if (!v5) {
            break;
          }
          goto LABEL_5;
        }
      }
      if (MEMORY[0x1C18C9C60](v7 + 16))
      {
        type metadata accessor for FeedCursorStore();
        if (swift_dynamicCastClass())
        {
          uint64_t v2 = FeedCursorStore.createToken(cursorContainer:)(v10);
          swift_release();
          swift_unknownObjectRelease();
          if (v2) {
            goto LABEL_19;
          }
          goto LABEL_8;
        }
        swift_unknownObjectRelease();
      }
      swift_release();
LABEL_8:
      ++v3;
      if (v8 == v5)
      {
        uint64_t v2 = 0;
LABEL_19:
        uint64_t v3 = v10;
        goto LABEL_23;
      }
    }
  }
  uint64_t v2 = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  sub_1C1517E8C();
  sub_1BFE14324(v3);
  return v2;
}

unint64_t FeedCursorStoreManager.get<A>(token:)(uint64_t a1)
{
  if (!a1) {
    return 0xF000000000000007;
  }
  uint64_t v2 = a1;
  swift_retain();
  sub_1C1517E7C();
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 24);
  if (v3 >> 62) {
    goto LABEL_22;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  unint64_t v5 = 0xF000000000000007;
  while (v4)
  {
    uint64_t v11 = v2;
    uint64_t v2 = 4;
    while (1)
    {
      uint64_t v6 = v2 - 4;
      if ((v3 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v7 = MEMORY[0x1C18C7CB0](v2 - 4, v3);
      uint64_t v8 = v2 - 3;
      if (__OFADD__(v6, 1)) {
        goto LABEL_21;
      }
LABEL_13:
      if (MEMORY[0x1C18C9C60](v7 + 16))
      {
        type metadata accessor for FeedCursorStore();
        if (swift_dynamicCastClass())
        {
          uint64_t v9 = sub_1BFE16A08(v11);
          swift_release();
          swift_unknownObjectRelease();
          if ((~v9 & 0xF000000000000007) != 0)
          {
            unint64_t v5 = v9;
            goto LABEL_19;
          }
          goto LABEL_7;
        }
        swift_unknownObjectRelease();
      }
      swift_release();
LABEL_7:
      ++v2;
      if (v8 == v4)
      {
        unint64_t v5 = 0xF000000000000007;
        goto LABEL_19;
      }
    }
    uint64_t v7 = *(void *)(v3 + 8 * v2);
    swift_retain();
    uint64_t v8 = v2 - 3;
    if (!__OFADD__(v6, 1)) {
      goto LABEL_13;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C15204BC();
    unint64_t v5 = 0xF000000000000007;
  }
LABEL_19:
  swift_bridgeObjectRelease();
  sub_1C1517E8C();
  swift_release();
  return v5;
}

uint64_t type metadata accessor for FeedCursorStore()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FeedCursorStore.createToken(cursorContainer:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1C1517E7C();
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = sub_1BFE16970(a1);
  uint64_t v7 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v5) = sub_1BFF896B4(v5, v7, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = 0;
  if ((v5 & 1) == 0)
  {
LABEL_51:
    sub_1C1517E8C();
    return v8;
  }
  uint64_t v9 = sub_1BFE16970(a1);
  uint64_t v11 = v10;
  type metadata accessor for FeedCursorToken();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v9;
  *(void *)(v12 + 24) = v11;
  uint64_t v13 = sub_1BFE16970(a1);
  uint64_t v15 = v14;
  swift_beginAccess();
  uint64_t v16 = *(void *)(v2 + 32);
  uint64_t v79 = v13;
  uint64_t v80 = v15;
  type metadata accessor for FeedCursorStore.WeakWrapper();
  uint64_t v17 = sub_1C151ED5C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1C18C5F70](&v76, &v79, v16, MEMORY[0x1E4FBB1A0], v17, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  uint64_t v18 = v76;
  swift_endAccess();
  if (!v18) {
    uint64_t v18 = sub_1C151ECBC();
  }
  uint64_t v83 = v18;
  uint64_t v70 = v12;
  uint64_t v82 = sub_1BFE16BCC();
  sub_1C151ED1C();
  uint64_t v19 = sub_1BFE16970(a1);
  uint64_t v76 = v83;
  uint64_t v79 = v19;
  uint64_t v80 = v20;
  swift_beginAccess();
  sub_1C151E41C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C151E44C();
  swift_endAccess();
  uint64_t v21 = sub_1BFE16970(a1);
  uint64_t v76 = a1;
  uint64_t v79 = v21;
  uint64_t v80 = v22;
  uint64_t v23 = (uint64_t *)(v2 + 24);
  swift_beginAccess();
  uint64_t v73 = type metadata accessor for FeedCursorContainer();
  sub_1C151E41C();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C151E44C();
  uint64_t v24 = swift_endAccess();
  uint64_t v81 = MEMORY[0x1E4FBC870];
  MEMORY[0x1F4188790](v24);
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1C151E40C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v2 + 32) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(v2 + 32);
  uint64_t v71 = v26 + 64;
  uint64_t v27 = 1 << *(unsigned char *)(v26 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & *(void *)(v26 + 64);
  int64_t v72 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v75 = *(void *)(v2 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v31 = 0;
  uint64_t v74 = (uint64_t *)(v2 + 24);
  if (v29) {
    goto LABEL_10;
  }
LABEL_11:
  while (2)
  {
    int64_t v34 = v31 + 1;
    if (!__OFADD__(v31, 1))
    {
      if (v34 < v72)
      {
        unint64_t v35 = *(void *)(v71 + 8 * v34);
        ++v31;
        if (v35) {
          goto LABEL_22;
        }
        int64_t v31 = v34 + 1;
        if (v34 + 1 < v72)
        {
          unint64_t v35 = *(void *)(v71 + 8 * v31);
          if (!v35)
          {
            int64_t v36 = v34 + 2;
            if (v36 < v72)
            {
              unint64_t v35 = *(void *)(v71 + 8 * v36);
              if (v35)
              {
                int64_t v31 = v36;
                goto LABEL_22;
              }
              while (1)
              {
                int64_t v31 = v36 + 1;
                if (__OFADD__(v36, 1)) {
                  goto LABEL_53;
                }
                if (v31 >= v72) {
                  goto LABEL_29;
                }
                unint64_t v35 = *(void *)(v71 + 8 * v31);
                ++v36;
                if (v35) {
                  goto LABEL_22;
                }
              }
            }
            goto LABEL_29;
          }
LABEL_22:
          unint64_t v29 = (v35 - 1) & v35;
          for (unint64_t i = __clz(__rbit64(v35)) + (v31 << 6); ; unint64_t i = v32 | (v31 << 6))
          {
            uint64_t v37 = (uint64_t *)(*(void *)(v75 + 48) + 16 * i);
            uint64_t v38 = *v37;
            uint64_t v39 = v37[1];
            uint64_t v79 = *(void *)(*(void *)(v75 + 56) + 8 * i);
            swift_bridgeObjectRetain();
            swift_getWitnessTable();
            if (sub_1C151F15C()) {
              goto LABEL_9;
            }
            swift_beginAccess();
            uint64_t v40 = *v23;
            uint64_t v76 = v38;
            uint64_t v77 = v39;
            swift_bridgeObjectRetain();
            MEMORY[0x1C18C5F70](&v78, &v76, v40, MEMORY[0x1E4FBB1A0], v73, MEMORY[0x1E4FBB1B0]);
            swift_bridgeObjectRelease();
            uint64_t v41 = v78;
            if ((~v78 & 0xF000000000000007) == 0) {
              break;
            }
            swift_endAccess();
            swift_bridgeObjectRelease();
            uint64_t v42 = FeedCursorContainer.rootCursorContainer.getter(v41);
            sub_1BFE14324(v41);
            do
            {
              swift_retain();
              uint64_t v43 = sub_1BFE16970(v42);
              uint64_t v45 = v44;
              swift_bridgeObjectRetain();
              sub_1BFEFFC1C(&v79, v43, v45);
              swift_bridgeObjectRelease();
              sub_1BFE14324(v42);
              uint64_t v42 = FeedCursorContainer.nextCursorContainer.getter(v42);
              uint64_t result = swift_release();
            }
            while ((~v42 & 0xF000000000000007) != 0);
            uint64_t v23 = v74;
            if (!v29) {
              goto LABEL_11;
            }
LABEL_10:
            unint64_t v32 = __clz(__rbit64(v29));
            v29 &= v29 - 1;
          }
          swift_endAccess();
LABEL_9:
          uint64_t result = swift_bridgeObjectRelease();
          if (!v29) {
            continue;
          }
          goto LABEL_10;
        }
      }
LABEL_29:
      swift_release();
      uint64_t v79 = *v23;
      uint64_t v46 = MEMORY[0x1E4FBB1A0];
      sub_1C151E3DC();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      sub_1C151F05C();
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1C151EFDC();
      swift_bridgeObjectRelease();
      if ((sub_1C151F01C() & 1) == 0)
      {
        sub_1BFFDEB20();
        uint64_t v48 = swift_allocObject();
        *(_OWORD *)(v48 + 16) = xmmword_1C1527210;
        uint64_t v49 = sub_1C151EFCC();
        uint64_t v51 = v50;
        *(void *)(v48 + 56) = v46;
        unint64_t v52 = sub_1BFE9C558();
        *(void *)(v48 + 64) = v52;
        *(void *)(v48 + 32) = v49;
        *(void *)(v48 + 40) = v51;
        uint64_t v53 = sub_1C151EFCC();
        uint64_t v55 = v54;
        swift_bridgeObjectRelease();
        *(void *)(v48 + 96) = v46;
        *(void *)(v48 + 104) = v52;
        *(void *)(v48 + 72) = v53;
        *(void *)(v48 + 80) = v55;
        sub_1C151F38C();
        sub_1C15197BC();
        uint64_t result = swift_bridgeObjectRelease();
        int64_t v56 = 0;
        uint64_t v57 = v47 + 56;
        uint64_t v58 = 1 << *(unsigned char *)(v47 + 32);
        uint64_t v59 = -1;
        if (v58 < 64) {
          uint64_t v59 = ~(-1 << v58);
        }
        unint64_t v60 = v59 & *(void *)(v47 + 56);
        int64_t v61 = (unint64_t)(v58 + 63) >> 6;
        while (1)
        {
          if (v60)
          {
            unint64_t v62 = __clz(__rbit64(v60));
            v60 &= v60 - 1;
            unint64_t v63 = v62 | (v56 << 6);
          }
          else
          {
            int64_t v67 = v56 + 1;
            if (__OFADD__(v56, 1)) {
              goto LABEL_54;
            }
            if (v67 >= v61)
            {
LABEL_49:
              swift_release();
              goto LABEL_50;
            }
            unint64_t v68 = *(void *)(v57 + 8 * v67);
            ++v56;
            if (!v68)
            {
              int64_t v56 = v67 + 1;
              if (v67 + 1 >= v61) {
                goto LABEL_49;
              }
              unint64_t v68 = *(void *)(v57 + 8 * v56);
              if (!v68)
              {
                int64_t v69 = v67 + 2;
                if (v69 >= v61) {
                  goto LABEL_49;
                }
                unint64_t v68 = *(void *)(v57 + 8 * v69);
                if (!v68)
                {
                  while (1)
                  {
                    int64_t v56 = v69 + 1;
                    if (__OFADD__(v69, 1)) {
                      goto LABEL_55;
                    }
                    if (v56 >= v61) {
                      goto LABEL_49;
                    }
                    unint64_t v68 = *(void *)(v57 + 8 * v56);
                    ++v69;
                    if (v68) {
                      goto LABEL_48;
                    }
                  }
                }
                int64_t v56 = v69;
              }
            }
LABEL_48:
            unint64_t v60 = (v68 - 1) & v68;
            unint64_t v63 = __clz(__rbit64(v68)) + (v56 << 6);
          }
          __int16 v64 = (uint64_t *)(*(void *)(v47 + 48) + 16 * v63);
          uint64_t v65 = v64[1];
          uint64_t v76 = *v64;
          uint64_t v66 = v76;
          uint64_t v77 = v65;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          sub_1C151E35C();
          swift_endAccess();
          sub_1BFE14324(v78);
          uint64_t v76 = v66;
          uint64_t v77 = v65;
          swift_beginAccess();
          sub_1C151E35C();
          swift_endAccess();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_50:
      uint64_t v8 = v70;
      goto LABEL_51;
    }
    break;
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_1BFE16970(uint64_t a1)
{
  return *(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
}

uint64_t type metadata accessor for FeedCursorStore.WeakWrapper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FeedCursorToken()
{
  return self;
}

uint64_t FeedCursorContainer.rootCursorContainer.getter(uint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 < 0)
  {
    swift_retain();
  }
  else
  {
    swift_retain();
    uint64_t v2 = FeedCursor.rootCursor.getter();
    swift_release();
    return v2;
  }
  return v1;
}

uint64_t sub_1BFE16A08(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1C1517E7C();
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 24);
  v10[0] = v5;
  v10[1] = v4;
  uint64_t v7 = type metadata accessor for FeedCursorContainer();
  swift_bridgeObjectRetain();
  MEMORY[0x1C18C5F70](&v11, v10, v6, MEMORY[0x1E4FBB1A0], v7, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  uint64_t v8 = v11;
  swift_endAccess();
  sub_1C1517E8C();
  return v8;
}

uint64_t type metadata accessor for FeedCursorContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t storeEnumTagSinglePayload for FormatVideoPlayerContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)uint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t FeedCursorContainer.nextCursorContainer.getter(uint64_t a1)
{
  if (a1 < 0) {
    return 0xF000000000000007;
  }
  uint64_t v1 = (void *)(a1 + *(void *)(*(void *)a1 + 272));
  swift_beginAccess();
  if (!*v1) {
    return 0xF000000000000007;
  }
  uint64_t result = FeedNextCursor.syncCursor.getter();
  if (!result) {
    return 0xF000000000000007;
  }
  return result;
}

uint64_t sub_1BFE16BCC()
{
  uint64_t v0 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  return v0;
}

void *sub_1BFE16C18()
{
  uint64_t v1 = *v0;
  uint64_t v25 = sub_1BFE17EAC();
  uint64_t v23 = *(void *)(v1 + 80);
  uint64_t v24 = *(void *)(v1 + 88);
  type metadata accessor for FeedCursorGroup();
  uint64_t v2 = sub_1C151ED5C();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = sub_1C035E7C8((void (*)(char *, char *))sub_1BFCCC348, (uint64_t)v22, v2, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1BFEF4060(v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = MEMORY[0x1E4FBC870];
  uint64_t v26 = MEMORY[0x1E4FBC870];
  uint64_t v27 = MEMORY[0x1E4FBC870];
  type metadata accessor for FeedNextCursor();
  swift_allocObject();
  uint64_t v8 = swift_retain();
  sub_1BFE17494(v8);
  uint64_t v9 = sub_1BFE1751C();
  if (v9)
  {
    uint64_t v21 = v6;
    do
    {
      uint64_t v10 = *(void *)(v9 + 16);
      if (v10 < 0)
      {
        swift_retain();
        if ((v10 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        {
          swift_retain();
          uint64_t v17 = FeedCursorManifest.consumedGroupIdentifiers(excludingCursorIdentifier:)();
          swift_release();
          sub_1BFEF3808(v17);
          swift_release();
        }
      }
      else
      {
        uint64_t v11 = swift_retain();
        if (v10)
        {
          uint64_t v25 = *(void *)(v10 + qword_1EB93C740);
          MEMORY[0x1F4188790](v11);
          type metadata accessor for FeedDatabaseGroup();
          sub_1C151ED5C();
          swift_bridgeObjectRetain();
          swift_getWitnessTable();
          uint64_t v12 = sub_1C151E97C();
          swift_bridgeObjectRelease();
          uint64_t v13 = *(void *)(v12 + 16);
          if (v13)
          {
            uint64_t v14 = (uint64_t *)(v12 + 40);
            do
            {
              uint64_t v16 = *(v14 - 1);
              uint64_t v15 = *v14;
              swift_bridgeObjectRetain();
              sub_1BFEFFC1C(&v25, v16, v15);
              swift_bridgeObjectRelease();
              v14 += 2;
              --v13;
            }
            while (v13);
          }
          swift_release();
          swift_bridgeObjectRelease();
        }
      }
      swift_release();
      uint64_t v9 = sub_1BFE1751C();
    }
    while (v9);
    uint64_t v7 = v26;
    uint64_t v18 = v27;
    uint64_t v6 = v21;
  }
  else
  {
    uint64_t v18 = v7;
  }
  type metadata accessor for FeedCursorDedupper();
  uint64_t v19 = sub_1BFE181E0(v6, v18, v7);
  swift_release();
  return v19;
}

uint64_t FeedCursor.rootCursor.getter()
{
  uint64_t v1 = v0;
  uint64_t Cursor = type metadata accessor for FeedNextCursor();
  uint64_t v42 = sub_1C151E2FC();
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_retain();
  sub_1BFE17494(v5);
  uint64_t v6 = sub_1BFE17584();
  swift_release();
  v39[0] = v6;
  sub_1C151E41C();
  sub_1C151E44C();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1BFEF9B68(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v9 = v7[2];
  unint64_t v8 = v7[3];
  if (v9 >= v8 >> 1) {
    uint64_t v7 = sub_1BFEF9B68((void *)(v8 > 1), v9 + 1, 1, v7);
  }
  v7[2] = v9 + 1;
  uint64_t v10 = &v7[2 * v9];
  v10[4] = v3;
  v10[5] = v4;
  uint64_t v38 = Cursor;
  swift_allocObject();
  uint64_t v11 = swift_retain();
  sub_1BFE17494(v11);
  uint64_t v12 = sub_1BFE1751C();
  if (v12)
  {
    uint64_t v13 = v12;
    do
    {
      swift_bridgeObjectRetain();
      swift_retain();
      v39[0] = sub_1BFE17584();
      sub_1C151E44C();
      uint64_t v15 = *(void *)((*(void *)(v13 + 16) & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v14 = *(void *)((*(void *)(v13 + 16) & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
      unint64_t v17 = v7[2];
      unint64_t v16 = v7[3];
      swift_bridgeObjectRetain();
      if (v17 >= v16 >> 1) {
        uint64_t v7 = sub_1BFEF9B68((void *)(v16 > 1), v17 + 1, 1, v7);
      }
      v7[2] = v17 + 1;
      uint64_t v18 = &v7[2 * v17];
      v18[4] = v15;
      v18[5] = v14;
      swift_release();
      swift_release();
      uint64_t v13 = sub_1BFE1751C();
    }
    while (v13);
  }
  uint64_t v41 = v7;
  uint64_t v19 = v38;
  swift_allocObject();
  uint64_t v20 = swift_retain();
  sub_1BFE17494(v20);
  swift_retain();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    do
    {
      uint64_t v1 = Strong;
      swift_allocObject();
      uint64_t v22 = swift_retain();
      sub_1BFE17494(v22);
      swift_release();
      swift_release();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1BFE17584();
      swift_release();
      v39[0] = v23;
      sub_1C151E44C();
      uint64_t v24 = *(void *)(v1 + 16);
      uint64_t v25 = *(void *)(v1 + 24);
      swift_bridgeObjectRetain();
      sub_1C0246B08(0, 0, v24, v25);
      swift_release();
      uint64_t Strong = swift_weakLoadStrong();
    }
    while (Strong);
    uint64_t v7 = v41;
  }
  uint64_t v26 = v7[2];
  if (v26)
  {
    uint64_t v36 = v1;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = v42;
    uint64_t v30 = v7 + 5;
    uint64_t v37 = v42;
    do
    {
      uint64_t v31 = *v30;
      v39[0] = *(v30 - 1);
      v39[1] = v31;
      swift_bridgeObjectRetain();
      MEMORY[0x1C18C5F70](&v40, v39, v29, MEMORY[0x1E4FBB1A0], v19, MEMORY[0x1E4FBB1B0]);
      swift_bridgeObjectRelease();
      uint64_t v32 = v40;
      if (v40)
      {
        swift_retain();
        swift_weakAssign();
        sub_1BFE17C28();
        swift_release();
        if (v28)
        {
          uint64_t v33 = (void *)(v28 + *(void *)(*(void *)v28 + 272));
          swift_beginAccess();
          *uint64_t v33 = v32;
          swift_retain();
          uint64_t v29 = v37;
          swift_release();
        }
        uint64_t v34 = *(void *)(v32 + 16);
        if (v34 < 0) {
          uint64_t v34 = 0;
        }
        else {
          swift_retain();
        }
        swift_release();
        if (!v27)
        {
          uint64_t v27 = *(void *)(v32 + 16);
          if (v27 < 0) {
            uint64_t v27 = 0;
          }
          else {
            swift_retain();
          }
        }
        swift_release();
        uint64_t v28 = v34;
        uint64_t v19 = v38;
      }
      v30 += 2;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    if (v27)
    {
      swift_release();
      uint64_t v1 = v27;
    }
    else
    {
      uint64_t v1 = v36;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BFE17494(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_weakInit();
  *(void *)(v2 + 16) = a1;
  swift_retain();
  sub_1C12510A4();
  swift_release();
  swift_weakAssign();
  swift_release();
  return v2;
}

uint64_t type metadata accessor for FeedNextCursor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFE1751C()
{
  if ((*(void *)(v0 + 16) & 0x8000000000000000) != 0) {
    return 0;
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1BFE17584()
{
  if ((*(void *)(v0 + 16) & 0x8000000000000000) != 0)
  {
    swift_retain();
    uint64_t v3 = sub_1C1253DB0();
    uint64_t v2 = swift_allocObject();
    sub_1C1253D4C((uint64_t)v3);
  }
  else
  {
    swift_retain();
    uint64_t v1 = sub_1BFE1764C();
    uint64_t v2 = swift_allocObject();
    sub_1BFE17494((uint64_t)v1);
  }
  swift_release();
  return v2;
}

char *sub_1BFE1764C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v58 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1C151FD8C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  uint64_t v49 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v37 - v6;
  uint64_t v45 = (uint64_t)&v37 - v6;
  uint64_t v8 = sub_1C151631C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v52 = v11;
  __n128 v13 = MEMORY[0x1F4188790](v12);
  uint64_t v53 = (uint64_t)&v37 - v14;
  uint64_t v55 = v0[2];
  uint64_t v57 = v0[3];
  uint64_t v54 = (uint64_t)v0 + *(void *)(v1 + 256);
  uint64_t v46 = *(uint64_t *)((char *)v0 + *(void *)(v1 + 264));
  v63[0] = *((unsigned char *)v0 + 32);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t, __n128))(v9 + 16);
  v15((char *)&v37 - v14, (char *)v0 + qword_1EB93C670, v8, v13);
  ((void (*)(char *, char *, uint64_t))v15)(v11, (char *)v0 + qword_1EB93C640, v8);
  uint64_t v39 = *(uint64_t *)((char *)v0 + qword_1EB93C678);
  uint64_t v56 = *(uint64_t *)((char *)v0 + qword_1EB93C688);
  uint64_t v42 = *(uint64_t *)((char *)v0 + qword_1EB93C738);
  uint64_t v16 = *(uint64_t *)((char *)v0 + qword_1EB93C840);
  uint64_t v43 = *(uint64_t *)((char *)v0 + qword_1EB93C680);
  uint64_t v44 = *(uint64_t *)((char *)v0 + qword_1EB93C740);
  uint64_t v17 = *(uint64_t *)((char *)v0 + qword_1EB93C698);
  uint64_t v50 = *(uint64_t *)((char *)v0 + qword_1EB93C638);
  uint64_t v51 = v17;
  uint64_t v47 = *(uint64_t *)((char *)v0 + qword_1EB93C648);
  uint64_t v18 = *(uint64_t *)((char *)v0 + qword_1EB93CB78);
  uint64_t v41 = *(uint64_t *)((char *)v0 + qword_1EB93CBC0);
  uint64_t v19 = (uint64_t)v0 + *(void *)(*v0 + 224);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v19, v4);
  sub_1C019CC1C((uint64_t)v0 + *(void *)(*v0 + 232), v58);
  uint64_t v20 = (void *)*v0;
  uint64_t v21 = (uint64_t *)((char *)v0 + *(void *)(*v0 + 240));
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  uint64_t v38 = v21[2];
  *(void *)&long long v61 = v23;
  *((void *)&v61 + 1) = v22;
  uint64_t v62 = v38;
  uint64_t v24 = (uint64_t)v0 + v20[31];
  uint64_t v25 = *(unsigned __int8 **)v24;
  LOBYTE(v24) = *(unsigned char *)(v24 + 8);
  uint64_t v59 = v25;
  char v60 = v24;
  uint64_t v37 = *(uint64_t *)((char *)v0 + v20[35]);
  uint64_t v26 = *(uint64_t *)((char *)v0 + v20[36]);
  uint64_t v40 = swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v27 = v46;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = v43;
  swift_bridgeObjectRetain();
  uint64_t v30 = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v31 = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v32 = v37;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v36 = v26;
  uint64_t v33 = v45;
  uint64_t v34 = sub_1C125568C(v55, v57, v54, v27, v63, v53, (uint64_t)v52, v39, v56, v28, v16, v29, v30, v51, v50, v47, v18, v31, v45,
          v58,
          &v61,
          &v59,
          v32,
          v36,
          0,
          0);
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v33, v48);
  swift_release();
  return v34;
}

uint64_t sub_1BFE17C28()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_weakLoadStrong();
  swift_retain();
  if (v1 < 0)
  {
    swift_weakAssign();
    sub_1C1254894();
  }
  else
  {
    sub_1C1255608();
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1BFE17CC4(void (*a1)(void), void (*a2)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *v2;
  if (sub_1C12510A4())
  {
    a1();
    swift_release();
    uint64_t v6 = *(void *)(v5 + 80);
    uint64_t v7 = *(void *)(v5 + 88);
  }
  else
  {
    uint64_t v6 = *(void *)(v5 + 80);
    uint64_t v7 = *(void *)(v5 + 88);
    a2(0, v6, v7);
    sub_1C151ECBC();
  }
  a2(0, v6, v7);
  uint64_t v8 = sub_1C151ECAC();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BFE17DBC(uint64_t (*a1)(uint64_t), void (*a2)(void, void, void))
{
  uint64_t v5 = *v2;
  uint64_t v6 = (uint64_t)v2 + *(void *)(*v2 + 272);
  swift_beginAccess();
  if (*(void *)v6
    && (uint64_t v7 = *(void *)(*(void *)v6 + 16), (v7 & 0x8000000000000000) == 0)
    && (uint64_t v8 = swift_retain(), v7))
  {
    uint64_t v9 = a1(v8);
    swift_release();
  }
  else
  {
    a2(0, *(void *)(v5 + 80), *(void *)(v5 + 88));
    return sub_1C151ECBC();
  }
  return v9;
}

uint64_t sub_1BFE17EAC()
{
  return sub_1BFE17CC4((void (*)(void))sub_1BFE17EAC, (void (*)(void, uint64_t, uint64_t))type metadata accessor for FeedCursorGroup);
}

uint64_t sub_1BFE17EE0()
{
  uint64_t v1 = *v0;
  if (sub_1C12510A4())
  {
    sub_1BFE17EE0();
    swift_release();
    uint64_t v2 = *(void *)(v1 + 80);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 80);
    sub_1C151ECBC();
  }
  sub_1BFE18054(v2, v2);
  uint64_t v3 = *(void *)(v2 - 8);
  swift_allocObject();
  uint64_t v4 = sub_1C151EC6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5, (uint64_t)v0 + *(void *)(*v0 + 256), v2);
  sub_1BFE94A38(v4);
  uint64_t v6 = sub_1C151ECAC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

void sub_1BFE18054(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    sub_1BFE4DBE0();
  }
  else
  {
    sub_1C152089C();
  }
}

uint64_t sub_1BFE180BC()
{
  return sub_1BFE17CC4((void (*)(void))sub_1BFE180BC, (void (*)(void, uint64_t, uint64_t))type metadata accessor for FeedDatabaseGroup);
}

uint64_t sub_1BFE180F0()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 272);
  swift_beginAccess();
  if (!*(void *)v1) {
    return sub_1C151ECBC();
  }
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  if (v2 < 0) {
    return sub_1C151ECBC();
  }
  swift_retain();
  if (!v2) {
    return sub_1C151ECBC();
  }
  uint64_t v3 = sub_1C12535DC();
  swift_release();
  return v3;
}

uint64_t type metadata accessor for FeedGroupEmitterCursor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FeedCursorDedupper()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_1BFE181E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

uint64_t sub_1BFE18228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t initializeWithCopy for FormatTextNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if ((~v5 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  *(void *)(a1 + 16) = v5;
  unint64_t v6 = *(void *)(a2 + 128);
  if (v6 >> 1 == 0xFFFFFFFF)
  {
    long long v7 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v7;
    long long v8 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v8;
    long long v9 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v9;
    long long v10 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v10;
  }
  else
  {
    uint64_t v11 = *(void *)(a2 + 24);
    uint64_t v12 = *(void *)(a2 + 32);
    uint64_t v13 = *(void *)(a2 + 40);
    uint64_t v14 = *(void *)(a2 + 48);
    uint64_t v15 = *(void *)(a2 + 56);
    uint64_t v16 = *(void *)(a2 + 64);
    uint64_t v17 = *(void *)(a2 + 72);
    uint64_t v32 = *(void *)(a2 + 80);
    uint64_t v33 = *(void *)(a2 + 88);
    uint64_t v34 = *(void *)(a2 + 96);
    uint64_t v35 = *(void *)(a2 + 104);
    uint64_t v36 = *(void *)(a2 + 112);
    uint64_t v37 = *(void *)(a2 + 120);
    uint64_t v38 = *(void *)(a2 + 136);
    uint64_t v39 = *(void *)(a2 + 144);
    sub_1BFEF87A0(v11, v12, v13, v14, v15, v16, v17, v32, v33, v34, v35, v36, v37, v6);
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(void *)(a1 + 40) = v13;
    *(void *)(a1 + 48) = v14;
    *(void *)(a1 + 56) = v15;
    *(void *)(a1 + 64) = v16;
    *(void *)(a1 + 72) = v17;
    *(void *)(a1 + 80) = v32;
    *(void *)(a1 + 88) = v33;
    *(void *)(a1 + 96) = v34;
    *(void *)(a1 + 104) = v35;
    *(void *)(a1 + 112) = v36;
    *(void *)(a1 + 120) = v37;
    *(void *)(a1 + 128) = v6;
    *(void *)(a1 + 136) = v38;
    *(void *)(a1 + 144) = v39;
  }
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  int v18 = *(unsigned __int8 *)(a2 + 240);
  swift_bridgeObjectRetain();
  if (v18 == 254)
  {
    long long v19 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v19;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    long long v20 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v20;
  }
  else
  {
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 225) = *(_OWORD *)(a2 + 225);
    swift_retain();
  }
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  long long v21 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v21;
  *(_WORD *)(a1 + 448) = *(_WORD *)(a2 + 448);
  long long v22 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v22;
  long long v23 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v23;
  long long v24 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v24;
  long long v25 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v25;
  long long v26 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v26;
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  uint64_t v27 = *(unsigned __int8 *)(a2 + 480);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27 == 9)
  {
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  }
  else
  {
    *(unsigned char *)(a1 + 480) = v27;
    uint64_t v28 = *(void *)(a2 + 488);
    *(void *)(a1 + 488) = v28;
    if ((~v28 & 0xF000000000000007) != 0) {
      swift_retain();
    }
  }
  uint64_t v29 = *(unsigned __int8 *)(a2 + 496);
  if (v29 == 9)
  {
    *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  }
  else
  {
    *(unsigned char *)(a1 + 496) = v29;
    uint64_t v30 = *(void *)(a2 + 504);
    *(void *)(a1 + 504) = v30;
    if ((~v30 & 0xF000000000000007) != 0) {
      swift_retain();
    }
  }
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for FormatViewNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if ((~v5 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned int v7 = *(unsigned __int8 *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v7 <= 0xFD)
  {
    uint64_t v8 = *(void *)(a2 + 32);
    uint64_t v9 = *(void *)(a2 + 40);
    sub_1BFF046A0(v8, v9, v7);
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v9;
    *(unsigned char *)(a1 + 48) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  }
  if (*(unsigned __int8 *)(a2 + 136) == 254)
  {
    long long v10 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v10;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    long long v11 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v11;
  }
  else
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    long long v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    swift_retain();
  }
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for FormatImageNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if ((~v5 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned int v7 = *(unsigned __int8 *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v7 <= 0xFD)
  {
    uint64_t v8 = *(void *)(a2 + 32);
    uint64_t v9 = *(void *)(a2 + 40);
    sub_1BFF046A0(v8, v9, v7);
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v9;
    *(unsigned char *)(a1 + 48) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  }
  if (*(unsigned __int8 *)(a2 + 136) == 254)
  {
    long long v10 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v10;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    long long v11 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v11;
  }
  else
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    long long v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    swift_retain();
  }
  uint64_t v13 = *(void *)(a2 + 144);
  if ((~v13 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  *(void *)(a1 + 144) = v13;
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
  unint64_t v14 = *(void *)(a2 + 160);
  if (v14 >= 3)
  {
    if (v14 == 3)
    {
      *(void *)(a1 + 160) = 3;
    }
    else
    {
      *(void *)(a1 + 160) = v14;
      swift_retain();
    }
  }
  else
  {
    *(void *)(a1 + 160) = v14;
  }
  uint64_t v15 = *(void *)(a2 + 184);
  uint64_t v16 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 == 1)
  {
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  }
  else
  {
    uint64_t v17 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = v15;
    *(void *)(a1 + 192) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for FormatGroupNodeMaskStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  int v5 = *(unsigned __int8 *)(a2 + 80);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    long long v13 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v13;
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    long long v14 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v14;
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v19 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = *(void *)(a2 + 40);
    uint64_t v9 = *(void *)(a2 + 48);
    uint64_t v10 = *(void *)(a2 + 56);
    uint64_t v11 = *(void *)(a2 + 64);
    uint64_t v12 = *(void *)(a2 + 72);
    sub_1BFFE54D0(v19, v6, v7, v8, v9, v10, v11, v12, v5);
    *(void *)(a1 + 16) = v19;
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v12;
    *(unsigned char *)(a1 + 80) = v5;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  int v15 = *(unsigned __int8 *)(a2 + 176);
  swift_bridgeObjectRetain();
  if (v15 == 254)
  {
    long long v16 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v16;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    long long v17 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v17;
  }
  else
  {
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 161) = *(_OWORD *)(a2 + 161);
    swift_retain();
  }
  return a1;
}

uint64_t FormatNodeBinderContext.__deallocating_deinit()
{
  FormatNodeBinderContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatNodeBinderContext.deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void **)(v0 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF1EAA0(v1, v2);
  sub_1BFF1F4C4(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_logger);
  sub_1BFE18B7C(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary), *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 8), *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 16), *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 24), *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 32), *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 40), *(unsigned char *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1BFE18B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 != 255) {
    return sub_1C0E74778();
  }
  return result;
}

uint64_t sub_1BFE18B94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatNodeStyle.init(from:)(a1, a2);
}

uint64_t FormatNodeStyle.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v35 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v28 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_28:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v6;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      int v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        unint64_t v16 = *v15;
        if (*v15 >= 4) {
          break;
        }
        v15 += 2;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v25 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v26 = v25;
      *(void *)(v26 + 8) = v16;
      *(void *)(v26 + 16) = &unk_1F1B865C8;
      *(_OWORD *)(v26 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v25, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      goto LABEL_28;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE19AC8();
  long long v29 = 0uLL;
  sub_1C15206EC();
  uint64_t v17 = v35;
  switch((char)v28)
  {
    case 1:
      type metadata accessor for FormatTextNodeStyle();
      long long v29 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB8890A0, (void (*)(uint64_t))type metadata accessor for FormatTextNodeStyle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v28;
      long long v24 = 0uLL;
      unint64_t v21 = 0x800000000000000;
      break;
    case 2:
      type metadata accessor for FormatImageNodeStyle();
      long long v29 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB889800, (void (*)(uint64_t))type metadata accessor for FormatImageNodeStyle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v28;
      long long v24 = 0uLL;
      unint64_t v21 = 0x1000000000000000;
      break;
    case 3:
      type metadata accessor for FormatItemNodeStyle(0);
      long long v29 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB888D70, (void (*)(uint64_t))type metadata accessor for FormatItemNodeStyle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v28;
      long long v24 = 0uLL;
      unint64_t v21 = 0x1800000000000000;
      break;
    case 4:
      type metadata accessor for FormatWebEmbedNodeStyle();
      long long v29 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB88AFE0, (void (*)(uint64_t))type metadata accessor for FormatWebEmbedNodeStyle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v28;
      long long v24 = 0uLL;
      unint64_t v21 = 0x2000000000000000;
      break;
    case 5:
      type metadata accessor for FormatCustomNodeStyle();
      long long v29 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB88A0D0, (void (*)(uint64_t))type metadata accessor for FormatCustomNodeStyle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v28;
      long long v24 = 0uLL;
      unint64_t v21 = 0x2800000000000000;
      break;
    case 6:
      type metadata accessor for FormatSupplementaryNodeStyle();
      long long v29 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB88D080, (void (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeStyle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v28;
      long long v24 = 0uLL;
      unint64_t v21 = 0x3000000000000000;
      break;
    case 7:
      type metadata accessor for FormatMicaNodeStyle();
      long long v29 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EA19DF60, (void (*)(uint64_t))type metadata accessor for FormatMicaNodeStyle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v28;
      long long v24 = 0uLL;
      unint64_t v21 = 0x3800000000000000;
      break;
    case 8:
      type metadata accessor for FormatLayeredMediaNodeStyle();
      long long v29 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB88CA20, (void (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeStyle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v28;
      long long v24 = 0uLL;
      unint64_t v21 = 0x4000000000000000;
      break;
    case 9:
      type metadata accessor for FormatVideoNodeStyle();
      long long v29 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB866B18, (void (*)(uint64_t))type metadata accessor for FormatVideoNodeStyle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v28;
      long long v24 = 0uLL;
      unint64_t v21 = 0x4800000000000000;
      break;
    case 10:
      type metadata accessor for FormatIssueCoverNodeStyle();
      long long v29 = xmmword_1C152C800;
      sub_1C085F050(qword_1EB867938, (void (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeStyle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v28;
      long long v24 = 0uLL;
      unint64_t v21 = 0x5000000000000000;
      break;
    case 11:
      type metadata accessor for FormatGroupNodeStyle();
      long long v29 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB8896C0, (void (*)(uint64_t))type metadata accessor for FormatGroupNodeStyle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v28;
      long long v24 = 0uLL;
      unint64_t v21 = 0x5800000000000000;
      break;
    case 12:
      type metadata accessor for FormatGroupNodeMaskStyle();
      long long v29 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB88B450, (void (*)(uint64_t))type metadata accessor for FormatGroupNodeMaskStyle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v28;
      long long v24 = 0uLL;
      unint64_t v21 = 0x6000000000000000;
      break;
    case 13:
      type metadata accessor for FormatAnimationNodeStyle();
      long long v29 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87FA18, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v28;
      long long v24 = 0uLL;
      unint64_t v21 = 0x6800000000000000;
      break;
    case 14:
      type metadata accessor for FormatVideoPlayerNodeStyle();
      long long v29 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB88C410, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeStyle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v28;
      long long v24 = 0uLL;
      unint64_t v21 = 0x7000000000000000;
      break;
    case 15:
      type metadata accessor for FormatProgressViewNodeStyle();
      long long v29 = xmmword_1C152C800;
      sub_1C085F050(qword_1EB868270, (void (*)(uint64_t))type metadata accessor for FormatProgressViewNodeStyle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v28;
      long long v24 = 0uLL;
      unint64_t v21 = 0x7800000000000000;
      break;
    case 16:
      long long v28 = xmmword_1C152C800;
      sub_1C089E5DC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = *((void *)&v29 + 1);
      uint64_t v23 = v29;
      uint64_t v19 = v30;
      uint64_t v20 = v31;
      long long v24 = v32;
      uint64_t v22 = v34;
      unint64_t v21 = v33 | 0x8000000000000000;
      break;
    case 17:
      type metadata accessor for FormatSponsoredBannerNodeStyle();
      long long v29 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB86D4B8, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerNodeStyle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v28;
      long long v24 = 0uLL;
      unint64_t v21 = 0x8800000000000000;
      break;
    default:
      type metadata accessor for FormatViewNodeStyle();
      long long v29 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB889208, (void (*)(uint64_t))type metadata accessor for FormatViewNodeStyle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      unint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v28;
      long long v24 = 0uLL;
      break;
  }
  *(void *)uint64_t v17 = v23;
  *(void *)(v17 + 8) = v18;
  *(void *)(v17 + 16) = v19;
  *(void *)(v17 + 24) = v20;
  *(_OWORD *)(v17 + 32) = v24;
  *(void *)(v17 + 48) = v21;
  *(void *)(v17 + 56) = v22;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFE19AC8()
{
  unint64_t result = qword_1EB874F38;
  if (!qword_1EB874F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874F38);
  }
  return result;
}

uint64_t type metadata accessor for FormatCustomNodeStyle()
{
  return self;
}

void *sub_1BFE19B40(void *a1)
{
  return FormatTextContent.encode(to:)(a1);
}

void *FormatTextContent.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v111 = (uint64_t)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v110 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v109 = (char *)&v104 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v108 = (char *)&v104 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v107 = (char *)&v104 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v106 = (char *)&v104 - v15;
  MEMORY[0x1F4188790](v16);
  id v105 = (char *)&v104 - v17;
  MEMORY[0x1F4188790](v18);
  id v104 = (char *)&v104 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v104 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v104 - v24;
  MEMORY[0x1F4188790](v26);
  long long v28 = (char *)&v104 - v27;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (char *)&v104 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v32 = *v2;
  uint64_t v34 = a1[3];
  uint64_t v33 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v34);
  unint64_t v35 = sub_1BFEB6A24();
  uint64_t v119 = v31;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatTextContent, v36, v34, (uint64_t)&type metadata for FormatTextContent, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v33, (uint64_t)v31, v35, (uint64_t)&off_1F1C39B68);
  switch(v32 >> 60)
  {
    case 1uLL:
      uint64_t v42 = *(void *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v43 = *(void *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v44 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      if (v44 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_1C151928C();
      uint64_t v46 = __swift_project_value_buffer(v45, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v25, v46, v45);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v47 = (uint64_t)v119;
      sub_1BFE1ABA0(1, v42, v43, (uint64_t)v25);
      uint64_t v48 = (uint64_t)v25;
      goto LABEL_11;
    case 2uLL:
      uint64_t v49 = *(void *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v50 = *(void *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v111 = v49;
      sub_1BFF05D18();
      unint64_t v52 = &v22[*(int *)(v51 + 48)];
      uint64_t v53 = &v22[*(int *)(v51 + 64)];
      uint64_t v54 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      if (v54 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_1C151928C();
      uint64_t v56 = __swift_project_value_buffer(v55, (uint64_t)qword_1EB93CAB0);
      uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16);
      v57(v22, v56, v55);
      v57(v52, v56, v55);
      type metadata accessor for FormatVersionRequirement.Value(0);
      *(void *)uint64_t v53 = 0;
      *((void *)v53 + 1) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v47 = (uint64_t)v119;
      sub_1BFE1ABA0(2, v111, v50, (uint64_t)v22);
      uint64_t v48 = (uint64_t)v22;
LABEL_11:
      sub_1BFEFEB68(v48, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      return (void *)sub_1BFEFEB68(v47, (uint64_t (*)(void))sub_1BFEFF7D8);
    case 3uLL:
      uint64_t v59 = *(void *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v60 = *(void *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v61 = qword_1EB882D28;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v61 != -1) {
        swift_once();
      }
      uint64_t v62 = sub_1C151928C();
      uint64_t v63 = __swift_project_value_buffer(v62, (uint64_t)qword_1EB93CAB0);
      uint64_t v64 = (uint64_t)v104;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v104, v63, v62);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v65 = (uint64_t)v119;
      sub_1BFE1AD68(3, v59, v60, v64);
      sub_1BFEFEB68(v64, type metadata accessor for FormatVersionRequirement);
      uint64_t v66 = v65;
      goto LABEL_35;
    case 4uLL:
      long long v67 = *(_OWORD *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      v113[0] = *(_OWORD *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v113[1] = v67;
      char v114 = *(unsigned char *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      sub_1C08BF428((uint64_t)v113);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v68 = sub_1C151928C();
      uint64_t v69 = __swift_project_value_buffer(v68, (uint64_t)qword_1EB93CAB0);
      uint64_t v70 = (uint64_t)v105;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16))(v105, v69, v68);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v71 = (uint64_t)v119;
      sub_1BFE1B1B4(4, v113, v70);
      sub_1BFEFEB68(v70, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v71, (uint64_t (*)(void))sub_1BFEFF7D8);
      return (void *)sub_1C08BF478((uint64_t)v113);
    case 5uLL:
      uint64_t v72 = v32 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v74 = *(void *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v73 = *(void *)(v72 + 24);
      uint64_t v75 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      swift_retain();
      if (v75 != -1) {
        swift_once();
      }
      uint64_t v76 = sub_1C151928C();
      uint64_t v77 = __swift_project_value_buffer(v76, (uint64_t)qword_1EB93CAB0);
      uint64_t v78 = (uint64_t)v106;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16))(v106, v77, v76);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v79 = (uint64_t)v119;
      sub_1BFE1AF50(5, v74, v73, v78);
      sub_1BFEFEB68(v78, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v79, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_release();
      return (void *)swift_bridgeObjectRelease();
    case 6uLL:
      long long v80 = *(_OWORD *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x80);
      v115[6] = *(_OWORD *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x70);
      v115[7] = v80;
      char v116 = *(unsigned char *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x90);
      long long v81 = *(_OWORD *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      v115[2] = *(_OWORD *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      v115[3] = v81;
      long long v82 = *(_OWORD *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x60);
      v115[4] = *(_OWORD *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x50);
      v115[5] = v82;
      long long v83 = *(_OWORD *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      v115[0] = *(_OWORD *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v115[1] = v83;
      if (qword_1EB887640 != -1) {
        swift_once();
      }
      uint64_t v84 = sub_1C151928C();
      uint64_t v85 = __swift_project_value_buffer(v84, (uint64_t)qword_1EB93CAC8);
      uint64_t v86 = (uint64_t)v107;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16))(v107, v85, v84);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = (uint64_t)v119;
      sub_1C0692F44(6, v115, v86);
      uint64_t v87 = type metadata accessor for FormatVersionRequirement;
      goto LABEL_27;
    case 7uLL:
      uint64_t v88 = swift_projectBox();
      uint64_t v86 = v111;
      sub_1BFE80E70(v88, v111, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v89 = sub_1C151928C();
      uint64_t v90 = __swift_project_value_buffer(v89, (uint64_t)qword_1EB93CA50);
      uint64_t v91 = (uint64_t)v108;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v89 - 8) + 16))(v108, v90, v89);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = (uint64_t)v119;
      sub_1C06930FC(7, v86, v91);
      sub_1BFEFEB68(v91, type metadata accessor for FormatVersionRequirement);
      uint64_t v87 = (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeLink;
LABEL_27:
      uint64_t v40 = v87;
      uint64_t v41 = v86;
      goto LABEL_28;
    case 8uLL:
      long long v92 = *(_OWORD *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      v117[0] = *(_OWORD *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v117[1] = v92;
      v117[2] = *(_OWORD *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v118 = *(void *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      sub_1C08BF3B0(v117, (void (*)(void))sub_1BFF58F10, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF523A4);
      if (qword_1EB887668 != -1) {
        swift_once();
      }
      uint64_t v93 = sub_1C151928C();
      uint64_t v94 = __swift_project_value_buffer(v93, (uint64_t)qword_1EB93CB10);
      uint64_t v95 = (uint64_t)v109;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v93 - 8) + 16))(v109, v94, v93);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v96 = (uint64_t)v119;
      sub_1C06932D0(8, v117, v95);
      sub_1BFEFEB68(v95, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v96, (uint64_t (*)(void))sub_1BFEFF7D8);
      return sub_1C08BF3B0(v117, (void (*)(void))sub_1BFF07CD8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF51C94);
    case 9uLL:
      uint64_t v97 = *(void *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v98 = *(void *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v99 = qword_1EB8849C8;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v99 != -1) {
        swift_once();
      }
      uint64_t v100 = sub_1C151928C();
      uint64_t v101 = __swift_project_value_buffer(v100, (uint64_t)qword_1EB93C790);
      uint64_t v102 = (uint64_t)v110;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v100 - 8) + 16))(v110, v101, v100);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v103 = (uint64_t)v119;
      sub_1C0693478(9, v97, v98, v102);
      sub_1BFEFEB68(v102, type metadata accessor for FormatVersionRequirement);
      uint64_t v66 = v103;
LABEL_35:
      sub_1BFEFEB68(v66, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_bridgeObjectRelease();
      return (void *)swift_release();
    default:
      sub_1C086A198(v32 + 16, (uint64_t)v112);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_1C151928C();
      uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v28, v38, v37);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = (uint64_t)v119;
      sub_1BFE1A958(0, (uint64_t)v112, (uint64_t)v28);
      uint64_t v40 = type metadata accessor for FormatVersionRequirement;
      uint64_t v41 = (uint64_t)v28;
LABEL_28:
      sub_1BFEFEB68(v41, v40);
      return (void *)sub_1BFEFEB68(v39, (uint64_t (*)(void))sub_1BFEFF7D8);
  }
}

uint64_t sub_1BFE1A958(char a1, uint64_t a2, uint64_t a3)
{
  v16[55] = a1;
  sub_1C086A198(a2, (uint64_t)v16);
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08EC8D8;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE1AAF8();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE1AB4C();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE1AAF8()
{
  unint64_t result = qword_1EB865F50;
  if (!qword_1EB865F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865F50);
  }
  return result;
}

unint64_t sub_1BFE1AB4C()
{
  unint64_t result = qword_1EB85BD50;
  if (!qword_1EB85BD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BD50);
  }
  return result;
}

uint64_t sub_1BFE1ABA0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08EC8D8;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE1AAF8();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FC718(0, (unint64_t *)&qword_1EB873EF8, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1C08EC8E4();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE1AD68(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08EC8D8;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE1AAF8();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFE1AEFC();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE1AEFC()
{
  unint64_t result = qword_1EB85AD50;
  if (!qword_1EB85AD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85AD50);
  }
  return result;
}

uint64_t sub_1BFE1AF50(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08EC8D8;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE1AAF8();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB875B30, (uint64_t (*)(void))sub_1C007C6F8, (uint64_t)&type metadata for FormatTextContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1BFE1B124();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE1B124()
{
  unint64_t result = qword_1EB85B978;
  if (!qword_1EB85B978)
  {
    sub_1BFEFF3E8(255, &qword_1EB875B30, (uint64_t (*)(void))sub_1C007C6F8, (uint64_t)&type metadata for FormatTextContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B978);
  }
  return result;
}

uint64_t sub_1BFE1B1B4(char a1, long long *a2, uint64_t a3)
{
  char v20 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  char v19 = *((unsigned char *)a2 + 32);
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08EC8D8;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE1AAF8();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFE1B354();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE1B354()
{
  unint64_t result = qword_1EB85BE68;
  if (!qword_1EB85BE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BE68);
  }
  return result;
}

uint64_t sub_1BFE1B3A8@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatAdjustment.init(from:)(a1, a2);
}

uint64_t FormatAdjustment.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v79 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v75 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  uint64_t v9 = v2;
  if (v2)
  {
LABEL_9:
    sub_1C0038728(a1, (uint64_t)v9);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v5;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      long long v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        unint64_t v16 = *v15;
        if (*v15 >= 4) {
          break;
        }
        v15 += 2;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v20 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v9 = (void *)swift_allocError();
      *(void *)uint64_t v21 = v20;
      *(void *)(v21 + 8) = v16;
      *(void *)(v21 + 16) = &unk_1F1B82088;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v20, v16);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE1C744();
  *(_OWORD *)uint64_t v78 = 0uLL;
  sub_1C15206EC();
  switch((char)v77)
  {
    case 1:
      sub_1BFEFF3E8(0, &qword_1EB873EC8, (uint64_t (*)(void))sub_1C086BEE8, (uint64_t)&type metadata for FormatAnchor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
      *(_OWORD *)uint64_t v78 = xmmword_1C152C800;
      sub_1C086BF3C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      char v22 = v77;
      uint64_t v23 = swift_allocObject();
      *(unsigned char *)(v23 + 16) = v22;
      unint64_t v18 = v23 | 4;
      break;
    case 2:
      long long v77 = xmmword_1C152C800;
      sub_1BFD621A0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      long long v76 = *(_OWORD *)v78;
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = v76;
      unint64_t v18 = v24 | 0x1000000000000000;
      break;
    case 3:
      unint64_t v18 = 0xC000000000000004;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      break;
    case 4:
      sub_1BFE41AFC();
      *(_OWORD *)uint64_t v78 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v25 = v77;
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v25;
      unint64_t v18 = v26 | 0x1000000000000004;
      break;
    case 5:
      sub_1BFE41AFC();
      *(_OWORD *)uint64_t v78 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v27 = v77;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v27;
      unint64_t v18 = v28 | 0x2000000000000000;
      break;
    case 6:
      sub_1BFE41AFC();
      *(_OWORD *)uint64_t v78 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v29 = v77;
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = v29;
      unint64_t v18 = v30 | 0x2000000000000004;
      break;
    case 7:
      sub_1BFE41AFC();
      *(_OWORD *)uint64_t v78 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v31 = v77;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v31;
      unint64_t v18 = v32 | 0x3000000000000000;
      break;
    case 8:
      sub_1BFE41AFC();
      *(_OWORD *)uint64_t v78 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v33 = v77;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v33;
      unint64_t v18 = v34 | 0x3000000000000004;
      break;
    case 9:
      sub_1BFE41AFC();
      *(_OWORD *)uint64_t v78 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v35 = v77;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v35;
      unint64_t v18 = v36 | 0x4000000000000000;
      break;
    case 10:
      *(_OWORD *)uint64_t v78 = xmmword_1C152C800;
      sub_1BFE41B98();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v37 = v77;
      char v38 = BYTE8(v77);
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v37;
      *(unsigned char *)(v39 + 24) = v38;
      unint64_t v18 = v39 | 0x4000000000000004;
      break;
    case 11:
      sub_1BFE41AFC();
      *(_OWORD *)uint64_t v78 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v40 = v77;
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v40;
      unint64_t v18 = v41 | 0x5000000000000000;
      break;
    case 12:
      sub_1BFE41AFC();
      *(_OWORD *)uint64_t v78 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v42 = v77;
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = v42;
      unint64_t v18 = v43 | 0x5000000000000004;
      break;
    case 13:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      unint64_t v18 = 0xC00000000000000CLL;
      break;
    case 14:
      sub_1BFEFF3E8(0, &qword_1EB873EC8, (uint64_t (*)(void))sub_1C086BEE8, (uint64_t)&type metadata for FormatAnchor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
      *(_OWORD *)uint64_t v78 = xmmword_1C152C800;
      sub_1C086BF3C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      char v44 = v77;
      uint64_t v45 = swift_allocObject();
      *(unsigned char *)(v45 + 16) = v44;
      unint64_t v18 = v45 | 0x6000000000000000;
      break;
    case 15:
      long long v77 = xmmword_1C152C800;
      sub_1BFE1C96C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      char v46 = v78[0];
      uint64_t v47 = *(void *)&v78[8];
      uint64_t v48 = *(void *)&v78[16];
      uint64_t v49 = swift_allocObject();
      *(unsigned char *)(v49 + 16) = v46;
      *(void *)(v49 + 24) = v47;
      *(void *)(v49 + 32) = v48;
      unint64_t v18 = v49 | 0x6000000000000004;
      break;
    case 16:
      *(_OWORD *)uint64_t v78 = xmmword_1C152C800;
      sub_1BFE1C918();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v50 = v77;
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = v50;
      unint64_t v18 = v51 | 0x7000000000000000;
      break;
    case 17:
      *(_OWORD *)uint64_t v78 = xmmword_1C152C800;
      sub_1BFE1C918();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v52 = v77;
      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = v52;
      unint64_t v18 = v53 | 0x7000000000000004;
      break;
    case 18:
      long long v77 = xmmword_1C152C800;
      sub_1C0068628();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v54 = *(void *)v78;
      long long v76 = *(_OWORD *)&v78[8];
      uint64_t v55 = swift_allocObject();
      *(void *)(v55 + 16) = v54;
      *(_OWORD *)(v55 + 24) = v76;
      unint64_t v18 = v55 | 0x8000000000000000;
      break;
    case 19:
      long long v77 = xmmword_1C152C800;
      sub_1C0068628();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v56 = *(void *)v78;
      long long v76 = *(_OWORD *)&v78[8];
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = v56;
      *(_OWORD *)(v57 + 24) = v76;
      unint64_t v18 = v57 | 0x8000000000000004;
      break;
    case 20:
      long long v77 = xmmword_1C152C800;
      sub_1C0068628();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v58 = *(void *)v78;
      long long v76 = *(_OWORD *)&v78[8];
      uint64_t v59 = swift_allocObject();
      *(void *)(v59 + 16) = v58;
      *(_OWORD *)(v59 + 24) = v76;
      unint64_t v18 = v59 | 0x9000000000000000;
      break;
    case 21:
      long long v77 = xmmword_1C152C800;
      sub_1C0068628();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v60 = *(void *)v78;
      long long v76 = *(_OWORD *)&v78[8];
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = v60;
      *(_OWORD *)(v61 + 24) = v76;
      unint64_t v18 = v61 | 0x9000000000000004;
      break;
    case 22:
      sub_1BFE1C798();
      *(_OWORD *)uint64_t v78 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873EE0, (void (*)(uint64_t))sub_1BFE1C798);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v62 = v77;
      uint64_t v63 = swift_allocObject();
      *(void *)(v63 + 16) = v62;
      unint64_t v18 = v63 | 0xA000000000000000;
      break;
    case 23:
      sub_1BFE1C798();
      *(_OWORD *)uint64_t v78 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873EE0, (void (*)(uint64_t))sub_1BFE1C798);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v64 = v77;
      uint64_t v65 = swift_allocObject();
      *(void *)(v65 + 16) = v64;
      unint64_t v18 = v65 | 0xA000000000000004;
      break;
    case 24:
      long long v77 = xmmword_1C152C800;
      sub_1BFE1C9C0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      char v66 = v78[0];
      uint64_t v67 = *(void *)&v78[8];
      char v68 = v78[16];
      uint64_t v69 = swift_allocObject();
      *(unsigned char *)(v69 + 16) = v66;
      *(void *)(v69 + 24) = v67;
      *(unsigned char *)(v69 + 32) = v68;
      unint64_t v18 = v69 | 0xB000000000000000;
      break;
    case 25:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      unint64_t v18 = 0xC000000000000014;
      break;
    case 26:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      unint64_t v18 = 0xC00000000000001CLL;
      break;
    case 27:
      sub_1BFEFF3E8(0, &qword_1EB877290, (uint64_t (*)(void))sub_1C007F3D0, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchListValue);
      long long v77 = xmmword_1C152C800;
      sub_1BFE1C888();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v71 = *(void *)&v78[8];
      uint64_t v70 = *(void *)v78;
      uint64_t v72 = swift_allocObject();
      *(void *)(v72 + 16) = v70;
      *(void *)(v72 + 24) = v71;
      unint64_t v18 = v72 | 0xB000000000000004;
      break;
    case 28:
      long long v77 = xmmword_1C152C800;
      sub_1C086BCEC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      long long v75 = *(_OWORD *)&v78[16];
      long long v76 = *(_OWORD *)v78;
      uint64_t v73 = swift_allocObject();
      long long v74 = v75;
      *(_OWORD *)(v73 + 16) = v76;
      *(_OWORD *)(v73 + 32) = v74;
      unint64_t v18 = v73 | 0xC000000000000000;
      break;
    default:
      long long v77 = xmmword_1C152C800;
      sub_1BFE1C834();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      long long v75 = *(_OWORD *)&v78[16];
      long long v76 = *(_OWORD *)v78;
      unint64_t v18 = swift_allocObject();
      long long v19 = v75;
      *(_OWORD *)(v18 + 16) = v76;
      *(_OWORD *)(v18 + 32) = v19;
      break;
  }
  *uint64_t v79 = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFE1C744()
{
  unint64_t result = qword_1EB887B08;
  if (!qword_1EB887B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887B08);
  }
  return result;
}

void sub_1BFE1C798()
{
  if (!qword_1EB873EE8)
  {
    sub_1BFEFF3E8(255, &qword_1EB874A80, (uint64_t (*)(void))sub_1C0082908, (uint64_t)&type metadata for FormatInteger, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1C086BD98();
    unint64_t v0 = type metadata accessor for FormatValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB873EE8);
    }
  }
}

unint64_t sub_1BFE1C834()
{
  unint64_t result = qword_1EB878168;
  if (!qword_1EB878168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878168);
  }
  return result;
}

unint64_t sub_1BFE1C888()
{
  unint64_t result = qword_1EB877288;
  if (!qword_1EB877288)
  {
    sub_1BFEFF3E8(255, &qword_1EB877290, (uint64_t (*)(void))sub_1C007F3D0, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchListValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB877288);
  }
  return result;
}

unint64_t sub_1BFE1C918()
{
  unint64_t result = qword_1EB878C88[0];
  if (!qword_1EB878C88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB878C88);
  }
  return result;
}

unint64_t sub_1BFE1C96C()
{
  unint64_t result = qword_1EB877738;
  if (!qword_1EB877738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB877738);
  }
  return result;
}

unint64_t sub_1BFE1C9C0()
{
  unint64_t result = qword_1EB880050;
  if (!qword_1EB880050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB880050);
  }
  return result;
}

void *sub_1BFE1CA14@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_1BFE1CA40(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void *sub_1BFE1CA40(void *a1)
{
  sub_1C0908CDC(0, &qword_1EB87C750, (void (*)(void))sub_1C007F424, (void (*)(void))sub_1C007F478);
  uint64_t v3 = v2;
  uint64_t v35 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v31 - v4;
  sub_1C09085C4();
  uint64_t v7 = v6;
  uint64_t v36 = *((void *)v6 - 1);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0861570();
  sub_1C085F050(&qword_1EB892600, (void (*)(uint64_t))sub_1C0861570);
  uint64_t v10 = v37;
  sub_1C1520EBC();
  char v11 = v10;
  if (v10)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v11);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v11;
  }
  uint64_t v37 = v5;
  uint64_t v12 = v36;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_1C1520EAC();
  uint64_t v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  if (v14)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      long long v17 = (unsigned char *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v37 = v7;
      uint64_t v20 = *((void *)v17 - 2);
      uint64_t v21 = *((void *)v17 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v22 = swift_bridgeObjectRelease();
      uint64_t v23 = v9;
      MEMORY[0x1F4188790](v22);
      *((void *)&v31 - 4) = &_s10CodingKeysON_263;
      *((void *)&v31 - 3) = sub_1C08615F4();
      *((void *)&v31 - 2) = sub_1BFE1D074();
      *((void *)&v31 - 1) = sub_1C0861648();
      swift_getKeyPath();
      swift_retain();
      uint64_t v24 = sub_1C085FB14((uint64_t)&unk_1F1B67068);
      swift_release_n();
      sub_1C02570B4();
      char v11 = (void *)swift_allocError();
      *(void *)uint64_t v25 = v20;
      *(void *)(v25 + 8) = v21;
      *(void *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v20, v21, 1);
      (*(void (**)(char *, char *))(v12 + 8))(v23, v37);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = sub_1C07F0DDC((uint64_t)v9, 0, 0, 0, (void (*)(void, __n128))sub_1C09085C4);
  uint64_t v34 = v19;
  long long v40 = xmmword_1C153AB20;
  char v41 = 0;
  sub_1BFE1CFFC();
  sub_1C15206EC();
  uint64_t v32 = v18;
  uint64_t v33 = v38;
  long long v31 = xmmword_1C1557FA0;
  long long v40 = xmmword_1C1557FA0;
  char v41 = 0;
  uint64_t v27 = v12;
  if (sub_1C152071C())
  {
    long long v38 = v31;
    char v39 = 0;
    sub_1C08B07C8();
    uint64_t v28 = v37;
    sub_1C15206EC();
    uint64_t v29 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v28, v3);
  }
  else
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, char *))(v27 + 8))(v9, v7);
  type metadata accessor for FormatSpaceNode();
  char v11 = (void *)swift_allocObject();
  swift_beginAccess();
  uint64_t v30 = v34;
  v11[2] = v32;
  v11[3] = v30;
  v11[4] = v33;
  swift_beginAccess();
  v11[5] = v29;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v11;
}

unint64_t sub_1BFE1CFFC()
{
  unint64_t result = qword_1EB873B80;
  if (!qword_1EB873B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB873B80);
  }
  return result;
}

uint64_t type metadata accessor for FormatSpaceNode()
{
  return self;
}

unint64_t sub_1BFE1D074()
{
  unint64_t result = qword_1EB8879C0;
  if (!qword_1EB8879C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8879C0);
  }
  return result;
}

uint64_t objectdestroy_81Tm()
{
  sub_1C0607ED4();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  type metadata accessor for FeedItemFilterHeadlineMatcher();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 1u:
    case 2u:
    case 3u:
      type metadata accessor for DateComparison();
      uint64_t v3 = sub_1C151631C();
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
      break;
    case 4u:
      swift_release();
      break;
    default:
      break;
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BFE1D230(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_1BFE1D244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  uint64_t result = swift_bridgeObjectRelease();
  if ((a5 & 0x8000) == 0)
  {
    return sub_1BFE1D230(a3, a4, a5 & 1);
  }
  return result;
}

uint64_t sub_1BFE1D2B0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFE1D300(void *a1)
{
  return FormatSpaceNode.encode(to:)(a1);
}

uint64_t FormatSpaceNode.encode(to:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = *v4;
  uint64_t v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v34 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v35 = (char *)&v34 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v34 - v12;
  sub_1C0861448();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_1C0861570();
  uint64_t v20 = v19;
  uint64_t v21 = sub_1C085F050(&qword_1EB892600, (void (*)(uint64_t))sub_1C0861570);
  sub_1BFEFBD78(v6, v22, v17, v6, v20, (uint64_t)&type metadata for FormatVersions.JazzkonC, v18, (uint64_t)v16, v21, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v23 = v4[2];
  uint64_t v24 = v4[3];
  uint64_t v25 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v25 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1C151928C();
  uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1EB93CAB0);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
  uint64_t v37 = v27;
  uint64_t v36 = v28;
  ((void (*)(char *))v28)(v13);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06D8B94(v23, v24, 0, 0, 0, (uint64_t)v13, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    swift_beginAccess();
    unint64_t v29 = v4[4];
    uint64_t v30 = (uint64_t)v35;
    v36(v35, v37, v26);
    swift_storeEnumTagMultiPayload();
    sub_1BFF35EA4(v29);
    sub_1C06C2D8C(v29, 1, 0, 0, v30, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v30, type metadata accessor for FormatVersionRequirement);
    sub_1BFF322A8(v29);
    swift_beginAccess();
    uint64_t v31 = (uint64_t)v34;
    v36(v34, v37, v26);
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = swift_bridgeObjectRetain();
    sub_1C06D8DD4(v32, 2, 0, 0);
    sub_1BFEFEB68(v31, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BFEFEB68((uint64_t)v16, (uint64_t (*)(void))sub_1C0861448);
}

unint64_t sub_1BFE1D79C()
{
  unint64_t result = qword_1EB873B78;
  if (!qword_1EB873B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB873B78);
  }
  return result;
}

uint64_t sub_1BFE1D7F0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FormatUserInterfaceValue.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t FormatUserInterfaceValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a1;
  uint64_t v69 = a3;
  uint64_t v62 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  char v68 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v58 = (char *)&v52 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v73 = (char *)&v52 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v65 = v10;
  char v66 = (char *)&v52 - v11;
  uint64_t v63 = v12;
  uint64_t v13 = _s10CodingKeysOMa_12();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v16 = swift_getWitnessTable();
  *(void *)&long long v70 = v13;
  *((void *)&v70 + 1) = WitnessTable;
  uint64_t v60 = v15;
  uint64_t v61 = WitnessTable;
  uint64_t v71 = v15;
  uint64_t v72 = v16;
  uint64_t v59 = v16;
  uint64_t v17 = type metadata accessor for FormatCodingKeysContainer();
  swift_getWitnessTable();
  uint64_t v18 = sub_1C152072C();
  uint64_t v64 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v52 - v19;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v21 = (void *)v67;
  sub_1C1520EBC();
  uint64_t v22 = v21;
  if (v21) {
    goto LABEL_15;
  }
  uint64_t v54 = v17;
  uint64_t v53 = v13;
  uint64_t v55 = 0;
  uint64_t v57 = v20;
  uint64_t v67 = v18;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v23 = sub_1C1520EAC();
  char v24 = Dictionary<>.errorOnUnknownKeys.getter(v23);
  swift_bridgeObjectRelease();
  uint64_t v26 = (uint64_t)v68;
  uint64_t v25 = v69;
  uint64_t v27 = v73;
  uint64_t v56 = v3;
  if ((v24 & 1) == 0)
  {
LABEL_11:
    long long v70 = 0uLL;
    LOBYTE(v71) = 0;
    uint64_t v41 = v63;
    uint64_t v42 = v57;
    uint64_t v43 = v55;
    sub_1C15206EC();
    if (!v43)
    {
      long long v70 = xmmword_1C153AB20;
      LOBYTE(v71) = 0;
      uint64_t v44 = v67;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v42, v44);
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
      uint64_t v50 = (uint64_t)v58;
      v49(v58, v66, v41);
      v49((char *)v26, v27, v41);
      FormatUserInterfaceValue.init(light:dark:)(v50, v26, v41, v25);
      uint64_t v51 = (uint64_t)v56;
      return __swift_destroy_boxed_opaque_existential_1(v51);
    }
    (*(void (**)(char *, uint64_t))(v64 + 8))(v42, v67);
    uint64_t v3 = v56;
    uint64_t v22 = v43;
LABEL_15:
    sub_1C0038728(v3, (uint64_t)v22);
    swift_willThrow();

    uint64_t v51 = (uint64_t)v3;
    return __swift_destroy_boxed_opaque_existential_1(v51);
  }
  uint64_t v28 = sub_1C152070C();
  uint64_t v29 = v54;
  if (!MEMORY[0x1C18C6870](v28, v54))
  {
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v30 = 0;
  uint64_t v31 = (char *)(v28 + 48);
  while (1)
  {
    char v32 = sub_1C151ECDC();
    uint64_t result = sub_1C151EC7C();
    if ((v32 & 1) == 0) {
      break;
    }
    uint64_t v34 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      goto LABEL_18;
    }
    uint64_t v36 = *((void *)v31 - 2);
    uint64_t v35 = *((void *)v31 - 1);
    char v37 = *v31;
    *(void *)&long long v70 = v36;
    *((void *)&v70 + 1) = v35;
    LOBYTE(v71) = v37;
    sub_1BFE94AB4(v36, v35, v37);
    uint64_t v38 = sub_1C0D990EC(v29);
    if (v39)
    {
      uint64_t v45 = v39;
      uint64_t v46 = v38;
      swift_bridgeObjectRelease();
      uint64_t v47 = sub_1C0D98F50(v53, v61, v60, v59);
      sub_1C02570B4();
      uint64_t v22 = (void *)swift_allocError();
      *(void *)uint64_t v48 = v46;
      *(void *)(v48 + 8) = v45;
      *(void *)(v48 + 16) = v47;
      *(_OWORD *)(v48 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v70, *((uint64_t *)&v70 + 1), v71);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v57, v67);
      uint64_t v3 = v56;
      goto LABEL_15;
    }
    sub_1BFE94AD4(v36, v35, v37);
    ++v30;
    v31 += 24;
    BOOL v40 = v34 == MEMORY[0x1C18C6870](v28, v29);
    uint64_t v26 = (uint64_t)v68;
    uint64_t v25 = v69;
    uint64_t v27 = v73;
    if (v40) {
      goto LABEL_10;
    }
  }
  uint64_t result = sub_1C152016C();
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t _s10CodingKeysOMa_12()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FormatUserInterfaceValue.init(light:dark:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  v9(a3 - 8, a4, a1);
  uint64_t v7 = a4 + *(int *)(type metadata accessor for FormatUserInterfaceValue() + 36);
  return v9(v7, a2, a3);
}

uint64_t type metadata accessor for FormatUserInterfaceValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFE1DEF0@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return FormatMetadata.init(from:)(a1, a2);
}

uint64_t FormatMetadata.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  sub_1BFE1E4B8(0, &qword_1EB87A518, (uint64_t (*)(void))sub_1BFE1E690, (uint64_t)&type metadata for FormatMetadata.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = a1[3];
  uint64_t v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1BFE1E690();
  sub_1C1520EBC();
  if (!v2)
  {
    char v32 = a2;
    LOBYTE(v38) = 0;
    uint64_t v11 = sub_1C152060C();
    uint64_t v13 = v12;
    LOBYTE(v38) = 2;
    sub_1C152060C();
    LOBYTE(v38) = 3;
    uint64_t v30 = sub_1C152060C();
    uint64_t v31 = v14;
    LOBYTE(v38) = 1;
    uint64_t v26 = sub_1C152060C();
    uint64_t v29 = v15;
    sub_1BFE1E520();
    uint64_t v17 = v16;
    LOBYTE(v37) = 4;
    uint64_t v27 = sub_1BFE1E748(&qword_1EB87A048);
    uint64_t v28 = v17;
    sub_1C152065C();
    uint64_t v25 = v38;
    LOBYTE(v36) = 5;
    sub_1C152065C();
    uint64_t v28 = v37;
    sub_1BFE1E4B8(0, (unint64_t *)&qword_1EB890100, (uint64_t (*)(void))sub_1C0085498, (uint64_t)&type metadata for FeedPlatform, MEMORY[0x1E4FBB510]);
    uint64_t v19 = v18;
    LOBYTE(v35) = 6;
    uint64_t v20 = sub_1BFE1E5EC(&qword_1EB890108, (void (*)(void))sub_1C00853F0);
    uint64_t v27 = v19;
    uint64_t v24 = v20;
    sub_1C152065C();
    uint64_t v23 = v36;
    char v34 = 7;
    sub_1C152065C();
    FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(v11, v13, v30, v31, v26, v29, v32, v25, v28, v23, v35);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
}

void sub_1BFE1E4B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFE1E520()
{
  if (!qword_1EB87A040)
  {
    unint64_t v0 = sub_1C151F04C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A040);
    }
  }
}

uint64_t sub_1BFE1E580(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFE5191C();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE1E5EC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFE1E4B8(255, (unint64_t *)&qword_1EB890100, (uint64_t (*)(void))sub_1C0085498, (uint64_t)&type metadata for FeedPlatform, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BFE1E690()
{
  unint64_t result = qword_1EB874AE0;
  if (!qword_1EB874AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874AE0);
  }
  return result;
}

uint64_t sub_1BFE1E6E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE1E748(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFE1E520();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE1E7A8(void *a1)
{
  return FormatOptionExpression.encode(to:)(a1);
}

uint64_t FormatOptionExpression.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v25 - v7;
  uint64_t v10 = *(void *)v1;
  uint64_t v9 = *(void *)(v1 + 8);
  uint64_t v11 = *(void *)(v1 + 16);
  int v12 = *(__int16 *)(v1 + 32);
  if (v12 < 0)
  {
    uint64_t v20 = a1[3];
    uint64_t v27 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v20);
    if (qword_1EB882D28 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1C151928C();
    uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB93CAB0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v5, v22, v21);
    type metadata accessor for FormatVersionRequirement.Value(0);
    uint64_t v23 = swift_storeEnumTagMultiPayload();
    MEMORY[0x1F4188790](v23);
    v25[-4] = v10;
    v25[-3] = v9;
    LOBYTE(v25[-2]) = v11;
    BYTE1(v25[-2]) = BYTE1(v11) & 1;
    uint64_t v24 = v34;
    sub_1BFE97CE8((uint64_t)v5, (uint64_t)sub_1C033BF7C, (uint64_t)&v25[-6], v20, v27);
    uint64_t result = sub_1BFEFEA48((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
    if (!v24)
    {
      *(void *)&long long v28 = v10;
      *((void *)&v28 + 1) = v9;
      LOWORD(v29) = v11 & 0x1FF;
      return FormatOptionExpression.Exists.encode(to:)(a1);
    }
  }
  else
  {
    uint64_t v13 = *(void *)(v1 + 24);
    *(void *)&long long v31 = *(void *)v1;
    *((void *)&v31 + 1) = v9;
    *(void *)&long long v32 = v11;
    *((void *)&v32 + 1) = v13;
    __int16 v33 = v12 & 0xFF01;
    uint64_t v14 = a1[3];
    uint64_t v26 = a1[4];
    uint64_t v27 = v10;
    v25[1] = __swift_project_boxed_opaque_existential_1(a1, v14);
    swift_bridgeObjectRetain();
    sub_1BFF27F28(v11, v13, v12 & 1);
    if (qword_1EB882D28 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1C151928C();
    uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1EB93CAB0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v8, v16, v15);
    type metadata accessor for FormatVersionRequirement.Value(0);
    uint64_t v17 = swift_storeEnumTagMultiPayload();
    MEMORY[0x1F4188790](v17);
    v25[-2] = &v31;
    uint64_t v18 = v34;
    sub_1BFE97CE8((uint64_t)v8, (uint64_t)sub_1C033BF9C, (uint64_t)&v25[-4], v14, v26);
    sub_1BFEFEA48((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
    if (!v18)
    {
      long long v28 = v31;
      long long v29 = v32;
      __int16 v30 = v33;
      FormatOptionExpression.Compare.encode(to:)(a1);
    }
    return sub_1BFE1D244(v27, v9, v11, v13, v12);
  }
  return result;
}

uint64_t FormatOptionExpression.Compare.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  long long v29 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = &v27[-v6];
  sub_1BFE1EEE4();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = *(void *)v1;
  uint64_t v11 = *(void *)(v1 + 8);
  uint64_t v13 = *(void *)(v1 + 16);
  uint64_t v33 = *(void *)(v1 + 24);
  uint64_t v34 = v13;
  int v32 = *(unsigned __int8 *)(v1 + 32);
  int v28 = *(unsigned __int8 *)(v1 + 33);
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  long long v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  unint64_t v16 = sub_1BFE231D0();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatOptionExpression.Compare, v17, v14, (uint64_t)&type metadata for FormatOptionExpression.Compare, (uint64_t)&type metadata for FormatOptionExpression.Compare.CodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v10, v16, (uint64_t)&off_1F1C39B68);
  uint64_t v18 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C151928C();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB93CAB0);
  uint64_t v21 = *(void (**)(unsigned char *))(*(void *)(v19 - 8) + 16);
  uint64_t v30 = v20;
  v21(v7);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = v38;
  sub_1BFE1EF64(v12, v11, 0, (uint64_t)v7, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEA48((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    uint64_t v23 = (void (*)(unsigned char *, uint64_t, uint64_t))v21;
    uint64_t v24 = v30;
    uint64_t v35 = v34;
    uint64_t v36 = v33;
    char v37 = v32;
    FormatOptionCompareValue.encode(to:)(v31);
    uint64_t v25 = (uint64_t)v29;
    v23(v29, v24, v19);
    swift_storeEnumTagMultiPayload();
    sub_1BFE1F300(v28, 2, v25, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEA48(v25, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BFEFEA48((uint64_t)v10, (uint64_t (*)(void))sub_1BFE1EEE4);
}

void sub_1BFE1EEE4()
{
  if (!qword_1EB869790)
  {
    sub_1BFE23224(255, &qword_1EB85C6A8, MEMORY[0x1E4FBBDE0]);
    sub_1BFE1F0C0();
    unint64_t v0 = type metadata accessor for VersionedKeyedEncodingContainer();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB869790);
    }
  }
}

uint64_t sub_1BFE1EF64(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  char v19 = a3;
  sub_1BFE1EEE4();
  uint64_t v13 = (uint64_t *)(v6 + *(int *)(v12 + 44));
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = v15;
  *(void *)(v16 + 32) = v14;
  v18[2] = a5;
  v18[3] = a6;
  v18[4] = sub_1C0905D84;
  v18[5] = v16;
  swift_retain();
  sub_1BFE1F134(a4, a3, (uint64_t)sub_1C090A470, (uint64_t)v18);
  if (!v7)
  {
    sub_1BFEFF3E8(0, &qword_1EB85C6A8, (uint64_t (*)(void))sub_1BFE231D0, (uint64_t)&type metadata for FormatOptionExpression.Compare.CodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFE1F0C0();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE1F0C0()
{
  unint64_t result = qword_1EB86B8F8;
  if (!qword_1EB86B8F8)
  {
    sub_1BFE23224(255, &qword_1EB85C6A8, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B8F8);
  }
  return result;
}

uint64_t sub_1BFE1F134(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  sub_1BFE1EEE4();
  uint64_t v10 = v9;
  uint64_t v11 = (uint64_t *)(v4 + *(int *)(v9 + 44));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = v12;
  *(void *)(v14 + 32) = v13;
  sub_1BFEFF3E8(0, &qword_1EB85C6A8, (uint64_t (*)(void))sub_1BFE231D0, (uint64_t)&type metadata for FormatOptionExpression.Compare.CodingKeys, MEMORY[0x1E4FBBDE0]);
  sub_1BFE1F0C0();
  swift_retain();
  uint64_t v15 = sub_1C1520B8C();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(unsigned char *)(v16 + 24) = a2;
  sub_1BFC66384(v4 + *(int *)(v10 + 36), (uint64_t)v22);
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  uint64_t v20 = sub_1C090B40C;
  uint64_t v21 = v16;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = sub_1C0905D84;
  v18[5] = v14;
  sub_1BFEFC30C(a1, (uint64_t)sub_1C090A468, (uint64_t)v19, (uint64_t)sub_1C090A470, (uint64_t)v18);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t sub_1BFE1F300(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      char v12 = sub_1C1520A9C();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        MEMORY[0x1F4188790](result);
        v13[2] = a4;
        v13[3] = a5;
        uint64_t result = sub_1C0834500(a3, a2, (uint64_t)sub_1C090A46C, (uint64_t)v13);
        if (!v5 && (result & 1) != 0)
        {
          char v15 = a2;
          char v14 = a1;
          sub_1BFEFF3E8(0, &qword_1EB85C6A8, (uint64_t (*)(void))sub_1BFE231D0, (uint64_t)&type metadata for FormatOptionExpression.Compare.CodingKeys, MEMORY[0x1E4FBBDE0]);
          sub_1BFE1F0C0();
          sub_1BFD92300();
          uint64_t result = sub_1C1520BAC();
        }
      }
      break;
    default:
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

uint64_t FormatOptionCompareValue.encode(to:)(void *a1)
{
  sub_1BFE23500(0, &qword_1EB86B910, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v11 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v8 = *(void *)v1;
  uint64_t v7 = *(void *)(v1 + 8);
  int v9 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE234AC();
  sub_1C1520F0C();
  if (v9 == 1)
  {
    uint64_t v12 = v8;
    uint64_t v13 = v7;
    char v14 = 1;
    sub_1C0A42B30();
    sub_1C152080C();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v6, v4);
  }
  else
  {
    uint64_t v12 = v8;
    char v14 = 0;
    sub_1BFE2945C();
    swift_retain();
    sub_1C152080C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v4);
    return sub_1BFE1D230(v8, v7, 0);
  }
}

uint64_t initializeWithCopy for FormatSourceMapNode(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFE1F79C(void *a1)
{
  return FormatSnippet.encode(to:)(a1);
}

uint64_t FormatSnippet.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  char v66 = (char *)v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v67 = (char *)v64 - v8;
  MEMORY[0x1F4188790](v9);
  char v68 = (char *)v64 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v72 = (char *)v64 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v69 = (char *)v64 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v64 - v16;
  sub_1C085FC04();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_1C085FD2C();
  uint64_t v24 = v23;
  uint64_t v25 = sub_1C085F050(&qword_1EB892500, (void (*)(uint64_t))sub_1C085FD2C);
  sub_1BFEFBD78(v4, v26, v22, v4, v24, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v20, v25, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v27 = v2[2];
  uint64_t v28 = v2[3];
  long long v70 = v2;
  uint64_t v29 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v29 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1C151928C();
  uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1EB93CAB0);
  uint64_t v32 = *(void *)(v30 - 8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  uint64_t v71 = v32 + 16;
  v33(v17, v31, v30);
  uint64_t v34 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v35 = v27;
  uint64_t v36 = (uint64_t)v20;
  uint64_t v37 = v73;
  sub_1C06C5410(v35, v28, 0, 0, 0, (uint64_t)v17, (uint64_t)sub_1C01B158C, 0);
  if (v37)
  {
    uint64_t v38 = (uint64_t)v17;
LABEL_7:
    sub_1BFEFEB68(v38, type metadata accessor for FormatVersionRequirement);
LABEL_8:
    swift_bridgeObjectRelease();
    return sub_1BFEFEB68(v36, (uint64_t (*)(void))sub_1C085FC04);
  }
  uint64_t v65 = v20;
  uint64_t v73 = 0;
  sub_1BFEFEB68((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v39 = (uint64_t)v69;
  v33(v69, v31, v30);
  swift_storeEnumTagMultiPayload();
  sub_1BFEFEB68(v39, type metadata accessor for FormatVersionRequirement);
  v33((char *)v39, v31, v30);
  swift_storeEnumTagMultiPayload();
  uint64_t v40 = v39;
  uint64_t v36 = (uint64_t)v65;
  sub_1BFEFEB68(v40, type metadata accessor for FormatVersionRequirement);
  uint64_t v41 = v70;
  swift_beginAccess();
  uint64_t v42 = v41[8];
  uint64_t v43 = (uint64_t)v72;
  v33(v72, v31, v30);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  uint64_t v44 = v73;
  char v45 = sub_1C0843C9C(v43, 3, 0, 0, (uint64_t)sub_1C01B158C, 0);
  if (v44)
  {
    uint64_t v38 = (uint64_t)v72;
    goto LABEL_7;
  }
  uint64_t v69 = (char *)v31;
  v64[1] = v34;
  if (v45)
  {
    long long v78 = xmmword_1C1557FB0;
    char v79 = 0;
    uint64_t v77 = v42;
    sub_1C085FC98();
    sub_1C085F050(&qword_1EB86EC30, (void (*)(uint64_t))sub_1C085FC98);
    sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB863300, (uint64_t)&type metadata for FormatSourceMapNode, MEMORY[0x1E4FBB320]);
    sub_1BFE407E0();
    sub_1C1520BAC();
    uint64_t v73 = 0;
    uint64_t v47 = v70;
  }
  else
  {
    uint64_t v73 = 0;
    uint64_t v47 = v41;
  }
  sub_1BFEFEB68((uint64_t)v72, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v48 = (uint64_t)v68;
  uint64_t v49 = v69;
  v33(v68, (uint64_t)v69, v30);
  swift_storeEnumTagMultiPayload();
  uint64_t v50 = swift_bridgeObjectRetain();
  uint64_t v36 = (uint64_t)v65;
  uint64_t v51 = v73;
  sub_1C06DC760(v50, 4, 0, 0);
  sub_1BFEFEB68(v48, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v51) {
    return sub_1BFEFEB68(v36, (uint64_t (*)(void))sub_1C085FC04);
  }
  uint64_t v73 = 0;
  swift_beginAccess();
  uint64_t v52 = v47[10];
  uint64_t v53 = (uint64_t)v67;
  v33(v67, (uint64_t)v49, v30);
  swift_storeEnumTagMultiPayload();
  uint64_t v54 = *(void *)(v52 + 16);
  swift_bridgeObjectRetain();
  if (!v54) {
    goto LABEL_20;
  }
  uint64_t v55 = v73;
  char v56 = sub_1C0843C9C(v53, 5, 0, 0, (uint64_t)sub_1C01B158C, 0);
  uint64_t v73 = v55;
  if (v55)
  {
    sub_1BFEFEB68(v53, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1BFEFEB68(v36, (uint64_t (*)(void))sub_1C085FC04);
  }
  if ((v56 & 1) == 0)
  {
LABEL_20:
    uint64_t v63 = v69;
    goto LABEL_21;
  }
  uint64_t v72 = (char *)v30;
  long long v75 = xmmword_1C1557FC0;
  char v76 = 0;
  uint64_t v57 = swift_bridgeObjectRetain();
  uint64_t v58 = sub_1BFE71F8C(v57);
  swift_bridgeObjectRelease();
  long long v74 = v58;
  swift_retain();
  uint64_t v59 = v73;
  sub_1BFE726FC((uint64_t *)&v74, sub_1BFE72780, sub_1BFE72EAC);
  if (!v59)
  {
    swift_release();
    uint64_t v80 = (uint64_t)v74;
    sub_1C085FC98();
    sub_1C085F050(&qword_1EB86EC30, (void (*)(uint64_t))sub_1C085FC98);
    uint64_t v60 = MEMORY[0x1E4FBB1A0];
    sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1BFE71F14((unint64_t *)&qword_1EB85DF50, (unint64_t *)&qword_1EB879F20, v60);
    sub_1C1520BAC();
    uint64_t v73 = 0;
    swift_release();
    uint64_t v63 = v69;
    uint64_t v30 = (uint64_t)v72;
LABEL_21:
    sub_1BFEFEB68((uint64_t)v67, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v61 = (uint64_t)v66;
    v33(v66, (uint64_t)v63, v30);
    swift_storeEnumTagMultiPayload();
    uint64_t v62 = swift_bridgeObjectRetain();
    uint64_t v36 = (uint64_t)v65;
    sub_1C06DC8D0(v62, 6, 0, 0);
    sub_1BFEFEB68(v61, type metadata accessor for FormatVersionRequirement);
    goto LABEL_8;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1BFE201AC()
{
  unint64_t result = qword_1EB85C3C0;
  if (!qword_1EB85C3C0)
  {
    sub_1BFD48758(255);
    sub_1C037111C(&qword_1EB870AC0, (void (*)(uint64_t))type metadata accessor for FormatOption);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C3C0);
  }
  return result;
}

uint64_t sub_1BFE2024C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFE20278(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFE20278(void *a1)
{
  sub_1C0908CDC(0, &qword_1EB87C710, (void (*)(void))sub_1C0084750, (void (*)(void))sub_1C00847A4);
  uint64_t v72 = v2;
  uint64_t v69 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  long long v78 = (char *)&v61 - v3;
  sub_1BFE89214();
  uint64_t v76 = v4;
  uint64_t v70 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v73 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE8928C();
  uint64_t v75 = v6;
  uint64_t v71 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v74 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0908CDC(0, (unint64_t *)&qword_1EB884858, (void (*)(void))sub_1C00795B8, (void (*)(void))sub_1BFC3A24C);
  uint64_t v9 = v8;
  uint64_t v77 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v61 - v10;
  sub_1C0909120();
  uint64_t v13 = v12;
  *(void *)&long long v79 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C085FD2C();
  sub_1C085F050(&qword_1EB892500, (void (*)(uint64_t))sub_1C085FD2C);
  uint64_t v17 = (void *)v80;
  sub_1C1520EBC();
  uint64_t v18 = v17;
  if (v17)
  {
    uint64_t v19 = a1;
LABEL_11:
    sub_1C0038728(v19, (uint64_t)v18);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return KeyPath;
  }
  uint64_t v20 = v11;
  *(void *)&long long v80 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v21 = sub_1C1520EAC();
  char v22 = Dictionary<>.errorOnUnknownKeys.getter(v21);
  swift_bridgeObjectRelease();
  uint64_t v19 = a1;
  if (v22)
  {
    uint64_t v23 = sub_1C152070C();
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      uint64_t v25 = (unsigned char *)(v23 + 48);
      while (*v25 != 1)
      {
        v25 += 24;
        if (!--v24) {
          goto LABEL_8;
        }
      }
      uint64_t v30 = v15;
      uint64_t v32 = *((void *)v25 - 2);
      uint64_t v31 = *((void *)v25 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v33 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v33);
      *(&v61 - 4) = (uint64_t)&_s10CodingKeysON_269;
      *(&v61 - 3) = sub_1C085FDB0();
      unint64_t v59 = sub_1BFE20D74();
      unint64_t v60 = sub_1C085FE04();
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
      uint64_t v34 = sub_1C085FB14((uint64_t)&unk_1F1B65598);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v18 = (void *)swift_allocError();
      *(void *)uint64_t v35 = v32;
      *(void *)(v35 + 8) = v31;
      *(void *)(v35 + 16) = v34;
      *(_OWORD *)(v35 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v32, v31, 1);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v30, v13);
      goto LABEL_11;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  long long v83 = 0uLL;
  char v84 = 0;
  uint64_t v26 = sub_1C152069C();
  uint64_t v28 = v27;
  uint64_t v68 = v26;
  long long v83 = xmmword_1C153AB20;
  char v84 = 0;
  uint64_t v29 = sub_1C152060C();
  uint64_t v38 = v37;
  uint64_t v67 = v29;
  long long v83 = xmmword_1C1557FA0;
  char v84 = 0;
  uint64_t v64 = sub_1C152060C();
  uint64_t v65 = v39;
  uint64_t v66 = v38;
  long long v83 = xmmword_1C1557FB0;
  char v84 = 0;
  sub_1BFCAB4C0();
  uint64_t v40 = v80;
  sub_1C15206EC();
  uint64_t v41 = sub_1C1517E5C();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v20, v40);
  long long v80 = xmmword_1C1557FD0;
  long long v83 = xmmword_1C1557FD0;
  char v84 = 0;
  char v42 = sub_1C152071C();
  if (v42)
  {
    uint64_t v62 = v41;
    long long v81 = v80;
    char v82 = 0;
    sub_1C085F050(&qword_1EB87C728, (void (*)(uint64_t))sub_1BFE8928C);
    uint64_t v43 = v74;
    uint64_t v44 = v75;
    sub_1C15206EC();
    char v45 = v78;
    uint64_t v77 = v28;
    *(void *)&long long v80 = v19;
    uint64_t v63 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v43, v44);
    uint64_t v46 = v79;
    uint64_t v41 = v62;
  }
  else
  {
    uint64_t v77 = v28;
    *(void *)&long long v80 = v19;
    uint64_t v63 = MEMORY[0x1E4FBC860];
    char v45 = v78;
    uint64_t v46 = v79;
  }
  long long v79 = xmmword_1C1557FC0;
  long long v83 = xmmword_1C1557FC0;
  char v84 = 0;
  char v47 = sub_1C152071C();
  uint64_t v48 = v76;
  if (v47)
  {
    long long v81 = v79;
    char v82 = 0;
    sub_1C085F050(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    uint64_t v49 = v73;
    sub_1C15206EC();
    uint64_t v62 = v41;
    uint64_t v50 = v48;
    uint64_t v51 = v15;
    uint64_t v52 = sub_1C1517E5C();
    uint64_t v53 = v50;
    uint64_t v41 = v62;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v49, v53);
  }
  else
  {
    uint64_t v51 = v15;
    uint64_t v52 = MEMORY[0x1E4FBC870];
  }
  long long v79 = xmmword_1C1557FE0;
  long long v83 = xmmword_1C1557FE0;
  char v84 = 0;
  uint64_t v54 = v51;
  if (sub_1C152071C())
  {
    long long v81 = v79;
    char v82 = 0;
    sub_1C086CF8C();
    uint64_t v55 = v72;
    sub_1C15206EC();
    char v56 = v45;
    uint64_t v57 = v54;
    uint64_t v58 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v56, v55);
  }
  else
  {
    uint64_t v57 = v51;
    uint64_t v58 = MEMORY[0x1E4FBC860];
  }
  type metadata accessor for FormatSnippet();
  swift_allocObject();
  uint64_t KeyPath = FormatSnippet.init(identifier:name:description:children:options:selectors:types:)(v68, v77, v67, v66, v64, v65, v41, v63, v52, v58);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v57, v13);
  __swift_destroy_boxed_opaque_existential_1(v80);
  return KeyPath;
}

unint64_t sub_1BFE20D74()
{
  unint64_t result = qword_1EB887288;
  if (!qword_1EB887288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887288);
  }
  return result;
}

uint64_t type metadata accessor for FormatSnippet()
{
  return self;
}

uint64_t FormatSnippet.init(identifier:name:description:children:options:selectors:types:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(_OWORD *)(v10 + 48) = 0u;
  *(_OWORD *)(v10 + 32) = 0u;
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  swift_beginAccess();
  *(void *)(v10 + 32) = a3;
  *(void *)(v10 + 40) = a4;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v10 + 48) = a5;
  *(void *)(v10 + 56) = a6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v10 + 64) = a7;
  swift_beginAccess();
  *(void *)(v10 + 72) = a8;
  swift_beginAccess();
  *(void *)(v10 + 80) = a9;
  swift_beginAccess();
  *(void *)(v10 + 88) = a10;
  return v10;
}

uint64_t sub_1BFE20F1C(void *a1)
{
  return FormatLocalizationString.encode(to:)(a1);
}

uint64_t FormatLocalizationString.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v33 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  v32[0] = (char *)v32 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v32 - v8;
  sub_1C0897DB4();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v1;
  uint64_t v14 = v1[1];
  v32[1] = v1[4];
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1C0897BF8();
  uint64_t v18 = v17;
  uint64_t v19 = sub_1C085F050(&qword_1EB892120, (void (*)(uint64_t))sub_1C0897BF8);
  uint64_t v35 = v12;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatLocalizationString, v20, v15, (uint64_t)&type metadata for FormatLocalizationString, v18, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v12, v19, (uint64_t)&off_1F1C39B68);
  uint64_t v21 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v21 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1C151928C();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB93CAB0);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
  v24(v9, v23, v22);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = v34;
  sub_1C06B39E0(v13, v14, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v25)
  {
    uint64_t v26 = (uint64_t)v35;
  }
  else
  {
    uint64_t v27 = v32[0];
    v24((char *)v32[0], v23, v22);
    swift_storeEnumTagMultiPayload();
    sub_1BFEFEB68(v27, type metadata accessor for FormatVersionRequirement);
    uint64_t v28 = (uint64_t)v33;
    v24(v33, v23, v22);
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v30 = (uint64_t)v35;
    sub_1C06CD038(v29, 2, 0, 0);
    sub_1BFEFEB68(v28, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v26 = v30;
  }
  return sub_1BFEFEB68(v26, (uint64_t (*)(void))sub_1C0897DB4);
}

unint64_t sub_1BFE2130C()
{
  unint64_t result = qword_1EB85C458;
  if (!qword_1EB85C458)
  {
    sub_1BFE9DEBC(255, &qword_1EB85C450, (uint64_t)&type metadata for FormatLocalizationString.Selector, MEMORY[0x1E4FBB320]);
    sub_1C0070128();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C458);
  }
  return result;
}

uint64_t sub_1BFE213A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatOption.init(from:)(a1, a2);
}

uint64_t FormatOption.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v39 = a2;
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v33 - v6;
  sub_1C089EA68();
  uint64_t v9 = v8;
  uint64_t v38 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C089EAFC();
  sub_1C085F050(&qword_1EB8924D0, (void (*)(uint64_t))sub_1C089EAFC);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    uint64_t v32 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v32);
  }
  uint64_t v36 = v7;
  uint64_t v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = v39;
  uint64_t v15 = v11;
  if (v13)
  {
    uint64_t v16 = sub_1C152070C();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = (unsigned char *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17) {
          goto LABEL_7;
        }
      }
      uint64_t v22 = *((void *)v18 - 2);
      uint64_t v23 = *((void *)v18 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v24 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v24);
      *(&v33 - 4) = (uint64_t)&_s10CodingKeysON_95;
      *(&v33 - 3) = sub_1C089EB80();
      *(&v33 - 2) = sub_1BFE219CC();
      *(&v33 - 1) = sub_1C089EBD4();
      swift_getKeyPath();
      swift_retain();
      uint64_t v25 = sub_1C085FB14((uint64_t)&unk_1F1B86730);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v26 = v22;
      *(void *)(v26 + 8) = v23;
      *(void *)(v26 + 16) = v25;
      *(_OWORD *)(v26 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v22, v23, 1);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v9);
      a1 = v37;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v40 = 0uLL;
  char v41 = 0;
  uint64_t v19 = sub_1C152069C();
  uint64_t v21 = v20;
  long long v40 = xmmword_1C153AB20;
  char v41 = 0;
  sub_1BFE21978();
  sub_1C15206EC();
  uint64_t v27 = v42;
  long long v40 = xmmword_1C1557FA0;
  char v41 = 0;
  sub_1BFE21A20();
  sub_1C152065C();
  uint64_t v34 = v42;
  uint64_t v35 = v27;
  type metadata accessor for FormatVersionRequirement(0);
  long long v40 = xmmword_1C1557FB0;
  char v41 = 0;
  sub_1C085F050(&qword_1EB891B80, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  uint64_t v28 = (uint64_t)v36;
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v9);
  uint64_t v30 = type metadata accessor for FormatOption();
  sub_1BFE30878(v28, (uint64_t)v14 + *(int *)(v30 + 28), (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
  *uint64_t v14 = v19;
  v14[1] = v21;
  uint64_t v31 = v34;
  v14[2] = v35;
  v14[3] = v31;
  uint64_t v32 = (uint64_t)v37;
  return __swift_destroy_boxed_opaque_existential_1(v32);
}

unint64_t sub_1BFE21978()
{
  unint64_t result = qword_1EB875898;
  if (!qword_1EB875898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875898);
  }
  return result;
}

unint64_t sub_1BFE219CC()
{
  unint64_t result = qword_1EB8870F8;
  if (!qword_1EB8870F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8870F8);
  }
  return result;
}

unint64_t sub_1BFE21A20()
{
  unint64_t result = qword_1EB88AA68;
  if (!qword_1EB88AA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88AA68);
  }
  return result;
}

uint64_t sub_1BFE21A74(void *a1)
{
  return FormatLocalizationString.Selector.encode(to:)(a1);
}

uint64_t FormatLocalizationString.Selector.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v32 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v30 - v6;
  sub_1C089809C();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v1;
  uint64_t v12 = v1[1];
  uint64_t v13 = v1[3];
  uint64_t v30 = v1[2];
  uint64_t v31 = v13;
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1C0897F70();
  uint64_t v17 = v16;
  uint64_t v18 = sub_1C085F050(&qword_1EB892130, (void (*)(uint64_t))sub_1C0897F70);
  uint64_t v34 = v10;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatLocalizationString.Selector, v19, v14, (uint64_t)&type metadata for FormatLocalizationString.Selector, v17, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v10, v18, (uint64_t)&off_1F1C39B68);
  uint64_t v20 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1C151928C();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB93CAB0);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
  v23(v7, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = v33;
  sub_1C06B3B74(v11, v12, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v24)
  {
    uint64_t v25 = (uint64_t)v34;
  }
  else
  {
    uint64_t v26 = (uint64_t)v32;
    v23(v32, v22, v21);
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = v31;
    swift_bridgeObjectRetain();
    uint64_t v28 = (uint64_t)v34;
    sub_1C06B3D0C(v30, v27, 1, 0, 0, v26, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v25 = v28;
  }
  return sub_1BFEFEB68(v25, (uint64_t (*)(void))sub_1C089809C);
}

uint64_t sub_1BFE21E10(void *a1)
{
  return FormatImageNodeStyle.Selector.encode(to:)(a1);
}

uint64_t FormatImageNodeStyle.Selector.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  char v82 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v85 = (char *)&v82 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v88 = (char *)&v82 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v90 = (char *)&v82 - v10;
  MEMORY[0x1F4188790](v11);
  long long v92 = (char *)&v82 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v96 = (char *)&v82 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v95 = (char *)&v82 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v98 = (char *)&v82 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v99 = (char *)&v82 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v103 = (char *)&v82 - v22;
  MEMORY[0x1F4188790](v23);
  id v105 = (char *)&v82 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v107 = (char *)&v82 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v82 - v28;
  sub_1C0890F8C();
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v32 = (char *)&v82 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = *(void *)v1;
  uint64_t v33 = *(void *)(v1 + 8);
  uint64_t v106 = *(uint64_t (**)(uint64_t))(v1 + 16);
  uint64_t v104 = *(void *)(v1 + 24);
  uint64_t v100 = *(void *)(v1 + 32);
  uint64_t v102 = *(void *)(v1 + 40);
  int v101 = *(unsigned __int8 *)(v1 + 48);
  sub_1BFE99AAC(v1 + 56, (uint64_t)v109, &qword_1EB85B6E0, (uint64_t)&type metadata for FormatShadow);
  uint64_t v97 = *(void *)(v1 + 144);
  int v94 = *(unsigned __int8 *)(v1 + 152);
  int v93 = *(unsigned __int8 *)(v1 + 153);
  int v91 = *(unsigned __int8 *)(v1 + 154);
  unint64_t v89 = *(void *)(v1 + 160);
  uint64_t v87 = *(void *)(v1 + 168);
  uint64_t v86 = *(void *)(v1 + 176);
  uint64_t v84 = *(void *)(v1 + 184);
  uint64_t v83 = *(void *)(v1 + 192);
  uint64_t v35 = a1[3];
  uint64_t v36 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v35);
  sub_1C0890E60();
  uint64_t v38 = v37;
  uint64_t v39 = sub_1C085F050(&qword_1EB891EB0, (void (*)(uint64_t))sub_1C0890E60);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatImageNodeStyle.Selector, v40, v35, (uint64_t)&type metadata for FormatImageNodeStyle.Selector, v38, (uint64_t)&type metadata for FormatVersions.JazzkonC, v36, (uint64_t)v32, v39, (uint64_t)&off_1F1C39B68);
  uint64_t v41 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v41 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_1C151928C();
  uint64_t v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1EB93CAB0);
  uint64_t v44 = *(void *)(v42 - 8);
  char v45 = *(void (**)(char *))(v44 + 16);
  uint64_t v46 = v44 + 16;
  uint64_t v108 = (void (*)(void, void, void))v43;
  v45(v29);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v47 = (uint64_t)v32;
  uint64_t v48 = v110;
  sub_1C06BB068(v34, v33, 0, 0, 0, (uint64_t)v29, (uint64_t)sub_1C01B158C, 0);
  if (v48)
  {
    sub_1BFEFEB68((uint64_t)v29, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v29, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v49 = (uint64_t)v107;
    uint64_t v50 = v108;
    ((void (*)(char *, void, uint64_t))v45)(v107, v108, v42);
    swift_storeEnumTagMultiPayload();
    uint64_t v51 = v106;
    sub_1BFEF683C((uint64_t)v106);
    sub_1C0709FD4((uint64_t)v51, 1, 0, 0, v49, (uint64_t)sub_1C01B158C, 0);
    uint64_t v53 = v45;
    uint64_t v54 = v46;
    uint64_t v55 = v49;
    char v56 = (void (*)(char *, uint64_t, uint64_t))v53;
    sub_1BFEFEB68(v55, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF68C0((uint64_t)v51);
    uint64_t v57 = (uint64_t)v105;
    v56(v105, (uint64_t)v50, v42);
    swift_storeEnumTagMultiPayload();
    uint64_t v58 = swift_bridgeObjectRetain();
    sub_1C070A22C(v58, 2, 0, 0, v57, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v57, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v59 = (uint64_t)v103;
    unint64_t v60 = v56;
    v56(v103, (uint64_t)v108, v42);
    swift_storeEnumTagMultiPayload();
    uint64_t v61 = v100;
    uint64_t v110 = v54;
    uint64_t v62 = v102;
    LOBYTE(v51) = v101;
    sub_1BFEF6828(v100, v102, v101);
    sub_1C070A490(v61, v62, v51, 3, 0, 0, v59, (uint64_t)sub_1C01B158C);
    sub_1BFEFEB68(v59, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF68AC(v61, v62, (char)v51);
    uint64_t v63 = (uint64_t)v99;
    v56(v99, (uint64_t)v108, v42);
    swift_storeEnumTagMultiPayload();
    sub_1BFE99EB4((uint64_t)v109, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8708);
    sub_1C070A704((uint64_t)v109, 4, 0, 0, v63, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v63, type metadata accessor for FormatVersionRequirement);
    sub_1BFE99EB4((uint64_t)v109, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8738);
    uint64_t v64 = (uint64_t)v98;
    v56(v98, (uint64_t)v108, v42);
    swift_storeEnumTagMultiPayload();
    uint64_t v65 = v97;
    sub_1BFDC11A4(v97);
    sub_1C070AA38(v65, 5, 0, 0, v64, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v64, type metadata accessor for FormatVersionRequirement);
    sub_1BFDC11BC(v65);
    if (qword_1EB887600 != -1) {
      swift_once();
    }
    uint64_t v66 = __swift_project_value_buffer(v42, (uint64_t)qword_1EB93CA08);
    uint64_t v67 = (uint64_t)v95;
    v60(v95, v66, v42);
    swift_storeEnumTagMultiPayload();
    sub_1C070AC90(v94, 6, 0, 0, v67, (uint64_t)sub_1C01B158C, 0);
    uint64_t v68 = (uint64_t)v96;
    sub_1BFEFEB68(v67, type metadata accessor for FormatVersionRequirement);
    uint64_t v69 = v108;
    v60((char *)v68, (uint64_t)v108, v42);
    swift_storeEnumTagMultiPayload();
    sub_1C070AEB4(v93, 7, 0, 0, v68, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v68, type metadata accessor for FormatVersionRequirement);
    uint64_t v70 = (uint64_t)v92;
    v60(v92, (uint64_t)v69, v42);
    swift_storeEnumTagMultiPayload();
    sub_1C070B0D8(v91, 8, 0, 0, v70, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v70, type metadata accessor for FormatVersionRequirement);
    uint64_t v71 = (uint64_t)v90;
    v60(v90, (uint64_t)v69, v42);
    swift_storeEnumTagMultiPayload();
    unint64_t v72 = v89;
    sub_1BFEF6854(v89);
    sub_1C070B2FC(v72, 9, 0, 0, v71, (uint64_t)sub_1C01B158C, 0);
    uint64_t v107 = 0;
    uint64_t v106 = type metadata accessor for FormatVersionRequirement;
    sub_1BFEFEB68(v71, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF68D8(v72);
    uint64_t v73 = (uint64_t)v88;
    uint64_t v108 = (void (*)(void, void, void))v60;
    v60(v88, (uint64_t)v69, v42);
    swift_storeEnumTagMultiPayload();
    uint64_t v74 = swift_bridgeObjectRetain();
    uint64_t v75 = v107;
    sub_1C070B548(v74, 10, 0, 0, v73, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v73, v106);
    swift_bridgeObjectRelease();
    if (!v75)
    {
      uint64_t v76 = qword_1EB887638;
      swift_bridgeObjectRetain();
      if (v76 != -1) {
        swift_once();
      }
      uint64_t v77 = __swift_project_value_buffer(v42, (uint64_t)qword_1EB93CA98);
      uint64_t v78 = (uint64_t)v85;
      v108(v85, v77, v42);
      swift_storeEnumTagMultiPayload();
      sub_1C070B7C0(v86, 11, 0, 0, v78, (uint64_t)sub_1C01B158C, 0);
      sub_1BFEFEB68(v78, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      sub_1BFEF6864(v84);
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v79 = __swift_project_value_buffer(v42, (uint64_t)qword_1EB93CAE0);
      uint64_t v80 = (uint64_t)v82;
      v108(v82, v79, v42);
      swift_storeEnumTagMultiPayload();
      uint64_t v81 = v84;
      sub_1C070BA24(v84, v83, 12, 0, 0, v80, (uint64_t)sub_1C01B158C, 0);
      sub_1BFEFEB68(v80, type metadata accessor for FormatVersionRequirement);
      sub_1BFEF68E8(v81);
    }
  }
  return sub_1BFEFEB68(v47, (uint64_t (*)(void))sub_1C0890F8C);
}

unint64_t sub_1BFE22D74()
{
  unint64_t result = qword_1EB85C420;
  if (!qword_1EB85C420)
  {
    sub_1BFE9DEBC(255, &qword_1EB879E78, (uint64_t)&type metadata for FormatImageAdjustment, MEMORY[0x1E4FBB320]);
    sub_1C00751BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C420);
  }
  return result;
}

void sub_1BFE22E08(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void FormatOptionExpression.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFC66384(a1, (uint64_t)v10);
  FormatOptionExpression.Compare.init(from:)(v10, (uint64_t)&v11);
  if (v2)
  {
    sub_1BFC66384(a1, (uint64_t)v10);
    FormatOptionExpression.Exists.init(from:)(v10, (uint64_t)&v11);
    __swift_destroy_boxed_opaque_existential_1(a1);

    uint64_t v5 = v11;
    uint64_t v6 = v12;
    uint64_t v7 = 256;
    if (!BYTE1(v13)) {
      uint64_t v7 = 0;
    }
    unsigned long long v8 = (unint64_t)v7 | (unsigned __int128)v13;
    __int16 v9 = 0x8000;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    uint64_t v5 = v11;
    uint64_t v6 = v12;
    unsigned long long v8 = v13;
    __int16 v9 = v14 | (v15 << 8);
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v6;
  *(_OWORD *)(a2 + 16) = v8;
  *(_WORD *)(a2 + 32) = v9;
}

uint64_t FormatOptionExpression.Compare.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFE23224(0, &qword_1EB87A558, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  __int16 v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE231D0();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v23[0]) = 0;
  uint64_t v11 = sub_1C152069C();
  uint64_t v13 = v12;
  sub_1BFC66384((uint64_t)a1, (uint64_t)v23);
  FormatOptionCompareValue.init(from:)(v23, (uint64_t)v24);
  uint64_t v20 = v24[0];
  uint64_t v21 = v24[1];
  uint64_t v22 = v13;
  char v26 = v25;
  LOBYTE(v24[0]) = 2;
  sub_1BFE23564();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  char v14 = v23[0];
  if (LOBYTE(v23[0]) == 12) {
    char v14 = 0;
  }
  char v15 = v26;
  uint64_t v16 = v22;
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v16;
  uint64_t v18 = v20;
  uint64_t v17 = v21;
  *(void *)(a2 + 16) = v20;
  *(void *)(a2 + 24) = v17;
  *(unsigned char *)(a2 + 32) = v15;
  *(unsigned char *)(a2 + 33) = v14;
  swift_bridgeObjectRetain();
  sub_1BFF27F28(v18, v17, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1BFE1D230(v18, v17, v15);
}

unint64_t sub_1BFE231D0()
{
  unint64_t result = qword_1EB8775C8;
  if (!qword_1EB8775C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8775C8);
  }
  return result;
}

void sub_1BFE23224(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFE231D0();
    unint64_t v7 = a3(a1, &type metadata for FormatOptionExpression.Compare.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t FormatOptionCompareValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFE23500(0, &qword_1EB890388, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  __int16 v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE234AC();
  sub_1C1520EBC();
  if (!v2)
  {
    char v12 = 0;
    sub_1BFE21978();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(void *)a2 = v11;
    *(void *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 16) = 0;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFE234AC()
{
  unint64_t result = qword_1EB88B670;
  if (!qword_1EB88B670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88B670);
  }
  return result;
}

void sub_1BFE23500(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFE234AC();
    unint64_t v7 = a3(a1, &type metadata for FormatOptionCompareValue.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1BFE23564()
{
  unint64_t result = qword_1EB874BC0;
  if (!qword_1EB874BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874BC0);
  }
  return result;
}

uint64_t FormatOptionExpression.Exists.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1C0867058();
  uint64_t v7 = v6;
  uint64_t v30 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  __int16 v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08670EC();
  sub_1C085F050(&qword_1EB892010, (void (*)(uint64_t))sub_1C08670EC);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v30;
  uint64_t v13 = v9;
  if (v11)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unsigned char *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v29 = *((void *)v16 - 2);
      uint64_t v20 = v12;
      uint64_t v21 = *((void *)v16 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v22 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v22);
      *(&v28 - 4) = (uint64_t)&_s10CodingKeysON_239;
      *(&v28 - 3) = sub_1C0867170();
      *(&v28 - 2) = sub_1BFE23A14();
      *(&v28 - 1) = sub_1C08671C4();
      swift_getKeyPath();
      swift_retain();
      uint64_t v23 = sub_1C085FB14((uint64_t)&unk_1F1B6DD10);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      uint64_t v24 = v29;
      *(void *)uint64_t v25 = v29;
      *(void *)(v25 + 8) = v21;
      *(void *)(v25 + 16) = v23;
      *(_OWORD *)(v25 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v24, v21, 1);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v7);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v31 = 0uLL;
  char v32 = 0;
  uint64_t v17 = sub_1C152069C();
  uint64_t v19 = v18;
  long long v31 = xmmword_1C153AB20;
  char v32 = 0;
  sub_1BFF71ADC();
  sub_1C15206EC();
  LODWORD(v29) = v33;
  long long v31 = xmmword_1C1557FA0;
  char v32 = 0;
  sub_1BFE23A68();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v7);
  unsigned __int8 v27 = v33;
  *(void *)a2 = v17;
  *(void *)(a2 + 8) = v19;
  *(unsigned char *)(a2 + 16) = v29;
  *(unsigned char *)(a2 + 17) = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFE23A14()
{
  unint64_t result = qword_1EB88AA70;
  if (!qword_1EB88AA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88AA70);
  }
  return result;
}

unint64_t sub_1BFE23A68()
{
  unint64_t result = qword_1EB8775C0;
  if (!qword_1EB8775C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8775C0);
  }
  return result;
}

unint64_t sub_1BFE23ABC()
{
  unint64_t result = qword_1EB8874E0;
  if (!qword_1EB8874E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8874E0);
  }
  return result;
}

uint64_t sub_1BFE23B10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFE23B3C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFE23B3C(void *a1)
{
  sub_1C0908CDC(0, (unint64_t *)&qword_1EB884858, (void (*)(void))sub_1C00795B8, (void (*)(void))sub_1BFC3A24C);
  uint64_t v3 = v2;
  uint64_t v32 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - v4;
  sub_1C08ED940();
  uint64_t v7 = v6;
  uint64_t v33 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  __int16 v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08BCB18();
  sub_1C085F050(&qword_1EB891F00, (void (*)(uint64_t))sub_1C08BCB18);
  char v11 = v34;
  sub_1C1520EBC();
  uint64_t v12 = v11;
  if (v11)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v12);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v10;
  }
  uint64_t v34 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_1C1520EAC();
  char v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  if (v14)
  {
    uint64_t v15 = v7;
    uint64_t v16 = sub_1C152070C();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = (unsigned char *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17) {
          goto LABEL_7;
        }
      }
      uint64_t v10 = *((void *)v18 - 2);
      uint64_t v22 = *((void *)v18 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v23 = swift_bridgeObjectRelease();
      uint64_t v24 = v9;
      MEMORY[0x1F4188790](v23);
      *(&v30 - 4) = (uint64_t)&_s10CodingKeysON_34;
      *(&v30 - 3) = sub_1C08BCB9C();
      *(&v30 - 2) = sub_1BFE240FC();
      *(&v30 - 1) = sub_1C08BCBF0();
      swift_getKeyPath();
      swift_retain();
      uint64_t v25 = sub_1C085FB14((uint64_t)&unk_1F1B882E0);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v12 = (void *)swift_allocError();
      *(void *)uint64_t v26 = v10;
      *(void *)(v26 + 8) = v22;
      *(void *)(v26 + 16) = v25;
      *(_OWORD *)(v26 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v10, v22, 1);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v15);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE240A8();
  long long v35 = 0uLL;
  char v36 = 0;
  uint64_t v19 = v7;
  sub_1C15206EC();
  uint64_t v31 = v37;
  long long v35 = xmmword_1C153AB20;
  char v36 = 0;
  sub_1BFCAB4C0();
  uint64_t v20 = v34;
  sub_1C15206EC();
  uint64_t v21 = v33;
  uint64_t v28 = v19;
  uint64_t v29 = sub_1C1517E5C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v3);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v28);
  type metadata accessor for FormatSwitchNodeCase();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v31;
  swift_beginAccess();
  *(void *)(v10 + 24) = v29;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v10;
}

void sub_1BFE24040()
{
  if (!qword_1EB884858)
  {
    sub_1C00795B8();
    sub_1BFC3A24C();
    unint64_t v0 = sub_1C15181BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884858);
    }
  }
}

unint64_t sub_1BFE240A8()
{
  unint64_t result = qword_1EB8752D8;
  if (!qword_1EB8752D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8752D8);
  }
  return result;
}

unint64_t sub_1BFE240FC()
{
  unint64_t result = qword_1EB889B98;
  if (!qword_1EB889B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889B98);
  }
  return result;
}

uint64_t type metadata accessor for FormatSwitchNodeCase()
{
  return self;
}

uint64_t sub_1BFE24174(void *a1)
{
  return FormatOptionValue.encode(to:)(a1);
}

uint64_t FormatOptionValue.encode(to:)(void *a1)
{
  sub_1BFF2918C();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v133 = (char *)&v120 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF29220();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v132 = (char *)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v131 = (char *)&v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v130 = (char *)&v120 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v129 = (char *)&v120 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v128 = (char *)&v120 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v126 = (char *)&v120 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v127 = (char *)&v120 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v125 = (char *)&v120 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v124 = (char *)&v120 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v123 = (char *)&v120 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v122 = (char *)&v120 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v120 - v28;
  MEMORY[0x1F4188790](v30);
  uint64_t v121 = (char *)&v120 - v31;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v120 - v33;
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)&v120 - v36;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v40 = (char *)&v120 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = *v1;
  uint64_t v42 = a1[3];
  uint64_t v43 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v42);
  unint64_t v44 = sub_1BFEB6A24();
  uint64_t v134 = v40;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatOptionValue, v45, v42, (uint64_t)&type metadata for FormatOptionValue, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v43, (uint64_t)v40, v44, (uint64_t)&off_1F1C39B68);
  switch(v41 >> 60)
  {
    case 1uLL:
      long long v54 = *(_OWORD *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      v135[0] = *(_OWORD *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v135[1] = v54;
      uint64_t v136 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_1C151928C();
      uint64_t v56 = __swift_project_value_buffer(v55, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16))(v34, v56, v55);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v57 = (uint64_t)v134;
      sub_1BFE2549C(1, v135, (uint64_t)v34);
      sub_1BFEFEB68((uint64_t)v34, type metadata accessor for FormatVersionRequirement);
      return sub_1BFEFEB68(v57, (uint64_t (*)(void))sub_1BFEFF7D8);
    case 2uLL:
      uint64_t v59 = swift_projectBox();
      uint64_t v29 = v132;
      sub_1BFE80E70(v59, (uint64_t)v132, (uint64_t (*)(void))sub_1BFF29220);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v60 = sub_1C151928C();
      uint64_t v61 = __swift_project_value_buffer(v60, (uint64_t)qword_1EB93CAB0);
      uint64_t v62 = (uint64_t)v121;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16))(v121, v61, v60);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v51 = (uint64_t)v134;
      sub_1C06939F8(2, (uint64_t)v29, v62);
      sub_1BFEFEB68(v62, type metadata accessor for FormatVersionRequirement);
      uint64_t v63 = (uint64_t (*)(uint64_t))sub_1BFF29220;
      goto LABEL_39;
    case 3uLL:
      double v64 = *(double *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v65 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v66 = sub_1C151928C();
      uint64_t v67 = __swift_project_value_buffer(v66, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16))(v29, v67, v66);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v68 = v65;
      uint64_t v51 = (uint64_t)v134;
      sub_1BFE25824(3, v68, (uint64_t)v29, v64);
      goto LABEL_38;
    case 4uLL:
      uint64_t v69 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v70 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v71 = sub_1C151928C();
      uint64_t v72 = __swift_project_value_buffer(v71, (uint64_t)qword_1EB93CAB0);
      uint64_t v73 = (uint64_t)v122;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v71 - 8) + 16))(v122, v72, v71);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v74 = v69;
      uint64_t v51 = (uint64_t)v134;
      sub_1BFE25A8C(4, v74, v70, v73);
      uint64_t v52 = type metadata accessor for FormatVersionRequirement;
      uint64_t v53 = v73;
      goto LABEL_40;
    case 5uLL:
      uint64_t v75 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v76 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v77 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v78 = sub_1C151928C();
      uint64_t v79 = __swift_project_value_buffer(v78, (uint64_t)qword_1EB93CAB0);
      uint64_t v80 = (uint64_t)v123;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v123, v79, v78);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v81 = v75;
      uint64_t v51 = (uint64_t)v134;
      sub_1BFE25CD8(5, v81, v76, v77, v80);
      uint64_t v52 = type metadata accessor for FormatVersionRequirement;
      uint64_t v53 = v80;
      goto LABEL_40;
    case 6uLL:
      uint64_t v82 = swift_projectBox();
      uint64_t v29 = v133;
      sub_1BFE80E70(v82, (uint64_t)v133, (uint64_t (*)(void))sub_1BFF2918C);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v83 = sub_1C151928C();
      uint64_t v84 = __swift_project_value_buffer(v83, (uint64_t)qword_1EB93CAB0);
      uint64_t v85 = (uint64_t)v124;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16))(v124, v84, v83);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v51 = (uint64_t)v134;
      sub_1BFC49218(6, (uint64_t)v29, v85);
      sub_1BFEFEB68(v85, type metadata accessor for FormatVersionRequirement);
      uint64_t v63 = (uint64_t (*)(uint64_t))sub_1BFF2918C;
      goto LABEL_39;
    case 7uLL:
      uint64_t v86 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v87 = qword_1EB882D28;
      swift_retain();
      if (v87 != -1) {
        swift_once();
      }
      uint64_t v88 = sub_1C151928C();
      uint64_t v89 = __swift_project_value_buffer(v88, (uint64_t)qword_1EB93CAB0);
      uint64_t v90 = (uint64_t)v125;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v88 - 8) + 16))(v125, v89, v88);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v91 = (uint64_t)v134;
      sub_1BFE25690(7, v86, v90);
      goto LABEL_47;
    case 8uLL:
      uint64_t v92 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v93 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v94 = qword_1EB8875F8;
      swift_retain();
      swift_retain();
      if (v94 != -1) {
        swift_once();
      }
      uint64_t v95 = sub_1C151928C();
      uint64_t v96 = __swift_project_value_buffer(v95, (uint64_t)qword_1EB93C9F0);
      uint64_t v97 = (uint64_t)v127;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v95 - 8) + 16))(v127, v96, v95);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v98 = v93;
      uint64_t v99 = (uint64_t)v134;
      sub_1C0693BCC(8, v92, v98, v97);
      sub_1BFEFEB68(v97, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v99, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_release();
      goto LABEL_48;
    case 9uLL:
      uint64_t v100 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v101 = qword_1EB887620;
      swift_retain();
      if (v101 != -1) {
        swift_once();
      }
      uint64_t v102 = sub_1C151928C();
      uint64_t v103 = __swift_project_value_buffer(v102, (uint64_t)qword_1EB93CA50);
      uint64_t v90 = (uint64_t)v126;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v102 - 8) + 16))(v126, v103, v102);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v91 = (uint64_t)v134;
      sub_1C0693D98(9, v100, v90);
      goto LABEL_47;
    case 0xAuLL:
      uint64_t v104 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v105 = qword_1EB887620;
      swift_retain();
      if (v105 != -1) {
        swift_once();
      }
      uint64_t v106 = sub_1C151928C();
      uint64_t v107 = __swift_project_value_buffer(v106, (uint64_t)qword_1EB93CA50);
      uint64_t v90 = (uint64_t)v128;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v106 - 8) + 16))(v128, v107, v106);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v91 = (uint64_t)v134;
      sub_1C0693F2C(10, v104, v90);
      goto LABEL_47;
    case 0xBuLL:
      char v108 = *(unsigned char *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v109 = sub_1C151928C();
      uint64_t v110 = __swift_project_value_buffer(v109, (uint64_t)qword_1EB93CA98);
      uint64_t v29 = v129;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v109 - 8) + 16))(v129, v110, v109);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v111 = v108;
      uint64_t v51 = (uint64_t)v134;
      sub_1C06940C0(11, v111, (uint64_t)v29);
LABEL_38:
      uint64_t v63 = type metadata accessor for FormatVersionRequirement;
LABEL_39:
      uint64_t v52 = v63;
      uint64_t v53 = (uint64_t)v29;
      goto LABEL_40;
    case 0xCuLL:
      uint64_t v112 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v113 = qword_1EB887638;
      swift_retain();
      if (v113 != -1) {
        swift_once();
      }
      uint64_t v114 = sub_1C151928C();
      uint64_t v115 = __swift_project_value_buffer(v114, (uint64_t)qword_1EB93CA98);
      uint64_t v90 = (uint64_t)v130;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v114 - 8) + 16))(v130, v115, v114);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v91 = (uint64_t)v134;
      sub_1C0694294(12, v112, v90);
      goto LABEL_47;
    case 0xDuLL:
      uint64_t v116 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v117 = qword_1EB887650;
      swift_retain();
      if (v117 != -1) {
        swift_once();
      }
      uint64_t v118 = sub_1C151928C();
      uint64_t v119 = __swift_project_value_buffer(v118, (uint64_t)qword_1EB93CAE0);
      uint64_t v90 = (uint64_t)v131;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v118 - 8) + 16))(v131, v119, v118);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v91 = (uint64_t)v134;
      sub_1C0694428(13, v116, v90);
LABEL_47:
      sub_1BFEFEB68(v90, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v91, (uint64_t (*)(void))sub_1BFEFF7D8);
LABEL_48:
      uint64_t result = swift_release();
      break;
    default:
      char v46 = *(unsigned char *)(v41 + 16);
      uint64_t v47 = *(void *)(v41 + 24);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v48 = sub_1C151928C();
      uint64_t v49 = __swift_project_value_buffer(v48, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v37, v49, v48);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v50 = v46;
      uint64_t v51 = (uint64_t)v134;
      sub_1BFE251F8(0, v50, v47, (uint64_t)v37);
      uint64_t v52 = type metadata accessor for FormatVersionRequirement;
      uint64_t v53 = (uint64_t)v37;
LABEL_40:
      sub_1BFEFEB68(v53, v52);
      uint64_t result = sub_1BFEFEB68(v51, (uint64_t (*)(void))sub_1BFEFF7D8);
      break;
  }
  return result;
}

uint64_t sub_1BFE251F8(char a1, char a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  char v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C090544C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE253C4();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FC718(0, &qword_1EB876960, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BFE25418();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE253C4()
{
  unint64_t result = qword_1EB865EE0;
  if (!qword_1EB865EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865EE0);
  }
  return result;
}

unint64_t sub_1BFE25418()
{
  unint64_t result = qword_1EB85BA90;
  if (!qword_1EB85BA90)
  {
    sub_1C08FC718(255, &qword_1EB876960, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BA90);
  }
  return result;
}

uint64_t sub_1BFE2549C(char a1, long long *a2, uint64_t a3)
{
  char v20 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  uint64_t v19 = *((void *)a2 + 4);
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C090544C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE253C4();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFE2563C();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE2563C()
{
  unint64_t result = qword_1EB85B898;
  if (!qword_1EB85B898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B898);
  }
  return result;
}

uint64_t sub_1BFE25690(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C090544C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE253C4();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE10198();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE25824(char a1, uint64_t a2, uint64_t a3, double a4)
{
  char v19 = a1;
  double v17 = a4;
  uint64_t v18 = a2;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C090544C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE253C4();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB876940, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BFE259FC();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE259FC()
{
  unint64_t result = qword_1EB85BA88;
  if (!qword_1EB85BA88)
  {
    sub_1BFEFF3E8(255, (unint64_t *)&qword_1EB876940, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BA88);
  }
  return result;
}

uint64_t sub_1BFE25A8C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C090544C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE253C4();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FC718(0, &qword_1EB876970, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BFE25C54();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE25C54()
{
  unint64_t result = qword_1EB85BA98;
  if (!qword_1EB85BA98)
  {
    sub_1C08FC718(255, &qword_1EB876970, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BA98);
  }
  return result;
}

uint64_t sub_1BFE25CD8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  uint64_t v16[2] = sub_1C090544C;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE253C4();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1C08FC718(0, &qword_1EB876950, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BFE25EA4();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE25EA4()
{
  unint64_t result = qword_1EB85D3F8;
  if (!qword_1EB85D3F8)
  {
    sub_1C08FC718(255, &qword_1EB876950, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D3F8);
  }
  return result;
}

unint64_t sub_1BFE25F28(void *a1)
{
  return FormatSize.encode(to:)(a1);
}

unint64_t FormatSize.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  int64_t v226 = (char *)&v201 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v225 = (char *)&v201 - v6;
  MEMORY[0x1F4188790](v7);
  unint64_t v224 = (char *)&v201 - v8;
  MEMORY[0x1F4188790](v9);
  int64_t v223 = (char *)&v201 - v10;
  MEMORY[0x1F4188790](v11);
  id v222 = (char *)&v201 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v207 = (char *)&v201 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v206 = (char *)&v201 - v16;
  MEMORY[0x1F4188790](v17);
  int64_t v221 = (char *)&v201 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v220 = (char *)&v201 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v219 = (char *)&v201 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v205 = (char *)&v201 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v204 = (char *)&v201 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v203 = (char *)&v201 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v218 = (char *)&v201 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v217 = (char *)&v201 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v216 = (char *)&v201 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v215 = (char *)&v201 - v36;
  MEMORY[0x1F4188790](v37);
  uint64_t v214 = (char *)&v201 - v38;
  MEMORY[0x1F4188790](v39);
  uint64_t v213 = (char *)&v201 - v40;
  MEMORY[0x1F4188790](v41);
  char v212 = (char *)&v201 - v42;
  MEMORY[0x1F4188790](v43);
  uint64_t v211 = (char *)&v201 - v44;
  MEMORY[0x1F4188790](v45);
  BOOL v210 = (char *)&v201 - v46;
  MEMORY[0x1F4188790](v47);
  uint64_t v209 = (char *)&v201 - v48;
  MEMORY[0x1F4188790](v49);
  uint64_t v208 = (char *)&v201 - v50;
  MEMORY[0x1F4188790](v51);
  uint64_t v202 = (char *)&v201 - v52;
  MEMORY[0x1F4188790](v53);
  uint64_t v201 = (char *)&v201 - v54;
  MEMORY[0x1F4188790](v55);
  uint64_t v57 = (char *)&v201 - v56;
  MEMORY[0x1F4188790](v58);
  uint64_t v60 = (char *)&v201 - v59;
  MEMORY[0x1F4188790](v61);
  uint64_t v63 = (char *)&v201 - v62;
  MEMORY[0x1F4188790](v64);
  uint64_t v66 = (char *)&v201 - v65;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v67 - 8);
  uint64_t v69 = (char *)&v201 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v70 = *v1;
  uint64_t v71 = a1;
  uint64_t v72 = a1[3];
  uint64_t v73 = v71[4];
  __swift_project_boxed_opaque_existential_1(v71, v72);
  unint64_t v74 = sub_1BFEB6A24();
  unint64_t v227 = v69;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatSize, v75, v72, (uint64_t)&type metadata for FormatSize, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v73, (uint64_t)v69, v74, (uint64_t)&off_1F1C39B68);
  switch((v70 >> 59) & 0x1E | (v70 >> 2) & 1)
  {
    case 1uLL:
      uint64_t v82 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v83 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v84 = sub_1C151928C();
      uint64_t v85 = __swift_project_value_buffer(v84, (uint64_t)qword_1EB93CA98);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16))(v60, v85, v84);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v86 = v83;
      uint64_t v80 = (uint64_t)v227;
      sub_1C069BA30(2, v82, v86, (uint64_t)v60);
      goto LABEL_98;
    case 2uLL:
      unint64_t v88 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      unint64_t v87 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      sub_1BFF8B400(v88);
      sub_1BFF8B400(v87);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v89 = sub_1C151928C();
      uint64_t v90 = __swift_project_value_buffer(v89, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v89 - 8) + 16))(v57, v90, v89);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v91 = (uint64_t)v227;
      sub_1BFE28070(3, v88, v87, (uint64_t)v57);
      sub_1BFEFEB68((uint64_t)v57, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v91, (uint64_t (*)(void))sub_1BFEFF7D8);
      sub_1BFF8B438(v88);
      return sub_1BFF8B438(v87);
    case 3uLL:
      uint64_t v93 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v94 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      if (v94 != -1) {
        swift_once();
      }
      uint64_t v95 = sub_1C151928C();
      uint64_t v96 = __swift_project_value_buffer(v95, (uint64_t)qword_1EB93CAB0);
      uint64_t v97 = (uint64_t)v208;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v95 - 8) + 16))(v208, v96, v95);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v98 = 6;
      goto LABEL_63;
    case 4uLL:
      uint64_t v99 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v100 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      if (v100 != -1) {
        swift_once();
      }
      uint64_t v101 = sub_1C151928C();
      uint64_t v102 = __swift_project_value_buffer(v101, (uint64_t)qword_1EB93CAB0);
      uint64_t v103 = (uint64_t)v209;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v101 - 8) + 16))(v209, v102, v101);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v80 = (uint64_t)v227;
      sub_1BFE27EA4(7, v99, v103);
      sub_1BFEFEB68(v103, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      return sub_1BFEFEB68(v80, (uint64_t (*)(void))sub_1BFEFF7D8);
    case 5uLL:
      uint64_t v93 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v104 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      if (v104 != -1) {
        swift_once();
      }
      uint64_t v105 = sub_1C151928C();
      uint64_t v106 = __swift_project_value_buffer(v105, (uint64_t)qword_1EB93CAB0);
      uint64_t v97 = (uint64_t)v210;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v105 - 8) + 16))(v210, v106, v105);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v98 = 8;
      goto LABEL_63;
    case 6uLL:
      uint64_t v93 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v107 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      if (v107 != -1) {
        swift_once();
      }
      uint64_t v108 = sub_1C151928C();
      uint64_t v109 = __swift_project_value_buffer(v108, (uint64_t)qword_1EB93CAB0);
      uint64_t v97 = (uint64_t)v211;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v108 - 8) + 16))(v211, v109, v108);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v98 = 9;
      goto LABEL_63;
    case 7uLL:
      uint64_t v110 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      char v111 = *(unsigned char *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v112 = sub_1C151928C();
      uint64_t v113 = __swift_project_value_buffer(v112, (uint64_t)qword_1EB93CA50);
      uint64_t v114 = (uint64_t)v212;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v112 - 8) + 16))(v212, v113, v112);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v115 = 10;
      goto LABEL_29;
    case 8uLL:
      uint64_t v110 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      char v111 = *(unsigned char *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v116 = sub_1C151928C();
      uint64_t v117 = __swift_project_value_buffer(v116, (uint64_t)qword_1EB93CA50);
      uint64_t v114 = (uint64_t)v213;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v116 - 8) + 16))(v213, v117, v116);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v115 = 11;
LABEL_29:
      char v118 = v111;
      uint64_t v80 = (uint64_t)v227;
      sub_1BFC4905C(v115, v110, v118, v114);
      goto LABEL_68;
    case 9uLL:
      uint64_t v119 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v120 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      uint64_t v121 = qword_1EB8849D0;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v121 != -1) {
        swift_once();
      }
      uint64_t v122 = sub_1C151928C();
      uint64_t v123 = __swift_project_value_buffer(v122, (uint64_t)qword_1EB93C828);
      uint64_t v124 = (uint64_t)v214;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v122 - 8) + 16))(v214, v123, v122);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v125 = (uint64_t)v227;
      sub_1C069BBC4(12, v119, v120, v124);
      sub_1BFEFEB68(v124, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v125, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_bridgeObjectRelease();
      return swift_release();
    case 0xAuLL:
      uint64_t v126 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      char v127 = *(unsigned char *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v128 = sub_1C151928C();
      uint64_t v129 = __swift_project_value_buffer(v128, (uint64_t)qword_1EB93CAB0);
      uint64_t v114 = (uint64_t)v215;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v128 - 8) + 16))(v215, v129, v128);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v130 = v127;
      uint64_t v80 = (uint64_t)v227;
      sub_1BFE284BC(13, v126, v130, v114);
      goto LABEL_68;
    case 0xBuLL:
      uint64_t v131 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      char v132 = *(unsigned char *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v133 = sub_1C151928C();
      uint64_t v134 = __swift_project_value_buffer(v133, (uint64_t)qword_1EB93CAB0);
      uint64_t v114 = (uint64_t)v216;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v133 - 8) + 16))(v216, v134, v133);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v135 = v132;
      uint64_t v80 = (uint64_t)v227;
      sub_1BFE286A8(14, v131, v135, v114);
      goto LABEL_68;
    case 0xCuLL:
      uint64_t v136 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      char v137 = *(unsigned char *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v138 = sub_1C151928C();
      uint64_t v139 = __swift_project_value_buffer(v138, (uint64_t)qword_1EB93CAB0);
      uint64_t v114 = (uint64_t)v217;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v138 - 8) + 16))(v217, v139, v138);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v140 = v137;
      uint64_t v80 = (uint64_t)v227;
      sub_1BFE288F8(15, v136, v140, v114);
      goto LABEL_68;
    case 0xDuLL:
      uint64_t v141 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v142 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      char v143 = *(unsigned char *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v144 = sub_1C151928C();
      uint64_t v145 = __swift_project_value_buffer(v144, (uint64_t)qword_1EB93CAB0);
      uint64_t v114 = (uint64_t)v218;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v144 - 8) + 16))(v218, v145, v144);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v146 = v142;
      uint64_t v80 = (uint64_t)v227;
      sub_1BFE28CB8(16, v141, v146, v143, v114);
      goto LABEL_68;
    case 0xEuLL:
      char v147 = *(unsigned char *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v148 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      char v149 = *(unsigned char *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v150 = sub_1C151928C();
      uint64_t v151 = __swift_project_value_buffer(v150, (uint64_t)qword_1EB93CAB0);
      uint64_t v114 = (uint64_t)v219;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v150 - 8) + 16))(v219, v151, v150);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v152 = v148;
      uint64_t v80 = (uint64_t)v227;
      sub_1BFE28AC8(20, v147, v152, v149, v114);
      goto LABEL_68;
    case 0xFuLL:
      unint64_t v154 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      unint64_t v153 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      sub_1BFF35EA4(v154);
      sub_1C05D88D4(v153);
      if (qword_1EB8849C8 != -1) {
        swift_once();
      }
      uint64_t v155 = sub_1C151928C();
      uint64_t v156 = __swift_project_value_buffer(v155, (uint64_t)qword_1EB93C790);
      uint64_t v157 = (uint64_t)v220;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v155 - 8) + 16))(v220, v156, v155);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v158 = (uint64_t)v227;
      sub_1C069BD58(21, v154, v153, v157);
      sub_1BFEFEB68(v157, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v158, (uint64_t (*)(void))sub_1BFEFF7D8);
      sub_1BFF322A8(v154);
      return sub_1C05D88E8(v153);
    case 0x10uLL:
      uint64_t v160 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      unint64_t v159 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      swift_bridgeObjectRetain();
      sub_1BFF35EA4(v159);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v161 = sub_1C151928C();
      uint64_t v162 = __swift_project_value_buffer(v161, (uint64_t)qword_1EB93CAB0);
      uint64_t v163 = (uint64_t)v221;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v161 - 8) + 16))(v221, v162, v161);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v164 = (uint64_t)v227;
      sub_1BFE28204(22, v160, v159, v163);
      sub_1BFEFEB68(v163, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v164, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_bridgeObjectRelease();
      return sub_1BFF322A8(v159);
    case 0x11uLL:
      uint64_t v93 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v165 = qword_1EB887640;
      swift_bridgeObjectRetain();
      if (v165 != -1) {
        swift_once();
      }
      uint64_t v166 = sub_1C151928C();
      uint64_t v167 = __swift_project_value_buffer(v166, (uint64_t)qword_1EB93CAC8);
      uint64_t v97 = (uint64_t)v222;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v166 - 8) + 16))(v222, v167, v166);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v98 = 25;
      goto LABEL_63;
    case 0x12uLL:
      uint64_t v93 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v168 = qword_1EB887640;
      swift_bridgeObjectRetain();
      if (v168 != -1) {
        swift_once();
      }
      uint64_t v169 = sub_1C151928C();
      uint64_t v170 = __swift_project_value_buffer(v169, (uint64_t)qword_1EB93CAC8);
      uint64_t v97 = (uint64_t)v223;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v169 - 8) + 16))(v223, v170, v169);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v98 = 26;
      goto LABEL_63;
    case 0x13uLL:
      uint64_t v93 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v171 = qword_1EB887640;
      swift_bridgeObjectRetain();
      if (v171 != -1) {
        swift_once();
      }
      uint64_t v172 = sub_1C151928C();
      uint64_t v173 = __swift_project_value_buffer(v172, (uint64_t)qword_1EB93CAC8);
      uint64_t v97 = (uint64_t)v224;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v172 - 8) + 16))(v224, v173, v172);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v98 = 27;
LABEL_63:
      uint64_t v80 = (uint64_t)v227;
      sub_1BFE27EA4(v98, v93, v97);
      uint64_t v81 = v97;
      goto LABEL_64;
    case 0x14uLL:
      uint64_t v174 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v175 = *(void *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      if (qword_1EB887640 != -1) {
        swift_once();
      }
      uint64_t v176 = sub_1C151928C();
      uint64_t v177 = __swift_project_value_buffer(v176, (uint64_t)qword_1EB93CAC8);
      uint64_t v114 = (uint64_t)v225;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v176 - 8) + 16))(v225, v177, v176);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v178 = v175;
      uint64_t v80 = (uint64_t)v227;
      sub_1C069BEEC(28, v174, v178, v114);
LABEL_68:
      uint64_t v179 = v114;
      goto LABEL_99;
    case 0x15uLL:
      char v180 = *(unsigned char *)((v70 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      if (qword_1EB887618 != -1) {
        swift_once();
      }
      uint64_t v181 = sub_1C151928C();
      uint64_t v182 = __swift_project_value_buffer(v181, (uint64_t)qword_1EB93CA38);
      uint64_t v60 = v226;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v181 - 8) + 16))(v226, v182, v181);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v80 = (uint64_t)v227;
      sub_1C069C080(29, v180, (uint64_t)v60);
LABEL_98:
      uint64_t v179 = (uint64_t)v60;
LABEL_99:
      sub_1BFEFEB68(v179, type metadata accessor for FormatVersionRequirement);
      break;
    case 0x16uLL:
      *((void *)&v183 + 1) = v70;
      *(void *)&long long v183 = v70 + 0x5000000000000000;
      uint64_t v80 = (uint64_t)v227;
      switch((unint64_t)(v183 >> 3))
      {
        case 1uLL:
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v186 = sub_1C151928C();
          uint64_t v187 = __swift_project_value_buffer(v186, (uint64_t)qword_1EB93CAB0);
          uint64_t v60 = v201;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v186 - 8) + 16))(v201, v187, v186);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v188 = 4;
          goto LABEL_97;
        case 2uLL:
          if (qword_1EB8849C8 != -1) {
            swift_once();
          }
          uint64_t v189 = sub_1C151928C();
          uint64_t v190 = __swift_project_value_buffer(v189, (uint64_t)qword_1EB93C790);
          uint64_t v60 = v202;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v189 - 8) + 16))(v202, v190, v189);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v188 = 5;
          goto LABEL_97;
        case 3uLL:
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v191 = sub_1C151928C();
          uint64_t v192 = __swift_project_value_buffer(v191, (uint64_t)qword_1EB93CAB0);
          uint64_t v60 = v203;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v191 - 8) + 16))(v203, v192, v191);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v188 = 17;
          goto LABEL_97;
        case 4uLL:
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v193 = sub_1C151928C();
          uint64_t v194 = __swift_project_value_buffer(v193, (uint64_t)qword_1EB93CAB0);
          uint64_t v60 = v204;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v193 - 8) + 16))(v204, v194, v193);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v188 = 18;
          goto LABEL_97;
        case 5uLL:
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v195 = sub_1C151928C();
          uint64_t v196 = __swift_project_value_buffer(v195, (uint64_t)qword_1EB93CAB0);
          uint64_t v60 = v205;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v195 - 8) + 16))(v205, v196, v195);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v188 = 19;
          goto LABEL_97;
        case 6uLL:
          if (qword_1EB8875F8 != -1) {
            swift_once();
          }
          uint64_t v197 = sub_1C151928C();
          uint64_t v198 = __swift_project_value_buffer(v197, (uint64_t)qword_1EB93C9F0);
          uint64_t v60 = v206;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v197 - 8) + 16))(v206, v198, v197);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v188 = 23;
          goto LABEL_97;
        case 7uLL:
          if (qword_1EB887640 != -1) {
            swift_once();
          }
          uint64_t v199 = sub_1C151928C();
          uint64_t v200 = __swift_project_value_buffer(v199, (uint64_t)qword_1EB93CAC8);
          uint64_t v60 = v207;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v199 - 8) + 16))(v207, v200, v199);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          char v188 = 24;
LABEL_97:
          sub_1BFE27CFC(v188, (uint64_t)v60);
          goto LABEL_98;
        default:
          if (qword_1EB882D28 != -1) {
            swift_once();
          }
          uint64_t v184 = sub_1C151928C();
          uint64_t v185 = __swift_project_value_buffer(v184, (uint64_t)qword_1EB93CAB0);
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v184 - 8) + 16))(v66, v185, v184);
          type metadata accessor for FormatVersionRequirement.Value(0);
          swift_storeEnumTagMultiPayload();
          sub_1BFE27CFC(0, (uint64_t)v66);
          uint64_t v179 = (uint64_t)v66;
          goto LABEL_99;
      }
    default:
      uint64_t v76 = *(void *)(v70 + 16);
      uint64_t v77 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      if (v77 != -1) {
        swift_once();
      }
      uint64_t v78 = sub_1C151928C();
      uint64_t v79 = __swift_project_value_buffer(v78, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v63, v79, v78);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v80 = (uint64_t)v227;
      sub_1BFE27EA4(1, v76, (uint64_t)v63);
      uint64_t v81 = (uint64_t)v63;
LABEL_64:
      sub_1BFEFEB68(v81, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      break;
  }
  return sub_1BFEFEB68(v80, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFE27CFC(char a1, uint64_t a2)
{
  char v14 = a1;
  sub_1BFEFF7D8();
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v8;
  v13[2] = sub_1C08F0A4C;
  v13[3] = v10;
  swift_retain();
  char v11 = sub_1BFEFF114(a2, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE27E50();
    void v13[5] = 0;
    v13[6] = 0;
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE27E50()
{
  unint64_t result = qword_1EB8656B0;
  if (!qword_1EB8656B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8656B0);
  }
  return result;
}

uint64_t sub_1BFE27EA4(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F0A4C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE27E50();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE41AFC();
    sub_1C085F050(&qword_1EB85B598, (void (*)(uint64_t))sub_1BFE41AFC);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE28070(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F0A4C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE27E50();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFE283D8();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE28204(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F0A4C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE27E50();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFEFF3E8(0, &qword_1EB875B70, (uint64_t (*)(void))sub_1C00848A8, (uint64_t)&type metadata for FormatSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1BFE2842C();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE283D8()
{
  unint64_t result = qword_1EB85BCF8;
  if (!qword_1EB85BCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BCF8);
  }
  return result;
}

unint64_t sub_1BFE2842C()
{
  unint64_t result = qword_1EB85B998;
  if (!qword_1EB85B998)
  {
    sub_1BFEFF3E8(255, &qword_1EB875B70, (uint64_t (*)(void))sub_1C00848A8, (uint64_t)&type metadata for FormatSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B998);
  }
  return result;
}

uint64_t sub_1BFE284BC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F0A4C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE27E50();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFE28654();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE28654()
{
  unint64_t result = qword_1EB85B568;
  if (!qword_1EB85B568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B568);
  }
  return result;
}

uint64_t sub_1BFE286A8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F0A4C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE27E50();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1C08FC718(0, &qword_1EB888048, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSizeColumn);
    sub_1BFE28874();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE28874()
{
  unint64_t result = qword_1EB865D80;
  if (!qword_1EB865D80)
  {
    sub_1C08FC718(255, &qword_1EB888048, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSizeColumn);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865D80);
  }
  return result;
}

uint64_t sub_1BFE288F8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08F0A4C;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE27E50();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFE41D54();
    sub_1C085F050(&qword_1EB865D78, (void (*)(uint64_t))sub_1BFE41D54);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE28AC8(char a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  char v21 = a1;
  char v18 = a2;
  uint64_t v19 = a3;
  char v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  uint64_t v16[2] = sub_1C08F0A4C;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE27E50();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFE28C64();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE28C64()
{
  unint64_t result = qword_1EB85BE18;
  if (!qword_1EB85BE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BE18);
  }
  return result;
}

uint64_t sub_1BFE28CB8(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  char v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  uint64_t v16[2] = sub_1C08F0A4C;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE27E50();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFE28E50();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE28E50()
{
  unint64_t result = qword_1EB85BA58;
  if (!qword_1EB85BA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BA58);
  }
  return result;
}

uint64_t sub_1BFE28EA4(void *a1)
{
  return FormatOption.encode(to:)(a1);
}

uint64_t FormatOption.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v45 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v46 = (char *)&v43 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v47 = (char *)&v43 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v43 - v11;
  sub_1C089EC28();
  MEMORY[0x1F4188790](v13 - 8);
  long long v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  uint64_t v18 = type metadata accessor for FormatOption();
  sub_1C089EAFC();
  uint64_t v20 = v19;
  uint64_t v21 = sub_1C085F050(&qword_1EB8924D0, (void (*)(uint64_t))sub_1C089EAFC);
  uint64_t v44 = v18;
  sub_1BFEFBD78(v18, v22, v16, v18, v20, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v15, v21, (uint64_t)&off_1F1C39B68);
  uint64_t v23 = *v2;
  uint64_t v24 = v2[1];
  uint64_t v48 = v2;
  uint64_t v25 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v25 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1C151928C();
  uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1EB93CAB0);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
  v28(v12, v27, v26);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = v49;
  sub_1C06C5EC0(v23, v24, 0, 0, 0, (uint64_t)v12, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v12, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v29) {
    goto LABEL_8;
  }
  uint64_t v30 = (uint64_t)v47;
  uint64_t v49 = 0;
  uint64_t v31 = v48[2];
  v28(v47, v27, v26);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  uint64_t v32 = v49;
  sub_1C06C6054(v31, 1, 0, 0, v30, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v30, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (v32)
  {
LABEL_8:
    uint64_t v36 = (uint64_t)v15;
  }
  else
  {
    uint64_t v49 = v15;
    uint64_t v33 = v48[3];
    sub_1BFEF95A8(v33);
    if (qword_1EB887668 != -1) {
      swift_once();
    }
    uint64_t v34 = __swift_project_value_buffer(v26, (uint64_t)qword_1EB93CB10);
    uint64_t v35 = (uint64_t)v46;
    v28(v46, v34, v26);
    swift_storeEnumTagMultiPayload();
    sub_1C07267C4(v33, 2, 0, 0, v35, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v35, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF9514(v33);
    uint64_t v38 = (uint64_t)v48 + *(int *)(v44 + 28);
    if (qword_1EB8849D0 != -1) {
      swift_once();
    }
    uint64_t v39 = __swift_project_value_buffer(v26, (uint64_t)qword_1EB93C828);
    uint64_t v40 = (uint64_t)v45;
    v28(v45, v39, v26);
    swift_storeEnumTagMultiPayload();
    uint64_t v41 = v38;
    uint64_t v42 = (uint64_t)v49;
    sub_1C0726A18(v41, 3, 0, 0, v40, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v40, type metadata accessor for FormatVersionRequirement);
    uint64_t v36 = v42;
  }
  return sub_1BFEFEB68(v36, (uint64_t (*)(void))sub_1C089EC28);
}

unint64_t sub_1BFE2945C()
{
  unint64_t result = qword_1EB85B958;
  if (!qword_1EB85B958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B958);
  }
  return result;
}

uint64_t FeedItemLayoutAttributes.visualRankValue.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  switch((unint64_t)*v1 >> 60)
  {
    case 4uLL:
      sub_1BFE298EC();
      goto LABEL_7;
    case 5uLL:
      uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x318);
      goto LABEL_10;
    case 6uLL:
      uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x1C8);
      goto LABEL_10;
    case 7uLL:
      sub_1BFE29960();
LABEL_7:
      uint64_t v6 = *(void *)(swift_projectBox() + *(int *)(v5 + 64));
      goto LABEL_10;
    case 8uLL:
      uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x180);
      goto LABEL_10;
    case 0xAuLL:
      sub_1C11906EC(0, (unint64_t *)&qword_1EB86C4B0, (void (*)(uint64_t))type metadata accessor for PluginLayout.Context);
      uint64_t v6 = *(void *)(swift_projectBox() + *(int *)(v7 + 48) + 32);
LABEL_10:
      *a1 = v6;
      uint64_t v4 = (unsigned int *)MEMORY[0x1E4FABBE0];
      goto LABEL_11;
    case 0xBuLL:
      return FeedItemLayoutAttributes.visualRankValue.getter();
    default:
      uint64_t v4 = (unsigned int *)MEMORY[0x1E4FABBD8];
LABEL_11:
      uint64_t v8 = *v4;
      uint64_t v9 = sub_1C1519FCC();
      uint64_t v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);
      return v10(a1, v8, v9);
  }
}

uint64_t sub_1BFE29638(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

__n128 FeedItemLayoutAttributes.frame.getter()
{
  uint64_t v1 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (_OWORD *)((char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = *v0;
  __n128 result = 0uLL;
  switch((unint64_t)*v0 >> 60)
  {
    case 1uLL:
      return *(__n128 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x70);
    case 2uLL:
      return *(__n128 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x98);
    case 3uLL:
      sub_1BFE29A3C();
      uint64_t v7 = v6;
      uint64_t v8 = swift_projectBox();
      sub_1BFE29638(v8 + *(int *)(v7 + 48), (uint64_t)v3, type metadata accessor for FeedBannerAdViewLayout.Attributes);
      long long v9 = v3[1];
      v16[0] = *v3;
      v16[1] = v9;
      sub_1BFE299DC((uint64_t)v3, type metadata accessor for FeedBannerAdViewLayout.Attributes);
      return (__n128)v16[0];
    case 4uLL:
      sub_1BFE298EC();
      goto LABEL_13;
    case 5uLL:
      uint64_t v11 = (__n128 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 408);
      goto LABEL_14;
    case 6uLL:
      uint64_t v11 = (__n128 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 264);
      goto LABEL_14;
    case 7uLL:
      sub_1BFE29960();
      return *(__n128 *)(*(void *)(*(void *)(swift_projectBox() + *(int *)(v12 + 48))
                                   + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                       + 16);
    case 8uLL:
      return *(__n128 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x160);
    case 9uLL:
      uint64_t v13 = &qword_1EB8608B8;
      uint64_t v14 = (void (*)(uint64_t))type metadata accessor for EngagementBannerViewLayout.Context;
      goto LABEL_12;
    case 0xAuLL:
      uint64_t v13 = &qword_1EB86C4B0;
      uint64_t v14 = (void (*)(uint64_t))type metadata accessor for PluginLayout.Context;
LABEL_12:
      sub_1C11906EC(0, (unint64_t *)v13, v14);
LABEL_13:
      uint64_t v11 = (__n128 *)(swift_projectBox() + *(int *)(v10 + 48));
LABEL_14:
      __n128 result = *v11;
      break;
    case 0xBuLL:
      uint64_t v17 = *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      FeedItemLayoutAttributes.frame.getter((__n128)0);
      result.n128_u64[1] = v15;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for FeedBannerAdViewLayout.Attributes(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB872A38);
}

void sub_1BFE298EC()
{
  if (!qword_1EB8762A0)
  {
    type metadata accessor for HeadlineViewLayout.Context(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EB8762A0);
    }
  }
}

void sub_1BFE29960()
{
  if (!qword_1EB88C9F0)
  {
    type metadata accessor for FormatItemNodeLayoutContext();
    type metadata accessor for FormatItemNodeDataLayoutAttributes();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EB88C9F0);
    }
  }
}

uint64_t sub_1BFE299DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1BFE29A3C()
{
  if (!qword_1EB872B30)
  {
    type metadata accessor for FeedBannerAdViewLayout.Context(255);
    type metadata accessor for FeedBannerAdViewLayout.Attributes(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB872B30);
    }
  }
}

uint64_t type metadata accessor for FormatItemNodeLayoutContext()
{
  uint64_t result = qword_1EB878A48;
  if (!qword_1EB878A48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t destroy for HeadlineViewLayout.Context(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v6 = v4 + v5[10];
  uint64_t v7 = v6 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  uint64_t v8 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    uint64_t v9 = sub_1C151631C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);

    uint64_t v10 = v7 + *(int *)(v8 + 28);
    uint64_t v11 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = v4 + v5[11];
  uint64_t v13 = sub_1C151D2DC();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  if (*(void *)(v4 + v5[12] + 8) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v4 + v5[13]) >= 3uLL) {
    swift_unknownObjectRelease();
  }

  __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 24));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for FormatItemNodeLayoutContext(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v12 = type metadata accessor for FeedItem(0);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v13 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v13;
      uint64_t v14 = v11[3];
      void v10[2] = v11[2];
      v10[3] = v14;
      *((unsigned char *)v10 + 32) = *((unsigned char *)v11 + 32);
      unint64_t v15 = v11 + 5;
      unint64_t v16 = v11[6];
      swift_bridgeObjectRetain();
      if (v16 >= 0x11)
      {
        void v10[5] = *v15;
        v10[6] = v16;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 5) = *(_OWORD *)v15;
      }
      goto LABEL_201;
    case 1u:
      uint64_t v54 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v54;
      uint64_t v55 = v11[3];
      void v10[2] = v11[2];
      v10[3] = v55;
      *((unsigned char *)v10 + 32) = *((unsigned char *)v11 + 32);
      uint64_t v56 = v11[6];
      void v10[5] = v11[5];
      v10[6] = v56;
      uint64_t v57 = v11[8];
      v10[7] = v11[7];
      v10[8] = v57;
      uint64_t v58 = v11 + 9;
      unint64_t v59 = v11[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v59 >= 0x11)
      {
        v10[9] = *v58;
        v10[10] = v59;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 9) = *(_OWORD *)v58;
      }
      goto LABEL_201;
    case 2u:
      v423 = v4;
      uint64_t v17 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v17;
      uint64_t v18 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v19 = v18[5];
      uint64_t v20 = (char *)v10 + v19;
      uint64_t v21 = (char *)v11 + v19;
      uint64_t v22 = sub_1C151DBAC();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v20, v21, v22);
      *(void *)((char *)v10 + v18[6]) = *(void *)((char *)v11 + v18[6]);
      uint64_t v24 = v18[7];
      uint64_t v25 = (char *)v10 + v24;
      uint64_t v26 = (char *)v11 + v24;
      *(void *)uint64_t v25 = *(void *)v26;
      v25[8] = v26[8];
      uint64_t v27 = v18[8];
      uint64_t v28 = (void *)((char *)v10 + v27);
      uint64_t v29 = (void *)((char *)v11 + v27);
      unint64_t v30 = v29[1];
      if (v30 >= 0x11)
      {
        *uint64_t v28 = *v29;
        v28[1] = v30;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
      }
      uint64_t v4 = v423;
      goto LABEL_201;
    case 3u:
      uint64_t v429 = v3;
      v424 = v4;
      uint64_t v60 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v60;
      void v10[2] = v11[2];
      *((unsigned char *)v10 + 24) = *((unsigned char *)v11 + 24);
      uint64_t v61 = v11[5];
      v10[4] = v11[4];
      void v10[5] = v61;
      v10[6] = v11[6];
      *((unsigned char *)v10 + 56) = *((unsigned char *)v11 + 56);
      v409 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v62 = v409[10];
      uint64_t v63 = (char *)v10 + v62;
      uint64_t v64 = (char *)v11 + v62;
      *uint64_t v63 = *((unsigned char *)v11 + v62);
      v63[1] = *((unsigned char *)v11 + v62 + 1);
      uint64_t v65 = type metadata accessor for FeedHeadline.State(0);
      uint64_t v66 = *(int *)(v65 + 24);
      __dst = &v63[v66];
      v406 = (int *)v65;
      uint64_t v67 = &v64[v66];
      uint64_t v68 = (int *)type metadata accessor for SharedItem();
      uint64_t v400 = *((void *)v68 - 1);
      uint64_t v69 = *(unsigned int (**)(char *, uint64_t, int *))(v400 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v69(v67, 1, v68))
      {
        uint64_t v70 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dst, v67, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        uint64_t v190 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 16))(__dst, v67, v190);
        __dst[v68[5]] = v67[v68[5]];
        uint64_t v191 = v68[6];
        uint64_t v192 = *(void **)&v67[v191];
        *(void *)&__dst[v191] = v192;
        uint64_t v193 = v68[7];
        v416 = &v67[v193];
        v422 = &__dst[v193];
        uint64_t v194 = sub_1C1515FDC();
        v399 = *(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 16);
        id v195 = v192;
        v399(v422, v416, v194);
        (*(void (**)(char *, void, uint64_t, int *))(v400 + 56))(__dst, 0, 1, v68);
      }
      uint64_t v4 = v424;
      uint64_t v3 = v429;
      v63[v406[7]] = v64[v406[7]];
      v63[v406[8]] = v64[v406[8]];
      v63[v406[9]] = v64[v406[9]];
      v63[v406[10]] = v64[v406[10]];
      uint64_t v196 = v409[11];
      uint64_t v197 = (char *)v10 + v196;
      uint64_t v198 = (char *)v11 + v196;
      uint64_t v199 = sub_1C151D2DC();
      uint64_t v200 = *(void *)(v199 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v200 + 48))(v198, 1, v199))
      {
        sub_1BFECA2D8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
        memcpy(v197, v198, *(void *)(*(void *)(v201 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v200 + 16))(v197, v198, v199);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v200 + 56))(v197, 0, 1, v199);
      }
      uint64_t v208 = v409[12];
      uint64_t v209 = (void *)((char *)v10 + v208);
      BOOL v210 = (void *)((char *)v11 + v208);
      unint64_t v211 = v210[1];
      if (v211 >= 0x11)
      {
        *uint64_t v209 = *v210;
        v209[1] = v211;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v209 = *(_OWORD *)v210;
      }
      uint64_t v212 = v409[13];
      unint64_t v213 = *(void *)((char *)v11 + v212);
      if (v213 >= 2)
      {
        if (v213 == 2)
        {
          *(void *)((char *)v10 + v212) = 2;
        }
        else
        {
          *(void *)((char *)v10 + v212) = v213;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(void *)((char *)v10 + v212) = v213;
      }
      uint64_t v251 = v409[14];
      uint64_t v252 = *(void **)((char *)v11 + v251);
      *(void *)((char *)v10 + v251) = v252;
      id v253 = v252;
      goto LABEL_201;
    case 4u:
      uint64_t v31 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v31;
      *((unsigned char *)v10 + 16) = *((unsigned char *)v11 + 16);
      uint64_t v32 = v11 + 3;
      unint64_t v33 = v11[4];
      if (v33 >= 0x11)
      {
        v10[3] = *v32;
        v10[4] = v33;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 3) = *(_OWORD *)v32;
      }
      uint64_t v128 = v11[6];
      void v10[5] = v11[5];
      v10[6] = v128;
      uint64_t v129 = type metadata accessor for FeedWebEmbed();
      uint64_t v130 = *(int *)(v129 + 32);
      v413 = (char *)v11 + v130;
      v419 = (char *)v10 + v130;
      uint64_t v131 = sub_1C1515FDC();
      uint64_t v132 = *(void *)(v131 - 8);
      uint64_t v133 = *(void (**)(char *, char *, uint64_t))(v132 + 16);
      uint64_t v134 = v131;
      swift_bridgeObjectRetain();
      v133(v419, v413, v134);
      uint64_t v135 = *(int *)(v129 + 36);
      v414 = (char *)v10 + v135;
      v420 = (int *)v129;
      uint64_t v136 = (char *)v11 + v135;
      __dsta = v133;
      v425 = v4;
      uint64_t v411 = v134;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48))((char *)v11 + v135, 1, v134))
      {
        sub_1BFECA2D8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v414, v136, *(void *)(*(void *)(v137 - 8) + 64));
      }
      else
      {
        v133(v414, v136, v134);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v414, 0, 1, v134);
      }
      *(void *)((char *)v10 + v420[10]) = *(void *)((char *)v11 + v420[10]);
      *(void *)((char *)v10 + v420[11]) = *(void *)((char *)v11 + v420[11]);
      uint64_t v168 = v420[12];
      uint64_t v169 = (void *)((char *)v10 + v168);
      v415 = (void *)((char *)v11 + v168);
      uint64_t v170 = type metadata accessor for FeedHeadline(0);
      uint64_t v171 = *(void *)(v170 - 8);
      uint64_t v172 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v171 + 48);
      swift_retain();
      swift_retain();
      if (v172(v415, 1, v170))
      {
        sub_1BFECA2D8(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v169, v415, *(void *)(*(void *)(v173 - 8) + 64));
      }
      else
      {
        uint64_t v398 = v171;
        v401 = (int *)v170;
        uint64_t v179 = v415[1];
        *uint64_t v169 = *v415;
        v169[1] = v179;
        v169[2] = v415[2];
        *((unsigned char *)v169 + 24) = *((unsigned char *)v415 + 24);
        uint64_t v180 = v415[5];
        v169[4] = v415[4];
        v169[5] = v180;
        v169[6] = v415[6];
        *((unsigned char *)v169 + 56) = *((unsigned char *)v415 + 56);
        uint64_t v181 = *(int *)(v170 + 40);
        uint64_t v182 = (char *)v169 + v181;
        long long v183 = (char *)v415 + v181;
        *uint64_t v182 = *((unsigned char *)v415 + v181);
        v182[1] = *((unsigned char *)v415 + v181 + 1);
        v397 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v184 = v397[6];
        v396 = &v182[v184];
        uint64_t v185 = &v183[v184];
        uint64_t v186 = (int *)type metadata accessor for SharedItem();
        uint64_t v394 = *((void *)v186 - 1);
        uint64_t v187 = *(unsigned int (**)(char *, uint64_t, int *))(v394 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v187(v185, 1, v186))
        {
          uint64_t v188 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v396, v185, *(void *)(*(void *)(v188 - 8) + 64));
        }
        else
        {
          uint64_t v277 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v277 - 8) + 16))(v396, v185, v277);
          v396[v186[5]] = v185[v186[5]];
          uint64_t v278 = v186[6];
          char v279 = *(void **)&v185[v278];
          *(void *)&v396[v278] = v279;
          uint64_t v280 = v186[7];
          v395 = &v396[v280];
          v281 = &v185[v280];
          id v282 = v279;
          __dsta(v395, v281, v411);
          (*(void (**)(char *, void, uint64_t, int *))(v394 + 56))(v396, 0, 1, v186);
        }
        v182[v397[7]] = v183[v397[7]];
        v182[v397[8]] = v183[v397[8]];
        v182[v397[9]] = v183[v397[9]];
        v182[v397[10]] = v183[v397[10]];
        uint64_t v283 = v401[11];
        uint64_t v284 = (char *)v169 + v283;
        v285 = (char *)v415 + v283;
        uint64_t v286 = sub_1C151D2DC();
        uint64_t v287 = *(void *)(v286 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v287 + 48))(v285, 1, v286))
        {
          sub_1BFECA2D8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v284, v285, *(void *)(*(void *)(v288 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v287 + 16))(v284, v285, v286);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v287 + 56))(v284, 0, 1, v286);
        }
        uint64_t v289 = v401[12];
        v290 = (void *)((char *)v169 + v289);
        uint64_t v291 = (void *)((char *)v415 + v289);
        unint64_t v292 = v291[1];
        if (v292 >= 0x11)
        {
          void *v290 = *v291;
          v290[1] = v292;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v290 = *(_OWORD *)v291;
        }
        uint64_t v293 = v401[13];
        unint64_t v294 = *(void *)((char *)v415 + v293);
        if (v294 >= 2)
        {
          if (v294 == 2)
          {
            *(void *)((char *)v169 + v293) = 2;
          }
          else
          {
            *(void *)((char *)v169 + v293) = v294;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)v169 + v293) = v294;
        }
        uint64_t v317 = v401[14];
        char v318 = *(void **)((char *)v415 + v317);
        *(void *)((char *)v169 + v317) = v318;
        unsigned __int8 v319 = *(void (**)(void *, void, uint64_t, int *))(v398 + 56);
        id v320 = v318;
        v319(v169, 0, 1, v401);
      }
      uint64_t v321 = v420[13];
      v322 = (void *)((char *)v10 + v321);
      v323 = (void *)((char *)v11 + v321);
      uint64_t v324 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v325 = *(void *)(v324 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v325 + 48))(v323, 1, v324))
      {
        sub_1BFECA2D8(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v322, v323, *(void *)(*(void *)(v326 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v328 = *v323;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v329 = v323[1];
          void *v322 = v328;
          v322[1] = v329;
          uint64_t v330 = type metadata accessor for GenericDataVisualization();
          uint64_t v331 = *(int *)(v330 + 20);
          v417 = (char *)v322 + v331;
          v402 = (char *)v323 + v331;
          swift_bridgeObjectRetain();
          __dsta(v417, v402, v411);
          *(void *)((char *)v322 + *(int *)(v330 + 24)) = *(uint64_t *)((char *)v323 + *(int *)(v330 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          void *v322 = v328;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v325 + 56))(v322, 0, 1, v324);
      }
      *((unsigned char *)v10 + v420[14]) = *((unsigned char *)v11 + v420[14]);
      goto LABEL_169;
    case 5u:
      uint64_t v71 = v3;
      uint64_t v72 = (void *)*v11;
      uint64_t v73 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v73;
      void v10[2] = v11[2];
      *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
      v10[4] = v11[4];
      *((unsigned char *)v10 + 40) = *((unsigned char *)v11 + 40);
      unint64_t v74 = (void *)v11[7];
      v10[6] = v11[6];
      v10[7] = v74;
      *((unsigned char *)v10 + 64) = *((unsigned char *)v11 + 64);
      uint64_t v75 = v11[10];
      id v76 = v72;
      swift_bridgeObjectRetain();
      id v77 = v74;
      if (v75 == 1)
      {
        long long v78 = *(_OWORD *)(v11 + 11);
        *(_OWORD *)(v10 + 9) = *(_OWORD *)(v11 + 9);
        *(_OWORD *)(v10 + 11) = v78;
        *(_OWORD *)(v10 + 13) = *(_OWORD *)(v11 + 13);
      }
      else
      {
        v10[9] = v11[9];
        v10[10] = v75;
        uint64_t v139 = v11[12];
        v10[11] = v11[11];
        v10[12] = v139;
        uint64_t v141 = (void *)v11[13];
        uint64_t v140 = v11[14];
        v10[13] = v141;
        v10[14] = v140;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v142 = v141;
      }
      uint64_t v3 = v71;
      char v143 = v11 + 15;
      unint64_t v144 = v11[16];
      if (v144 >= 0x11)
      {
        v10[15] = *v143;
        v10[16] = v144;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 15) = *(_OWORD *)v143;
      }
      *((unsigned char *)v10 + 136) = *((unsigned char *)v11 + 136);
      goto LABEL_201;
    case 6u:
      v425 = v4;
      int v79 = *((unsigned __int8 *)v11 + 281);
      if (v79 == 2)
      {
        uint64_t v220 = v11[1];
        *uint64_t v10 = *v11;
        v10[1] = v220;
        void v10[2] = v11[2];
        *((unsigned char *)v10 + 24) = *((unsigned char *)v11 + 24);
        v10[4] = v11[4];
        *((unsigned char *)v10 + 40) = *((unsigned char *)v11 + 40);
        uint64_t v221 = v11[7];
        v10[6] = v11[6];
        v10[7] = v221;
        uint64_t v222 = v11[9];
        v10[8] = v11[8];
        v10[9] = v222;
        uint64_t v223 = v11[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v223 == 1)
        {
          long long v224 = *((_OWORD *)v11 + 8);
          *((_OWORD *)v10 + 7) = *((_OWORD *)v11 + 7);
          *((_OWORD *)v10 + 8) = v224;
          *((unsigned char *)v10 + 144) = *((unsigned char *)v11 + 144);
          long long v225 = *((_OWORD *)v11 + 6);
          *((_OWORD *)v10 + 5) = *((_OWORD *)v11 + 5);
          *((_OWORD *)v10 + 6) = v225;
        }
        else
        {
          v10[10] = v11[10];
          v10[11] = v223;
          uint64_t v261 = v11[15];
          swift_bridgeObjectRetain();
          if (v261)
          {
            uint64_t v262 = v11[16];
            v10[15] = v261;
            v10[16] = v262;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v261 - 8))((uint64_t)(v10 + 12), (uint64_t)(v11 + 12), v261);
            v10[17] = v11[17];
          }
          else
          {
            long long v354 = *((_OWORD *)v11 + 7);
            *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
            *((_OWORD *)v10 + 7) = v354;
            *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
          }
          *((unsigned char *)v10 + 144) = *((unsigned char *)v11 + 144);
        }
      }
      else
      {
        uint64_t v80 = v3;
        if (v79 == 1)
        {
          uint64_t v81 = (void *)*v11;
          uint64_t v82 = v11[1];
          *uint64_t v10 = *v11;
          v10[1] = v82;
          void v10[2] = v11[2];
          *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
          v10[4] = v11[4];
          *((unsigned char *)v10 + 40) = *((unsigned char *)v11 + 40);
          uint64_t v83 = (void *)v11[7];
          v10[6] = v11[6];
          v10[7] = v83;
          *((unsigned char *)v10 + 64) = *((unsigned char *)v11 + 64);
          uint64_t v84 = v11[10];
          id v85 = v81;
          swift_bridgeObjectRetain();
          id v86 = v83;
          if (v84 == 1)
          {
            long long v87 = *(_OWORD *)(v11 + 11);
            *(_OWORD *)(v10 + 9) = *(_OWORD *)(v11 + 9);
            *(_OWORD *)(v10 + 11) = v87;
            *(_OWORD *)(v10 + 13) = *(_OWORD *)(v11 + 13);
          }
          else
          {
            v10[9] = v11[9];
            v10[10] = v84;
            uint64_t v255 = v11[12];
            v10[11] = v11[11];
            v10[12] = v255;
            uint64_t v257 = (void *)v11[13];
            uint64_t v256 = v11[14];
            v10[13] = v257;
            v10[14] = v256;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v258 = v257;
          }
          v259 = v11 + 15;
          unint64_t v260 = v11[16];
          if (v260 >= 0x11)
          {
            v10[15] = *v259;
            v10[16] = v260;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v10 + 15) = *(_OWORD *)v259;
          }
          uint64_t v269 = (void *)v11[18];
          *((unsigned char *)v10 + 136) = *((unsigned char *)v11 + 136);
          if (v269)
          {
            uint64_t v270 = v11[19];
            uint64_t v271 = v11[20];
            v10[18] = v269;
            v10[19] = v270;
            v10[20] = v271;
            *((_WORD *)v10 + 84) = *((_WORD *)v11 + 84);
            v10[22] = v11[22];
            *((unsigned char *)v10 + 184) = *((unsigned char *)v11 + 184);
            uint64_t v272 = (void *)v11[25];
            v10[24] = v11[24];
            v10[25] = v272;
            *((unsigned char *)v10 + 208) = *((unsigned char *)v11 + 208);
            uint64_t v273 = v11[28];
            id v274 = v269;
            swift_bridgeObjectRetain();
            id v275 = v272;
            if (v273 == 1)
            {
              long long v276 = *(_OWORD *)(v11 + 29);
              *(_OWORD *)(v10 + 27) = *(_OWORD *)(v11 + 27);
              *(_OWORD *)(v10 + 29) = v276;
              *(_OWORD *)(v10 + 31) = *(_OWORD *)(v11 + 31);
            }
            else
            {
              v10[27] = v11[27];
              v10[28] = v273;
              uint64_t v299 = v11[30];
              v10[29] = v11[29];
              v10[30] = v299;
              uint64_t v301 = (void *)v11[31];
              uint64_t v300 = v11[32];
              v10[31] = v301;
              v10[32] = v300;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v302 = v301;
            }
            uint64_t v3 = v80;
            v303 = v11 + 33;
            unint64_t v304 = v11[34];
            if (v304 >= 0x11)
            {
              v10[33] = *v303;
              v10[34] = v304;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v10 + 33) = *(_OWORD *)v303;
            }
            *((unsigned char *)v10 + 280) = *((unsigned char *)v11 + 280);
          }
          else
          {
            long long v295 = *((_OWORD *)v11 + 16);
            *((_OWORD *)v10 + 15) = *((_OWORD *)v11 + 15);
            *((_OWORD *)v10 + 16) = v295;
            *(_OWORD *)((char *)v10 + 265) = *(_OWORD *)((char *)v11 + 265);
            long long v296 = *((_OWORD *)v11 + 12);
            *((_OWORD *)v10 + 11) = *((_OWORD *)v11 + 11);
            *((_OWORD *)v10 + 12) = v296;
            long long v297 = *((_OWORD *)v11 + 14);
            *((_OWORD *)v10 + 13) = *((_OWORD *)v11 + 13);
            *((_OWORD *)v10 + 14) = v297;
            long long v298 = *((_OWORD *)v11 + 10);
            *((_OWORD *)v10 + 9) = *((_OWORD *)v11 + 9);
            *((_OWORD *)v10 + 10) = v298;
            uint64_t v3 = v80;
          }
        }
        else
        {
          int64_t v226 = (void *)*v11;
          uint64_t v227 = v11[1];
          *uint64_t v10 = *v11;
          v10[1] = v227;
          void v10[2] = v11[2];
          *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
          v10[4] = v11[4];
          *((unsigned char *)v10 + 40) = *((unsigned char *)v11 + 40);
          int64_t v228 = (void *)v11[7];
          v10[6] = v11[6];
          v10[7] = v228;
          *((unsigned char *)v10 + 64) = *((unsigned char *)v11 + 64);
          uint64_t v229 = v11[10];
          id v230 = v226;
          swift_bridgeObjectRetain();
          id v231 = v228;
          if (v229 == 1)
          {
            long long v232 = *(_OWORD *)(v11 + 11);
            *(_OWORD *)(v10 + 9) = *(_OWORD *)(v11 + 9);
            *(_OWORD *)(v10 + 11) = v232;
            *(_OWORD *)(v10 + 13) = *(_OWORD *)(v11 + 13);
          }
          else
          {
            v10[9] = v11[9];
            v10[10] = v229;
            uint64_t v263 = v11[12];
            v10[11] = v11[11];
            v10[12] = v263;
            uint64_t v265 = (void *)v11[13];
            uint64_t v264 = v11[14];
            v10[13] = v265;
            v10[14] = v264;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v266 = v265;
          }
          uint64_t v3 = v80;
          uint64_t v267 = v11 + 15;
          unint64_t v268 = v11[16];
          if (v268 >= 0x11)
          {
            v10[15] = *v267;
            v10[16] = v268;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v10 + 15) = *(_OWORD *)v267;
          }
          *((unsigned char *)v10 + 136) = *((unsigned char *)v11 + 136);
        }
      }
      *((unsigned char *)v10 + 281) = v79;
LABEL_169:
      swift_storeEnumTagMultiPayload();
      uint64_t v4 = v425;
      goto LABEL_202;
    case 7u:
      uint64_t v88 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v88;
      void v10[2] = v11[2];
      *((unsigned char *)v10 + 24) = *((unsigned char *)v11 + 24);
      v10[4] = v11[4];
      *((unsigned char *)v10 + 40) = *((unsigned char *)v11 + 40);
      uint64_t v89 = v11[7];
      v10[6] = v11[6];
      v10[7] = v89;
      uint64_t v90 = v11[9];
      v10[8] = v11[8];
      v10[9] = v90;
      uint64_t v91 = v11[11];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v91 == 1)
      {
        long long v92 = *((_OWORD *)v11 + 8);
        *((_OWORD *)v10 + 7) = *((_OWORD *)v11 + 7);
        *((_OWORD *)v10 + 8) = v92;
        *((unsigned char *)v10 + 144) = *((unsigned char *)v11 + 144);
        long long v93 = *((_OWORD *)v11 + 6);
        *((_OWORD *)v10 + 5) = *((_OWORD *)v11 + 5);
        *((_OWORD *)v10 + 6) = v93;
      }
      else
      {
        v10[10] = v11[10];
        v10[11] = v91;
        uint64_t v145 = v11[15];
        swift_bridgeObjectRetain();
        if (v145)
        {
          uint64_t v146 = v11[16];
          v10[15] = v145;
          v10[16] = v146;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v145 - 8))((uint64_t)(v10 + 12), (uint64_t)(v11 + 12), v145);
          v10[17] = v11[17];
        }
        else
        {
          long long v254 = *((_OWORD *)v11 + 7);
          *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
          *((_OWORD *)v10 + 7) = v254;
          *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
        }
        *((unsigned char *)v10 + 144) = *((unsigned char *)v11 + 144);
      }
      goto LABEL_201;
    case 8u:
      v426 = v4;
      uint64_t v94 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v94;
      uint64_t v95 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      uint64_t v96 = (void *)((char *)v10 + v95);
      uint64_t v97 = (void *)((char *)v11 + v95);
      uint64_t v98 = v97[1];
      *uint64_t v96 = *v97;
      v96[1] = v98;
      uint64_t v99 = v97[3];
      v96[2] = v97[2];
      v96[3] = v99;
      uint64_t v100 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v101 = *(int *)(v100 + 24);
      v412 = (char *)v96 + v101;
      v418 = (int *)v100;
      uint64_t v102 = (char *)v97 + v101;
      uint64_t v103 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v410 = *(void *)(v103 - 8);
      uint64_t v104 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v410 + 48);
      uint64_t v105 = v103;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v104(v102, 1, v105))
      {
        sub_1BFECA2D8(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v412, v102, *(void *)(*(void *)(v106 - 8) + 64));
      }
      else
      {
        uint64_t v202 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v412, v102, v202);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v410 + 56))(v412, 0, 1, v105);
      }
      uint64_t v4 = v426;
      *(void *)((char *)v96 + v418[7]) = *(void *)((char *)v97 + v418[7]);
      swift_bridgeObjectRetain();
      goto LABEL_201;
    case 9u:
      uint64_t v34 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v34;
      uint64_t v35 = v11[3];
      void v10[2] = v11[2];
      v10[3] = v35;
      uint64_t v36 = v11[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v36)
      {
        uint64_t v37 = v11[8];
        v10[7] = v36;
        v10[8] = v37;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v36 - 8))((uint64_t)(v10 + 4), (uint64_t)(v11 + 4), v36);
      }
      else
      {
        long long v163 = *((_OWORD *)v11 + 3);
        *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
        *((_OWORD *)v10 + 3) = v163;
        v10[8] = v11[8];
      }
      uint64_t v164 = v10 + 9;
      uint64_t v165 = v11 + 9;
      uint64_t v166 = v11[12];
      if (v166)
      {
        uint64_t v167 = v11[13];
        v10[12] = v166;
        v10[13] = v167;
        (**(void (***)(_OWORD *, _OWORD *))(v166 - 8))(v164, v165);
      }
      else
      {
        long long v174 = *(_OWORD *)(v11 + 11);
        *uint64_t v164 = *v165;
        *(_OWORD *)(v10 + 11) = v174;
        v10[13] = v11[13];
      }
      uint64_t v175 = v10 + 14;
      uint64_t v176 = v11 + 14;
      uint64_t v177 = v11[17];
      if (v177)
      {
        uint64_t v178 = v11[18];
        v10[17] = v177;
        v10[18] = v178;
        (**(void (***)(_OWORD *, _OWORD *))(v177 - 8))(v175, v176);
      }
      else
      {
        long long v189 = *((_OWORD *)v11 + 8);
        *uint64_t v175 = *v176;
        *((_OWORD *)v10 + 8) = v189;
        v10[18] = v11[18];
      }
      goto LABEL_201;
    case 0xAu:
      uint64_t v430 = v3;
      uint64_t v107 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v107;
      uint64_t v108 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v109 = v108[5];
      uint64_t v110 = (char *)v10 + v109;
      char v111 = (char *)v11 + v109;
      uint64_t v112 = sub_1C151959C();
      uint64_t v113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16);
      swift_bridgeObjectRetain();
      v113(v110, v111, v112);
      *(void *)((char *)v10 + v108[6]) = *(void *)((char *)v11 + v108[6]);
      uint64_t v114 = v108[7];
      char v115 = (char *)v10 + v114;
      uint64_t v116 = (char *)v11 + v114;
      *(void *)char v115 = *(void *)v116;
      long long v115[8] = v116[8];
      uint64_t v117 = v108[8];
      char v118 = (void *)((char *)v10 + v117);
      uint64_t v119 = (void *)((char *)v11 + v117);
      unint64_t v120 = v119[1];
      if (v120 >= 0x11)
      {
        void *v118 = *v119;
        v118[1] = v120;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)char v118 = *(_OWORD *)v119;
      }
      uint64_t v3 = v430;
      goto LABEL_201;
    case 0xBu:
      *uint64_t v10 = *v11;
      swift_retain();
      goto LABEL_201;
    case 0xCu:
      uint64_t v38 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v38;
      uint64_t v39 = v11[3];
      void v10[2] = v11[2];
      v10[3] = v39;
      *((unsigned char *)v10 + 32) = *((unsigned char *)v11 + 32);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_201;
    case 0xDu:
      uint64_t v121 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v121;
      *((unsigned char *)v10 + 16) = *((unsigned char *)v11 + 16);
      uint64_t v122 = v11 + 3;
      unint64_t v123 = v11[4];
      uint64_t v431 = v3;
      if (v123 >= 0x11)
      {
        v10[3] = *v122;
        v10[4] = v123;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 3) = *(_OWORD *)v122;
      }
      uint64_t v147 = v11[6];
      void v10[5] = v11[5];
      v10[6] = v147;
      uint64_t v148 = (void *)v11[8];
      v10[7] = v11[7];
      v10[8] = v148;
      *((unsigned char *)v10 + 72) = *((unsigned char *)v11 + 72);
      v10[10] = v11[10];
      uint64_t v149 = v11[14];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      id v150 = v148;
      swift_bridgeObjectRetain();
      if (v149)
      {
        uint64_t v151 = v11[15];
        v10[14] = v149;
        v10[15] = v151;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v149 - 8))((uint64_t)(v10 + 11), (uint64_t)(v11 + 11), v149);
      }
      else
      {
        long long v203 = *(_OWORD *)(v11 + 13);
        *(_OWORD *)(v10 + 11) = *(_OWORD *)(v11 + 11);
        *(_OWORD *)(v10 + 13) = v203;
        v10[15] = v11[15];
      }
      uint64_t v3 = v431;
      uint64_t v204 = v10 + 16;
      uint64_t v205 = v11 + 16;
      uint64_t v206 = v11[19];
      if (v206)
      {
        uint64_t v207 = v11[20];
        v10[19] = v206;
        v10[20] = v207;
        (**(void (***)(_OWORD *, _OWORD *))(v206 - 8))(v204, v205);
      }
      else
      {
        long long v214 = *((_OWORD *)v11 + 9);
        *uint64_t v204 = *v205;
        *((_OWORD *)v10 + 9) = v214;
        v10[20] = v11[20];
      }
      uint64_t v215 = v10 + 21;
      uint64_t v216 = v11 + 21;
      uint64_t v217 = v11[24];
      if (v217)
      {
        uint64_t v218 = v11[25];
        v10[24] = v217;
        v10[25] = v218;
        (**(void (***)(_OWORD *, _OWORD *))(v217 - 8))(v215, v216);
      }
      else
      {
        long long v219 = *(_OWORD *)(v11 + 23);
        _OWORD *v215 = *v216;
        *(_OWORD *)(v10 + 23) = v219;
        v10[25] = v11[25];
      }
      goto LABEL_201;
    case 0xEu:
      uint64_t v40 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v40;
      *((unsigned char *)v10 + 16) = *((unsigned char *)v11 + 16);
      uint64_t v41 = v11 + 3;
      unint64_t v42 = v11[4];
      if (v42 >= 0x11)
      {
        v10[3] = *v41;
        v10[4] = v42;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 3) = *(_OWORD *)v41;
      }
      uint64_t v138 = v11[6];
      void v10[5] = v11[5];
      v10[6] = v138;
      v10[7] = v11[7];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_201;
    case 0xFu:
      uint64_t v124 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v124;
      *((unsigned char *)v10 + 16) = *((unsigned char *)v11 + 16);
      uint64_t v125 = v11 + 3;
      unint64_t v126 = v11[4];
      uint64_t v127 = v3;
      if (v126 >= 0x11)
      {
        v10[3] = *v125;
        v10[4] = v126;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 3) = *(_OWORD *)v125;
      }
      break;
    case 0x10u:
      uint64_t v43 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v43;
      uint64_t v44 = v11[3];
      void v10[2] = v11[2];
      v10[3] = v44;
      uint64_t v45 = v11[5];
      v10[4] = v11[4];
      void v10[5] = v45;
      *((_WORD *)v10 + 24) = *((_WORD *)v11 + 24);
      *(_OWORD *)(v10 + 7) = *(_OWORD *)(v11 + 7);
      uint64_t v46 = v11[10];
      v10[9] = v11[9];
      v10[10] = v46;
      uint64_t v47 = v11[12];
      v10[11] = v11[11];
      v10[12] = v47;
      v10[13] = v11[13];
      *((unsigned char *)v10 + 112) = *((unsigned char *)v11 + 112);
      uint64_t v48 = v11[16];
      v10[15] = v11[15];
      v10[16] = v48;
      *((unsigned char *)v10 + 136) = *((unsigned char *)v11 + 136);
      uint64_t v49 = v11[19];
      v10[18] = v11[18];
      v10[19] = v49;
      uint64_t v50 = v11[21];
      v10[20] = v11[20];
      v10[21] = v50;
      *((unsigned char *)v10 + 184) = *((unsigned char *)v11 + 184);
      v10[22] = v11[22];
      uint64_t v51 = v11[25];
      v10[24] = v11[24];
      v10[25] = v51;
      *((unsigned char *)v10 + 224) = *((unsigned char *)v11 + 224);
      uint64_t v52 = v11[27];
      v10[26] = v11[26];
      v10[27] = v52;
      v405 = v11 + 29;
      unint64_t v53 = v11[30];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v53 >= 0x11)
      {
        v10[29] = *v405;
        v10[30] = v53;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v10 + 29) = *(_OWORD *)v405;
      }
      goto LABEL_201;
    default:
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      goto LABEL_202;
  }
  uint64_t v152 = v11[6];
  void v10[5] = v11[5];
  v10[6] = v152;
  uint64_t v153 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  unint64_t v154 = (char *)v10 + v153;
  uint64_t v155 = (void *)((char *)v11 + v153);
  *(void *)((char *)v10 + v153) = *v155;
  uint64_t v156 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  v421 = &v154[v156];
  uint64_t v157 = (void *)((char *)v155 + v156);
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v3 = v127;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v236 = type metadata accessor for PuzzleStatisticValue(0);
      int v237 = swift_getEnumCaseMultiPayload();
      uint64_t v407 = v236;
      uint64_t v432 = v127;
      if (v237 == 5)
      {
        uint64_t v350 = type metadata accessor for PuzzleStreak();
        uint64_t v351 = *(void *)(v350 - 8);
        uint64_t v238 = v421;
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v351 + 48))(v157, 1, v350))
        {
          sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v421, v157, *(void *)(*(void *)(v352 - 8) + 64));
        }
        else
        {
          uint64_t v363 = sub_1C151555C();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v363 - 8) + 16))(v421, v157, v363);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v351 + 56))(v421, 0, 1, v350);
        }
        v353 = v4;
        uint64_t v236 = v407;
      }
      else
      {
        uint64_t v238 = v421;
        if (v237 != 4)
        {
          v353 = v4;
          memcpy(v421, v157, *(void *)(*(void *)(v236 - 8) + 64));
          goto LABEL_179;
        }
        uint64_t v239 = type metadata accessor for PuzzleStreak();
        uint64_t v240 = *(void *)(v239 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v240 + 48))(v157, 1, v239))
        {
          sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v421, v157, *(void *)(*(void *)(v241 - 8) + 64));
        }
        else
        {
          uint64_t v361 = sub_1C151555C();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v361 - 8) + 16))(v421, v157, v361);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v240 + 56))(v421, 0, 1, v239);
        }
        v353 = v4;
        uint64_t v236 = v407;
      }
      swift_storeEnumTagMultiPayload();
LABEL_179:
      uint64_t v364 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v365 = *(int *)(v364 + 20);
      uint64_t v366 = (char *)v238 + v365;
      uint64_t v367 = (char *)v157 + v365;
      int v368 = swift_getEnumCaseMultiPayload();
      if (v368 == 5)
      {
        uint64_t v372 = type metadata accessor for PuzzleStreak();
        uint64_t v373 = *(void *)(v372 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v373 + 48))(v367, 1, v372))
        {
          sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v366, v367, *(void *)(*(void *)(v374 - 8) + 64));
        }
        else
        {
          uint64_t v376 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v376 - 8) + 16))(v366, v367, v376);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v373 + 56))(v366, 0, 1, v372);
        }
        uint64_t v236 = v407;
      }
      else
      {
        if (v368 != 4)
        {
          memcpy(v366, v367, *(void *)(*(void *)(v236 - 8) + 64));
          uint64_t v4 = v353;
          goto LABEL_191;
        }
        uint64_t v369 = type metadata accessor for PuzzleStreak();
        uint64_t v370 = *(void *)(v369 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v370 + 48))(v367, 1, v369))
        {
          sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v366, v367, *(void *)(*(void *)(v371 - 8) + 64));
        }
        else
        {
          uint64_t v375 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v375 - 8) + 16))(v366, v367, v375);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v370 + 56))(v366, 0, 1, v369);
        }
        uint64_t v236 = v407;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v4 = v353;
LABEL_191:
      uint64_t v377 = *(int *)(v364 + 24);
      uint64_t v378 = &v421[v377];
      uint64_t v379 = (char *)v157 + v377;
      int v380 = swift_getEnumCaseMultiPayload();
      uint64_t v3 = v432;
      if (v380 == 5)
      {
        uint64_t v381 = type metadata accessor for PuzzleStreak();
        uint64_t v382 = *(void *)(v381 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v382 + 48))(v379, 1, v381)) {
          goto LABEL_194;
        }
      }
      else
      {
        if (v380 != 4)
        {
          memcpy(v378, v379, *(void *)(*(void *)(v236 - 8) + 64));
          goto LABEL_200;
        }
        uint64_t v381 = type metadata accessor for PuzzleStreak();
        uint64_t v382 = *(void *)(v381 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v382 + 48))(v379, 1, v381))
        {
LABEL_194:
          sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v378, v379, *(void *)(*(void *)(v383 - 8) + 64));
          goto LABEL_199;
        }
      }
      uint64_t v384 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v384 - 8) + 16))(v378, v379, v384);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v382 + 56))(v378, 0, 1, v381);
      goto LABEL_199;
    case 2u:
      v233 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v234 = *((void *)v233 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v234 + 48))(v157, 1, v233))
      {
        sub_1BFECA2D8(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        memcpy(v421, v157, *(void *)(*(void *)(v235 - 8) + 64));
      }
      else
      {
        uint64_t v408 = v234;
        v428 = v4;
        uint64_t v305 = sub_1C151631C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v305 - 8) + 16))(v421, v157, v305);
        uint64_t v306 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v307 = v306[5];
        char v308 = &v421[v307];
        uint64_t v309 = (void *)((char *)v157 + v307);
        uint64_t v310 = v309[1];
        *(void *)char v308 = *v309;
        *((void *)v308 + 1) = v310;
        uint64_t v311 = v306[6];
        v312 = &v421[v311];
        uint64_t v313 = (void *)((char *)v157 + v311);
        uint64_t v314 = v313[1];
        *(void *)v312 = *v313;
        *((void *)v312 + 1) = v314;
        unint64_t v315 = v313 + 2;
        unint64_t v316 = v313[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v434 = v3;
        if (v316 >> 60 == 15)
        {
          *((_OWORD *)v312 + 1) = *(_OWORD *)v315;
        }
        else
        {
          uint64_t v355 = *v315;
          sub_1BFE95820(*v315, v316);
          *((void *)v312 + 2) = v355;
          *((void *)v312 + 3) = v316;
        }
        *(void *)&v421[v306[7]] = *(void *)((char *)v157 + v306[7]);
        *(void *)&v421[v306[8]] = *(void *)((char *)v157 + v306[8]);
        *(void *)&v421[v233[5]] = *(void *)((char *)v157 + v233[5]);
        *(void *)&v421[v233[6]] = *(void *)((char *)v157 + v233[6]);
        uint64_t v356 = v233[7];
        uint64_t v357 = &v421[v356];
        v358 = (void *)((char *)v157 + v356);
        uint64_t v359 = v358[1];
        *(void *)uint64_t v357 = *v358;
        *((void *)v357 + 1) = v359;
        v360 = *(void (**)(char *, void, uint64_t, int *))(v408 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v360(v421, 0, 1, v233);
        uint64_t v4 = v428;
        uint64_t v3 = v434;
      }
      goto LABEL_200;
    case 3u:
      uint64_t v433 = v127;
      v427 = v4;
      uint64_t v242 = v157[1];
      *(void *)v421 = *v157;
      *((void *)v421 + 1) = v242;
      v421[16] = *((unsigned char *)v157 + 16);
      int64_t v243 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v244 = v243[6];
      int64_t v245 = &v421[v244];
      uint64_t v246 = (char *)v157 + v244;
      uint64_t v247 = type metadata accessor for PuzzleStreak();
      uint64_t v248 = *(void *)(v247 - 8);
      uint64_t v249 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v248 + 48);
      if (v249(v246, 1, v247))
      {
        sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v245, v246, *(void *)(*(void *)(v250 - 8) + 64));
      }
      else
      {
        uint64_t v332 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v332 - 8) + 16))(v245, v246, v332);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v248 + 56))(v245, 0, 1, v247);
      }
      uint64_t v333 = v243[7];
      v334 = &v421[v333];
      v335 = (char *)v157 + v333;
      if (v249((char *)v157 + v333, 1, v247))
      {
        sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v334, v335, *(void *)(*(void *)(v336 - 8) + 64));
      }
      else
      {
        uint64_t v337 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v337 - 8) + 16))(v334, v335, v337);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v248 + 56))(v334, 0, 1, v247);
      }
      uint64_t v4 = v427;
      uint64_t v3 = v433;
      uint64_t v338 = v243[8];
      v339 = &v421[v338];
      v340 = (_OWORD *)((char *)v157 + v338);
      long long v341 = v340[1];
      *(_OWORD *)v339 = *v340;
      *((_OWORD *)v339 + 1) = v341;
      *(_OWORD *)(v339 + 25) = *(_OWORD *)((char *)v340 + 25);
      uint64_t v342 = v243[9];
      v343 = &v421[v342];
      v344 = (_OWORD *)((char *)v157 + v342);
      *(_OWORD *)(v343 + 25) = *(_OWORD *)((char *)v344 + 25);
      long long v345 = v344[1];
      *(_OWORD *)v343 = *v344;
      *((_OWORD *)v343 + 1) = v345;
      uint64_t v346 = v243[10];
      v347 = &v421[v346];
      v348 = (_OWORD *)((char *)v157 + v346);
      long long v349 = v348[1];
      *(_OWORD *)v347 = *v348;
      *((_OWORD *)v347 + 1) = v349;
      *(_OWORD *)(v347 + 25) = *(_OWORD *)((char *)v348 + 25);
      goto LABEL_200;
    default:
      uint64_t v158 = type metadata accessor for PuzzleStatisticValue(0);
      int v159 = swift_getEnumCaseMultiPayload();
      if (v159 == 5)
      {
        uint64_t v160 = type metadata accessor for PuzzleStreak();
        uint64_t v161 = *(void *)(v160 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v161 + 48))(v157, 1, v160)) {
          goto LABEL_63;
        }
      }
      else
      {
        if (v159 != 4)
        {
          memcpy(v421, v157, *(void *)(*(void *)(v158 - 8) + 64));
          goto LABEL_200;
        }
        uint64_t v160 = type metadata accessor for PuzzleStreak();
        uint64_t v161 = *(void *)(v160 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v161 + 48))(v157, 1, v160))
        {
LABEL_63:
          sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v421, v157, *(void *)(*(void *)(v162 - 8) + 64));
          goto LABEL_199;
        }
      }
      uint64_t v362 = sub_1C151555C();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v362 - 8) + 16))(v421, v157, v362);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v161 + 56))(v421, 0, 1, v160);
LABEL_199:
      swift_storeEnumTagMultiPayload();
LABEL_200:
      swift_storeEnumTagMultiPayload();
LABEL_201:
      swift_storeEnumTagMultiPayload();
LABEL_202:
      uint64_t v385 = *(int *)(v3 + 32);
      uint64_t v386 = *(int *)(v3 + 36);
      uint64_t v387 = (_OWORD *)((char *)a1 + v385);
      v388 = (_OWORD *)((char *)v4 + v385);
      long long v389 = v388[1];
      *uint64_t v387 = *v388;
      v387[1] = v389;
      uint64_t v390 = (_OWORD *)((char *)a1 + v386);
      uint64_t v391 = (_OWORD *)((char *)v4 + v386);
      long long v392 = v391[1];
      *uint64_t v390 = *v391;
      v390[1] = v392;
      return a1;
  }
}

void destroy for FormatItemNodeLayoutContext(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(void *)(v4 + 48) < 0x11uLL) {
        return;
      }
      goto LABEL_81;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v4 + 80) < 0x11uLL) {
        return;
      }
      goto LABEL_81;
    case 2u:
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for FeedBannerAd();
      uint64_t v6 = v4 + *(int *)(v5 + 20);
      uint64_t v7 = sub_1C151DBAC();
      goto LABEL_55;
    case 3u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v8 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v9 = v4 + v8[10];
      uint64_t v10 = v9 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      uint64_t v11 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
      {
        uint64_t v12 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);

        uint64_t v13 = v10 + *(int *)(v11 + 28);
        uint64_t v14 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      }
      uint64_t v15 = v4 + v8[11];
      uint64_t v16 = sub_1C151D2DC();
      uint64_t v17 = *(void *)(v16 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      }
      if (*(void *)(v4 + v8[12] + 8) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v4 + v8[13]) >= 3uLL) {
        swift_unknownObjectRelease();
      }
      uint64_t v18 = *(void **)(v4 + v8[14]);

      return;
    case 4u:
      if (*(void *)(v4 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v19 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v20 = v4 + v19[8];
      uint64_t v21 = sub_1C1515FDC();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v23(v20, v21);
      uint64_t v24 = v4 + v19[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v24, 1, v21)) {
        v23(v24, v21);
      }
      swift_release();
      swift_release();
      uint64_t v25 = v4 + v19[12];
      uint64_t v26 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v26 - 1) + 48))(v25, 1, v26))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v27 = v26[10];
        uint64_t v28 = v25 + v27 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        uint64_t v29 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29))
        {
          uint64_t v30 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v28, v30);

          v23(v28 + *(int *)(v29 + 28), v21);
        }
        uint64_t v31 = v25 + v26[11];
        uint64_t v32 = sub_1C151D2DC();
        uint64_t v33 = *(void *)(v32 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32)) {
          (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
        }
        if (*(void *)(v25 + v26[12] + 8) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v25 + v26[13]) >= 3uLL) {
          swift_unknownObjectRelease();
        }
      }
      uint64_t v34 = v4 + v19[13];
      uint64_t v35 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35)) {
        return;
      }
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_57;
      }
      swift_bridgeObjectRelease();
      uint64_t v36 = type metadata accessor for GenericDataVisualization();
      v23(v34 + *(int *)(v36 + 20), v21);
      goto LABEL_81;
    case 5u:
      goto LABEL_38;
    case 6u:
      int v37 = *(unsigned __int8 *)(v4 + 281);
      if (v37 == 2) {
        goto LABEL_42;
      }
      if (v37 == 1)
      {

        swift_bridgeObjectRelease();
        if (*(void *)(v4 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v4 + 128) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        uint64_t v45 = *(void **)(v4 + 144);
        if (!v45) {
          return;
        }

        swift_bridgeObjectRelease();
        if (*(void *)(v4 + 224) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v4 + 272) < 0x11uLL) {
          return;
        }
LABEL_81:
        swift_bridgeObjectRelease();
        return;
      }
      if (*(unsigned char *)(v4 + 281)) {
        return;
      }
LABEL_38:

      swift_bridgeObjectRelease();
      if (*(void *)(v4 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v4 + 128) >= 0x11uLL) {
        goto LABEL_81;
      }
      return;
    case 7u:
LABEL_42:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v4 + 88) == 1) {
        return;
      }
      swift_bridgeObjectRelease();
      if (!*(void *)(v4 + 120)) {
        return;
      }
      uint64_t v38 = v4 + 96;
      goto LABEL_68;
    case 8u:
      swift_bridgeObjectRelease();
      uint64_t v39 = v4 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = v39 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      uint64_t v41 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v40, 1, v41))
      {
        uint64_t v42 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v40, v42);
      }
      goto LABEL_81;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v4 + 56)) {
        __swift_destroy_boxed_opaque_existential_1(v4 + 32);
      }
      if (*(void *)(v4 + 96)) {
        __swift_destroy_boxed_opaque_existential_1(v4 + 72);
      }
      if (!*(void *)(v4 + 136)) {
        return;
      }
      uint64_t v38 = v4 + 112;
      goto LABEL_68;
    case 0xAu:
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for FeedEngagementBanner();
      uint64_t v6 = v4 + *(int *)(v5 + 20);
      uint64_t v7 = sub_1C151959C();
LABEL_55:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      if (*(void *)(v4 + *(int *)(v5 + 32) + 8) < 0x11uLL) {
        return;
      }
      goto LABEL_81;
    case 0xBu:
LABEL_57:
      swift_release();
      return;
    case 0xCu:
      goto LABEL_73;
    case 0xDu:
      if (*(void *)(v4 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(void *)(v4 + 112)) {
        __swift_destroy_boxed_opaque_existential_1(v4 + 88);
      }
      if (*(void *)(v4 + 152)) {
        __swift_destroy_boxed_opaque_existential_1(v4 + 128);
      }
      if (!*(void *)(v4 + 192)) {
        return;
      }
      uint64_t v38 = v4 + 168;
LABEL_68:
      __swift_destroy_boxed_opaque_existential_1(v38);
      return;
    case 0xEu:
      if (*(void *)(v4 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
LABEL_73:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return;
    case 0xFu:
      if (*(void *)(v4 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v43 = v4 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      uint64_t v44 = v43 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_102;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            uint64_t v47 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v44, 1, v47))
            {
              uint64_t v48 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v44, v48);
            }
          }
          uint64_t v49 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v50 = v44 + *(int *)(v49 + 20);
          int v51 = swift_getEnumCaseMultiPayload();
          if (v51 == 5 || v51 == 4)
          {
            uint64_t v52 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v50, 1, v52))
            {
              uint64_t v53 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v50, v53);
            }
          }
          v44 += *(int *)(v49 + 24);
LABEL_102:
          int v54 = swift_getEnumCaseMultiPayload();
          if (v54 == 5 || v54 == 4)
          {
            uint64_t v55 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 48))(v44, 1, v55))goto LABEL_115; {
          }
            }
          return;
        case 2u:
          uint64_t v56 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v44, 1, v56)) {
            return;
          }
          uint64_t v57 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(v44, v57);
          uint64_t v58 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          uint64_t v59 = v44 + *(int *)(v58 + 24);
          swift_bridgeObjectRelease();
          unint64_t v60 = *(void *)(v59 + 24);
          if (v60 >> 60 != 15) {
            sub_1BFE95664(*(void *)(v59 + 16), v60);
          }
          swift_bridgeObjectRelease();
          goto LABEL_81;
        case 3u:
          uint64_t v61 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v62 = v44 + *(int *)(v61 + 24);
          uint64_t v63 = type metadata accessor for PuzzleStreak();
          uint64_t v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48);
          if (!v64(v62, 1, v63))
          {
            uint64_t v65 = sub_1C151555C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8))(v62, v65);
          }
          v44 += *(int *)(v61 + 28);
          if (v64(v44, 1, v63)) {
            return;
          }
LABEL_115:
          uint64_t v66 = sub_1C151555C();
          uint64_t v67 = *(void (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8);
          v67(v44, v66);
          return;
        default:
          return;
      }
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v4 + 240) >= 0x11uLL) {
        goto LABEL_81;
      }
      return;
    default:
      return;
  }
}

uint64_t sub_1BFE2D83C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatColorBinding.init(from:)(a1, a2);
}

uint64_t FormatColorBinding.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v25 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  uint64_t v9 = v2;
  if (v2)
  {
LABEL_19:
    sub_1C0038728(a1, (uint64_t)v9);
    swift_willThrow();

    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  uint64_t v10 = a1[3];
  uint64_t v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  uint64_t v11 = sub_1C1520EAC();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  uint64_t v12 = v29;
  uint64_t v13 = v8;
  if (v10)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        unint64_t v17 = *v16;
        if (*v16 >= 4) {
          break;
        }
        v16 += 2;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v19 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v9 = (void *)swift_allocError();
      *(void *)uint64_t v20 = v19;
      *(void *)(v20 + 8) = v17;
      *(void *)(v20 + 16) = &unk_1F1B84468;
      *(_OWORD *)(v20 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v19, v17);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
      a1 = v26;
      goto LABEL_19;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE2DD98();
  v28[0] = 0uLL;
  sub_1C15206EC();
  char v18 = v27;
  switch((char)v27)
  {
    case 1:
      v28[0] = xmmword_1C152C800;
      sub_1BFE2DE40();
      goto LABEL_13;
    case 2:
      v28[0] = xmmword_1C152C800;
      sub_1C065F9DC();
      goto LABEL_13;
    case 3:
      long long v27 = xmmword_1C152C800;
      sub_1BFE2DD44();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
      uint64_t v21 = *(void *)&v28[0];
      long long v22 = *(_OWORD *)((char *)v28 + 8);
      break;
    case 4:
      v28[0] = xmmword_1C152C800;
      sub_1C087BB84();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
      uint64_t v21 = v27;
      long long v22 = WORD4(v27);
      break;
    case 5:
      v28[0] = xmmword_1C152C800;
      sub_1C087BB30();
      goto LABEL_18;
    case 6:
      v28[0] = xmmword_1C152C800;
      sub_1C087BADC();
LABEL_18:
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
      uint64_t v21 = v27;
      long long v22 = BYTE8(v27);
      break;
    default:
      v28[0] = xmmword_1C152C800;
      sub_1BFE2DDEC();
LABEL_13:
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
      uint64_t v21 = v27;
      long long v22 = 0uLL;
      break;
  }
  uint64_t v23 = (uint64_t)v26;
  *(void *)uint64_t v12 = v21;
  *(_OWORD *)(v12 + 8) = v22;
  *(unsigned char *)(v12 + 24) = v18;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

unint64_t sub_1BFE2DD44()
{
  unint64_t result = qword_1EB876878;
  if (!qword_1EB876878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876878);
  }
  return result;
}

unint64_t sub_1BFE2DD98()
{
  unint64_t result = qword_1EB888528;
  if (!qword_1EB888528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888528);
  }
  return result;
}

unint64_t sub_1BFE2DDEC()
{
  unint64_t result = qword_1EB8770D0;
  if (!qword_1EB8770D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8770D0);
  }
  return result;
}

unint64_t sub_1BFE2DE40()
{
  unint64_t result = qword_1EB888100;
  if (!qword_1EB888100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888100);
  }
  return result;
}

uint64_t type metadata accessor for FormatTextNodeLayoutAttributes()
{
  return self;
}

uint64_t FormatTextNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, char a15, uint64_t a16, uint64_t *a17, uint64_t a18, uint64_t a19)
{
  uint64_t v21 = *a8;
  uint64_t v22 = *a14;
  uint64_t v23 = *a17;
  char v24 = *((unsigned char *)a17 + 8);
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  *(void *)(v19 + 32) = a3;
  *(void *)(v19 + 40) = a4;
  *(void *)(v19 + 48) = a5;
  *(void *)(v19 + 56) = a6;
  *(double *)(v19 + 64) = a9;
  *(double *)(v19 + 72) = a10;
  *(double *)(v19 + 80) = a11;
  *(double *)(v19 + 88) = a12;
  *(void *)(v19 + 96) = a7;
  *(void *)(v19 + 104) = v21;
  *(void *)(v19 + 112) = a13;
  *(void *)(v19 + 120) = v22;
  swift_beginAccess();
  *(unsigned char *)(v19 + 128) = a15;
  *(void *)(v19 + 136) = a16;
  *(void *)(v19 + 144) = v23;
  *(unsigned char *)(v19 + 152) = v24;
  *(void *)(v19 + 160) = a18;
  *(void *)(v19 + 168) = a19;
  if (a7)
  {
    sub_1BFE6FE30(0, (unint64_t *)&qword_1EB87A888, (uint64_t (*)(uint64_t))sub_1C0399F9C, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFF65D2C(a7 + 64, (uint64_t)v29);
    sub_1BFF65D2C((uint64_t)v29, (uint64_t)v30);
    if (sub_1C044587C((uint64_t)v30) == 1)
    {
      *(void *)(inited + 64) = 0;
      *(_OWORD *)(inited + 32) = 0u;
      *(_OWORD *)(inited + 48) = 0u;
    }
    else
    {
      *(void *)(inited + 56) = &type metadata for FormatFill;
      *(void *)(inited + 64) = &protocol witness table for FormatFill;
      uint64_t v27 = swift_allocObject();
      *(void *)(inited + 32) = v27;
      sub_1BFF6530C((uint64_t)v30, v27 + 16);
    }
    swift_retain_n();
    swift_retain();
    sub_1C10FEB90((uint64_t)v29);
    uint64_t v26 = sub_1BFE70334(inited);
    swift_setDeallocating();
    sub_1C0399F9C(0);
    swift_arrayDestroy();
    swift_release();
    swift_release_n();
  }
  else
  {
    uint64_t v26 = MEMORY[0x1E4FBC870];
  }
  *(void *)(v19 + 176) = v26;
  return v19;
}

uint64_t type metadata accessor for FormatTextLink()
{
  return self;
}

uint64_t sub_1BFE2E0B8(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v31 = MEMORY[0x1E4FBC860];
  id v11 = objc_msgSend(a1, sel_length);
  uint64_t v12 = *MEMORY[0x1E4FB06B8];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &v31;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1BFDA5EF8;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = sub_1BFDA5EC8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFDA5E24;
  aBlock[3] = &block_descriptor_23;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_enumerateAttribute_inRange_options_usingBlock_, v12, 0, v11, 0, v15);
  _Block_release(v15);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v11)
  {
    __break(1u);
  }
  else
  {
    if (*(void *)(v31 + 16))
    {
      id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0840]), sel_init);
      id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0880]), sel_initWithSize_, 0.0, 0.0);
      id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB08B8]), sel_initWithAttributedString_, a1);
      objc_msgSend(v17, sel_addTextContainer_, v18);
      objc_msgSend(v19, sel_addLayoutManager_, v17);
      objc_msgSend(v18, sel_setLineFragmentPadding_, 0.0);
      objc_msgSend(v18, sel_setLineBreakMode_, 4);
      objc_msgSend(v18, sel_setMaximumNumberOfLines_, 0);
      objc_msgSend(v18, sel_setSize_, a4, a5);
      objc_msgSend(v17, sel_usedRectForTextContainer_, v18);
      CGRect v33 = CGRectIntegral(v32);
      double x = v33.origin.x;
      double y = v33.origin.y;
      double width = v33.size.width;
      double height = v33.size.height;
      v33.origin.double x = a2;
      v33.origin.double y = a3;
      v33.size.double width = a4;
      v33.size.double height = a5;
      CGFloat v24 = (CGRectGetWidth(v33) - width) * 0.5 - x;
      v34.origin.double x = a2;
      v34.origin.double y = a3;
      v34.size.double width = a4;
      v34.size.double height = a5;
      CGFloat v25 = CGRectGetHeight(v34);
      *(CGFloat *)(v5 + 24) = v24;
      *(CGFloat *)(v5 + 32) = (v25 - height) * 0.5 - y;
      MEMORY[0x1F4188790](v26);
      void v29[2] = v17;
      v29[3] = v18;
      uint64_t v27 = swift_bridgeObjectRetain();
      uint64_t v28 = sub_1C03EC8D0(v27, (void (*)(void, void, char *))sub_1C03EC8C8, (uint64_t)v29);

      swift_bridgeObjectRelease();
      *(void *)(v5 + 16) = v28;
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_deallocPartialClassInstance();
      swift_release();
      return 0;
    }
    return v5;
  }
  return result;
}

uint64_t sub_1BFE2E4C0(uint64_t a1)
{
  return sub_1C10526C4(a1, MEMORY[0x1E4FAB888], (void (*)(void))sub_1C1077D10, (uint64_t (*)(uint64_t, uint64_t))sub_1C105370C);
}

unint64_t sub_1BFE2E500(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v23 = a4;
  v21[1] = a1;
  uint64_t v6 = a3(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v21 - v9;
  uint64_t v22 = v4;
  uint64_t v11 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v12 = a2 & ~v11;
  v21[0] = v4 + 64;
  if ((*(void *)(v4 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = ~v11;
    uint64_t v16 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    do
    {
      uint64_t v18 = v14(v10, *(void *)(v22 + 48) + v17 * v12, v6, v8);
      v23(v18);
      char v19 = sub_1C151E5CC();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v10, v6);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
    }
    while (((*(void *)(v21[0] + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  return v12;
}

unint64_t sub_1BFE2E69C@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  return sub_1BFE2E6C0(a1, a2);
}

unint64_t sub_1BFE2E6C0@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C151E24C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  *uint64_t v9 = sub_1C151F56C();
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
  char v10 = sub_1C151E26C();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v6 = type metadata accessor for DisposablePuzzleHistoryObserver();
  uint64_t v9 = (void *)swift_allocObject();
  v9[3] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v9[3] = a1;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  uint64_t v11 = (void *)(v3 + OBJC_IVAR____TtC8NewsFeed20PuzzleHistoryService_puzzleHistoryObservers);
  swift_beginAccess();
  uint64_t v12 = swift_retain();
  MEMORY[0x1C18C66D0](v12);
  if (*(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_5:
  }
    sub_1C151EC8C();
  sub_1C151ECEC();
  sub_1C151EBEC();
  swift_endAccess();
  a2[3] = v6;
  unint64_t result = sub_1C11D479C();
  a2[4] = result;
  *a2 = v9;
  return result;
}

uint64_t type metadata accessor for DisposablePuzzleHistoryObserver()
{
  return self;
}

uint64_t sub_1BFE2E8FC@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatTextContent.init(from:)(a1, a2);
}

uint64_t FormatTextContent.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v3 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  *(void *)&long long v55 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v54 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  char v10 = (void *)v56;
  sub_1C1520EBC();
  uint64_t v11 = v10;
  if (v10)
  {
LABEL_20:
    sub_1C0038728(a1, (uint64_t)v11);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  *(void *)&long long v54 = v5;
  *(void *)&long long v56 = v3;
  uint64_t v12 = v67;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_1C1520EAC();
  char v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = v9;
  if (v14)
  {
    uint64_t v16 = sub_1C152070C();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = (unint64_t *)(v16 + 40);
      while (1)
      {
        unint64_t v19 = *v18;
        if (*v18 >= 4) {
          break;
        }
        v18 += 2;
        if (!--v17) {
          goto LABEL_7;
        }
      }
      uint64_t v26 = *(v18 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v11 = (void *)swift_allocError();
      *(void *)uint64_t v27 = v26;
      *(void *)(v27 + 8) = v19;
      *(void *)(v27 + 16) = &unk_1F1B88740;
      *(_OWORD *)(v27 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v26, v19);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v15, v7);
      goto LABEL_20;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE2F738();
  long long v57 = 0uLL;
  sub_1C15206EC();
  uint64_t v20 = v55;
  uint64_t v21 = v54;
  switch((char)v66)
  {
    case 1:
      sub_1C08FC718(0, (unint64_t *)&qword_1EB873EF8, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
      long long v66 = xmmword_1C152C800;
      sub_1C08662B4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
      long long v28 = v57;
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = v28;
      unint64_t v24 = v29 | 0x1000000000000000;
      break;
    case 2:
      sub_1C08FC718(0, (unint64_t *)&qword_1EB873EF8, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
      long long v66 = xmmword_1C152C800;
      sub_1C08662B4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
      long long v30 = v57;
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = v30;
      unint64_t v24 = v31 | 0x2000000000000000;
      break;
    case 3:
      long long v66 = xmmword_1C152C800;
      sub_1BFE2FB18();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
      long long v32 = v57;
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = v32;
      unint64_t v24 = v33 | 0x3000000000000000;
      break;
    case 4:
      long long v66 = xmmword_1C152C800;
      sub_1BFE2FD5C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
      uint64_t v34 = v57;
      char v35 = BYTE8(v57);
      long long v36 = v58;
      char v37 = v59;
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = v34;
      *(unsigned char *)(v38 + 24) = v35;
      *(_OWORD *)(v38 + 32) = v36;
      unint64_t v24 = v38 | 0x4000000000000000;
      *(unsigned char *)(v38 + 48) = v37;
      break;
    case 5:
      sub_1BFEFF3E8(0, &qword_1EB875B30, (uint64_t (*)(void))sub_1C007C6F8, (uint64_t)&type metadata for FormatTextContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
      long long v66 = xmmword_1C152C800;
      sub_1BFE2FCCC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
      long long v39 = v57;
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = v39;
      unint64_t v41 = 0x5000000000000000;
      goto LABEL_22;
    case 6:
      long long v66 = xmmword_1C152C800;
      sub_1C01EF23C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
      uint64_t v48 = swift_allocObject();
      long long v49 = v64;
      *(_OWORD *)(v48 + 112) = v63;
      *(_OWORD *)(v48 + 128) = v49;
      *(unsigned char *)(v48 + 144) = v65;
      long long v50 = v60;
      *(_OWORD *)(v48 + 48) = v59;
      *(_OWORD *)(v48 + 64) = v50;
      long long v51 = v62;
      *(_OWORD *)(v48 + 80) = v61;
      *(_OWORD *)(v48 + 96) = v51;
      long long v52 = v58;
      unint64_t v24 = v48 | 0x6000000000000000;
      *(_OWORD *)(v48 + 16) = v57;
      *(_OWORD *)(v48 + 32) = v52;
      break;
    case 7:
      long long v57 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EA19E5E0, (void (*)(uint64_t))type metadata accessor for FormatTextNodeLink);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
      uint64_t v42 = swift_allocBox();
      sub_1BFE7FB8C(v21, v43, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
      unint64_t v24 = v42 | 0x7000000000000000;
      break;
    case 8:
      long long v66 = xmmword_1C152C800;
      sub_1C08BF1D0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
      long long v56 = v57;
      long long v55 = v58;
      long long v54 = v59;
      uint64_t v44 = v60;
      uint64_t v45 = swift_allocObject();
      long long v46 = v55;
      *(_OWORD *)(v45 + 16) = v56;
      *(_OWORD *)(v45 + 32) = v46;
      *(_OWORD *)(v45 + 48) = v54;
      *(void *)(v45 + 64) = v44;
      unint64_t v24 = v45 | 0x8000000000000000;
      break;
    case 9:
      sub_1BFEFF3E8(0, &qword_1EB8612E0, (uint64_t (*)(void))sub_1C007C6F8, (uint64_t)&type metadata for FormatTextContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
      long long v66 = xmmword_1C152C800;
      sub_1C08BF128();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
      long long v53 = v57;
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = v53;
      unint64_t v41 = 0x9000000000000000;
LABEL_22:
      unint64_t v24 = v40 | v41;
      break;
    default:
      long long v66 = xmmword_1C152C800;
      sub_1BFE2F78C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v7);
      long long v56 = v57;
      long long v55 = v58;
      long long v22 = v59;
      __int16 v23 = v60;
      unint64_t v24 = swift_allocObject();
      long long v25 = v55;
      *(_OWORD *)(v24 + 16) = v56;
      *(_OWORD *)(v24 + 32) = v25;
      *(_OWORD *)(v24 + 48) = v22;
      *(_WORD *)(v24 + 64) = v23;
      break;
  }
  *uint64_t v12 = v24;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BFE2F328(unint64_t *a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (void *)((char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v9 = *(_OWORD *)(a2 + 80);
  v26[4] = *(_OWORD *)(a2 + 64);
  v26[5] = v9;
  uint64_t v27 = *(void *)(a2 + 96);
  long long v10 = *(_OWORD *)(a2 + 16);
  v26[0] = *(_OWORD *)a2;
  v26[1] = v10;
  long long v11 = *(_OWORD *)(a2 + 48);
  uint64_t v12 = *v2;
  unint64_t v13 = (unint64_t)*v2 >> 60;
  v26[2] = *(_OWORD *)(a2 + 32);
  v26[3] = v11;
  switch(v13)
  {
    case 3uLL:
      uint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v15 = *(void *)(v14 + 24);
      uint64_t v28 = *(void *)(v14 + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFE2F328(a1, a2);
      if (!v3) {
        sub_1BFE2F7E0((uint64_t)a1, v26, v15);
      }
      goto LABEL_13;
    case 4uLL:
      uint64_t v28 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1BFE2FB6C(a1, a2);
      break;
    case 5uLL:
      uint64_t v16 = v12 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v18 = *(void *)(v16 + 16);
      uint64_t v17 = *(void *)(v16 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFE2F998((uint64_t)a1, v26, v18);
      if (!v3)
      {
        uint64_t v28 = v17;
        sub_1BFE2F328(a1, v26);
      }
      swift_release();
      swift_bridgeObjectRelease();
      break;
    case 7uLL:
      uint64_t v19 = swift_projectBox();
      sub_1BFF83CC4(v19, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
      uint64_t v28 = *v8;
      sub_1BFE2F328(a1, a2);
      sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
      break;
    case 8uLL:
      uint64_t v28 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1BFFDD9B8((uint64_t)a1, (uint64_t *)a2);
      break;
    case 9uLL:
      uint64_t v20 = v12 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v21 = *(void *)(v20 + 24);
      uint64_t v28 = *(void *)(v20 + 16);
      uint64_t v22 = v28 & 0xFFFFFFFFFFFFFFFLL;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFE2F328(a1, a2);
      if (v3 || (uint64_t v23 = *(void *)(v21 + 16)) == 0)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        v25[1] = v22;
        swift_bridgeObjectRetain_n();
        unint64_t v24 = (uint64_t *)(v21 + 48);
        do
        {
          uint64_t v28 = *v24;
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BFE2F328(a1, a2);
          swift_bridgeObjectRelease();
          swift_release_n();
          v24 += 3;
          --v23;
        }
        while (v23);
        swift_release();
        swift_bridgeObjectRelease_n();
      }
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for FormatTextNodeLink()
{
  uint64_t result = qword_1EB87AFE0;
  if (!qword_1EB87AFE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1BFE2F6D8()
{
  if (!qword_1EB873EF8)
  {
    unint64_t v0 = type metadata accessor for FormatValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB873EF8);
    }
  }
}

unint64_t sub_1BFE2F738()
{
  unint64_t result = qword_1EB888390;
  if (!qword_1EB888390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888390);
  }
  return result;
}

unint64_t sub_1BFE2F78C()
{
  unint64_t result = qword_1EB877298;
  if (!qword_1EB877298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB877298);
  }
  return result;
}

uint64_t sub_1BFE2F7E0(uint64_t result, long long *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v16 = (unint64_t *)result;
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = a3 + 64;
    do
    {
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v24 = *(void *)(v8 - 16);
      long long v10 = a2[5];
      long long v21 = a2[4];
      long long v22 = v10;
      uint64_t v23 = *((void *)a2 + 12);
      long long v11 = a2[1];
      long long v17 = *a2;
      long long v18 = v11;
      long long v12 = a2[3];
      long long v19 = a2[2];
      long long v20 = v12;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BFE2F328(v16, &v17);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
      swift_release();
      if (v9)
      {
        long long v13 = a2[5];
        long long v21 = a2[4];
        long long v22 = v13;
        uint64_t v23 = *((void *)a2 + 12);
        long long v14 = a2[1];
        long long v17 = *a2;
        long long v18 = v14;
        long long v15 = a2[3];
        long long v19 = a2[2];
        long long v20 = v15;
        sub_1BFF7855C(v16, (uint64_t)&v17);
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v8 += 40;
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BFE2F998(uint64_t a1, long long *a2, uint64_t a3)
{
  return sub_1BFE2F9C4(a1, a2, a3, (void (*)(unint64_t *, long long *))sub_1BFE2F328);
}

uint64_t sub_1BFE2F9C4(uint64_t result, long long *a2, uint64_t a3, void (*a4)(unint64_t *, long long *))
{
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    uint64_t v9 = (unint64_t *)result;
    swift_bridgeObjectRetain();
    long long v10 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v11 = *v10;
      uint64_t v26 = *(v10 - 1);
      long long v12 = a2[5];
      long long v23 = a2[4];
      long long v24 = v12;
      uint64_t v25 = *((void *)a2 + 12);
      long long v13 = a2[1];
      long long v19 = *a2;
      long long v20 = v13;
      long long v14 = a2[3];
      long long v21 = a2[2];
      long long v22 = v14;
      swift_retain();
      swift_retain();
      sub_1BFF0C6A0(v9, (uint64_t *)&v19);
      if (v5) {
        break;
      }
      uint64_t v26 = v11;
      long long v15 = a2[5];
      long long v23 = a2[4];
      long long v24 = v15;
      uint64_t v25 = *((void *)a2 + 12);
      long long v16 = a2[1];
      long long v19 = *a2;
      long long v20 = v16;
      long long v17 = a2[3];
      long long v21 = a2[2];
      long long v22 = v17;
      a4(v9, &v19);
      uint64_t v5 = 0;
      v10 += 2;
      swift_release();
      swift_release();
      if (!--v6) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_1BFE2FB18()
{
  unint64_t result = qword_1EB871818;
  if (!qword_1EB871818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB871818);
  }
  return result;
}

void sub_1BFE2FB6C(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = v3;
  long long v7 = *(_OWORD *)(a2 + 80);
  void v13[4] = *(_OWORD *)(a2 + 64);
  void v13[5] = v7;
  uint64_t v14 = *(void *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  uint64_t v10 = *v2;
  unint64_t v11 = (unint64_t)*v2 >> 62;
  v13[2] = *(_OWORD *)(a2 + 32);
  v13[3] = v9;
  if (v11)
  {
    if (v11 != 1)
    {
      uint64_t v12 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFE2FB6C(a1, a2);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1C1139A74(a1, (uint64_t)v13, v12);
        swift_release();
        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    sub_1BFF5E044(a1, a2);
  }
}

unint64_t sub_1BFE2FCCC()
{
  unint64_t result = qword_1EB875B28;
  if (!qword_1EB875B28)
  {
    sub_1BFEFF3E8(255, &qword_1EB875B30, (uint64_t (*)(void))sub_1C007C6F8, (uint64_t)&type metadata for FormatTextContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875B28);
  }
  return result;
}

unint64_t sub_1BFE2FD5C()
{
  unint64_t result = qword_1EB878368[0];
  if (!qword_1EB878368[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB878368);
  }
  return result;
}

uint64_t type metadata accessor for FormatValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFE2FDC8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFE2FDF4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFE2FDF4(void *a1)
{
  uint64_t v2 = v1;
  sub_1C08EDAF8();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08BC65C();
  sub_1C085F050(&qword_1EB891C30, (void (*)(uint64_t))sub_1C08BC65C);
  sub_1C1520EBC();
  if (v1)
  {
LABEL_10:
    sub_1C0038728(a1, v2);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v2;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = sub_1C1520EAC();
  char v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  if (v10)
  {
    uint64_t v11 = sub_1C152070C();
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      long long v13 = (unsigned char *)(v11 + 48);
      while (*v13 != 1)
      {
        v13 += 24;
        if (!--v12) {
          goto LABEL_7;
        }
      }
      uint64_t v17 = *((void *)v13 - 2);
      uint64_t v18 = *((void *)v13 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      uint64_t v19 = sub_1C07F7FFC();
      sub_1C02570B4();
      uint64_t v2 = swift_allocError();
      *(void *)uint64_t v20 = v17;
      *(void *)(v20 + 8) = v18;
      *(void *)(v20 + 16) = v19;
      *(_OWORD *)(v20 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v17, v18, 1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = sub_1C07F0DDC((uint64_t)v8, 0, 0, 0, (void (*)(void, __n128))sub_1C08EDAF8);
  uint64_t v16 = v15;
  sub_1BFE309D0(0, &qword_1EB88FFF0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSwitchNodeCase, MEMORY[0x1E4FBB320]);
  long long v36 = xmmword_1C153AB20;
  char v37 = 0;
  sub_1BFE30410();
  sub_1C15206EC();
  uint64_t v21 = v34;
  type metadata accessor for FormatSwitchNodeDefault();
  long long v36 = xmmword_1C1557FA0;
  char v37 = 0;
  sub_1C085F050(&qword_1EB88AEE8, (void (*)(uint64_t))type metadata accessor for FormatSwitchNodeDefault);
  sub_1C152065C();
  uint64_t v38 = v34;
  long long v32 = xmmword_1C1557FB0;
  long long v36 = xmmword_1C1557FB0;
  char v37 = 0;
  if (sub_1C152071C())
  {
    long long v34 = v32;
    char v35 = 0;
    sub_1C15206EC();
    int v23 = v33;
  }
  else
  {
    int v23 = 0;
  }
  LODWORD(v32) = v23;
  long long v36 = xmmword_1C1557FD0;
  char v37 = 0;
  uint64_t v24 = sub_1C152060C();
  uint64_t v30 = v25;
  uint64_t v31 = v24;
  type metadata accessor for FormatSwitchNode();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 56) = 0;
  uint64_t v29 = (uint64_t *)(v2 + 56);
  swift_beginAccess();
  *(void *)(v2 + 16) = v14;
  *(void *)(v2 + 24) = v16;
  uint64_t v26 = v38;
  *(void *)(v2 + 32) = v21;
  *(void *)(v2 + 40) = v26;
  swift_beginAccess();
  *(unsigned char *)(v2 + 48) = v32;
  uint64_t v27 = v29;
  swift_beginAccess();
  *uint64_t v27 = v31;
  *(void *)(v2 + 64) = v30;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

uint64_t type metadata accessor for FormatSwitchNodeDefault()
{
  return self;
}

unint64_t sub_1BFE303BC()
{
  unint64_t result = qword_1EB888068;
  if (!qword_1EB888068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888068);
  }
  return result;
}

unint64_t sub_1BFE30410()
{
  unint64_t result = qword_1EB88FFF8;
  if (!qword_1EB88FFF8)
  {
    sub_1BFE309D0(255, &qword_1EB88FFF0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSwitchNodeCase, MEMORY[0x1E4FBB320]);
    sub_1C085F050(&qword_1EB889BB0, (void (*)(uint64_t))type metadata accessor for FormatSwitchNodeCase);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88FFF8);
  }
  return result;
}

uint64_t sub_1BFE304E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFFE2D28(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFE3053C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFE309D0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFE305AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFE79B90(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFE3061C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFE3067C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFE306DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFE79D74(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFE3074C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C12EF908(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFE307BC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1305008(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFE30818(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFE30878(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFE309D0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFE308F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE30960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1BFE309D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t destroy for FormatSlotDefinitionItemSet(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1C1518CDC();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_1BFE30B34@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatOptionBinding.init(from:)(a1, a2);
}

uint64_t FormatOptionBinding.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v38 = a2;
  sub_1C0908CDC(0, &qword_1EB884F38, (void (*)(void))sub_1C006C6F4, (void (*)(void))sub_1C006C748);
  uint64_t v37 = v5;
  uint64_t v35 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v32 - v6;
  sub_1C089ED50();
  uint64_t v9 = v8;
  uint64_t v36 = *(v8 - 1);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C089EDE4();
  sub_1C085F050(&qword_1EB891DD0, (void (*)(uint64_t))sub_1C089EDE4);
  sub_1C1520EBC();
  if (v2)
  {
LABEL_11:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  long long v34 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C1520EAC();
  char v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = v9;
  uint64_t v16 = v37;
  uint64_t v15 = v38;
  if (v13)
  {
    uint64_t v17 = sub_1C152070C();
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = (unsigned char *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18) {
          goto LABEL_7;
        }
      }
      uint64_t v38 = v14;
      uint64_t v25 = *((void *)v19 - 2);
      uint64_t v26 = *((void *)v19 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v27 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v27);
      *((void *)&v32 - 4) = &_s10CodingKeysON_94;
      *((void *)&v32 - 3) = sub_1C089EE68();
      *((void *)&v32 - 2) = sub_1BFE31030();
      *((void *)&v32 - 1) = sub_1C089EEBC();
      swift_getKeyPath();
      swift_retain();
      uint64_t v28 = sub_1C085FB14((uint64_t)&unk_1F1B86758);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v29 = v25;
      *(void *)(v29 + 8) = v26;
      *(void *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v25, v26, 1);
      (*(void (**)(char *, uint64_t *))(v36 + 8))(v11, v38);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v41 = 0uLL;
  char v42 = 0;
  uint64_t v20 = sub_1C152069C();
  uint64_t v22 = v21;
  uint64_t v33 = v20;
  long long v32 = xmmword_1C153AB20;
  long long v41 = xmmword_1C153AB20;
  char v42 = 0;
  char v23 = sub_1C152071C();
  uint64_t v24 = v36;
  if (v23)
  {
    long long v39 = v32;
    char v40 = 0;
    sub_1C089EF10();
    sub_1C15206EC();
    uint64_t v31 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v16);
  }
  else
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, uint64_t *))(v24 + 8))(v11, v14);
  *uint64_t v15 = v33;
  v15[1] = v22;
  v15[2] = v31;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFE31030()
{
  unint64_t result = qword_1EB888DF0;
  if (!qword_1EB888DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888DF0);
  }
  return result;
}

uint64_t sub_1BFE31084(void *a1, uint64_t a2)
{
  return FormatSelectorValue.encode(to:)(a1, a2);
}

uint64_t FormatSelectorValue.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  long long v41 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v42 = (char *)v37 - v7;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v46 = *(void *)(a2 + 24);
  uint64_t v47 = v8;
  uint64_t v9 = _s10CodingKeysOMa_237();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v12 = swift_getWitnessTable();
  *(void *)&long long v48 = v9;
  *((void *)&v48 + 1) = WitnessTable;
  uint64_t v49 = v11;
  uint64_t v50 = v12;
  uint64_t v13 = type metadata accessor for FormatCodingKeysContainer();
  uint64_t v14 = swift_getWitnessTable();
  sub_1C152083C();
  swift_getWitnessTable();
  uint64_t v15 = type metadata accessor for VersionedKeyedEncodingContainer();
  uint64_t v45 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v37 - v16;
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  uint64_t v20 = __swift_project_boxed_opaque_existential_1(a1, v18);
  uint64_t v40 = a2;
  sub_1BFEFBD78(a2, (uint64_t)v20, v18, a2, v13, (uint64_t)&type metadata for FormatVersions.JazzkonC, v19, (uint64_t)v17, v14, (uint64_t)&off_1F1C39B68);
  long long v48 = 0uLL;
  LOBYTE(v49) = 0;
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1C151928C();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB93CAB0);
  uint64_t v23 = *(void *)(v21 - 8);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  uint64_t v25 = v23 + 16;
  uint64_t v26 = (uint64_t)v42;
  v24(v42, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = v43;
  sub_1BFEFFFF0(v44, (uint64_t)&v48, v26, (uint64_t)sub_1C01B158C, 0, v15, v47, *(void *)(v46 + 16));
  if (v27)
  {
    sub_1BFEFEB68(v26, type metadata accessor for FormatVersionRequirement);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v17, v15);
  }
  else
  {
    v37[1] = 0;
    uint64_t v38 = v17;
    uint64_t v39 = v25;
    uint64_t v43 = v24;
    sub_1BFEFEB68(v26, type metadata accessor for FormatVersionRequirement);
    uint64_t v51 = sub_1BFE3177C(v40);
    type metadata accessor for FormatSelectorValueSelector();
    swift_getWitnessTable();
    swift_getWitnessTable();
    uint64_t v29 = type metadata accessor for FormatCodingEmptyArrayStrategy();
    long long v48 = xmmword_1C153AB20;
    LOBYTE(v49) = 0;
    uint64_t v30 = qword_1EB8875F8;
    swift_bridgeObjectRetain();
    if (v30 != -1) {
      swift_once();
    }
    uint64_t v31 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB93C9F0);
    uint64_t v32 = (uint64_t)v41;
    v43(v41, v31, v21);
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = swift_getWitnessTable();
    uint64_t v34 = v29;
    uint64_t v35 = v29;
    uint64_t v36 = v38;
    sub_1BFE315E0((uint64_t)&v51, v34, (uint64_t)&v48, v32, (uint64_t)sub_1C01B158C, 0, v15, v35, v33);
    sub_1BFEFEB68(v32, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v36, v15);
  }
}

uint64_t sub_1BFE315E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v21 = a4;
  uint64_t v16 = *(void *)(a9 + 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 72))(a1, a8, v16);
  if (result)
  {
    uint64_t v20 = a1;
    MEMORY[0x1F4188790](result);
    void v19[2] = a5;
    v19[3] = a6;
    uint64_t v18 = v22;
    uint64_t result = sub_1BFE31788(v21, a3, (uint64_t)sub_1C02F5F08, (uint64_t)v19, a7);
    if (!v9 && (result & 1) != 0) {
      return static FormatCodingStrategy.encode<A>(_:into:forKey:)(v20, v18, a3, a8, *(void *)(a7 + 16), v16, *(void *)(a7 + 24));
    }
  }
  return result;
}

BOOL sub_1BFE31708()
{
  return static FormatCodingEmptyArrayStrategy.shouldEncode(wrappedValue:)();
}

BOOL static FormatCodingEmptyArrayStrategy.shouldEncode(wrappedValue:)()
{
  return (sub_1C151F15C() & 1) == 0;
}

uint64_t sub_1BFE3177C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 36));
}

uint64_t sub_1BFE31788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v44 = a2;
  uint64_t v50 = a1;
  uint64_t v7 = *(void *)(a5 + 16);
  uint64_t v45 = *(void *)(a5 + 24);
  uint64_t v47 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v42 = *(void *)(v10 + 64);
  uint64_t v11 = v42;
  __n128 v12 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v14 = (char *)&v36 - v13;
  uint64_t v15 = (uint64_t *)(v5 + *(int *)(a5 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  uint64_t v39 = v17;
  uint64_t v38 = v16;
  uint64_t v43 = *(void (**)(char *, uint64_t, __n128))(v10 + 16);
  uint64_t v37 = v14;
  uint64_t v18 = a2;
  uint64_t v20 = v19;
  v43(v14, v18, v12);
  uint64_t v21 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v22 = (v21 + 32) & ~v21;
  uint64_t v41 = v21 | 7;
  unint64_t v23 = (v11 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v45;
  *(void *)(v24 + 16) = v7;
  *(void *)(v24 + 24) = v25;
  uint64_t v26 = v24 + v22;
  uint64_t v27 = v24;
  uint64_t v46 = v24;
  uint64_t v40 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  uint64_t v28 = v14;
  uint64_t v29 = v20;
  v40(v26, v28, v20);
  uint64_t v30 = (void *)(v27 + v23);
  uint64_t v31 = v38;
  *uint64_t v30 = v39;
  v30[1] = v31;
  swift_retain();
  uint64_t v32 = sub_1C1520B8C();
  uint64_t v33 = v37;
  ((void (*)(char *, uint64_t, uint64_t))v43)(v37, v44, v29);
  uint64_t v34 = (void *)swift_allocObject();
  v34[2] = v7;
  void v34[3] = v25;
  v34[4] = v32;
  v40((uint64_t)v34 + ((v21 + 40) & ~v21), v33, v29);
  sub_1BFC66384(v59[7] + *(int *)(v47 + 36), (uint64_t)v59);
  __swift_project_boxed_opaque_existential_1(v59, v59[3]);
  long long v57 = sub_1C146B458;
  long long v58 = v34;
  uint64_t v52 = v48;
  uint64_t v53 = v49;
  long long v54 = sub_1C146B450;
  uint64_t v55 = v46;
  LOBYTE(v25) = sub_1BFEFC050(v50, (uint64_t)sub_1C146B5AC, (uint64_t)v56, (uint64_t)sub_1C146B45C, (uint64_t)v51);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  return v25 & 1;
}

uint64_t static FormatCodingStrategy.encode<A>(_:into:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v16[0] = a5;
  v16[3] = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v12 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v14 = (char *)v16 - v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(a6 + 80))(a1, a4, a6, v12);
  swift_getAssociatedConformanceWitness();
  sub_1C1520BAC();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, AssociatedTypeWitness);
}

BOOL sub_1BFE31C38(unsigned char *a1)
{
  return (*a1 & 1) == 0;
}

void sub_1BFE31C48(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

uint64_t sub_1BFE31C54()
{
  return 1;
}

uint64_t sub_1BFE31C5C()
{
  return 0;
}

uint64_t sub_1BFE31C64(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1BFE31C6C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BFE31C78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static FormatCodingStrategy<>.encode(wrappedValue:)(a1, a2);
}

uint64_t static FormatCodingStrategy<>.encode(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v5(a2, a1, AssociatedTypeWitness);
}

uint64_t sub_1BFE31D14@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520E9C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    uint64_t v5 = sub_1C1520ABC();
    uint64_t v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    *a2 = v5;
    a2[1] = v7;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFE31DD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatCustomItem.init(from:)(a1, a2);
}

uint64_t FormatCustomItem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  sub_1BFE89214();
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v31 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE323F8(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE32568(0, &qword_1EB85E0C0, MEMORY[0x1E4FBBDC0]);
  uint64_t v9 = v8;
  uint64_t v33 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v26 - v10;
  __n128 v12 = (int *)type metadata accessor for FormatCustomItem();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE32A08();
  uint64_t v15 = (uint64_t)v34;
  sub_1C1520EBC();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v34 = a1;
  uint64_t v16 = v33;
  char v41 = 0;
  *uint64_t v14 = sub_1C152069C();
  v14[1] = v18;
  char v40 = 1;
  v14[2] = sub_1C152069C();
  v14[3] = v19;
  type metadata accessor for FormatCustomItem.Action();
  char v39 = 2;
  sub_1BFE32A5C(&qword_1EB865C58, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
  sub_1C152065C();
  sub_1C0F97A18((uint64_t)v7, (uint64_t)v14 + v12[6], (uint64_t (*)(void))sub_1BFE323F8);
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
  char v38 = 3;
  sub_1BFE325CC((unint64_t *)&qword_1EB879DC8, (void (*)(void))sub_1C0081A44);
  sub_1C15206EC();
  uint64_t v28 = 0;
  *(uint64_t *)((char *)v14 + v12[7]) = v35;
  uint64_t v20 = v9;
  char v37 = 4;
  if (sub_1C152071C())
  {
    char v36 = 4;
    sub_1BFE32A5C(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    uint64_t v21 = v31;
    uint64_t v22 = v11;
    uint64_t v23 = v30;
    uint64_t v27 = v22;
    sub_1C15206EC();
    uint64_t v24 = v32;
    uint64_t v25 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v23);
    uint64_t v11 = v27;
  }
  else
  {
    uint64_t v25 = MEMORY[0x1E4FBC870];
    uint64_t v24 = v32;
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v20);
  *(uint64_t *)((char *)v14 + v12[8]) = v25;
  sub_1BFE32494((uint64_t)v14, v24, (uint64_t (*)(void))type metadata accessor for FormatCustomItem);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return sub_1BFE32834((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatCustomItem);
}

void sub_1BFE323F8(uint64_t a1)
{
}

uint64_t sub_1BFE3242C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE32494(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE324FC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFF2EBC0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1BFE32568(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFE32A08();
    unint64_t v7 = a3(a1, &type metadata for FormatCustomItem.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1BFE325CC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFC6CA08(255, (unint64_t *)&qword_1EB879DC0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeWithCopy for FormatCustomItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = type metadata accessor for FormatCustomItem.Action();
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1BFE323F8(0);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(__dst, v9, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v15 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFE327D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFE32834(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for FormatCustomItem(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for FormatCustomItem.Action();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFE32974(uint64_t a1, uint64_t a2)
{
  sub_1C1512180(0, &qword_1EB887B40, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BFE32A08()
{
  unint64_t result = qword_1EB85D168;
  if (!qword_1EB85D168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D168);
  }
  return result;
}

uint64_t sub_1BFE32A5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE32AA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FormatContent.requirements.getter()
{
  uint64_t v1 = type metadata accessor for FormatArticleOverrides();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v90 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FormatContent(0);
  uint64_t v5 = (uint64_t *)(v0 + *(int *)(v4 + 24));
  uint64_t v6 = v5[1];
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v8 = (void *)MEMORY[0x1E4FBC870];
  if (v6)
  {
    uint64_t v9 = *v5;
    type metadata accessor for FormatTag();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    *(void *)(v10 + 24) = v6;
    swift_beginAccess();
    *(void *)(v10 + 32) = v8;
    swift_beginAccess();
    *(void *)(v10 + 40) = v7;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1BFE339EC(0, 1, 1, (void *)v7, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
    unint64_t v13 = v11[2];
    __n128 v12 = (uint64_t *)v11[3];
    int64_t v14 = v13 + 1;
    if (v13 >= (unint64_t)v12 >> 1) {
      goto LABEL_150;
    }
    goto LABEL_3;
  }
  uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
LABEL_5:
  uint64_t v16 = (uint64_t *)(v0 + *(int *)(v4 + 28));
  uint64_t v17 = v16[1];
  if (v17)
  {
    uint64_t v18 = *v16;
    type metadata accessor for FormatIssue();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v18;
    *(void *)(v19 + 24) = v17;
    *(_OWORD *)(v19 + 32) = 0u;
    *(_OWORD *)(v19 + 48) = 0u;
    swift_beginAccess();
    *(void *)(v19 + 64) = v8;
    swift_beginAccess();
    *(void *)(v19 + 72) = v7;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1BFE339EC(0, v11[2] + 1, 1, v11, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
    }
    unint64_t v21 = v11[2];
    unint64_t v20 = v11[3];
    if (v21 >= v20 >> 1) {
      uint64_t v11 = sub_1BFE339EC((void *)(v20 > 1), v21 + 1, 1, v11, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
    }
    v11[2] = v21 + 1;
    uint64_t v22 = &v11[6 * v21];
    void v22[4] = v19;
    *(_OWORD *)(v22 + 5) = 0u;
    *(_OWORD *)(v22 + 7) = 0u;
    *((unsigned char *)v22 + 72) = 2;
  }
  uint64_t v23 = (uint64_t *)(v0 + *(int *)(v4 + 32));
  uint64_t v24 = v23[1];
  if (v24)
  {
    uint64_t v25 = *v23;
    uint64_t v26 = qword_1EB88A568;
    swift_bridgeObjectRetain();
    if (v26 != -1) {
      swift_once();
    }
    uint64_t v27 = __swift_project_value_buffer(v1, (uint64_t)qword_1EB88A548);
    sub_1BFE3391C(v27, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
    type metadata accessor for FormatArticle();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v25;
    *(void *)(v28 + 24) = v24;
    uint64_t v29 = v28 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
    swift_beginAccess();
    sub_1C0EEC764((uint64_t)v3, v29, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
    uint64_t v30 = (void *)(v28 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
    swift_beginAccess();
    *uint64_t v30 = v8;
    uint64_t v31 = (uint64_t *)(v28 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
    swift_beginAccess();
    *uint64_t v31 = v7;
    *(void *)(v28 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate) = 0;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1BFE339EC(0, v11[2] + 1, 1, v11, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
    }
    unint64_t v33 = v11[2];
    unint64_t v32 = v11[3];
    if (v33 >= v32 >> 1) {
      uint64_t v11 = sub_1BFE339EC((void *)(v32 > 1), v33 + 1, 1, v11, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
    }
    v11[2] = v33 + 1;
    uint64_t v34 = &v11[6 * v33];
    v34[4] = v28;
    *(_OWORD *)(v34 + 5) = 0u;
    *(_OWORD *)(v34 + 7) = 0u;
    *((unsigned char *)v34 + 72) = 0;
  }
  uint64_t v35 = *(void *)(v0 + *(int *)(v4 + 60));
  uint64_t v93 = *(void *)(v35 + 16);
  if (!v93)
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_132;
  }
  uint64_t v91 = v11;
  uint64_t v7 = type metadata accessor for FormatContentSubgroup();
  uint64_t v3 = (char *)(v35
              + ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80)));
  uint64_t v1 = *(void *)(*(void *)(v7 - 8) + 72);
  uint64_t v90 = v35;
  swift_bridgeObjectRetain_n();
  int64_t v14 = 0;
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v96 = v7;
  uint64_t v95 = v3;
  uint64_t v94 = v1;
LABEL_21:
  uint64_t v36 = *(void *)&v3[v1 * v14 + *(int *)(v7 + 32)];
  uint64_t v105 = *(void *)(v36 + 16);
  if (!v105)
  {
    unint64_t v13 = MEMORY[0x1E4FBC860];
    goto LABEL_110;
  }
  uint64_t v106 = v36 + 32;
  uint64_t v92 = v36;
  swift_bridgeObjectRetain_n();
  uint64_t v37 = 0;
  unint64_t v13 = MEMORY[0x1E4FBC860];
  int64_t v98 = v14;
  uint64_t v97 = v8;
LABEL_25:
  uint64_t v107 = v37;
  __n128 v12 = (uint64_t *)(v106 + 48 * v37);
  uint64_t v39 = v12[4];
  uint64_t v108 = *(char **)(v39 + 16);
  if (!v108)
  {
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_92;
  }
  unint64_t v104 = v13;
  uint64_t v40 = v12[1];
  uint64_t v41 = v12[2];
  uint64_t v42 = v12[3];
  uint64_t v43 = v12[5];
  uint64_t v114 = type metadata accessor for FormatContentSlotItem();
  uint64_t v44 = *(void *)(v114 - 8);
  unint64_t v113 = v39 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
  uint64_t v112 = *(void *)(v44 + 72);
  uint64_t v103 = v39;
  swift_bridgeObjectRetain_n();
  uint64_t v102 = v40;
  swift_bridgeObjectRetain();
  uint64_t v101 = v41;
  swift_bridgeObjectRetain();
  uint64_t v100 = v42;
  swift_bridgeObjectRetain();
  uint64_t v99 = v43;
  swift_bridgeObjectRetain();
  uint64_t v1 = 0;
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v3 = v108;
  while (1)
  {
    unint64_t v45 = v113 + v112 * v1;
    unint64_t v13 = sub_1BFE36384();
    __n128 v12 = (uint64_t *)(v45 + *(int *)(v114 + 20));
    uint64_t v46 = *v12;
    if (*v12)
    {
      uint64_t v47 = v12[1];
      int64_t v14 = *(void *)(v47 + 16);
      if (v14) {
        break;
      }
    }
    uint64_t v4 = (uint64_t)v8;
LABEL_54:
    int64_t v0 = *(void *)(v4 + 16);
    uint64_t v10 = *(void *)(v13 + 16);
    uint64_t v7 = v10 + v0;
    if (__OFADD__(v10, v0))
    {
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      uint64_t v11 = sub_1BFE339EC((void *)((unint64_t)v12 > 1), v14, 1, v11, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
LABEL_3:
      v11[2] = v14;
      uint64_t v15 = &v11[6 * v13];
      void v15[4] = v10;
      *(_OWORD *)(v15 + 5) = 0u;
      *(_OWORD *)(v15 + 7) = 0u;
      *((unsigned char *)v15 + 72) = 3;
      goto LABEL_5;
    }
    int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native
      && (__n128 v12 = *(uint64_t **)(v13 + 24), v7 <= (uint64_t)((unint64_t)v12 >> 1)))
    {
      uint64_t v10 = *(void *)(v4 + 16);
      if (!v10) {
        goto LABEL_71;
      }
    }
    else
    {
      if (v10 <= v7) {
        int64_t v67 = v10 + v0;
      }
      else {
        int64_t v67 = v10;
      }
      unint64_t v13 = (unint64_t)sub_1BFE339EC(isUniquelyReferenced_nonNull_native, v67, 1, (void *)v13, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
      uint64_t v10 = *(void *)(v4 + 16);
      if (!v10)
      {
LABEL_71:
        if (v0) {
          goto LABEL_139;
        }
        goto LABEL_72;
      }
    }
    __n128 v12 = *(uint64_t **)(v13 + 16);
    if ((*(void *)(v13 + 24) >> 1) - (void)v12 < v10) {
      goto LABEL_142;
    }
    unint64_t v64 = v13 + 48 * (void)v12 + 32;
    if (v4 + 32 < v64 + 48 * v10 && v64 < v4 + 32 + 48 * v10) {
      goto LABEL_155;
    }
    swift_arrayInitWithCopy();
    if (v10 < (unint64_t)v0) {
      goto LABEL_139;
    }
    uint64_t v66 = *(void *)(v13 + 16);
    BOOL v61 = __OFADD__(v66, v10);
    __n128 v12 = (uint64_t *)(v66 + v10);
    if (v61) {
      goto LABEL_143;
    }
    *(void *)(v13 + 16) = v12;
LABEL_72:
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v13 + 16);
    int64_t v0 = v11[2];
    uint64_t v4 = v0 + v10;
    if (__OFADD__(v0, v10)) {
      goto LABEL_140;
    }
    uint64_t v68 = swift_isUniquelyReferenced_nonNull_native();
    if ((v68 & 1) != 0 && v4 <= v11[3] >> 1)
    {
      __n128 v12 = *(uint64_t **)(v13 + 16);
      if (v12) {
        goto LABEL_81;
      }
    }
    else
    {
      if (v0 <= v4) {
        int64_t v69 = v0 + v10;
      }
      else {
        int64_t v69 = v0;
      }
      uint64_t v11 = sub_1BFE339EC((void *)v68, v69, 1, v11, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
      __n128 v12 = *(uint64_t **)(v13 + 16);
      if (v12)
      {
LABEL_81:
        __n128 v12 = (uint64_t *)v11[2];
        if ((v11[3] >> 1) - (void)v12 < v10) {
          goto LABEL_144;
        }
        unint64_t v70 = (unint64_t)&v11[6 * (void)v12 + 4];
        if (v13 + 32 < v70 + 48 * v10 && v70 < v13 + 32 + 48 * v10) {
          goto LABEL_155;
        }
        swift_arrayInitWithCopy();
        if (v10)
        {
          uint64_t v72 = v11[2];
          BOOL v61 = __OFADD__(v72, v10);
          __n128 v12 = (uint64_t *)(v72 + v10);
          if (v61) {
            goto LABEL_145;
          }
          v11[2] = v12;
        }
        goto LABEL_28;
      }
    }
    if (v10) {
      goto LABEL_141;
    }
LABEL_28:
    ++v1;
    swift_bridgeObjectRelease();
    if ((char *)v1 == v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v7 = v96;
      uint64_t v3 = v95;
      uint64_t v1 = v94;
      int64_t v14 = v98;
      uint64_t v8 = v97;
      __n128 v12 = (uint64_t *)&v115;
      unint64_t v13 = v104;
LABEL_92:
      uint64_t v10 = v11[2];
      int64_t v0 = *(void *)(v13 + 16);
      uint64_t v4 = v0 + v10;
      if (__OFADD__(v0, v10)) {
        goto LABEL_146;
      }
      uint64_t v73 = swift_isUniquelyReferenced_nonNull_native();
      if ((v73 & 1) == 0 || v4 > *(void *)(v13 + 24) >> 1)
      {
        if (v0 <= v4) {
          int64_t v74 = v0 + v10;
        }
        else {
          int64_t v74 = v0;
        }
        unint64_t v13 = (unint64_t)sub_1BFE339EC((void *)v73, v74, 1, (void *)v13, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
      }
      uint64_t v75 = v107;
      __n128 v12 = (uint64_t *)v11[2];
      if (v12)
      {
        __n128 v12 = *(uint64_t **)(v13 + 16);
        if ((*(void *)(v13 + 24) >> 1) - (void)v12 < v10) {
          goto LABEL_148;
        }
        unint64_t v76 = v13 + 48 * (void)v12 + 32;
        if ((unint64_t)(v11 + 4) < v76 + 48 * v10 && v76 < (unint64_t)&v11[6 * v10 + 4])
        {
LABEL_155:
          uint64_t result = sub_1C152052C();
          __break(1u);
          return result;
        }
        swift_arrayInitWithCopy();
        uint64_t v75 = v107;
        if (v10)
        {
          uint64_t v78 = *(void *)(v13 + 16);
          BOOL v61 = __OFADD__(v78, v10);
          __n128 v12 = (uint64_t *)(v78 + v10);
          if (v61) {
            goto LABEL_149;
          }
          *(void *)(v13 + 16) = v12;
        }
      }
      else if (v10)
      {
        goto LABEL_147;
      }
      uint64_t v38 = v75 + 1;
      swift_bridgeObjectRelease();
      uint64_t v37 = v38;
      if (v38 != v105) {
        goto LABEL_25;
      }
      swift_bridgeObjectRelease_n();
LABEL_110:
      uint64_t v79 = *(void *)(v13 + 16);
      int64_t v80 = v8[2];
      int64_t v81 = v80 + v79;
      if (__OFADD__(v80, v79))
      {
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
        goto LABEL_155;
      }
      uint64_t v82 = swift_isUniquelyReferenced_nonNull_native();
      if ((v82 & 1) == 0 || v81 > v8[3] >> 1)
      {
        if (v80 <= v81) {
          int64_t v88 = v80 + v79;
        }
        else {
          int64_t v88 = v80;
        }
        uint64_t v8 = sub_1BFE339EC((void *)v82, v88, 1, v8, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
        if (!*(void *)(v13 + 16)) {
          goto LABEL_127;
        }
LABEL_114:
        uint64_t v83 = v8[2];
        if ((v8[3] >> 1) - v83 < v79) {
          goto LABEL_153;
        }
        unint64_t v84 = (unint64_t)&v8[6 * v83 + 4];
        if (v13 + 32 < v84 + 48 * v79 && v84 < v13 + 32 + 48 * v79) {
          goto LABEL_155;
        }
        swift_arrayInitWithCopy();
        if (!v79) {
          goto LABEL_128;
        }
        uint64_t v86 = v8[2];
        BOOL v61 = __OFADD__(v86, v79);
        uint64_t v87 = v86 + v79;
        if (!v61)
        {
          _OWORD v8[2] = v87;
          goto LABEL_128;
        }
        goto LABEL_154;
      }
      if (*(void *)(v13 + 16)) {
        goto LABEL_114;
      }
LABEL_127:
      if (v79) {
        goto LABEL_152;
      }
LABEL_128:
      ++v14;
      swift_bridgeObjectRelease();
      if (v14 == v93) {
        goto LABEL_137;
      }
      goto LABEL_21;
    }
  }
  char v111 = v11;
  uint64_t v48 = *(void *)(type metadata accessor for FormatContentSlotItemObject() - 8);
  unint64_t v49 = v47 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
  swift_bridgeObjectRetain_n();
  uint64_t v110 = v46;
  uint64_t v109 = v47;
  sub_1BFDB3920(v46);
  uint64_t v50 = *(void *)(v48 + 72);
  uint64_t v4 = (uint64_t)v8;
  while (1)
  {
    uint64_t v51 = sub_1BFE36384();
    uint64_t v52 = *(void *)(v51 + 16);
    int64_t v53 = *(void *)(v4 + 16);
    int64_t v54 = v53 + v52;
    if (__OFADD__(v53, v52)) {
      break;
    }
    uint64_t v8 = (void *)v51;
    uint64_t v55 = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (v55 && v54 <= *(void *)(v4 + 24) >> 1)
    {
      if (v8[2]) {
        goto LABEL_43;
      }
    }
    else
    {
      if (v53 <= v54) {
        int64_t v56 = v53 + v52;
      }
      else {
        int64_t v56 = v53;
      }
      uint64_t v4 = (uint64_t)sub_1BFE339EC(v55, v56, 1, (void *)v4, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
      if (v8[2])
      {
LABEL_43:
        uint64_t v57 = *(void *)(v4 + 16);
        if ((*(void *)(v4 + 24) >> 1) - v57 < v52) {
          goto LABEL_135;
        }
        unint64_t v58 = v4 + 48 * v57 + 32;
        if ((unint64_t)(v8 + 4) < v58 + 48 * v52 && v58 < (unint64_t)&v8[6 * v52 + 4]) {
          goto LABEL_155;
        }
        swift_arrayInitWithCopy();
        if (v52)
        {
          uint64_t v60 = *(void *)(v4 + 16);
          BOOL v61 = __OFADD__(v60, v52);
          uint64_t v62 = v60 + v52;
          if (v61) {
            goto LABEL_136;
          }
          *(void *)(v4 + 16) = v62;
        }
        goto LABEL_33;
      }
    }
    if (v52) {
      goto LABEL_134;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    v49 += v50;
    if (!--v14)
    {
      swift_bridgeObjectRelease_n();
      sub_1BFDB3960(v110);
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v11 = v111;
      __n128 v12 = &v116;
      uint64_t v3 = v108;
      goto LABEL_54;
    }
  }
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  swift_bridgeObjectRelease_n();
  uint64_t v11 = v91;
LABEL_132:
  char v115 = v8;
  sub_1BFE35DF4((uint64_t)v11);
  return (uint64_t)v115;
}

uint64_t sub_1BFE338B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE3391C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE33984(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_1BFE339EC(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6)
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_1BFE9DFF4(0, a5, a6, MEMORY[0x1E4FBBE00]);
      __n128 v12 = (void *)swift_allocObject();
      size_t v13 = _swift_stdlib_malloc_size(v12);
      unsigned char v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 48);
      int64_t v14 = v12 + 4;
      if (v7)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[6 * v10 + 4]) {
          memmove(v14, a4 + 4, 48 * v10);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      __n128 v12 = (void *)MEMORY[0x1E4FBC860];
      int64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1BFE33B38(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFE33B38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void *sub_1BFE33C2C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFE339EC(a1, a2, a3, a4, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
}

uint64_t FormatContentSlotItem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v4 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v19 = (uint64_t)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE33FF0(0, &qword_1EB890370, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v17 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for FormatContentSlotItem();
  MEMORY[0x1F4188790](v10);
  __n128 v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE35BE8();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = v17;
  sub_1BFC66384((uint64_t)a1, (uint64_t)v18);
  uint64_t v14 = v19;
  FormatContentSlotItemObject.init(from:)(v18, v19);
  sub_1BFE34B10(v14, (uint64_t)v12);
  sub_1BFE34054();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
  *(_OWORD *)&v12[*(int *)(v10 + 20)] = v18[0];
  sub_1BFE33F88((uint64_t)v12, v16, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BFE340A8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
}

uint64_t sub_1BFE33F20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE33F88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1BFE33FF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFE35BE8();
    unint64_t v7 = a3(a1, &type metadata for FormatContentSlotItem.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1BFE34054()
{
  unint64_t result = qword_1EB88D810;
  if (!qword_1EB88D810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88D810);
  }
  return result;
}

uint64_t sub_1BFE340A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for FormatContentSlotItem()
{
  uint64_t result = qword_1EB889FE0;
  if (!qword_1EB889FE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *initializeWithCopy for FormatContentSlotItem(void *a1, char *a2, uint64_t a3)
{
  type metadata accessor for FormatContentSlotItemObject();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 5u:
      uint64_t v6 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v6;
      unint64_t v7 = (int *)type metadata accessor for FormatWebEmbed();
      uint64_t v8 = v7[5];
      __dsta = &a2[v8];
      unint64_t v45 = (char *)a1 + v8;
      uint64_t v9 = sub_1C1515FDC();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
      swift_bridgeObjectRetain();
      __n128 v12 = v45;
      uint64_t v46 = v11;
      v11(v12, __dsta, v9);
      uint64_t v13 = v7[6];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = &a2[v13];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v13], 1, v9))
      {
        sub_1BFF2EE90(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        v46(v14, v15, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
      }
      *(void *)((char *)a1 + v7[7]) = *(void *)&a2[v7[7]];
      uint64_t v28 = v7[8];
      uint64_t v29 = (void *)((char *)a1 + v28);
      uint64_t v30 = &a2[v28];
      uint64_t v31 = *((void *)v30 + 1);
      *uint64_t v29 = *(void *)v30;
      v29[1] = v31;
      uint64_t v32 = v7[9];
      unint64_t v33 = (void *)((char *)a1 + v32);
      uint64_t v34 = &a2[v32];
      uint64_t v35 = *((void *)v34 + 1);
      *unint64_t v33 = *(void *)v34;
      v33[1] = v35;
      *(void *)((char *)a1 + v7[10]) = *(void *)&a2[v7[10]];
      *(void *)((char *)a1 + v7[11]) = *(void *)&a2[v7[11]];
      *(void *)((char *)a1 + v7[12]) = *(void *)&a2[v7[12]];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 8u:
      uint64_t v17 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v17;
      uint64_t v18 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v18;
      a1[4] = *((void *)a2 + 4);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 9u:
      uint64_t v19 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v19;
      *((unsigned char *)a1 + 16) = a2[16];
      swift_bridgeObjectRetain();
      break;
    case 0xAu:
      uint64_t v20 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v20;
      uint64_t v21 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v21;
      uint64_t v22 = type metadata accessor for FormatCustomItem();
      uint64_t v23 = *(int *)(v22 + 24);
      __dst = (char *)a1 + v23;
      uint64_t v47 = v22;
      uint64_t v24 = &a2[v23];
      uint64_t v25 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v42 = *(void *)(v25 - 8);
      uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v26(v24, 1, v25))
      {
        sub_1BFF2EE90(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(__dst, v24, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        uint64_t v36 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(__dst, v24, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v25);
      }
      *(void *)((char *)a1 + *(int *)(v47 + 28)) = *(void *)&a2[*(int *)(v47 + 28)];
      *(void *)((char *)a1 + *(int *)(v47 + 32)) = *(void *)&a2[*(int *)(v47 + 32)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    default:
      *a1 = *(void *)a2;
      swift_retain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = *(int *)(a3 + 20);
  uint64_t v38 = (void *)((char *)a1 + v37);
  uint64_t v39 = &a2[v37];
  if (*(void *)v39)
  {
    uint64_t v40 = *((void *)v39 + 1);
    *uint64_t v38 = *(void *)v39;
    v38[1] = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  }
  return a1;
}

uint64_t _s6ActionOwst(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, a2, a3, v6);
}

uint64_t destroy for FormatContentSlotItem(uint64_t a1, uint64_t a2)
{
  type metadata accessor for FormatContentSlotItemObject();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 6u:
    case 7u:
    case 0xBu:
    case 0xCu:
    case 0xDu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
      swift_release();
      break;
    case 5u:
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for FormatWebEmbed();
      uint64_t v6 = a1 + *(int *)(v5 + 20);
      uint64_t v7 = sub_1C1515FDC();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v9(v6, v7);
      uint64_t v10 = a1 + *(int *)(v5 + 24);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
        v9(v10, v7);
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 8u:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 9u:
      goto LABEL_15;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = a1 + *(int *)(type metadata accessor for FormatCustomItem() + 24);
      uint64_t v12 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
      {
        uint64_t v13 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
      }
      swift_bridgeObjectRelease();
LABEL_15:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 20));
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for FormatCustomItem.Action()
{
  uint64_t result = qword_1EB882D38;
  if (!qword_1EB882D38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t _s6ActionOwet(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1BFE34B10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContentSlotItemObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FormatContentSlotItemObject.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v29 = type metadata accessor for FormatCustomItem();
  MEMORY[0x1F4188790](v29);
  uint64_t v28 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FormatWebEmbed();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF31C(0, &qword_1EB87A530, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1BFEB6A24();
  uint64_t v15 = v36;
  sub_1C1520EBC();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  uint64_t v26 = v4;
  uint64_t v16 = (uint64_t)v28;
  uint64_t v36 = v13;
  uint64_t v17 = v30;
  sub_1BFE35B94();
  long long v32 = 0uLL;
  sub_1C15206EC();
  switch((char)v35)
  {
    case 1:
      type metadata accessor for FormatArticleList();
      long long v32 = xmmword_1C152C800;
      sub_1BFE35C3C(&qword_1EB86FB98, (void (*)(uint64_t))type metadata accessor for FormatArticleList);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v19 = v36;
      *uint64_t v36 = v35;
      goto LABEL_23;
    case 2:
      type metadata accessor for FormatIssue();
      long long v32 = xmmword_1C152C800;
      sub_1BFE35C3C(&qword_1EB85FC10, (void (*)(uint64_t))type metadata accessor for FormatIssue);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v19 = v36;
      *uint64_t v36 = v35;
      goto LABEL_23;
    case 3:
      type metadata accessor for FormatTag();
      long long v32 = xmmword_1C152C800;
      sub_1BFE35C3C((unint64_t *)&unk_1EB860BC8, (void (*)(uint64_t))type metadata accessor for FormatTag);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v19 = v36;
      *uint64_t v36 = v35;
      goto LABEL_23;
    case 4:
      type metadata accessor for FormatTagFeed();
      long long v32 = xmmword_1C152C800;
      sub_1BFE35C3C(&qword_1EB86FE90, (void (*)(uint64_t))type metadata accessor for FormatTagFeed);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v19 = v36;
      *uint64_t v36 = v35;
      goto LABEL_23;
    case 5:
      long long v32 = xmmword_1C152C800;
      sub_1BFE35C3C(&qword_1EB85B7D8, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed);
      sub_1C15206EC();
      uint64_t v20 = v17;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v19 = v36;
      sub_1BFE35B2C((uint64_t)v6, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      goto LABEL_24;
    case 6:
      type metadata accessor for FormatPuzzle();
      long long v32 = xmmword_1C152C800;
      sub_1BFE35C3C(&qword_1EB865820, (void (*)(uint64_t))type metadata accessor for FormatPuzzle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v19 = v36;
      *uint64_t v36 = v35;
      goto LABEL_23;
    case 7:
      type metadata accessor for FormatPuzzleType(0);
      long long v32 = xmmword_1C152C800;
      sub_1BFE35C3C(&qword_1EB86C5C0, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v19 = v36;
      *uint64_t v36 = v35;
      goto LABEL_23;
    case 8:
      long long v35 = xmmword_1C152C800;
      sub_1C025BDC8();
      sub_1C15206EC();
      uint64_t v20 = v17;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v21 = *((void *)&v32 + 1);
      uint64_t v22 = v34;
      long long v23 = v33;
      uint64_t v19 = v36;
      *uint64_t v36 = v32;
      v19[1] = v21;
      *((_OWORD *)v19 + 1) = v23;
      void v19[4] = v22;
      goto LABEL_24;
    case 9:
      long long v35 = xmmword_1C152C800;
      sub_1BFE38DB4();
      sub_1C15206EC();
      uint64_t v20 = v17;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v24 = *((void *)&v32 + 1);
      char v25 = v33;
      uint64_t v19 = v36;
      *uint64_t v36 = v32;
      v19[1] = v24;
      *((unsigned char *)v19 + 16) = v25;
      goto LABEL_24;
    case 10:
      long long v32 = xmmword_1C152C800;
      sub_1BFE35C3C(&qword_1EB85D170, (void (*)(uint64_t))type metadata accessor for FormatCustomItem);
      sub_1C15206EC();
      uint64_t v20 = v17;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v19 = v36;
      sub_1BFE35B2C(v16, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for FormatCustomItem);
      goto LABEL_24;
    case 11:
      type metadata accessor for FormatScoreDataVisualization();
      long long v32 = xmmword_1C152C800;
      sub_1BFE35C3C(&qword_1EB86BD98, (void (*)(uint64_t))type metadata accessor for FormatScoreDataVisualization);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v19 = v36;
      *uint64_t v36 = v35;
      goto LABEL_23;
    case 12:
      type metadata accessor for FormatStandingDataVisualization();
      long long v32 = xmmword_1C152C800;
      sub_1BFE35C3C(&qword_1EA19CD30, (void (*)(uint64_t))type metadata accessor for FormatStandingDataVisualization);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v19 = v36;
      *uint64_t v36 = v35;
      goto LABEL_23;
    case 13:
      type metadata accessor for FormatBracketDataVisualization();
      long long v32 = xmmword_1C152C800;
      sub_1BFE35C3C(&qword_1EA19BA28, (void (*)(uint64_t))type metadata accessor for FormatBracketDataVisualization);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v19 = v36;
      *uint64_t v36 = v35;
      goto LABEL_23;
    case 14:
      type metadata accessor for FormatBoxScoreDataVisualization();
      long long v32 = xmmword_1C152C800;
      sub_1BFE35C3C((unint64_t *)&unk_1EA19CD20, (void (*)(uint64_t))type metadata accessor for FormatBoxScoreDataVisualization);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v19 = v36;
      *uint64_t v36 = v35;
      goto LABEL_23;
    case 15:
      type metadata accessor for FormatLineScoreDataVisualization();
      long long v32 = xmmword_1C152C800;
      sub_1BFE35C3C(&qword_1EA19CD18, (void (*)(uint64_t))type metadata accessor for FormatLineScoreDataVisualization);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v19 = v36;
      *uint64_t v36 = v35;
      goto LABEL_23;
    case 16:
      type metadata accessor for FormatInjuryReportDataVisualization();
      long long v32 = xmmword_1C152C800;
      sub_1BFE35C3C(&qword_1EA19CD10, (void (*)(uint64_t))type metadata accessor for FormatInjuryReportDataVisualization);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v19 = v36;
      *uint64_t v36 = v35;
      goto LABEL_23;
    case 17:
      type metadata accessor for FormatKeyPlayerDataVisualization();
      long long v32 = xmmword_1C152C800;
      sub_1BFE35C3C(&qword_1EA19CD08, (void (*)(uint64_t))type metadata accessor for FormatKeyPlayerDataVisualization);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v19 = v36;
      *uint64_t v36 = v35;
      goto LABEL_23;
    default:
      type metadata accessor for FormatArticle();
      long long v32 = xmmword_1C152C800;
      sub_1BFE35C3C(&qword_1EB874340, (void (*)(uint64_t))type metadata accessor for FormatArticle);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
      uint64_t v19 = v36;
      *uint64_t v36 = v35;
LABEL_23:
      uint64_t v20 = v17;
LABEL_24:
      swift_storeEnumTagMultiPayload();
      sub_1BFE35B2C((uint64_t)v19, v20, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      break;
  }
  return result;
}

uint64_t type metadata accessor for FormatCustomItem()
{
  uint64_t result = qword_1EB887C40;
  if (!qword_1EB887C40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FormatWebEmbed()
{
  uint64_t result = qword_1EB895260;
  if (!qword_1EB895260) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFE35B2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1BFE35B94()
{
  unint64_t result = qword_1EB88C850[0];
  if (!qword_1EB88C850[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB88C850);
  }
  return result;
}

unint64_t sub_1BFE35BE8()
{
  unint64_t result = qword_1EB889FC0;
  if (!qword_1EB889FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889FC0);
  }
  return result;
}

uint64_t sub_1BFE35C3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE35C84(uint64_t a1, uint64_t (*a2)(void))
{
  unint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v5 + v3) <= *(void *)(v4 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_15:
    if (!v3) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  uint64_t v4 = a2();
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v4 + 16);
  if ((*(void *)(v4 + 24) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v10 = v4 + 48 * v9 + 32;
  if (a1 + 32 < v10 + 48 * v8 && v10 < a1 + 32 + 48 * v8) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (v8 < v3)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v12 = *(void *)(v4 + 16);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    *(void *)(v4 + 16) = v14;
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v2 = v4;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFE35DF4(uint64_t a1)
{
  return sub_1BFE35C84(a1, (uint64_t (*)(void))sub_1BFE33C2C);
}

void *initializeWithCopy for FormatContentSlotItemObject(void *a1, char *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 5u:
      uint64_t v4 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v4;
      uint64_t v5 = (int *)type metadata accessor for FormatWebEmbed();
      uint64_t v6 = v5[5];
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v38 = &a2[v6];
      uint64_t v8 = sub_1C1515FDC();
      uint64_t v9 = *(void *)(v8 - 8);
      unint64_t v10 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      swift_bridgeObjectRetain();
      v10(v7, v38, v8);
      uint64_t v11 = v5[6];
      uint64_t v12 = (char *)a1 + v11;
      BOOL v13 = &a2[v11];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a2[v11], 1, v8))
      {
        sub_1BFF00BEC();
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        v10(v12, v13, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
      }
      *(void *)((char *)a1 + v5[7]) = *(void *)&a2[v5[7]];
      uint64_t v27 = v5[8];
      uint64_t v28 = (void *)((char *)a1 + v27);
      uint64_t v29 = &a2[v27];
      uint64_t v30 = *((void *)v29 + 1);
      *uint64_t v28 = *(void *)v29;
      v28[1] = v30;
      uint64_t v31 = v5[9];
      long long v32 = (void *)((char *)a1 + v31);
      long long v33 = &a2[v31];
      uint64_t v34 = *((void *)v33 + 1);
      *long long v32 = *(void *)v33;
      v32[1] = v34;
      *(void *)((char *)a1 + v5[10]) = *(void *)&a2[v5[10]];
      *(void *)((char *)a1 + v5[11]) = *(void *)&a2[v5[11]];
      *(void *)((char *)a1 + v5[12]) = *(void *)&a2[v5[12]];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 8u:
      uint64_t v15 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v15;
      uint64_t v16 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v16;
      a1[4] = *((void *)a2 + 4);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 9u:
      uint64_t v17 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v17;
      *((unsigned char *)a1 + 16) = a2[16];
      swift_bridgeObjectRetain();
      break;
    case 0xAu:
      uint64_t v18 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v18;
      uint64_t v19 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v19;
      uint64_t v20 = type metadata accessor for FormatCustomItem();
      uint64_t v21 = *(int *)(v20 + 24);
      __dst = (char *)a1 + v21;
      uint64_t v39 = v20;
      uint64_t v22 = &a2[v21];
      uint64_t v23 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v24 = *(void *)(v23 - 8);
      char v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v25(v22, 1, v23))
      {
        sub_1BFE323F8(0);
        memcpy(__dst, v22, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        uint64_t v35 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(__dst, v22, v35);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
      }
      *(void *)((char *)a1 + *(int *)(v39 + 28)) = *(void *)&a2[*(int *)(v39 + 28)];
      *(void *)((char *)a1 + *(int *)(v39 + 32)) = *(void *)&a2[*(int *)(v39 + 32)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    default:
      *a1 = *(void *)a2;
      swift_retain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1BFE36384()
{
  uint64_t v2 = v0;
  unint64_t v3 = (int *)type metadata accessor for FormatWebEmbed();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (uint64_t)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE33F20(v2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v14 = *(void *)v8;
      sub_1C065555C(0, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
      *(void *)(v15 + 32) = v14;
      *(_OWORD *)(v15 + 40) = 0u;
      *(_OWORD *)(v15 + 56) = 0u;
      *(unsigned char *)(v15 + 72) = 1;
      return v15;
    case 2u:
      uint64_t v16 = *(void *)v8;
      sub_1C065555C(0, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
      *(void *)(v15 + 32) = v16;
      *(_OWORD *)(v15 + 40) = 0u;
      *(_OWORD *)(v15 + 56) = 0u;
      *(unsigned char *)(v15 + 72) = 2;
      return v15;
    case 3u:
      uint64_t v17 = *(void *)v8;
      sub_1C065555C(0, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
      *(void *)(v15 + 32) = v17;
      *(_OWORD *)(v15 + 40) = 0u;
      *(_OWORD *)(v15 + 56) = 0u;
      *(unsigned char *)(v15 + 72) = 3;
      return v15;
    case 4u:
      uint64_t v18 = *(void *)v8;
      sub_1C065555C(0, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
      *(void *)(v15 + 32) = v18;
      *(_OWORD *)(v15 + 40) = 0u;
      *(_OWORD *)(v15 + 56) = 0u;
      *(unsigned char *)(v15 + 72) = 4;
      return v15;
    case 5u:
      sub_1BFE35B2C((uint64_t)v8, v5, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      uint64_t v19 = (uint64_t *)(v5 + v3[8]);
      uint64_t v20 = v19[1];
      uint64_t v1 = MEMORY[0x1E4FBC860];
      if (v20)
      {
        uint64_t v21 = *v19;
        sub_1C065555C(0, (unint64_t *)&unk_1EB85C710, (uint64_t)&type metadata for FormatWebArchiveResource, MEMORY[0x1E4FBBE00]);
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_1C1529AE0;
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_1C1515F8C();
        *(void *)(v22 + 32) = v21;
        *(void *)(v22 + 40) = v20;
        *(void *)(v22 + 48) = v23;
        *(void *)(v22 + 56) = v24;
      }
      else
      {
        uint64_t v22 = MEMORY[0x1E4FBC860];
      }
      int64_t v50 = *(void *)(v22 + 16);
      uint64_t v89 = v3;
      uint64_t v90 = v5;
      if (v50)
      {
        unint64_t v92 = v1;
        sub_1BFE390E8(0, v50, 0);
        unint64_t v51 = v92;
        uint64_t v88 = v22;
        uint64_t v52 = (uint64_t *)(v22 + 56);
        do
        {
          uint64_t v53 = *(v52 - 3);
          uint64_t v54 = *(v52 - 2);
          uint64_t v56 = *(v52 - 1);
          uint64_t v55 = *v52;
          unint64_t v92 = v51;
          unint64_t v58 = *(void *)(v51 + 16);
          unint64_t v57 = *(void *)(v51 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v58 >= v57 >> 1)
          {
            sub_1BFE390E8(v57 > 1, v58 + 1, 1);
            unint64_t v51 = v92;
          }
          v52 += 4;
          *(void *)(v51 + 16) = v58 + 1;
          unint64_t v59 = v51 + 48 * v58;
          *(void *)(v59 + 32) = v53;
          *(void *)(v59 + 40) = v54;
          *(void *)(v59 + 48) = v56;
          *(void *)(v59 + 56) = v55;
          *(void *)(v59 + 64) = 0;
          *(unsigned char *)(v59 + 72) = 15;
          --v50;
        }
        while (v50);
        swift_bridgeObjectRelease();
        unint64_t v3 = v89;
        uint64_t v5 = v90;
        uint64_t v1 = MEMORY[0x1E4FBC860];
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v51 = MEMORY[0x1E4FBC860];
      }
      uint64_t v60 = (uint64_t *)(v5 + v3[9]);
      uint64_t v61 = v60[1];
      if (v61)
      {
        uint64_t v62 = *v60;
        sub_1C065555C(0, &qword_1EA1A8B60, (uint64_t)&type metadata for FormatContentResource, MEMORY[0x1E4FBBE00]);
        uint64_t v63 = swift_allocObject();
        *(_OWORD *)(v63 + 16) = xmmword_1C1529AE0;
        *(void *)(v63 + 32) = v62;
        *(void *)(v63 + 40) = v61;
        int64_t v64 = 1;
      }
      else
      {
        int64_t v64 = *(void *)(v1 + 16);
        if (!v64)
        {
          swift_bridgeObjectRetain();
          uint64_t v65 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRelease();
          goto LABEL_54;
        }
        uint64_t v63 = v1;
      }
      unint64_t v92 = v1;
      swift_bridgeObjectRetain();
      sub_1BFE390E8(0, v64, 0);
      uint64_t v65 = v92;
      uint64_t v88 = v63;
      uint64_t v66 = (uint64_t *)(v63 + 40);
      do
      {
        uint64_t v67 = *(v66 - 1);
        uint64_t v68 = *v66;
        unint64_t v92 = v65;
        unint64_t v70 = *(void *)(v65 + 16);
        unint64_t v69 = *(void *)(v65 + 24);
        swift_bridgeObjectRetain();
        if (v70 >= v69 >> 1)
        {
          sub_1BFE390E8(v69 > 1, v70 + 1, 1);
          uint64_t v65 = v92;
        }
        v66 += 2;
        *(void *)(v65 + 16) = v70 + 1;
        uint64_t v71 = v65 + 48 * v70;
        *(void *)(v71 + 32) = v67;
        *(void *)(v71 + 40) = v68;
        *(void *)(v71 + 56) = 0;
        *(void *)(v71 + 64) = 0;
        *(void *)(v71 + 48) = 0;
        *(unsigned char *)(v71 + 72) = 16;
        --v64;
      }
      while (v64);
      swift_bridgeObjectRelease();
      unint64_t v3 = v89;
      uint64_t v5 = v90;
      uint64_t v1 = MEMORY[0x1E4FBC860];
LABEL_54:
      unint64_t v92 = v51;
      sub_1BFE35DF4(v65);
      uint64_t v15 = v92;
      uint64_t v9 = *(void *)(v5 + v3[7]);
      if (!v9) {
        goto LABEL_79;
      }
      unint64_t v91 = v1;
      uint64_t v72 = *(void *)(v9 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
      swift_retain_n();
      while (1)
      {
        swift_retain();
        uint64_t v73 = swift_retain();
        MEMORY[0x1C18C66D0](v73);
        if (*(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
        swift_release();
        if (!v72) {
          break;
        }
        uint64_t v72 = *(void *)(v72 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
      }
      swift_release();
      unint64_t v12 = v91;
      if (v91 >> 62) {
        goto LABEL_76;
      }
      uint64_t v74 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v74) {
        goto LABEL_62;
      }
      goto LABEL_77;
    case 6u:
      uint64_t v25 = *(void *)v8;
      sub_1C065555C(0, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
      *(void *)(v15 + 32) = v25;
      *(_OWORD *)(v15 + 40) = 0u;
      *(_OWORD *)(v15 + 56) = 0u;
      *(unsigned char *)(v15 + 72) = 5;
      return v15;
    case 7u:
      uint64_t v26 = *(void *)v8;
      sub_1C065555C(0, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
      *(void *)(v15 + 32) = v26;
      *(_OWORD *)(v15 + 40) = 0u;
      *(_OWORD *)(v15 + 56) = 0u;
      *(unsigned char *)(v15 + 72) = 6;
      return v15;
    case 8u:
      uint64_t v27 = *(void *)v8;
      uint64_t v28 = *((void *)v8 + 1);
      uint64_t v29 = *((void *)v8 + 4);
      sub_1C065555C(0, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
      *(void *)(v15 + 32) = v27;
      *(void *)(v15 + 40) = v28;
      *(_OWORD *)(v15 + 48) = *((_OWORD *)v8 + 1);
      *(void *)(v15 + 64) = v29;
      *(unsigned char *)(v15 + 72) = 7;
      return v15;
    case 9u:
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    case 0xAu:
      sub_1BFE38E08((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      return MEMORY[0x1E4FBC860];
    case 0xBu:
      uint64_t v30 = *(void *)v8;
      sub_1C065555C(0, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
      *(void *)(v15 + 32) = v30;
      *(_OWORD *)(v15 + 40) = 0u;
      *(_OWORD *)(v15 + 56) = 0u;
      *(unsigned char *)(v15 + 72) = 8;
      return v15;
    case 0xCu:
      uint64_t v31 = *(void *)v8;
      sub_1C065555C(0, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1527210;
      uint64_t v33 = *(void *)(v31 + 16);
      uint64_t v32 = *(void *)(v31 + 24);
      type metadata accessor for FormatTag();
      uint64_t v34 = (void *)swift_allocObject();
      v34[2] = v33;
      void v34[3] = v32;
      swift_beginAccess();
      v34[4] = MEMORY[0x1E4FBC870];
      swift_beginAccess();
      v34[5] = MEMORY[0x1E4FBC860];
      *(void *)(v15 + 32) = v34;
      *(_OWORD *)(v15 + 40) = 0u;
      *(_OWORD *)(v15 + 56) = 0u;
      *(unsigned char *)(v15 + 72) = 3;
      *(void *)(v15 + 80) = v31;
      *(_OWORD *)(v15 + 88) = 0u;
      *(_OWORD *)(v15 + 104) = 0u;
      char v35 = 9;
      goto LABEL_21;
    case 0xDu:
      uint64_t v36 = *(void *)v8;
      sub_1C065555C(0, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1527210;
      uint64_t v38 = *(void *)(v36 + 16);
      uint64_t v37 = *(void *)(v36 + 24);
      type metadata accessor for FormatTag();
      uint64_t v39 = (void *)swift_allocObject();
      void v39[2] = v38;
      v39[3] = v37;
      swift_beginAccess();
      v39[4] = MEMORY[0x1E4FBC870];
      swift_beginAccess();
      v39[5] = MEMORY[0x1E4FBC860];
      *(void *)(v15 + 32) = v39;
      *(_OWORD *)(v15 + 40) = 0u;
      *(_OWORD *)(v15 + 56) = 0u;
      *(unsigned char *)(v15 + 72) = 3;
      *(void *)(v15 + 80) = v36;
      *(_OWORD *)(v15 + 88) = 0u;
      *(_OWORD *)(v15 + 104) = 0u;
      char v35 = 10;
LABEL_21:
      *(unsigned char *)(v15 + 120) = v35;
      swift_bridgeObjectRetain();
      return v15;
    case 0xEu:
      uint64_t v40 = *(void *)v8;
      sub_1C065555C(0, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
      *(void *)(v15 + 32) = v40;
      *(_OWORD *)(v15 + 40) = 0u;
      *(_OWORD *)(v15 + 56) = 0u;
      *(unsigned char *)(v15 + 72) = 11;
      return v15;
    case 0xFu:
      uint64_t v41 = *(void *)v8;
      sub_1C065555C(0, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
      *(void *)(v15 + 32) = v41;
      *(_OWORD *)(v15 + 40) = 0u;
      *(_OWORD *)(v15 + 56) = 0u;
      *(unsigned char *)(v15 + 72) = 12;
      return v15;
    case 0x10u:
      uint64_t v42 = *(void *)v8;
      sub_1C065555C(0, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
      *(void *)(v15 + 32) = v42;
      *(_OWORD *)(v15 + 40) = 0u;
      *(_OWORD *)(v15 + 56) = 0u;
      *(unsigned char *)(v15 + 72) = 13;
      return v15;
    case 0x11u:
      uint64_t v43 = *(void *)v8;
      sub_1C065555C(0, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
      *(void *)(v15 + 32) = v43;
      *(_OWORD *)(v15 + 40) = 0u;
      *(_OWORD *)(v15 + 56) = 0u;
      *(unsigned char *)(v15 + 72) = 14;
      return v15;
    default:
      uint64_t v9 = *(void *)v8;
      unint64_t v10 = MEMORY[0x1E4FBC860];
      unint64_t v92 = MEMORY[0x1E4FBC860];
      unint64_t v11 = *(void *)(v9 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
      swift_retain_n();
      unint64_t v12 = v9;
      while (1)
      {
        swift_retain();
        uint64_t v13 = swift_retain();
        MEMORY[0x1C18C66D0](v13);
        if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
        swift_release();
        if (!v11) {
          break;
        }
        unint64_t v12 = v11;
        unint64_t v11 = *(void *)(v11 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
      }
      swift_release();
      uint64_t v5 = v92;
      if (!(v92 >> 62))
      {
        uint64_t v44 = *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v44) {
          goto LABEL_28;
        }
LABEL_73:
        swift_bridgeObjectRelease();
        swift_release();
        return MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (!v44) {
        goto LABEL_73;
      }
LABEL_28:
      uint64_t v90 = v9;
      unint64_t v92 = v10;
      sub_1BFE390E8(0, v44 & ~(v44 >> 63), 0);
      if ((v44 & 0x8000000000000000) == 0)
      {
        uint64_t v45 = 0;
        uint64_t v15 = v92;
        do
        {
          if ((v5 & 0xC000000000000001) != 0)
          {
            uint64_t v46 = MEMORY[0x1C18C7CB0](v45, v5);
          }
          else
          {
            uint64_t v46 = *(void *)(v5 + 8 * v45 + 32);
            swift_retain();
          }
          unint64_t v92 = v15;
          unint64_t v48 = *(void *)(v15 + 16);
          unint64_t v47 = *(void *)(v15 + 24);
          if (v48 >= v47 >> 1)
          {
            sub_1BFE390E8(v47 > 1, v48 + 1, 1);
            uint64_t v15 = v92;
          }
          *(void *)(v15 + 16) = v48 + 1;
          uint64_t v49 = v15 + 48 * v48;
          *(void *)(v49 + 32) = v46;
          ++v45;
          *(_OWORD *)(v49 + 40) = 0u;
          *(_OWORD *)(v49 + 56) = 0u;
          *(unsigned char *)(v49 + 72) = 0;
        }
        while (v44 != v45);
        swift_bridgeObjectRelease();
        swift_release();
        return v15;
      }
      __break(1u);
LABEL_76:
      swift_bridgeObjectRetain();
      uint64_t v74 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (!v74)
      {
LABEL_77:
        swift_bridgeObjectRelease();
        uint64_t v77 = MEMORY[0x1E4FBC860];
        goto LABEL_78;
      }
LABEL_62:
      uint64_t v88 = v9;
      unint64_t v91 = v1;
      uint64_t result = sub_1BFE390E8(0, v74 & ~(v74 >> 63), 0);
      if ((v74 & 0x8000000000000000) == 0)
      {
        uint64_t v76 = 0;
        uint64_t v77 = v91;
        do
        {
          if ((v12 & 0xC000000000000001) != 0)
          {
            uint64_t v78 = MEMORY[0x1C18C7CB0](v76, v12);
          }
          else
          {
            uint64_t v78 = *(void *)(v12 + 8 * v76 + 32);
            swift_retain();
          }
          unint64_t v91 = v77;
          unint64_t v80 = *(void *)(v77 + 16);
          unint64_t v79 = *(void *)(v77 + 24);
          if (v80 >= v79 >> 1)
          {
            sub_1BFE390E8(v79 > 1, v80 + 1, 1);
            uint64_t v77 = v91;
          }
          *(void *)(v77 + 16) = v80 + 1;
          uint64_t v81 = v77 + 48 * v80;
          *(void *)(v81 + 32) = v78;
          ++v76;
          *(_OWORD *)(v81 + 40) = 0u;
          *(_OWORD *)(v81 + 56) = 0u;
          *(unsigned char *)(v81 + 72) = 0;
        }
        while (v74 != v76);
        swift_bridgeObjectRelease();
        uint64_t v5 = v90;
LABEL_78:
        sub_1BFE35DF4(v77);
        swift_release();
        uint64_t v15 = v92;
LABEL_79:
        sub_1C1515DDC();
        uint64_t v83 = v82;
        swift_bridgeObjectRelease();
        if (v83)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v15 = (uint64_t)sub_1BFE33C2C(0, *(void *)(v15 + 16) + 1, 1, (void *)v15);
          }
          unint64_t v85 = *(void *)(v15 + 16);
          unint64_t v84 = *(void *)(v15 + 24);
          if (v85 >= v84 >> 1) {
            uint64_t v15 = (uint64_t)sub_1BFE33C2C((void *)(v84 > 1), v85 + 1, 1, (void *)v15);
          }
          *(void *)(v15 + 16) = v85 + 1;
          uint64_t v86 = v15 + 48 * v85;
          *(_OWORD *)(v86 + 32) = 0u;
          *(_OWORD *)(v86 + 48) = 0u;
          *(void *)(v86 + 64) = 0;
          *(unsigned char *)(v86 + 72) = 17;
        }
        sub_1BFE38E08(v5, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
        return v15;
      }
      __break(1u);
      return result;
  }
}

uint64_t type metadata accessor for FormatArticle()
{
  uint64_t result = qword_1EB874348;
  if (!qword_1EB874348) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FormatContent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v95 = a2;
  unint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1BFE38B54(0, &qword_1EB883220, (uint64_t (*)(void))sub_1BFE38C78, (uint64_t)&type metadata for FormatContent.AltCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v93 = *(void *)(v4 - 8);
  uint64_t v94 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v96 = (char *)&v91 - v5;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEC0BBC(0, &qword_1EB8812C0, (uint64_t (*)(uint64_t))sub_1BFE38BF0, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  int64_t v98 = (char *)&v91 - v8;
  sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], v6);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v97 = (char *)&v91 - v10;
  sub_1BFEC0BBC(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v6);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v101 = (char *)&v91 - v12;
  uint64_t v102 = sub_1C151631C();
  uint64_t v100 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  uint64_t v99 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C151635C();
  uint64_t v105 = *(void *)(v14 - 8);
  uint64_t v106 = v14;
  MEMORY[0x1F4188790](v14);
  unint64_t v104 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE38B54(0, &qword_1EB87A4F8, (uint64_t (*)(void))sub_1BFE38CCC, (uint64_t)&type metadata for FormatContent.CodingKeys, v3);
  uint64_t v17 = v16;
  uint64_t v103 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v91 - v18;
  uint64_t v20 = type metadata accessor for FormatContent(0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (uint64_t *)((char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE38CCC();
  uint64_t v23 = v107;
  sub_1C1520EBC();
  if (v23) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v25 = v104;
  uint64_t v24 = v105;
  uint64_t v26 = v106;
  uint64_t v107 = a1;
  unint64_t v91 = (int *)v20;
  unint64_t v92 = v22;
  LOBYTE(v109) = 0;
  uint64_t v27 = sub_1C152060C();
  uint64_t v29 = v19;
  uint64_t v31 = v28;
  if (v28)
  {
    uint64_t v32 = v27;
  }
  else
  {
    sub_1C151634C();
    uint64_t v32 = sub_1C151633C();
    uint64_t v31 = v33;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  }
  uint64_t v34 = v102;
  char v35 = v92;
  *unint64_t v92 = v32;
  v35[1] = v31;
  LOBYTE(v109) = 1;
  sub_1BFE38930(&qword_1EB871168, MEMORY[0x1E4F27928]);
  uint64_t v36 = (uint64_t)v101;
  sub_1C152065C();
  uint64_t v37 = v100;
  int v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 48))(v36, 1, v34);
  uint64_t v106 = 0;
  if (v38 == 1)
  {
    uint64_t v39 = v99;
    sub_1C151630C();
    sub_1BFDDF830(v36, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
  }
  else
  {
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
    uint64_t v39 = v99;
    v40(v99, v36, v34);
  }
  uint64_t v41 = v91;
  uint64_t v42 = v92;
  v40((char *)v92 + v91[5], (uint64_t)v39, v34);
  LOBYTE(v109) = 2;
  uint64_t v43 = v106;
  uint64_t v44 = sub_1C152060C();
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v103 + 8))(v29, v17);
    int v46 = 0;
    int v47 = 0;
    int v48 = 0;
    int v49 = 0;
    int v50 = 0;
    int v51 = 0;
    uint64_t v52 = v42;
    uint64_t v53 = v106;
    goto LABEL_17;
  }
  uint64_t v54 = (uint64_t *)((char *)v42 + v41[6]);
  *uint64_t v54 = v44;
  v54[1] = v45;
  LOBYTE(v109) = 3;
  uint64_t v55 = v29;
  uint64_t v56 = sub_1C152060C();
  unint64_t v57 = v42;
  unint64_t v58 = (uint64_t *)((char *)v42 + v41[7]);
  *unint64_t v58 = v56;
  v58[1] = v59;
  LOBYTE(v109) = 4;
  uint64_t v60 = sub_1C152060C();
  uint64_t v61 = (uint64_t *)((char *)v42 + v41[8]);
  *uint64_t v61 = v60;
  v61[1] = v62;
  LOBYTE(v109) = 5;
  uint64_t v63 = sub_1C152060C();
  int64_t v64 = (uint64_t *)((char *)v42 + v41[9]);
  *int64_t v64 = v63;
  v64[1] = v65;
  sub_1BFE38BF0(0);
  uint64_t v67 = v66;
  LOBYTE(v109) = 13;
  sub_1BFE38930(&qword_1EB884880, sub_1BFE38BF0);
  uint64_t v68 = v98;
  sub_1C152065C();
  uint64_t v105 = (uint64_t)v55;
  uint64_t v69 = (uint64_t)v68;
  uint64_t v70 = *(void *)(v67 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v69, 1, v67) == 1)
  {
    sub_1BFDDF830(v69, &qword_1EB8812C0, (uint64_t (*)(uint64_t))sub_1BFE38BF0);
    uint64_t v71 = sub_1C151D6DC();
    uint64_t v72 = (uint64_t)v97;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v97, 1, 1, v71);
  }
  else
  {
    uint64_t v72 = (uint64_t)v97;
    sub_1C151948C();
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v67);
    uint64_t v73 = sub_1C151D6DC();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v72, 0, 1, v73);
  }
  sub_1C0EDAC08(v72, (uint64_t)v42 + v41[10]);
  sub_1BFE9DFF4(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  char v108 = 6;
  sub_1BFD4A9F4((unint64_t *)&qword_1EB879F50);
  sub_1C152065C();
  uint64_t v76 = v109;
  uint64_t v77 = v17;
  uint64_t v78 = MEMORY[0x1E4FBC860];
  if (!v109) {
    uint64_t v76 = MEMORY[0x1E4FBC860];
  }
  *(uint64_t *)((char *)v57 + v41[11]) = v76;
  char v108 = 7;
  sub_1C152065C();
  LODWORD(v101) = 1;
  uint64_t v79 = v109;
  if (!v109) {
    uint64_t v79 = v78;
  }
  *(uint64_t *)((char *)v57 + v41[12]) = v79;
  char v108 = 8;
  sub_1C152065C();
  uint64_t v80 = v109;
  if (!v109) {
    uint64_t v80 = v78;
  }
  *(uint64_t *)((char *)v92 + v91[13]) = v80;
  char v108 = 10;
  sub_1BFE38C24();
  sub_1C15206EC();
  uint64_t v81 = v91[15];
  *(uint64_t *)((char *)v92 + v81) = v109;
  sub_1BFE9DFF4(0, (unint64_t *)&qword_1EB879DC0, (uint64_t)&type metadata for FormatProperty, MEMORY[0x1E4FBB320]);
  char v108 = 11;
  sub_1BFDB24C8((unint64_t *)&qword_1EB879DC8, (void (*)(void))sub_1C0081A44);
  sub_1C152065C();
  uint64_t v82 = v109;
  if (!v109) {
    uint64_t v82 = v78;
  }
  *(uint64_t *)((char *)v92 + v91[16]) = v82;
  sub_1BFD8B4C0(0, (unint64_t *)&qword_1EB87A010, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBB510]);
  char v108 = 12;
  sub_1BFE38AC8((unint64_t *)&qword_1EB87A020);
  sub_1C152065C();
  uint64_t v83 = v109;
  if (!v109) {
    uint64_t v83 = MEMORY[0x1E4FBC870];
  }
  *(uint64_t *)((char *)v92 + v91[17]) = v83;
  __swift_project_boxed_opaque_existential_1(v107, v107[3]);
  uint64_t v84 = sub_1C1520EAC();
  char v85 = Dictionary<>.bindingContent.getter(v84);
  swift_bridgeObjectRelease();
  if ((v85 & 1) == 0)
  {
    __swift_project_boxed_opaque_existential_1(v107, v107[3]);
    sub_1BFE38C78();
    sub_1C1520EBC();
    sub_1BFEBC598(0);
    sub_1BFE38930(&qword_1EB88F950, sub_1BFEBC598);
    sub_1C152065C();
    uint64_t v88 = v109;
    if (v109)
    {
      if (*(void *)(v109 + 16))
      {
        (*(void (**)(char *, uint64_t))(v93 + 8))(v96, v94);
        *(uint64_t *)((char *)v92 + v91[14]) = v88;
        goto LABEL_57;
      }
      swift_bridgeObjectRelease();
    }
    sub_1C00FCB2C();
    uint64_t v89 = (void *)swift_allocError();
    unsigned char *v90 = 1;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v96, v94);
    sub_1BFE38D20();
    char v108 = 9;
    sub_1BFE38930((unint64_t *)&unk_1EB878E00, (void (*)(uint64_t))sub_1BFE38D20);
    sub_1C15206EC();

    *(uint64_t *)((char *)v92 + v91[14]) = v109;
    goto LABEL_57;
  }
  *(uint64_t *)((char *)v92 + v91[14]) = v78;
LABEL_57:
  if (*(void *)(*(uint64_t *)((char *)v92 + v81) + 16))
  {
    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v105, v77);
    uint64_t v86 = v92;
    sub_1BFE3391C((uint64_t)v92, v95, type metadata accessor for FormatContent);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
    return sub_1BFE38718((uint64_t)v86, type metadata accessor for FormatContent);
  }
  sub_1C00FCB2C();
  swift_allocError();
  unsigned char *v87 = 0;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v105, v77);
  int v46 = 1;
  int v47 = 1;
  int v48 = 1;
  int v49 = 1;
  int v50 = 1;
  int v51 = 1;
  uint64_t v52 = v92;
  uint64_t v53 = v106;
LABEL_17:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
  uint64_t result = swift_bridgeObjectRelease();
  if (v53)
  {
    int v74 = v51;
    LODWORD(v104) = v51;
    LODWORD(v103) = v51;
    LODWORD(v105) = v51;
    LODWORD(v106) = v51;
    LODWORD(v107) = v51;
    if (v46) {
      goto LABEL_19;
    }
  }
  else
  {
    LODWORD(v106) = v51;
    LODWORD(v105) = v51;
    LODWORD(v103) = v51;
    LODWORD(v104) = v51;
    LODWORD(v101) = v51;
    LODWORD(v107) = v51;
    uint64_t v52 = v92;
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v100 + 8))((uint64_t)v92 + v91[5], v102);
    int v74 = (int)v101;
    if (v46)
    {
LABEL_19:
      uint64_t v75 = v91;
      uint64_t result = swift_bridgeObjectRelease();
      if ((v47 & 1) == 0) {
        goto LABEL_20;
      }
      goto LABEL_33;
    }
  }
  uint64_t v75 = v91;
  if (!v47)
  {
LABEL_20:
    if (v48) {
      goto LABEL_21;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = swift_bridgeObjectRelease();
  if (v48)
  {
LABEL_21:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v49 & 1) == 0) {
      goto LABEL_22;
    }
    goto LABEL_35;
  }
LABEL_34:
  if (!v49)
  {
LABEL_22:
    if (v50) {
      goto LABEL_23;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = swift_bridgeObjectRelease();
  if (v50)
  {
LABEL_23:
    uint64_t result = sub_1BFDDF830((uint64_t)v52 + v75[10], (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
    if ((v51 & 1) == 0) {
      goto LABEL_24;
    }
    goto LABEL_37;
  }
LABEL_36:
  if (!v51)
  {
LABEL_24:
    if (v74) {
      goto LABEL_25;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = swift_bridgeObjectRelease();
  if (v74)
  {
LABEL_25:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v104 & 1) == 0) {
      goto LABEL_26;
    }
    goto LABEL_39;
  }
LABEL_38:
  if (!v104)
  {
LABEL_26:
    if (v103) {
      goto LABEL_27;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = swift_bridgeObjectRelease();
  if (v103)
  {
LABEL_27:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v105 & 1) == 0) {
      goto LABEL_28;
    }
    goto LABEL_41;
  }
LABEL_40:
  if (!v105)
  {
LABEL_28:
    if (v106) {
      goto LABEL_29;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = swift_bridgeObjectRelease();
  if (v106)
  {
LABEL_29:
    uint64_t result = swift_bridgeObjectRelease();
    if (v107) {
      return swift_bridgeObjectRelease();
    }
    return result;
  }
LABEL_42:
  if (v107) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BFE386B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFE38718(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for FormatContent(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB874448);
}

uint64_t destroy for FormatContent(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  uint64_t v7 = sub_1C151D6DC();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFE38930(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE38978(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFEBC4B4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE389D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE38A3C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFE82920(255, (unint64_t *)&qword_1EB87A010, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBB510]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE38AC8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFD8B4C0(255, (unint64_t *)&qword_1EB87A010, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBB510]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFE38B54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFE38BBC(uint64_t a1)
{
}

void sub_1BFE38BF0(uint64_t a1)
{
}

unint64_t sub_1BFE38C24()
{
  unint64_t result = qword_1EB879158;
  if (!qword_1EB879158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879158);
  }
  return result;
}

unint64_t sub_1BFE38C78()
{
  unint64_t result = qword_1EB887258;
  if (!qword_1EB887258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887258);
  }
  return result;
}

unint64_t sub_1BFE38CCC()
{
  unint64_t result = qword_1EB874430;
  if (!qword_1EB874430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874430);
  }
  return result;
}

void sub_1BFE38D20()
{
  if (!qword_1EB878E10)
  {
    type metadata accessor for FormatPackage();
    sub_1C085F050((unint64_t *)&unk_1EB887270, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    unint64_t v0 = type metadata accessor for FormatFileReferenceCollection();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB878E10);
    }
  }
}

unint64_t sub_1BFE38DB4()
{
  unint64_t result = qword_1EB8758D0;
  if (!qword_1EB8758D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8758D0);
  }
  return result;
}

uint64_t sub_1BFE38E08(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for FormatContentSlotItemObject(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return swift_release();
    case 5:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for FormatWebEmbed();
      uint64_t v4 = a1 + *(int *)(v3 + 20);
      uint64_t v5 = sub_1C1515FDC();
      uint64_t v6 = *(void *)(v5 - 8);
      uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v7(v4, v5);
      uint64_t v8 = a1 + *(int *)(v3 + 24);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
        v7(v8, v5);
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    case 8:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    case 9:
      goto LABEL_12;
    case 10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = a1 + *(int *)(type metadata accessor for FormatCustomItem() + 24);
      uint64_t v10 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
      {
        uint64_t v11 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v9, v11);
      }
      swift_bridgeObjectRelease();
LABEL_12:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFE390E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFE39118(a1, a2, a3, *v3, (unint64_t *)&unk_1EB890460, (uint64_t)&type metadata for FormatContentRequirement);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1BFE39118(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    sub_1BFF66364(0, a5, a6, MEMORY[0x1E4FBBE00]);
    uint64_t v12 = (char *)swift_allocObject();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 48);
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = v12 + 32;
  uint64_t v15 = a4 + 32;
  size_t v16 = 48 * v10;
  if (a1)
  {
    if (v12 != a4 || v14 >= &v15[v16]) {
      memmove(v14, v15, v16);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t destroy for FeedContext(id *a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for BundleSession();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = &v4[*(int *)(v5 + 20)];
    uint64_t v7 = sub_1C151631C();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(char **)((char *)a1 + a2[12] + 8) - 1 >= (char *)3) {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFE393EC(void *a1)
{
  return FormatViewNodeStyle.Selector.encode(to:)(a1);
}

uint64_t FormatViewNodeStyle.Selector.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v54 = (uint64_t (*)(uint64_t))&v52[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v56 = (uint64_t (*)(uint64_t))&v52[-v6];
  MEMORY[0x1F4188790](v7);
  unint64_t v57 = (uint64_t (*)(uint64_t))&v52[-v8];
  MEMORY[0x1F4188790](v9);
  uint64_t v61 = (uint64_t (*)(uint64_t))&v52[-v10];
  MEMORY[0x1F4188790](v11);
  uint64_t v63 = (uint64_t (*)(uint64_t))&v52[-v12];
  MEMORY[0x1F4188790](v13);
  uint64_t v65 = (uint64_t (*)(uint64_t))&v52[-v14];
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v52[-v16];
  sub_1C08CBCEC();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = &v52[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = *(void *)(v1 + 8);
  uint64_t v67 = *(void *)v1;
  uint64_t v64 = *(void *)(v1 + 16);
  uint64_t v62 = *(void *)(v1 + 24);
  uint64_t v22 = *(void *)(v1 + 32);
  uint64_t v59 = *(void *)(v1 + 40);
  uint64_t v60 = v22;
  int v58 = *(unsigned __int8 *)(v1 + 48);
  sub_1BFE99AAC(v1 + 56, (uint64_t)v68, &qword_1EB85B6E0, (uint64_t)&type metadata for FormatShadow);
  uint64_t v55 = *(void *)(v1 + 144);
  int v53 = *(unsigned __int8 *)(v1 + 152);
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_1C08CBBC0();
  uint64_t v26 = v25;
  uint64_t v27 = sub_1C085F050(&qword_1EB891E50, (void (*)(uint64_t))sub_1C08CBBC0);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatViewNodeStyle.Selector, v28, v23, (uint64_t)&type metadata for FormatViewNodeStyle.Selector, v26, (uint64_t)&type metadata for FormatVersions.JazzkonC, v24, (uint64_t)v20, v27, (uint64_t)&off_1F1C39B68);
  uint64_t v29 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v29 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1C151928C();
  uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1EB93CAB0);
  uint64_t v32 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
  uint64_t v66 = v31;
  ((void (*)(unsigned char *))v32)(v17);
  uint64_t v33 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = (uint64_t)v20;
  char v35 = v69;
  sub_1C06BC400(v67, v21, 0, 0, 0, (uint64_t)v17, (uint64_t)sub_1C01B158C, 0);
  if (v35)
  {
    sub_1BFEFEB68((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v36 = v65;
    uint64_t v37 = v66;
    v32(v65, v66, v30);
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = v64;
    sub_1BFEF683C(v64);
    sub_1C070F434(v38, 1, 0, 0, (uint64_t)v36, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68((uint64_t)v36, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF68C0(v38);
    uint64_t v40 = (uint64_t)v63;
    v32(v63, v37, v30);
    swift_storeEnumTagMultiPayload();
    uint64_t v41 = swift_bridgeObjectRetain();
    sub_1C070F68C(v41, 2, 0, 0, v40, (uint64_t)sub_1C01B158C, 0);
    uint64_t v65 = type metadata accessor for FormatVersionRequirement;
    sub_1BFEFEB68(v40, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v69 = v32;
    uint64_t v42 = (uint64_t)v61;
    v69(v61, v37, v30);
    swift_storeEnumTagMultiPayload();
    uint64_t v67 = v33;
    uint64_t v43 = v59;
    uint64_t v44 = v60;
    LOBYTE(v40) = v58;
    sub_1BFEF6828(v60, v59, v58);
    sub_1C070F8F0(v44, v43, v40, 3, 0, 0, v42, (uint64_t)sub_1C01B158C);
    uint64_t v45 = v42;
    int v46 = v69;
    sub_1BFEFEB68(v45, v65);
    sub_1BFEF68AC(v44, v43, v40);
    uint64_t v47 = (uint64_t)v57;
    v46(v57, v66, v30);
    swift_storeEnumTagMultiPayload();
    sub_1BFE99EB4((uint64_t)v68, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8708);
    sub_1C070FB64((uint64_t)v68, 4, 0, 0, v47, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v47, type metadata accessor for FormatVersionRequirement);
    sub_1BFE99EB4((uint64_t)v68, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8738);
    uint64_t v48 = (uint64_t)v56;
    v46(v56, v66, v30);
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = swift_bridgeObjectRetain();
    sub_1C070FE98(v49, 5, 0, 0, v48, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v48, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    if (qword_1EB887600 != -1) {
      swift_once();
    }
    uint64_t v50 = __swift_project_value_buffer(v30, (uint64_t)qword_1EB93CA08);
    uint64_t v51 = (uint64_t)v54;
    v46(v54, v50, v30);
    swift_storeEnumTagMultiPayload();
    sub_1C0710110(v53, 6, 0, 0, v51, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v51, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BFEFEB68(v34, (uint64_t (*)(void))sub_1C08CBCEC);
}

unint64_t sub_1BFE39C70()
{
  unint64_t result = qword_1EB85B9F8;
  if (!qword_1EB85B9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B9F8);
  }
  return result;
}

unint64_t sub_1BFE39CC4()
{
  unint64_t result = qword_1EB85C340;
  if (!qword_1EB85C340)
  {
    sub_1BFE9DEBC(255, &qword_1EB879D28, (uint64_t)&type metadata for FormatBorder, MEMORY[0x1E4FBB320]);
    sub_1C00833AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C340);
  }
  return result;
}

uint64_t sub_1BFE39D58(uint64_t a1)
{
  return sub_1BFE39D80(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1BFE39D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151A31C();
  sub_1C151A30C();
  (*(void (**)(uint64_t, uint64_t))(a6 + 8))(a3, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, a3);
}

unint64_t destroy for FeedBannerAd(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C151DBAC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unint64_t result = *(void *)(a1 + *(int *)(a2 + 32) + 8);
  if (result >= 0x11)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t destroy for SportsDataVisualizationEventStatus()
{
  return swift_release();
}

void *sub_1BFE39F44@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_1BFE3BB58(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFE39F70(void *a1)
{
  sub_1BFE89214();
  uint64_t v56 = *(void *)(v2 - 8);
  uint64_t v57 = v2;
  MEMORY[0x1F4188790](v2);
  int v58 = &v44[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0908CDC(0, &qword_1EB87C750, (void (*)(void))sub_1C007F424, (void (*)(void))sub_1C007F478);
  uint64_t v5 = v4;
  uint64_t v59 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v44[-v6];
  sub_1C08EA404();
  uint64_t v9 = v8;
  uint64_t v60 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v44[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08CB298();
  sub_1C085F050(&qword_1EB892590, (void (*)(uint64_t))sub_1C08CB298);
  uint64_t v13 = (uint64_t)v61;
  sub_1C1520EBC();
  uint64_t v14 = (void *)v13;
  if (v13)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  uint64_t v61 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v15 = sub_1C1520EAC();
  char v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    uint64_t v17 = sub_1C152070C();
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = (unsigned char *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18) {
          goto LABEL_7;
        }
      }
      uint64_t v24 = *((void *)v19 - 2);
      uint64_t v23 = *((void *)v19 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v25 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v25);
      sub_1C08CB31C();
      sub_1BFE3AC48();
      sub_1C08CB370();
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
      uint64_t v26 = sub_1C085FB14((uint64_t)&unk_1F1B69870);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v14 = (void *)swift_allocError();
      *(void *)uint64_t v27 = v24;
      *(void *)(v27 + 8) = v23;
      *(void *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v24, v23, 1);
      (*(void (**)(unsigned char *, uint64_t))(v60 + 8))(v11, v9);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = sub_1C07F0DDC((uint64_t)v11, 0, 0, 0, (void (*)(void, __n128))sub_1C08EA404);
  uint64_t v22 = v21;
  long long v65 = xmmword_1C153AB20;
  char v66 = 0;
  sub_1BFE1CFFC();
  sub_1C15206EC();
  uint64_t v28 = v62;
  long long v65 = xmmword_1C1557FA0;
  char v66 = 0;
  sub_1BFE3CEF4();
  sub_1C152065C();
  uint64_t v52 = v20;
  uint64_t v30 = v62;
  long long v54 = xmmword_1C1557FB0;
  long long v65 = xmmword_1C1557FB0;
  char v66 = 0;
  if (sub_1C152071C())
  {
    uint64_t v55 = v30;
    long long v62 = v54;
    char v63 = 0;
    sub_1C08B07C8();
    sub_1C15206EC();
    uint64_t v53 = v28;
    uint64_t v31 = (uint64_t)v61;
    *(void *)&long long v54 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v31, v5);
    uint64_t v30 = v55;
  }
  else
  {
    uint64_t v53 = v28;
    *(void *)&long long v54 = MEMORY[0x1E4FBC860];
  }
  type metadata accessor for FormatViewNodeStyle();
  long long v65 = xmmword_1C1557FD0;
  char v66 = 0;
  sub_1C085F050(&qword_1EB889208, (void (*)(uint64_t))type metadata accessor for FormatViewNodeStyle);
  sub_1C152065C();
  uint64_t v55 = v30;
  uint64_t v32 = v62;
  type metadata accessor for FormatAnimationNodeStyle();
  long long v65 = xmmword_1C1557FC0;
  char v66 = 0;
  sub_1C085F050(&qword_1EB87FA18, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle);
  sub_1C152065C();
  uint64_t v61 = (unsigned char *)v32;
  uint64_t v59 = v62;
  long long v51 = xmmword_1C1557FE0;
  long long v65 = xmmword_1C1557FE0;
  char v66 = 0;
  if (sub_1C152071C())
  {
    long long v62 = v51;
    char v63 = 0;
    sub_1C15206EC();
    uint64_t v33 = v55;
    unint64_t v50 = v67;
  }
  else
  {
    unint64_t v50 = 0;
    uint64_t v33 = v55;
  }
  long long v51 = xmmword_1C1557FF0;
  long long v65 = xmmword_1C1557FF0;
  char v66 = 0;
  if (sub_1C152071C())
  {
    long long v62 = v51;
    char v63 = 0;
    sub_1BFE3D540();
    sub_1C15206EC();
    unint64_t v34 = v67;
  }
  else
  {
    unint64_t v34 = 0x8000000000000000;
  }
  *(void *)&long long v51 = v34;
  long long v49 = xmmword_1C1558010;
  long long v65 = xmmword_1C1558010;
  char v66 = 0;
  if (sub_1C152071C())
  {
    long long v62 = v49;
    char v63 = 0;
    sub_1C15206EC();
    int v35 = v67;
  }
  else
  {
    int v35 = 1;
  }
  long long v65 = xmmword_1C1558020;
  char v66 = 0;
  sub_1BFE3CF9C();
  sub_1C152065C();
  int v47 = v35;
  *(void *)&long long v49 = v22;
  uint64_t v46 = v62;
  int v45 = BYTE8(v62);
  long long v48 = xmmword_1C1558030;
  long long v65 = xmmword_1C1558030;
  char v66 = 0;
  if (sub_1C152071C())
  {
    long long v62 = v48;
    char v63 = 0;
    sub_1C085F050(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    uint64_t v36 = v57;
    uint64_t v37 = v58;
    uint64_t v38 = v11;
    sub_1C15206EC();
    uint64_t v39 = sub_1C1517E5C();
    (*(void (**)(unsigned char *, uint64_t))(v56 + 8))(v37, v36);
    uint64_t v33 = v55;
  }
  else
  {
    uint64_t v38 = v11;
    uint64_t v39 = MEMORY[0x1E4FBC870];
  }
  long long v65 = xmmword_1C1558040;
  char v66 = 0;
  uint64_t v40 = sub_1C152060C();
  uint64_t v42 = v41;
  (*(void (**)(unsigned char *, uint64_t))(v60 + 8))(v38, v9);
  *(void *)&long long v62 = v53;
  unint64_t v67 = v33;
  uint64_t v64 = v51;
  *(void *)&long long v65 = v46;
  BYTE8(v65) = v45;
  type metadata accessor for FormatViewNode();
  swift_allocObject();
  *((void *)&v43 + 1) = v40;
  *(void *)&long long v43 = v39;
  uint64_t KeyPath = FormatViewNode.init(identifier:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:)(v52, v49, (uint64_t *)&v62, (uint64_t *)&v67, v54, (uint64_t)v61, v59, v50, &v64, v47, (uint64_t *)&v65, v43, v42);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

unint64_t sub_1BFE3AC48()
{
  unint64_t result = qword_1EB887680;
  if (!qword_1EB887680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887680);
  }
  return result;
}

uint64_t sub_1BFE3AC9C(void *a1)
{
  sub_1BFE89214();
  uint64_t v62 = *(void *)(v2 - 8);
  uint64_t v63 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v64 = &v50[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0908CDC(0, &qword_1EB87C750, (void (*)(void))sub_1C007F424, (void (*)(void))sub_1C007F478);
  uint64_t v5 = v4;
  uint64_t v65 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v50[-v6];
  sub_1C08F8E88();
  uint64_t v9 = v8;
  uint64_t v66 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v50[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C088F78C();
  sub_1C085F050(&qword_1EB8925D0, (void (*)(uint64_t))sub_1C088F78C);
  uint64_t v13 = v67;
  sub_1C1520EBC();
  uint64_t v14 = v13;
  if (v13) {
    goto LABEL_12;
  }
  uint64_t v61 = v7;
  unint64_t v67 = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t KeyPath = sub_1C1520EAC();
  uint64_t v15 = Dictionary<>.errorOnUnknownKeys.getter(KeyPath);
  swift_bridgeObjectRelease();
  char v16 = v11;
  if (v15)
  {
    uint64_t v17 = sub_1C152070C();
    uint64_t KeyPath = v17;
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = (unsigned char *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18) {
          goto LABEL_7;
        }
      }
      uint64_t v26 = *((void *)v19 - 2);
      uint64_t v25 = *((void *)v19 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v27 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v27);
      sub_1C088F810();
      sub_1BFE3D188();
      sub_1C088F864();
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
      uint64_t v28 = sub_1C085FB14((uint64_t)&unk_1F1B69920);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v29 = swift_allocError();
      *(void *)uint64_t v30 = v26;
      *(void *)(v30 + 8) = v25;
      *(void *)(v30 + 16) = v28;
      uint64_t v14 = (void *)v29;
      *(_OWORD *)(v30 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v26, v25, 1);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = v67;
  uint64_t v21 = sub_1C07F0DDC((uint64_t)v11, 0, 0, 0, (void (*)(void, __n128))sub_1C08F8E88);
  uint64_t v14 = v20;
  if (v20)
  {
LABEL_11:
    (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v11, v9);
LABEL_12:
    sub_1C0038728(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  uint64_t v23 = v21;
  uint64_t v24 = v22;
  long long v72 = xmmword_1C153AB20;
  char v73 = 0;
  sub_1BFE1CFFC();
  sub_1C15206EC();
  uint64_t v31 = (void *)v68;
  long long v72 = xmmword_1C1557FA0;
  char v73 = 0;
  sub_1BFE3CEF4();
  sub_1C152065C();
  unint64_t v67 = v31;
  uint64_t v33 = v68;
  long long v59 = xmmword_1C1557FB0;
  long long v72 = xmmword_1C1557FB0;
  char v73 = 0;
  char v34 = sub_1C152071C();
  uint64_t v60 = v33;
  if (v34)
  {
    long long v68 = v59;
    char v69 = 0;
    sub_1C08B07C8();
    sub_1C15206EC();
    *(void *)&long long v59 = v23;
    uint64_t v35 = (uint64_t)v61;
    uint64_t v36 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v35, v5);
  }
  else
  {
    *(void *)&long long v59 = v23;
    uint64_t v36 = MEMORY[0x1E4FBC860];
  }
  type metadata accessor for FormatImageNodeStyle();
  long long v72 = xmmword_1C1557FD0;
  char v73 = 0;
  sub_1C085F050(&qword_1EB889800, (void (*)(uint64_t))type metadata accessor for FormatImageNodeStyle);
  sub_1C152065C();
  uint64_t v37 = v68;
  type metadata accessor for FormatAnimationNodeStyle();
  long long v72 = xmmword_1C1557FC0;
  char v73 = 0;
  sub_1C085F050(&qword_1EB87FA18, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle);
  sub_1C152065C();
  uint64_t v65 = v37;
  uint64_t v38 = v68;
  long long v72 = xmmword_1C1557FE0;
  char v73 = 0;
  sub_1BFE3D1DC();
  sub_1C15206EC();
  uint64_t v61 = (unsigned char *)v36;
  uint64_t v39 = v68;
  long long v58 = xmmword_1C1557FF0;
  long long v72 = xmmword_1C1557FF0;
  char v73 = 0;
  if (sub_1C152071C())
  {
    long long v68 = v58;
    char v69 = 0;
    sub_1C15206EC();
    uint64_t v57 = v74;
  }
  else
  {
    uint64_t v57 = 0;
  }
  long long v58 = xmmword_1C1558010;
  long long v72 = xmmword_1C1558010;
  char v73 = 0;
  if (sub_1C152071C())
  {
    long long v68 = v58;
    char v69 = 0;
    sub_1BFE3D540();
    sub_1C15206EC();
    unint64_t v40 = v74;
  }
  else
  {
    unint64_t v40 = 0x8000000000000000;
  }
  *(void *)&long long v58 = v40;
  long long v56 = xmmword_1C1558020;
  long long v72 = xmmword_1C1558020;
  char v73 = 0;
  if (sub_1C152071C())
  {
    long long v68 = v56;
    char v69 = 0;
    sub_1C15206EC();
    *(void *)&long long v56 = v24;
    uint64_t v41 = v16;
    char v42 = v74;
  }
  else
  {
    *(void *)&long long v56 = v24;
    uint64_t v41 = v16;
    char v42 = 1;
  }
  long long v55 = xmmword_1C1558030;
  long long v72 = xmmword_1C1558030;
  char v73 = 0;
  if (sub_1C152071C())
  {
    long long v68 = v55;
    char v69 = 0;
    sub_1C15206EC();
    char v43 = v74;
  }
  else
  {
    char v43 = 0;
  }
  long long v72 = xmmword_1C1558040;
  char v73 = 0;
  sub_1BFE3CF9C();
  sub_1C152065C();
  uint64_t v54 = v38;
  uint64_t v52 = v68;
  int v51 = BYTE8(v68);
  long long v53 = xmmword_1C1558050;
  long long v72 = xmmword_1C1558050;
  char v73 = 0;
  *(void *)&long long v55 = v9;
  uint64_t v44 = v41;
  if (sub_1C152071C())
  {
    long long v68 = v53;
    char v69 = 0;
    sub_1C085F050(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    sub_1C15206EC();
    uint64_t v46 = v63;
    int v45 = v64;
    *(void *)&long long v53 = sub_1C1517E5C();
    (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v45, v46);
  }
  else
  {
    *(void *)&long long v53 = MEMORY[0x1E4FBC870];
  }
  long long v72 = xmmword_1C1533150;
  char v73 = 0;
  uint64_t v47 = sub_1C152060C();
  uint64_t v49 = v48;
  *(void *)&long long v68 = v67;
  uint64_t v74 = v60;
  uint64_t v70 = v58;
  uint64_t v71 = v39;
  *(void *)&long long v72 = v52;
  BYTE8(v72) = v51;
  type metadata accessor for FormatImageNode();
  swift_allocObject();
  uint64_t KeyPath = FormatImageNode.init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:shouldCancelContextMenu:accessibilityRole:selectors:name:)(v59, v56, (uint64_t *)&v68, &v74, (uint64_t)v61, v65, v54, &v71, v57, &v70, v42, v43, (uint64_t *)&v72, v53, v47, v49);
  (*(void (**)(unsigned char *, void))(v66 + 8))(v44, v55);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

void *sub_1BFE3BB58(void *a1)
{
  sub_1C0908CDC(0, &qword_1EB890B38, (void (*)(void))sub_1C08F7950, (void (*)(void))sub_1C08F77C4);
  uint64_t v74 = v2;
  uint64_t v71 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v73 = &v55[-v3];
  sub_1BFE89214();
  *(void *)&long long v76 = v4;
  uint64_t v72 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v75 = &v55[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0908CDC(0, &qword_1EB87C750, (void (*)(void))sub_1C007F424, (void (*)(void))sub_1C007F478);
  uint64_t v7 = v6;
  uint64_t v77 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v55[-v8];
  sub_1C09052A4();
  uint64_t v11 = v10;
  uint64_t v78 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v55[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08683A0();
  sub_1C085F050(&qword_1EB892570, (void (*)(uint64_t))sub_1C08683A0);
  uint64_t v14 = (uint64_t)v79;
  sub_1C1520EBC();
  uint64_t v15 = (void *)v14;
  if (v14) {
    goto LABEL_10;
  }
  uint64_t v79 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v16 = sub_1C1520EAC();
  char v17 = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  uint64_t v18 = v13;
  if (v17)
  {
    uint64_t v19 = sub_1C152070C();
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v21 = (unsigned char *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20) {
          goto LABEL_7;
        }
      }
      uint64_t v26 = *((void *)v21 - 2);
      uint64_t v25 = *((void *)v21 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v27 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v27);
      sub_1C0868424();
      sub_1BFE3D068();
      sub_1C0868478();
      swift_getKeyPath();
      swift_retain();
      uint64_t v28 = sub_1C085FB14((uint64_t)&unk_1F1B69808);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v15 = (void *)swift_allocError();
      *(void *)uint64_t v29 = v26;
      *(void *)(v29 + 8) = v25;
      *(void *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v26, v25, 1);
      (*(void (**)(unsigned char *, uint64_t))(v78 + 8))(v13, v11);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = sub_1C07F0DDC((uint64_t)v13, 0, 0, 0, (void (*)(void, __n128))sub_1C09052A4);
  uint64_t v24 = v23;
  long long v86 = xmmword_1C153AB20;
  LOBYTE(v87) = 0;
  sub_1BFE3D110();
  sub_1C15206EC();
  unint64_t v30 = v84;
  long long v86 = xmmword_1C1557FA0;
  LOBYTE(v87) = 0;
  sub_1BFE3CEF4();
  sub_1C152065C();
  uint64_t v67 = v22;
  uint64_t v70 = 0;
  uint64_t v32 = v84;
  long long v68 = xmmword_1C1557FB0;
  long long v86 = xmmword_1C1557FB0;
  LOBYTE(v87) = 0;
  if (sub_1C152071C())
  {
    uint64_t v69 = v32;
    long long v84 = v68;
    char v85 = 0;
    sub_1C08B07C8();
    uint64_t v33 = (uint64_t)v79;
    uint64_t v34 = v70;
    sub_1C15206EC();
    uint64_t v15 = (void *)v34;
    if (v34)
    {
      swift_bridgeObjectRelease();
      sub_1BFF8B438(v30);
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v78 + 8))(v18, v11);
LABEL_10:
      sub_1C0038728(a1, (uint64_t)v15);
      swift_willThrow();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      return v15;
    }
    *(void *)&long long v68 = v30;
    uint64_t v70 = 0;
    uint64_t v35 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v33, v7);
    uint64_t v32 = v69;
  }
  else
  {
    *(void *)&long long v68 = v30;
    uint64_t v35 = MEMORY[0x1E4FBC860];
  }
  type metadata accessor for FormatTextNodeStyle();
  long long v86 = xmmword_1C1557FD0;
  LOBYTE(v87) = 0;
  sub_1C085F050(&qword_1EB8890A0, (void (*)(uint64_t))type metadata accessor for FormatTextNodeStyle);
  uint64_t v36 = v70;
  sub_1C152065C();
  uint64_t v15 = (void *)v36;
  if (v36)
  {
    (*(void (**)(unsigned char *, uint64_t))(v78 + 8))(v18, v11);
    sub_1BFF8B438(v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_10;
  }
  uint64_t v69 = v32;
  uint64_t v37 = v84;
  type metadata accessor for FormatAnimationNodeStyle();
  long long v86 = xmmword_1C1557FC0;
  LOBYTE(v87) = 0;
  sub_1C085F050(&qword_1EB87FA18, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle);
  sub_1C152065C();
  uint64_t v79 = (unsigned char *)v37;
  uint64_t v38 = v84;
  long long v86 = xmmword_1C1557FE0;
  LOBYTE(v87) = 0;
  sub_1BFE3CF48();
  sub_1C15206EC();
  uint64_t v70 = v38;
  uint64_t v77 = v35;
  uint64_t v39 = v84;
  long long v84 = xmmword_1C1557FF0;
  char v85 = 0;
  sub_1BFE3D014();
  sub_1C152065C();
  uint64_t v65 = v39;
  long long v64 = v86;
  uint64_t v66 = v87;
  int v40 = v88;
  long long v63 = xmmword_1C1558010;
  long long v86 = xmmword_1C1558010;
  LOBYTE(v87) = 0;
  if (sub_1C152071C())
  {
    long long v84 = v63;
    char v85 = 0;
    sub_1C15206EC();
    uint64_t v41 = v18;
    unint64_t v60 = v89;
  }
  else
  {
    uint64_t v41 = v18;
    unint64_t v60 = 0;
  }
  long long v63 = xmmword_1C1558020;
  long long v86 = xmmword_1C1558020;
  LOBYTE(v87) = 0;
  if (sub_1C152071C())
  {
    long long v84 = v63;
    char v85 = 0;
    sub_1BFE3D540();
    sub_1C15206EC();
    LODWORD(v63) = v40;
    uint64_t v42 = v24;
    unint64_t v43 = v89;
  }
  else
  {
    LODWORD(v63) = v40;
    uint64_t v42 = v24;
    unint64_t v43 = 0x8000000000000000;
  }
  uint64_t v62 = v43;
  long long v61 = xmmword_1C1558030;
  long long v86 = xmmword_1C1558030;
  LOBYTE(v87) = 0;
  if (sub_1C152071C())
  {
    long long v84 = v61;
    char v85 = 0;
    sub_1C15206EC();
    LODWORD(v61) = v89;
  }
  else
  {
    LODWORD(v61) = 1;
  }
  long long v86 = xmmword_1C1558040;
  LOBYTE(v87) = 0;
  sub_1BFE3D0BC();
  sub_1C152065C();
  int v59 = v84;
  long long v86 = xmmword_1C1558050;
  LOBYTE(v87) = 0;
  sub_1BFE3CF9C();
  uint64_t v44 = v11;
  int v45 = v41;
  sub_1C152065C();
  uint64_t v57 = v84;
  int v56 = BYTE8(v84);
  long long v58 = xmmword_1C1533150;
  long long v86 = xmmword_1C1533150;
  LOBYTE(v87) = 0;
  if (sub_1C152071C())
  {
    long long v84 = v58;
    char v85 = 0;
    sub_1C085F050(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    sub_1C15206EC();
    uint64_t v46 = v75;
    uint64_t v47 = v76;
    uint64_t v48 = sub_1C1517E5C();
    (*(void (**)(unsigned char *, uint64_t))(v72 + 8))(v46, v47);
  }
  else
  {
    uint64_t v48 = MEMORY[0x1E4FBC870];
  }
  long long v76 = xmmword_1C1558060;
  long long v86 = xmmword_1C1558060;
  LOBYTE(v87) = 0;
  if (sub_1C152071C())
  {
    long long v84 = v76;
    char v85 = 0;
    sub_1C08F7A38();
    sub_1C15206EC();
    uint64_t v49 = v74;
    unint64_t v50 = v73;
    *(void *)&long long v76 = sub_1C1517E5C();
    (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v50, v49);
  }
  else
  {
    *(void *)&long long v76 = MEMORY[0x1E4FBC860];
  }
  long long v86 = xmmword_1C1558000;
  LOBYTE(v87) = 0;
  uint64_t v51 = sub_1C152060C();
  uint64_t v53 = v52;
  (*(void (**)(unsigned char *, uint64_t))(v78 + 8))(v45, v44);
  unint64_t v89 = v68;
  uint64_t v82 = v65;
  uint64_t v83 = v69;
  long long v86 = v64;
  uint64_t v87 = v66;
  unsigned __int16 v88 = v63;
  uint64_t v81 = v62;
  char v80 = v59;
  *(void *)&long long v84 = v57;
  BYTE8(v84) = v56;
  type metadata accessor for FormatTextNode();
  swift_allocObject();
  *((void *)&v54 + 1) = v51;
  *(void *)&long long v54 = v76;
  uint64_t v15 = (void *)sub_1C0379CD4(v67, v42, (uint64_t *)&v89, &v83, v77, (uint64_t)v79, v70, &v82, &v86, v60, &v81, v61, &v80, (uint64_t *)&v84, v48, v54, v53);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v15;
}

unint64_t sub_1BFE3CEF4()
{
  unint64_t result = qword_1EB887120;
  if (!qword_1EB887120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887120);
  }
  return result;
}

unint64_t sub_1BFE3CF48()
{
  unint64_t result = qword_1EB875BE0;
  if (!qword_1EB875BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875BE0);
  }
  return result;
}

unint64_t sub_1BFE3CF9C()
{
  unint64_t result = qword_1EB878AE8;
  if (!qword_1EB878AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878AE8);
  }
  return result;
}

uint64_t type metadata accessor for FormatAnimationNodeStyle()
{
  return self;
}

unint64_t sub_1BFE3D014()
{
  unint64_t result = qword_1EB878818;
  if (!qword_1EB878818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878818);
  }
  return result;
}

unint64_t sub_1BFE3D068()
{
  unint64_t result = qword_1EB8875B0;
  if (!qword_1EB8875B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8875B0);
  }
  return result;
}

unint64_t sub_1BFE3D0BC()
{
  unint64_t result = qword_1EB876500;
  if (!qword_1EB876500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876500);
  }
  return result;
}

unint64_t sub_1BFE3D110()
{
  unint64_t result = qword_1EB874CB8;
  if (!qword_1EB874CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874CB8);
  }
  return result;
}

uint64_t type metadata accessor for FormatImageNode()
{
  return self;
}

unint64_t sub_1BFE3D188()
{
  unint64_t result = qword_1EB8877B8;
  if (!qword_1EB8877B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8877B8);
  }
  return result;
}

unint64_t sub_1BFE3D1DC()
{
  unint64_t result = qword_1EB877B38;
  if (!qword_1EB877B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB877B38);
  }
  return result;
}

uint64_t FormatImageNode.init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:shouldCancelContextMenu:accessibilityRole:selectors:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t *a10, char a11, char a12, uint64_t *a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v21 = *a3;
  uint64_t v22 = *a4;
  uint64_t v23 = *a8;
  uint64_t v26 = *a10;
  uint64_t v27 = *a13;
  char v28 = *((unsigned char *)a13 + 8);
  *(void *)(v16 + 136) = 0;
  *(void *)(v16 + 128) = 0;
  swift_beginAccess();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  *(void *)(v16 + 32) = v21;
  *(void *)(v16 + 40) = v22;
  swift_beginAccess();
  *(void *)(v16 + 48) = a5;
  *(void *)(v16 + 56) = a6;
  *(void *)(v16 + 64) = a7;
  *(void *)(v16 + 72) = v23;
  swift_beginAccess();
  *(void *)(v16 + 80) = a9;
  swift_beginAccess();
  *(void *)(v16 + 88) = v26;
  swift_beginAccess();
  *(unsigned char *)(v16 + 96) = a11;
  swift_beginAccess();
  *(unsigned char *)(v16 + 97) = a12;
  *(void *)(v16 + 104) = v27;
  *(unsigned char *)(v16 + 112) = v28;
  swift_beginAccess();
  *(void *)(v16 + 120) = a14;
  swift_beginAccess();
  *(void *)(v16 + 128) = a15;
  *(void *)(v16 + 136) = a16;
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t FormatViewNode.init(identifier:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, char a10, uint64_t *a11, long long a12, uint64_t a13)
{
  uint64_t v20 = *a3;
  uint64_t v21 = *a4;
  uint64_t v22 = *a9;
  uint64_t v24 = *a11;
  char v25 = *((unsigned char *)a11 + 8);
  swift_beginAccess();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  *(void *)(v13 + 32) = v20;
  *(void *)(v13 + 40) = v21;
  swift_beginAccess();
  *(void *)(v13 + 48) = a5;
  *(void *)(v13 + 56) = a6;
  *(void *)(v13 + 64) = a7;
  swift_beginAccess();
  *(void *)(v13 + 72) = a8;
  swift_beginAccess();
  *(void *)(v13 + 80) = v22;
  swift_beginAccess();
  *(unsigned char *)(v13 + 88) = a10;
  *(void *)(v13 + 96) = v24;
  *(unsigned char *)(v13 + 104) = v25;
  swift_beginAccess();
  *(_OWORD *)(v13 + 112) = a12;
  *(void *)(v13 + 128) = a13;
  return v13;
}

unint64_t sub_1BFE3D540()
{
  unint64_t result = qword_1EB87E6A0;
  if (!qword_1EB87E6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87E6A0);
  }
  return result;
}

uint64_t sub_1BFE3D594(void *a1)
{
  return FormatExpression.encode(to:)(a1);
}

uint64_t FormatExpression.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v139 = (char *)&v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v138 = (char *)&v128 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v137 = (char *)&v128 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v136 = (char *)&v128 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v135 = (char *)&v128 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v134 = (char *)&v128 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v133 = (char *)&v128 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v132 = (char *)&v128 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v131 = (char *)&v128 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v129 = (char *)&v128 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v130 = (char *)&v128 - v25;
  MEMORY[0x1F4188790](v26);
  char v28 = (char *)&v128 - v27;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v128 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v128 - v33;
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)&v128 - v36;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v38 - 8);
  int v40 = (char *)&v128 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = *v2;
  uint64_t v43 = a1[3];
  uint64_t v42 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v43);
  unint64_t v44 = sub_1BFEB6A24();
  uint64_t v146 = v40;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatExpression, v45, v43, (uint64_t)&type metadata for FormatExpression, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v42, (uint64_t)v40, v44, (uint64_t)&off_1F1C39B68);
  switch(v41 >> 60)
  {
    case 1uLL:
      sub_1BFF27EB4((long long *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 16), (uint64_t)v140);
      sub_1C0884388((uint64_t)v140, (void (*)(void, void, void, void, void))sub_1BFF27F3C);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v51 = sub_1C151928C();
      uint64_t v52 = __swift_project_value_buffer(v51, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v34, v52, v51);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v53 = (uint64_t)v146;
      sub_1BFE3E850(1, v140, (uint64_t)v34);
      sub_1BFEFEB68((uint64_t)v34, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v53, (uint64_t (*)(void))sub_1BFEFF7D8);
      return sub_1C0884388((uint64_t)v140, (void (*)(void, void, void, void, void))sub_1BFE1D244);
    case 2uLL:
      uint64_t v55 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      char v56 = *(unsigned char *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_1C151928C();
      uint64_t v58 = __swift_project_value_buffer(v57, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(v31, v58, v57);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v59 = v55;
      uint64_t v60 = (uint64_t)v146;
      sub_1BFE3F068(2, v59, v56, (uint64_t)v31);
      goto LABEL_43;
    case 3uLL:
      long long v61 = *(_OWORD *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      v141[0] = *(_OWORD *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v141[1] = v61;
      uint64_t v142 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v62 = sub_1C151928C();
      uint64_t v63 = __swift_project_value_buffer(v62, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v28, v63, v62);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v60 = (uint64_t)v146;
      sub_1BFE3EE74(3, v141, (uint64_t)v28);
      uint64_t v64 = (uint64_t)v28;
      goto LABEL_55;
    case 4uLL:
      sub_1BFE3E7F4((v41 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v143);
      sub_1C088431C((uint64_t)v143, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_1C05D88FC);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v65 = sub_1C151928C();
      uint64_t v66 = __swift_project_value_buffer(v65, (uint64_t)qword_1EB93CAB0);
      uint64_t v67 = (uint64_t)v130;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v65 - 8) + 16))(v130, v66, v65);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v68 = (uint64_t)v146;
      sub_1BFE3EA98(4, (uint64_t)v143, v67);
      sub_1BFEFEB68(v67, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v68, (uint64_t (*)(void))sub_1BFEFF7D8);
      return sub_1C088431C((uint64_t)v143, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_1BFF77374);
    case 5uLL:
      uint64_t v69 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v70 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v71 = sub_1C151928C();
      uint64_t v72 = __swift_project_value_buffer(v71, (uint64_t)qword_1EB93CAB0);
      uint64_t v73 = (uint64_t)v129;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v71 - 8) + 16))(v129, v72, v71);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v74 = v69;
      uint64_t v60 = (uint64_t)v146;
      sub_1BFE3F254(5, v74, v70, v73);
      goto LABEL_54;
    case 6uLL:
      uint64_t v75 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v76 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v77 = sub_1C151928C();
      uint64_t v78 = __swift_project_value_buffer(v77, (uint64_t)qword_1EB93CA50);
      uint64_t v73 = (uint64_t)v131;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v77 - 8) + 16))(v131, v78, v77);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v79 = v75;
      uint64_t v60 = (uint64_t)v146;
      sub_1BFE3F43C(6, v79, v76, v73);
      goto LABEL_54;
    case 7uLL:
      uint64_t v80 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v81 = qword_1EB882D28;
      swift_retain();
      if (v81 != -1) {
        swift_once();
      }
      uint64_t v82 = sub_1C151928C();
      uint64_t v83 = __swift_project_value_buffer(v82, (uint64_t)qword_1EB93CAB0);
      uint64_t v84 = (uint64_t)v132;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v132, v83, v82);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v85 = (uint64_t)v146;
      sub_1BFE3F80C(7, v80, v84);
      sub_1BFEFEB68(v84, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v85, (uint64_t (*)(void))sub_1BFEFF7D8);
      return swift_release();
    case 8uLL:
      uint64_t v86 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v87 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v88 = qword_1EB882D28;
      swift_retain();
      swift_retain();
      if (v88 != -1) {
        swift_once();
      }
      uint64_t v89 = sub_1C151928C();
      uint64_t v90 = __swift_project_value_buffer(v89, (uint64_t)qword_1EB93CAB0);
      uint64_t v91 = (uint64_t)v133;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v89 - 8) + 16))(v133, v90, v89);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v92 = v87;
      uint64_t v93 = (uint64_t)v146;
      sub_1BFE3EC8C(8, v86, v92, v91);
      goto LABEL_32;
    case 9uLL:
      uint64_t v94 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v95 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v96 = qword_1EB882D28;
      swift_retain();
      swift_retain();
      if (v96 != -1) {
        swift_once();
      }
      uint64_t v97 = sub_1C151928C();
      uint64_t v98 = __swift_project_value_buffer(v97, (uint64_t)qword_1EB93CAB0);
      uint64_t v91 = (uint64_t)v134;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v97 - 8) + 16))(v134, v98, v97);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v99 = v95;
      uint64_t v93 = (uint64_t)v146;
      sub_1BFE3F624(9, v94, v99, v91);
LABEL_32:
      sub_1BFEFEB68(v91, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v93, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_release();
      return swift_release();
    case 0xAuLL:
      uint64_t v100 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      int v101 = *(unsigned __int16 *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      int v102 = *(unsigned __int8 *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x1A);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v103 = sub_1C151928C();
      uint64_t v104 = __swift_project_value_buffer(v103, (uint64_t)qword_1EB93CAB0);
      uint64_t v105 = (uint64_t)v135;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v103 - 8) + 16))(v135, v104, v103);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      if (v102) {
        int v106 = 0x10000;
      }
      else {
        int v106 = 0;
      }
      uint64_t v107 = v100;
      uint64_t v60 = (uint64_t)v146;
      sub_1BFE3F9F4(10, v107, v106 | v101, v105);
      goto LABEL_50;
    case 0xBuLL:
      char v108 = *(unsigned char *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v109 = sub_1C151928C();
      uint64_t v110 = __swift_project_value_buffer(v109, (uint64_t)qword_1EB93CAB0);
      uint64_t v31 = v136;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v109 - 8) + 16))(v136, v110, v109);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v111 = v108;
      uint64_t v60 = (uint64_t)v146;
      sub_1C0696B20(11, v111, (uint64_t)v31);
LABEL_43:
      uint64_t v64 = (uint64_t)v31;
      goto LABEL_55;
    case 0xCuLL:
      long long v112 = *(_OWORD *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v144 = *(_OWORD *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      *(_OWORD *)uint64_t v145 = v112;
      *(_OWORD *)&v145[9] = *(_OWORD *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x29);
      sub_1C0884264((uint64_t)&v144);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v113 = sub_1C151928C();
      uint64_t v114 = __swift_project_value_buffer(v113, (uint64_t)qword_1EB93CAB0);
      uint64_t v115 = (uint64_t)v137;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v113 - 8) + 16))(v137, v114, v113);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v116 = (uint64_t)v146;
      sub_1C0696CB4(12, &v144, v115);
      sub_1BFEFEB68(v115, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v116, (uint64_t (*)(void))sub_1BFEFF7D8);
      return sub_1C08842C0((uint64_t)&v144);
    case 0xDuLL:
      uint64_t v117 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v118 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v119 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      if (qword_1EB887640 != -1) {
        swift_once();
      }
      uint64_t v120 = sub_1C151928C();
      uint64_t v121 = __swift_project_value_buffer(v120, (uint64_t)qword_1EB93CAC8);
      uint64_t v105 = (uint64_t)v138;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v120 - 8) + 16))(v138, v121, v120);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v122 = v117;
      uint64_t v60 = (uint64_t)v146;
      sub_1BFE3FB94(13, v122, v118, v119, v105);
LABEL_50:
      uint64_t v64 = v105;
      goto LABEL_55;
    case 0xEuLL:
      uint64_t v123 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v124 = *(void *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v125 = sub_1C151928C();
      uint64_t v126 = __swift_project_value_buffer(v125, (uint64_t)qword_1EB93CA98);
      uint64_t v73 = (uint64_t)v139;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v125 - 8) + 16))(v139, v126, v125);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v127 = v123;
      uint64_t v60 = (uint64_t)v146;
      sub_1C0696E54(14, v127, v124, v73);
LABEL_54:
      uint64_t v64 = v73;
LABEL_55:
      sub_1BFEFEB68(v64, type metadata accessor for FormatVersionRequirement);
      uint64_t v50 = v60;
      break;
    default:
      char v46 = *(unsigned char *)(v41 + 16);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v47 = sub_1C151928C();
      uint64_t v48 = __swift_project_value_buffer(v47, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v37, v48, v47);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v49 = (uint64_t)v146;
      sub_1BFE3FD80(0, v46, (uint64_t)v37);
      sub_1BFEFEB68((uint64_t)v37, type metadata accessor for FormatVersionRequirement);
      uint64_t v50 = v49;
      break;
  }
  return sub_1BFEFEB68(v50, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFE3E7F4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1BFE3E850(char a1, long long *a2, uint64_t a3)
{
  v16[39] = a1;
  sub_1BFF27EB4(a2, (uint64_t)v16);
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FBFE0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE3E9F0();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE3EA44();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE3E9F0()
{
  unint64_t result = qword_1EB865C68;
  if (!qword_1EB865C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865C68);
  }
  return result;
}

unint64_t sub_1BFE3EA44()
{
  unint64_t result = qword_1EB85BD88;
  if (!qword_1EB85BD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BD88);
  }
  return result;
}

uint64_t sub_1BFE3EA98(char a1, uint64_t a2, uint64_t a3)
{
  v16[111] = a1;
  sub_1BFE3E7F4(a2, (uint64_t)v16);
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FBFE0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE3E9F0();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE3EC38();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE3EC38()
{
  unint64_t result = qword_1EB85BDF8;
  if (!qword_1EB85BDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BDF8);
  }
  return result;
}

uint64_t sub_1BFE3EC8C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FBFE0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE3E9F0();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFE3EE20();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE3EE20()
{
  unint64_t result = qword_1EB85BA48;
  if (!qword_1EB85BA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BA48);
  }
  return result;
}

uint64_t sub_1BFE3EE74(char a1, long long *a2, uint64_t a3)
{
  char v20 = a1;
  long long v7 = a2[1];
  long long v17 = *a2;
  long long v18 = v7;
  uint64_t v19 = *((void *)a2 + 4);
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FBFE0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE3E9F0();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFE3F014();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE3F014()
{
  unint64_t result = qword_1EB85BB60;
  if (!qword_1EB85BB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BB60);
  }
  return result;
}

uint64_t sub_1BFE3F068(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FBFE0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE3E9F0();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFE3F200();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE3F200()
{
  unint64_t result = qword_1EB85BD78;
  if (!qword_1EB85BD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BD78);
  }
  return result;
}

uint64_t sub_1BFE3F254(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FBFE0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE3E9F0();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFE3F3E8();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE3F3E8()
{
  unint64_t result = qword_1EB85BE60;
  if (!qword_1EB85BE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BE60);
  }
  return result;
}

uint64_t sub_1BFE3F43C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FBFE0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE3E9F0();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFE3F5D0();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE3F5D0()
{
  unint64_t result = qword_1EB860868;
  if (!qword_1EB860868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860868);
  }
  return result;
}

uint64_t sub_1BFE3F624(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FBFE0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE3E9F0();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFE3F7B8();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE3F7B8()
{
  unint64_t result = qword_1EB85BA20;
  if (!qword_1EB85BA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BA20);
  }
  return result;
}

uint64_t sub_1BFE3F80C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FBFE0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE3E9F0();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE3F9A0();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE3F9A0()
{
  unint64_t result = qword_1EB85BA68;
  if (!qword_1EB85BA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BA68);
  }
  return result;
}

uint64_t sub_1BFE3F9F4(char a1, uint64_t a2, int a3, uint64_t a4)
{
  char v20 = a1;
  uint64_t v17 = a2;
  __int16 v18 = a3;
  char v19 = BYTE2(a3) & 1;
  sub_1BFEFF7D8();
  uint64_t v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v10;
  v15[2] = sub_1C08FBFE0;
  v15[3] = v12;
  swift_retain();
  char v13 = sub_1BFEFF114(a4, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE3E9F0();
    long long v16 = 0uLL;
    sub_1C1520BAC();
    long long v16 = xmmword_1C152C800;
    sub_1BFDC2D90();
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE3FB94(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v21 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  sub_1BFEFF7D8();
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v11;
  _OWORD v16[2] = sub_1C08FBFE0;
  v16[3] = v13;
  swift_retain();
  char v14 = sub_1BFEFF114(a5, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE3E9F0();
    long long v17 = 0uLL;
    sub_1C1520BAC();
    long long v17 = xmmword_1C152C800;
    sub_1BFE3FD2C();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE3FD2C()
{
  unint64_t result = qword_1EB85BF48;
  if (!qword_1EB85BF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BF48);
  }
  return result;
}

uint64_t sub_1BFE3FD80(char a1, char a2, uint64_t a3)
{
  char v17 = a1;
  char v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FBFE0;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE3E9F0();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    if (v16 != 3)
    {
      long long v15 = xmmword_1C152C800;
      sub_1C0071594();
      sub_1C1520BAC();
    }
  }
  return swift_release();
}

uint64_t sub_1BFE3FF20(void *a1, uint64_t a2)
{
  return FormatValue.encode(to:)(a1, a2);
}

uint64_t FormatValue.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v24 = *(void *)(a2 + 24);
  uint64_t v25 = v7;
  uint64_t v8 = _s10CodingKeysOMa_9();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v10 = swift_getWitnessTable();
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v27 = v8;
  uint64_t v28 = WitnessTable;
  uint64_t v29 = v10;
  uint64_t v30 = v11;
  uint64_t v12 = type metadata accessor for FormatCodingKeysContainer();
  uint64_t v13 = swift_getWitnessTable();
  sub_1C152083C();
  swift_getWitnessTable();
  uint64_t v14 = type metadata accessor for VersionedKeyedEncodingContainer();
  uint64_t v23 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  char v16 = (char *)&v23 - v15;
  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  uint64_t v19 = __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_1BFEFBD78(a2, (uint64_t)v19, v17, a2, v12, (uint64_t)&type metadata for FormatVersions.JazzkonC, v18, (uint64_t)v16, v13, (uint64_t)&off_1F1C39B68);
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  LOBYTE(v29) = 0;
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1C151928C();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB93CAB0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v6, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BFEFFFF0(v26, (uint64_t)&v27, (uint64_t)v6, (uint64_t)sub_1C01B158C, 0, v14, v25, *(void *)(v24 + 16));
  sub_1BFEFEB68((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v16, v14);
}

uint64_t sub_1BFE4028C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t FeedGroupConfig.identifier.getter()
{
  uint64_t v0 = sub_1BFE402EC();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BFE402EC()
{
  return *(void *)(v0 + 16);
}

uint64_t FeedCursorContainer.feedContext.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1 < 0) {
    uint64_t v2 = (a1 & 0x7FFFFFFFFFFFFFFFLL) + qword_1EB93C2E8;
  }
  else {
    uint64_t v2 = a1 + *(void *)(*(void *)a1 + 232);
  }
  return sub_1C019CC1C(v2, a2);
}

uint64_t FeedModel.context.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C019CC1C(v2 + *(int *)(a1 + 52), a2);
}

uint64_t sub_1BFE40340(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BFE40358(void *a1)
{
  return FormatSwitchNodeCase.encode(to:)(a1);
}

uint64_t FormatSwitchNodeCase.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v31 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v29 - v8;
  sub_1C08BC9F0();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1C08BCB18();
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C085F050(&qword_1EB891F00, (void (*)(uint64_t))sub_1C08BCB18);
  sub_1BFEFBD78(v4, v18, v13, v4, v16, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v12, v17, (uint64_t)&off_1F1C39B68);
  uint64_t v30 = v2;
  uint64_t v19 = v2[2];
  uint64_t v20 = qword_1EB882D28;
  swift_retain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1C151928C();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB93CAB0);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
  v23(v9, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = v32;
  sub_1C06B97B0(v19, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (!v24)
  {
    uint64_t v25 = v30;
    swift_beginAccess();
    uint64_t v26 = v25[3];
    uint64_t v27 = (uint64_t)v31;
    v23(v31, v22, v21);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    if (sub_1C08375C0(v27, 1, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v33 = xmmword_1C153AB20;
      char v34 = 0;
      uint64_t v35 = v26;
      sub_1C08BCA84();
      sub_1C085F050(&qword_1EB86E460, (void (*)(uint64_t))sub_1C08BCA84);
      sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB863300, (uint64_t)&type metadata for FormatSourceMapNode, MEMORY[0x1E4FBB320]);
      sub_1BFE407E0();
      sub_1C1520BAC();
    }
    sub_1BFEFEB68(v27, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BFEFEB68((uint64_t)v12, (uint64_t (*)(void))sub_1C08BC9F0);
}

unint64_t sub_1BFE407E0()
{
  unint64_t result = qword_1EB863308;
  if (!qword_1EB863308)
  {
    sub_1BFE9DEBC(255, (unint64_t *)&qword_1EB863300, (uint64_t)&type metadata for FormatSourceMapNode, MEMORY[0x1E4FBB320]);
    sub_1BFC3A24C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863308);
  }
  return result;
}

unint64_t sub_1BFE40874()
{
  unint64_t result = qword_1EB85B880;
  if (!qword_1EB85B880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B880);
  }
  return result;
}

uint64_t sub_1BFE408C8@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatSize.init(from:)(a1, a2);
}

uint64_t FormatSize.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v67 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v63 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  uint64_t v9 = v2;
  if (v2)
  {
LABEL_40:
    sub_1C0038728(a1, (uint64_t)v9);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_1C1520EAC();
  char v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  if (v12)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        unint64_t v16 = *v15;
        if (*v15 >= 4) {
          break;
        }
        v15 += 2;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v18 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v9 = (void *)swift_allocError();
      *(void *)uint64_t v19 = v18;
      *(void *)(v19 + 8) = v16;
      *(void *)(v19 + 16) = &unk_1F1B87958;
      *(_OWORD *)(v19 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v18, v16);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
      goto LABEL_40;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE41AA8();
  long long v64 = 0uLL;
  sub_1C15206EC();
  switch((char)v66)
  {
    case 1:
      sub_1BFE41AFC();
      long long v64 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v20 = v66;
      unint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v20;
      break;
    case 2:
      long long v66 = xmmword_1C152C800;
      sub_1C00729EC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v22 = *((void *)&v64 + 1);
      uint64_t v21 = v64;
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v21;
      *(void *)(v23 + 24) = v22;
      unint64_t v17 = v23 | 4;
      break;
    case 3:
      long long v66 = xmmword_1C152C800;
      sub_1BFE41BEC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v25 = *((void *)&v64 + 1);
      uint64_t v24 = v64;
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v24;
      *(void *)(v26 + 24) = v25;
      unint64_t v17 = v26 | 0x1000000000000000;
      break;
    case 4:
      unint64_t v17 = 0xB000000000000008;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      break;
    case 5:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      unint64_t v17 = 0xB000000000000010;
      break;
    case 6:
      sub_1BFE41AFC();
      long long v64 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v27 = v66;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v27;
      unint64_t v29 = 0x1000000000000004;
      goto LABEL_42;
    case 7:
      sub_1BFE41AFC();
      long long v64 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v30 = v66;
      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = v30;
      unint64_t v17 = v31 | 0x2000000000000000;
      break;
    case 8:
      sub_1BFE41AFC();
      long long v64 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v32 = v66;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v32;
      unint64_t v29 = 0x2000000000000004;
      goto LABEL_42;
    case 9:
      sub_1BFE41AFC();
      long long v64 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v33 = v66;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v33;
      unint64_t v17 = v34 | 0x3000000000000000;
      break;
    case 10:
      long long v64 = xmmword_1C152C800;
      sub_1BFE41E98();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v35 = v66;
      char v36 = BYTE8(v66);
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v35;
      *(unsigned char *)(v28 + 24) = v36;
      unint64_t v29 = 0x3000000000000004;
      goto LABEL_42;
    case 11:
      long long v64 = xmmword_1C152C800;
      sub_1BFE41E98();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v37 = v66;
      char v38 = BYTE8(v66);
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v37;
      *(unsigned char *)(v39 + 24) = v38;
      unint64_t v17 = v39 | 0x4000000000000000;
      break;
    case 12:
      long long v66 = xmmword_1C152C800;
      sub_1C08B0FC8();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      long long v40 = v64;
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = v40;
      unint64_t v29 = 0x4000000000000004;
      goto LABEL_42;
    case 13:
      long long v64 = xmmword_1C152C800;
      sub_1BFE41B98();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v41 = v66;
      char v42 = BYTE8(v66);
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v41;
      *(unsigned char *)(v28 + 24) = v42;
      unint64_t v29 = 0x5000000000000000;
      goto LABEL_42;
    case 14:
      sub_1C08FC718(0, &qword_1EB888048, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSizeColumn);
      long long v64 = xmmword_1C152C800;
      sub_1BFE41CD0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v43 = v66;
      char v44 = BYTE8(v66);
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v43;
      *(unsigned char *)(v28 + 24) = v44;
      unint64_t v29 = 0x5000000000000004;
      goto LABEL_42;
    case 15:
      sub_1BFE41D54();
      long long v64 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB888030, (void (*)(uint64_t))sub_1BFE41D54);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v45 = v66;
      char v46 = BYTE8(v66);
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = v45;
      *(unsigned char *)(v47 + 24) = v46;
      unint64_t v17 = v47 | 0x6000000000000000;
      break;
    case 16:
      long long v66 = xmmword_1C152C800;
      sub_1BFE41E44();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      long long v48 = v64;
      char v49 = v65;
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = v48;
      *(unsigned char *)(v28 + 32) = v49;
      unint64_t v29 = 0x6000000000000004;
      goto LABEL_42;
    case 17:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      unint64_t v17 = 0xB000000000000018;
      break;
    case 18:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      unint64_t v17 = 0xB000000000000020;
      break;
    case 19:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      unint64_t v17 = 0xB000000000000028;
      break;
    case 20:
      long long v66 = xmmword_1C152C800;
      sub_1BFE41DF0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      char v50 = v64;
      uint64_t v51 = *((void *)&v64 + 1);
      char v52 = v65;
      uint64_t v53 = swift_allocObject();
      *(unsigned char *)(v53 + 16) = v50;
      *(void *)(v53 + 24) = v51;
      *(unsigned char *)(v53 + 32) = v52;
      unint64_t v17 = v53 | 0x7000000000000000;
      break;
    case 21:
      long long v66 = xmmword_1C152C800;
      sub_1C08B0EB0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      long long v54 = v64;
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = v54;
      unint64_t v29 = 0x7000000000000004;
      goto LABEL_42;
    case 22:
      sub_1BFEFF3E8(0, &qword_1EB875B70, (uint64_t (*)(void))sub_1C00848A8, (uint64_t)&type metadata for FormatSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
      long long v66 = xmmword_1C152C800;
      sub_1BFE41C40();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v56 = *((void *)&v64 + 1);
      uint64_t v55 = v64;
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = v55;
      *(void *)(v57 + 24) = v56;
      unint64_t v17 = v57 | 0x8000000000000000;
      break;
    case 23:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      unint64_t v17 = 0xB000000000000030;
      break;
    case 24:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      unint64_t v17 = 0xB000000000000038;
      break;
    case 25:
      sub_1BFE41AFC();
      long long v64 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v58 = v66;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v58;
      unint64_t v29 = 0x8000000000000004;
      goto LABEL_42;
    case 26:
      sub_1BFE41AFC();
      long long v64 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v59 = v66;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v59;
      unint64_t v29 = 0x9000000000000000;
      goto LABEL_42;
    case 27:
      sub_1BFE41AFC();
      long long v64 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB873ED0, (void (*)(uint64_t))sub_1BFE41AFC);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v60 = v66;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v60;
      unint64_t v29 = 0x9000000000000004;
      goto LABEL_42;
    case 28:
      long long v66 = xmmword_1C152C800;
      sub_1C0467560();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      long long v63 = v64;
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = v63;
      unint64_t v29 = 0xA000000000000000;
      goto LABEL_42;
    case 29:
      long long v64 = xmmword_1C152C800;
      sub_1C0072D38();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      char v62 = v66;
      uint64_t v28 = swift_allocObject();
      *(unsigned char *)(v28 + 16) = v62;
      unint64_t v29 = 0xA000000000000004;
LABEL_42:
      unint64_t v17 = v28 | v29;
      break;
    default:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      unint64_t v17 = 0xB000000000000000;
      break;
  }
  *uint64_t v67 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFE41AA8()
{
  unint64_t result = qword_1EB886D18;
  if (!qword_1EB886D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB886D18);
  }
  return result;
}

void sub_1BFE41AFC()
{
  if (!qword_1EB873ED8)
  {
    sub_1BFEFF3E8(255, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1C00823AC();
    unint64_t v0 = type metadata accessor for FormatValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB873ED8);
    }
  }
}

unint64_t sub_1BFE41B98()
{
  unint64_t result = qword_1EB873D50;
  if (!qword_1EB873D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB873D50);
  }
  return result;
}

unint64_t sub_1BFE41BEC()
{
  unint64_t result = qword_1EB8770B0;
  if (!qword_1EB8770B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8770B0);
  }
  return result;
}

unint64_t sub_1BFE41C40()
{
  unint64_t result = qword_1EB875B68;
  if (!qword_1EB875B68)
  {
    sub_1BFEFF3E8(255, &qword_1EB875B70, (uint64_t (*)(void))sub_1C00848A8, (uint64_t)&type metadata for FormatSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875B68);
  }
  return result;
}

unint64_t sub_1BFE41CD0()
{
  unint64_t result = qword_1EB888040;
  if (!qword_1EB888040)
  {
    sub_1C08FC718(255, &qword_1EB888048, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSizeColumn);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888040);
  }
  return result;
}

void sub_1BFE41D54()
{
  if (!qword_1EB888038)
  {
    sub_1BFEFF3E8(255, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1C00823AC();
    unint64_t v0 = type metadata accessor for FormatSizeColumn();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB888038);
    }
  }
}

unint64_t sub_1BFE41DF0()
{
  unint64_t result = qword_1EB877DA8;
  if (!qword_1EB877DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB877DA8);
  }
  return result;
}

unint64_t sub_1BFE41E44()
{
  unint64_t result = qword_1EB876598[0];
  if (!qword_1EB876598[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB876598);
  }
  return result;
}

unint64_t sub_1BFE41E98()
{
  unint64_t result = qword_1EB87F4E8;
  if (!qword_1EB87F4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87F4E8);
  }
  return result;
}

uint64_t sub_1BFE41EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BFE450A8(0, &qword_1EB871370, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v12 = (uint64_t *)((char *)&v24 - v11);
  uint64_t v13 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned int v16 = objc_msgSend(*(id *)(a2 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 20) + 40), sel_hasThumbnail);
  sub_1BFE43768(a3, (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Options);
  if (v16)
  {
    uint64_t v17 = *v15;
    sub_1C04BA10C((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Options);
    if ((v17 & 2) == 0)
    {
      uint64_t v25 = a1;
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = 0x401C000000000000;
      *char v12 = v18;
      (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FABA08], v9);
      uint64_t v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C10F2768(0, &qword_1EB871208, MEMORY[0x1E4FAB4D0]);
      sub_1BFE45238(&qword_1EB871200, &qword_1EB871208, v19);
      sub_1C151738C();
      (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  else
  {
    sub_1C04BA10C((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Options);
  }
  uint64_t v25 = a1;
  uint64_t v20 = (*(uint64_t (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FAB9E0], v9);
  MEMORY[0x1F4188790](v20);
  *(&v24 - 4) = a4;
  *(&v24 - 3) = a2;
  uint64_t v21 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C10F2768(0, &qword_1EB871208, MEMORY[0x1E4FAB4D0]);
  uint64_t v23 = sub_1BFE45238(&qword_1EB871200, &qword_1EB871208, v21);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1BFE4228C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BFE450A8(0, &qword_1EB871370, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v65 = (uint64_t *)((char *)&v59 - v11);
  sub_1BFE4399C();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (uint64_t *)((char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 20);
  uint64_t v62 = a2;
  uint64_t v19 = a2 + v18;
  unsigned int v20 = objc_msgSend(*(id *)(v19 + 40), sel_hasThumbnail);
  uint64_t v64 = a3;
  sub_1BFE43768(a3, (uint64_t)v17, type metadata accessor for HeadlineViewLayout.Options);
  uint64_t v63 = a4;
  if (v20)
  {
    uint64_t v21 = *v17;
    sub_1C04BA10C((uint64_t)v17, type metadata accessor for HeadlineViewLayout.Options);
    if ((v21 & 2) == 0)
    {
      uint64_t v66 = a1;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v22 = sub_1C1517A8C();
      uint64_t v23 = swift_allocBox();
      uint64_t v25 = v24;
      sub_1BFE43768(v64 + *(int *)(v15 + 20), (uint64_t)v14, (uint64_t (*)(void))sub_1BFE4399C);
      uint64_t v26 = sub_1C1517A7C();
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v14, 1, v26) == 1)
      {
        (*(void (**)(uint64_t, void, uint64_t))(v27 + 104))(v25, *MEMORY[0x1E4FAB8C8], v26);
        sub_1C04BA10C((uint64_t)v14, (uint64_t (*)(void))sub_1BFE4399C);
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v25, v14, v26);
      }
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v22 - 8) + 104))(v25, *MEMORY[0x1E4FAB8E0], v22);
      uint64_t v28 = v65;
      *char v65 = v23;
      uint64_t v29 = *MEMORY[0x1E4FAB9F8];
      uint64_t v60 = *(uint64_t **)(v10 + 104);
      ((void (*)(uint64_t *, uint64_t, uint64_t))v60)(v28, v29, v9);
      uint64_t v30 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C10F2768(0, &qword_1EB871208, MEMORY[0x1E4FAB4D0]);
      uint64_t v32 = v31;
      sub_1BFE45238(&qword_1EB871200, &qword_1EB871208, v30);
      sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
      uint64_t v59 = v32;
      sub_1C151737C();
      swift_release();
      uint64_t v33 = *(void (**)(uint64_t *, uint64_t))(v10 + 8);
      v33(v28, v9);
      if (objc_msgSend(*(id *)(v19 + 40), sel_hasVideo))
      {
        uint64_t v66 = a1;
        uint64_t v34 = v65;
        ((void (*)(uint64_t *, void, uint64_t))v60)(v65, *MEMORY[0x1E4FAB9E0], v9);
        sub_1C15173FC();
        v33(v34, v9);
      }
    }
  }
  else
  {
    sub_1C04BA10C((uint64_t)v17, type metadata accessor for HeadlineViewLayout.Options);
  }
  uint64_t v66 = a1;
  sub_1BFE45638();
  uint64_t v36 = v35;
  uint64_t v37 = swift_allocBox();
  uint64_t v39 = v38;
  long long v40 = (uint64_t *)(v38 + *(int *)(v36 + 48));
  uint64_t v60 = (uint64_t *)(v38 + *(int *)(v36 + 64));
  uint64_t KeyPath = v37;
  uint64_t v41 = *MEMORY[0x1E4FAB528];
  sub_1BFE450A8(0, &qword_1EB871270, MEMORY[0x1E4FAB530]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(v39, v41, v42);
  sub_1BFF35C38();
  uint64_t v44 = v43;
  uint64_t v45 = swift_allocBox();
  uint64_t v47 = v46;
  uint64_t v48 = v46 + *(int *)(v44 + 48);
  uint64_t v49 = *MEMORY[0x1E4FAB790];
  uint64_t v50 = sub_1C151786C();
  uint64_t v51 = v9;
  char v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104);
  uint64_t v53 = v10;
  v52(v47, v49, v50);
  v52(v48, *MEMORY[0x1E4FAB7B0], v50);
  *long long v40 = v45;
  long long v54 = *(void (**)(uint64_t *, void, uint64_t))(v10 + 104);
  v54(v40, *MEMORY[0x1E4FAB9E8], v51);
  v54(v60, *MEMORY[0x1E4FAB9E0], v51);
  uint64_t v55 = v65;
  *char v65 = KeyPath;
  uint64_t v56 = ((uint64_t (*)(uint64_t *, void, uint64_t))v54)(v55, *MEMORY[0x1E4FAB9D8], v51);
  MEMORY[0x1F4188790](v56);
  uint64_t v57 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C10F2768(0, &qword_1EB871208, MEMORY[0x1E4FAB4D0]);
  sub_1BFE45238(&qword_1EB871200, &qword_1EB871208, v57);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v53 + 8))(v55, v51);
}

uint64_t sub_1BFE42A58(uint64_t *a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v116 = a4;
  uint64_t v6 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v110 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v111 = v7;
  uint64_t v115 = (uint64_t)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE450A8(0, &qword_1EB871270, MEMORY[0x1E4FAB530]);
  uint64_t v113 = *(void *)(v8 - 8);
  uint64_t v114 = v8;
  MEMORY[0x1F4188790](v8);
  long long v112 = (char *)&v99 - v9;
  uint64_t v109 = sub_1C151E24C();
  uint64_t v108 = *(void *)(v109 - 8);
  MEMORY[0x1F4188790](v109);
  uint64_t v107 = (uint64_t *)((char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE450A8(0, &qword_1EB871370, MEMORY[0x1E4FABA30]);
  uint64_t v126 = v11;
  uint64_t v12 = *((void *)v11 - 1);
  MEMORY[0x1F4188790](v11);
  uint64_t v125 = (uint64_t *)((char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v99 - v15;
  uint64_t v17 = a1;
  uint64_t v130 = a1;
  swift_getKeyPath();
  sub_1C151793C();
  double v19 = round(v18 * 56.0 * 0.25);
  if (byte_1EA2B53C0) {
    double v20 = v19;
  }
  else {
    double v20 = 14.0;
  }
  uint64_t v121 = v6;
  uint64_t v21 = *(int *)(v6 + 20);
  uint64_t v124 = a3;
  id v22 = objc_msgSend(*(id *)(a3 + v21 + 40), sel_sourceChannel);
  if (v22)
  {
    id v23 = objc_msgSend(v22, sel_theme);
    swift_unknownObjectRelease();
  }
  else
  {
    id v23 = 0;
  }
  id v24 = objc_msgSend(self, sel_defaultMetrics);
  sub_1BFE45290(v23, v24, (uint64_t)v16, v20);

  swift_unknownObjectRelease();
  uint64_t v25 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C10F2768(0, &qword_1EB871208, MEMORY[0x1E4FAB4D0]);
  uint64_t v27 = v26;
  uint64_t v28 = sub_1BFE45238(&qword_1EB871200, &qword_1EB871208, v25);
  uint64_t v29 = sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  uint64_t v128 = v27;
  uint64_t v118 = v29;
  sub_1C151737C();
  swift_release();
  uint64_t v30 = *(void (**)(char *, uint64_t (*)(uint64_t)))(v12 + 8);
  uint64_t v31 = v126;
  v30(v16, v126);
  uint64_t v130 = v17;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = 0x4014000000000000;
  uint64_t v33 = v125;
  *uint64_t v125 = v32;
  uint64_t v34 = *(void (**)(uint64_t *))(v12 + 104);
  unsigned int v117 = *MEMORY[0x1E4FABA08];
  v34(v33);
  sub_1C151738C();
  uint64_t v35 = ((uint64_t (*)(uint64_t *, uint64_t (*)(uint64_t)))v30)(v33, v31);
  uint64_t v120 = &v99;
  uint64_t v130 = v17;
  __n128 v36 = MEMORY[0x1F4188790](v35);
  uint64_t v37 = v124;
  uint64_t v97 = v124;
  uint64_t v38 = *MEMORY[0x1E4FAB9E0];
  uint64_t v122 = v34;
  uint64_t v123 = v12 + 104;
  ((void (*)(uint64_t *, uint64_t, uint64_t (*)(uint64_t), __n128))v34)(v33, v38, v31, v36);
  uint64_t v127 = v28;
  uint64_t v98 = v28;
  v96[1] = v96;
  uint64_t v97 = v128;
  v96[0] = sub_1C0059D04;
  sub_1C15173FC();
  uint64_t v119 = (void (*)(void, void))v30;
  v30((char *)v33, v31);
  uint64_t v120 = v17;
  uint64_t v129 = v17;
  swift_getKeyPath();
  uint64_t v39 = *(void *)(v37 + *(int *)(v121 + 28));
  if (*(unsigned char *)(v39 + qword_1EB8739C0)) {
    goto LABEL_9;
  }
  sub_1BFE4597C();
  uint64_t v40 = sub_1C151F56C();
  uint64_t v41 = v107;
  *uint64_t v107 = v40;
  uint64_t v42 = v108;
  uint64_t v43 = v109;
  (*(void (**)(uint64_t *, void, uint64_t))(v108 + 104))(v41, *MEMORY[0x1E4FBCBD8], v109);
  char v44 = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v42 + 8))(v41, v43);
  if (v44)
  {
LABEL_9:
    uint64_t v46 = swift_allocObject();
    uint64_t v47 = *(void **)(v39 + *(void *)(*(void *)v39 + 136));
    *(void *)(v46 + 16) = v47;
    uint64_t v48 = v125;
    *uint64_t v125 = v46;
    unsigned int v106 = *MEMORY[0x1E4FAB9C0];
    uint64_t v49 = v126;
    v122(v48);
    sub_1BFE44640();
    uint64_t v51 = v50;
    sub_1BFE450A8(0, &qword_1EB8712A8, MEMORY[0x1E4FAB678]);
    uint64_t v53 = v52;
    uint64_t v54 = *(void *)(v52 - 8);
    uint64_t v55 = *(unsigned __int8 *)(v54 + 80);
    uint64_t v56 = (v55 + 32) & ~v55;
    uint64_t v57 = v56 + *(void *)(v54 + 72);
    uint64_t v105 = v51;
    uint64_t v103 = v57;
    uint64_t v102 = v55 | 7;
    uint64_t v58 = swift_allocObject();
    long long v101 = xmmword_1C1529AE0;
    *(_OWORD *)(v58 + 16) = xmmword_1C1529AE0;
    uint64_t v104 = v56;
    uint64_t v59 = (void *)(v58 + v56);
    uint64_t v60 = type metadata accessor for HeadlineViewLayout.Options(0);
    long long v61 = v116;
    *uint64_t v59 = *(void *)&v116[*(int *)(v60 + 24)];
    uint64_t v62 = *MEMORY[0x1E4FAB570];
    uint64_t v100 = *(void (**)(void))(v54 + 104);
    ((void (*)(void *, uint64_t, uint64_t))v100)(v59, v62, v53);
    id v63 = v47;
    sub_1C151737C();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v64 = (void (*)(uint64_t *, uint64_t (*)(uint64_t)))v119;
    v119(v48, v49);
    if ((*v61 & 1) == 0) {
      goto LABEL_14;
    }
    uint64_t v65 = *(void *)(v124 + *(int *)(v121 + 32));
    if (!v65) {
      goto LABEL_14;
    }
    uint64_t v121 = v53;
    uint64_t v66 = v120;
    if (*(unsigned char *)(v65 + qword_1EB8739C0)) {
      goto LABEL_13;
    }
    sub_1BFE4597C();
    uint64_t v67 = sub_1C151F56C();
    uint64_t v68 = v107;
    *uint64_t v107 = v67;
    uint64_t v69 = v108;
    uint64_t v70 = v109;
    (*(void (**)(uint64_t *, void, uint64_t))(v108 + 104))(v68, *MEMORY[0x1E4FBCBD8], v109);
    char v71 = sub_1C151E26C();
    uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v69 + 8))(v68, v70);
    if (v71)
    {
LABEL_13:
      uint64_t v72 = *(void **)(v65 + *(void *)(*(void *)v65 + 136));
      uint64_t v129 = v66;
      uint64_t v73 = swift_allocObject();
      *(void *)(v73 + 16) = 0x401C000000000000;
      uint64_t v74 = v66;
      uint64_t v75 = v125;
      uint64_t v76 = v126;
      *uint64_t v125 = v73;
      uint64_t v77 = (void (*)(uint64_t *, void, uint64_t (*)(uint64_t)))v122;
      ((void (*)(uint64_t *, void, uint64_t (*)(uint64_t)))v122)(v75, v117, v76);
      id v78 = v72;
      sub_1C151738C();
      uint64_t v79 = v119;
      v119(v75, v76);
      uint64_t v129 = v74;
      swift_getKeyPath();
      uint64_t v80 = swift_allocObject();
      *(void *)(v80 + 16) = v78;
      *uint64_t v75 = v80;
      v77(v75, v106, v76);
      uint64_t v81 = swift_allocObject();
      *(_OWORD *)(v81 + 16) = v101;
      *(void *)(v81 + v104) = 2;
      v100();
      id v82 = v78;
      uint64_t v64 = (void (*)(uint64_t *, uint64_t (*)(uint64_t)))v79;
      id v83 = v82;
      sub_1C151737C();

      swift_release();
      swift_bridgeObjectRelease();
      v64(v75, v76);
LABEL_14:
      uint64_t v84 = v120;
      uint64_t v130 = v120;
      uint64_t v85 = swift_allocObject();
      *(void *)(v85 + 16) = 0x4024000000000000;
      uint64_t v87 = v125;
      uint64_t v86 = v126;
      *uint64_t v125 = v85;
      ((void (*)(uint64_t *, void, uint64_t (*)(uint64_t)))v122)(v87, v117, v86);
      sub_1C151738C();
      v64(v87, v86);
      uint64_t v130 = v84;
      uint64_t v88 = v112;
      uint64_t v89 = v113;
      uint64_t v90 = v114;
      (*(void (**)(char *, void, uint64_t))(v113 + 104))(v112, *MEMORY[0x1E4FAB528], v114);
      uint64_t v126 = type metadata accessor for HeadlineViewLayout.Context;
      uint64_t v91 = v124;
      uint64_t v92 = v115;
      sub_1BFE43768(v124, v115, type metadata accessor for HeadlineViewLayout.Context);
      unint64_t v93 = (*(unsigned __int8 *)(v110 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
      uint64_t v94 = swift_allocObject();
      sub_1BFE43938(v92, v94 + v93);
      sub_1C151730C();
      swift_release();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v88, v90);
      sub_1BFE43768(v91, v92, v126);
      uint64_t v95 = swift_allocObject();
      sub_1BFE43938(v92, v95 + v93);
      sub_1C1517CEC();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFE43700(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE43768(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *initializeWithCopy for HeadlineViewLayout.Options(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1517A7C();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1BFEEA038(0, (unint64_t *)&qword_1EB871330, MEMORY[0x1E4FAB8D8], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v13 = *(void **)((char *)a2 + v12);
  *(void *)((char *)a1 + v12) = v13;
  id v14 = v13;
  return a1;
}

uint64_t sub_1BFE43938(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeadlineViewLayout.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BFE4399C()
{
  if (!qword_1EB871330)
  {
    sub_1C1517A7C();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871330);
    }
  }
}

uint64_t sub_1BFE439F4(uint64_t a1)
{
  return sub_1BFE43A10(a1, *(void *)(v1 + 16));
}

uint64_t sub_1BFE43A10(uint64_t a1, uint64_t a2)
{
  sub_1BFE45044(0, &qword_1EB871370, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v24 - v7);
  uint64_t v9 = sub_1C151E24C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)((char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24[1] = a1;
  swift_getKeyPath();
  uint64_t v13 = *(void *)(a2 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 36));
  if ((*(unsigned char *)(v13 + qword_1EB8739C0) & 1) != 0
    || (sub_1BFE4597C(),
        *uint64_t v12 = sub_1C151F56C(),
        (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBD8], v9),
        char v14 = sub_1C151E26C(),
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = *(void **)(v13 + *(void *)(*(void *)v13 + 136));
    *(void *)(v16 + 16) = v17;
    *uint64_t v8 = v16;
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB968], v5);
    sub_1BFE44640();
    sub_1BFE45044(0, &qword_1EB8712A8, MEMORY[0x1E4FAB678]);
    uint64_t v19 = *(void *)(v18 - 8);
    unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C1529AE0;
    *(void *)(v21 + v20) = 1;
    (*(void (**)(void))(v19 + 104))();
    id v22 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1BFE45170(0, &qword_1EB871208, MEMORY[0x1E4FAB4D0]);
    sub_1BFE451F4(&qword_1EB871200, &qword_1EB871208, v22);
    sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
    id v23 = v17;
    sub_1C151737C();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFE43E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  sub_1BFE45044(0, &qword_1EB871370, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  __n128 v19 = MEMORY[0x1F4188790](v16);
  uint64_t v21 = &v29[-v20];
  uint64_t v33 = a1;
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v18 + 104))(&v29[-v20], *MEMORY[0x1E4FAB9E0], v17, v19);
  sub_1BFE44640();
  sub_1BFE45044(0, &qword_1EB8712A8, MEMORY[0x1E4FAB678]);
  uint64_t v23 = *(void *)(v22 - 8);
  unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1C1529AE0;
  uint64_t v26 = (double *)(v25 + v24);
  *uint64_t v26 = a5;
  v26[1] = a6;
  v26[2] = a7;
  v26[3] = a8;
  (*(void (**)(void))(v23 + 104))();
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1BFE45170(0, &qword_1EB8712D0, MEMORY[0x1E4FAB6F0]);
  sub_1BFE451F4(&qword_1EB8712C8, &qword_1EB8712D0, v27);
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v18 + 8))(v21, v17);
}

id sub_1BFE440D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a1;
  uint64_t v39 = a4;
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  sub_1BFE45044(0, &qword_1EB871370, MEMORY[0x1E4FABA30]);
  uint64_t v6 = v5;
  uint64_t v33 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  __n128 v36 = (uint64_t *)((char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v32 - v10);
  uint64_t v44 = a1;
  uint64_t v12 = sub_1C1517A8C();
  uint64_t v13 = swift_allocBox();
  *char v14 = 0x3FF0000000000000;
  (*(void (**)(void *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v14, *MEMORY[0x1E4FAB8B0], v12);
  *uint64_t v11 = v13;
  uint64_t v15 = *MEMORY[0x1E4FAB9F8];
  uint64_t v37 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 104);
  v37(v11, v15, v6);
  sub_1BFE44640();
  sub_1BFE45044(0, &qword_1EB8712A8, MEMORY[0x1E4FAB678]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C1527210;
  unint64_t v22 = v21 + v20;
  uint64_t v23 = *(void (**)(unint64_t, void, uint64_t))(v18 + 104);
  v23(v21 + v20, *MEMORY[0x1E4FAB628], v17);
  sub_1C15179DC();
  v23(v22 + v19, *MEMORY[0x1E4FAB550], v17);
  uint64_t v40 = v34;
  uint64_t v41 = v35;
  uint64_t v42 = v39;
  unint64_t v24 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1BFE45170(0, &qword_1EB871208, MEMORY[0x1E4FAB4D0]);
  uint64_t v35 = sub_1BFE451F4(&qword_1EB871200, &qword_1EB871208, v24);
  sub_1C151734C();
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void (**)(uint64_t *, uint64_t))(v7 + 8);
  uint64_t v26 = v33;
  v25(v11, v33);
  uint64_t v27 = v38;
  uint64_t v43 = v38;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = 0x4030000000000000;
  uint64_t v30 = v36;
  uint64_t v29 = v37;
  *__n128 v36 = v28;
  v29(v30, *MEMORY[0x1E4FABA00], v26);
  sub_1C151738C();
  v25(v30, v26);
  uint64_t v43 = v27;
  swift_getKeyPath();
  LODWORD(v34) = *MEMORY[0x1E4FAB9E0];
  ((void (*)(uint64_t *))v29)(v30);
  sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  v25(v30, v26);
  id result = objc_msgSend(*(id *)(v39 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 20) + 40), sel_hasVideo);
  if (result)
  {
    uint64_t v43 = v38;
    v37(v30, v34, v26);
    sub_1C15173FC();
    return (id)((uint64_t (*)(uint64_t *, uint64_t))v25)(v30, v26);
  }
  return result;
}

void sub_1BFE44640()
{
  if (!qword_1EB87A588)
  {
    sub_1BFE45044(255, &qword_1EB8712A8, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A588);
    }
  }
}

uint64_t sub_1BFE446B4(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1C151E24C();
  uint64_t v79 = *(void *)(v7 - 8);
  uint64_t v80 = (void (*)(void, void, void))v7;
  MEMORY[0x1F4188790](v7);
  id v78 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE45044(0, &qword_1EB871370, MEMORY[0x1E4FABA30]);
  uint64_t v10 = v9;
  uint64_t v85 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v70 - v14;
  char v16 = *a2;
  uint64_t v83 = a1;
  uint64_t v84 = a4;
  if ((v16 & 4) == 0)
  {
    uint64_t v82 = (uint64_t)a2;
    uint64_t v86 = a1;
    swift_getKeyPath();
    sub_1C151793C();
    double v18 = round(v17 * 56.0 * 0.25);
    if (byte_1EA2B53C0) {
      double v19 = v18;
    }
    else {
      double v19 = 14.0;
    }
    id v20 = objc_msgSend(*(id *)(a4 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 20) + 40), sel_sourceChannel);
    if (v20)
    {
      id v21 = objc_msgSend(v20, sel_theme);
      swift_unknownObjectRelease();
    }
    else
    {
      id v21 = 0;
    }
    id v22 = objc_msgSend(self, sel_defaultMetrics);
    sub_1BFE45290(v21, v22, (uint64_t)v15, v19);

    swift_unknownObjectRelease();
    uint64_t v23 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1BFE45170(0, &qword_1EB871208, MEMORY[0x1E4FAB4D0]);
    uint64_t v25 = v24;
    uint64_t v26 = sub_1BFE451F4(&qword_1EB871200, &qword_1EB871208, v23);
    sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
    uint64_t v77 = v25;
    sub_1C151737C();
    swift_release();
    uint64_t v27 = v85;
    uint64_t v28 = *(void (**)(char *, uint64_t))(v85 + 8);
    v28(v15, v10);
    a1 = v83;
    uint64_t v86 = v83;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = 0x4010000000000000;
    *uint64_t v12 = v29;
    uint64_t v30 = *(void (**)(uint64_t *, void, uint64_t))(v27 + 104);
    v30(v12, *MEMORY[0x1E4FABA08], v10);
    sub_1C151738C();
    uint64_t v31 = ((uint64_t (*)(uint64_t *, uint64_t))v28)(v12, v10);
    uint64_t KeyPath = &v70;
    uint64_t v86 = a1;
    __n128 v32 = MEMORY[0x1F4188790](v31);
    a4 = v84;
    uint64_t v68 = v84;
    ((void (*)(uint64_t *, void, uint64_t, __n128))v30)(v12, *MEMORY[0x1E4FAB9E0], v10, v32);
    uint64_t v69 = v26;
    v67[1] = v67;
    uint64_t v68 = v77;
    v67[0] = sub_1C0057110;
    sub_1C15173FC();
    v28((char *)v12, v10);
    a2 = (char *)v82;
  }
  uint64_t v86 = a1;
  uint64_t KeyPath = (uint64_t *)swift_getKeyPath();
  uint64_t v82 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v33 = *(void *)(a4 + *(int *)(v82 + 28));
  if (*(unsigned char *)(v33 + qword_1EB8739C0)) {
    goto LABEL_11;
  }
  sub_1BFE4597C();
  uint64_t v34 = sub_1C151F56C();
  uint64_t v35 = v78;
  uint64_t v36 = v79;
  *(void *)id v78 = v34;
  uint64_t v37 = v80;
  (*(void (**)(char *, void, void))(v36 + 104))(v35, *MEMORY[0x1E4FBCBD8], v80);
  char v38 = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(char *, void (*)(void, void, void)))(v36 + 8))(v35, v37);
  if (v38)
  {
LABEL_11:
    uint64_t v40 = swift_allocObject();
    uint64_t v41 = *(void **)(v33 + *(void *)(*(void *)v33 + 136));
    *(void *)(v40 + 16) = v41;
    *uint64_t v12 = v40;
    uint64_t v42 = *MEMORY[0x1E4FAB9C0];
    uint64_t v80 = *(void (**)(void, void, void))(v85 + 104);
    v80(v12, v42, v10);
    sub_1BFE44640();
    uint64_t v77 = v43;
    sub_1BFE45044(0, &qword_1EB8712A8, MEMORY[0x1E4FAB678]);
    uint64_t v72 = v10;
    uint64_t v45 = v44;
    uint64_t v79 = v44;
    uint64_t v46 = *(void *)(v44 - 8);
    uint64_t v47 = *(void *)(v46 + 72);
    uint64_t v48 = *(unsigned __int8 *)(v46 + 80);
    uint64_t v49 = (v48 + 32) & ~v48;
    uint64_t v75 = v48 | 7;
    uint64_t v76 = v49 + v47;
    uint64_t v50 = swift_allocObject();
    long long v74 = xmmword_1C1529AE0;
    *(_OWORD *)(v50 + 16) = xmmword_1C1529AE0;
    uint64_t v51 = (void *)(v50 + v49);
    *uint64_t v51 = *(void *)&a2[*(int *)(type metadata accessor for HeadlineViewLayout.Options(0) + 24)];
    uint64_t v52 = *MEMORY[0x1E4FAB570];
    id v78 = *(char **)(v46 + 104);
    ((void (*)(void *, uint64_t, uint64_t))v78)(v51, v52, v45);
    uint64_t v53 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1BFE45170(0, &qword_1EB871208, MEMORY[0x1E4FAB4D0]);
    uint64_t v73 = v54;
    uint64_t v71 = sub_1BFE451F4(&qword_1EB871200, &qword_1EB871208, v53);
    sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
    id v55 = v41;
    sub_1C151737C();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v56 = *(uint64_t **)(v85 + 8);
    v85 += 8;
    uint64_t KeyPath = v56;
    uint64_t v57 = v72;
    ((void (*)(uint64_t *, uint64_t))v56)(v12, v72);
    uint64_t v86 = v83;
    uint64_t v58 = swift_allocObject();
    uint64_t v59 = (void *)(v84 + *(int *)(v82 + 24));
    uint64_t v61 = v59[3];
    uint64_t v60 = v59[4];
    __swift_project_boxed_opaque_existential_1(v59, v61);
    *(double *)(v58 + 16) = (*(double (**)(uint64_t, uint64_t))(v60 + 16))(v61, v60);
    *uint64_t v12 = v58;
    v80(v12, *MEMORY[0x1E4FABA08], v57);
    uint64_t v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = v74;
    uint64_t v63 = v62 + v49;
    uint64_t v64 = *MEMORY[0x1E4FAB5E8];
    sub_1BFE45044(0, &qword_1EB871298, MEMORY[0x1E4FAB618]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 104))(v63, v64, v65);
    uint64_t v66 = ((uint64_t (*)(uint64_t, void, uint64_t))v78)(v63, *MEMORY[0x1E4FAB620], v79);
    MEMORY[0x1F4188790](v66);
    uint64_t v68 = v71;
    sub_1C151731C();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t *, uint64_t))KeyPath)(v12, v57);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BFE45044(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFE455E4();
    unint64_t v7 = a3(a1, &type metadata for HeadlineViewLayout, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1BFE450A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFE455E4();
    unint64_t v7 = a3(a1, &type metadata for HeadlineViewLayout, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1BFE4510C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFE455E4();
    unint64_t v7 = a3(a1, &type metadata for HeadlineViewLayout, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1BFE45170(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for HeadlineViewLayout;
    v8[1] = &type metadata for HeadlineViewLayout.Attributes;
    _OWORD v8[2] = sub_1BFE455E4();
    v8[3] = sub_1BFE4774C();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1BFE451F4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFE45170(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE45238(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C10F2768(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1BFE4527C()
{
  return objc_msgSend(*(id *)(*(void *)v0 + 32), sel_lineHeight);
}

uint64_t sub_1BFE45290@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v34 = a3;
  sub_1BFF31E28(0, &qword_1EB8712A8, (uint64_t (*)(void))sub_1BFE455E4, (uint64_t)&type metadata for HeadlineViewLayout, MEMORY[0x1E4FAB678]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (double *)((char *)v32 - v10);
  sub_1BFF31E28(0, &qword_1EB871370, (uint64_t (*)(void))sub_1BFE455E4, (uint64_t)&type metadata for HeadlineViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  char v16 = (void *)((char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&double v18 = MEMORY[0x1F4188790](v17).n128_u64[0];
  id v20 = (char *)v32 - v19;
  if (a1)
  {
    objc_msgSend(a1, sel_bannerImageScale, v18);
    double v22 = v21;
    objc_msgSend(a1, sel_bannerImageBaselineOffsetPercentage);
    uint64_t v24 = v23;
  }
  else
  {
    double v22 = 1.0;
    uint64_t v24 = 0;
  }
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a2;
  *(double *)(v25 + 24) = a4;
  uint64_t *v16 = v25;
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FAB998], v13);
  *uint64_t v11 = v22;
  uint64_t v26 = *MEMORY[0x1E4FAB5C8];
  uint64_t v33 = *(void (**)(double *, uint64_t, uint64_t))(v9 + 104);
  v33(v11, v26, v8);
  v32[1] = sub_1BFE455E4();
  id v27 = a2;
  sub_1C151795C();
  uint64_t v28 = v20;
  uint64_t v29 = *(void (**)(double *, uint64_t))(v9 + 8);
  v29(v11, v8);
  uint64_t v30 = *(void (**)(uint64_t *, uint64_t))(v14 + 8);
  v30(v16, v13);
  *uint64_t v11 = 0.0;
  *((void *)v11 + 1) = v24;
  v33(v11, *MEMORY[0x1E4FAB558], v8);
  sub_1C151795C();
  v29(v11, v8);
  return ((uint64_t (*)(char *, uint64_t))v30)(v28, v13);
}

unint64_t sub_1BFE455E4()
{
  unint64_t result = qword_1EB876340;
  if (!qword_1EB876340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876340);
  }
  return result;
}

void sub_1BFE45638()
{
  if (!qword_1EB871278)
  {
    sub_1BFE450A8(255, &qword_1EB871270, MEMORY[0x1E4FAB530]);
    sub_1BFE450A8(255, &qword_1EB871370, MEMORY[0x1E4FABA30]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EB871278);
    }
  }
}

uint64_t storeEnumTagSinglePayload for FeedHeadline.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C01A8BD4);
}

uint64_t type metadata accessor for ImageRequestOptions()
{
  uint64_t result = qword_1EB876A58;
  if (!qword_1EB876A58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1BFE45748(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFE457AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFE45810(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

id sub_1BFE45864(uint64_t a1)
{
  return sub_1BFE45888(a1);
}

id sub_1BFE45888(uint64_t a1)
{
  if (a1 == 1)
  {
    id result = objc_msgSend(v1, sel_textAlignment);
    if (result == (id)2) {
      return result;
    }
    uint64_t v3 = 2;
    goto LABEL_9;
  }
  if (a1)
  {
    id result = (id)sub_1C152040C();
    __break(1u);
    return result;
  }
  id result = objc_msgSend(v1, sel_textAlignment);
  if (result)
  {
    id result = objc_msgSend(v1, sel_textAlignment);
    if (result != (id)4)
    {
      uint64_t v3 = 0;
LABEL_9:
      return objc_msgSend(v1, sel_setTextAlignment_, v3);
    }
  }
  return result;
}

unint64_t sub_1BFE4597C()
{
  unint64_t result = qword_1EB87A1B0;
  if (!qword_1EB87A1B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB87A1B0);
  }
  return result;
}

uint64_t sub_1BFE459BC(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  sub_1BFE45BD8(a1, (uint64_t)&v15, (unint64_t *)&qword_1EB882B88, (uint64_t (*)(uint64_t))sub_1BFD05974);
  if (v16)
  {
    sub_1BFC773DC(&v15, (uint64_t)v17);
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    uint64_t v8 = sub_1C151A52C();
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      if (a4) {
        a4(0);
      }
      id v10 = v9;
      sub_1C151CD6C();

      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    }
    else
    {
      if (a4) {
        a4(1);
      }
      sub_1C151CD6C();
      uint64_t v12 = swift_allocObject();
      swift_weakInit();
      uint64_t v13 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v14 = (void *)swift_allocObject();
      v14[2] = v13;
      v14[3] = v12;
      void v14[4] = a4;
      v14[5] = a5;
      swift_retain();
      swift_retain();
      sub_1BFC648F8((uint64_t)a4);
      sub_1C151CD2C();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    sub_1BFE47EAC((uint64_t)&v15, (unint64_t *)&qword_1EB882B88, (uint64_t (*)(uint64_t))sub_1BFD05974);
    if (a4) {
      a4(5);
    }
    return sub_1C151CD6C();
  }
}

uint64_t sub_1BFE45BD8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFE4D30C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t type metadata accessor for ThumbnailProcessorRequest()
{
  uint64_t result = qword_1EB878740;
  if (!qword_1EB878740) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *initializeWithCopy for ImageRequestOptions(void *a1, void *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C151A01C();
  uint64_t v9 = *(void *)(v8 - 8);
  id v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  id v11 = v4;
  if (v10(v7, 1, v8))
  {
    sub_1BFE45DC0();
    memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void sub_1BFE45DC0()
{
  if (!qword_1EB871510)
  {
    sub_1C151A01C();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871510);
    }
  }
}

uint64_t sub_1BFE45E18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE45E60(uint64_t a1)
{
  sub_1BFE457AC(0, &qword_1EB87C4F0, type metadata accessor for FeedHeadline.State, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BFE45EEC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for ImageRequestOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C151A01C();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_1BFE4601C(uint64_t a1)
{
  sub_1BFE460A8(0, (unint64_t *)&qword_1EB882B88, (uint64_t (*)(uint64_t))sub_1BFD05974, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BFE460A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFE4610C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1BFE46170()
{
  unint64_t result = qword_1EB87A308;
  if (!qword_1EB87A308)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB87A308);
  }
  return result;
}

uint64_t type metadata accessor for VideoView()
{
  uint64_t result = qword_1EB879B80;
  if (!qword_1EB879B80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for PublisherLogoProcessorRequest(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB878EB0);
}

uint64_t sub_1BFE4621C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = type metadata accessor for ImageRequestOptions();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47[3] = a6;
  v47[4] = a8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v47);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_0, a2, a6);
  v46[3] = a7;
  v46[4] = a9;
  double v21 = __swift_allocate_boxed_opaque_existential_0(v46);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(v21, a3, a7);
  id v22 = objc_msgSend(a1, sel_sourceChannel);
  if (v22)
  {
    uint64_t v23 = v22;
    sub_1BFC66384((uint64_t)v47, (uint64_t)v44);
    sub_1BFC66384((uint64_t)v46, (uint64_t)v42);
    uint64_t v41 = type metadata accessor for ImageRequestOptions;
    sub_1C149FE70(a4, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
    uint64_t v39 = a9;
    uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v44, v45);
    uint64_t v40 = &v37;
    __n128 v25 = MEMORY[0x1F4188790](v24);
    uint64_t v38 = a8;
    id v27 = (char *)&v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v28 + 16))(v27, v25);
    uint64_t v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v42, v43);
    uint64_t v37 = a1;
    __n128 v30 = MEMORY[0x1F4188790](v29);
    uint64_t v32 = a4;
    uint64_t v33 = (uint64_t (*)(uint64_t))((char *)&v37 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t (*)(uint64_t), __n128))(v34 + 16))(v33, v30);
    uint64_t v35 = sub_1C149F744(v23, (uint64_t)v27, v33, (uint64_t)v19, a5, a6, a7, v38, v39);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    swift_unknownObjectRelease();
    swift_retain();
    sub_1BFEE2FE0(v32, (uint64_t (*)(void))v41);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    if (v35) {
      swift_release();
    }
  }
  else
  {
    swift_unknownObjectRelease();
    sub_1BFEE2FE0(a4, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    return 0;
  }
  return v35;
}

uint64_t type metadata accessor for PublisherLogoProcessorOptions(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB878E18);
}

id sub_1BFE465F0(void *a1, const void *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  sub_1BFE47054(0, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v55 - v11;
  v61[3] = &type metadata for HeadlineViewLayout.Attributes;
  v61[4] = &protocol witness table for HeadlineViewLayout.Attributes;
  uint64_t v13 = (void *)swift_allocObject();
  v61[0] = v13;
  memcpy(v13 + 2, a2, 0x130uLL);
  uint64_t v14 = (double *)__swift_project_boxed_opaque_existential_1(v61, (uint64_t)&type metadata for HeadlineViewLayout.Attributes);
  uint64_t v15 = *a3;
  id v16 = (id)FCThumbnailForHeadlineMinimumSize();
  if (!v16)
  {
    sub_1BFE470B8(a5, (uint64_t)&v57, (unint64_t *)&qword_1EB882B80, (uint64_t (*)(uint64_t))sub_1C0090C94);
    if (v58)
    {
      uint64_t v41 = type metadata accessor for ThumbnailProcessorRequest();
      sub_1BFC773DC(&v57, (uint64_t)v60);
      sub_1BFC66384((uint64_t)v60, (uint64_t)&v57);
      double v42 = v14[28];
      double v43 = v14[29];
      double v44 = v14[30];
      double v45 = v14[31];
      uint64_t v46 = v13[34];
      uint64_t v47 = v13[35];
      uint64_t v48 = type metadata accessor for ImageRequestOptions();
      uint64_t v49 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FABC10];
      sub_1BFE470B8((uint64_t)a3 + *(int *)(v48 + 24), (uint64_t)v12, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10]);
      uint64_t v51 = v58;
      uint64_t v50 = v59;
      uint64_t v52 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v57, v58);
      uint64_t v40 = sub_1C02694B8(v52, v46, (uint64_t)v12, v42, v43, v44, v45, 0.0, 0.0, 1.0, 1.0, v41, v51, v50, v53, v54, v15, v47);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
      swift_unknownObjectRelease();
      sub_1BFE46FE4(a5, (unint64_t *)&qword_1EB882B80, (uint64_t (*)(uint64_t))sub_1C0090C94);
      sub_1BFE46FE4(a4, (unint64_t *)&qword_1EB871510, v49);
      sub_1BFE299DC((uint64_t)a3, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    }
    else
    {
      swift_unknownObjectRelease();
      sub_1BFE46FE4(a5, (unint64_t *)&qword_1EB882B80, (uint64_t (*)(uint64_t))sub_1C0090C94);
      sub_1BFE46FE4(a4, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10]);
      sub_1BFE299DC((uint64_t)a3, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
      sub_1BFE46FE4((uint64_t)&v57, (unint64_t *)&qword_1EB882B80, (uint64_t (*)(uint64_t))sub_1C0090C94);
      uint64_t v40 = 0;
    }
    goto LABEL_7;
  }
  uint64_t v56 = v15;
  id v17 = v16;
  id result = objc_msgSend(v17, sel_thumbnailAssetHandle);
  if (result)
  {
    uint64_t v19 = result;
    double v20 = v14[29];
    double v55 = v14[28];
    double v21 = v14[30];
    double v22 = v14[31];
    objc_msgSend(a1, sel_thumbnailFocalFrame);
    double v24 = v23;
    double v26 = v25;
    double v28 = v27;
    double v30 = v29;
    uint64_t v31 = v13[34];
    uint64_t v32 = v13[35];
    uint64_t v33 = type metadata accessor for ImageRequestOptions();
    uint64_t v34 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FABC10];
    sub_1BFE470B8((uint64_t)a3 + *(int *)(v33 + 24), (uint64_t)v12, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10]);
    type metadata accessor for ThumbnailProcessorRequest();
    uint64_t v35 = swift_allocObject();
    uint64_t v40 = sub_1BFE46AB4(v19, v31, (uint64_t)v12, v35, v55, v20, v21, v22, v24, v26, v28, v30, v36, v37, v38, v39, v56, v32);
    swift_unknownObjectRelease();

    sub_1BFE46FE4(a5, (unint64_t *)&qword_1EB882B80, (uint64_t (*)(uint64_t))sub_1C0090C94);
    sub_1BFE46FE4(a4, (unint64_t *)&qword_1EB871510, v34);
    sub_1BFE299DC((uint64_t)a3, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    return (id)v40;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFE46AB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  double v42 = a12;
  double v41 = a6;
  double v40 = a5;
  double v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FABC10];
  sub_1BFE47054(0, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (char *)&v40 - v30;
  v49[3] = sub_1BFF6C3A8();
  v49[4] = sub_1BFE47138((unint64_t *)&qword_1EB890150, (void (*)(uint64_t))sub_1BFF6C3A8);
  v49[0] = a1;
  sub_1BFC66384((uint64_t)v49, a4 + 24);
  sub_1BFE47054(0, (unint64_t *)&qword_1EB87A8A0, (uint64_t (*)(uint64_t))sub_1C0065520, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = 0x69616E626D756874;
  *(void *)(inited + 40) = 0xE90000000000006CLL;
  sub_1BFC66384((uint64_t)v49, inited + 48);
  *(void *)(a4 + 16) = sub_1BFF59AB8(inited);
  *(double *)(a4 + 80) = a5;
  double v33 = v41;
  *(double *)(a4 + 88) = v41;
  *(double *)(a4 + 96) = a7;
  *(double *)(a4 + 104) = a8;
  *(double *)(a4 + 112) = a9;
  *(double *)(a4 + 120) = a10;
  *(double *)(a4 + 128) = a11;
  *(double *)(a4 + 136) = v42;
  *(void *)(a4 + 144) = a17;
  *(double *)(a4 + 152) = *(double *)&a2;
  *(void *)(a4 + 160) = a18;
  sub_1BFE470B8(a3, a4 + OBJC_IVAR____TtC8NewsFeed25ThumbnailProcessorRequest_border, (unint64_t *)&qword_1EB871510, v28);
  double v43 = 0.0;
  double v44 = -2.68156159e154;
  sub_1C15200FC();
  double v47 = v43;
  double v48 = v44;
  id v34 = objc_msgSend(a1, sel_uniqueKey);
  sub_1C151E62C();

  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  double v43 = v40;
  double v44 = v33;
  double v45 = a7;
  double v46 = a8;
  type metadata accessor for CGRect(0);
  sub_1C152036C();
  sub_1C151E80C();
  double v43 = a9;
  double v44 = a10;
  double v45 = a11;
  double v46 = v42;
  sub_1C152036C();
  sub_1C151E80C();
  sub_1C151EF4C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  double v43 = *(double *)&a2;
  type metadata accessor for UIRectCorner(0);
  sub_1C152036C();
  sub_1C151E80C();
  sub_1C151EF4C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1BFE470B8(a3, (uint64_t)v31, (unint64_t *)&qword_1EB871510, v28);
  uint64_t v35 = sub_1C151A01C();
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v31, 1, v35) == 1)
  {
    sub_1BFE46FE4((uint64_t)v31, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10]);
  }
  else
  {
    sub_1C151A00C();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v35);
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  double v37 = v47;
  double v38 = v48;
  sub_1BFE46FE4(a3, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10]);
  *(double *)(a4 + 64) = v37;
  *(double *)(a4 + 72) = v38;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  return a4;
}

uint64_t sub_1BFE46FE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFE47054(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1BFE47054(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFE470B8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFE47054(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFE47138(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFE47184(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1BFE47218(a1, *(void *)(v1 + 16), v1 + v4, (void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_1BFE47218(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = a2 + 16;
  if (((1 << a1) & 0x15) != 0)
  {
    swift_beginAccess();
    uint64_t v5 = MEMORY[0x1C18C9C60](v4);
    if (!v5) {
      return;
    }
    uint64_t v6 = (void *)v5;
    id v7 = *(id *)(v5 + qword_1EB874280);

    objc_msgSend(v7, sel_setAttributedText_, 0);
    goto LABEL_7;
  }
  if (((1 << a1) & 0x22) != 0)
  {
    swift_beginAccess();
    uint64_t v9 = MEMORY[0x1C18C9C60](v4);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      id v7 = *(id *)(v9 + qword_1EB874280);

      type metadata accessor for HeadlineViewLayout.Context(0);
      uint64_t v11 = a4[3];
      uint64_t v12 = __swift_project_boxed_opaque_existential_1(a4, v11);
      v15[3] = v11;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v15);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(boxed_opaque_existential_0, v12, v11);
      id v14 = (id)sub_1C0DF62E0((uint64_t)v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      objc_msgSend(v7, sel_setAttributedText_, v14);

LABEL_7:
    }
  }
}

void sub_1BFE473AC(void *a1, double a2)
{
  objc_msgSend(a1, sel_setBackgroundColor_, *(void *)(*(void *)v2 + 96));
  id v5 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v5, sel_setCornerRadius_, a2);
}

void sub_1BFE47438(void *a1, uint64_t a2)
{
  sub_1BFF98550(0, &qword_1EB87C4F0, type metadata accessor for FeedHeadline.State, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (unsigned __int8 *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v19 - v8;
  sub_1BFF985B4(a2, (uint64_t)&v19 - v8, &qword_1EB87C4F0, type metadata accessor for FeedHeadline.State);
  uint64_t v10 = type metadata accessor for FeedHeadline.State(0);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  if (v11(v9, 1, v10) == 1)
  {
    sub_1C0CCB640((uint64_t)v9, &qword_1EB87C4F0, type metadata accessor for FeedHeadline.State);
    int v12 = 2;
  }
  else
  {
    int v12 = v9[1];
    sub_1BFE476F0((uint64_t)v9);
  }
  sub_1BFF985B4(a2, (uint64_t)v6, &qword_1EB87C4F0, type metadata accessor for FeedHeadline.State);
  if (v11((char *)v6, 1, v10) == 1)
  {
    sub_1C0CCB640((uint64_t)v6, &qword_1EB87C4F0, type metadata accessor for FeedHeadline.State);
    int v13 = 3;
  }
  else
  {
    int v13 = *v6;
    sub_1BFE476F0((uint64_t)v6);
  }
  if (v12 != 2 && (v12 & 1) == 0)
  {
    id v15 = objc_msgSend(self, sel_systemOrangeColor);
LABEL_17:
    v17.super.Class isa = (Class)v15;
    goto LABEL_18;
  }
  if ((v13 - 2) < 2)
  {
    objc_msgSend(a1, sel_setTintColor_, 0);
    return;
  }
  if (v13)
  {
    id v15 = objc_msgSend(self, sel_systemRedColor);
    goto LABEL_17;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  v16._countAndFlagsBits = 0x433830434335;
  v16._object = (void *)0xE600000000000000;
  v17.super.Class isa = UIColor.init(hex:)(v16).super.isa;
LABEL_18:
  Class isa = v17.super.isa;
  objc_msgSend(a1, sel_setTintColor_, v17.super.isa);
}

uint64_t sub_1BFE476F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedHeadline.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BFE4774C()
{
  unint64_t result = qword_1EB8761D0;
  if (!qword_1EB8761D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8761D0);
  }
  return result;
}

void sub_1BFE477A0()
{
  if (!qword_1EB874918)
  {
    sub_1C007D508();
    unint64_t v0 = type metadata accessor for CellAutomation();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB874918);
    }
  }
}

uint64_t sub_1BFE477FC()
{
  uint64_t v1 = *v0;
  switch(v1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v1 = sub_1C1515B8C();

      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t sub_1BFE47A50(uint64_t a1, uint64_t a2)
{
  sub_1BFE4D30C(0, &qword_1EB87C4F0, type metadata accessor for FeedHeadline.State, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (unsigned __int8 *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v17 - v7;
  sub_1BFE45BD8(a2, (uint64_t)&v17 - v7, &qword_1EB87C4F0, type metadata accessor for FeedHeadline.State);
  uint64_t v9 = type metadata accessor for FeedHeadline.State(0);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  if (v10(v8, 1, v9) == 1)
  {
    sub_1BFE47EAC((uint64_t)v8, &qword_1EB87C4F0, type metadata accessor for FeedHeadline.State);
    int v11 = 2;
  }
  else
  {
    int v11 = v8[1];
    sub_1BFE47D50((uint64_t)v8, type metadata accessor for FeedHeadline.State);
  }
  sub_1BFE45BD8(a2, (uint64_t)v5, &qword_1EB87C4F0, type metadata accessor for FeedHeadline.State);
  if (v10((char *)v5, 1, v9) == 1)
  {
    sub_1BFE47EAC((uint64_t)v5, &qword_1EB87C4F0, type metadata accessor for FeedHeadline.State);
    int v12 = 3;
  }
  else
  {
    int v12 = *v5;
    sub_1BFE47D50((uint64_t)v5, type metadata accessor for FeedHeadline.State);
  }
  BOOL v13 = v11 != 2 && (v11 & 1) == 0;
  if (v13 || (v12 - 2) >= 2)
  {
    id v14 = (void *)sub_1C151E5EC();
    id v15 = objc_msgSend(self, sel_systemImageNamed_, v14);
  }
  return sub_1C151CD6C();
}

uint64_t getEnumTagSinglePayload for FeedHeadline.State(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C01A8B2C);
}

uint64_t getEnumTagSinglePayload for FeedItem.SharedState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0A6D7E8);
}

uint64_t sub_1BFE47D50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_1BFE47DB0(uint64_t a1)
{
  return sub_1BFE47DD4(a1);
}

id sub_1BFE47DD4(uint64_t a1)
{
  if (a1 == 1)
  {
    id result = objc_msgSend(v1, sel_contentMode);
    if (result == (id)8) {
      return result;
    }
    uint64_t v3 = 8;
    goto LABEL_8;
  }
  if (a1)
  {
    id result = (id)sub_1C152040C();
    __break(1u);
    return result;
  }
  id result = objc_msgSend(v1, sel_contentMode);
  if (result != (id)7)
  {
    uint64_t v3 = 7;
LABEL_8:
    return objc_msgSend(v1, sel_setContentMode_, v3);
  }
  return result;
}

uint64_t sub_1BFE47EAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFE4D30C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t (*sub_1BFE47F1C(uint64_t a1, id *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11))(void)
{
  long long v254 = a2;
  uint64_t v267 = a1;
  uint64_t v240 = sub_1C151E20C();
  uint64_t v239 = *(void *)(v240 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v240);
  uint64_t v238 = (char *)&v217 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v247 = *(void (***)(char *, uint64_t))(a7 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v262 = (char *)&v217 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v264 = sub_1C151B1CC();
  uint64_t v246 = *(char **)(v264 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v264);
  uint64_t v261 = (char *)&v217 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v234 = (char *)&v217 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v248 = (char *)&v217 - v21;
  uint64_t v278 = a6;
  uint64_t v279 = a7;
  uint64_t v268 = a7;
  uint64_t v265 = a10;
  uint64_t v280 = a10;
  uint64_t v281 = a11;
  uint64_t v266 = a11;
  uint64_t v237 = sub_1C151B67C();
  uint64_t v245 = *(void *)(v237 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v237);
  uint64_t v236 = (char *)&v217 - v23;
  uint64_t v269 = a6;
  uint64_t v244 = *(void (***)(char *, uint64_t))(a6 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v235 = (char *)&v217 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v251 = (char *)&v217 - v26;
  uint64_t v274 = sub_1C151677C();
  uint64_t v250 = *(void *)(v274 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v274);
  v233 = (char *)&v217 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v272 = (char *)&v217 - v30;
  MEMORY[0x1F4188790](v29);
  uint64_t v271 = (uint64_t)&v217 - v31;
  sub_1BFE4E978(0, (unint64_t *)&qword_1EB8715D0, MEMORY[0x1E4FAD2A0]);
  MEMORY[0x1F4188790](v32 - 8);
  unint64_t v260 = (char *)&v217 - v33;
  uint64_t v270 = sub_1C151C1EC();
  int64_t v243 = *(void (***)(char *, char *, uint64_t))(v270 - 8);
  uint64_t v34 = MEMORY[0x1F4188790](v270);
  uint64_t v257 = (char *)&v217 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  v259 = (char *)&v217 - v36;
  uint64_t v241 = type metadata accessor for ImageRequestOptions();
  MEMORY[0x1F4188790](v241);
  uint64_t v242 = (char *)&v217 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE4E978(0, &qword_1EB894688, MEMORY[0x1E4FAC150]);
  uint64_t v39 = MEMORY[0x1F4188790](v38 - 8);
  uint64_t v252 = (void (**)(char *, uint64_t))((char *)&v217 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v39);
  double v42 = (char *)&v217 - v41;
  uint64_t v258 = sub_1C151A9BC();
  unint64_t v273 = *(void *)(v258 - 8);
  uint64_t v43 = MEMORY[0x1F4188790](v258);
  id v253 = (char *)&v217 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  uint64_t v263 = (void (**)(uint64_t, uint64_t))((char *)&v217 - v46);
  MEMORY[0x1F4188790](v45);
  uint64_t v249 = (char *)&v217 - v47;
  uint64_t v48 = sub_1C151BDDC();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  uint64_t v52 = (char *)&v217 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v50);
  uint64_t v54 = (char *)&v217 - v53;
  uint64_t v55 = sub_1C151B62C();
  uint64_t v56 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v58 = (char *)&v217 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v59 = objc_msgSend(self, sel_isMainThread);
  uint64_t v60 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
  uint64_t v255 = a3;
  v60(v58, a3, v55);
  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v55);
    return nullsub_1;
  }
  sub_1C151B5FC();
  (*(void (**)(char *, void, uint64_t))(v49 + 104))(v52, *MEMORY[0x1E4FACE20], v48);
  char v61 = sub_1C151BDCC();
  uint64_t v62 = *(void (**)(char *, uint64_t))(v49 + 8);
  v62(v52, v48);
  v62(v54, v48);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v55);
  if ((v61 & 1) == 0) {
    return nullsub_1;
  }
  uint64_t v63 = (uint64_t)v256 + OBJC_IVAR____TtC8NewsFeed33FeedItemRendererPipelineProcessor_lastRendererOptions;
  swift_beginAccess();
  sub_1BFE4F304(v63, (uint64_t)v42);
  unint64_t v64 = v273;
  uint64_t v65 = v258;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v273 + 48))(v42, 1, v258) == 1)
  {
    sub_1C0090C38((uint64_t)v42, &qword_1EB894688, MEMORY[0x1E4FAC150]);
    uint64_t v66 = v270;
  }
  else
  {
    uint64_t v67 = v249;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v249, v42, v65);
    uint64_t v68 = v263;
    sub_1C151B50C();
    sub_1C151A9AC();
    CGFloat v70 = v69;
    CGFloat v72 = v71;
    CGFloat v74 = v73;
    CGFloat v76 = v75;
    uint64_t v77 = *(void (**)(char *, uint64_t))(v64 + 8);
    v77((char *)v68, v65);
    v282.origin.double x = v70;
    v282.origin.double y = v72;
    v282.size.double width = v74;
    v282.size.double height = v76;
    double Width = CGRectGetWidth(v282);
    sub_1C151A9AC();
    CGFloat v79 = CGRectGetWidth(v283);
    uint64_t v66 = v270;
    if (Width != v79)
    {
      uint64_t v80 = v256;
      __swift_project_boxed_opaque_existential_1(v256 + 2, v256[5]);
      sub_1C151A53C();
      __swift_project_boxed_opaque_existential_1(v80 + 7, v80[10]);
      sub_1C151A53C();
      __swift_project_boxed_opaque_existential_1(v80 + 12, v80[15]);
      uint64_t v65 = v258;
      sub_1C151A53C();
    }
    v77(v67, v65);
    unint64_t v64 = v273;
  }
  uint64_t v81 = (uint64_t)v252;
  sub_1C151B50C();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v64 + 56))(v81, 0, 1, v65);
  swift_beginAccess();
  sub_1BFE4F284(v81, v63);
  swift_endAccess();
  uint64_t v82 = v263;
  sub_1C151B50C();
  sub_1C151A9AC();
  CGFloat v84 = v83;
  CGFloat v86 = v85;
  CGFloat v88 = v87;
  CGFloat v90 = v89;
  uint64_t v91 = *(void (**)(char *, uint64_t))(v64 + 8);
  v91((char *)v82, v65);
  v284.origin.double x = v84;
  v284.origin.double y = v86;
  v284.size.double width = v88;
  v284.size.double height = v90;
  CGFloat v92 = CGRectGetWidth(v284);
  unint64_t v93 = v253;
  sub_1C151B50C();
  sub_1C151A9AC();
  CGFloat v95 = v94;
  CGFloat v97 = v96;
  CGFloat v99 = v98;
  CGFloat v101 = v100;
  v91(v93, v65);
  v285.origin.double x = v95;
  v285.origin.double y = v97;
  v285.size.double width = v99;
  v285.size.double height = v101;
  CGFloat Height = CGRectGetHeight(v285);
  p_superclass = &OBJC_METACLASS____TtC8NewsFeed20CategoryViewRenderer.superclass;
  uint64_t v104 = (id *)&unk_1EB93C000;
  unint64_t v273 = sub_1C12832EC();
  if (v273)
  {
    unint64_t v105 = v273 >> 62;
    if (v273 >> 62) {
      goto LABEL_74;
    }
    uint64_t v106 = *(void *)((v273 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_12:
    uint64_t v228 = v106;
    if (v106)
    {
      double v107 = CACurrentMediaTime();
      if (p_superclass[12] != (__objc2_class *)-1) {
        swift_once();
      }
      id v108 = v104[224];
      sub_1C151F35C();
      sub_1BFE4D2A4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v224 = v109;
      uint64_t v110 = swift_allocObject();
      *(_OWORD *)(v110 + 16) = xmmword_1C1529AE0;
      uint64_t v255 = v273 & 0xFFFFFFFFFFFFFF8;
      if (v105)
      {
        swift_bridgeObjectRetain();
        uint64_t v111 = sub_1C15204BC();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v111 = *(void *)((v273 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v113 = MEMORY[0x1E4FBB5C8];
      *(void *)(v110 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v110 + 64) = v113;
      uint64_t v223 = v111;
      *(void *)(v110 + 32) = v111;
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      uint64_t v114 = v263;
      sub_1C151B50C();
      char v115 = sub_1C151A99C();
      v91((char *)v114, v258);
      sub_1C151B52C();
      uint64_t v117 = v116;
      uint64_t v118 = sub_1C151B57C();
      uint64_t v119 = v242;
      uint64_t v120 = &v242[*(int *)(v241 + 24)];
      uint64_t v121 = sub_1C151A01C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v120, 1, 1, v121);
      void *v119 = v117;
      v119[1] = v118;
      type metadata accessor for FeedItemRendererPipelineProcessor.Context(0);
      uint64_t v122 = swift_allocObject();
      *(void *)(v122
                + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_prewarmedRequestCount) = 0;
      uint64_t v123 = OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_loadingGroup;
      *(void *)(v122 + v123) = dispatch_group_create();
      uint64_t v124 = MEMORY[0x1E4FBC870];
      *(void *)(v122
                + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_supplementaryIndicesSeen) = MEMORY[0x1E4FBC870];
      *(void *)(v122
                + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_supplementaryIndexPathsSeen) = v124;
      *(unsigned char *)(v122
               + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_isLiveResizing) = v115 & 1;
      sub_1BFE4F1E8((uint64_t)v119, v122+ OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_imageRequestOptions);
      uint64_t v125 = v122
           + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_supplementaryIndexPathsSeen;
      uint64_t v126 = (uint64_t *)(v122
                       + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_supplementaryIndicesSeen);
      uint64_t v104 = (id *)v273;
      uint64_t v91 = (void (*)(char *, uint64_t))(v273 & 0xC000000000000001);
      swift_bridgeObjectRetain();
      uint64_t v227 = v126;
      swift_beginAccess();
      uint64_t v225 = v125;
      swift_beginAccess();
      unint64_t v127 = 0;
      long long v254 = v104 + 4;
      uint64_t v263 = (void (**)(uint64_t, uint64_t))(v250 + 8);
      uint64_t v252 = (void (**)(char *, uint64_t))(v246 + 8);
      uint64_t v249 = (char *)(v247 + 2);
      ++v247;
      uint64_t v242 = (char *)(v243 + 6);
      uint64_t v241 = (uint64_t)(v243 + 4);
      long long v232 = v243 + 2;
      id v231 = (uint64_t (**)(char *, uint64_t))(v243 + 11);
      int v230 = *MEMORY[0x1E4FAD298];
      int v226 = *MEMORY[0x1E4FAD290];
      uint64_t v229 = (void (**)(char *, uint64_t))(v243 + 1);
      uint64_t v222 = (void (**)(char *, uint64_t))(v243 + 12);
      uint64_t v221 = (void (**)(char *, char *, uint64_t))(v250 + 32);
      int64_t v243 = (void (**)(char *, char *, uint64_t))(v250 + 16);
      uint64_t v218 = (void (**)(char *, char *, uint64_t))(v246 + 16);
      uint64_t v220 = (void (**)(char *, uint64_t))(v245 + 8);
      long long v219 = (void (**)(uint64_t *, char *, uint64_t))(v244 + 2);
      ++v244;
      p_superclass = (__objc2_class **)&selRef_setCenter_;
      uint64_t v128 = v272;
      id v253 = (char *)v122;
      uint64_t v129 = v256;
      unint64_t v105 = v228;
      uint64_t v258 = (uint64_t)v91;
      while (1)
      {
        if (v91)
        {
          uint64_t v130 = (id *)MEMORY[0x1C18C7CB0](v127, v273);
        }
        else
        {
          if (v127 >= *(void *)(v255 + 16)) {
            goto LABEL_73;
          }
          uint64_t v130 = (id *)v254[v127];
        }
        uint64_t v104 = v130;
        if (__OFADD__(v127++, 1))
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          swift_bridgeObjectRetain();
          uint64_t v106 = sub_1C15204BC();
          swift_bridgeObjectRelease();
          goto LABEL_12;
        }
        id v132 = objc_msgSend(v130, (SEL)p_superclass[127]);
        if (v132)
        {
          if (v132 == (id)1)
          {
            uint64_t v133 = v129;
            uint64_t v134 = (uint64_t)v260;
            sub_1C1519E5C();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v242)(v134, 1, v66) == 1)
            {

              sub_1C0090C38(v134, (unint64_t *)&qword_1EB8715D0, MEMORY[0x1E4FAD2A0]);
              uint64_t v129 = v133;
              goto LABEL_64;
            }
            uint64_t v149 = v259;
            (*(void (**)(char *, uint64_t, uint64_t))v241)(v259, v134, v66);
            id v150 = v257;
            (*v232)(v257, v149, v66);
            int v151 = (*v231)(v150, v66);
            uint64_t v152 = v274;
            if (v151 == v230)
            {
              id v153 = objc_msgSend(v104, sel_indexPath);
              uint64_t v154 = v271;
              sub_1C151672C();

              uint64_t v155 = sub_1C151676C();
              (*v263)(v154, v152);
              uint64_t v129 = v133;
              if (sub_1BFFC399C(v155, *v227))
              {
                uint64_t v66 = v270;
                (*v229)(v259, v270);

                goto LABEL_59;
              }
              swift_beginAccess();
              sub_1BFE4EA54((uint64_t *)&v275, v155);
              swift_endAccess();
              uint64_t v184 = v269;
              uint64_t v278 = v269;
              uint64_t v279 = v268;
              uint64_t v280 = v265;
              uint64_t v281 = v266;
              sub_1C151A79C();
              uint64_t v185 = v236;
              sub_1C151A7BC();
              uint64_t v186 = v237;
              sub_1C151B63C();
              uint64_t v187 = v185;
              uint64_t v188 = v251;
              (*v220)(v187, v186);
              uint64_t v281 = v184;
              long long v189 = __swift_allocate_boxed_opaque_existential_0(&v278);
              uint64_t v190 = *v219;
              (*v219)(v189, v188, v184);
              objc_msgSend(v104, sel_frame);
              v292.origin.double x = v191;
              v292.origin.double y = v192;
              v292.size.double width = v193;
              v292.size.double height = v194;
              v288.origin.double x = 0.0;
              v288.origin.double y = 0.0;
              v288.size.double width = v92;
              v288.size.double height = Height;
              CGRectIntersectsRect(v288, v292);
              sub_1BFE4C908((uint64_t)&v278, v122);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v278);
              v190((uint64_t *)v235, v188, v184);
              uint64_t v195 = MEMORY[0x1E4FAD6B0];
              sub_1BFC845BC(0, &qword_1EB8715F8);
              char v196 = swift_dynamicCast();
              uint64_t v91 = (void (*)(char *, uint64_t))v258;
              if (v196)
              {
                sub_1BFC773DC(&v275, (uint64_t)&v278);
                __swift_project_boxed_opaque_existential_1(&v278, v281);
                uint64_t v197 = sub_1C151C76C();
                if (v197)
                {
                  uint64_t v246 = (char *)v197;
                  uint64_t v198 = *(void *)(v197 + 16);
                  uint64_t v129 = v256;
                  uint64_t v122 = (uint64_t)v253;
                  if (v198)
                  {
                    uint64_t v199 = v246 + 32;
                    do
                    {
                      uint64_t v200 = v199[3];
                      uint64_t v201 = __swift_project_boxed_opaque_existential_1(v199, v200);
                      *((void *)&v276 + 1) = v200;
                      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v275);
                      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v200 - 8) + 16))(boxed_opaque_existential_0, v201, v200);
                      objc_msgSend(v104, sel_frame);
                      v293.origin.double x = v203;
                      v293.origin.double y = v204;
                      v293.size.double width = v205;
                      v293.size.double height = v206;
                      v289.origin.double x = 0.0;
                      v289.origin.double y = 0.0;
                      v289.size.double width = v92;
                      v289.size.double height = Height;
                      CGRectIntersectsRect(v289, v293);
                      sub_1BFE4C908((uint64_t)&v275, v122);
                      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v275);
                      v199 += 5;
                      --v198;
                    }
                    while (v198);
                  }
                  swift_bridgeObjectRelease();

                  (*v244)(v251, v269);
                  uint64_t v66 = v270;
                  (*v229)(v259, v270);
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v278);
                  uint64_t v128 = v272;
                  goto LABEL_57;
                }

                (*v244)(v188, v269);
                uint64_t v66 = v270;
                (*v229)(v259, v270);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v278);
                uint64_t v128 = v272;
                unint64_t v105 = v228;
              }
              else
              {
                uint64_t v277 = 0;
                long long v276 = 0u;
                long long v275 = 0u;

                (*v244)(v188, v184);
                uint64_t v66 = v270;
                (*v229)(v259, v270);
                sub_1BFE4D174((uint64_t)&v275, &qword_1EB85C938, &qword_1EB8715F8, v195);
                uint64_t v128 = v272;
              }
              uint64_t v129 = v256;
LABEL_68:
              uint64_t v122 = (uint64_t)v253;
              goto LABEL_65;
            }
            uint64_t v129 = v133;
            if (v151 == v226)
            {
              uint64_t v156 = v257;
              (*v222)(v257, v270);
              sub_1C03F70A0();
              (*v221)(v128, &v156[*(int *)(v157 + 48)], v152);
              uint64_t v158 = *(void *)v225;
              int v159 = v128;
              if (*(void *)(*(void *)v225 + 16))
              {
                sub_1C12839B0(&qword_1EB85C780);
                swift_bridgeObjectRetain();
                uint64_t v160 = sub_1C151E47C();
                uint64_t v161 = -1 << *(unsigned char *)(v158 + 32);
                unint64_t v162 = v160 & ~v161;
                uint64_t v246 = (char *)(v158 + 56);
                if ((*(void *)(v158 + 56 + ((v162 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v162))
                {
                  uint64_t v245 = ~v161;
                  uint64_t v163 = *(void *)(v250 + 72);
                  uint64_t v164 = *(void (**)(uint64_t, unint64_t, uint64_t))(v250 + 16);
                  while (1)
                  {
                    uint64_t v165 = v271;
                    uint64_t v166 = v274;
                    v164(v271, *(void *)(v158 + 48) + v163 * v162, v274);
                    sub_1C12839B0(&qword_1EB8711A0);
                    char v167 = sub_1C151E5CC();
                    uint64_t v168 = *v263;
                    (*v263)(v165, v166);
                    if (v167) {
                      break;
                    }
                    unint64_t v162 = (v162 + 1) & v245;
                    uint64_t v128 = v272;
                    if (((*(void *)&v246[(v162 >> 3) & 0xFFFFFFFFFFFFFF8] >> v162) & 1) == 0) {
                      goto LABEL_44;
                    }
                  }

                  swift_bridgeObjectRelease();
                  uint64_t v128 = v272;
                  v168((uint64_t)v272, v274);
                  uint64_t v66 = v270;
                  (*v229)(v259, v270);
                  uint64_t v129 = v256;
                  goto LABEL_63;
                }
LABEL_44:
                swift_bridgeObjectRelease();
                uint64_t v129 = v256;
                uint64_t v152 = v274;
                int v159 = v128;
              }
              uint64_t v169 = v233;
              (*v243)(v233, v159, v152);
              swift_beginAccess();
              uint64_t v170 = v271;
              sub_1C02BAD18(v271, v169);
              swift_endAccess();
              uint64_t v171 = (char *)*v263;
              (*v263)(v170, v152);
              uint64_t v278 = v269;
              uint64_t v279 = v268;
              uint64_t v280 = v265;
              uint64_t v281 = v266;
              sub_1C151A79C();
              uint64_t v172 = v248;
              sub_1C151A7AC();
              uint64_t v173 = v264;
              (*v218)(v234, v172, v264);
              sub_1BFC845BC(0, &qword_1EB8715F8);
              if (swift_dynamicCast())
              {
                uint64_t v246 = v171;
                sub_1BFC773DC(&v275, (uint64_t)&v278);
                __swift_project_boxed_opaque_existential_1(&v278, v281);
                uint64_t v174 = sub_1C151C76C();
                uint64_t v91 = (void (*)(char *, uint64_t))v258;
                if (!v174)
                {

                  (*v252)(v248, v264);
                  uint64_t v128 = v272;
                  ((void (*)(char *, uint64_t))v246)(v272, v152);
                  uint64_t v66 = v270;
                  (*v229)(v259, v270);
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v278);
                  unint64_t v105 = v228;
                  goto LABEL_68;
                }
                uint64_t v245 = v174;
                uint64_t v175 = *(void *)(v174 + 16);
                uint64_t v122 = (uint64_t)v253;
                if (v175)
                {
                  uint64_t v176 = (void *)(v245 + 32);
                  do
                  {
                    uint64_t v177 = v176[3];
                    uint64_t v178 = __swift_project_boxed_opaque_existential_1(v176, v177);
                    *((void *)&v276 + 1) = v177;
                    uint64_t v179 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v275);
                    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v177 - 8) + 16))(v179, v178, v177);
                    objc_msgSend(v104, sel_frame);
                    v291.origin.double x = v180;
                    v291.origin.double y = v181;
                    v291.size.double width = v182;
                    v291.size.double height = v183;
                    v287.origin.double x = 0.0;
                    v287.origin.double y = 0.0;
                    v287.size.double width = v92;
                    v287.size.double height = Height;
                    CGRectIntersectsRect(v287, v291);
                    sub_1BFE4C908((uint64_t)&v275, v122);
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v275);
                    v176 += 5;
                    --v175;
                  }
                  while (v175);
                }
                swift_bridgeObjectRelease();

                (*v252)(v248, v264);
                uint64_t v128 = v272;
                ((void (*)(char *, uint64_t))v246)(v272, v274);
                uint64_t v66 = v270;
                (*v229)(v259, v270);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v278);
LABEL_57:
                unint64_t v105 = v228;
LABEL_65:
                p_superclass = (__objc2_class **)&selRef_setCenter_;
                goto LABEL_24;
              }
              uint64_t v277 = 0;
              long long v276 = 0u;
              long long v275 = 0u;

              (*v252)(v172, v173);
              ((void (*)(char *, uint64_t))v171)(v159, v152);
              uint64_t v66 = v270;
              (*v229)(v259, v270);
              sub_1BFE4D174((uint64_t)&v275, &qword_1EB85C938, &qword_1EB8715F8, MEMORY[0x1E4FAD6B0]);
              uint64_t v128 = v159;
LABEL_63:
              unint64_t v105 = v228;
              uint64_t v122 = (uint64_t)v253;
            }
            else
            {
              uint64_t v207 = *v229;
              uint64_t v66 = v270;
              (*v229)(v259, v270);

              v207(v257, v66);
LABEL_59:
              uint64_t v128 = v272;
            }
LABEL_64:
            uint64_t v91 = (void (*)(char *, uint64_t))v258;
            goto LABEL_65;
          }
        }
        else
        {
          id v135 = objc_msgSend(v104, sel_indexPath);
          uint64_t v136 = v271;
          sub_1C151672C();

          uint64_t v137 = v268;
          uint64_t v278 = v269;
          uint64_t v279 = v268;
          uint64_t v280 = v265;
          uint64_t v281 = v266;
          sub_1C151A79C();
          uint64_t v138 = v261;
          sub_1C151A7AC();
          (*v263)(v136, v274);
          uint64_t v139 = v262;
          uint64_t v140 = v264;
          sub_1C151B1BC();
          uint64_t v141 = v138;
          uint64_t v66 = v270;
          uint64_t v142 = v140;
          uint64_t v122 = (uint64_t)v253;
          (*v252)(v141, v142);
          uint64_t v281 = v137;
          char v143 = __swift_allocate_boxed_opaque_existential_0(&v278);
          (*(void (**)(uint64_t *, char *, uint64_t))v249)(v143, v139, v137);
          objc_msgSend(v104, sel_frame);
          v290.origin.double x = v144;
          v290.origin.double y = v145;
          v290.size.double width = v146;
          v290.size.double height = v147;
          v286.origin.double x = 0.0;
          v286.origin.double y = 0.0;
          v286.size.double width = v92;
          v286.size.double height = Height;
          CGRectIntersectsRect(v286, v290);
          sub_1BFE4C908((uint64_t)&v278, v122);
          p_superclass = (__objc2_class **)&selRef_setCenter_;

          uint64_t v148 = v139;
          uint64_t v128 = v272;
          uint64_t v91 = (void (*)(char *, uint64_t))v258;
          (*v247)(v148, v137);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v278);
        }
LABEL_24:
        if (v127 == v105)
        {
          swift_bridgeObjectRelease();
          uint64_t v208 = v238;
          sub_1C151E1EC();
          sub_1C151F4FC();
          (*(void (**)(char *, uint64_t))(v239 + 8))(v208, v240);
          double v209 = CACurrentMediaTime();
          id v210 = (id)qword_1EB93C700;
          sub_1C151F35C();
          uint64_t v211 = swift_allocObject();
          *(_OWORD *)(v211 + 16) = xmmword_1C152C7F0;
          swift_bridgeObjectRelease();
          uint64_t v212 = MEMORY[0x1E4FBB550];
          *(void *)(v211 + 56) = MEMORY[0x1E4FBB550];
          uint64_t v213 = MEMORY[0x1E4FBB5C8];
          *(void *)(v211 + 32) = v223;
          uint64_t v214 = *(void *)(v122
                           + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_prewarmedRequestCount);
          *(void *)(v211 + 96) = v212;
          *(void *)(v211 + 104) = v213;
          *(void *)(v211 + 64) = v213;
          *(void *)(v211 + 72) = v214;
          uint64_t v215 = MEMORY[0x1E4FBB460];
          *(void *)(v211 + 136) = MEMORY[0x1E4FBB3D0];
          *(void *)(v211 + 144) = v215;
          *(double *)(v211 + 112) = (v209 - v107) * 1000.0;
          sub_1C15197BC();

          swift_bridgeObjectRelease();
          swift_release();
          return nullsub_1;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  if (p_superclass[12] != (__objc2_class *)-1) {
    swift_once();
  }
  id v112 = v104[224];
  sub_1C151F35C();
  sub_1C15197BC();

  return nullsub_1;
}

uint64_t sub_1BFE4A144@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *a3;
  unint64_t v8 = (unint64_t)*a3 >> 61;
  if (((1 << v8) & 0x5D) != 0) {
    goto LABEL_2;
  }
  uint64_t v10 = (double *)result;
  if (v8 == 1)
  {
    int v12 = (_OWORD *)(v7 & 0x1FFFFFFFFFFFFFFFLL);
    long long v13 = v12[7];
    long long v41 = v12[6];
    long long v42 = v13;
    long long v14 = v12[9];
    long long v43 = v12[8];
    long long v44 = v14;
    long long v15 = v12[3];
    long long v37 = v12[2];
    long long v38 = v15;
    long long v16 = v12[5];
    long long v39 = v12[4];
    long long v40 = v16;
    long long v36 = v12[1];
    if (a4 && (unint64_t v17 = *(void *)(a4 + 120), v17 != 3))
    {
      uint64_t v27 = *(void *)(a4 + 120);
      uint64_t v19 = *(void **)(result + 8);
      sub_1C0494FB8((uint64_t)&v36);
      sub_1BFEF6854(v17);
      uint64_t v18 = sub_1BFE4C2A0(v19);
      sub_1BFEF68D8(v17);
    }
    else
    {
      sub_1C0494FB8((uint64_t)&v36);
      uint64_t v18 = 0;
      uint64_t v19 = (void *)*((void *)v10 + 1);
    }
    ((void (*)(uint64_t *__return_ptr, void *, uint64_t))v44)(&v27, v19, v18);
    if (!(void)v29)
    {
      sub_1C0494FF0((uint64_t)&v36);
      id result = sub_1BFF44FE0((uint64_t)&v27);
LABEL_2:
      *(void *)(a5 + 32) = 0;
      *(_OWORD *)a5 = 0u;
      *(_OWORD *)(a5 + 16) = 0u;
      return result;
    }
    sub_1BFC773DC((long long *)&v27, (uint64_t)v35);
    sub_1BFC66384((uint64_t)v35, (uint64_t)v34);
    double v22 = *(double *)(v5 + 80);
    double v23 = *(double *)(v5 + 88);
    v45[0] = v36;
    v45[1] = v37;
    long long v29 = v40;
    long long v30 = v41;
    double v24 = *v10;
    char v46 = v38;
    uint64_t v27 = *((void *)&v38 + 1);
    long long v28 = v39;
    long long v31 = v42;
    uint64_t v32 = v43;
    char v33 = BYTE8(v43);
    uint64_t v25 = type metadata accessor for FormatImageRequest();
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v26 = sub_1C1359FC4(v34, a4, a2, v18, 0, v19, (uint64_t)v45, (uint64_t)&v27, v22, v23, v24);
    *(void *)(a5 + 24) = v25;
    *(void *)(a5 + 32) = sub_1BFE4C7C0(&qword_1EB888620, 255, (void (*)(uint64_t))type metadata accessor for FormatImageRequest);
    sub_1C0494FF0((uint64_t)&v36);
    *(void *)a5 = v26;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  }
  else
  {
    uint64_t v20 = v7 & 0x1FFFFFFFFFFFFFFFLL;
    uint64_t v21 = *(void *)(v20 + 24);
    *(void *)&long long v36 = *(void *)(v20 + 16);
    swift_retain();
    swift_retain();
    sub_1BFE4A144(v10, a2, &v36, v21);
    swift_release();
    return swift_release();
  }
}

uint64_t type metadata accessor for FormatImageRequest()
{
  return self;
}

uint64_t sub_1BFE4A430(uint64_t a1, uint64_t a2)
{
  uint64_t v210 = a1;
  uint64_t v211 = a2;
  uint64_t v191 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1F4188790](v191);
  uint64_t v190 = (uint64_t)v182 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v216 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(v2 + 112);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    goto LABEL_176;
  }
  uint64_t v7 = v5 + 32;
  v182[3] = *(void *)(v2 + 112);
  swift_bridgeObjectRetain();
  uint64_t v8 = v7;
  uint64_t v9 = 0;
  long long v186 = xmmword_1C1529AE0;
  uint64_t v188 = v6;
  uint64_t v198 = v7;
LABEL_8:
  unint64_t v19 = *(void *)(v8 + 8 * v9++);
  switch((v19 >> 59) & 0x1E | (v19 >> 2) & 1)
  {
    case 1uLL:
    case 2uLL:
    case 5uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
      goto LABEL_7;
    case 3uLL:
      uint64_t v207 = v9;
      unint64_t v204 = v19;
      sub_1BFE6B6A0(0, (unint64_t *)&qword_1EB889580, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeData, &qword_1EB88F830, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataLayoutAttributes);
      uint64_t v176 = swift_projectBox() + *(int *)(v175 + 48);
      uint64_t v26 = *(void *)(v176 + 16);
      uint64_t v27 = *(void *)(v176 + 24);
      goto LABEL_165;
    case 4uLL:
      uint64_t v207 = v9;
      unint64_t v204 = v19;
      uint64_t v26 = *(void *)((v19 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      uint64_t v27 = *(void *)((v19 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
LABEL_165:
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1C017C3D4(v26, v27);
      swift_retain();
      uint64_t v177 = sub_1BFE4A430(v210, v211);
      swift_release();
      swift_release();
      swift_release();
      sub_1C017C418(v26, v27);
      if (!v177) {
        goto LABEL_5;
      }
      goto LABEL_168;
    case 6uLL:
      uint64_t v207 = v9;
      unint64_t v204 = v19;
      uint64_t v178 = *(void *)((v19 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      uint64_t v179 = *(void *)((v19 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1C017C3D4(v178, v179);
      uint64_t v177 = FormatStateViewNodeDataLayoutAttributes.formatImageRequests(options:inventory:)(v210, v211);
      swift_release();
      swift_release();
      sub_1C017C418(v178, v179);
      if (!v177) {
        goto LABEL_5;
      }
LABEL_168:
      uint64_t v18 = v177;
      goto LABEL_4;
    case 0xEuLL:
      uint64_t v207 = v9;
      unint64_t v204 = v19;
      sub_1BFE6B6A0(0, (unint64_t *)&qword_1EA19BBC8, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerData, (unint64_t *)&unk_1EA1A5A70, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
      uint64_t v11 = v10;
      uint64_t v12 = swift_projectBox();
      uint64_t v13 = v12 + *(int *)(v11 + 48);
      uint64_t v14 = *(void *)(v13 + 16);
      uint64_t v15 = *(void *)(v13 + 24);
      uint64_t v16 = v190;
      sub_1C11C81A4(v12, v190, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
      *(void *)&long long v215 = *(void *)(v16 + *(int *)(v191 + 40));
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1C017C3D4(v14, v15);
      swift_retain();
      unint64_t v17 = sub_1C11ED0EC(v210, v211, (unint64_t *)&v215);
      swift_release();
      swift_release();
      sub_1C017C418(v14, v15);
      swift_release();
      sub_1C11C820C(v16, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
      uint64_t v18 = (uint64_t)v17;
      goto LABEL_4;
    case 0x10uLL:
      uint64_t v207 = v9;
      unint64_t v204 = v19;
      uint64_t v28 = v19 & 0xFFFFFFFFFFFFFFBLL;
      sub_1C049850C(0, (unint64_t *)&qword_1EB862E50, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
      uint64_t v30 = v29;
      uint64_t v31 = swift_projectBox();
      uint64_t v189 = v30;
      uint64_t v32 = *(void *)(v31 + *(int *)(v30 + 48));
      uint64_t v33 = *(void *)(*(void *)(v32
                                  + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                      + 112);
      if (!*(void *)(v33 + 16))
      {
        swift_retain();
        swift_retain();
        CGFloat v180 = (void *)MEMORY[0x1E4FBC860];
        if (*(void *)(MEMORY[0x1E4FBC860] + 16)) {
          goto LABEL_170;
        }
LABEL_174:
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      uint64_t v201 = *(void *)(v33 + 16);
      swift_retain();
      swift_retain();
      v182[1] = v33;
      swift_bridgeObjectRetain();
      uint64_t v34 = v33 + 32;
      uint64_t v35 = v201;
      uint64_t v36 = 0;
      double v209 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v196 = v28;
      uint64_t v195 = v32;
      uint64_t v194 = v33 + 32;
LABEL_19:
      unint64_t v37 = *(void *)(v34 + 8 * v36++);
      switch((v37 >> 59) & 0x1E | (v37 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
        case 5uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xFuLL:
        case 0x11uLL:
        case 0x12uLL:
          goto LABEL_18;
        case 3uLL:
          uint64_t v205 = v36;
          unint64_t v202 = v37;
          sub_1BFE6B6A0(0, (unint64_t *)&qword_1EB889580, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeData, &qword_1EB88F830, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataLayoutAttributes);
          uint64_t v155 = swift_projectBox() + *(int *)(v154 + 48);
          uint64_t v46 = *(void *)(v155 + 16);
          uint64_t v47 = *(void *)(v155 + 24);
          goto LABEL_134;
        case 4uLL:
          uint64_t v205 = v36;
          unint64_t v202 = v37;
          uint64_t v46 = *(void *)((v37 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
          uint64_t v47 = *(void *)((v37 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
LABEL_134:
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1C017C3D4(v46, v47);
          swift_retain();
          uint64_t v156 = sub_1BFE4A430(v210, v211);
          swift_release();
          swift_release();
          swift_release();
          uint64_t v157 = v46;
          uint64_t v158 = v47;
          goto LABEL_136;
        case 6uLL:
          uint64_t v205 = v36;
          unint64_t v202 = v37;
          uint64_t v159 = *(void *)((v37 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
          uint64_t v160 = *(void *)((v37 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1C017C3D4(v159, v160);
          uint64_t v156 = FormatStateViewNodeDataLayoutAttributes.formatImageRequests(options:inventory:)(v210, v211);
          swift_release();
          swift_release();
          uint64_t v157 = v159;
          uint64_t v158 = v160;
LABEL_136:
          sub_1C017C418(v157, v158);
          uint64_t v161 = v209;
          if (v156)
          {
            uint64_t v45 = (void *)v156;
            goto LABEL_146;
          }
          swift_release();
          goto LABEL_17;
        case 0xEuLL:
          uint64_t v205 = v36;
          unint64_t v202 = v37;
          sub_1BFE6B6A0(0, (unint64_t *)&qword_1EA19BBC8, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerData, (unint64_t *)&unk_1EA1A5A70, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
          uint64_t v49 = v48;
          uint64_t v50 = swift_projectBox();
          uint64_t v51 = v50 + *(int *)(v49 + 48);
          uint64_t v52 = *(void *)(v51 + 16);
          uint64_t v53 = *(void *)(v51 + 24);
          uint64_t v54 = v190;
          sub_1C11C81A4(v50, v190, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
          *(void *)&long long v215 = *(void *)(v54 + *(int *)(v191 + 40));
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1C017C3D4(v52, v53);
          swift_retain();
          uint64_t v55 = sub_1C11ED0EC(v210, v211, (unint64_t *)&v215);
          swift_release();
          swift_release();
          uint64_t v45 = v55;
          sub_1C017C418(v52, v53);
          swift_release();
          sub_1C11C820C(v54, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
          goto LABEL_145;
        case 0x10uLL:
          uint64_t v205 = v36;
          unint64_t v202 = v37;
          uint64_t v56 = v37 & 0xFFFFFFFFFFFFFFBLL;
          uint64_t v57 = *(void *)(swift_projectBox() + *(int *)(v189 + 48));
          uint64_t v58 = *(void *)(*(void *)(v57
                                      + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                          + 112);
          uint64_t v59 = *(void *)(v58 + 16);
          v182[5] = v56;
          uint64_t v184 = v57;
          if (!v59)
          {
            swift_retain();
            swift_retain();
            uint64_t v45 = (void *)MEMORY[0x1E4FBC860];
            goto LABEL_143;
          }
          swift_retain();
          swift_retain();
          v182[0] = v58;
          swift_bridgeObjectRetain();
          uint64_t v60 = v58 + 32;
          uint64_t v61 = 0;
          uint64_t v45 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v187 = v59;
          uint64_t v197 = v58 + 32;
LABEL_32:
          unint64_t v62 = *(void *)(v60 + 8 * v61++);
          switch((v62 >> 59) & 0x1E | (v62 >> 2) & 1)
          {
            case 1uLL:
            case 2uLL:
            case 5uLL:
            case 7uLL:
            case 8uLL:
            case 9uLL:
            case 0xAuLL:
            case 0xBuLL:
            case 0xCuLL:
            case 0xDuLL:
            case 0xFuLL:
            case 0x11uLL:
            case 0x12uLL:
              goto LABEL_31;
            case 3uLL:
              uint64_t v206 = v61;
              unint64_t v203 = v62;
              sub_1BFE6B6A0(0, (unint64_t *)&qword_1EB889580, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeData, &qword_1EB88F830, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataLayoutAttributes);
              uint64_t v139 = swift_projectBox() + *(int *)(v138 + 48);
              uint64_t v70 = *(void *)(v139 + 16);
              uint64_t v71 = *(void *)(v139 + 24);
              goto LABEL_105;
            case 4uLL:
              uint64_t v206 = v61;
              unint64_t v203 = v62;
              uint64_t v70 = *(void *)((v62 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
              uint64_t v71 = *(void *)((v62 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
LABEL_105:
              swift_retain();
              swift_retain();
              swift_retain();
              sub_1C017C3D4(v70, v71);
              swift_retain();
              uint64_t v140 = sub_1BFE4A430(v210, v211);
              swift_release();
              swift_release();
              swift_release();
              sub_1C017C418(v70, v71);
              if (!v140) {
                goto LABEL_29;
              }
              goto LABEL_108;
            case 6uLL:
              uint64_t v206 = v61;
              unint64_t v203 = v62;
              uint64_t v141 = *(void *)((v62 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
              uint64_t v142 = *(void *)((v62 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
              swift_retain();
              swift_retain();
              swift_retain();
              sub_1C017C3D4(v141, v142);
              uint64_t v140 = FormatStateViewNodeDataLayoutAttributes.formatImageRequests(options:inventory:)(v210, v211);
              swift_release();
              swift_release();
              sub_1C017C418(v141, v142);
              if (!v140) {
                goto LABEL_29;
              }
LABEL_108:
              double v69 = (void *)v140;
              goto LABEL_111;
            case 0xEuLL:
              uint64_t v206 = v61;
              unint64_t v203 = v62;
              sub_1BFE6B6A0(0, (unint64_t *)&qword_1EA19BBC8, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerData, (unint64_t *)&unk_1EA1A5A70, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
              uint64_t v73 = v72;
              uint64_t v74 = swift_projectBox();
              uint64_t v75 = v74 + *(int *)(v73 + 48);
              uint64_t v76 = *(void *)(v75 + 16);
              uint64_t v77 = *(void *)(v75 + 24);
              uint64_t v78 = v190;
              sub_1C11C81A4(v74, v190, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
              *(void *)&long long v215 = *(void *)(v78 + *(int *)(v191 + 40));
              swift_retain();
              swift_retain();
              swift_retain();
              sub_1C017C3D4(v76, v77);
              uint64_t v59 = v187;
              swift_retain();
              double v69 = sub_1C11ED0EC(v210, v211, (unint64_t *)&v215);
              swift_release();
              swift_release();
              sub_1C017C418(v76, v77);
              swift_release();
              sub_1C11C820C(v78, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
              goto LABEL_111;
            case 0x10uLL:
              uint64_t v206 = v61;
              unint64_t v203 = v62;
              uint64_t v79 = v62 & 0xFFFFFFFFFFFFFFBLL;
              uint64_t v80 = *(void *)(swift_projectBox() + *(int *)(v189 + 48));
              uint64_t v81 = *(void *)(*(void *)(v80
                                          + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                              + 112);
              uint64_t v82 = *(void *)(v81 + 16);
              v182[6] = v79;
              uint64_t v185 = v80;
              if (!v82)
              {
                swift_retain();
                swift_retain();
                double v69 = (void *)MEMORY[0x1E4FBC860];
                if (*(void *)(MEMORY[0x1E4FBC860] + 16)) {
                  goto LABEL_110;
                }
LABEL_132:
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                goto LABEL_30;
              }
              uint64_t v83 = v81 + 32;
              swift_retain();
              swift_retain();
              v182[2] = v81;
              swift_bridgeObjectRetain();
              uint64_t v84 = 0;
              double v69 = (void *)MEMORY[0x1E4FBC860];
              uint64_t v200 = v82;
              uint64_t v199 = v81 + 32;
              CGFloat v193 = v45;
              break;
            default:
              uint64_t v206 = v61;
              unint64_t v64 = *(void *)(v62 + 16);
              uint64_t v63 = *(void *)(v62 + 24);
              uint64_t v65 = *(void *)(v62 + 40);
              uint64_t v66 = *(void *)(v62 + 48);
              unint64_t v203 = v62;
              if (v64 >> 61 == 5)
              {
                uint64_t v67 = *(void *)((v64 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
                unint64_t v212 = *(void *)((v64 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                CGFloat v193 = v45;
                swift_retain();
                swift_retain();
                swift_retain();
                sub_1C017C3D4(v65, v66);
                swift_retain();
                swift_retain();
                swift_retain();
                sub_1BFE4A144(v210, v211, (uint64_t *)&v212, v67, (uint64_t)&v213);
                uint64_t v45 = v193;
                swift_release();
                swift_release();
                if (v214)
                {
LABEL_35:
                  sub_1BFC773DC(&v213, (uint64_t)&v215);
                  sub_1BFE4610C(0, (unint64_t *)&qword_1EB87A5B0, (uint64_t (*)(uint64_t))sub_1BFD05974, MEMORY[0x1E4FBBE00]);
                  uint64_t v68 = swift_allocObject();
                  *(_OWORD *)(v68 + 16) = v186;
                  sub_1BFC773DC(&v215, v68 + 32);
                  swift_release();
                  swift_release();
                  double v69 = (void *)v68;
                  swift_release();
                  sub_1C017C418(v65, v66);
                  uint64_t v59 = v187;
                  goto LABEL_111;
                }
              }
              else
              {
                unint64_t v212 = v64;
                uint64_t v153 = *(void *)(v63 + 96);
                swift_retain();
                swift_retain();
                swift_retain();
                sub_1C017C3D4(v65, v66);
                swift_retain();
                sub_1BFE4A144(v210, v211, (uint64_t *)&v212, v153, (uint64_t)&v213);
                if (v214) {
                  goto LABEL_35;
                }
              }
              swift_release();
              swift_release();
              swift_release();
              sub_1C017C418(v65, v66);
              sub_1BFE4601C((uint64_t)&v213);
              swift_release();
              uint64_t v59 = v187;
              goto LABEL_30;
          }
          break;
        default:
          uint64_t v205 = v36;
          unint64_t v39 = *(void *)(v37 + 16);
          uint64_t v38 = *(void *)(v37 + 24);
          uint64_t v40 = *(void *)(v37 + 40);
          uint64_t v41 = *(void *)(v37 + 48);
          unint64_t v202 = v37;
          if (v39 >> 61 == 5)
          {
            uint64_t v42 = *(void *)((v39 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
            unint64_t v212 = *(void *)((v39 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            swift_retain();
            swift_retain();
            swift_retain();
            sub_1C017C3D4(v40, v41);
            swift_retain();
            swift_retain();
            swift_retain();
            sub_1BFE4A144(v210, v211, (uint64_t *)&v212, v42, (uint64_t)&v213);
            swift_release();
            swift_release();
            if (v214)
            {
LABEL_22:
              sub_1BFC773DC(&v213, (uint64_t)&v215);
              sub_1BFE4610C(0, (unint64_t *)&qword_1EB87A5B0, (uint64_t (*)(uint64_t))sub_1BFD05974, MEMORY[0x1E4FBBE00]);
              uint64_t v43 = swift_allocObject();
              *(_OWORD *)(v43 + 16) = v186;
              sub_1BFC773DC(&v215, v43 + 32);
              swift_release();
              swift_release();
              swift_release();
              uint64_t v44 = v41;
              uint64_t v45 = (void *)v43;
              sub_1C017C418(v40, v44);
              uint64_t v6 = v188;
              goto LABEL_145;
            }
          }
          else
          {
            unint64_t v212 = v39;
            uint64_t v162 = *(void *)(v38 + 96);
            swift_retain();
            swift_retain();
            swift_retain();
            sub_1C017C3D4(v40, v41);
            swift_retain();
            sub_1BFE4A144(v210, v211, (uint64_t *)&v212, v162, (uint64_t)&v213);
            if (v214) {
              goto LABEL_22;
            }
          }
          swift_release();
          swift_release();
          swift_release();
          sub_1C017C418(v40, v41);
          sub_1BFE4601C((uint64_t)&v213);
          swift_release();
          uint64_t v6 = v188;
          goto LABEL_17;
      }
      break;
    default:
      uint64_t v207 = v9;
      unint64_t v21 = *(void *)(v19 + 16);
      uint64_t v20 = *(void *)(v19 + 24);
      uint64_t v22 = *(void *)(v19 + 40);
      uint64_t v23 = *(void *)(v19 + 48);
      unint64_t v204 = v19;
      if (v21 >> 61 == 5)
      {
        uint64_t v24 = *(void *)((v21 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        unint64_t v212 = *(void *)((v21 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1C017C3D4(v22, v23);
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1BFE4A144(v210, v211, (uint64_t *)&v212, v24, (uint64_t)&v213);
        swift_release();
        swift_release();
        if (v214)
        {
LABEL_11:
          sub_1BFC773DC(&v213, (uint64_t)&v215);
          sub_1BFE4610C(0, (unint64_t *)&qword_1EB87A5B0, (uint64_t (*)(uint64_t))sub_1BFD05974, MEMORY[0x1E4FBBE00]);
          uint64_t v25 = swift_allocObject();
          *(_OWORD *)(v25 + 16) = v186;
          sub_1BFC773DC(&v215, v25 + 32);
          swift_release();
          swift_release();
          swift_release();
          sub_1C017C418(v22, v23);
          uint64_t v18 = v25;
          uint64_t v6 = v188;
          goto LABEL_4;
        }
      }
      else
      {
        unint64_t v212 = v21;
        uint64_t v181 = *(void *)(v20 + 96);
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1C017C3D4(v22, v23);
        swift_retain();
        sub_1BFE4A144(v210, v211, (uint64_t *)&v212, v181, (uint64_t)&v213);
        if (v214) {
          goto LABEL_11;
        }
      }
      swift_release();
      swift_release();
      swift_release();
      sub_1C017C418(v22, v23);
      sub_1BFE4601C((uint64_t)&v213);
      swift_release();
      uint64_t v6 = v188;
      goto LABEL_6;
  }
  while (2)
  {
    unint64_t v85 = *(void *)(v83 + 8 * v84++);
    switch((v85 >> 59) & 0x1E | (v85 >> 2) & 1)
    {
      case 1uLL:
      case 2uLL:
      case 5uLL:
      case 7uLL:
      case 8uLL:
      case 9uLL:
      case 0xAuLL:
      case 0xBuLL:
      case 0xCuLL:
      case 0xDuLL:
      case 0xFuLL:
      case 0x11uLL:
      case 0x12uLL:
        goto LABEL_44;
      case 3uLL:
        uint64_t v208 = v84;
        unint64_t v93 = v69;
        sub_1BFE6B6A0(0, (unint64_t *)&qword_1EB889580, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeData, &qword_1EB88F830, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataLayoutAttributes);
        uint64_t v122 = swift_projectBox() + *(int *)(v121 + 48);
        uint64_t v94 = *(void *)(v122 + 16);
        uint64_t v95 = *(void *)(v122 + 24);
        goto LABEL_76;
      case 4uLL:
        uint64_t v208 = v84;
        unint64_t v93 = v69;
        uint64_t v94 = *(void *)((v85 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
        uint64_t v95 = *(void *)((v85 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
LABEL_76:
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1C017C3D4(v94, v95);
        swift_retain();
        CGFloat v92 = (void *)sub_1BFE4A430(v210, v211);
        swift_release();
        swift_release();
        swift_release();
        uint64_t v123 = v94;
        uint64_t v124 = v95;
        goto LABEL_78;
      case 6uLL:
        uint64_t v208 = v84;
        unint64_t v93 = v69;
        uint64_t v125 = *(void *)((v85 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
        uint64_t v126 = *(void *)((v85 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1C017C3D4(v125, v126);
        CGFloat v92 = (void *)FormatStateViewNodeDataLayoutAttributes.formatImageRequests(options:inventory:)(v210, v211);
        swift_release();
        swift_release();
        uint64_t v123 = v125;
        uint64_t v124 = v126;
LABEL_78:
        sub_1C017C418(v123, v124);
        double v69 = v93;
        if (!v92) {
          goto LABEL_42;
        }
        goto LABEL_86;
      case 0xEuLL:
        uint64_t v208 = v84;
        sub_1BFE6B6A0(0, (unint64_t *)&qword_1EA19BBC8, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerData, (unint64_t *)&unk_1EA1A5A70, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
        uint64_t v97 = v96;
        uint64_t v98 = swift_projectBox();
        uint64_t v99 = v98 + *(int *)(v97 + 48);
        CGFloat v192 = v69;
        uint64_t v100 = *(void *)(v99 + 16);
        uint64_t v101 = *(void *)(v99 + 24);
        uint64_t v102 = v190;
        sub_1C11C81A4(v98, v190, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
        *(void *)&long long v215 = *(void *)(v102 + *(int *)(v191 + 40));
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1C017C3D4(v100, v101);
        swift_retain();
        CGFloat v92 = sub_1C11ED0EC(v210, v211, (unint64_t *)&v215);
        swift_release();
        swift_release();
        uint64_t v103 = v101;
        double v69 = v192;
        sub_1C017C418(v100, v103);
        swift_release();
        sub_1C11C820C(v102, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
        goto LABEL_86;
      case 0x10uLL:
        uint64_t v208 = v84;
        uint64_t v104 = *(void *)(swift_projectBox() + *(int *)(v189 + 48));
        uint64_t v105 = *(void *)(*(void *)(v104
                                     + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                         + 112);
        uint64_t v106 = *(void *)(v105 + 16);
        if (!v106)
        {
          swift_retain();
          swift_retain();
          CGFloat v92 = (void *)MEMORY[0x1E4FBC860];
LABEL_84:
          if (v92[2])
          {
            swift_release();
LABEL_86:
            uint64_t v128 = v92[2];
            int64_t v129 = v69[2];
            int64_t v130 = v129 + v128;
            if (__OFADD__(v129, v128)) {
              goto LABEL_183;
            }
            int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
            if (!isUniquelyReferenced_nonNull_native || v130 > v69[3] >> 1)
            {
              if (v129 <= v130) {
                int64_t v132 = v129 + v128;
              }
              else {
                int64_t v132 = v129;
              }
              double v69 = sub_1C0EE2540(isUniquelyReferenced_nonNull_native, v132, 1, v69);
            }
            uint64_t v45 = v193;
            if (v92[2])
            {
              uint64_t v133 = v69[2];
              if ((v69[3] >> 1) - v133 < v128) {
                goto LABEL_189;
              }
              unint64_t v134 = (unint64_t)&v69[5 * v133 + 4];
              if ((unint64_t)(v92 + 4) < v134 + 40 * v128 && v134 < (unint64_t)&v92[5 * v128 + 4]) {
                goto LABEL_195;
              }
              sub_1BFD05974();
              swift_arrayInitWithCopy();
              if (v128)
              {
                uint64_t v136 = v69[2];
                BOOL v119 = __OFADD__(v136, v128);
                uint64_t v137 = v136 + v128;
                if (v119) {
                  goto LABEL_192;
                }
                v69[2] = v137;
              }
            }
            else if (v128)
            {
              goto LABEL_184;
            }
            swift_bridgeObjectRelease();
LABEL_42:
            swift_release();
          }
          else
          {
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v45 = v193;
          }
LABEL_43:
          uint64_t v82 = v200;
          uint64_t v83 = v199;
          uint64_t v84 = v208;
LABEL_44:
          if (v84 != v82) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v59 = v187;
          if (!v69[2]) {
            goto LABEL_132;
          }
LABEL_110:
          swift_release();
LABEL_111:
          uint64_t v143 = v69[2];
          int64_t v144 = v45[2];
          int64_t v145 = v144 + v143;
          if (__OFADD__(v144, v143)) {
            goto LABEL_185;
          }
          CGFloat v146 = (void *)swift_isUniquelyReferenced_nonNull_native();
          if (v146 && v145 <= v45[3] >> 1)
          {
            if (!v69[2])
            {
LABEL_27:
              if (v143) {
                goto LABEL_186;
              }
              goto LABEL_28;
            }
          }
          else
          {
            if (v144 <= v145) {
              int64_t v147 = v144 + v143;
            }
            else {
              int64_t v147 = v144;
            }
            uint64_t v45 = sub_1C0EE2540(v146, v147, 1, v45);
            if (!v69[2]) {
              goto LABEL_27;
            }
          }
          uint64_t v148 = v45[2];
          if ((v45[3] >> 1) - v148 < v143) {
            goto LABEL_190;
          }
          unint64_t v149 = (unint64_t)&v45[5 * v148 + 4];
          if ((unint64_t)(v69 + 4) < v149 + 40 * v143 && v149 < (unint64_t)&v69[5 * v143 + 4]) {
            goto LABEL_195;
          }
          sub_1BFD05974();
          swift_arrayInitWithCopy();
          if (v143)
          {
            uint64_t v151 = v45[2];
            BOOL v119 = __OFADD__(v151, v143);
            uint64_t v152 = v151 + v143;
            if (v119) {
              goto LABEL_193;
            }
            _OWORD v45[2] = v152;
          }
LABEL_28:
          swift_bridgeObjectRelease();
LABEL_29:
          swift_release();
LABEL_30:
          uint64_t v60 = v197;
          uint64_t v61 = v206;
LABEL_31:
          if (v61 != v59) {
            goto LABEL_32;
          }
          swift_bridgeObjectRelease();
LABEL_143:
          uint64_t v6 = v188;
          if (v45[2])
          {
            swift_release();
LABEL_145:
            uint64_t v161 = v209;
LABEL_146:
            uint64_t v163 = v45[2];
            int64_t v164 = v161[2];
            int64_t v165 = v164 + v163;
            if (__OFADD__(v164, v163)) {
              goto LABEL_187;
            }
            uint64_t v166 = (void *)swift_isUniquelyReferenced_nonNull_native();
            char v167 = v209;
            if (!v166 || v165 > v209[3] >> 1)
            {
              if (v164 <= v165) {
                int64_t v168 = v164 + v163;
              }
              else {
                int64_t v168 = v164;
              }
              char v167 = sub_1C0EE2540(v166, v168, 1, v209);
            }
            uint64_t v169 = v45[2];
            double v209 = v167;
            if (v169)
            {
              uint64_t v170 = v167[2];
              if ((v167[3] >> 1) - v170 < v163) {
                goto LABEL_191;
              }
              unint64_t v171 = (unint64_t)&v167[5 * v170 + 4];
              if ((unint64_t)(v45 + 4) < v171 + 40 * v163 && v171 < (unint64_t)&v45[5 * v163 + 4]) {
                goto LABEL_195;
              }
              sub_1BFD05974();
              swift_arrayInitWithCopy();
              if (v163)
              {
                uint64_t v173 = v209[2];
                BOOL v119 = __OFADD__(v173, v163);
                uint64_t v174 = v173 + v163;
                if (v119) {
                  goto LABEL_194;
                }
                v209[2] = v174;
              }
            }
            else if (v163)
            {
              goto LABEL_188;
            }
            swift_bridgeObjectRelease();
            swift_release();
          }
          else
          {
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
          }
LABEL_17:
          uint64_t v35 = v201;
          uint64_t v34 = v194;
          uint64_t v36 = v205;
LABEL_18:
          if (v36 != v35) {
            goto LABEL_19;
          }
          swift_bridgeObjectRelease();
          CGFloat v180 = v209;
          if (!v209[2]) {
            goto LABEL_174;
          }
LABEL_170:
          swift_release();
          uint64_t v18 = (uint64_t)v180;
LABEL_4:
          sub_1BFE4C8E0(v18);
LABEL_5:
          swift_release();
LABEL_6:
          uint64_t v8 = v198;
          uint64_t v9 = v207;
LABEL_7:
          if (v9 == v6)
          {
            swift_bridgeObjectRelease();
            uint64_t result = v216;
LABEL_176:
            if (!*(void *)(result + 16))
            {
              swift_bridgeObjectRelease();
              return 0;
            }
            return result;
          }
          goto LABEL_8;
        }
        CGFloat v192 = v69;
        uint64_t v183 = v85 & 0xFFFFFFFFFFFFFFBLL;
        swift_retain();
        v182[4] = v104;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v107 = 0;
        CGFloat v92 = (void *)MEMORY[0x1E4FBC860];
        while (2)
        {
          *(void *)&long long v215 = *(void *)(v105 + 8 * v107 + 32);
          swift_retain();
          uint64_t v108 = FormatDataLayoutValue.formatImageRequests(options:inventory:)(v210, v211);
          if (!v108) {
            goto LABEL_55;
          }
          uint64_t v109 = v108;
          uint64_t v110 = *(void *)(v108 + 16);
          int64_t v111 = v92[2];
          int64_t v112 = v111 + v110;
          if (!__OFADD__(v111, v110))
          {
            uint64_t v113 = (void *)swift_isUniquelyReferenced_nonNull_native();
            if (v113 && v112 <= v92[3] >> 1)
            {
              if (!*(void *)(v109 + 16))
              {
LABEL_53:
                if (v110) {
                  goto LABEL_180;
                }
                goto LABEL_54;
              }
            }
            else
            {
              if (v111 <= v112) {
                int64_t v114 = v111 + v110;
              }
              else {
                int64_t v114 = v111;
              }
              CGFloat v92 = sub_1C0EE2540(v113, v114, 1, v92);
              if (!*(void *)(v109 + 16)) {
                goto LABEL_53;
              }
            }
            uint64_t v115 = v92[2];
            if ((v92[3] >> 1) - v115 < v110) {
              goto LABEL_181;
            }
            unint64_t v116 = (unint64_t)&v92[5 * v115 + 4];
            if (v109 + 32 < v116 + 40 * v110 && v116 < v109 + 32 + 40 * v110) {
              goto LABEL_195;
            }
            sub_1BFD05974();
            swift_arrayInitWithCopy();
            if (v110)
            {
              uint64_t v118 = v92[2];
              BOOL v119 = __OFADD__(v118, v110);
              uint64_t v120 = v118 + v110;
              if (v119) {
                goto LABEL_182;
              }
              v92[2] = v120;
            }
LABEL_54:
            swift_bridgeObjectRelease();
LABEL_55:
            ++v107;
            swift_release();
            if (v106 == v107)
            {
              swift_bridgeObjectRelease();
              double v69 = v192;
              goto LABEL_84;
            }
            continue;
          }
          break;
        }
        __break(1u);
LABEL_180:
        __break(1u);
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
LABEL_185:
        __break(1u);
LABEL_186:
        __break(1u);
LABEL_187:
        __break(1u);
LABEL_188:
        __break(1u);
LABEL_189:
        __break(1u);
LABEL_190:
        __break(1u);
LABEL_191:
        __break(1u);
LABEL_192:
        __break(1u);
LABEL_193:
        __break(1u);
LABEL_194:
        __break(1u);
LABEL_195:
        uint64_t result = sub_1C152052C();
        __break(1u);
        return result;
      default:
        uint64_t v208 = v84;
        CGFloat v192 = v69;
        unint64_t v87 = *(void *)(v85 + 16);
        uint64_t v86 = *(void *)(v85 + 24);
        uint64_t v88 = *(void *)(v85 + 32);
        uint64_t v89 = *(void *)(v85 + 40);
        uint64_t v90 = *(void *)(v85 + 48);
        if (v87 >> 61 == 5)
        {
          uint64_t v91 = *(void *)((v87 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
          unint64_t v212 = *(void *)((v87 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v183 = v88;
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1C017C3D4(v89, v90);
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1BFE4A144(v210, v211, (uint64_t *)&v212, v91, (uint64_t)&v213);
          swift_release();
          swift_release();
          if (v214) {
            goto LABEL_48;
          }
        }
        else
        {
          unint64_t v212 = *(void *)(v85 + 16);
          uint64_t v127 = *(void *)(v86 + 96);
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1C017C3D4(v89, v90);
          swift_retain();
          sub_1BFE4A144(v210, v211, (uint64_t *)&v212, v127, (uint64_t)&v213);
          if (v214)
          {
LABEL_48:
            sub_1BFC773DC(&v213, (uint64_t)&v215);
            sub_1BFE4610C(0, (unint64_t *)&qword_1EB87A5B0, (uint64_t (*)(uint64_t))sub_1BFD05974, MEMORY[0x1E4FBBE00]);
            CGFloat v92 = (void *)swift_allocObject();
            *((_OWORD *)v92 + 1) = v186;
            sub_1BFC773DC(&v215, (uint64_t)(v92 + 4));
            swift_release();
            swift_release();
            swift_release();
            sub_1C017C418(v89, v90);
            double v69 = v192;
            goto LABEL_86;
          }
        }
        swift_release();
        swift_release();
        swift_release();
        sub_1C017C418(v89, v90);
        sub_1BFE4601C((uint64_t)&v213);
        swift_release();
        uint64_t v45 = v193;
        double v69 = v192;
        goto LABEL_43;
    }
  }
}

uint64_t type metadata accessor for FormatVideoPlayerData()
{
  uint64_t result = qword_1EB87F2E8;
  if (!qword_1EB87F2E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFE4C2A0(void *a1)
{
  uint64_t v2 = *v1;
  if ((unint64_t)*v1 < 3) {
    return qword_1C15DEFE0[v2];
  }
  unint64_t v5 = *(void *)(v2 + 16);
  unint64_t v6 = *(void *)(v2 + 24);
  sub_1BFEF6A90(v5);
  sub_1BFEF6A90(v6);
  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2)
  {
    sub_1BFEF6A90(v6);
    uint64_t v3 = sub_1BFE4C2A0(a1);
    sub_1BFEF70CC(v5);
    sub_1BFEF70CC(v6);
    unint64_t v7 = v6;
  }
  else
  {
    sub_1BFEF6A90(v5);
    uint64_t v3 = sub_1BFE4C2A0(a1);
    sub_1BFEF70CC(v5);
    sub_1BFEF70CC(v6);
    unint64_t v7 = v5;
  }
  sub_1BFEF70CC(v7);
  return v3;
}

uint64_t sub_1BFE4C388(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C3D0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C418(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C460(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C4A8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C4F0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C538(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C580(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C5C8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C610(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C658(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C6A0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C6E8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C730(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C778(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C7C0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C808(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C850(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C898(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE4C8E0(uint64_t a1)
{
  return sub_1BFEFCA3C(a1, (uint64_t (*)(void))sub_1C0EE2540, (unint64_t *)&qword_1EB8715C0);
}

void sub_1BFE4C908(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = a1;
  sub_1BFF6A008(a1, (uint64_t)v52);
  sub_1BFC845BC(0, &qword_1EB8790D8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(&v53, (uint64_t)v56);
    uint64_t v5 = v57;
    uint64_t v6 = v58;
    __swift_project_boxed_opaque_existential_1(v56, v57);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v6 + 8))(&v53, a2+ OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_imageRequestOptions, v5, v6);
    sub_1C1283758(v2 + 2, (uint64_t)&v53);
    sub_1BFE4D174((uint64_t)&v53, (unint64_t *)&qword_1EB882B88, (unint64_t *)&qword_1EB8715C0, MEMORY[0x1E4FACD60]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  }
  else
  {
    uint64_t v55 = 0;
    long long v53 = 0u;
    long long v54 = 0u;
    sub_1BFE4D174((uint64_t)&v53, &qword_1EB8790E0, &qword_1EB8790D8, (uint64_t)&protocol descriptor for ThumbnailImageRequestProviding);
  }
  sub_1BFF6A008(v4, (uint64_t)v52);
  sub_1BFC845BC(0, &qword_1EB879460);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(&v53, (uint64_t)v56);
    uint64_t v7 = v57;
    uint64_t v8 = v58;
    __swift_project_boxed_opaque_existential_1(v56, v57);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v8 + 8))(&v53, a2+ OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_imageRequestOptions, v7, v8);
    sub_1C1283758(v2 + 7, (uint64_t)&v53);
    sub_1BFE4D174((uint64_t)&v53, (unint64_t *)&qword_1EB882B88, (unint64_t *)&qword_1EB8715C0, MEMORY[0x1E4FACD60]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  }
  else
  {
    uint64_t v55 = 0;
    long long v53 = 0u;
    long long v54 = 0u;
    sub_1BFE4D174((uint64_t)&v53, (unint64_t *)&unk_1EB879468, &qword_1EB879460, (uint64_t)&protocol descriptor for PublisherLogoImageRequestProviding);
  }
  sub_1BFF6A008(v4, (uint64_t)v52);
  sub_1BFC845BC(0, &qword_1EB878A38);
  uint64_t v48 = v2;
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v55 = 0;
    long long v53 = 0u;
    long long v54 = 0u;
    sub_1BFE4D174((uint64_t)&v53, &qword_1EB878A40, &qword_1EB878A38, (uint64_t)&protocol descriptor for FormatImageRequestProviding);
    goto LABEL_24;
  }
  sub_1BFC773DC(&v53, (uint64_t)v56);
  uint64_t v9 = v57;
  uint64_t v10 = v58;
  __swift_project_boxed_opaque_existential_1(v56, v57);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(a2+ OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_imageRequestOptions, v9, v10);
  if (!v11)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
LABEL_24:
    sub_1BFF6A008(v4, (uint64_t)v52);
    sub_1BFC845BC(0, &qword_1EB8831C0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v55 = 0;
      long long v53 = 0u;
      long long v54 = 0u;
      sub_1BFE4D174((uint64_t)&v53, &qword_1EB88E1F0, &qword_1EB8831C0, (uint64_t)&protocol descriptor for IssueCoverImageRequestProviding);
      return;
    }
    sub_1BFC773DC(&v53, (uint64_t)v56);
    uint64_t v25 = v57;
    uint64_t v26 = v58;
    __swift_project_boxed_opaque_existential_1(v56, v57);
    uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 8))(a2+ OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_imageRequestOptions, v25, v26);
    if (v27)
    {
      uint64_t v28 = *(void *)(v27 + 16);
      if (v28)
      {
        uint64_t v47 = OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_isLiveResizing;
        uint64_t v43 = OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_loadingGroup;
        uint64_t v29 = OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_prewarmedRequestCount;
        uint64_t v30 = v27 + 32;
        uint64_t v31 = (unint64_t *)&qword_1EB8715C0;
        uint64_t v32 = MEMORY[0x1E4FACD60];
        uint64_t v45 = OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_prewarmedRequestCount;
        while (1)
        {
          sub_1BFC66384(v30, (uint64_t)&v53);
          sub_1BFE4D370((uint64_t)&v53, (uint64_t)&v50);
          if (!v51)
          {
            sub_1BFE4D174((uint64_t)&v50, (unint64_t *)&qword_1EB882B88, v31, v32);
            goto LABEL_29;
          }
          sub_1BFC773DC(&v50, (uint64_t)v52);
          char v33 = *(unsigned char *)(a2 + v47);
          sub_1BFC66384((uint64_t)v52, (uint64_t)&v50);
          if ((v33 & 1) == 0) {
            break;
          }
          __swift_project_boxed_opaque_existential_1(&v50, v51);
          char v34 = ProcessedImageRequestType.isDownloaded.getter();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
          if ((v34 & 1) == 0) {
            goto LABEL_35;
          }
          dispatch_group_enter(*(dispatch_group_t *)(a2 + v43));
          char v35 = 1;
LABEL_36:
          uint64_t v36 = *(void *)(a2 + v29);
          BOOL v20 = __OFADD__(v36, 1);
          uint64_t v37 = v36 + 1;
          if (v20) {
            goto LABEL_43;
          }
          *(void *)(a2 + v29) = v37;
          uint64_t v38 = v31;
          char v39 = v35;
          __swift_project_boxed_opaque_existential_1(v48 + 17, v48[20]);
          uint64_t v40 = swift_allocObject();
          *(unsigned char *)(v40 + 16) = v39;
          *(void *)(v40 + 24) = a2;
          swift_retain();
          uint64_t v31 = v38;
          uint64_t v29 = v45;
          sub_1C151A51C();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
LABEL_29:
          sub_1BFE4D174((uint64_t)&v53, (unint64_t *)&qword_1EB882B88, v31, v32);
          v30 += 40;
          if (!--v28) {
            goto LABEL_39;
          }
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
LABEL_35:
        char v35 = 0;
        goto LABEL_36;
      }
LABEL_39:
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    return;
  }
  uint64_t v41 = v4;
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    uint64_t v4 = v41;
    goto LABEL_24;
  }
  uint64_t v44 = v2 + 12;
  uint64_t v46 = OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_isLiveResizing;
  uint64_t v42 = OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_loadingGroup;
  uint64_t v13 = OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_prewarmedRequestCount;
  uint64_t v14 = v11 + 32;
  uint64_t v15 = MEMORY[0x1E4FACD60];
  while (1)
  {
    sub_1BFC66384(v14, (uint64_t)&v53);
    sub_1BFE4D370((uint64_t)&v53, (uint64_t)&v50);
    if (v51) {
      break;
    }
    sub_1BFE4D174((uint64_t)&v50, (unint64_t *)&qword_1EB882B88, (unint64_t *)&qword_1EB8715C0, v15);
LABEL_12:
    sub_1BFE4D174((uint64_t)&v53, (unint64_t *)&qword_1EB882B88, (unint64_t *)&qword_1EB8715C0, v15);
    v14 += 40;
    if (!--v12) {
      goto LABEL_22;
    }
  }
  sub_1BFC773DC(&v50, (uint64_t)v52);
  char v16 = *(unsigned char *)(a2 + v46);
  sub_1BFC66384((uint64_t)v52, (uint64_t)&v50);
  if (v16)
  {
    __swift_project_boxed_opaque_existential_1(&v50, v51);
    char v17 = ProcessedImageRequestType.isDownloaded.getter();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
    if (v17)
    {
      dispatch_group_enter(*(dispatch_group_t *)(a2 + v42));
      char v18 = 1;
      goto LABEL_19;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
  }
  char v18 = 0;
LABEL_19:
  uint64_t v19 = *(void *)(a2 + v13);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (!v20)
  {
    *(void *)(a2 + v13) = v21;
    uint64_t v22 = v3[15];
    char v23 = v18;
    __swift_project_boxed_opaque_existential_1(v44, v22);
    uint64_t v24 = swift_allocObject();
    *(unsigned char *)(v24 + 16) = v23;
    *(void *)(v24 + 24) = a2;
    swift_retain();
    uint64_t v3 = v48;
    sub_1C151A51C();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    goto LABEL_12;
  }
  __break(1u);
LABEL_43:
  __break(1u);
}

uint64_t sub_1BFE4D118(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_1BFE4D1E4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFE4D174(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1BFE4D2A4(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1BFE4D1E4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1BFC845BC(255, a3);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFE4D23C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC845BC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1BFE4D2A4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC845BC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1BFE4D30C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFE4D370(uint64_t a1, uint64_t a2)
{
  sub_1BFE4D23C(0, (unint64_t *)&qword_1EB882B88, (unint64_t *)&qword_1EB8715C0, MEMORY[0x1E4FACD60], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFE4D400(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FeedItemSupplementaryAttributes();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFE4D444(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1BFE460A8(255, a4, a5, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatAnimationNodeDataLayoutAttributes);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v9) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1BFE4D4E4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  long long v53 = a8;
  uint64_t v54 = a7;
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  char v16 = (char *)&v46 - v15;
  uint64_t v17 = type metadata accessor for FormatButtonNodeData();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF235F0(a1, (uint64_t)v16, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v20 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v16, 1, v20) == 1)
  {
    sub_1C12AD324((uint64_t)v16, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 6)
  {
LABEL_6:
    sub_1BFF1BA48((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v51 = a6;
  uint64_t v52 = v19;
  sub_1BFF23AA4((uint64_t)v16, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatButtonNodeData);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 7)
  {
    uint64_t v21 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    uint64_t v22 = *(double **)(v21 + 16);
    char v23 = *(unsigned char *)(v21 + 80);
    uint64_t v55 = *(void *)(v21 + 72);
    char v56 = v23;
    swift_retain();
    uint64_t v48 = sub_1BFF879F0(v22, (uint64_t)&v55, a3);
    uint64_t v24 = *(void *)(v21 + 24);
    MEMORY[0x1F4188790](v48);
    *(&v46 - 2) = a3;
    *(&v46 - 1) = v21;
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1BFE4D910((void (*)(long long *__return_ptr, long long *))sub_1BFE4F11C, (uint64_t)(&v46 - 4), v24);
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void *)(v21 + 32);
    uint64_t v26 = *(void *)(v21 + 40);
    unint64_t v27 = *(void *)(v21 + 48);
    char v28 = *(unsigned char *)(v21 + 56);
    uint64_t v30 = *(void *)(v21 + 64);
    uint64_t v29 = *(void *)(v21 + 72);
    char v31 = *(unsigned char *)(v21 + 80);
    uint64_t v33 = *(void *)(v21 + 88);
    uint64_t v32 = *(void *)(v21 + 96);
    swift_retain();
    sub_1BFE6FA30(v27);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    type metadata accessor for FormatButtonNodeDataLayoutAttributes();
    uint64_t v34 = swift_allocObject();
    uint64_t v35 = v47;
    *(void *)(v34 + 16) = v48;
    *(void *)(v34 + 24) = v35;
    *(void *)(v34 + 32) = v25;
    *(void *)(v34 + 40) = v26;
    *(void *)(v34 + 48) = v27;
    *(unsigned char *)(v34 + 56) = v28;
    *(void *)(v34 + 64) = v30;
    *(void *)(v34 + 72) = v29;
    *(unsigned char *)(v34 + 80) = v31;
    *(void *)(v34 + 88) = v33;
    *(void *)(v34 + 96) = v32;
    sub_1BFD32FB8(0, (unint64_t *)&qword_1EB889580, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeData, &qword_1EB88F830, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataLayoutAttributes);
    uint64_t v37 = v36;
    uint64_t v38 = swift_allocBox();
    uint64_t v40 = (uint64_t *)(v39 + *(int *)(v37 + 48));
    sub_1BFF23AA4((uint64_t)v52, v39, (uint64_t (*)(void))type metadata accessor for FormatButtonNodeData);
    uint64_t v41 = v49;
    uint64_t v42 = v50;
    *uint64_t v40 = v34;
    v40[1] = v41;
    uint64_t v43 = v51;
    void v40[2] = v42;
    v40[3] = v43;
    uint64_t v44 = v53;
    v40[4] = v54;
    *uint64_t v44 = v38 | 0x1000000000000004;
    swift_retain();
    return sub_1C017C3D4(v42, v43);
  }
LABEL_7:
  uint64_t result = sub_1BFF1BA48((uint64_t)v52, (uint64_t (*)(void))type metadata accessor for FormatButtonNodeData);
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FormatButtonNodeDataLayoutAttributes()
{
  return self;
}

uint64_t sub_1BFE4D910(void (*a1)(long long *__return_ptr, long long *), uint64_t a2, uint64_t a3)
{
  sub_1BFE4DB7C();
  uint64_t result = sub_1C15204DC();
  uint64_t v6 = (void *)result;
  int64_t v7 = 0;
  uint64_t v29 = a3;
  uint64_t v8 = *(void *)(a3 + 64);
  uint64_t v22 = a3 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v23 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v24 = result + 64;
  if ((v10 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v12 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v7 << 6))
  {
    uint64_t v17 = *(void *)(*(void *)(v29 + 48) + 8 * i);
    long long v28 = *(_OWORD *)(*(void *)(v29 + 56) + 16 * i);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    a1(&v26, &v28);
    swift_release();
    uint64_t result = swift_release();
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return (uint64_t)v6;
    }
    *(void *)(v24 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v6[6] + 8 * i) = v17;
    uint64_t v18 = v6[7] + 24 * i;
    uint64_t v19 = v27;
    *(_OWORD *)uint64_t v18 = v26;
    *(void *)(v18 + 16) = v19;
    uint64_t v20 = v6[2];
    BOOL v14 = __OFADD__(v20, 1);
    uint64_t v21 = v20 + 1;
    if (v14)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v6[2] = v21;
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v14 = __OFADD__(v7++, 1);
    if (v14) {
      goto LABEL_27;
    }
    if (v7 >= v23) {
      return (uint64_t)v6;
    }
    unint64_t v15 = *(void *)(v22 + 8 * v7);
    if (!v15) {
      break;
    }
LABEL_15:
    unint64_t v11 = (v15 - 1) & v15;
  }
  int64_t v16 = v7 + 1;
  if (v7 + 1 >= v23) {
    return (uint64_t)v6;
  }
  unint64_t v15 = *(void *)(v22 + 8 * v16);
  if (v15) {
    goto LABEL_14;
  }
  int64_t v16 = v7 + 2;
  if (v7 + 2 >= v23) {
    return (uint64_t)v6;
  }
  unint64_t v15 = *(void *)(v22 + 8 * v16);
  if (v15) {
    goto LABEL_14;
  }
  int64_t v16 = v7 + 3;
  if (v7 + 3 >= v23) {
    return (uint64_t)v6;
  }
  unint64_t v15 = *(void *)(v22 + 8 * v16);
  if (v15)
  {
LABEL_14:
    int64_t v7 = v16;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v7 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v7 >= v23) {
      return (uint64_t)v6;
    }
    unint64_t v15 = *(void *)(v22 + 8 * v7);
    ++v16;
    if (v15) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1BFE4DB7C()
{
  if (!qword_1EB87A3B8)
  {
    sub_1C006F53C();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A3B8);
    }
  }
}

void sub_1BFE4DBE0()
{
  if (!qword_1EB87A920)
  {
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A920);
    }
  }
}

unint64_t FormatContent.Resolved.issues.getter()
{
  uint64_t v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v65 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  unint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v68 = MEMORY[0x1E4FBC860];
  uint64_t v40 = *(void *)(v4 + 16);
  if (v40)
  {
    uint64_t v55 = v1;
    uint64_t v39 = v4 + 32;
    v38[1] = v4;
    swift_bridgeObjectRetain_n();
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      uint64_t v51 = v6;
      uint64_t v52 = v7;
      uint64_t v9 = (uint64_t *)(v39 + 80 * v6);
      uint64_t v10 = v9[1];
      uint64_t v50 = *v9;
      uint64_t v12 = v9[2];
      uint64_t v11 = v9[3];
      uint64_t v13 = v9[4];
      uint64_t v54 = v9[5];
      uint64_t v15 = v9[6];
      unint64_t v14 = v9[7];
      uint64_t v16 = v9[8];
      uint64_t v17 = v9[9];
      uint64_t v48 = v13 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v53 = v17;
      uint64_t v47 = v16;
      uint64_t v49 = v10;
      uint64_t v45 = v12;
      uint64_t v42 = v15;
      sub_1BFEE0A78();
      sub_1BFEE0A78();
      uint64_t v18 = v47;
      sub_1BFEE0A78();
      uint64_t v46 = v13;
      sub_1BFEE0A78();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v19 = v52;
      uint64_t v20 = sub_1C10468B0(v18);
      uint64_t v52 = v19;
      swift_bridgeObjectRelease();
      unint64_t v67 = v14;
      swift_bridgeObjectRetain();
      sub_1BFEE0654(v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v21 = v67;
      unint64_t v67 = v5;
      uint64_t v57 = *(void *)(v21 + 16);
      uint64_t v43 = v11;
      unint64_t v44 = v14;
      if (v57)
      {
        unint64_t v56 = v21 + 32;
        unint64_t v41 = v21;
        swift_bridgeObjectRetain();
        uint64_t v22 = 0;
        do
        {
          uint64_t v24 = (void *)(v56 + (v22 << 6));
          unint64_t v25 = v24[1];
          uint64_t v26 = v24[2];
          uint64_t v28 = v24[3];
          uint64_t v27 = v24[4];
          uint64_t v30 = v24[5];
          uint64_t v29 = v24[6];
          uint64_t v31 = v24[7];
          unint64_t v66 = v5;
          uint64_t v32 = *(void *)(v27 + 16);
          if (v32)
          {
            uint64_t v33 = v26;
            uint64_t v34 = v27 + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80));
            unint64_t v64 = v25;
            uint64_t v35 = v27;
            swift_bridgeObjectRetain();
            uint64_t v63 = v33;
            swift_bridgeObjectRetain();
            uint64_t v62 = v28;
            swift_bridgeObjectRetain();
            uint64_t v59 = v35;
            swift_bridgeObjectRetain_n();
            uint64_t v61 = v30;
            swift_bridgeObjectRetain();
            uint64_t v60 = v29;
            swift_bridgeObjectRetain();
            uint64_t v58 = v31;
            swift_bridgeObjectRetain();
            uint64_t v36 = *(void *)(v65 + 72);
            do
            {
              sub_1C0BF9308(v34, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                MEMORY[0x1C18C66D0]();
                if (*(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_1C151EC8C();
                }
                sub_1C151ECEC();
                sub_1C151EBEC();
              }
              else
              {
                sub_1BFECF0C4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
              }
              v34 += v36;
              --v32;
            }
            while (v32);
            unint64_t v23 = v66;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v23 = MEMORY[0x1E4FBC860];
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          ++v22;
          sub_1C1047AD0(v23);
          unint64_t v5 = MEMORY[0x1E4FBC860];
        }
        while (v22 != v57);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        unint64_t v64 = v67;
        uint64_t v8 = v51;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v64 = v5;
        uint64_t v8 = v51;
      }
      uint64_t v51 = v8 + 1;
      sub_1C0033494();
      sub_1C0033494();
      sub_1C0033494();
      sub_1C1047AD0(v64);
      uint64_t v6 = v51;
      uint64_t v7 = v52;
    }
    while (v51 != v40);
    swift_bridgeObjectRelease_n();
    return v68;
  }
  return v5;
}

uint64_t sub_1BFE4E3FC(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x1C18C7CC0](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    unint64_t *v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();
  return sub_1C151EBEC();
}

uint64_t sub_1BFE4E5D0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BFECEE20(0, &qword_1EB87BD40, (uint64_t)&qword_1EB87B090, 0x1E4F7E4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
        sub_1C00BC30C();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C1075964(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87B090);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFE4E80C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C00B769C(a1, a2, a3, (void (*)(void))type metadata accessor for FormatPackageInventory, (uint64_t (*)(void))sub_1C00BB2E0, sub_1C00BB314, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1C10758FC);
}

uint64_t sub_1BFE4E860(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v3 = (_OWORD *)((char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFEA2E2C(v4, (uint64_t)v3);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload < 2) {
    return 0;
  }
  if (EnumCaseMultiPayload != 2)
  {
    sub_1C0AEF8E8((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
    return 0;
  }
  long long v6 = v3[1];
  v12[0] = *v3;
  v12[1] = v6;
  long long v7 = v3[3];
  unsigned char v12[2] = v3[2];
  v12[3] = v7;
  long long v8 = v3[7];
  v12[6] = v3[6];
  v12[7] = v8;
  long long v9 = v3[5];
  v12[4] = v3[4];
  v12[5] = v9;
  uint64_t v10 = sub_1BFFCDAA8(a1, *((uint64_t *)&v12[0] + 1));
  swift_release();
  sub_1C0955B08((uint64_t)v12);
  return v10;
}

void sub_1BFE4E978(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1BFE4E9CC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  long long v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1BFE4EA54(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1C1520DAC();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1BFE4EB50(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1BFE4EB50(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1BFC42598();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1C02C6754();
      goto LABEL_14;
    }
    sub_1BFE4EC74();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_1C1520DAC();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1C1520CEC();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1BFE4EC74()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1BFEFFF68(0, &qword_1EB87A378);
  uint64_t result = sub_1C152008C();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_1C1520DAC();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    unint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BFE4EEEC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C00BB860(0);
        sub_1C00BC5B4((unint64_t *)&unk_1EA196890, sub_1C00BB860);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          unint64_t v12 = sub_1C1075A34(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C1519E6C();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFE4F11C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1BFE4F138(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1BFE4F138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int64_t v5 = *(double **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a3 + 80);
  uint64_t v11 = *(void *)(a3 + 72);
  char v12 = v7;
  *a4 = sub_1BFF879F0(v5, (uint64_t)&v11, a2);
  a4[1] = v6;
  swift_retain();
  uint64_t v8 = sub_1C00BA004((uint64_t)&unk_1F1B8A468);
  type metadata accessor for FormatResizeAuto();
  uint64_t v9 = swift_allocObject();
  uint64_t result = swift_beginAccess();
  *(void *)(v9 + 16) = v8;
  a4[2] = v9;
  return result;
}

uint64_t sub_1BFE4F1E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageRequestOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFE4F24C(unint64_t a1)
{
  return sub_1BFE4E3FC(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1BFE4EEEC);
}

uint64_t type metadata accessor for FeedItemRendererPipelineProcessor.Context(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB873338);
}

uint64_t sub_1BFE4F284(uint64_t a1, uint64_t a2)
{
  sub_1BFE4E978(0, &qword_1EB894688, MEMORY[0x1E4FAC150]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFE4F304(uint64_t a1, uint64_t a2)
{
  sub_1BFE4E978(0, &qword_1EB894688, MEMORY[0x1E4FAC150]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BFE4F384(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1BFE4F3F0()
{
  if (!qword_1EB87A5A8)
  {
    sub_1C1519F2C();
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A5A8);
    }
  }
}

uint64_t sub_1BFE4F448()
{
  sub_1BFE4F578(0, (unint64_t *)&unk_1EB885210, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v6 - v3;
  sub_1BFE4F578(0, (unint64_t *)&unk_1EB885280, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB885430 = result;
  return result;
}

void sub_1BFE4F578(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1BFE4F8BC(255, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1BFE4F5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1BFE4F8BC(0, (unint64_t *)&unk_1EB8851F0, (uint64_t)&type metadata for SportsScoreConcern, MEMORY[0x1E4FAD778]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  sub_1BFE4F8BC(0, (unint64_t *)&unk_1EB885258, (uint64_t)&type metadata for SportsScoreConcern, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAD770], v6);
  uint64_t result = sub_1C151C9BC();
  *a4 = result;
  return result;
}

void sub_1BFE4F744(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C152089C();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_1BFE4F78C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE4F7D8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE4F824(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE4F870(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE4F8BC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE4F908(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t FormatOptionBinding.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v30 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v28 - v6;
  sub_1C089EFA0();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v1[1];
  uint64_t v31 = *v1;
  uint64_t v29 = v1[2];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1C089EDE4();
  uint64_t v15 = v14;
  uint64_t v16 = sub_1C085F050(&qword_1EB891DD0, (void (*)(uint64_t))sub_1C089EDE4);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatOptionBinding, v17, v12, (uint64_t)&type metadata for FormatOptionBinding, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v10, v16, (uint64_t)&off_1F1C39B68);
  uint64_t v18 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C151928C();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB93CAB0);
  unint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  v21(v7, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = v32;
  sub_1C06BD120(v31, v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    uint64_t v23 = qword_1EB887640;
    uint64_t v24 = v29;
    swift_bridgeObjectRetain();
    if (v23 != -1) {
      swift_once();
    }
    uint64_t v25 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB93CAC8);
    uint64_t v26 = (uint64_t)v30;
    v21(v30, v25, v19);
    swift_storeEnumTagMultiPayload();
    sub_1C06D2C2C(v24, 1, 0, 0);
    sub_1BFEFEB68(v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BFEFEB68((uint64_t)v10, (uint64_t (*)(void))sub_1C089EFA0);
}

uint64_t sub_1BFE4FCF0(char a1)
{
  if (!a1) {
    return 0x746867696CLL;
  }
  if (a1 == 1) {
    return 1802658148;
  }
  return 1885433183;
}

uint64_t sub_1BFE4FD34()
{
  uint64_t v1 = 0x6E6572646C696863;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6973736572707865;
  }
}

uint64_t sub_1BFE4FD8C()
{
  uint64_t v1 = 0x756F72676B636162;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x756F726765726F66;
  }
}

uint64_t sub_1BFE4FDE0(char a1)
{
  if (!a1) {
    return 0x65756C6176;
  }
  if (a1 == 1) {
    return 0x726F7463656C6573;
  }
  return 1885433183;
}

uint64_t sub_1BFE4FE30()
{
  uint64_t v1 = 0x7265696669646F6DLL;
  if (*v0 != 1) {
    uint64_t v1 = 1885433183;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

unint64_t sub_1BFE4FE8C()
{
  unint64_t result = qword_1EB85C480;
  if (!qword_1EB85C480)
  {
    sub_1BFE9DEBC(255, &qword_1EB879F00, (uint64_t)&type metadata for FormatOptionBindingModifier, MEMORY[0x1E4FBB320]);
    sub_1C006C748();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C480);
  }
  return result;
}

uint64_t sub_1BFE4FF20(void *a1)
{
  return FormatFeedGroup.encode(to:)(a1);
}

uint64_t FormatFeedGroup.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1BFE51AD0(0, &qword_1EB860DC8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE51A7C();
  sub_1C1520F0C();
  uint64_t v10 = (int *)type metadata accessor for FormatFeedGroup();
  LOBYTE(v14) = 0;
  type metadata accessor for FormatContent.Resolved();
  sub_1BFE51B34((unint64_t *)&unk_1EB85FD30, (void (*)(uint64_t))type metadata accessor for FormatContent.Resolved);
  sub_1C152080C();
  if (!v2)
  {
    long long v14 = *(_OWORD *)(v3 + v10[6]);
    char v13 = 1;
    sub_1BFF97D54();
    sub_1BFE5034C();
    sub_1C152080C();
    LOBYTE(v14) = *(unsigned char *)(v3 + v10[7]);
    char v13 = 2;
    sub_1BFE503B4();
    sub_1C152080C();
    LOBYTE(v14) = *(unsigned char *)(v3 + v10[8]);
    char v13 = 3;
    sub_1C152080C();
    LOBYTE(v14) = 4;
    sub_1C15207EC();
    LOBYTE(v14) = 5;
    sub_1C15207EC();
    LOBYTE(v14) = 11;
    sub_1C15207EC();
    LOBYTE(v14) = 6;
    sub_1C152077C();
    LOBYTE(v14) = 7;
    sub_1C152077C();
    LOBYTE(v14) = 8;
    sub_1C152077C();
    LOBYTE(v14) = 9;
    sub_1C152077C();
    LOBYTE(v14) = *(unsigned char *)(v3 + v10[16]);
    char v13 = 10;
    sub_1BFE50408();
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BFE5034C()
{
  unint64_t result = qword_1EB85C2F0;
  if (!qword_1EB85C2F0)
  {
    sub_1BFF97D54();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C2F0);
  }
  return result;
}

unint64_t sub_1BFE503B4()
{
  unint64_t result = qword_1EB85B2B0;
  if (!qword_1EB85B2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B2B0);
  }
  return result;
}

unint64_t sub_1BFE50408()
{
  unint64_t result = qword_1EB85B120;
  if (!qword_1EB85B120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B120);
  }
  return result;
}

uint64_t FormatFeedGroup.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1F4188790]();
  uint64_t v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFE51AD0(0, &qword_1EB860DA0, MEMORY[0x1E4FBBDC0]);
  uint64_t v43 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v10 = &v30[-v9];
  uint64_t v11 = a1[3];
  unint64_t v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1BFE51A7C();
  uint64_t v42 = v10;
  sub_1C1520EBC();
  if (!v2)
  {
    unint64_t v41 = a2;
    uint64_t v12 = v8;
    char v49 = 0;
    sub_1BFE51B34(&qword_1EB85FD40, (void (*)(uint64_t))type metadata accessor for FormatContent.Resolved);
    sub_1C15206EC();
    char v49 = 1;
    uint64_t v13 = sub_1C152060C();
    uint64_t v15 = v14;
    char v48 = 2;
    sub_1BFE518C8();
    sub_1C15206EC();
    char v48 = v49;
    v47[0] = 3;
    sub_1C15206EC();
    v47[0] = v47[1];
    char v46 = 4;
    sub_1C15206BC();
    double v17 = v16;
    char v46 = 5;
    uint64_t v18 = sub_1C152062C();
    int v40 = v19;
    char v46 = 11;
    *(double *)&uint64_t v20 = COERCE_DOUBLE(sub_1C152062C());
    int v38 = v21;
    double v39 = *(double *)&v20;
    char v46 = 6;
    uint64_t v22 = sub_1C152063C();
    int v35 = v23;
    uint64_t v37 = v22;
    char v46 = 7;
    uint64_t v36 = sub_1C152063C();
    int v34 = v24;
    char v46 = 8;
    uint64_t v26 = sub_1C152063C();
    int v33 = v27;
    uint64_t v28 = v26;
    char v46 = 9;
    unint64_t v32 = sub_1C152063C();
    int v31 = v29;
    char v45 = 10;
    sub_1BFE51B7C();
    sub_1C152065C();
    char v45 = v46;
    FormatFeedGroup.init(content:kindIdentifier:paidVisibility:paidVisibilityInForYou:rankMultiplier:baseScore:scoreThreshold:softMaxPaidArticlesForFreeUsersSmall:softMaxPaidArticlesForFreeUsersLarge:softMinPaidArticlesForFreeUsersSmall:softMinPaidArticlesForFreeUsersLarge:repooling:debugCandidates:)((uint64_t)v6, v13, v15, &v48, v47, *(double *)&v18, v40 & 1, v39, v41, v17, v38 & 1, v37, v35 & 1, v36, v34 & 1, v28, v33 & 1, v32, v31 & 1,
      &v45,
      0);
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v42, v43);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
}

uint64_t FeedGroupConfig.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v51 = a3;
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v52 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v53 = (char *)&v47 - v8;
  uint64_t v9 = sub_1C151635C();
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v56 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v54 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FeedGroupConfig.CodingKeys();
  uint64_t WitnessTable = (void *)swift_getWitnessTable();
  uint64_t v11 = sub_1C152072C();
  uint64_t v57 = *(void *)(v11 - 8);
  uint64_t v58 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v59 = (char *)&v47 - v12;
  uint64_t v61 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v14 = type metadata accessor for FeedGroupConfig();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  double v17 = (char *)&v47 - v16;
  sub_1BFC66384((uint64_t)a1, (uint64_t)v63);
  uint64_t v18 = v62;
  sub_1C151EF8C();
  if (v18) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v20 = &v17[*(int *)(v14 + 88)];
  int v21 = *(void (**)(void))(v61 + 32);
  uint64_t v49 = v15;
  uint64_t v50 = v20;
  uint64_t v22 = (int *)v14;
  uint64_t v62 = a2;
  v21();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  int v23 = v59;
  sub_1C1520EBC();
  uint64_t WitnessTable = v17;
  uint64_t v47 = a1;
  char v48 = v22;
  LOBYTE(v63[0]) = 0;
  uint64_t v24 = sub_1C152069C();
  uint64_t v25 = WitnessTable;
  *uint64_t WitnessTable = v24;
  v25[1] = v26;
  LOBYTE(v63[0]) = 1;
  uint64_t v27 = sub_1C152060C();
  uint64_t v29 = v28;
  if (v28)
  {
    uint64_t v30 = v27;
  }
  else
  {
    int v31 = v54;
    sub_1C151634C();
    uint64_t v30 = sub_1C151633C();
    uint64_t v29 = v32;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v31, v56);
  }
  void v25[2] = v30;
  v25[3] = v29;
  LOBYTE(v63[0]) = 2;
  v25[4] = sub_1C152060C();
  v25[5] = v33;
  char v64 = 3;
  sub_1BFE519E4();
  sub_1C152065C();
  uint64_t v34 = v63[0];
  if (v63[0] == 1) {
    uint64_t v34 = 0;
  }
  v25[6] = v34;
  char v64 = 4;
  sub_1BFE518C8();
  sub_1C152065C();
  char v35 = v63[0];
  if (LOBYTE(v63[0]) == 4) {
    char v35 = 2;
  }
  *((unsigned char *)v25 + 56) = v35;
  sub_1C151928C();
  LOBYTE(v63[0]) = 6;
  uint64_t v36 = sub_1BFE51A38(&qword_1EB8714E8);
  uint64_t v37 = (uint64_t)v53;
  uint64_t v56 = v36;
  sub_1C152065C();
  sub_1BFEC1200(v37, (uint64_t)v25 + v48[15]);
  LOBYTE(v63[0]) = 5;
  uint64_t v38 = (uint64_t)v52;
  sub_1C152065C();
  sub_1BFEC1200(v38, (uint64_t)v25 + v48[16]);
  sub_1BFE1E520();
  char v64 = 7;
  sub_1BFE1E6E4(&qword_1EB87A048, (void (*)(uint64_t))sub_1BFE1E520);
  sub_1C152065C();
  uint64_t v39 = v63[0];
  uint64_t v40 = MEMORY[0x1E4FBC870];
  if (!v63[0]) {
    uint64_t v39 = MEMORY[0x1E4FBC870];
  }
  *(void *)((char *)WitnessTable + v48[17]) = v39;
  char v64 = 8;
  sub_1C152065C();
  uint64_t v41 = v63[0];
  if (!v63[0]) {
    uint64_t v41 = v40;
  }
  *(void *)((char *)WitnessTable + v48[18]) = v41;
  sub_1BFE5191C();
  char v64 = 9;
  sub_1BFE1E580(&qword_1EB890108, (void (*)(void))sub_1C00853F0);
  sub_1C152065C();
  uint64_t v42 = v63[0];
  if (!v63[0]) {
    uint64_t v42 = v40;
  }
  *(void *)((char *)WitnessTable + v48[19]) = v42;
  char v64 = 10;
  sub_1C152065C();
  uint64_t v43 = v63[0];
  if (!v63[0]) {
    uint64_t v43 = v40;
  }
  *(void *)((char *)WitnessTable + v48[20]) = v43;
  char v64 = 11;
  sub_1BFE51978();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v23, v58);
  unint64_t v44 = v48;
  uint64_t v45 = v49;
  char v46 = WitnessTable;
  *((unsigned char *)WitnessTable + v48[21]) = (LOBYTE(v63[0]) == 2) | v63[0] & 1;
  (*(void (**)(uint64_t, void *, int *))(v45 + 16))(v51, v46, v44);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  return (*(uint64_t (**)(void *, int *))(v45 + 8))(v46, v44);
}

void *sub_1BFE51590(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  v4[1] = v5[1];
  uint64_t v6 = (void *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  v6[1] = v7[1];
  unint64_t v8 = ((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  uint64_t v10 = sub_1C151928C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  unint64_t v37 = v12 + 9 + v8;
  uint64_t v38 = ~v12;
  __dst = (void *)(v37 & ~v12);
  unint64_t v36 = v12 + 9 + v9;
  uint64_t v13 = (const void *)(v36 & ~v12);
  uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v13, 1, v10))
  {
    int v15 = *(_DWORD *)(v11 + 84);
    size_t v16 = *(void *)(v11 + 64);
    if (v15) {
      size_t v17 = *(void *)(v11 + 64);
    }
    else {
      size_t v17 = v16 + 1;
    }
    memcpy(__dst, v13, v17);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dst, v13, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    int v15 = *(_DWORD *)(v11 + 84);
    size_t v16 = *(void *)(v11 + 64);
  }
  if (v15) {
    size_t v18 = v16;
  }
  else {
    size_t v18 = v16 + 1;
  }
  int v19 = (void *)(((v37 | v12) + v18) & v38);
  uint64_t v20 = (const void *)(((v36 | v12) + v18) & v38);
  if (v14(v20, 1, v10))
  {
    memcpy(v19, v20, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v19, v20, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  int v21 = (void *)(((unint64_t)v19 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (void *)(((unint64_t)v20 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  *int v21 = *v22;
  int v23 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  *int v23 = *v24;
  uint64_t v25 = (void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v25 = *v26;
  unint64_t v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = *(void *)(a3 + 16);
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16);
  uint64_t v31 = *(unsigned __int8 *)(*(void *)(v29 - 8) + 80);
  uint64_t v32 = (v31 + 9 + v27) & ~v31;
  uint64_t v33 = (v31 + 9 + v28) & ~v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30(v32, v33, v29);
  return a1;
}

uint64_t type metadata accessor for FeedGroupConfig()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1BFE518C8()
{
  unint64_t result = qword_1EB872DF0;
  if (!qword_1EB872DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB872DF0);
  }
  return result;
}

void sub_1BFE5191C()
{
  if (!qword_1EB890100)
  {
    sub_1C0085498();
    unint64_t v0 = sub_1C151F04C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB890100);
    }
  }
}

unint64_t sub_1BFE51978()
{
  unint64_t result = qword_1EB870988[0];
  if (!qword_1EB870988[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB870988);
  }
  return result;
}

uint64_t type metadata accessor for FeedGroupConfig.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1BFE519E4()
{
  unint64_t result = qword_1EB871998[0];
  if (!qword_1EB871998[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB871998);
  }
  return result;
}

uint64_t sub_1BFE51A38(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C151928C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BFE51A7C()
{
  unint64_t result = qword_1EB85F798;
  if (!qword_1EB85F798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F798);
  }
  return result;
}

void sub_1BFE51AD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFE51A7C();
    unint64_t v7 = a3(a1, &type metadata for FormatFeedGroup.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1BFE51B34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BFE51B7C()
{
  unint64_t result = qword_1EB85B130;
  if (!qword_1EB85B130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B130);
  }
  return result;
}

uint64_t FormatFeedGroup.init(content:kindIdentifier:paidVisibility:paidVisibilityInForYou:rankMultiplier:baseScore:scoreThreshold:softMaxPaidArticlesForFreeUsersSmall:softMaxPaidArticlesForFreeUsersLarge:softMinPaidArticlesForFreeUsersSmall:softMinPaidArticlesForFreeUsersLarge:repooling:debugCandidates:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, unsigned char *a5@<X4>, double a6@<X5>, int a7@<W6>, double a8@<X7>, void *a9@<X8>, double a10@<D0>, unsigned __int8 a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, unsigned __int8 a15, uint64_t a16, unsigned __int8 a17, unint64_t a18, char a19, char *a20,uint64_t a21)
{
  double v151 = a8;
  LODWORD(v148) = a7;
  double v147 = a6;
  uint64_t v142 = a3;
  uint64_t v132 = 0;
  unint64_t v156 = a18;
  LODWORD(v153) = a17;
  uint64_t v152 = a16;
  LODWORD(v150) = a15;
  uint64_t v149 = a14;
  LODWORD(v146) = a13;
  uint64_t v143 = a12;
  LODWORD(v141) = a11;
  sub_1BFECFA84(0, &qword_1EB894680, (void (*)(uint64_t))sub_1BFEC84E0);
  MEMORY[0x1F4188790]();
  int64_t v145 = (char *)v124 - v27;
  uint64_t v154 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790]();
  uint64_t v155 = (char *)v124 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v144 = *(void *)(v157 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v30 = (id *)((char *)v124 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  LOBYTE(a4) = *a4;
  LOBYTE(a5) = *a5;
  char v31 = *a20;
  *a9 = 0;
  uint64_t v32 = (int *)type metadata accessor for FormatFeedGroup();
  uint64_t v33 = (void *)((char *)a9 + v32[6]);
  sub_1BFECA6EC(a1, (uint64_t)a9 + v32[5], (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v34 = v142;
  *uint64_t v33 = a2;
  v33[1] = v34;
  *((unsigned char *)a9 + v32[7]) = (_BYTE)a4;
  *((unsigned char *)a9 + v32[8]) = (_BYTE)a5;
  *(double *)((char *)a9 + v32[9]) = a10;
  double v35 = v147;
  if (v148) {
    double v35 = 0.0;
  }
  *(double *)((char *)a9 + v32[10]) = v35;
  double v36 = v151;
  if (v141) {
    double v36 = 0.0;
  }
  *(double *)((char *)a9 + v32[11]) = v36;
  unint64_t v37 = (char *)a9 + v32[12];
  *(void *)unint64_t v37 = v143;
  v37[8] = v146 & 1;
  uint64_t v38 = (char *)a9 + v32[13];
  *(void *)uint64_t v38 = v149;
  v38[8] = v150 & 1;
  uint64_t v39 = (char *)a9 + v32[14];
  *(void *)uint64_t v39 = v152;
  v39[8] = v153 & 1;
  uint64_t v40 = (char *)a9 + v32[15];
  *(void *)uint64_t v40 = v156;
  v40[8] = a19 & 1;
  uint64_t v126 = v32;
  uint64_t v41 = v32[16];
  uint64_t v127 = a9;
  *((unsigned char *)a9 + v41) = v31;
  uint64_t v42 = *(int *)(type metadata accessor for FormatContent.Resolved() + 32);
  uint64_t v125 = a1;
  uint64_t v43 = *(void *)(a1 + v42);
  unint64_t v44 = MEMORY[0x1E4FBC860];
  uint64_t v161 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v129 = *(void *)(v43 + 16);
  if (v129)
  {
    uint64_t v128 = v43 + 32;
    v124[1] = v43;
    swift_bridgeObjectRetain_n();
    uint64_t v45 = 0;
    do
    {
      uint64_t v143 = v45;
      char v46 = (uint64_t *)(v128 + 80 * v45);
      uint64_t v47 = *v46;
      uint64_t v48 = v46[1];
      uint64_t v49 = v46[2];
      uint64_t v50 = v46[3];
      uint64_t v51 = v46[4];
      uint64_t v52 = v46[5];
      uint64_t v53 = v46[6];
      unint64_t v141 = v46[7];
      uint64_t v54 = v46[8];
      uint64_t v55 = v46[9];
      uint64_t v140 = v51 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v134 = v54;
      uint64_t v136 = v48;
      uint64_t v138 = v49;
      uint64_t v135 = v53;
      sub_1BFEE0A78();
      uint64_t v139 = v47;
      uint64_t v142 = v50;
      unint64_t v56 = v141;
      sub_1BFEE0A78();
      uint64_t v133 = v55;
      uint64_t v57 = v134;
      sub_1BFEE0A78();
      uint64_t v137 = v51;
      sub_1BFEE0A78();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v58 = v132;
      uint64_t v59 = sub_1C10468B0(v57);
      uint64_t v132 = v58;
      uint64_t v60 = v52;
      swift_bridgeObjectRelease();
      unint64_t v160 = v56;
      swift_bridgeObjectRetain();
      sub_1BFEE0654(v59);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v61 = v160;
      unint64_t v62 = MEMORY[0x1E4FBC860];
      unint64_t v160 = MEMORY[0x1E4FBC860];
      double v147 = *(double *)(v61 + 16);
      unint64_t v131 = v61;
      if (v147 == 0.0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v156 = v62;
      }
      else
      {
        uint64_t v130 = v60;
        unint64_t v146 = v61 + 32;
        swift_bridgeObjectRetain();
        uint64_t v63 = 0;
        do
        {
          uint64_t v153 = v63;
          uint64_t v65 = (double *)(v146 + (v63 << 6));
          uint64_t v66 = *((void *)v65 + 1);
          unint64_t v67 = *((void *)v65 + 2);
          uint64_t v69 = *((void *)v65 + 3);
          double v68 = v65[4];
          uint64_t v70 = *((void *)v65 + 6);
          uint64_t v71 = *((void *)v65 + 7);
          unint64_t v64 = MEMORY[0x1E4FBC860];
          unint64_t v159 = MEMORY[0x1E4FBC860];
          uint64_t v72 = *(void *)(*(void *)&v68 + 16);
          if (v72)
          {
            uint64_t v73 = v144;
            double v74 = v68;
            uint64_t v75 = *(void *)&v68
                + ((*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80));
            uint64_t v152 = v66;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            uint64_t v150 = v69;
            swift_bridgeObjectRetain_n();
            double v151 = v74;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            uint64_t v149 = v70;
            swift_bridgeObjectRetain_n();
            uint64_t v148 = v71;
            swift_bridgeObjectRetain_n();
            uint64_t v76 = *(void *)(v73 + 72);
            uint64_t v77 = (uint64_t)v155;
            unint64_t v156 = v67;
            uint64_t v78 = (uint64_t)v145;
            do
            {
              sub_1BFECA6EC(v75, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:

                  break;
                case 2u:
                case 4u:
                case 5u:
                  swift_unknownObjectRelease();
                  break;
                case 3u:
                  sub_1BFEADF80((uint64_t)v30, v77, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                  sub_1C0C9A2FC(v77 + *(int *)(v154 + 36), v78, &qword_1EB894680, (void (*)(uint64_t))sub_1BFEC84E0);
                  sub_1BFEC84E0();
                  uint64_t v80 = v79;
                  uint64_t v81 = v78;
                  uint64_t v82 = *(void *)(v79 - 8);
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v81, 1, v79) != 1)
                  {
                    sub_1C151948C();
                    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v81, v80);
                    sub_1BFD21818(v77, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                    uint64_t v78 = v81;
                    goto LABEL_24;
                  }
                  sub_1C009126C(v81, &qword_1EB894680, (void (*)(uint64_t))sub_1BFEC84E0);
                  sub_1BFD21818(v77, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                  uint64_t v78 = v81;
                  break;
                case 6u:
                case 7u:
                  sub_1BFD21818((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
                  break;
                case 8u:
                  swift_bridgeObjectRelease();
                  break;
                default:
LABEL_24:
                  MEMORY[0x1C18C66D0]();
                  if (*(void *)((v159 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v159 & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
                    sub_1C151EC8C();
                  sub_1C151ECEC();
                  sub_1C151EBEC();
                  uint64_t v77 = (uint64_t)v155;
                  break;
              }
              v75 += v76;
              --v72;
            }
            while (v72);
            unint64_t v64 = v159;
          }
          else
          {
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
          }
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          uint64_t v63 = v153 + 1;
          sub_1BFE52C14(v64);
        }
        while (v63 != *(void *)&v147);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        unint64_t v156 = v160;
      }
      ++v143;
      sub_1C0033494();
      sub_1C0033494();
      sub_1C0033494();
      uint64_t v45 = v143;
      sub_1BFE52C14(v156);
    }
    while (v45 != v129);
    swift_bridgeObjectRelease_n();
    unint64_t v44 = (unint64_t)v161;
  }
  unint64_t v156 = v44;
  if (!(v44 >> 62))
  {
    uint64_t v83 = v44 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_1C1520B5C();
    sub_1BFC9DBE8(0, &qword_1EB880D78);
    uint64_t v84 = swift_dynamicCastMetatype();
    uint64_t v85 = v44;
    if (!v84)
    {
      uint64_t v118 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v85 = v44;
      if (v118)
      {
        uint64_t v119 = v83 + 32;
        while (1)
        {
          uint64_t v158 = &unk_1F1CD3FF8;
          if (!swift_dynamicCastObjCProtocolConditional()) {
            break;
          }
          v119 += 8;
          if (!--v118)
          {
            uint64_t v85 = v44;
            goto LABEL_32;
          }
        }
        uint64_t v85 = v83 | 1;
      }
    }
LABEL_32:
    *(void *)((char *)v127 + v126[17]) = v85;
    uint64_t v86 = (void *)sub_1BFE52C2C(MEMORY[0x1E4FBC860]);
    uint64_t v87 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v87) {
      goto LABEL_33;
    }
LABEL_70:
    swift_bridgeObjectRelease();
    sub_1BFD21818(v125, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v122 = v126;
    uint64_t v123 = v127;
    *(void *)((char *)v127 + v126[18]) = v86;
    *(void *)((char *)v123 + v122[19]) = a21;
    return result;
  }
LABEL_69:
  sub_1BFC9DBE8(0, &qword_1EB880D78);
  swift_bridgeObjectRetain();
  uint64_t v120 = sub_1C152041C();
  swift_bridgeObjectRelease();
  *(void *)((char *)v127 + v126[17]) = v120;
  uint64_t v86 = (void *)sub_1BFE52C2C(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRetain_n();
  uint64_t v87 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v87) {
    goto LABEL_70;
  }
LABEL_33:
  uint64_t v154 = v87;
  uint64_t v155 = (char *)(v156 & 0xC000000000000001);
  uint64_t v88 = 4;
  while (1)
  {
    uint64_t v91 = v88 - 4;
    if (v155)
    {
      CGFloat v92 = (void *)MEMORY[0x1C18C7CB0](v88 - 4, v156);
      uint64_t v90 = v88 - 3;
      if (__OFADD__(v91, 1)) {
        goto LABEL_66;
      }
    }
    else
    {
      CGFloat v92 = *(void **)(v156 + 8 * v88);
      swift_unknownObjectRetain();
      uint64_t v90 = v88 - 3;
      if (__OFADD__(v91, 1))
      {
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
    }
    id v93 = objc_msgSend(v92, sel_identifier);
    uint64_t v94 = sub_1C151E62C();
    uint64_t v96 = v95;

    id v97 = objc_msgSend(v92, sel_scoreProfile);
    if (!v97)
    {
      swift_bridgeObjectRetain();
      unint64_t v109 = sub_1BFEF2D8C(v94, v96);
      char v111 = v110;
      swift_bridgeObjectRelease();
      if (v111)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v161 = v86;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C1070908();
          uint64_t v86 = v161;
        }
        swift_bridgeObjectRelease();
        uint64_t v113 = *(void **)(v86[7] + 8 * v109);
        sub_1C091D59C(v109, v86);
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    id v98 = v97;
    uint64_t v157 = v90;
    char v99 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v161 = v86;
    uint64_t v100 = v96;
    unint64_t v102 = sub_1BFEF2D8C(v94, v96);
    uint64_t v103 = v86[2];
    BOOL v104 = (v101 & 1) == 0;
    uint64_t v105 = v103 + v104;
    if (__OFADD__(v103, v104)) {
      goto LABEL_67;
    }
    char v106 = v101;
    if (v86[3] < v105) {
      break;
    }
    if (v99)
    {
      uint64_t v86 = v161;
      if ((v101 & 1) == 0) {
        goto LABEL_54;
      }
    }
    else
    {
      sub_1C1070908();
      uint64_t v86 = v161;
      if ((v106 & 1) == 0)
      {
LABEL_54:
        v86[(v102 >> 6) + 8] |= 1 << v102;
        int64_t v114 = (uint64_t *)(v86[6] + 16 * v102);
        uint64_t *v114 = v94;
        v114[1] = v100;
        *(void *)(v86[7] + 8 * v102) = v98;
        uint64_t v115 = v86[2];
        BOOL v116 = __OFADD__(v115, 1);
        uint64_t v117 = v115 + 1;
        if (v116) {
          goto LABEL_68;
        }
        v86[2] = v117;
        swift_bridgeObjectRetain();
        goto LABEL_35;
      }
    }
LABEL_34:
    uint64_t v89 = v86[7];

    *(void *)(v89 + 8 * v102) = v98;
LABEL_35:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v87 = v154;
    uint64_t v90 = v157;
LABEL_36:
    ++v88;
    if (v90 == v87) {
      goto LABEL_70;
    }
  }
  sub_1C105D2EC(v105, v99);
  unint64_t v107 = sub_1BFEF2D8C(v94, v100);
  if ((v106 & 1) == (v108 & 1))
  {
    unint64_t v102 = v107;
    uint64_t v86 = v161;
    if ((v106 & 1) == 0) {
      goto LABEL_54;
    }
    goto LABEL_34;
  }
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1BFE52C14(unint64_t a1)
{
  return sub_1BFFF1A64(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1BFFF1E74);
}

unint64_t sub_1BFE52C2C(uint64_t a1)
{
  return sub_1BFE52C48(a1, (unint64_t *)&qword_1EB890350, (uint64_t)&unk_1EB890268, 0x1E4F7E420);
}

unint64_t sub_1BFE52C48(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0191B74(0, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
  uint64_t v5 = (void *)sub_1C152050C();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  unint64_t v7 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v8 = (uint64_t)*(v7 - 2);
    uint64_t v9 = (uint64_t)*(v7 - 1);
    uint64_t v10 = *v7;
    swift_bridgeObjectRetain();
    id v11 = v10;
    unint64_t result = sub_1BFEF2D8C(v8, v9);
    if (v13) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v14 = (uint64_t *)(v5[6] + 16 * result);
    *uint64_t v14 = v8;
    v14[1] = v9;
    *(void *)(v5[7] + 8 * result) = v11;
    uint64_t v15 = v5[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    uint64_t v5[2] = v17;
    v7 += 3;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BFE52D74(uint64_t a1, void (**a2)(uint64_t, uint64_t))
{
  uint64_t v176 = a2;
  uint64_t v170 = a1;
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 96);
  uint64_t v5 = *(void *)(v3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v169 = v4;
  uint64_t v168 = v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v8 = swift_getAssociatedConformanceWitness();
  uint64_t v167 = swift_getAssociatedTypeWitness();
  uint64_t v133 = *(void *)(v167 - 8);
  MEMORY[0x1F4188790](v167);
  uint64_t v166 = (char *)&v130 - v9;
  sub_1C14DBCD8(0, &qword_1EB886418, (void (*)(uint64_t))type metadata accessor for FeedGroupConfigSidecar);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v149 = (char *)&v130 - v11;
  uint64_t v148 = (void (**)(char *, char *, uint64_t))type metadata accessor for FeedGroupConfigSidecar();
  uint64_t v134 = (uint64_t)*(v148 - 1);
  MEMORY[0x1F4188790](v148);
  uint64_t v135 = (uint64_t)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  double v151 = (uint64_t *)((char *)&v130 - v14);
  uint64_t v171 = v8;
  swift_getAssociatedTypeWitness();
  uint64_t v142 = swift_getAssociatedConformanceWitness();
  uint64_t v146 = swift_getAssociatedTypeWitness();
  uint64_t v156 = *(void *)(v146 - 8);
  MEMORY[0x1F4188790](v146);
  uint64_t v174 = (char *)&v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  int64_t v145 = (char *)&v130 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v139 = (char *)&v130 - v19;
  MEMORY[0x1F4188790](v20);
  unint64_t v159 = (char *)&v130 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v152 = (char *)&v130 - v23;
  uint64_t v131 = v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v150 = (char *)&v130 - v26;
  uint64_t v175 = (uint64_t (**)(void, void, void, void))swift_getAssociatedTypeWitness();
  uint64_t v173 = (uint64_t)*(v175 - 1);
  MEMORY[0x1F4188790](v175);
  uint64_t v28 = (char *)&v130 - v27;
  uint64_t v141 = swift_checkMetadataState();
  uint64_t v172 = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141);
  uint64_t v30 = (char *)&v130 - v29;
  uint64_t v31 = swift_checkMetadataState();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)&v130 - v33;
  uint64_t v35 = type metadata accessor for FeedGroupEmitter();
  uint64_t v187 = sub_1C151ECBC();
  uint64_t v36 = sub_1C151ED5C();
  swift_getTupleTypeMetadata2();
  sub_1C151ECBC();
  uint64_t v158 = v36;
  uint64_t v186 = sub_1C151E3BC();
  uint64_t v157 = v35;
  uint64_t v185 = sub_1C151ECBC();
  id v37 = objc_msgSend(v144[2], sel_cachedSubscription);
  id v38 = objc_msgSend(v37, sel_isSubscribed);

  uint64_t v39 = AssociatedConformanceWitness;
  uint64_t v40 = AssociatedConformanceWitness + 64;
  uint64_t v41 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  uint64_t v42 = v170;
  uint64_t v43 = AssociatedTypeWitness;
  uint64_t v44 = AssociatedTypeWitness;
  uint64_t v45 = v39;
  uint64_t v162 = v40;
  uint64_t v161 = v41;
  ((void (*)(uint64_t))v41)(v44);
  (*(void (**)(uint64_t))(v171 + 40))(v31);
  char v46 = *(void (**)(char *, uint64_t))(v32 + 8);
  uint64_t v163 = v34;
  uint64_t v165 = v31;
  uint64_t v164 = v32 + 8;
  unint64_t v160 = v46;
  v46(v34, v31);
  uint64_t v47 = v45;
  (*(void (**)(uint64_t, uint64_t))(v45 + 48))(v43, v45);
  uint64_t v48 = v141;
  uint64_t v49 = (*(uint64_t (**)(char *, id, uint64_t))(v142 + 56))(v28, v38, v141);
  (*(void (**)(char *, uint64_t (**)(void, void, void, void)))(v173 + 8))(v28, v175);
  (*(void (**)(char *, uint64_t))(v172 + 8))(v30, v48);
  uint64_t v50 = v146;
  uint64_t v184 = sub_1C151ECBC();
  uint64_t v172 = v47;
  uint64_t v173 = v43;
  uint64_t v51 = v50;
  type metadata accessor for FeedGroupEmitterCursor();
  uint64_t v140 = sub_1BFCC69F0(v42, (uint64_t)v176);
  if (MEMORY[0x1C18C6870](v49, v50))
  {
    uint64_t v52 = 0;
    uint64_t v53 = *v144;
    uint64_t v176 = (void (**)(uint64_t, uint64_t))(v156 + 16);
    uint64_t v153 = (void (**)(char *, char *, uint64_t))(v156 + 32);
    double v147 = (void (**)(char *, uint64_t))(v134 + 48);
    unint64_t v137 = MEMORY[0x1E4FBC860];
    uint64_t v138 = v53[19];
    uint64_t v154 = (void (**)(void, void))(v156 + 8);
    long long v136 = xmmword_1C152C7F0;
    long long v132 = xmmword_1C1527210;
    uint64_t v54 = v158;
    uint64_t v55 = v139;
    unint64_t v56 = v152;
    uint64_t v57 = v150;
    uint64_t v155 = v49;
    while (1)
    {
      char v59 = sub_1C151ECDC();
      sub_1C151EC7C();
      if (v59)
      {
        unint64_t v60 = v49
            + ((*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80))
            + *(void *)(v156 + 72) * v52;
        unint64_t v61 = *(void (**)(uint64_t, uint64_t))(v156 + 16);
        uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v61)(v57, v60, v51);
        uint64_t v63 = (uint64_t (**)(void, void, void, void))(v52 + 1);
        if (__OFADD__(v52, 1)) {
          goto LABEL_44;
        }
      }
      else
      {
        uint64_t result = sub_1C152016C();
        if (v131 != 8) {
          goto LABEL_45;
        }
        uint64_t v181 = result;
        unint64_t v61 = *v176;
        ((void (*)(char *, uint64_t *, uint64_t))*v176)(v57, &v181, v51);
        uint64_t result = swift_unknownObjectRelease();
        uint64_t v63 = (uint64_t (**)(void, void, void, void))(v52 + 1);
        if (__OFADD__(v52, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return result;
        }
      }
      uint64_t v175 = v63;
      (*v153)(v56, v57, v51);
      ((void (*)(char *, char *, uint64_t))v61)(v159, v56, v51);
      sub_1BFC845BC(0, &qword_1EB886AB0);
      if (swift_dynamicCast())
      {
        sub_1BFC773DC(&v178, (uint64_t)&v181);
        uint64_t v64 = v182;
        uint64_t v65 = v183;
        __swift_project_boxed_opaque_existential_1(&v181, v182);
        uint64_t v66 = (uint64_t)v149;
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v64, v65);
        if (((unsigned int (*)(uint64_t, uint64_t, void))*v147)(v66, 1, v148) != 1)
        {
          sub_1C14DC30C(v66, (uint64_t)v151);
          uint64_t v67 = swift_getAssociatedConformanceWitness();
          uint64_t v68 = FeedGroupConfigType.rules<A>()(v51, v173, v67);
          uint64_t v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 40))(v51, v67);
          uint64_t v70 = type metadata accessor for FeedGroupEmitterRule();
          uint64_t WitnessTable = swift_getWitnessTable();
          Array<A>.evaluate(cursor:slots:)(v140, v69, v68, v70, WitnessTable, (uint64_t)&v178);
          swift_bridgeObjectRelease();
          if (v179 < 2u)
          {
            sub_1BFDCA350(v178, *((uint64_t *)&v178 + 1), v179);
            uint64_t v72 = v144;
            goto LABEL_14;
          }
          uint64_t v72 = v144;
          if (v178 == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v143 = *(uint64_t *)((char *)v72 + v138);
            sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
            uint64_t v86 = swift_allocObject();
            *(_OWORD *)(v86 + 16) = v132;
            uint64_t v87 = v151;
            uint64_t v88 = *v151;
            uint64_t v89 = v151[1];
            uint64_t v90 = MEMORY[0x1E4FBB1A0];
            *(void *)(v86 + 56) = MEMORY[0x1E4FBB1A0];
            unint64_t v91 = sub_1BFE9C558();
            *(void *)(v86 + 64) = v91;
            *(void *)(v86 + 32) = v88;
            *(void *)(v86 + 40) = v89;
            swift_bridgeObjectRetain();
            uint64_t v51 = v146;
            uint64_t v92 = sub_1C151811C();
            *(void *)(v86 + 96) = v90;
            *(void *)(v86 + 104) = v91;
            *(void *)(v86 + 72) = v92;
            *(void *)(v86 + 80) = v93;
            sub_1C151F38C();
            sub_1C15197BC();
            swift_bridgeObjectRelease();
            sub_1C14DC370((uint64_t)v87, v135, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v137 = sub_1C0EE58E4(0, *(void *)(v137 + 16) + 1, 1, v137);
            }
            uint64_t v57 = v150;
            uint64_t v58 = v175;
            unint64_t v95 = *(void *)(v137 + 16);
            unint64_t v94 = *(void *)(v137 + 24);
            uint64_t v96 = v134;
            unint64_t v56 = v152;
            if (v95 >= v94 >> 1)
            {
              uint64_t v98 = sub_1C0EE58E4(v94 > 1, v95 + 1, 1, v137);
              uint64_t v96 = v134;
              unint64_t v137 = v98;
            }
            unint64_t v97 = v137;
            *(void *)(v137 + 16) = v95 + 1;
            sub_1C14DC30C(v135, v97+ ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80))+ *(void *)(v96 + 72) * v95);
            uint64_t v85 = v151;
          }
          else
          {
LABEL_14:
            uint64_t v143 = *(uint64_t *)((char *)v72 + v138);
            sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
            uint64_t v73 = swift_allocObject();
            *(_OWORD *)(v73 + 16) = v136;
            double v74 = v151;
            uint64_t v75 = *v151;
            uint64_t v76 = v151[1];
            *(void *)(v73 + 56) = MEMORY[0x1E4FBB1A0];
            unint64_t v77 = sub_1BFE9C558();
            *(void *)(v73 + 64) = v77;
            *(void *)(v73 + 32) = v75;
            *(void *)(v73 + 40) = v76;
            swift_bridgeObjectRetain();
            uint64_t v78 = v152;
            uint64_t v79 = v70;
            uint64_t v51 = v146;
            uint64_t v80 = sub_1C151811C();
            *(void *)(v73 + 96) = MEMORY[0x1E4FBB1A0];
            *(void *)(v73 + 104) = v77;
            *(void *)(v73 + 72) = v80;
            *(void *)(v73 + 80) = v81;
            uint64_t v82 = MEMORY[0x1C18C6710](v68, v79);
            uint64_t v84 = v83;
            swift_bridgeObjectRelease();
            *(void *)(v73 + 136) = MEMORY[0x1E4FBB1A0];
            *(void *)(v73 + 144) = v77;
            *(void *)(v73 + 112) = v82;
            *(void *)(v73 + 120) = v84;
            unint64_t v56 = v78;
            sub_1C151F38C();
            sub_1C15197BC();
            swift_bridgeObjectRelease();
            uint64_t v85 = v74;
            uint64_t v57 = v150;
            uint64_t v58 = v175;
          }
          sub_1C14DC3D8((uint64_t)v85, (uint64_t (*)(void))type metadata accessor for FeedGroupConfigSidecar);
          (*v154)(v56, v51);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v181);
          uint64_t v55 = v139;
          goto LABEL_5;
        }
        sub_1C14DC2B0(v66, &qword_1EB886418, (void (*)(uint64_t))type metadata accessor for FeedGroupConfigSidecar);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v181);
        unint64_t v56 = v152;
        uint64_t v57 = v150;
      }
      else
      {
        uint64_t v180 = 0;
        long long v178 = 0u;
        long long v179 = 0u;
        sub_1BFE54B20((uint64_t)&v178, &qword_1EB886AB8, &qword_1EB886AB0, (uint64_t)&protocol descriptor for FeedGroupConfigSidecarConvertible);
      }
      uint64_t v58 = v175;
      ((void (*)(char *, char *, uint64_t))v61)(v55, v56, v51);
      sub_1C151ED5C();
      sub_1C151ED1C();
      (*v154)(v56, v51);
LABEL_5:
      uint64_t v49 = v155;
      ++v52;
      if (v58 == (uint64_t (**)(void, void, void, void))MEMORY[0x1C18C6870](v155, v51)) {
        goto LABEL_26;
      }
    }
  }
  unint64_t v137 = MEMORY[0x1E4FBC860];
  uint64_t v54 = v158;
LABEL_26:
  swift_bridgeObjectRelease();
  char v99 = (char *)v184;
  uint64_t v100 = MEMORY[0x1C18C6870](v184, v51);
  char v101 = v174;
  unint64_t v102 = v145;
  if (!v100) {
    goto LABEL_43;
  }
  uint64_t v103 = 0;
  double v151 = (void *)swift_getAssociatedConformanceWitness();
  uint64_t v149 = (char *)v151[5];
  uint64_t v150 = (char *)(v151 + 5);
  unint64_t v159 = (char *)v144 + *((void *)*v144 + 17);
  uint64_t v153 = (void (**)(char *, char *, uint64_t))(v156 + 16);
  uint64_t v148 = (void (**)(char *, char *, uint64_t))(v156 + 32);
  uint64_t v176 = (void (**)(uint64_t, uint64_t))(v171 + 48);
  uint64_t v175 = (uint64_t (**)(void, void, void, void))(v169 + 24);
  BOOL v104 = (void (**)(char *, uint64_t))(v133 + 8);
  double v147 = (void (**)(char *, uint64_t))(v156 + 8);
  uint64_t v105 = MEMORY[0x1E4FBB550];
  uint64_t v106 = MEMORY[0x1E4FBB560];
  uint64_t v152 = v99;
  while (1)
  {
    char v108 = sub_1C151ECDC();
    sub_1C151EC7C();
    if ((v108 & 1) == 0) {
      break;
    }
    (*(void (**)(char *, char *, uint64_t))(v156 + 16))(v102, &v99[((*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80))+ *(void *)(v156 + 72) * v103], v51);
    BOOL v109 = __OFADD__(v103, 1);
    uint64_t v110 = v103 + 1;
    if (v109) {
      goto LABEL_42;
    }
LABEL_32:
    uint64_t v155 = v110;
    (*v148)(v101, v102, v51);
    uint64_t v111 = ((uint64_t (*)(uint64_t, void *))v149)(v51, v151);
    if (v111)
    {
      uint64_t v154 = (void (**)(void, void))v111;
      uint64_t v112 = *(void *)(v111 + 16);
      if (v112)
      {
        uint64_t v113 = *v176;
        int64_t v114 = (uint64_t (*)(char *, char *, uint64_t, uint64_t))*v175;
        uint64_t v115 = (uint64_t *)(v154 + 4);
        do
        {
          uint64_t v122 = *v115++;
          uint64_t v121 = v122;
          uint64_t v181 = v122;
          MEMORY[0x1C18C5F70](&v178, &v181, v186, v105, v54, v106);
          uint64_t v123 = v178;
          if (!(void)v178) {
            uint64_t v123 = sub_1C151ECBC();
          }
          uint64_t v181 = v123;
          BOOL v116 = v163;
          v161(v173, v172);
          uint64_t v117 = v166;
          uint64_t v118 = v165;
          v113(v165, v171);
          v160(v116, v118);
          uint64_t v119 = v114(v174, v117, v168, v169);
          (*v104)(v117, v167);
          *(void *)&long long v178 = v119;
          swift_retain();
          uint64_t v54 = v158;
          sub_1C151ED1C();
          *(void *)&long long v178 = v119;
          swift_retain();
          sub_1C151ED1C();
          uint64_t v177 = v121;
          *(void *)&long long v178 = v181;
          uint64_t v105 = MEMORY[0x1E4FBB550];
          uint64_t v120 = MEMORY[0x1E4FBB560];
          sub_1C151E41C();
          sub_1C151E44C();
          uint64_t v106 = v120;
          swift_release();
          --v112;
        }
        while (v112);
      }
      swift_bridgeObjectRelease();
      char v101 = v174;
      uint64_t v51 = v146;
      (*v147)(v174, v146);
      unint64_t v102 = v145;
    }
    else
    {
      uint64_t v124 = v163;
      v161(v173, v172);
      uint64_t v125 = v166;
      uint64_t v126 = v165;
      (*(void (**)(uint64_t))(v171 + 48))(v165);
      uint64_t v127 = v124;
      uint64_t v105 = MEMORY[0x1E4FBB550];
      v160(v127, v126);
      uint64_t v128 = (*(uint64_t (**)(char *, char *, uint64_t))(v169 + 24))(v101, v125, v168);
      (*v104)(v125, v167);
      uint64_t v181 = v128;
      sub_1C151ED1C();
      (*v147)(v101, v51);
    }
    char v99 = v152;
    uint64_t v107 = MEMORY[0x1C18C6870](v152, v51);
    uint64_t v103 = v155;
    if (v155 == v107) {
      goto LABEL_43;
    }
  }
  uint64_t result = sub_1C152016C();
  if (v131 != 8) {
    goto LABEL_46;
  }
  uint64_t v181 = result;
  (*v153)(v102, (char *)&v181, v51);
  swift_unknownObjectRelease();
  BOOL v109 = __OFADD__(v103, 1);
  uint64_t v110 = v103 + 1;
  if (!v109) {
    goto LABEL_32;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v129 = v187;
  swift_getWitnessTable();
  return v129;
}

uint64_t sub_1BFE54414(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = (((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1C151928C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v4 + v7 + 9;
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v9(v8 & ~v7, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8 & ~v7, v5);
  }
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v10 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v10 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v11 = ((v8 | v7) + v10) & ~v7;
  if (!v9(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v13 = *(uint64_t (**)(unint64_t))(v12 + 8);
  unint64_t v14 = (((((((((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + *(unsigned __int8 *)(v12 + 80)
       + 9) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  return v13(v14);
}

uint64_t sub_1BFE545EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFE5464C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFEE9D78(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFE546A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFEFD268(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFE54718(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFEE9DCC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFE54774(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFE547D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFEE9E74(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFE54830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1BFE54890(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFE548F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFEEA21C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFE54960(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFEEA280(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFE549BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1256608(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFE54A2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C13B6FC4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFE54A9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFEEA498(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGroupConfigSidecar(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1103320);
}

uint64_t sub_1BFE54B20(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1BFE57E3C(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1BFE54B90(void *a1)
{
  return FormatImageNodeStyle.encode(to:)(a1);
}

uint64_t FormatImageNodeStyle.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  int64_t v114 = (char *)v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v115 = (char *)v113 - v8;
  MEMORY[0x1F4188790](v9);
  BOOL v116 = (char *)v113 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v117 = (char *)v113 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v118 = (char *)v113 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v119 = (char *)v113 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v120 = (char *)v113 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v121 = (char *)v113 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v122 = (char *)v113 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v125 = (char *)v113 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v123 = (char *)v113 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v124 = (char *)v113 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v126 = (char *)v113 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v127 = (char *)v113 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v128 = (char *)v113 - v34;
  MEMORY[0x1F4188790](v35);
  id v37 = (char *)v113 - v36;
  sub_1C0890AF0();
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v40 = (char *)v113 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = a1[3];
  uint64_t v42 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v41);
  sub_1C0890C18();
  uint64_t v44 = v43;
  uint64_t v45 = sub_1C085F050(&qword_1EB891EA0, (void (*)(uint64_t))sub_1C0890C18);
  sub_1BFEFBD78(v4, v46, v41, v4, v44, (uint64_t)&type metadata for FormatVersions.JazzkonC, v42, (uint64_t)v40, v45, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v48 = v2[2];
  uint64_t v47 = v2[3];
  uint64_t v130 = v2;
  uint64_t v49 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v49 != -1) {
    swift_once();
  }
  uint64_t v50 = sub_1C151928C();
  uint64_t v51 = __swift_project_value_buffer(v50, (uint64_t)qword_1EB93CAB0);
  uint64_t v52 = (char *)(*(void *)(v50 - 8) + 16);
  uint64_t v129 = *(void (**)(char *, uint64_t, uint64_t))v52;
  v129(v37, v51, v50);
  uint64_t v53 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v54 = v131;
  sub_1C06D0C60(v48, v47, 0, 0, 0, (uint64_t)v37, (uint64_t)sub_1C01B158C, 0);
  if (v54)
  {
    sub_1BFEFEB68((uint64_t)v37, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v55 = (uint64_t)v40;
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v37, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v57 = v130[4];
    uint64_t v56 = v130[5];
    uint64_t v58 = (uint64_t)v128;
    v129(v128, v51, v50);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    uint64_t v59 = v57;
    unint64_t v60 = v40;
    sub_1C06BAED4(v59, v56, 1, 0, 0, v58, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v58, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v61 = (uint64_t)v127;
    v129(v127, v51, v50);
    swift_storeEnumTagMultiPayload();
    uint64_t v62 = swift_bridgeObjectRetain();
    sub_1C06D0EA0(v62, 2, 0, 0);
    sub_1BFEFEB68(v61, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v63 = (uint64_t)v126;
    uint64_t v64 = v129;
    v129(v126, v51, v50);
    swift_storeEnumTagMultiPayload();
    uint64_t v65 = swift_bridgeObjectRetain();
    sub_1C0708178(v65, 3, 0, 0, v63, (uint64_t)sub_1C01B158C, 0);
    uint64_t v67 = v64;
    v113[1] = v53;
    uint64_t v128 = (char *)v50;
    uint64_t v127 = v52;
    uint64_t v131 = (uint64_t)v60;
    sub_1BFEFEB68(v63, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v68 = v130;
    swift_beginAccess();
    uint64_t v69 = v68[8];
    uint64_t v70 = qword_1EB887640;
    swift_bridgeObjectRetain();
    if (v70 != -1) {
      swift_once();
    }
    uint64_t v71 = (uint64_t)v128;
    uint64_t v72 = __swift_project_value_buffer((uint64_t)v128, (uint64_t)qword_1EB93CAC8);
    uint64_t v73 = (uint64_t)v124;
    v67(v124, v72, v71);
    swift_storeEnumTagMultiPayload();
    uint64_t v74 = (uint64_t)v125;
    if (v69 && (sub_1C0838328(v73, 4, 0, 0, (uint64_t)sub_1C01B158C, 0) & 1) != 0)
    {
      long long v132 = xmmword_1C1557FD0;
      char v133 = 0;
      uint64_t v135 = v69;
      sub_1C0890B84();
      sub_1C085F050(&qword_1EB86E3F0, (void (*)(uint64_t))sub_1C0890B84);
      sub_1C0872CB0(0, &qword_1EB879E88, &qword_1EB879E78, (uint64_t)&type metadata for FormatImageAdjustment);
      sub_1C0890D44();
      sub_1C1520BAC();
      uint64_t v75 = (void (*)(char *, uint64_t))v67;
      uint64_t v74 = (uint64_t)v125;
    }
    else
    {
      uint64_t v75 = (void (*)(char *, uint64_t))v67;
    }
    sub_1BFEFEB68(v73, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v76 = v130[9];
    uint64_t v77 = (uint64_t)v123;
    uint64_t v126 = (char *)v51;
    uint64_t v78 = (uint64_t)v128;
    v75(v123, v51);
    swift_storeEnumTagMultiPayload();
    sub_1BFEF683C(v76);
    sub_1C07083F0(v76, 5, 0, 0, v77, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v77, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF68C0(v76);
    uint64_t v79 = v78;
    ((void (*)(uint64_t, char *, uint64_t))v75)(v74, v126, v78);
    swift_storeEnumTagMultiPayload();
    uint64_t v80 = swift_bridgeObjectRetain();
    sub_1C0708648(v80, 6, 0, 0, v74, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v74, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    unsigned __int8 v81 = *((unsigned char *)v130 + 88);
    uint64_t v82 = (uint64_t)v122;
    ((void (*)(char *, char *, uint64_t))v75)(v122, v126, v78);
    swift_storeEnumTagMultiPayload();
    sub_1C07088AC(v81, 7, 0, 0, v82, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v82, type metadata accessor for FormatVersionRequirement);
    uint64_t v84 = v130[12];
    uint64_t v83 = v130[13];
    char v85 = *((unsigned char *)v130 + 112);
    uint64_t v86 = (uint64_t)v121;
    ((void (*)(char *, char *, uint64_t))v75)(v121, v126, v79);
    swift_storeEnumTagMultiPayload();
    sub_1BFEF6828(v84, v83, v85);
    sub_1C0708AD0(v84, v83, v85, 8, 0, 0, v86, (uint64_t)sub_1C01B158C);
    sub_1BFEFEB68(v86, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF68AC(v84, v83, v85);
    uint64_t v87 = v130;
    unint64_t v88 = v130[15];
    uint64_t v89 = (uint64_t)v120;
    uint64_t v90 = v129;
    v129(v120, (uint64_t)v126, v79);
    swift_storeEnumTagMultiPayload();
    sub_1BFEF6854(v88);
    uint64_t v55 = v131;
    sub_1C0708D44(v88, 9, 0, 0, v89, (uint64_t)sub_1C01B158C, 0);
    uint64_t v125 = 0;
    sub_1BFEFEB68(v89, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF68D8(v88);
    LOBYTE(v89) = *((unsigned char *)v87 + 128);
    uint64_t v91 = (uint64_t)v119;
    uint64_t v92 = (void (*)(char *, char *, uint64_t))v90;
    v90(v119, (uint64_t)v126, v79);
    swift_storeEnumTagMultiPayload();
    uint64_t v93 = v125;
    sub_1C0708F90(v89, 10, 0, 0, v91, (uint64_t)sub_1C01B158C, 0);
    if (v93)
    {
      sub_1BFEFEB68(v91, type metadata accessor for FormatVersionRequirement);
    }
    else
    {
      sub_1BFEFEB68(v91, type metadata accessor for FormatVersionRequirement);
      sub_1BFE99AAC((uint64_t)(v130 + 17), (uint64_t)v134, &qword_1EB85B6E0, (uint64_t)&type metadata for FormatShadow);
      uint64_t v94 = (uint64_t)v118;
      v90(v118, (uint64_t)v126, (uint64_t)v128);
      swift_storeEnumTagMultiPayload();
      sub_1BFE99EB4((uint64_t)v134, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8708);
      sub_1C07091B4((uint64_t)v134, 11, 0, 0, v94, (uint64_t)sub_1C01B158C, 0);
      sub_1BFEFEB68((uint64_t)v118, type metadata accessor for FormatVersionRequirement);
      sub_1BFE99EB4((uint64_t)v134, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8738);
      uint64_t v95 = v130[28];
      uint64_t v96 = (uint64_t)v117;
      v92(v117, v126, (uint64_t)v128);
      swift_storeEnumTagMultiPayload();
      sub_1BFDC11A4(v95);
      sub_1C07094E8(v95, 12, 0, 0, v96, (uint64_t)sub_1C01B158C, 0);
      sub_1BFEFEB68(v96, type metadata accessor for FormatVersionRequirement);
      sub_1BFDC11BC(v95);
      unsigned __int8 v97 = *((unsigned char *)v130 + 232);
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v98 = (uint64_t)v128;
      uint64_t v99 = __swift_project_value_buffer((uint64_t)v128, (uint64_t)qword_1EB93CA08);
      uint64_t v100 = (uint64_t)v116;
      v92(v116, (char *)v99, v98);
      swift_storeEnumTagMultiPayload();
      sub_1C0709740(v97, 13, 0, 0, v100, (uint64_t)sub_1C01B158C, 0);
      sub_1BFEFEB68(v100, type metadata accessor for FormatVersionRequirement);
      uint64_t v102 = v130[30];
      uint64_t v101 = v130[31];
      sub_1BFEF6864(v102);
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v103 = (uint64_t)v128;
      uint64_t v104 = __swift_project_value_buffer((uint64_t)v128, (uint64_t)qword_1EB93CAE0);
      uint64_t v105 = (uint64_t)v115;
      v92(v115, (char *)v104, v103);
      swift_storeEnumTagMultiPayload();
      sub_1C0709964(v102, v101, 14, 0, 0, v105, (uint64_t)sub_1C01B158C, 0);
      sub_1BFEFEB68(v105, type metadata accessor for FormatVersionRequirement);
      sub_1BFEF68E8(v102);
      uint64_t v106 = (uint64_t)v130 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask;
      sub_1BFF05D18();
      char v108 = &v114[*(int *)(v107 + 48)];
      BOOL v109 = &v114[*(int *)(v107 + 64)];
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v110 = (uint64_t)v128;
      uint64_t v111 = __swift_project_value_buffer((uint64_t)v128, (uint64_t)qword_1EB93CA98);
      uint64_t v112 = (uint64_t)v114;
      v92(v114, (char *)v111, v110);
      v92(v108, (char *)v104, v110);
      *(void *)BOOL v109 = 0;
      *((void *)v109 + 1) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v55 = v131;
      sub_1C0709BC8(v106, 15, 0, 0, v112, (uint64_t)sub_1C01B158C, 0);
      sub_1BFEFEB68(v112, type metadata accessor for FormatVersionRequirement);
    }
  }
  return sub_1BFEFEB68(v55, (uint64_t (*)(void))sub_1C0890AF0);
}

uint64_t FormatParagraphStyle.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v71 = &v69[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v74 = &v69[-v6];
  MEMORY[0x1F4188790](v7);
  uint64_t v77 = &v69[-v8];
  MEMORY[0x1F4188790](v9);
  uint64_t v80 = &v69[-v10];
  MEMORY[0x1F4188790](v11);
  uint64_t v83 = &v69[-v12];
  MEMORY[0x1F4188790](v13);
  uint64_t v86 = &v69[-v14];
  MEMORY[0x1F4188790](v15);
  uint64_t v89 = &v69[-v16];
  MEMORY[0x1F4188790](v17);
  uint64_t v92 = &v69[-v18];
  MEMORY[0x1F4188790](v19);
  uint64_t v95 = &v69[-v20];
  MEMORY[0x1F4188790](v21);
  uint64_t v100 = &v69[-v22];
  MEMORY[0x1F4188790](v23);
  uint64_t v99 = &v69[-v24];
  MEMORY[0x1F4188790](v25);
  uint64_t v102 = &v69[-v26];
  MEMORY[0x1F4188790](v27);
  uint64_t v105 = &v69[-v28];
  MEMORY[0x1F4188790](v29);
  char v108 = &v69[-v30];
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = &v69[-v32];
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = &v69[-v35];
  sub_1C0861B40();
  MEMORY[0x1F4188790](v37 - 8);
  uint64_t v39 = &v69[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LODWORD(v111) = *v1;
  uint64_t v110 = *((void *)v1 + 1);
  int v109 = v1[16];
  uint64_t v107 = *((void *)v1 + 3);
  int v106 = v1[32];
  uint64_t v104 = *((void *)v1 + 5);
  int v103 = v1[48];
  int v101 = v1[49];
  int v98 = v1[50];
  uint64_t v97 = *((void *)v1 + 7);
  int v96 = v1[64];
  uint64_t v94 = *((void *)v1 + 9);
  int v93 = v1[80];
  uint64_t v91 = *((void *)v1 + 11);
  int v90 = v1[96];
  uint64_t v88 = *((void *)v1 + 13);
  int v87 = v1[112];
  uint64_t v85 = *((void *)v1 + 15);
  int v84 = v1[128];
  uint64_t v82 = *((void *)v1 + 17);
  int v81 = v1[144];
  uint64_t v79 = *((void *)v1 + 19);
  int v78 = v1[160];
  uint64_t v76 = *((void *)v1 + 21);
  int v75 = v1[176];
  uint64_t v73 = *((void *)v1 + 23);
  int v72 = v1[192];
  int v70 = v1[193];
  uint64_t v40 = a1[3];
  uint64_t v41 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v40);
  sub_1C0861A14();
  uint64_t v43 = v42;
  uint64_t v44 = sub_1C085F050(&qword_1EB891EC0, (void (*)(uint64_t))sub_1C0861A14);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatParagraphStyle, v45, v40, (uint64_t)&type metadata for FormatParagraphStyle, v43, (uint64_t)&type metadata for FormatVersions.JazzkonC, v41, (uint64_t)v39, v44, (uint64_t)&off_1F1C39B68);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v46 = sub_1C151928C();
  uint64_t v47 = __swift_project_value_buffer(v46, (uint64_t)qword_1EB93CAB0);
  uint64_t v48 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16);
  v48(v36, v47, v46);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v49 = (uint64_t)v39;
  uint64_t v50 = v112;
  sub_1C0706A10(v111, 0, 0, 0, (uint64_t)v36, (uint64_t)sub_1C01B158C, 0);
  if (v50)
  {
    uint64_t v57 = (uint64_t)v36;
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v36, type metadata accessor for FormatVersionRequirement);
    v48(v33, v47, v46);
    swift_storeEnumTagMultiPayload();
    sub_1C0706C34(v110, v109, 1, 0, 0, (uint64_t)v33, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68((uint64_t)v33, type metadata accessor for FormatVersionRequirement);
    uint64_t v51 = (uint64_t)v108;
    v48(v108, v47, v46);
    swift_storeEnumTagMultiPayload();
    sub_1C0706C34(v107, v106, 2, 0, 0, v51, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v51, type metadata accessor for FormatVersionRequirement);
    uint64_t v52 = (uint64_t)v105;
    v48(v105, v47, v46);
    swift_storeEnumTagMultiPayload();
    sub_1C0706C34(v104, v103, 3, 0, 0, v52, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v52, type metadata accessor for FormatVersionRequirement);
    uint64_t v53 = (uint64_t)v102;
    v48(v102, v47, v46);
    swift_storeEnumTagMultiPayload();
    sub_1C0706E54(v101, 4, 0, 0, v53, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v53, type metadata accessor for FormatVersionRequirement);
    if (qword_1EB8849C8 != -1) {
      swift_once();
    }
    uint64_t v54 = __swift_project_value_buffer(v46, (uint64_t)qword_1EB93C790);
    uint64_t v55 = (uint64_t)v99;
    v48(v99, v54, v46);
    swift_storeEnumTagMultiPayload();
    sub_1C0707078(v98, 5, 0, 0, v55, (uint64_t)sub_1C01B158C, 0);
    uint64_t v56 = (uint64_t)v100;
    sub_1BFEFEB68(v55, type metadata accessor for FormatVersionRequirement);
    v48((unsigned char *)v56, v47, v46);
    swift_storeEnumTagMultiPayload();
    sub_1C0706C34(v97, v96, 6, 0, 0, v56, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v56, type metadata accessor for FormatVersionRequirement);
    uint64_t v59 = (uint64_t)v95;
    v48(v95, v47, v46);
    swift_storeEnumTagMultiPayload();
    sub_1C0706C34(v94, v93, 7, 0, 0, v59, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v59, type metadata accessor for FormatVersionRequirement);
    uint64_t v60 = (uint64_t)v92;
    v48(v92, v47, v46);
    swift_storeEnumTagMultiPayload();
    sub_1C0706C34(v91, v90, 8, 0, 0, v60, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v60, type metadata accessor for FormatVersionRequirement);
    uint64_t v61 = (uint64_t)v89;
    v48(v89, v47, v46);
    swift_storeEnumTagMultiPayload();
    sub_1C0706C34(v88, v87, 9, 0, 0, v61, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v61, type metadata accessor for FormatVersionRequirement);
    uint64_t v62 = v86;
    uint64_t v110 = v47;
    uint64_t v111 = v48;
    v48(v86, v47, v46);
    uint64_t v112 = 0;
    swift_storeEnumTagMultiPayload();
    sub_1C0706C34(v85, v84, 10, 0, 0, (uint64_t)v62, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68((uint64_t)v86, type metadata accessor for FormatVersionRequirement);
    uint64_t v63 = v83;
    v111(v83, v110, v46);
    swift_storeEnumTagMultiPayload();
    sub_1C0706C34(v82, v81, 11, 0, 0, (uint64_t)v63, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68((uint64_t)v83, type metadata accessor for FormatVersionRequirement);
    if (qword_1EB887640 != -1) {
      swift_once();
    }
    uint64_t v64 = __swift_project_value_buffer(v46, (uint64_t)qword_1EB93CAC8);
    uint64_t v65 = (uint64_t)v80;
    v111(v80, v64, v46);
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = (uint64_t)v39;
    sub_1C0706C34(v79, v78, 12, 0, 0, v65, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v65, type metadata accessor for FormatVersionRequirement);
    uint64_t v66 = (uint64_t)v77;
    v111(v77, v110, v46);
    swift_storeEnumTagMultiPayload();
    sub_1C0706C34(v76, v75, 13, 0, 0, v66, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v66, type metadata accessor for FormatVersionRequirement);
    uint64_t v67 = (uint64_t)v74;
    v111(v74, v110, v46);
    swift_storeEnumTagMultiPayload();
    sub_1C0706C34(v73, v72, 14, 0, 0, v67, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v67, type metadata accessor for FormatVersionRequirement);
    uint64_t v68 = (uint64_t)v71;
    v111(v71, v110, v46);
    swift_storeEnumTagMultiPayload();
    sub_1C070729C(v70, 15, 0, 0, v68, (uint64_t)sub_1C01B158C, 0);
    uint64_t v57 = v68;
  }
  sub_1BFEFEB68(v57, type metadata accessor for FormatVersionRequirement);
  return sub_1BFEFEB68(v49, (uint64_t (*)(void))sub_1C0861B40);
}

uint64_t sub_1BFE56F68()
{
  return sub_1C079B3F4(*v0);
}

unint64_t sub_1BFE56F70()
{
  return sub_1C077EEC8(*v0);
}

unint64_t sub_1BFE56F78()
{
  unint64_t result = qword_1EB86B0E0;
  if (!qword_1EB86B0E0)
  {
    sub_1BFE9DEBC(255, &qword_1EB86B0D8, (uint64_t)&type metadata for FormatImageNodeStyle.Selector, MEMORY[0x1E4FBB320]);
    sub_1C0077EE4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B0E0);
  }
  return result;
}

unint64_t sub_1BFE5700C()
{
  unint64_t result = qword_1EB85B948;
  if (!qword_1EB85B948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B948);
  }
  return result;
}

unint64_t sub_1BFE57060()
{
  unint64_t result = qword_1EB878270;
  if (!qword_1EB878270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878270);
  }
  return result;
}

unint64_t sub_1BFE570B4()
{
  unint64_t result = qword_1EB85BAA8;
  if (!qword_1EB85BAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BAA8);
  }
  return result;
}

unint64_t sub_1BFE57108()
{
  unint64_t result = qword_1EB85B908;
  if (!qword_1EB85B908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B908);
  }
  return result;
}

void *sub_1BFE5715C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80) & 0xF8;
  uint64_t v11 = v10 | 7;
  v10 += 15;
  unint64_t v12 = ((unint64_t)v6 + v10) & ~v11;
  uint64_t v13 = (unsigned __int8 *)(((unint64_t)v7 + v10) & ~v11);
  unint64_t v14 = *(void *)(v9 + 64);
  unint64_t v15 = v14 + 7;
  if (v14 <= ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v14 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v14 <= 0x10) {
    unint64_t v16 = 16;
  }
  else {
    unint64_t v16 = v14;
  }
  if ((v16 & 0xFFFFFFFFFFFFFFF8) + 48 <= v16) {
    unint64_t v17 = v16;
  }
  else {
    unint64_t v17 = (v16 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unsigned int v18 = v13[v17];
  unsigned int v19 = v18 - 7;
  if (v18 >= 7)
  {
    if (v17 <= 3) {
      uint64_t v20 = v17;
    }
    else {
      uint64_t v20 = 4;
    }
    switch(v20)
    {
      case 1:
        int v21 = *v13;
        goto LABEL_18;
      case 2:
        int v21 = *(unsigned __int16 *)v13;
        goto LABEL_18;
      case 3:
        int v21 = *(unsigned __int16 *)v13 | (v13[2] << 16);
        goto LABEL_18;
      case 4:
        int v21 = *(_DWORD *)v13;
LABEL_18:
        int v22 = (v21 | (v19 << (8 * v17))) + 7;
        unsigned int v18 = v21 + 7;
        if (v17 < 4) {
          unsigned int v18 = v22;
        }
        break;
      default:
        break;
    }
  }
  unint64_t v23 = v16 + 1;
  switch(v18)
  {
    case 1u:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v9 + 16))(v12, v13, AssociatedTypeWitness);
      unint64_t v27 = (v15 + v12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v28 = (unint64_t)&v13[v15] & 0xFFFFFFFFFFFFFFF8;
      unint64_t v29 = *(void *)(v28 + 24);
      if (v29 < 0xFFFFFFFF)
      {
        long long v37 = *(_OWORD *)(v28 + 16);
        *(_OWORD *)unint64_t v27 = *(_OWORD *)v28;
        *(_OWORD *)(v27 + 16) = v37;
      }
      else
      {
        *(void *)(v27 + 24) = v29;
        (**(void (***)(void))(v29 - 8))();
      }
      char v30 = 1;
      goto LABEL_54;
    case 2u:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v9 + 16))(v12, v13, AssociatedTypeWitness);
      char v30 = 2;
      goto LABEL_54;
    case 3u:
      *(void *)unint64_t v12 = *(void *)v13;
      *(void *)(v12 + 8) = *((void *)v13 + 1);
      char v31 = 3;
      goto LABEL_31;
    case 4u:
      *(void *)unint64_t v12 = *(void *)v13;
      *(void *)(v12 + 8) = *((void *)v13 + 1);
      char v31 = 4;
      goto LABEL_31;
    case 5u:
      *(void *)unint64_t v12 = *(void *)v13;
      *(void *)(v12 + 8) = *((void *)v13 + 1);
      char v31 = 5;
LABEL_31:
      *(unsigned char *)(v12 + v17) = v31;
      swift_bridgeObjectRetain();
      break;
    case 6u:
      unsigned int v32 = v13[v16];
      unsigned int v33 = v32 - 3;
      if (v32 >= 3)
      {
        if (v16 <= 3) {
          uint64_t v34 = v16;
        }
        else {
          uint64_t v34 = 4;
        }
        switch(v34)
        {
          case 1:
            int v35 = *v13;
            goto LABEL_43;
          case 2:
            int v35 = *(unsigned __int16 *)v13;
            goto LABEL_43;
          case 3:
            int v35 = *(unsigned __int16 *)v13 | (v13[2] << 16);
            goto LABEL_43;
          case 4:
            int v35 = *(_DWORD *)v13;
LABEL_43:
            int v38 = (v35 | (v33 << (8 * v16))) + 3;
            unsigned int v32 = v35 + 3;
            if (v16 < 4) {
              unsigned int v32 = v38;
            }
            break;
          default:
            break;
        }
      }
      if (v32 == 2)
      {
        *(void *)unint64_t v12 = *(void *)v13;
        *(void *)(v12 + 8) = *((void *)v13 + 1);
        *(unsigned char *)(v12 + v16) = 2;
        swift_bridgeObjectRetain();
      }
      else if (v32 == 1)
      {
        (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v9 + 16))(v12, v13, AssociatedTypeWitness);
        *(unsigned char *)(v12 + v16) = 1;
      }
      else
      {
        (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v9 + 16))(v12, v13, AssociatedTypeWitness);
        unint64_t v39 = (v15 + v12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v40 = (unint64_t)&v13[v15] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v41 = *(void *)(v40 + 24);
        if (v41 < 0xFFFFFFFF)
        {
          long long v42 = *(_OWORD *)(v40 + 16);
          *(_OWORD *)unint64_t v39 = *(_OWORD *)v40;
          *(_OWORD *)(v39 + 16) = v42;
        }
        else
        {
          *(void *)(v39 + 24) = v41;
          (**(void (***)(void))(v41 - 8))();
        }
        *(unsigned char *)(v12 + v16) = 0;
      }
      unint64_t v43 = ((v12 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v44 = (((unint64_t)v13 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v45 = *(void *)(v44 + 24);
      *(void *)(v43 + 24) = v45;
      *(void *)(v43 + 32) = *(void *)(v44 + 32);
      (**(void (***)(void))(v45 - 8))();
      char v30 = 6;
LABEL_54:
      *(unsigned char *)(v12 + v17) = v30;
      break;
    default:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v9 + 16))(v12, v13, AssociatedTypeWitness);
      unint64_t v24 = (v15 + v12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v25 = (unint64_t)&v13[v15] & 0xFFFFFFFFFFFFFFF8;
      unint64_t v26 = *(void *)(v25 + 24);
      if (v26 < 0xFFFFFFFF)
      {
        long long v36 = *(_OWORD *)(v25 + 16);
        *(_OWORD *)unint64_t v24 = *(_OWORD *)v25;
        *(_OWORD *)(v24 + 16) = v36;
      }
      else
      {
        *(void *)(v24 + 24) = v26;
        (**(void (***)(void))(v26 - 8))();
      }
      *(unsigned char *)(v12 + v17) = 0;
      break;
  }
  uint64_t v46 = (void *)(((v12 | 7) + v17 + 1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v47 = (void *)((((unint64_t)v13 | 7) + v17 + 1) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v46 = *v47;
  uint64_t v48 = (void *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v49 = (void *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v48 = *v49;
  uint64_t v50 = (_OWORD *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v51 = (long long *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v52 = *v51;
  long long v53 = v51[1];
  *(_OWORD *)((char *)v50 + 26) = *(long long *)((char *)v51 + 26);
  *uint64_t v50 = v52;
  v50[1] = v53;
  *(void *)(((unint64_t)v50 + 49) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v51 + 49) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v54 = ((v11 + 24) & ~v11)
      + (((((((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v55 = (void *)(((unint64_t)a1 + v54 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v56 = (void *)(((unint64_t)a2 + v54 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v55 = *v56;
  unint64_t v57 = v56[1];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v57 >= 2) {
    swift_bridgeObjectRetain();
  }
  v55[1] = v57;
  v55[2] = v56[2];
  uint64_t v58 = (void *)(((unint64_t)v55 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v59 = (void *)(((unint64_t)v56 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v58 = *v59;
  *(void *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFE57790(uint64_t a1)
{
  unint64_t v1 = (((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(_DWORD *)(v3 + 80) & 0xF8 | 7;
  uint64_t v5 = (v1 + v4 + 8) & ~v4;
  unint64_t v6 = *(void *)(v3 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(v3 + 64);
  }
  if (v7 <= 0x10) {
    unint64_t v8 = 16;
  }
  else {
    unint64_t v8 = v7;
  }
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8) {
    unint64_t v9 = v8;
  }
  else {
    unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unsigned int v10 = *(unsigned __int8 *)(v5 + v9);
  unsigned int v11 = v10 - 7;
  if (v10 >= 7)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *(unsigned __int8 *)v5;
        goto LABEL_18;
      case 2:
        int v13 = *(unsigned __int16 *)v5;
        goto LABEL_18;
      case 3:
        int v13 = *(unsigned __int16 *)v5 | (*(unsigned __int8 *)(v5 + 2) << 16);
        goto LABEL_18;
      case 4:
        int v13 = *(_DWORD *)v5;
LABEL_18:
        int v14 = (v13 | (v11 << (8 * v9))) + 7;
        unsigned int v10 = v13 + 7;
        if (v9 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  switch(v10)
  {
    case 2u:
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
      break;
    case 3u:
    case 4u:
    case 5u:
      swift_bridgeObjectRelease();
      break;
    case 6u:
      unsigned int v16 = *(unsigned __int8 *)(v5 + v8);
      unsigned int v17 = v16 - 3;
      if (v16 >= 3)
      {
        if (v8 <= 3) {
          uint64_t v18 = v8;
        }
        else {
          uint64_t v18 = 4;
        }
        switch(v18)
        {
          case 1:
            int v19 = *(unsigned __int8 *)v5;
            goto LABEL_34;
          case 2:
            int v19 = *(unsigned __int16 *)v5;
            goto LABEL_34;
          case 3:
            int v19 = *(unsigned __int16 *)v5 | (*(unsigned __int8 *)(v5 + 2) << 16);
            goto LABEL_34;
          case 4:
            int v19 = *(_DWORD *)v5;
LABEL_34:
            int v20 = (v19 | (v17 << (8 * v8))) + 3;
            unsigned int v16 = v19 + 3;
            if (v8 < 4) {
              unsigned int v16 = v20;
            }
            break;
          default:
            break;
        }
      }
      if (v16 == 2)
      {
        swift_bridgeObjectRelease();
      }
      else if (v16 == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
        unint64_t v21 = ((v5 | 7) + v6) & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v21 + 24) >= 0xFFFFFFFFuLL) {
          __swift_destroy_boxed_opaque_existential_1(v21);
        }
      }
      unint64_t v15 = (v5 + v8 + 8) & 0xFFFFFFFFFFFFFFF8;
      goto LABEL_43;
    default:
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
      unint64_t v15 = ((v5 | 7) + v6) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v15 + 24) >= 0xFFFFFFFFuLL) {
LABEL_43:
      }
        __swift_destroy_boxed_opaque_existential_1(v15);
      break;
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFE57AD4(int *a1, int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v5 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  if ((v5 & 0xFFFFFFFFFFFFFFF8) + 48 > v5) {
    unint64_t v5 = (v5 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v6 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v7 = v6 | 7;
  if ((a2 & 0x80000000) == 0) {
    goto LABEL_9;
  }
  unint64_t v10 = ((v6 + 31) & ~v7)
      + (((((((v5 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v11 = v10 & 0xFFFFFFF8;
  unsigned int v12 = a2 - 2147483646;
  if ((v10 & 0xFFFFFFF8) != 0) {
    unsigned int v12 = 2;
  }
  if (v12 >= 0x10000) {
    int v13 = 4;
  }
  else {
    int v13 = 2;
  }
  if (v12 < 0x100) {
    int v14 = 1;
  }
  else {
    int v14 = v13;
  }
  if (v14 == 4)
  {
    int v15 = *(int *)((char *)a1 + v10);
    if (!v15) {
      goto LABEL_9;
    }
  }
  else if (v14 == 2)
  {
    int v15 = *(unsigned __int16 *)((char *)a1 + v10);
    if (!v15) {
      goto LABEL_9;
    }
  }
  else
  {
    int v15 = *((unsigned __int8 *)a1 + v10);
    if (!v15)
    {
LABEL_9:
      unint64_t v8 = *(void *)(((((((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7)
                      + v5
                      + 8) & 0xFFFFFFFFFFFFFFF8);
      if (v8 >= 0xFFFFFFFF) {
        LODWORD(v8) = -1;
      }
      return (v8 + 1);
    }
  }
  int v16 = v15 - 1;
  if (v11)
  {
    int v16 = 0;
    int v17 = *a1;
  }
  else
  {
    int v17 = 0;
  }
  return (v17 | v16) ^ 0x80000000;
}

uint64_t sub_1BFE57CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedGroupEmitter();
  v10[6] = a1;
  uint64_t v11 = sub_1C151ECBC();
  void v10[2] = a2;
  v10[3] = a3;
  v10[4] = &v11;
  type metadata accessor for FeedScoredResult();
  uint64_t v6 = sub_1C151ED5C();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1C035E7C8((void (*)(char *, char *))sub_1BFD7E2B4, (uint64_t)v10, v6, (uint64_t)&type metadata for FeedJournalGroup, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v8);
}

uint64_t type metadata accessor for FeedGroupEmitTask()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1BFE57E3C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC845BC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1BFE57EA4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + qword_1EB93C680);
  uint64_t v4 = type metadata accessor for FeedCursorGroup();
  uint64_t result = MEMORY[0x1C18C6830](v3, v4);
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else if (result + 1 == *(void *)(v1 + qword_1EB93C690))
  {
    return 1;
  }
  else
  {
    uint64_t v6 = *(void *)(v1 + qword_1EB93C688);
    type metadata accessor for FeedGroupEmitter();
    sub_1C151ED5C();
    nullsub_1(v6);
    sub_1C151E3DC();
    swift_getWitnessTable();
    sub_1C151EA4C();
    return (v8 == 1 || FeedCursor.nextSlotIndex.getter() >= v7) && a1 == 1;
  }
  return result;
}

uint64_t type metadata accessor for FeedScoredResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FeedChosenEmitterResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFE58060()
{
  uint64_t v425 = v0;
  uint64_t v310 = (_OWORD *)(v0 + 56);
  uint64_t v331 = (_OWORD *)(v0 + 88);
  uint64_t v321 = (_OWORD *)(v0 + 152);
  uint64_t v382 = v0 + 184;
  unint64_t v304 = (_OWORD *)(v0 + 216);
  uint64_t v367 = v0 + 280;
  uint64_t v1 = *(void *)(v0 + 1008);
  uint64_t v2 = *(void *)(v0 + 1000);
  uint64_t v3 = *(void *)(v0 + 992);
  uint64_t v4 = *(void *)(v0 + 984);
  uint64_t v5 = *(void *)(v0 + 968);
  uint64_t v6 = *(void *)(v0 + 936);
  uint64_t v393 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 944) + 16);
  v393(v5, *(void *)(v0 + 1024), v6);
  uint64_t v404 = v6;
  uint64_t v7 = v5 + *(int *)(v6 + 44);
  char v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v8(v1, v7, v4);
  uint64_t v9 = type metadata accessor for FeedGroupEmitTaskResult();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v7, v9);
  v8(v2, v1, v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v351 = *(void *)(v0 + 1024);
      uint64_t v17 = *(void *)(v0 + 1000);
      uint64_t v18 = *(void *)(v0 + 952);
      uint64_t v326 = *(void *)(v0 + 936);
      uint64_t v383 = v10;
      uint64_t v19 = *(void *)(v0 + 904);
      uint64_t v20 = *(void *)(v0 + 896);
      uint64_t v21 = *(void *)(v0 + 888);
      uint64_t v311 = *(void *)(v0 + 480);
      uint64_t v22 = MEMORY[0x1E4FBC840] + 8;
      uint64_t v358 = MEMORY[0x1E4FBB718];
      sub_1BFE72C60(255, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
      uint64_t v23 = v17 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v332 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
      v332(v19, v17, v21);
      uint64_t v24 = v22;
      sub_1BFFBE2FC(v23, v367);
      uint64_t v25 = *(void *)(v311 + qword_1EB93CB78);
      uint64_t v415 = v25;
      v393(v18, v351, v326);
      uint64_t v26 = v18 + *(int *)(v404 + 44);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v372 = v9;
      v383(v26, v9);
      uint64_t v27 = sub_1BFE4028C();
      uint64_t v29 = v28;
      swift_release();
      sub_1BFDA65F8(v367, v0 + 248, (uint64_t)&qword_1EB87A940, v24, v358, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFE72C60);
      if (*(void *)(v0 + 272))
      {
        sub_1BFF993A8((_OWORD *)(v0 + 248), v321);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v422 = v25;
        sub_1BFFB4A24(v321, v27, v29, isUniquelyReferenced_nonNull_native);
        uint64_t v415 = v25;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v133 = v27;
        uint64_t v134 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
        sub_1BFE5F150(v0 + 248, (unint64_t *)&qword_1EB87A940, v24, MEMORY[0x1E4FBB718]);
        sub_1C035332C(v133, v29, v304);
        swift_bridgeObjectRelease();
        sub_1BFE5F150((uint64_t)v304, (unint64_t *)&qword_1EB87A940, v24, v134);
      }
      uint64_t v135 = *(void *)(v0 + 1024);
      uint64_t v354 = *(void *)(v0 + 968);
      uint64_t v136 = *(void *)(v0 + 936);
      uint64_t v279 = v136;
      uint64_t v137 = *(void *)(v0 + 912);
      uint64_t v138 = *(void *)(v0 + 896);
      uint64_t v261 = *(void *)(v0 + 888);
      uint64_t v262 = *(void *)(v0 + 904);
      uint64_t v364 = *(void *)(v0 + 864);
      uint64_t v288 = *(void *)(v0 + 840);
      uint64_t v291 = *(void *)(v0 + 848);
      uint64_t v263 = *(void *)(v0 + 832);
      uint64_t v264 = *(void *)(v0 + 816);
      uint64_t v139 = *(void *)(v0 + 808);
      uint64_t v140 = *(void *)(v0 + 792);
      uint64_t v266 = *(void *)(v0 + 800);
      uint64_t v268 = *(void *)(v0 + 768);
      uint64_t v271 = *(void *)(v0 + 712);
      uint64_t v274 = *(void *)(v0 + 784);
      uint64_t v283 = *(void *)(v0 + 704);
      uint64_t v301 = *(void *)(v0 + 608);
      uint64_t v306 = *(void *)(v0 + 640);
      uint64_t v314 = *(void *)(v0 + 600);
      uint64_t v323 = *(void *)(v0 + 592);
      uint64_t v141 = *(void *)(v0 + 528);
      uint64_t v296 = v141;
      uint64_t v142 = *(void *)(v0 + 512);
      uint64_t v143 = *(void *)(v0 + 480);
      unint64_t v428 = sub_1BFF99224(MEMORY[0x1E4FBC860]);
      uint64_t v277 = v135;
      uint64_t v328 = (unsigned char *)sub_1C042076C(v143, (uint64_t *)&v428, 1, v141);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v138 + 16))(v137, v262, v261);
      v393(v354, v135, v136);
      uint64_t v144 = v354 + *(int *)(v404 + 44);
      swift_retain();
      v383(v144, v372);
      sub_1BFDCA2AC();
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 16))(v264, v143 + *(void *)(*(void *)v143 + 256), v142);
      sub_1C151630C();
      FeedCursorGroup.init(createdDate:group:config:serviceConfig:)(v266, v137, v263, v264, v142, v364);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v139 + 56))(v268, 1, 1, v142);
      unsigned __int8 v416 = 7;
      int64_t v145 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v140 + 56);
      v145(v271, 1, 1, v274);
      v145(v283, 1, 1, v274);
      sub_1BFE72C60(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      swift_allocObject();
      uint64_t v146 = sub_1C151EC6C();
      uint64_t v148 = v147;
      v393(v354, v277, v279);
      uint64_t v149 = v354 + *(int *)(v404 + 44);
      uint64_t v150 = *(void *)(v149 + *(int *)(v372 + 36));
      swift_retain();
      v383(v149, v372);
      *uint64_t v148 = v150;
      sub_1BFE94A38(v146);
      uint64_t v389 = sub_1C151ECAC();
      swift_bridgeObjectRelease();
      sub_1C152089C();
      swift_allocObject();
      uint64_t v151 = sub_1C151EC6C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v291 + 16))(v152, v364, v288);
      sub_1BFE94A38(v151);
      uint64_t v378 = (unsigned char *)sub_1C151ECAC();
      swift_bridgeObjectRelease();
      uint64_t v153 = *(void *)(v277 + *(int *)(v296 + 44));
      uint64_t v154 = v143 + *(void *)(*(void *)v143 + 224);
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v301 + 16))(v306, v154, v314);
      uint64_t v155 = *(void *)(v323 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v155 + 48))(v306, 1) == 1)
      {
        uint64_t v156 = *(void *)(v0 + 640);
        uint64_t v157 = *(void *)(v0 + 600);
        uint64_t v158 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 608) + 8);
        swift_bridgeObjectRetain();
        v158(v156, v157);
      }
      else
      {
        uint64_t v159 = *(void *)(v0 + 904);
        uint64_t v160 = *(void *)(v0 + 880);
        uint64_t v161 = *(void *)(v0 + 640);
        uint64_t v162 = *(void *)(v0 + 592);
        uint64_t v163 = *(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 40);
        swift_bridgeObjectRetain();
        v163(v159, v162, v160);
        (*(void (**)(uint64_t, uint64_t))(v155 + 8))(v161, v162);
      }
      uint64_t v164 = *(void *)(v0 + 1024);
      uint64_t v412 = *(void *)(v0 + 768);
      uint64_t v324 = *(void *)(v0 + 744);
      uint64_t v340 = *(void *)(v0 + 736);
      uint64_t v400 = *(void *)(v0 + 704);
      uint64_t v407 = *(void *)(v0 + 712);
      uint64_t v307 = *(void *)(v0 + 608);
      uint64_t v315 = *(void *)(v0 + 600);
      uint64_t v165 = *(void *)(v0 + 584);
      uint64_t v166 = *(void *)(v0 + 528);
      uint64_t v167 = *(void *)(v0 + 480);
      uint64_t v168 = *(void *)(v0 + 648);
      (*(void (**)(void))(v155 + 56))();
      uint64_t v169 = type metadata accessor for FeedContext();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v169 - 8) + 56))(v165, 1, 1, v169);
      uint64_t v170 = (long long *)(v167 + *(void *)(*(void *)v167 + 240));
      uint64_t v171 = *((void *)v170 + 2);
      long long v420 = *v170;
      uint64_t v172 = (uint64_t *)(v164 + *(int *)(v166 + 36));
      uint64_t v173 = *v172;
      unint64_t v174 = v172[1];
      uint64_t v175 = v172[2];
      uint64_t v421 = v171;
      uint64_t v422 = v173;
      unint64_t v423 = v174;
      uint64_t v424 = v175;
      sub_1BFE5BC98(&v420, &v422, &v417);
      uint64_t v422 = v417;
      unint64_t v423 = v418;
      uint64_t v424 = v419;
      *(void *)&long long v420 = 0;
      WORD4(v420) = 256;
      v395 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v412, 0, &v416, v407, v400, v328, 0, v389, 0, v378, 0, 0, 1, 0, 1, 0, 1,
               v415,
               v153,
               v168,
               v165,
               &v422,
               (uint64_t)&v420,
               0,
               0,
               0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C04276B8(v165, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
      (*(void (**)(uint64_t, uint64_t))(v307 + 8))(v168, v315);
      uint64_t v176 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
      sub_1C04276B8(v400, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      sub_1C04276B8(v407, (unint64_t *)&qword_1EB871180, v176);
      (*(void (**)(uint64_t, uint64_t))(v324 + 8))(v412, v340);
      char v177 = FeedCursor.reachedEnd.getter();
      uint64_t v178 = *(void *)(v0 + 1016);
      uint64_t v408 = *(void *)(v0 + 1008);
      uint64_t v413 = *(void *)(v0 + 1024);
      uint64_t v179 = *(void *)(v0 + 992);
      uint64_t v180 = *(void *)(v0 + 904);
      uint64_t v181 = *(void *)(v0 + 888);
      uint64_t v379 = *(void *)(v0 + 864);
      uint64_t v390 = *(void *)(v0 + 984);
      uint64_t v182 = *(void *)(v0 + 848);
      uint64_t v365 = *(void *)(v0 + 840);
      uint64_t v401 = *(void *)(v0 + 528);
      if (v177)
      {
        uint64_t v183 = *(void *)(v0 + 472);
        sub_1C151F38C();
        sub_1C15197BC();
        (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v379, v365);
        sub_1BFE5F150(v367, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
        (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v408, v390);
        (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v413, v401);
        type metadata accessor for FeedCursor();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v185 = v181;
        uint64_t v186 = *(int *)(TupleTypeMetadata2 + 48);
        v332(v183, v180, v185);
        *(void *)(v183 + v186) = v395;
      }
      else
      {
        uint64_t v187 = *(void *)(v0 + 480);
        uint64_t v355 = *(void *)(v0 + 472);
        sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v341 = v180;
        uint64_t v188 = swift_allocObject();
        *(_OWORD *)(v188 + 16) = xmmword_1C1529AE0;
        *(void *)(v0 + 424) = v187;
        type metadata accessor for FeedCursor();
        swift_getWitnessTable();
        uint64_t v189 = sub_1C15186EC();
        uint64_t v190 = v181;
        uint64_t v192 = v191;
        *(void *)(v188 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v188 + 64) = sub_1BFE9C558();
        *(void *)(v188 + 32) = v189;
        *(void *)(v188 + 40) = v192;
        sub_1C151F38C();
        sub_1C15197BC();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v379, v365);
        sub_1BFE5F150(v367, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
        (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v408, v390);
        (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v413, v401);
        uint64_t v193 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        v332(v355, v341, v190);
        *(void *)(v355 + v193) = v395;
      }
      goto LABEL_24;
    case 2u:
      uint64_t v373 = v9;
      uint64_t v384 = v10;
      (*(void (**)(void, void, void))(*(void *)(v0 + 896) + 32))(*(void *)(v0 + 920), *(void *)(v0 + 1000), *(void *)(v0 + 888));
      goto LABEL_12;
    case 3u:
      char v31 = *(uint64_t **)(v0 + 1000);
      uint64_t v32 = v31[1];
      uint64_t v374 = *v31;
      goto LABEL_38;
    case 4u:
      uint64_t v345 = *(void *)(v0 + 1040);
      uint64_t v359 = *(void *)(v0 + 1024);
      uint64_t v33 = *(void *)(v0 + 1016);
      uint64_t v34 = *(uint64_t **)(v0 + 1000);
      uint64_t v375 = *(void *)(v0 + 568);
      uint64_t v385 = *(void *)(v0 + 984);
      uint64_t v35 = *(void *)(v0 + 528);
      uint64_t v36 = *(void *)(v0 + 480);
      uint64_t v37 = *v34;
      uint64_t v38 = v34[1];
      *(void *)(v0 + 392) = *(void *)(v36 + qword_1EB93CB78);
      swift_bridgeObjectRetain();
      uint64_t v410 = sub_1C042076C(v36, (uint64_t *)(v0 + 392), 0, v35);
      *(void *)(v0 + 1112) = v410;
      sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_1C1527210;
      uint64_t v40 = MEMORY[0x1E4FBB1A0];
      *(void *)(v39 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v41 = sub_1BFE9C558();
      *(void *)(v39 + 64) = v41;
      *(void *)(v39 + 32) = v37;
      *(void *)(v39 + 40) = v38;
      uint64_t v422 = 0;
      unint64_t v423 = 0xE000000000000000;
      *(void *)(v0 + 456) = v345;
      swift_getWitnessTable();
      sub_1C1520A3C();
      uint64_t v42 = v422;
      unint64_t v43 = v423;
      *(void *)(v39 + 96) = v40;
      *(void *)(v39 + 104) = v41;
      *(void *)(v39 + 72) = v42;
      *(void *)(v39 + 80) = v43;
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v375, v359, v35);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v375, 0, 1, v35);
      char v44 = sub_1C11937B0(v385);
      uint64_t v45 = *(void *)(v0 + 392);
      *(void *)(v0 + 1120) = v45;
      uint64_t v46 = sub_1C041F22C();
      *(void *)(v0 + 1128) = v46;
      uint64_t v47 = (void *)swift_task_alloc();
      *(void *)(v0 + 1136) = v47;
      *uint64_t v47 = v0;
      v47[1] = sub_1C041A208;
      uint64_t v48 = *(void *)(v0 + 1032);
      uint64_t v49 = *(void *)(v0 + 568);
      double v50 = *(double *)(v0 + 488);
      uint64_t v51 = *(void *)(v0 + 472);
      long long v52 = *(uint64_t **)(v0 + 480);
      uint64_t v427 = *(void *)(v0 + 496);
      char v53 = v44 & 1;
      uint64_t v54 = v410;
      uint64_t v55 = v45;
      uint64_t v56 = v46;
      goto LABEL_40;
    case 5u:
      uint64_t v299 = *(void *)(v0 + 1040);
      uint64_t v312 = *(void *)(v0 + 1024);
      uint64_t v386 = v10;
      uint64_t v57 = *(void *)(v0 + 1016);
      uint64_t v58 = *(uint64_t **)(v0 + 1000);
      uint64_t v327 = *(void *)(v0 + 984);
      uint64_t v337 = *(void *)(v0 + 968);
      uint64_t v346 = *(void *)(v0 + 936);
      uint64_t v322 = *(void *)(v0 + 560);
      uint64_t v59 = *(void *)(v0 + 528);
      uint64_t v60 = *(void *)(v0 + 480);
      uint64_t v61 = *v58;
      uint64_t v294 = v58[1];
      uint64_t v368 = *(void *)(v60 + qword_1EB93CB78);
      *(void *)(v0 + 408) = sub_1BFF99224(MEMORY[0x1E4FBC860]);
      uint64_t v360 = sub_1C042076C(v60, (uint64_t *)(v0 + 408), 1, v59);
      *(void *)(v0 + 1152) = v360;
      swift_bridgeObjectRelease();
      sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_1C1527210;
      uint64_t v63 = MEMORY[0x1E4FBB1A0];
      *(void *)(v62 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v64 = sub_1BFE9C558();
      *(void *)(v62 + 64) = v64;
      *(void *)(v62 + 32) = v61;
      *(void *)(v62 + 40) = v294;
      uint64_t v422 = 0;
      unint64_t v423 = 0xE000000000000000;
      *(void *)(v0 + 400) = v299;
      swift_getWitnessTable();
      sub_1C1520A3C();
      uint64_t v65 = v422;
      unint64_t v66 = v423;
      *(void *)(v62 + 96) = v63;
      *(void *)(v62 + 104) = v64;
      *(void *)(v62 + 72) = v65;
      *(void *)(v62 + 80) = v66;
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v322, v312, v59);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v322, 0, 1, v59);
      char v67 = sub_1C11937B0(v327);
      sub_1BFE72C60(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      swift_allocObject();
      uint64_t v68 = sub_1C151EC6C();
      int v70 = v69;
      v393(v337, v312, v346);
      uint64_t v71 = v337 + *(int *)(v404 + 44);
      uint64_t v72 = *(void *)(v71 + *(int *)(v9 + 36));
      swift_retain();
      v386(v71, v9);
      *int v70 = v72;
      sub_1BFE94A38(v68);
      uint64_t v73 = sub_1C151ECAC();
      *(void *)(v0 + 1160) = v73;
      swift_bridgeObjectRelease();
      uint64_t v74 = (void *)swift_task_alloc();
      *(void *)(v0 + 1168) = v74;
      *uint64_t v74 = v0;
      v74[1] = sub_1C041A3CC;
      uint64_t v48 = *(void *)(v0 + 1032);
      uint64_t v49 = *(void *)(v0 + 560);
      double v50 = *(double *)(v0 + 488);
      uint64_t v51 = *(void *)(v0 + 472);
      long long v52 = *(uint64_t **)(v0 + 480);
      uint64_t v427 = *(void *)(v0 + 496);
      char v53 = v67 & 1;
      uint64_t v54 = v360;
      uint64_t v55 = v368;
      goto LABEL_39;
    case 6u:
      int v75 = *(uint64_t **)(v0 + 1000);
      uint64_t v76 = *(void *)(v0 + 888);
      type metadata accessor for FeedGroupEmitterEmbeddedOutput();
      sub_1BFC845BC(255, (unint64_t *)&qword_1EB865070);
      uint64_t v77 = (uint64_t)v75 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (!EnumCaseMultiPayload)
      {
        uint64_t v194 = *(void *)(v0 + 928);
        uint64_t v195 = *(void *)(v0 + 896);
        sub_1BFE72C60(255, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
        uint64_t v196 = v10;
        uint64_t v197 = (char *)v75 + *(int *)(swift_getTupleTypeMetadata2() + 48);
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v195 + 32))(v194, v75, v76);
        uint64_t v198 = (uint64_t)v197;
        uint64_t v10 = v196;
        uint64_t v16 = v0 + 184;
        sub_1BFFBE2FC(v198, v382);
        __swift_destroy_boxed_opaque_existential_1(v77);
LABEL_27:
        uint64_t v199 = *(void *)(v0 + 1024);
        uint64_t v200 = *(void *)(v0 + 960);
        uint64_t v201 = *(void *)(v0 + 936);
        unint64_t v202 = *(void *)(*(void *)(v0 + 480) + qword_1EB93CB78);
        unint64_t v428 = v202;
        v393(v200, v199, v201);
        uint64_t v203 = v200 + *(int *)(v404 + 44);
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v391 = v10;
        v10(v203, v9);
        uint64_t v204 = sub_1BFE4028C();
        uint64_t v206 = v205;
        swift_release();
        v344 = (_OWORD *)(v0 + 120);
        sub_1BFFBE2FC(v16, v0 + 120);
        uint64_t v380 = v9;
        if (*(void *)(v0 + 144))
        {
          sub_1BFF993A8(v344, v331);
          char v207 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v422 = v202;
          sub_1BFFB4A24(v331, v204, v206, v207);
          unint64_t v428 = v202;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v208 = MEMORY[0x1E4FBC840] + 8;
          double v209 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
          sub_1BFE5F150((uint64_t)v344, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
          sub_1C035332C(v204, v206, v310);
          swift_bridgeObjectRelease();
          sub_1BFE5F150((uint64_t)v310, (unint64_t *)&qword_1EB87A940, v208, v209);
        }
        uint64_t v210 = *(void *)(v0 + 1024);
        uint64_t v211 = *(void *)(v0 + 968);
        uint64_t v272 = *(void *)(v0 + 928);
        uint64_t v275 = *(void *)(v0 + 936);
        uint64_t v212 = *(void *)(v0 + 912);
        uint64_t v213 = *(void *)(v0 + 896);
        uint64_t v269 = *(void *)(v0 + 888);
        uint64_t v278 = *(void *)(v0 + 832);
        uint64_t v280 = *(void *)(v0 + 816);
        uint64_t v214 = *(void *)(v0 + 808);
        uint64_t v286 = *(void *)(v0 + 800);
        uint64_t v289 = *(void *)(v0 + 872);
        uint64_t v215 = *(void *)(v0 + 792);
        uint64_t v292 = *(void *)(v0 + 776);
        uint64_t v297 = *(void *)(v0 + 848);
        uint64_t v302 = *(void *)(v0 + 728);
        uint64_t v308 = *(void *)(v0 + 784);
        uint64_t v316 = *(void *)(v0 + 720);
        uint64_t v319 = *(void *)(v0 + 840);
        uint64_t v342 = *(void *)(v0 + 656);
        uint64_t v335 = *(void *)(v0 + 608);
        uint64_t v349 = *(void *)(v0 + 600);
        uint64_t v356 = *(void *)(v0 + 592);
        uint64_t v329 = *(void *)(v0 + 528);
        uint64_t v216 = *(void *)(v0 + 512);
        uint64_t v217 = *(void *)(v0 + 480);
        uint64_t v371 = (unsigned char *)sub_1C042076C(v217, (uint64_t *)&v428, 0, v329);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v213 + 16))(v212, v272, v269);
        v393(v211, v210, v275);
        uint64_t v218 = v211 + *(int *)(v404 + 44);
        swift_retain();
        v391(v218, v380);
        sub_1BFDCA2AC();
        swift_release();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v214 + 16))(v280, v217 + *(void *)(*(void *)v217 + 256), v216);
        sub_1C151630C();
        FeedCursorGroup.init(createdDate:group:config:serviceConfig:)(v286, v212, v278, v280, v216, v289);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v214 + 56))(v292, 1, 1, v216);
        LOBYTE(v415) = 7;
        long long v219 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v215 + 56);
        v219(v302, 1, 1, v308);
        v219(v316, 1, 1, v308);
        sub_1C152089C();
        swift_allocObject();
        uint64_t v220 = sub_1C151EC6C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v297 + 16))(v221, v289, v319);
        sub_1BFE94A38(v220);
        long long v392 = (unsigned char *)sub_1C151ECAC();
        swift_bridgeObjectRelease();
        uint64_t v381 = v428;
        uint64_t v414 = *(void *)(v210 + *(int *)(v329 + 44));
        uint64_t v222 = v217 + *(void *)(*(void *)v217 + 224);
        swift_beginAccess();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v335 + 16))(v342, v222, v349);
        uint64_t v223 = *(void *)(v356 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v223 + 48))(v342, 1) == 1)
        {
          uint64_t v224 = *(void *)(v0 + 656);
          uint64_t v225 = *(void *)(v0 + 600);
          int v226 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 608) + 8);
          swift_bridgeObjectRetain();
          v226(v224, v225);
        }
        else
        {
          uint64_t v227 = *(void *)(v0 + 928);
          uint64_t v228 = *(void *)(v0 + 880);
          uint64_t v229 = *(void *)(v0 + 656);
          uint64_t v230 = *(void *)(v0 + 592);
          id v231 = *(void (**)(uint64_t, uint64_t, uint64_t))(v228 + 40);
          swift_bridgeObjectRetain();
          v231(v227, v230, v228);
          (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v229, v230);
        }
        uint64_t v232 = *(void *)(v0 + 1024);
        uint64_t v330 = *(void *)(v0 + 1008);
        uint64_t v336 = *(void *)(v0 + 1016);
        uint64_t v320 = *(void *)(v0 + 992);
        uint64_t v325 = *(void *)(v0 + 984);
        uint64_t v357 = *(void *)(v0 + 896);
        uint64_t v366 = *(void *)(v0 + 928);
        uint64_t v350 = *(void *)(v0 + 888);
        uint64_t v303 = *(void *)(v0 + 848);
        uint64_t v309 = *(void *)(v0 + 840);
        uint64_t v317 = *(void *)(v0 + 872);
        uint64_t v409 = *(void *)(v0 + 776);
        uint64_t v293 = *(void *)(v0 + 744);
        uint64_t v298 = *(void *)(v0 + 736);
        uint64_t v396 = *(void *)(v0 + 720);
        uint64_t v402 = *(void *)(v0 + 728);
        uint64_t v281 = *(void *)(v0 + 608);
        uint64_t v284 = *(void *)(v0 + 600);
        uint64_t v233 = *(void *)(v0 + 584);
        uint64_t v234 = *(void *)(v0 + 528);
        uint64_t v235 = *(void *)(v0 + 480);
        uint64_t v343 = *(void *)(v0 + 472);
        uint64_t v236 = *(void *)(v0 + 664);
        (*(void (**)(void))(v223 + 56))();
        uint64_t v237 = type metadata accessor for FeedContext();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v237 - 8) + 56))(v233, 1, 1, v237);
        uint64_t v238 = (long long *)(v235 + *(void *)(*(void *)v235 + 240));
        uint64_t v239 = *((void *)v238 + 2);
        long long v420 = *v238;
        uint64_t v240 = (uint64_t *)(v232 + *(int *)(v234 + 36));
        uint64_t v241 = *v240;
        unint64_t v242 = v240[1];
        uint64_t v243 = v240[2];
        uint64_t v421 = v239;
        uint64_t v422 = v241;
        unint64_t v423 = v242;
        uint64_t v424 = v243;
        sub_1BFE5BC98(&v420, &v422, &v417);
        uint64_t v422 = v417;
        unint64_t v423 = v418;
        uint64_t v424 = v419;
        *(void *)&long long v420 = 0;
        WORD4(v420) = 256;
        uint64_t v244 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v409, 0, (unsigned __int8 *)&v415, v402, v396, v371, 0, 0, 0, v392, 0, 0, 1, 0, 1, 0, 1,
                 v381,
                 v414,
                 v236,
                 v233,
                 &v422,
                 (uint64_t)&v420,
                 0,
                 0,
                 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C04276B8(v233, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
        (*(void (**)(uint64_t, uint64_t))(v281 + 8))(v236, v284);
        uint64_t v245 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
        sub_1C04276B8(v396, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        sub_1C04276B8(v402, (unint64_t *)&qword_1EB871180, v245);
        (*(void (**)(uint64_t, uint64_t))(v293 + 8))(v409, v298);
        FeedCursor.reachedEnd.getter();
        (*(void (**)(uint64_t, uint64_t))(v303 + 8))(v317, v309);
        (*(void (**)(uint64_t, uint64_t))(v320 + 8))(v330, v325);
        (*(void (**)(uint64_t, uint64_t))(v336 + 8))(v232, v234);
        type metadata accessor for FeedCursor();
        uint64_t v246 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v357 + 32))(v343, v366, v350);
        *(void *)(v343 + v246) = v244;
        type metadata accessor for FeedServiceFetchResult.Internal();
        goto LABEL_34;
      }
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v373 = v9;
        uint64_t v384 = v10;
        (*(void (**)(void, uint64_t *, uint64_t))(*(void *)(v0 + 896) + 32))(*(void *)(v0 + 920), v75, v76);
        __swift_destroy_boxed_opaque_existential_1(v77);
LABEL_12:
        uint64_t v79 = *(void *)(v0 + 1024);
        uint64_t v80 = *(void *)(v0 + 968);
        uint64_t v267 = *(void *)(v0 + 920);
        uint64_t v270 = *(void *)(v0 + 936);
        uint64_t v81 = *(void *)(v0 + 912);
        uint64_t v82 = *(void *)(v0 + 896);
        uint64_t v265 = *(void *)(v0 + 888);
        uint64_t v273 = *(void *)(v0 + 832);
        uint64_t v276 = *(void *)(v0 + 816);
        uint64_t v83 = *(void *)(v0 + 808);
        uint64_t v282 = *(void *)(v0 + 800);
        uint64_t v285 = *(void *)(v0 + 856);
        uint64_t v84 = *(void *)(v0 + 792);
        uint64_t v287 = *(void *)(v0 + 760);
        uint64_t v290 = *(void *)(v0 + 848);
        uint64_t v295 = *(void *)(v0 + 696);
        uint64_t v300 = *(void *)(v0 + 784);
        uint64_t v305 = *(void *)(v0 + 688);
        uint64_t v313 = *(void *)(v0 + 840);
        uint64_t v338 = *(void *)(v0 + 624);
        uint64_t v333 = *(void *)(v0 + 608);
        uint64_t v347 = *(void *)(v0 + 600);
        uint64_t v361 = *(void *)(v0 + 592);
        uint64_t v85 = *(void *)(v0 + 528);
        uint64_t v86 = *(void *)(v0 + 512);
        uint64_t v87 = *(void *)(v0 + 480);
        unint64_t v428 = *(void *)(v87 + qword_1EB93CB78);
        swift_bridgeObjectRetain();
        uint64_t v318 = v79;
        uint64_t v369 = (unsigned char *)sub_1C042076C(v87, (uint64_t *)&v428, 1, v85);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16))(v81, v267, v265);
        v393(v80, v79, v270);
        uint64_t v88 = v80 + *(int *)(v404 + 44);
        swift_retain();
        v384(v88, v373);
        sub_1BFDCA2AC();
        swift_release();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16))(v276, v87 + *(void *)(*(void *)v87 + 256), v86);
        sub_1C151630C();
        FeedCursorGroup.init(createdDate:group:config:serviceConfig:)(v282, v81, v273, v276, v86, v285);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56))(v287, 1, 1, v86);
        LOBYTE(v415) = 7;
        uint64_t v89 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56);
        v89(v295, 1, 1, v300);
        v89(v305, 1, 1, v300);
        sub_1C152089C();
        swift_allocObject();
        uint64_t v90 = sub_1C151EC6C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v290 + 16))(v91, v285, v313);
        sub_1BFE94A38(v90);
        uint64_t v398 = (unsigned char *)sub_1C151ECAC();
        swift_bridgeObjectRelease();
        uint64_t v387 = v428;
        uint64_t v92 = *(void *)(v318 + *(int *)(v85 + 44));
        uint64_t v93 = v87 + *(void *)(*(void *)v87 + 224);
        swift_beginAccess();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v333 + 16))(v338, v93, v347);
        uint64_t v94 = *(void *)(v361 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v94 + 48))(v338, 1) == 1)
        {
          uint64_t v95 = *(void *)(v0 + 624);
          uint64_t v96 = *(void *)(v0 + 600);
          uint64_t v97 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 608) + 8);
          swift_bridgeObjectRetain();
          v97(v95, v96);
        }
        else
        {
          uint64_t v98 = *(void *)(v0 + 920);
          uint64_t v99 = *(void *)(v0 + 880);
          uint64_t v100 = *(void *)(v0 + 624);
          uint64_t v101 = *(void *)(v0 + 592);
          uint64_t v102 = *(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 40);
          swift_bridgeObjectRetain();
          v102(v98, v101, v99);
          (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v100, v101);
        }
        uint64_t v103 = *(void *)(v0 + 1024);
        uint64_t v104 = *(void *)(v0 + 760);
        uint64_t v376 = *(void *)(v0 + 736);
        uint64_t v405 = *(void *)(v0 + 696);
        uint64_t v339 = *(void *)(v0 + 688);
        uint64_t v348 = *(void *)(v0 + 608);
        uint64_t v352 = *(void *)(v0 + 600);
        uint64_t v362 = *(void *)(v0 + 744);
        uint64_t v105 = *(void *)(v0 + 584);
        uint64_t v106 = *(void *)(v0 + 528);
        uint64_t v107 = *(void *)(v0 + 480);
        uint64_t v108 = *(void *)(v0 + 632);
        (*(void (**)(void))(v94 + 56))();
        uint64_t v109 = type metadata accessor for FeedContext();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 56))(v105, 1, 1, v109);
        uint64_t v110 = (long long *)(v107 + *(void *)(*(void *)v107 + 240));
        uint64_t v111 = *((void *)v110 + 2);
        long long v420 = *v110;
        uint64_t v112 = (uint64_t *)(v103 + *(int *)(v106 + 36));
        uint64_t v113 = *v112;
        unint64_t v114 = v112[1];
        uint64_t v115 = v112[2];
        uint64_t v421 = v111;
        uint64_t v422 = v113;
        unint64_t v423 = v114;
        uint64_t v424 = v115;
        sub_1BFE5BC98(&v420, &v422, &v417);
        uint64_t v422 = v417;
        unint64_t v423 = v418;
        uint64_t v424 = v419;
        *(void *)&long long v420 = 0;
        WORD4(v420) = 256;
        uint64_t v411 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v104, 0, (unsigned __int8 *)&v415, v405, v339, v369, 0, 0, 0, v398, 0, 0, 1, 0, 1, 0, 1,
                 v387,
                 v92,
                 v108,
                 v105,
                 &v422,
                 (uint64_t)&v420,
                 0,
                 0,
                 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C04276B8(v105, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
        (*(void (**)(uint64_t, uint64_t))(v348 + 8))(v108, v352);
        BOOL v116 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
        sub_1C04276B8(v339, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        sub_1C04276B8(v405, (unint64_t *)&qword_1EB871180, v116);
        (*(void (**)(uint64_t, uint64_t))(v362 + 8))(v104, v376);
        char v117 = FeedCursor.reachedEnd.getter();
        uint64_t v118 = *(void *)(v0 + 1016);
        uint64_t v394 = *(void *)(v0 + 1008);
        uint64_t v399 = *(void *)(v0 + 1024);
        uint64_t v119 = *(void *)(v0 + 992);
        uint64_t v406 = *(void *)(v0 + 920);
        uint64_t v120 = *(void *)(v0 + 896);
        uint64_t v121 = *(void *)(v0 + 888);
        uint64_t v122 = *(void *)(v0 + 848);
        uint64_t v363 = *(void *)(v0 + 840);
        uint64_t v370 = *(void *)(v0 + 856);
        uint64_t v377 = *(void *)(v0 + 528);
        uint64_t v388 = *(void *)(v0 + 984);
        if (v117)
        {
          uint64_t v123 = *(void *)(v0 + 472);
          sub_1C151F38C();
          sub_1C15197BC();
          (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v370, v363);
          (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v394, v388);
          (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v399, v377);
          type metadata accessor for FeedCursor();
          uint64_t v124 = swift_getTupleTypeMetadata2();
          uint64_t v125 = v121;
          uint64_t v126 = *(int *)(v124 + 48);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 32))(v123, v406, v125);
          *(void *)(v123 + v126) = v411;
        }
        else
        {
          uint64_t v127 = *(void *)(v0 + 480);
          uint64_t v353 = *(void *)(v0 + 472);
          sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
          uint64_t v334 = v121;
          uint64_t v128 = swift_allocObject();
          *(_OWORD *)(v128 + 16) = xmmword_1C1529AE0;
          *(void *)(v0 + 384) = v127;
          type metadata accessor for FeedCursor();
          swift_getWitnessTable();
          uint64_t v129 = sub_1C15186EC();
          uint64_t v131 = v130;
          *(void *)(v128 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v128 + 64) = sub_1BFE9C558();
          *(void *)(v128 + 32) = v129;
          *(void *)(v128 + 40) = v131;
          sub_1C151F38C();
          sub_1C15197BC();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v370, v363);
          (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v394, v388);
          (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v399, v377);
          uint64_t v132 = *(int *)(swift_getTupleTypeMetadata2() + 48);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 32))(v353, v406, v334);
          *(void *)(v353 + v132) = v411;
        }
LABEL_24:
        type metadata accessor for FeedServiceFetchResult.Internal();
LABEL_34:
        swift_storeEnumTagMultiPayload();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v247 = *(uint64_t (**)(void))(v0 + 8);
        return v247();
      }
      uint64_t v249 = *v75;
      uint64_t v32 = v75[1];
      uint64_t v374 = v249;
      __swift_destroy_boxed_opaque_existential_1(v77);
LABEL_38:
      uint64_t v250 = *(void *)(v0 + 1040);
      uint64_t v397 = *(void *)(v0 + 1024);
      uint64_t v251 = *(void *)(v0 + 1016);
      uint64_t v252 = *(void *)(v0 + 576);
      uint64_t v253 = *(void *)(v0 + 528);
      uint64_t v403 = *(void *)(v0 + 480);
      sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v254 = swift_allocObject();
      *(_OWORD *)(v254 + 16) = xmmword_1C1527210;
      uint64_t v255 = MEMORY[0x1E4FBB1A0];
      *(void *)(v254 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v256 = sub_1BFE9C558();
      *(void *)(v254 + 64) = v256;
      *(void *)(v254 + 32) = v374;
      *(void *)(v254 + 40) = v32;
      uint64_t v422 = 0;
      unint64_t v423 = 0xE000000000000000;
      *(void *)(v0 + 416) = v250;
      swift_getWitnessTable();
      sub_1C1520A3C();
      uint64_t v257 = v422;
      unint64_t v258 = v423;
      *(void *)(v254 + 96) = v255;
      *(void *)(v254 + 104) = v256;
      *(void *)(v254 + 72) = v257;
      *(void *)(v254 + 80) = v258;
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v251 + 16))(v252, v397, v253);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v251 + 56))(v252, 0, 1, v253);
      uint64_t v259 = *(void *)(v403 + qword_1EB93CB78);
      uint64_t v73 = sub_1C041F22C();
      *(void *)(v0 + 1088) = v73;
      unint64_t v260 = (void *)swift_task_alloc();
      *(void *)(v0 + 1096) = v260;
      *unint64_t v260 = v0;
      v260[1] = sub_1C0419DB0;
      uint64_t v54 = *(void *)(v0 + 1040);
      uint64_t v48 = *(void *)(v0 + 1032);
      uint64_t v49 = *(void *)(v0 + 576);
      double v50 = *(double *)(v0 + 488);
      uint64_t v51 = *(void *)(v0 + 472);
      long long v52 = *(uint64_t **)(v0 + 480);
      uint64_t v427 = *(void *)(v0 + 496);
      char v53 = 0;
      uint64_t v55 = v259;
LABEL_39:
      uint64_t v56 = v73;
LABEL_40:
      return sub_1C041F2C0(v51, v49, v53, v54, v55, v56, v52, v48, v50);
    default:
      uint64_t v11 = *(void *)(v0 + 1000);
      uint64_t v12 = *(void *)(v0 + 928);
      uint64_t v13 = *(void *)(v0 + 896);
      uint64_t v14 = *(void *)(v0 + 888);
      sub_1BFE72C60(255, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
      uint64_t v15 = v11 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v12, v11, v14);
      uint64_t v16 = v0 + 184;
      sub_1BFFBE2FC(v15, v382);
      goto LABEL_27;
  }
}

uint64_t sub_1BFE5AD8C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  unint64_t v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v4 > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  if (v5 <= 0x10) {
    unint64_t v6 = 16;
  }
  else {
    unint64_t v6 = v5;
  }
  unint64_t v7 = (v6 & 0xFFFFFFFFFFFFFFF8) + 48;
  if (v7 <= v6) {
    unint64_t v7 = v6;
  }
  unsigned int v8 = a1[v7];
  unsigned int v9 = v8 - 7;
  if (v8 >= 7)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a1;
        goto LABEL_17;
      case 2:
        int v11 = *(unsigned __int16 *)a1;
        goto LABEL_17;
      case 3:
        int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_17;
      case 4:
        int v11 = *(_DWORD *)a1;
LABEL_17:
        int v12 = (v11 | (v9 << (8 * v7))) + 7;
        unsigned int v8 = v11 + 7;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  switch(v8)
  {
    case 2u:
      uint64_t v14 = *(uint64_t (**)(void))(v3 + 8);
      uint64_t result = v14();
      break;
    case 3u:
    case 4u:
    case 5u:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 6u:
      unsigned int v15 = a1[v6];
      unsigned int v16 = v15 - 3;
      if (v15 >= 3)
      {
        if (v6 <= 3) {
          uint64_t v17 = v6;
        }
        else {
          uint64_t v17 = 4;
        }
        switch(v17)
        {
          case 1:
            int v18 = *a1;
            goto LABEL_37;
          case 2:
            int v18 = *(unsigned __int16 *)a1;
            goto LABEL_37;
          case 3:
            int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_37;
          case 4:
            int v18 = *(_DWORD *)a1;
LABEL_37:
            int v19 = (v18 | (v16 << (8 * v6))) + 3;
            unsigned int v15 = v18 + 3;
            if (v6 < 4) {
              unsigned int v15 = v19;
            }
            break;
          default:
            break;
        }
      }
      if (v15 == 2)
      {
        swift_bridgeObjectRelease();
      }
      else if (v15 == 1)
      {
        (*(void (**)(unsigned __int8 *))(v3 + 8))(a1);
      }
      else
      {
        (*(void (**)(unsigned __int8 *))(v3 + 8))(a1);
        unint64_t v20 = (unint64_t)&a1[v4 + 7] & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v20 + 24) >= 0xFFFFFFFFuLL) {
          __swift_destroy_boxed_opaque_existential_1(v20);
        }
      }
      uint64_t result = (unint64_t)&a1[v6 + 8] & 0xFFFFFFFFFFFFFFF8;
      goto LABEL_46;
    default:
      (*(void (**)(unsigned __int8 *))(v3 + 8))(a1);
      uint64_t result = (unint64_t)&a1[v4 + 7] & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(result + 24) >= 0xFFFFFFFFuLL) {
LABEL_46:
      }
        uint64_t result = __swift_destroy_boxed_opaque_existential_1(result);
      break;
  }
  return result;
}

uint64_t sub_1BFE5B040(uint64_t a1)
{
  uint64_t v1 = a1 + 15;
  unint64_t v2 = (((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80) & 0xF8 | 7;
  uint64_t v6 = (v2 + v5 + 8) & ~v5;
  unint64_t v7 = *(void *)(v4 + 64);
  unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v7 > v8) {
    unint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v8 <= 0x10) {
    unint64_t v9 = 16;
  }
  else {
    unint64_t v9 = v8;
  }
  if ((v9 & 0xFFFFFFFFFFFFFFF8) + 48 <= v9) {
    unint64_t v10 = v9;
  }
  else {
    unint64_t v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unsigned int v11 = *(unsigned __int8 *)(v6 + v10);
  unsigned int v12 = v11 - 7;
  if (v11 >= 7)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *(unsigned __int8 *)v6;
        goto LABEL_18;
      case 2:
        int v14 = *(unsigned __int16 *)v6;
        goto LABEL_18;
      case 3:
        int v14 = *(unsigned __int16 *)v6 | (*(unsigned __int8 *)(v6 + 2) << 16);
        goto LABEL_18;
      case 4:
        int v14 = *(_DWORD *)v6;
LABEL_18:
        int v15 = (v14 | (v12 << (8 * v10))) + 7;
        unsigned int v11 = v14 + 7;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  switch(v11)
  {
    case 2u:
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
      break;
    case 3u:
    case 4u:
    case 5u:
      swift_bridgeObjectRelease();
      break;
    case 6u:
      unsigned int v17 = *(unsigned __int8 *)(v6 + v9);
      unsigned int v18 = v17 - 3;
      if (v17 >= 3)
      {
        if (v9 <= 3) {
          uint64_t v19 = v9;
        }
        else {
          uint64_t v19 = 4;
        }
        switch(v19)
        {
          case 1:
            int v20 = *(unsigned __int8 *)v6;
            goto LABEL_34;
          case 2:
            int v20 = *(unsigned __int16 *)v6;
            goto LABEL_34;
          case 3:
            int v20 = *(unsigned __int16 *)v6 | (*(unsigned __int8 *)(v6 + 2) << 16);
            goto LABEL_34;
          case 4:
            int v20 = *(_DWORD *)v6;
LABEL_34:
            int v21 = (v20 | (v18 << (8 * v9))) + 3;
            unsigned int v17 = v20 + 3;
            if (v9 < 4) {
              unsigned int v17 = v21;
            }
            break;
          default:
            break;
        }
      }
      if (v17 == 2)
      {
        swift_bridgeObjectRelease();
      }
      else if (v17 == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
        unint64_t v22 = ((v6 | 7) + v7) & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v22 + 24) >= 0xFFFFFFFFuLL) {
          __swift_destroy_boxed_opaque_existential_1(v22);
        }
      }
      unint64_t v16 = (v6 + v9 + 8) & 0xFFFFFFFFFFFFFFF8;
      goto LABEL_43;
    default:
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
      unint64_t v16 = ((v6 | 7) + v7) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v16 + 24) >= 0xFFFFFFFFuLL) {
LABEL_43:
      }
        __swift_destroy_boxed_opaque_existential_1(v16);
      break;
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(((v1
                   + ((v5 + 24) & ~v5)
                   + (((((((v10 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)) & 0xFFFFFFFFFFFFFFF8)
                 + 8) >= 2uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFE5B3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(v5 + 56) + a1;
  uint64_t v7 = *(void *)(a2 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = v9 + 8;
  unint64_t v11 = (v6 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
  unint64_t v12 = (*(void *)(v10 + 56) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v7 - 8);
  int v14 = *(uint64_t (**)(unint64_t, uint64_t))(v13 + 8);
  unint64_t v15 = (v12 + *(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  return v14(v15, v7);
}

uint64_t sub_1BFE5B56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = *(void *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = v11 + 16;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v8 + v13 + a1) & ~v13;
  uint64_t v15 = (v8 + v13 + a2) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14, v15, AssociatedTypeWitness);
  uint64_t v16 = *(void *)(v12 + 48) + 7;
  unsigned int v17 = (void *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v18 = (void *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v17 = *v18;
  v17[1] = v18[1];
  uint64_t v19 = *(void *)(v9 - 8);
  int v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = ((unint64_t)v17 + v21 + 16) & ~v21;
  uint64_t v23 = ((unint64_t)v18 + v21 + 16) & ~v21;
  swift_bridgeObjectRetain();
  v20(v22, v23, v9);
  return a1;
}

void *sub_1BFE5B71C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v4 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v3 = *v4;
  uint64_t v5 = (void *)(((unint64_t)v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  uint64_t v10 = v9 + 15;
  unint64_t v11 = (unint64_t)v5 + v9 + 15;
  unint64_t v12 = ~v9 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = v11 & v12;
  uint64_t v14 = (unsigned __int8 *)(((unint64_t)v6 + v10) & v12);
  unint64_t v15 = *(void *)(v8 + 64);
  unint64_t v16 = v15 + 7;
  if (v15 <= ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v15 = ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v15 <= 0x10) {
    unint64_t v17 = 16;
  }
  else {
    unint64_t v17 = v15;
  }
  if ((v17 & 0xFFFFFFFFFFFFFFF8) + 48 <= v17) {
    unint64_t v18 = v17;
  }
  else {
    unint64_t v18 = (v17 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unsigned int v19 = v14[v18];
  unsigned int v20 = v19 - 7;
  if (v19 >= 7)
  {
    if (v18 <= 3) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *v14;
        goto LABEL_18;
      case 2:
        int v22 = *(unsigned __int16 *)v14;
        goto LABEL_18;
      case 3:
        int v22 = *(unsigned __int16 *)(((unint64_t)v6 + v10) & v12) | (*(unsigned __int8 *)((((unint64_t)v6
                                                                                                + v10) & v12)
                                                                                              + 2) << 16);
        goto LABEL_18;
      case 4:
        int v22 = *(_DWORD *)v14;
LABEL_18:
        int v23 = (v22 | (v20 << (8 * v18))) + 7;
        unsigned int v19 = v22 + 7;
        if (v18 < 4) {
          unsigned int v19 = v23;
        }
        break;
      default:
        break;
    }
  }
  unint64_t v24 = v17 + 1;
  switch(v19)
  {
    case 1u:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v8 + 16))(v13, v14, AssociatedTypeWitness);
      unint64_t v28 = (v16 + v13) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v29 = (unint64_t)&v14[v16] & 0xFFFFFFFFFFFFFFF8;
      unint64_t v30 = *(void *)(v29 + 24);
      if (v30 < 0xFFFFFFFF)
      {
        long long v38 = *(_OWORD *)(v29 + 16);
        *(_OWORD *)unint64_t v28 = *(_OWORD *)v29;
        *(_OWORD *)(v28 + 16) = v38;
      }
      else
      {
        *(void *)(v28 + 24) = v30;
        (**(void (***)(void))(v30 - 8))();
      }
      char v31 = 1;
      goto LABEL_54;
    case 2u:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v8 + 16))(v13, v14, AssociatedTypeWitness);
      char v31 = 2;
      goto LABEL_54;
    case 3u:
      *(void *)unint64_t v13 = *(void *)v14;
      *(void *)((v11 & v12) + 8) = *((void *)v14 + 1);
      char v32 = 3;
      goto LABEL_31;
    case 4u:
      *(void *)unint64_t v13 = *(void *)v14;
      *(void *)((v11 & v12) + 8) = *((void *)v14 + 1);
      char v32 = 4;
      goto LABEL_31;
    case 5u:
      *(void *)unint64_t v13 = *(void *)v14;
      *(void *)((v11 & v12) + 8) = *((void *)v14 + 1);
      char v32 = 5;
LABEL_31:
      *(unsigned char *)(v13 + v18) = v32;
      swift_bridgeObjectRetain();
      break;
    case 6u:
      unsigned int v33 = v14[v17];
      unsigned int v34 = v33 - 3;
      if (v33 >= 3)
      {
        if (v17 <= 3) {
          uint64_t v35 = v17;
        }
        else {
          uint64_t v35 = 4;
        }
        switch(v35)
        {
          case 1:
            int v36 = *v14;
            goto LABEL_43;
          case 2:
            int v36 = *(unsigned __int16 *)v14;
            goto LABEL_43;
          case 3:
            int v36 = *(unsigned __int16 *)v14 | (v14[2] << 16);
            goto LABEL_43;
          case 4:
            int v36 = *(_DWORD *)v14;
LABEL_43:
            int v39 = (v36 | (v34 << (8 * v17))) + 3;
            unsigned int v33 = v36 + 3;
            if (v17 < 4) {
              unsigned int v33 = v39;
            }
            break;
          default:
            break;
        }
      }
      if (v33 == 2)
      {
        *(void *)unint64_t v13 = *(void *)v14;
        *(void *)((v11 & v12) + 8) = *((void *)v14 + 1);
        *(unsigned char *)(v13 + v17) = 2;
        swift_bridgeObjectRetain();
      }
      else if (v33 == 1)
      {
        (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v8 + 16))(v13, v14, AssociatedTypeWitness);
        *(unsigned char *)(v13 + v17) = 1;
      }
      else
      {
        (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v8 + 16))(v13, v14, AssociatedTypeWitness);
        unint64_t v40 = (v16 + v13) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v41 = (unint64_t)&v14[v16] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v42 = *(void *)(v41 + 24);
        if (v42 < 0xFFFFFFFF)
        {
          long long v43 = *(_OWORD *)(v41 + 16);
          *(_OWORD *)unint64_t v40 = *(_OWORD *)v41;
          *(_OWORD *)(v40 + 16) = v43;
        }
        else
        {
          *(void *)(v40 + 24) = v42;
          (**(void (***)(void))(v42 - 8))();
        }
        *(unsigned char *)(v13 + v17) = 0;
      }
      unint64_t v44 = ((v13 | 7) + v24) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v45 = (((unint64_t)v14 | 7) + v24) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v46 = *(void *)(v45 + 24);
      *(void *)(v44 + 24) = v46;
      *(void *)(v44 + 32) = *(void *)(v45 + 32);
      (**(void (***)(void))(v46 - 8))();
      char v31 = 6;
LABEL_54:
      *(unsigned char *)(v13 + v18) = v31;
      break;
    default:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v8 + 16))(v13, v14, AssociatedTypeWitness);
      unint64_t v25 = (v16 + v13) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v26 = (unint64_t)&v14[v16] & 0xFFFFFFFFFFFFFFF8;
      unint64_t v27 = *(void *)(v26 + 24);
      if (v27 < 0xFFFFFFFF)
      {
        long long v37 = *(_OWORD *)(v26 + 16);
        *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
        *(_OWORD *)(v25 + 16) = v37;
      }
      else
      {
        *(void *)(v25 + 24) = v27;
        (**(void (***)(void))(v27 - 8))();
      }
      *(unsigned char *)(v13 + v18) = 0;
      break;
  }
  uint64_t v47 = (void *)(((v13 | 7) + v18 + 1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v48 = (void *)((((unint64_t)v14 | 7) + v18 + 1) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v47 = *v48;
  uint64_t v49 = (void *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  double v50 = (void *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v49 = *v50;
  uint64_t v51 = (_OWORD *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v52 = (long long *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v53 = *v52;
  long long v54 = v52[1];
  *(_OWORD *)((char *)v51 + 26) = *(long long *)((char *)v52 + 26);
  *uint64_t v51 = v53;
  v51[1] = v54;
  *(void *)(((unint64_t)v51 + 49) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v52 + 49) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFE5BC98@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  *a3 = *a1;
  a3[1] = v4;
  a3[2] = v5;
  v10[0] = v6;
  v10[1] = v7;
  void v10[2] = v8;
  type metadata accessor for FeedJournal();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return FeedJournal.add(entry:)(v10);
}

uint64_t type metadata accessor for FeedJournal()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FeedLayoutSolver.Cursor.layout(regions:decorationProvider:allOrNothing:startingOffset:groupLayoutMarginAdjuster:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  v9[2] = a1;
  v9[3] = a7;
  char v10 = a3;
  uint64_t v11 = a2;
  return FeedLayoutSolver.Cursor.withTracking<A>(startingOffset:block:)(a4, a5, a6 & 1, (void (*)(long long *))sub_1BFE5D490, (uint64_t)v9, a8);
}

uint64_t FeedLayoutSolver.cursor(session:log:feedKind:feedContext:columnSystem:layoutOptions:solverOptions:)(uint64_t a1, unint64_t a2, void *a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v61 = a8;
  uint64_t v66 = a5;
  uint64_t v73 = a1;
  uint64_t v71 = *(void *)v8;
  uint64_t v14 = v71;
  sub_1C1446638(0, &qword_1EB886BB0, (void (*)(uint64_t))type metadata accessor for FeedContext);
  MEMORY[0x1F4188790](v15 - 8);
  char v67 = &v55[-v16];
  uint64_t v63 = type metadata accessor for FeedContext();
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  unint64_t v18 = &v55[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for FeedLayoutSolverOptions(0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v69 = &v55[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = sub_1C151772C();
  uint64_t v57 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v68 = &v55[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v74 = *(void *)(v14 + 80);
  uint64_t v23 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v77 = &v55[-v25];
  uint64_t v65 = sub_1C151757C();
  uint64_t v76 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  int v75 = &v55[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v27);
  unint64_t v29 = &v55[-v28];
  int v56 = *a4;
  uint64_t v64 = a7;
  sub_1C151758C();
  uint64_t v30 = 0x746C7561666564;
  if (a2) {
    uint64_t v30 = v73;
  }
  uint64_t v73 = v30;
  unint64_t v31 = 0xE700000000000000;
  if (a2) {
    unint64_t v31 = a2;
  }
  unint64_t v72 = v31;
  int v70 = v18;
  uint64_t v59 = v29;
  uint64_t v58 = v21;
  if (a3)
  {
    swift_bridgeObjectRetain();
    id v32 = a3;
  }
  else
  {
    uint64_t v33 = qword_1EB87B060;
    swift_bridgeObjectRetain();
    if (v33 != -1) {
      swift_once();
    }
    id v32 = (id)qword_1EB93C700;
  }
  unsigned int v34 = &v9[*(void *)(*(void *)v9 + 104)];
  uint64_t v35 = *((void *)v34 + 3);
  uint64_t v36 = *((void *)v34 + 4);
  __swift_project_boxed_opaque_existential_1(v34, v35);
  long long v37 = *(void (**)(uint64_t, unint64_t, id, uint64_t, uint64_t))(v36 + 8);
  id v38 = a3;
  uint64_t v60 = (uint64_t)v32;
  v37(v73, v72, v32, v35, v36);
  (*(void (**)(unsigned char *, char *, uint64_t))(v23 + 16))(v77, &v9[*(void *)(*(void *)v9 + 96)], v74);
  sub_1BFC66384((uint64_t)v34, (uint64_t)&v81);
  int v39 = v59;
  uint64_t v40 = v65;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v76 + 16))(v75, v59, v65);
  uint64_t v41 = (uint64_t)v68;
  uint64_t v42 = v64;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v57 + 16))(v68, v64, v58);
  long long v43 = v69;
  sub_1C1446FF4(v61, (uint64_t)v69, type metadata accessor for FeedLayoutSolverOptions);
  unint64_t v44 = &v9[*(void *)(*(void *)v9 + 112)];
  uint64_t v45 = *((void *)v44 + 3);
  uint64_t v46 = *((void *)v44 + 4);
  __swift_project_boxed_opaque_existential_1(v44, v45);
  uint64_t v47 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v46 + 8))(v39, v42, v45, v46);
  sub_1BFC66384((uint64_t)&v9[*(void *)(*(void *)v9 + 120)], (uint64_t)v80);
  char v79 = v56;
  uint64_t v48 = v67;
  sub_1C14461BC(v66, (uint64_t)v67);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v62 + 48))(v48, 1, v63) == 1)
  {
    uint64_t v49 = *(void *)&v9[*(void *)(*(void *)v9 + 136) + 8];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v51 = (uint64_t)v70;
    FeedContextFactoryType.createFeedContext()(ObjectType, v49);
    sub_1C1446DB8((uint64_t)v48, &qword_1EB886BB0, (void (*)(uint64_t))type metadata accessor for FeedContext);
  }
  else
  {
    uint64_t v51 = (uint64_t)v70;
    sub_1C019CBB8((uint64_t)v48, (uint64_t)v70);
  }
  type metadata accessor for FeedLayoutSolver.Cursor();
  sub_1BFC66384((uint64_t)&v9[*(void *)(*(void *)v9 + 128)], (uint64_t)v78);
  unint64_t v52 = sub_1BFE5CE10(MEMORY[0x1E4FBC860]);
  uint64_t v53 = swift_allocObject();
  sub_1BFEA2398((uint64_t)v77, &v81, (uint64_t)v75, v41, (uint64_t)v43, v47, v80, v60, v52, &v79, v51, v78, v73, v72);
  (*(void (**)(unsigned char *, uint64_t))(v76 + 8))(v39, v40);
  return v53;
}

uint64_t FeedLayoutSolver.Cursor.withTracking<A>(startingOffset:block:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void (*a4)(long long *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v58 = a5;
  uint64_t v59 = a4;
  int v50 = a3;
  uint64_t v51 = a2;
  uint64_t v52 = a1;
  uint64_t v57 = a6;
  uint64_t v56 = *(void *)v6;
  uint64_t v8 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v55 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = (void (*)(uint64_t))type metadata accessor for FeedLayoutSolverOptions.PluginOptions;
  sub_1C1446638(0, (unint64_t *)&qword_1EB890DB0, (void (*)(uint64_t))type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v48 - v11;
  uint64_t v13 = type metadata accessor for FeedLayoutSolverOptions(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v48 = (uint64_t)&v48 - v17;
  uint64_t v18 = sub_1C151772C();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v21;
  uint64_t v22 = sub_1C151757C();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v27 = MEMORY[0x1F4188790](v26);
  uint64_t v54 = (uint64_t)&v48 - v28;
  (*(void (**)(__n128))(v29 + 16))(v27);
  sub_1BFC66384((uint64_t)&v7[*(void *)(*(void *)v7 + 104)], (uint64_t)v68);
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v25, &v7[*(void *)(*(void *)v7 + 112)], v22);
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v21, &v7[*(void *)(*(void *)v7 + 120)], v18);
  sub_1C1446FF4((uint64_t)&v7[*(void *)(*(void *)v7 + 128)], (uint64_t)v15, type metadata accessor for FeedLayoutSolverOptions);
  uint64_t v30 = v51;
  if (v50) {
    uint64_t v30 = 0;
  }
  uint64_t v31 = v52;
  if (v50) {
    uint64_t v31 = 0;
  }
  *(void *)&long long v62 = v31;
  *((void *)&v62 + 1) = v30;
  __int16 v63 = 0;
  char v67 = 0;
  unsigned __int16 v66 = 2;
  unsigned __int16 v65 = 2;
  unsigned __int16 v64 = 2;
  v61[0] = 2;
  uint64_t v32 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v12, 1, 1, v32);
  *(void *)&v60[0] = 0;
  BYTE8(v60[0]) = 1;
  uint64_t v33 = v48;
  FeedLayoutSolverOptions.with(cursorTracking:headlineOptions:categoryOptions:coverOptions:issueStripOptions:pluginOptions:traits:)((uint64_t *)&v62, &v66, &v65, &v64, v61, (uint64_t)v12, (uint64_t)v60, v48);
  sub_1C1446DB8((uint64_t)v12, (unint64_t *)&qword_1EB890DB0, v53);
  sub_1C1447094((uint64_t)v15, type metadata accessor for FeedLayoutSolverOptions);
  uint64_t v34 = *(void *)&v7[*(void *)(*(void *)v7 + 136)];
  sub_1BFC66384((uint64_t)&v7[*(void *)(*(void *)v7 + 144)], (uint64_t)&v62);
  uint64_t v35 = *(void **)&v7[*(void *)(*(void *)v7 + 168)];
  uint64_t v36 = (uint64_t *)&v7[*(void *)(*(void *)v7 + 160)];
  swift_beginAccess();
  uint64_t v37 = *v36;
  uint64_t v38 = *(void *)v7;
  LOBYTE(v66) = v7[*(void *)(*(void *)v7 + 176)];
  uint64_t v39 = v55;
  sub_1C1446FF4((uint64_t)&v7[*(void *)(v38 + 184)], v55, (uint64_t (*)(void))type metadata accessor for FeedContext);
  sub_1BFC66384((uint64_t)&v7[*(void *)(*(void *)v7 + 192)], (uint64_t)v60);
  uint64_t v40 = (uint64_t *)&v7[*(void *)(*(void *)v7 + 200)];
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  uint64_t v43 = swift_allocObject();
  swift_retain();
  id v44 = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEA2398(v54, v68, (uint64_t)v25, (uint64_t)v49, v33, v34, &v62, (uint64_t)v44, v37, (char *)&v66, v39, v60, v42, v41);
  *(void *)&long long v62 = v43;
  v59(&v62);
  uint64_t v45 = (uint64_t *)(v62 + *(void *)(*(void *)v62 + 160));
  swift_beginAccess();
  uint64_t v46 = *v45;
  swift_bridgeObjectRetain();
  swift_release();
  *uint64_t v36 = v46;
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupLayoutInventory(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2 + 16;
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  swift_retain();
  v7(a1 + 16, v4, v6);
  return a1;
}

unint64_t sub_1BFE5CCEC(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C01926D0(0, a2, a3, MEMORY[0x1E4FBBD58]);
  uint64_t v4 = (void *)sub_1C152050C();
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain();
  uint64_t v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v7 = *(v6 - 2);
    uint64_t v8 = *(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFEF2D8C(v7, v8);
    if (v11) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v12 = (uint64_t *)(v4[6] + 16 * result);
    *unint64_t v12 = v7;
    v12[1] = v8;
    *(void *)(v4[7] + 8 * result) = v9;
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v6 += 3;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BFE5CE10(uint64_t a1)
{
  return sub_1BFE5CCEC(a1, (unint64_t *)&qword_1EB87A498, MEMORY[0x1E4FBB808]);
}

uint64_t sub_1BFE5CE24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = sub_1BFE5CE80(a1, a2);
  uint64_t v5 = *(void *)(v3 + 96);
  type metadata accessor for FeedLayoutContext();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  swift_retain();
  return v6;
}

uint64_t sub_1BFE5CE80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v21[1] = a2;
  uint64_t v4 = sub_1C151794C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151750C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  BOOL v14 = (char *)v21 - v13;
  sub_1C151753C();
  sub_1C15174FC();
  sub_1BFE5D438();
  char v15 = sub_1C151FF5C();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, v8);
  v16(v14, v8);
  uint64_t v17 = v3[10];
  uint64_t v18 = v3[11];
  __swift_project_boxed_opaque_existential_1(v3 + 7, v17);
  LOBYTE(v22[0]) = (v15 & 1) != 0;
  sub_1C15176BC();
  (*(void (**)(long long *__return_ptr, long long *, char *, uint64_t, uint64_t))(v18 + 8))(v23, v22, v7, v17, v18);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1BFC66384((uint64_t)(v3 + 2), (uint64_t)v22);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t v19 = swift_allocObject();
  sub_1BFC773DC(v23, v19 + 16);
  sub_1BFC773DC(v22, v19 + 56);
  *(void *)(v19 + 96) = 0x3FF0000000000000;
  return v19;
}

uint64_t type metadata accessor for FeedLayoutStylerFactory()
{
  return self;
}

void sub_1BFE5D124(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1C151794C();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*a1)
  {
    char v11 = &type metadata for DefaultFontBook;
    uint64_t v12 = &protocol witness table for DefaultFontBook;
    goto LABEL_5;
  }
  if (*a1 == 1)
  {
    char v11 = &type metadata for CondensedFontBook;
    uint64_t v12 = &protocol witness table for CondensedFontBook;
LABEL_5:
    a3[3] = (uint64_t)v11;
    a3[4] = (uint64_t)v12;
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, a2, v6, v8);
  uint64_t v13 = type metadata accessor for ScalingFontBook();
  uint64_t v14 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v14 + OBJC_IVAR____TtC8NewsFeed15ScalingFontBook_contentResizeScale, v10, v6);
  a3[3] = v13;
  a3[4] = (uint64_t)&protocol witness table for ScalingFontBook;
  *a3 = v14;
}

uint64_t type metadata accessor for FeedLayoutContext()
{
  return self;
}

uint64_t type metadata accessor for FeedLayoutSolver.Cursor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFE5D2C0(uint64_t a1, uint64_t a2)
{
  return FeedLayoutCache.set(session:log:)(a1, a2);
}

uint64_t FeedLayoutCache.set(session:log:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 72);
  if (v5)
  {
    uint64_t v6 = *(void *)(v2 + 64);
    BOOL v7 = v6 == a1 && v5 == a2;
    if (!v7 && (sub_1C1520A9C() & 1) == 0)
    {
      sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1C1527210;
      uint64_t v9 = MEMORY[0x1E4FBB1A0];
      *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v10 = sub_1BFE9C558();
      *(void *)(v8 + 32) = v6;
      *(void *)(v8 + 40) = v5;
      *(void *)(v8 + 96) = v9;
      *(void *)(v8 + 104) = v10;
      *(void *)(v8 + 64) = v10;
      *(void *)(v8 + 72) = a1;
      *(void *)(v8 + 80) = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      sub_1C1518D7C();
    }
  }
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BFE5D438()
{
  unint64_t result = qword_1EB8712B8;
  if (!qword_1EB8712B8)
  {
    sub_1C151750C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8712B8);
  }
  return result;
}

uint64_t sub_1BFE5D490@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  return sub_1BFE5D4A0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 40), *(void *)(v2 + 48), a2);
}

uint64_t sub_1BFE5D4A0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, double *a6@<X8>)
{
  uint64_t v12 = sub_1C151757C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unsigned __int16 v64 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1C151772C();
  uint64_t v63 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  long long v62 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v59 = a2;
  uint64_t v16 = sub_1BFE5DD08(a2, a1, a3);
  uint64_t v17 = v16;
  uint64_t v18 = v16[2];
  uint64_t v57 = a6;
  uint64_t v60 = v13;
  uint64_t v61 = v12;
  uint64_t v58 = a4;
  if (v18)
  {
    uint64_t v19 = (double *)(v16 + 10);
    double width = 0.0;
    uint64_t v21 = v18;
    double height = 0.0;
    double x = 0.0;
    double y = 0.0;
    do
    {
      CGFloat v26 = *(v19 - 6);
      CGFloat v25 = *(v19 - 5);
      CGFloat v28 = *(v19 - 4);
      CGFloat v27 = *(v19 - 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v74.origin.double x = 0.0;
      v74.origin.double y = 0.0;
      v74.size.double width = 0.0;
      v74.size.double height = 0.0;
      v72.origin.double x = x;
      v72.origin.double y = y;
      v72.size.double width = width;
      v72.size.double height = height;
      if (CGRectEqualToRect(v72, v74))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        double x = v26;
        double y = v25;
        double width = v28;
        double height = v27;
      }
      else
      {
        v70.origin.double x = x;
        v70.origin.double y = y;
        v70.size.double width = width;
        v70.size.double height = height;
        v73.origin.double x = v26;
        v73.origin.double y = v25;
        v73.size.double width = v28;
        v73.size.double height = v27;
        CGRect v71 = CGRectUnion(v70, v73);
        double x = v71.origin.x;
        double y = v71.origin.y;
        double width = v71.size.width;
        double height = v71.size.height;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v19 += 8;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRetain();
    uint64_t v29 = MEMORY[0x1E4FBC860];
    uint64_t v30 = 64;
    uint64_t v31 = v18;
    do
    {
      v67[0] = v29;
      swift_bridgeObjectRetain();
      uint64_t v32 = swift_bridgeObjectRetain();
      sub_1BFE5DBDC(v32);
      swift_bridgeObjectRelease();
      uint64_t v29 = v67[0];
      v30 += 64;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v33 = MEMORY[0x1E4FBC860];
    uint64_t v34 = 72;
    uint64_t v35 = v18;
    uint64_t v13 = v60;
    do
    {
      v67[0] = v33;
      swift_bridgeObjectRetain();
      uint64_t v36 = swift_bridgeObjectRetain();
      sub_1BFE5DBB0(v36);
      swift_bridgeObjectRelease();
      uint64_t v33 = v67[0];
      v34 += 64;
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease();
    uint64_t v12 = v61;
  }
  else
  {
    double x = 0.0;
    uint64_t v33 = MEMORY[0x1E4FBC860];
    uint64_t v29 = MEMORY[0x1E4FBC860];
    double y = 0.0;
    double width = 0.0;
    double height = 0.0;
  }
  sub_1BFE9E49C(v58, (uint64_t)v67, &qword_1EB873240, (unint64_t *)&unk_1EB873230, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
  uint64_t v37 = v68;
  unint64_t v38 = v59;
  if (!v68)
  {
    sub_1BFE9E590((uint64_t)v67, &qword_1EB873240, (unint64_t *)&unk_1EB873230, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
    uint64_t v39 = (void *)MEMORY[0x1E4FBC860];
    if (v18) {
      goto LABEL_29;
    }
    goto LABEL_23;
  }
  uint64_t v56 = v69;
  uint64_t v39 = __swift_project_boxed_opaque_existential_1(v67, v68);
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, a5 + *(void *)(*(void *)a5 + 120), v65);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v64, a5 + *(void *)(*(void *)a5 + 112), v12);
  char v66 = *(unsigned char *)(a5 + *(void *)(*(void *)a5 + 176));
  if (v38 >> 62)
  {
LABEL_49:
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    uint64_t v40 = result;
  }
  else
  {
    uint64_t v40 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v58 = v37;
  if (!v40)
  {
    swift_bridgeObjectRelease();
    uint64_t v37 = MEMORY[0x1E4FBC870];
    goto LABEL_28;
  }
  if (v40 >= 1)
  {
    uint64_t v55 = v39;
    if ((v38 & 0xC000000000000001) != 0)
    {
      uint64_t v42 = 0;
      uint64_t v37 = MEMORY[0x1E4FBC870];
      do
      {
        MEMORY[0x1C18C7CB0](v42++, v38);
        swift_bridgeObjectRetain();
        uint64_t v43 = swift_bridgeObjectRetain();
        uint64_t v37 = sub_1BFEF3988(v43, v37);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      while (v40 != v42);
    }
    else
    {
      uint64_t v44 = 0;
      uint64_t v37 = MEMORY[0x1E4FBC870];
      do
      {
        ++v44;
        swift_bridgeObjectRetain();
        uint64_t v45 = swift_bridgeObjectRetain();
        uint64_t v37 = sub_1BFEF3988(v45, v37);
        swift_bridgeObjectRelease();
      }
      while (v40 != v44);
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = v60;
    uint64_t v12 = v61;
LABEL_28:
    unint64_t v38 = (unint64_t)v62;
    uint64_t v46 = v64;
    uint64_t v39 = (void *)(*(uint64_t (**)(char *, char *, char *, uint64_t, uint64_t, double, double, double, double))(v56 + 8))(v62, v64, &v66, v37, v58, x, y, width, height);
    swift_bridgeObjectRelease();
    uint64_t v47 = *(void (**)(char *, uint64_t))(v13 + 8);
    v13 += 8;
    v47(v46, v12);
    (*(void (**)(unint64_t, uint64_t))(v63 + 8))(v38, v65);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
    if (v18)
    {
LABEL_29:
      uint64_t v48 = (unsigned __int8 *)(v17 + 11);
      sub_1BFE5E624();
      LOBYTE(v12) = 2;
      uint64_t v49 = 1;
      while (1)
      {
        int v51 = *v48;
        v48 += 64;
        int v50 = v51;
        BOOL v52 = v51 == 1 || v12 == 1;
        unsigned int v53 = v52 ? 1 : 2;
        uint64_t v12 = v50 ? v53 : 0;
        if (v18 == v49) {
          goto LABEL_47;
        }
        if (__OFADD__(v49, 1))
        {
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
        ++v49;
        if (!v50)
        {
          while (v18 != v49)
          {
            if (__OFADD__(v49, 1)) {
              goto LABEL_48;
            }
            ++v49;
          }
          LOBYTE(v12) = 0;
          goto LABEL_47;
        }
      }
    }
LABEL_23:
    LOBYTE(v12) = 2;
LABEL_47:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v54 = v57;
    *uint64_t v57 = x;
    v54[1] = y;
    void v54[2] = width;
    v54[3] = height;
    *((void *)v54 + 4) = v29;
    *((void *)v54 + 5) = v33;
    *((void *)v54 + 6) = v39;
    *((unsigned char *)v54 + 56) = v12;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFE5DBB0(uint64_t a1)
{
  return sub_1BFEB9484(a1, (uint64_t (*)(void))sub_1BFEC43D4, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
}

uint64_t sub_1BFE5DBDC(uint64_t a1)
{
  return sub_1C104B4C8(a1, (uint64_t (*)(void))sub_1C0EE862C);
}

uint64_t sub_1BFE5DBFC(uint64_t a1, uint64_t (*a2)(uint64_t a1), unsigned __int8 *a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  uint64_t v16 = *(void **)v8;
  unint64_t v18 = *(void *)(*(void *)v8 + 128);
  unsigned __int8 v32 = *a3;
  unsigned __int8 v17 = v32;
  uint64_t v19 = v16[20];
  uint64_t v20 = v16[21];
  uint64_t v21 = __swift_project_boxed_opaque_existential_1(v16 + 17, v19);
  uint64_t v22 = sub_1C0F1E0A4(a1, a2, &v32, (uint64_t)v21, v18, v19, v20);
  unint64_t v23 = v16[2];
  v26[2] = a2;
  v26[3] = v16;
  v26[4] = v22;
  v26[5] = a4;
  long long v26[6] = a1;
  unsigned __int8 v27 = v17;
  double v28 = a5;
  double v29 = a6;
  double v30 = a7;
  double v31 = a8;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1BFFC2D44((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BFFC33F0, (uint64_t)v26, v23);
  swift_release();
  swift_bridgeObjectRelease();
  return v24;
}

void *sub_1BFE5DD08(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v4 - 8);
  if (a1 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v7 = 4;
      uint64_t v25 = v5;
      while (1)
      {
        uint64_t v8 = v7 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = MEMORY[0x1C18C7CB0](v7 - 4, a1);
          uint64_t v10 = v7 - 3;
          if (__OFADD__(v8, 1)) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v9 = *(void *)(a1 + 8 * v7);
          swift_retain();
          uint64_t v10 = v7 - 3;
          if (__OFADD__(v8, 1))
          {
LABEL_16:
            __break(1u);
            __break(1u);
            goto LABEL_17;
          }
        }
        uint64_t v30 = v9;
        uint64_t v29 = 0;
        memset(v28, 0, sizeof(v28));
        uint64_t v11 = type metadata accessor for FeedGroupRegion();
        unint64_t v12 = sub_1BFE5E5B8();
        swift_retain();
        sub_1BFE9A8D8((uint64_t)&v30, (uint64_t)v28, a3, v11, v12, v31);
        sub_1BFE9E590((uint64_t)v28, &qword_1EB873240, (unint64_t *)&unk_1EB873230, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
        swift_release();
        double v13 = v31[0];
        double v14 = v31[1];
        double v15 = v31[2];
        double v16 = v31[3];
        long long v27 = v32;
        uint64_t v17 = v33;
        char v18 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_1BFE5E610(0, v6[2] + 1, 1, v6);
        }
        uint64_t v19 = v6;
        unint64_t v20 = v6[2];
        uint64_t v21 = v19;
        unint64_t v22 = v19[3];
        if (v20 >= v22 >> 1) {
          uint64_t v21 = sub_1BFE5E610((void *)(v22 > 1), v20 + 1, 1, v21);
        }
        void v21[2] = v20 + 1;
        unint64_t v23 = (double *)&v21[8 * v20];
        uint64_t v6 = v21;
        v23[4] = v13;
        void v23[5] = v14;
        v23[6] = v15;
        v23[7] = v16;
        *((_OWORD *)v23 + 4) = v27;
        *((void *)v23 + 10) = v17;
        *((unsigned char *)v23 + 88) = v18;
        swift_release();
        ++v7;
        if (v10 == v25)
        {
          swift_bridgeObjectRelease();
          return v6;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

unint64_t sub_1BFE5E5B8()
{
  unint64_t result = qword_1EB885A20;
  if (!qword_1EB885A20)
  {
    type metadata accessor for FeedGroupRegion();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB885A20);
  }
  return result;
}

void *sub_1BFE5E610(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE33E4(a1, a2, a3, a4, (unint64_t *)&unk_1EB87A5F0, (uint64_t)&type metadata for FeedLayoutResult);
}

void sub_1BFE5E624()
{
  if (!qword_1EB885C10)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB885C10);
    }
  }
}

uint64_t sub_1BFE5E688(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1BFE5E6D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1BFE5E738(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedGroupEmitterEmbeddedOutput();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v35[-v6];
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v35[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for FeedGroupEmitterOutput();
  __n128 v13 = MEMORY[0x1F4188790](v12);
  double v15 = (uint64_t *)&v35[-v14];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v16 + 16))(&v35[-v14], a1, v12, v13);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1BFEFE510();
      uint64_t v17 = (uint64_t)v15 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v8 + 32))(v11, v15, a2);
      sub_1BFED9C78();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      uint64_t v19 = (uint64_t *)(inited + 48);
      unsigned int v20 = 1819242352;
      goto LABEL_4;
    case 2u:
      (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v8 + 32))(v11, v15, a2);
      sub_1BFED9C78();
      uint64_t v23 = swift_initStackObject();
      *(_OWORD *)(v23 + 16) = xmmword_1C1529AE0;
      *(void *)(v23 + 32) = 0x6F7267207473616CLL;
      *(void *)(v23 + 40) = 0xEA00000000007075;
      *(void *)(v23 + 72) = a2;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v23 + 48));
      (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v8 + 16))(boxed_opaque_existential_0, v11, a2);
      unint64_t v22 = sub_1BFF99224(v23);
      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v11, a2);
      return v22;
    case 3u:
      uint64_t v25 = *v15;
      uint64_t v26 = v15[1];
      sub_1BFED9C78();
      uint64_t v27 = swift_initStackObject();
      *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
      uint64_t v28 = 1701736302;
      goto LABEL_8;
    case 4u:
      uint64_t v25 = *v15;
      uint64_t v26 = v15[1];
      sub_1BFED9C78();
      uint64_t v27 = swift_initStackObject();
      *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
      uint64_t v28 = 1885956979;
LABEL_8:
      unint64_t v29 = 0xE400000000000000;
      goto LABEL_10;
    case 5u:
      uint64_t v25 = *v15;
      uint64_t v26 = v15[1];
      sub_1BFED9C78();
      uint64_t v27 = swift_initStackObject();
      *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
      uint64_t v28 = 0x746572206C6F6F70;
      unint64_t v29 = 0xEA00000000007972;
LABEL_10:
      *(void *)(v27 + 32) = v28;
      *(void *)(v27 + 40) = v29;
      *(void *)(v27 + 72) = MEMORY[0x1E4FBB1A0];
      *(void *)(v27 + 48) = v25;
      *(void *)(v27 + 56) = v26;
      unint64_t v22 = sub_1BFF99224(v27);
      break;
    case 6u:
      sub_1BFC845BC(255, (unint64_t *)&qword_1EB865070);
      uint64_t v30 = (uint64_t)v15 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v5 + 32))(v7, v15, v4);
      sub_1BFED9C78();
      uint64_t v31 = swift_initStackObject();
      *(_OWORD *)(v31 + 16) = xmmword_1C1529AE0;
      *(void *)(v31 + 32) = 0x6465646465626D65;
      *(void *)(v31 + 40) = 0xE800000000000000;
      uint64_t v32 = sub_1C1193DF4(v4);
      *(void *)(v31 + 72) = MEMORY[0x1E4FBB1A0];
      *(void *)(v31 + 48) = v32;
      *(void *)(v31 + 56) = v33;
      unint64_t v22 = sub_1BFF99224(v31);
      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
      __swift_destroy_boxed_opaque_existential_1(v30);
      break;
    default:
      sub_1BFEFE510();
      uint64_t v17 = (uint64_t)v15 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v8 + 32))(v11, v15, a2);
      sub_1BFED9C78();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      uint64_t v19 = (uint64_t *)(inited + 48);
      unsigned int v20 = 1954047342;
LABEL_4:
      *(void *)(inited + 32) = v20 | 0x6F72672000000000;
      *(void *)(inited + 40) = 0xEA00000000007075;
      *(void *)(inited + 72) = a2;
      uint64_t v21 = __swift_allocate_boxed_opaque_existential_0(v19);
      (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v8 + 16))(v21, v11, a2);
      unint64_t v22 = sub_1BFF99224(inited);
      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v11, a2);
      sub_1BFEFE4A0(v17);
      break;
  }
  return v22;
}

void *sub_1BFE5ECCC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v7 <= 0x10) {
    unint64_t v8 = 16;
  }
  else {
    unint64_t v8 = v7;
  }
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8) {
    unint64_t v9 = v8;
  }
  else {
    unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unsigned int v10 = a2[v9];
  unsigned int v11 = v10 - 7;
  if (v10 >= 7)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_18;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_18;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_18;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_18:
        int v14 = (v13 | (v11 << (8 * v9))) + 7;
        unsigned int v10 = v13 + 7;
        if (v9 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  unint64_t v15 = v8 + 1;
  switch(v10)
  {
    case 1u:
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
      unint64_t v19 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v20 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
      unint64_t v21 = *(void *)(v20 + 24);
      if (v21 < 0xFFFFFFFF)
      {
        long long v32 = *(_OWORD *)(v20 + 16);
        *(_OWORD *)unint64_t v19 = *(_OWORD *)v20;
        *(_OWORD *)(v19 + 16) = v32;
      }
      else
      {
        *(void *)(v19 + 24) = v21;
        (**(void (***)(void))(v21 - 8))();
      }
      char v22 = 1;
      goto LABEL_55;
    case 2u:
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
      char v22 = 2;
      goto LABEL_55;
    case 3u:
      uint64_t v23 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v23;
      char v24 = 3;
      goto LABEL_31;
    case 4u:
      uint64_t v25 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v25;
      char v24 = 4;
      goto LABEL_31;
    case 5u:
      uint64_t v26 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v26;
      char v24 = 5;
LABEL_31:
      *((unsigned char *)a1 + v9) = v24;
      swift_bridgeObjectRetain();
      break;
    case 6u:
      unsigned int v27 = a2[v8];
      unsigned int v28 = v27 - 3;
      if (v27 >= 3)
      {
        if (v8 <= 3) {
          uint64_t v29 = v8;
        }
        else {
          uint64_t v29 = 4;
        }
        switch(v29)
        {
          case 1:
            int v30 = *a2;
            goto LABEL_43;
          case 2:
            int v30 = *(unsigned __int16 *)a2;
            goto LABEL_43;
          case 3:
            int v30 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_43;
          case 4:
            int v30 = *(_DWORD *)a2;
LABEL_43:
            if (v8 < 4) {
              unsigned int v27 = (v30 | (v28 << (8 * v8))) + 3;
            }
            else {
              unsigned int v27 = v30 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v27 == 2)
      {
        uint64_t v33 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v33;
        *((unsigned char *)a1 + v8) = 2;
        swift_bridgeObjectRetain();
      }
      else if (v27 == 1)
      {
        (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
        *((unsigned char *)a1 + v8) = 1;
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
        unint64_t v34 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v35 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v36 = *(void *)(v35 + 24);
        if (v36 < 0xFFFFFFFF)
        {
          long long v37 = *(_OWORD *)(v35 + 16);
          *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
          *(_OWORD *)(v34 + 16) = v37;
        }
        else
        {
          *(void *)(v34 + 24) = v36;
          (**(void (***)(void))(v36 - 8))();
        }
        *((unsigned char *)a1 + v8) = 0;
      }
      unint64_t v38 = ((unint64_t)a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v39 = (unint64_t)&a2[v15 + 7] & 0xFFFFFFFFFFFFFFF8;
      uint64_t v40 = *(void *)(v39 + 24);
      *(void *)(v38 + 24) = v40;
      *(void *)(v38 + 32) = *(void *)(v39 + 32);
      (**(void (***)(void))(v40 - 8))();
      char v22 = 6;
LABEL_55:
      *((unsigned char *)a1 + v9) = v22;
      break;
    default:
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
      unint64_t v16 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v17 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
      unint64_t v18 = *(void *)(v17 + 24);
      if (v18 < 0xFFFFFFFF)
      {
        long long v31 = *(_OWORD *)(v17 + 16);
        *(_OWORD *)unint64_t v16 = *(_OWORD *)v17;
        *(_OWORD *)(v16 + 16) = v31;
      }
      else
      {
        *(void *)(v16 + 24) = v18;
        (**(void (***)(void))(v18 - 8))();
      }
      *((unsigned char *)a1 + v9) = 0;
      break;
  }
  return a1;
}

uint64_t type metadata accessor for FeedGroupEmitterOutput()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FeedGroupEmitterEmbeddedOutput()
{
  return __swift_instantiateGenericMetadata();
}

double FeedGroupable.scoreThreshold.getter()
{
  return 0.0;
}

uint64_t sub_1BFE5F150(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  sub_1BFE72C60(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1BFE5F1AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0427024(0, (unint64_t *)&qword_1EB87A8C0, (uint64_t (*)(uint64_t))sub_1C00653B4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
  *(void *)(inited + 32) = 0x746C75736572;
  *(void *)(inited + 40) = 0xE600000000000000;
  unint64_t v6 = (char *)v2 + *(int *)(a1 + 44);
  uint64_t v7 = type metadata accessor for FeedGroupEmitTaskResult();
  *(void *)(inited + 72) = v7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_0, v6, v7);
  strcpy((char *)(inited + 80), "rankMultiplier");
  *(unsigned char *)(inited + 95) = -18;
  uint64_t v9 = MEMORY[0x1E4FBB3D0];
  *(void *)(inited + 96) = v2[1];
  *(void *)(inited + 120) = v9;
  *(void *)(inited + 128) = 0x65726F6373;
  *(void *)(inited + 136) = 0xE500000000000000;
  uint64_t v10 = *v2;
  *(void *)(inited + 168) = v9;
  *(void *)(inited + 144) = v10;
  sub_1BFF99224(inited);
  a2[3] = sub_1C151870C();
  a2[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_0(a2);
  return sub_1C15186FC();
}

uint64_t sub_1BFE5F360(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = type metadata accessor for FeedGroupEmitterEmbeddedOutput();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v9);
  unsigned int v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v13 = MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v15, v1, a1, v13);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1BFEFE510();
      uint64_t v17 = (uint64_t)&v15[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v15, v3);
      unsigned int v18 = 1819242352;
      goto LABEL_4;
    case 2u:
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v15, v3);
      uint64_t v25 = 0x756F72477473616CLL;
      unint64_t v26 = 0xEA00000000002870;
      sub_1C151811C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v19 = v25;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v3);
      return v19;
    case 3u:
      uint64_t v20 = 1701736302;
      goto LABEL_8;
    case 4u:
      uint64_t v20 = 1885956979;
LABEL_8:
      unint64_t v21 = v20 & 0xFFFF0000FFFFFFFFLL | 0x2800000000;
      unint64_t v22 = 0xE500000000000000;
      goto LABEL_10;
    case 5u:
      unint64_t v21 = 0x727465526C6F6F70;
      unint64_t v22 = 0xEA00000000002879;
LABEL_10:
      uint64_t v25 = v21;
      unint64_t v26 = v22;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v19 = v25;
      break;
    case 6u:
      sub_1BFC845BC(255, (unint64_t *)&qword_1EB865070);
      uint64_t v23 = (uint64_t)&v15[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v15, v4);
      uint64_t v25 = 0x6465646465626D65;
      unint64_t v26 = 0xE900000000000028;
      sub_1C1193DF4(v4);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v19 = v25;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      __swift_destroy_boxed_opaque_existential_1(v23);
      break;
    default:
      sub_1BFEFE510();
      uint64_t v17 = (uint64_t)&v15[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v15, v3);
      unsigned int v18 = 1954047342;
LABEL_4:
      uint64_t v25 = v18 | 0x756F724700000000;
      unint64_t v26 = 0xEA00000000002870;
      sub_1C151811C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v19 = v25;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v3);
      sub_1BFEFE4A0(v17);
      break;
  }
  return v19;
}

uint64_t FeedCursorGroup.init(createdDate:group:config:serviceConfig:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v24 = sub_1C151631C();
  uint64_t v26 = *(void *)(v24 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(a6, a1, v24);
  unsigned int v11 = (int *)type metadata accessor for FeedCursorGroup();
  uint64_t v12 = a6 + v11[9];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a2, AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v15 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v16 = sub_1C151811C();
  uint64_t v18 = v17;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a3, v15);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(a1, v24);
  uint64_t v19 = (uint64_t *)(a6 + v11[10]);
  uint64_t *v19 = v16;
  v19[1] = v18;
  uint64_t v20 = a6 + v11[11];
  unint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32);
  return v21(v20, a4, a5);
}

void *sub_1BFE5FB64()
{
  uint64_t v1 = v0;
  sub_1BFE60AE0();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56);
    uint64_t v18 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = v18[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v17 + v20);
    unint64_t v22 = *(void *)(v17 + v20 + 8);
    uint64_t v23 = *(void *)(v17 + v20 + 16);
    uint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v24 = *v18;
    v24[1] = v19;
    uint64_t v25 = (void *)(*(void *)(v4 + 56) + v20);
    void *v25 = v21;
    v25[1] = v22;
    void v25[2] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = (void *)sub_1BFE60260(v22);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}