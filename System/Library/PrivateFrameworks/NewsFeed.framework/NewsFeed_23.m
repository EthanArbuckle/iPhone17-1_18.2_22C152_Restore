uint64_t sub_1C0ACD5BC(uint64_t a1)
{
  unint64_t v2;
  uint64_t vars8;

  v2 = sub_1C0ACD904();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0ACD5F8(uint64_t a1)
{
  unint64_t v2 = sub_1C0ACD904();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DebugFormatBindingExportRequest.deinit()
{
  swift_bridgeObjectRelease();
  sub_1C0AD0E8C(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatBindingExportRequest_data, (uint64_t (*)(void))type metadata accessor for FormatBindingContent);
  return v0;
}

uint64_t DebugFormatBindingExportRequest.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1C0AD0E8C(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatBindingExportRequest_data, (uint64_t (*)(void))type metadata accessor for FormatBindingContent);
  return swift_deallocClassInstance();
}

uint64_t DebugFormatBindingExportRequest.encode(to:)(void *a1)
{
  sub_1C0ACD8A8();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0ACD904();
  sub_1C1520F0C();
  v9[15] = 0;
  sub_1C15207CC();
  if (!v1)
  {
    v9[14] = 1;
    type metadata accessor for FormatBindingContent();
    sub_1C00786E0(&qword_1EA199FF0, (void (*)(uint64_t))type metadata accessor for FormatBindingContent);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1C0ACD8A8()
{
  if (!qword_1EA1A34C0)
  {
    sub_1C0ACD904();
    unint64_t v0 = sub_1C152083C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A34C0);
    }
  }
}

unint64_t sub_1C0ACD904()
{
  unint64_t result = qword_1EA1A34C8;
  if (!qword_1EA1A34C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A34C8);
  }
  return result;
}

uint64_t sub_1C0ACD958(void *a1)
{
  return DebugFormatBindingExportRequest.encode(to:)(a1);
}

uint64_t sub_1C0ACD97C()
{
  return type metadata accessor for DebugFormatBindingExportRequest();
}

uint64_t type metadata accessor for DebugFormatBindingExportRequest()
{
  uint64_t result = qword_1EB8943B8;
  if (!qword_1EB8943B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0ACD9D0()
{
  uint64_t result = type metadata accessor for FormatBindingContent();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DebugFormatBindingExportRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DebugFormatBindingExportRequest);
}

unsigned char *storeEnumTagSinglePayload for DebugFormatBindingExportRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0ACDB50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatBindingExportRequest.CodingKeys()
{
  return &type metadata for DebugFormatBindingExportRequest.CodingKeys;
}

unint64_t sub_1C0ACDB8C()
{
  unint64_t result = qword_1EA1A34D0;
  if (!qword_1EA1A34D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A34D0);
  }
  return result;
}

unint64_t sub_1C0ACDBE4()
{
  unint64_t result = qword_1EA1A34D8;
  if (!qword_1EA1A34D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A34D8);
  }
  return result;
}

unint64_t sub_1C0ACDC3C()
{
  unint64_t result = qword_1EA1A34E0;
  if (!qword_1EA1A34E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A34E0);
  }
  return result;
}

uint64_t sub_1C0ACDC90(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatOption();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C05F757C(0, v6, 0);
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    uint64_t v7 = v18;
    do
    {
      sub_1C0AD0F88(v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v11 = *v5;
      uint64_t v10 = v5[1];
      uint64_t v12 = v5[2];
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C0AD0E8C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatOption);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F757C(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v18;
      }
      unint64_t v14 = *(void *)(v7 + 16);
      unint64_t v13 = *(void *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1C05F757C(v13 > 1, v14 + 1, 1);
        uint64_t v7 = v18;
      }
      *(void *)(v7 + 16) = v14 + 1;
      v15 = (void *)(v7 + 24 * v14);
      v15[4] = v11;
      v15[5] = v10;
      v15[6] = v12;
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1C0ACDE5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  v166 = a2;
  uint64_t v157 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v157);
  v163 = (int64x2_t *)((char *)&v147 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v161 = type metadata accessor for FormatPuzzleType.Overrides(0);
  MEMORY[0x1F4188790](v161);
  v162 = (int64x2_t *)((char *)&v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE323F8(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v159 = (uint64_t)&v147 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1F4188790](v150);
  uint64_t v155 = (uint64_t)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = type metadata accessor for FormatWebEmbed();
  MEMORY[0x1F4188790](v158);
  v156 = (int64x2_t **)((char *)&v147 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v11 - 8);
  v154 = (char *)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v164 = *(void *)(v13 - 8);
  uint64_t v165 = v13;
  MEMORY[0x1F4188790](v13);
  v152 = (char *)&v147 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v15);
  uint64_t v151 = (uint64_t)&v147 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE0E6A0(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v149 = (uint64_t)&v147 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for FormatArticleOverrides();
  uint64_t v148 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v153 = (uint64_t)&v147 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v160 = (uint64_t)&v147 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v23);
  v25 = (char *)&v147 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(a1 + 24);
  uint64_t v27 = *(void *)(a1 + 32);
  uint64_t v28 = FeedItem.identifier.getter();
  if (*(void *)(v26 + 16))
  {
    unint64_t v30 = sub_1BFEF2D8C(v28, v29);
    if (v31)
    {
      v167 = *(int64x2_t **)(*(void *)(v26 + 56) + 8 * v30);
      swift_bridgeObjectRetain();
    }
    else
    {
      v167 = (int64x2_t *)MEMORY[0x1E4FBC870];
    }
  }
  else
  {
    v167 = (int64x2_t *)MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRelease();
  uint64_t v32 = FeedItem.identifier.getter();
  uint64_t v34 = MEMORY[0x1E4FBC860];
  if (*(void *)(v27 + 16))
  {
    unint64_t v35 = sub_1BFEF2D8C(v32, v33);
    if (v36)
    {
      uint64_t v37 = *(void *)(*(void *)(v27 + 56) + 8 * v35);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v38 = sub_1C0ACDC90(v37);
    }
    else
    {
      uint64_t v38 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    uint64_t v38 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  sub_1C0AD0F88(v3, (uint64_t)v25, type metadata accessor for FeedItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v41 = *((void *)v25 + 9);
      unint64_t v42 = *((void *)v25 + 10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEEFC20(v41, v42);
      goto LABEL_32;
    case 2u:
    case 6u:
    case 9u:
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C0AD0E8C((uint64_t)v25, type metadata accessor for FeedItem);
      goto LABEL_32;
    case 3u:
      uint64_t v43 = v160;
      sub_1C0AD0EEC((uint64_t)v25, v160, type metadata accessor for FeedHeadline);
      id v44 = objc_msgSend(*(id *)(v43 + 40), sel_articleID);
      uint64_t v45 = sub_1C151E62C();
      uint64_t v47 = v46;

      v48 = (void *)swift_unknownObjectRetain();
      uint64_t v49 = v149;
      sub_1BFE09C88(v48, v149);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))(v49, 1, v19) == 1)
      {
        if (qword_1EB88A568 != -1) {
          swift_once();
        }
        uint64_t v50 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB88A548);
        uint64_t v51 = v153;
        sub_1C0AD0F88(v50, v153, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
        sub_1C0AD0E8C(v49, (uint64_t (*)(void))sub_1BFE0E6A0);
      }
      else
      {
        uint64_t v51 = v153;
        sub_1C0AD0EEC(v49, v153, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
      }
      type metadata accessor for FormatArticle();
      uint64_t v140 = swift_allocObject();
      *(void *)(v140 + 16) = v45;
      *(void *)(v140 + 24) = v47;
      uint64_t v141 = v140 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
      swift_beginAccess();
      sub_1C0AD0EEC(v51, v141, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
      v142 = (int64x2_t **)(v140 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
      swift_beginAccess();
      *v142 = v167;
      v143 = (uint64_t *)(v140 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
      swift_beginAccess();
      uint64_t *v143 = v38;
      *(void *)(v140 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate) = 0;
      sub_1C0AD0E8C(v160, type metadata accessor for FeedHeadline);
      v65 = v166;
      uint64_t *v166 = v140;
      uint64_t v66 = type metadata accessor for FormatContentSlotItemObject();
      goto LABEL_35;
    case 4u:
      uint64_t v52 = v151;
      sub_1C0AD0EEC((uint64_t)v25, v151, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v54 = v164;
      uint64_t v53 = v165;
      v55 = *(void (**)(char *, uint64_t, uint64_t))(v164 + 16);
      v56 = v152;
      v55(v152, v52 + *(int *)(v15 + 32), v165);
      v57 = *(int64x2_t **)(v52 + 40);
      uint64_t v161 = *(void *)(v52 + 48);
      v162 = v57;
      v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56);
      v163 = (int64x2_t *)v38;
      uint64_t v59 = (uint64_t)v154;
      v58(v154, 1, 1, v53);
      v60 = (int *)v158;
      v61 = v156;
      v55((char *)v156 + *(int *)(v158 + 20), (uint64_t)v56, v53);
      uint64_t v62 = v161;
      *v61 = v162;
      v61[1] = (int64x2_t *)v62;
      sub_1C0AD0F88(v59, (uint64_t)v61 + v60[6], (uint64_t (*)(void))sub_1BFF00BEC);
      *(int64x2_t **)((char *)v61 + v60[7]) = 0;
      v63 = (int64x2_t **)((char *)v61 + v60[8]);
      void *v63 = 0;
      v63[1] = 0;
      v64 = (int64x2_t **)((char *)v61 + v60[9]);
      void *v64 = 0;
      v64[1] = 0;
      *(int64x2_t **)((char *)v61 + v60[10]) = 0;
      *(int64x2_t **)((char *)v61 + v60[11]) = v167;
      swift_bridgeObjectRetain();
      sub_1C0AD0E8C(v59, (uint64_t (*)(void))sub_1BFF00BEC);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v53);
      *(int64x2_t **)((char *)v61 + v60[12]) = v163;
      v65 = v166;
      sub_1C0AD0EEC((uint64_t)v61, (uint64_t)v166, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      sub_1C0AD0E8C(v52, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v66 = type metadata accessor for FormatContentSlotItemObject();
      goto LABEL_35;
    case 5u:
      long long v67 = *((_OWORD *)v25 + 7);
      long long v175 = *((_OWORD *)v25 + 6);
      v176[0] = v67;
      *(_OWORD *)((char *)v176 + 9) = *(_OWORD *)(v25 + 121);
      long long v68 = *((_OWORD *)v25 + 1);
      long long v169 = *(_OWORD *)v25;
      long long v170 = v68;
      long long v69 = *((_OWORD *)v25 + 3);
      long long v171 = *((_OWORD *)v25 + 2);
      long long v172 = v69;
      long long v70 = *((_OWORD *)v25 + 5);
      long long v173 = *((_OWORD *)v25 + 4);
      long long v174 = v70;
      id v71 = objc_msgSend((id)v169, sel_identifier);
      uint64_t v72 = sub_1C151E62C();
      uint64_t v74 = v73;
      sub_1C01880A4((uint64_t)&v169);

      type metadata accessor for FormatIssue();
      uint64_t v75 = swift_allocObject();
      *(void *)(v75 + 16) = v72;
      *(void *)(v75 + 24) = v74;
      *(_OWORD *)(v75 + 32) = 0u;
      *(_OWORD *)(v75 + 48) = 0u;
      swift_beginAccess();
      *(void *)(v75 + 64) = v167;
      swift_beginAccess();
      *(void *)(v75 + 72) = v38;
      v65 = v166;
      uint64_t *v166 = v75;
      uint64_t v66 = type metadata accessor for FormatContentSlotItemObject();
      goto LABEL_35;
    case 7u:
      long long v76 = *((_OWORD *)v25 + 7);
      long long v175 = *((_OWORD *)v25 + 6);
      v176[0] = v76;
      v176[1] = *((_OWORD *)v25 + 8);
      LOBYTE(v177) = v25[144];
      long long v77 = *((_OWORD *)v25 + 3);
      long long v171 = *((_OWORD *)v25 + 2);
      long long v172 = v77;
      long long v78 = *((_OWORD *)v25 + 5);
      long long v173 = *((_OWORD *)v25 + 4);
      long long v174 = v78;
      long long v79 = *((_OWORD *)v25 + 1);
      long long v169 = *(_OWORD *)v25;
      long long v170 = v79;
      id v80 = objc_msgSend((id)v79, sel_identifier);
      uint64_t v81 = sub_1C151E62C();
      uint64_t v83 = v82;

      type metadata accessor for FormatTag();
      v84 = (void *)swift_allocObject();
      v84[2] = v81;
      v84[3] = v83;
      swift_beginAccess();
      v84[4] = v167;
      swift_beginAccess();
      v84[5] = v38;
      sub_1BFEA4290((uint64_t)&v169);
      v65 = v166;
      uint64_t *v166 = (uint64_t)v84;
      uint64_t v66 = type metadata accessor for FormatContentSlotItemObject();
      goto LABEL_35;
    case 8u:
      uint64_t v85 = v155;
      sub_1C0AD0EEC((uint64_t)v25, v155, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      v86 = (uint64_t *)(v85 + *(int *)(v150 + 20));
      uint64_t v88 = *v86;
      uint64_t v87 = v86[1];
      uint64_t v90 = v86[2];
      uint64_t v89 = v86[3];
      uint64_t v91 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v92 = v159;
      sub_1C0AD0F88((uint64_t)v86 + *(int *)(v91 + 24), v159, (uint64_t (*)(void))sub_1BFE323F8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v93 = swift_bridgeObjectRetain();
      uint64_t v94 = sub_1C0ACDC90(v93);
      swift_bridgeObjectRelease();
      *(void *)&long long v169 = v38;
      sub_1C1047944(v94);
      uint64_t v95 = v169;
      sub_1C0AD0E8C(v85, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      v96 = v166;
      uint64_t *v166 = v88;
      v96[1] = v87;
      v96[2] = v90;
      v96[3] = v89;
      v97 = (int *)type metadata accessor for FormatCustomItem();
      sub_1C0AD0EEC(v92, (uint64_t)v96 + v97[6], (uint64_t (*)(void))sub_1BFE323F8);
      *(uint64_t *)((char *)v96 + v97[7]) = v95;
      *(uint64_t *)((char *)v96 + v97[8]) = (uint64_t)v167;
      uint64_t v66 = type metadata accessor for FormatContentSlotItemObject();
      swift_storeEnumTagMultiPayload();
      v98 = *(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56);
      v99 = v96;
      return v98(v99, 0, 1, v66);
    case 0xBu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_32;
    case 0xCu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_31;
    case 0xDu:
      long long v100 = *((_OWORD *)v25 + 11);
      long long v178 = *((_OWORD *)v25 + 10);
      long long v179 = v100;
      long long v180 = *((_OWORD *)v25 + 12);
      long long v101 = *((_OWORD *)v25 + 7);
      long long v175 = *((_OWORD *)v25 + 6);
      v176[0] = v101;
      long long v102 = *((_OWORD *)v25 + 9);
      v176[1] = *((_OWORD *)v25 + 8);
      long long v177 = v102;
      long long v103 = *((_OWORD *)v25 + 3);
      long long v171 = *((_OWORD *)v25 + 2);
      long long v172 = v103;
      long long v104 = *((_OWORD *)v25 + 5);
      long long v173 = *((_OWORD *)v25 + 4);
      long long v174 = v104;
      long long v105 = *((_OWORD *)v25 + 1);
      long long v169 = *(_OWORD *)v25;
      long long v170 = v105;
      uint64_t v107 = *((void *)&v171 + 1);
      uint64_t v106 = v103;
      swift_bridgeObjectRetain();
      sub_1C01F0A74((uint64_t)&v169);
      type metadata accessor for FormatPuzzle();
      uint64_t v108 = swift_allocObject();
      *(void *)(v108 + 16) = v107;
      *(void *)(v108 + 24) = v106;
      swift_beginAccess();
      *(void *)(v108 + 176) = v167;
      swift_beginAccess();
      *(void *)(v108 + 184) = v38;
      swift_beginAccess();
      *(_OWORD *)(v108 + 144) = 0u;
      *(_OWORD *)(v108 + 160) = 0u;
      *(_OWORD *)(v108 + 112) = 0u;
      *(_OWORD *)(v108 + 128) = 0u;
      *(_OWORD *)(v108 + 80) = 0u;
      *(_OWORD *)(v108 + 96) = 0u;
      *(_OWORD *)(v108 + 48) = 0u;
      *(_OWORD *)(v108 + 64) = 0u;
      *(_OWORD *)(v108 + 32) = 0u;
      v109 = v166;
      uint64_t *v166 = v108;
      uint64_t v66 = type metadata accessor for FormatContentSlotItemObject();
      goto LABEL_46;
    case 0xEu:
      uint64_t v110 = *((void *)v25 + 3);
      unint64_t v111 = *((void *)v25 + 4);
      uint64_t v113 = *((void *)v25 + 5);
      uint64_t v112 = *((void *)v25 + 6);
      v114 = v162;
      (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(v164 + 56))(&v162->i8[*(int *)(v161 + 24)], 1, 1, v165);
      int64x2_t *v114 = vdupq_n_s64(0xF000000000000007);
      type metadata accessor for FormatPuzzleType(0);
      uint64_t v115 = swift_allocObject();
      *(void *)(v115 + 16) = v113;
      *(void *)(v115 + 24) = v112;
      v116 = (int64x2_t **)(v115 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
      swift_beginAccess();
      *v116 = v167;
      v117 = (uint64_t *)(v115 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
      swift_beginAccess();
      uint64_t *v117 = v38;
      uint64_t v118 = v115 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
      swift_beginAccess();
      sub_1C0AD0EEC((uint64_t)v114, v118, type metadata accessor for FormatPuzzleType.Overrides);
      swift_bridgeObjectRetain();
      sub_1BFEEFC20(v110, v111);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v65 = v166;
      uint64_t *v166 = v115;
      uint64_t v66 = type metadata accessor for FormatContentSlotItemObject();
LABEL_35:
      swift_storeEnumTagMultiPayload();
      v98 = *(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56);
      v99 = v65;
      return v98(v99, 0, 1, v66);
    case 0xFu:
      unint64_t v119 = 0xED00006B61657274;
      uint64_t v120 = (uint64_t)v163;
      sub_1C0AD0EEC((uint64_t)v25, (uint64_t)v163, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      id v121 = objc_msgSend(*(id *)(v120 + *(int *)(v157 + 32)), sel_identifier);
      uint64_t v122 = sub_1C151E62C();
      uint64_t v124 = v123;

      v125 = v162;
      (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(v164 + 56))(&v162->i8[*(int *)(v161 + 24)], 1, 1, v165);
      int64x2_t *v125 = vdupq_n_s64(0xF000000000000007);
      type metadata accessor for FormatPuzzleType(0);
      uint64_t v126 = swift_allocObject();
      *(void *)(v126 + 16) = v122;
      *(void *)(v126 + 24) = v124;
      v127 = (void *)(v126 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
      swift_beginAccess();
      void *v127 = MEMORY[0x1E4FBC870];
      v128 = (void *)(v126 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
      swift_beginAccess();
      void *v128 = v34;
      uint64_t v129 = v126 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
      swift_beginAccess();
      sub_1C0AD0EEC((uint64_t)v125, v129, type metadata accessor for FormatPuzzleType.Overrides);
      type metadata accessor for PuzzleStatistic();
      PuzzleStatisticCategory.statisticType.getter(v168);
      unint64_t v130 = 0x53747365676E6F6CLL;
      switch(v168[0])
      {
        case 1:
          unint64_t v130 = 0x53746E6572727563;
          break;
        case 2:
          unint64_t v119 = 0xED00006465766C6FLL;
          unint64_t v130 = 0x5373656C7A7A7570;
          break;
        case 3:
          unint64_t v119 = 0xE900000000000065;
          unint64_t v130 = 0x74615265766C6F73;
          break;
        case 4:
          v144 = "fastestTimeByDifficultyLevel";
          goto LABEL_40;
        case 5:
          v144 = "averageTimeByDifficultyLevel";
LABEL_40:
          unint64_t v119 = (unint64_t)(v144 - 32) | 0x8000000000000000;
          unint64_t v130 = 0xD00000000000001CLL;
          break;
        case 6:
          unint64_t v130 = 0xD00000000000001DLL;
          v145 = "highestScoreByDifficultyLevel";
          goto LABEL_44;
        case 7:
          unint64_t v119 = 0xEC00000073746174;
          unint64_t v130 = 0x53646570756F7267;
          break;
        case 8:
          unint64_t v130 = 0xD000000000000015;
          v145 = "gameCenterLeaderboard";
LABEL_44:
          unint64_t v119 = (unint64_t)(v145 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      sub_1C0AD0E8C((uint64_t)v163, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      v109 = v166;
      v146 = v167;
      uint64_t *v166 = v126;
      v109[1] = v130;
      v109[2] = v119;
      v109[3] = (uint64_t)v146;
      v109[4] = v38;
      uint64_t v66 = type metadata accessor for FormatContentSlotItemObject();
LABEL_46:
      swift_storeEnumTagMultiPayload();
      v98 = *(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56);
      v99 = v109;
      return v98(v99, 0, 1, v66);
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v131 = *((_OWORD *)v25 + 13);
      long long v180 = *((_OWORD *)v25 + 12);
      long long v181 = v131;
      long long v182 = *((_OWORD *)v25 + 14);
      uint64_t v183 = *((void *)v25 + 30);
      long long v132 = *((_OWORD *)v25 + 9);
      v176[1] = *((_OWORD *)v25 + 8);
      long long v177 = v132;
      long long v133 = *((_OWORD *)v25 + 11);
      long long v178 = *((_OWORD *)v25 + 10);
      long long v179 = v133;
      long long v134 = *((_OWORD *)v25 + 5);
      long long v173 = *((_OWORD *)v25 + 4);
      long long v174 = v134;
      long long v135 = *((_OWORD *)v25 + 7);
      long long v175 = *((_OWORD *)v25 + 6);
      v176[0] = v135;
      long long v136 = *((_OWORD *)v25 + 1);
      long long v169 = *(_OWORD *)v25;
      long long v170 = v136;
      long long v137 = *((_OWORD *)v25 + 3);
      long long v171 = *((_OWORD *)v25 + 2);
      long long v172 = v137;
      sub_1C01F0AC8((uint64_t)&v169);
      goto LABEL_32;
    case 0x11u:
      swift_bridgeObjectRelease();
LABEL_31:
      swift_bridgeObjectRelease();
      goto LABEL_32;
    default:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v39 = *((void *)v25 + 5);
      unint64_t v40 = *((void *)v25 + 6);
      swift_bridgeObjectRelease();
      sub_1BFEEFC20(v39, v40);
LABEL_32:
      uint64_t v138 = type metadata accessor for FormatContentSlotItemObject();
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v138 - 8) + 56))(v166, 1, 1, v138);
  }
}

uint64_t sub_1C0ACF1C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatContentSlotItemObject();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1C05F7C28(0, v6, 0);
    uint64_t v7 = v15;
    uint64_t v8 = *(void *)(type metadata accessor for FormatContentSlotItemResolution() - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    do
    {
      sub_1C0ACF394(v9, v5);
      uint64_t v15 = v7;
      unint64_t v12 = *(void *)(v7 + 16);
      unint64_t v11 = *(void *)(v7 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1C05F7C28(v11 > 1, v12 + 1, 1);
        uint64_t v7 = v15;
      }
      *(void *)(v7 + 16) = v12 + 1;
      sub_1C0AD0EEC((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v12, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      v9 += v10;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1C0ACF394@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  v144 = a2;
  sub_1BFE323F8(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v135 = (uint64_t)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1F4188790](v132);
  long long v133 = (uint64_t *)((char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v136 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v136);
  long long v137 = (id *)((char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v138 = type metadata accessor for FormatPuzzleType.Overrides(0);
  MEMORY[0x1F4188790](v138);
  v139 = (int64x2_t *)((char *)&v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v134 = type metadata accessor for FormatWebEmbed();
  MEMORY[0x1F4188790](v134);
  uint64_t v9 = (int64x2_t **)((char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v10 - 8);
  long long v131 = (char *)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C1515FDC();
  uint64_t v141 = *(void *)(v12 - 8);
  uint64_t v142 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v140 = (char *)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (int64x2_t **)((char *)&v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE0E6A0(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v130 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for FormatArticleOverrides();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v130 = (uint64_t)&v130 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v23);
  v25 = (char *)&v130 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = a1;
  sub_1C0AD0F88(a1, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      id v33 = *(id *)v25;
      id v34 = objc_msgSend(*(id *)v25, sel_identifier);
      uint64_t v35 = sub_1C151E62C();
      uint64_t v37 = v36;

      uint64_t v38 = type metadata accessor for FormatContentSlotItemResolution();
      uint64_t v39 = *(void *)(v143 + *(int *)(v38 + 24));
      uint64_t v40 = *(void *)(v143 + *(int *)(v38 + 28));
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_1C0ACDC90(v40);

      type metadata accessor for FormatIssue();
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v35;
      *(void *)(v42 + 24) = v37;
      *(_OWORD *)(v42 + 32) = 0u;
      *(_OWORD *)(v42 + 48) = 0u;
      swift_beginAccess();
      *(void *)(v42 + 64) = v39;
      swift_beginAccess();
      *(void *)(v42 + 72) = v41;
      uint64_t *v144 = v42;
      type metadata accessor for FormatContentSlotItemObject();
      return swift_storeEnumTagMultiPayload();
    case 2u:
      id v43 = objc_msgSend(*(id *)v25, sel_identifier);
      uint64_t v44 = sub_1C151E62C();
      uint64_t v46 = v45;

      uint64_t v47 = type metadata accessor for FormatContentSlotItemResolution();
      uint64_t v48 = *(void *)(v143 + *(int *)(v47 + 24));
      uint64_t v49 = *(void *)(v143 + *(int *)(v47 + 28));
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1C0ACDC90(v49);
      swift_unknownObjectRelease();
      type metadata accessor for FormatTag();
      uint64_t v51 = (void *)swift_allocObject();
      v51[2] = v44;
      v51[3] = v46;
      swift_beginAccess();
      v51[4] = v48;
      swift_beginAccess();
      v51[5] = v50;
      uint64_t *v144 = (uint64_t)v51;
      type metadata accessor for FormatContentSlotItemObject();
      return swift_storeEnumTagMultiPayload();
    case 3u:
      sub_1C0AD0EEC((uint64_t)v25, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      uint64_t v52 = (int *)v134;
      uint64_t v53 = (char *)v16 + *(int *)(v14 + 20) + (uint64_t)*(int *)(v134 + 20);
      uint64_t v54 = v141;
      uint64_t v138 = *(void *)(v141 + 16);
      uint64_t v55 = v142;
      ((void (*)(char *, char *, uint64_t))v138)(v140, v53, v142);
      v56 = v16[1];
      v139 = *v16;
      uint64_t v57 = (uint64_t)v131;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v131, 1, 1, v55);
      uint64_t v58 = type metadata accessor for FormatContentSlotItemResolution();
      uint64_t v59 = *(int64x2_t **)(v143 + *(int *)(v58 + 24));
      uint64_t v60 = *(void *)(v143 + *(int *)(v58 + 28));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v143 = sub_1C0ACDC90(v60);
      ((void (*)(char *, char *, uint64_t))v138)((char *)v9 + v52[5], v140, v55);
      *uint64_t v9 = v139;
      v9[1] = v56;
      sub_1C0AD0F88(v57, (uint64_t)v9 + v52[6], (uint64_t (*)(void))sub_1BFF00BEC);
      *(int64x2_t **)((char *)v9 + v52[7]) = 0;
      v61 = (int64x2_t **)((char *)v9 + v52[8]);
      void *v61 = 0;
      v61[1] = 0;
      uint64_t v62 = (int64x2_t **)((char *)v9 + v52[9]);
      *uint64_t v62 = 0;
      v62[1] = 0;
      *(int64x2_t **)((char *)v9 + v52[10]) = 0;
      *(int64x2_t **)((char *)v9 + v52[11]) = v59;
      sub_1C0AD0E8C(v57, (uint64_t (*)(void))sub_1BFF00BEC);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v140, v55);
      *(int64x2_t **)((char *)v9 + v52[12]) = (int64x2_t *)v143;
      sub_1C0AD0EEC((uint64_t)v9, (uint64_t)v144, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      sub_1C0AD0E8C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      type metadata accessor for FormatContentSlotItemObject();
      return swift_storeEnumTagMultiPayload();
    case 4u:
      id v63 = objc_msgSend(*(id *)v25, sel_identifier);
      uint64_t v64 = sub_1C151E62C();
      uint64_t v66 = v65;

      uint64_t v67 = type metadata accessor for FormatContentSlotItemResolution();
      uint64_t v68 = *(void *)(v143 + *(int *)(v67 + 24));
      uint64_t v69 = *(void *)(v143 + *(int *)(v67 + 28));
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_1C0ACDC90(v69);
      swift_unknownObjectRelease();
      type metadata accessor for FormatPuzzle();
      uint64_t v71 = swift_allocObject();
      *(void *)(v71 + 16) = v64;
      *(void *)(v71 + 24) = v66;
      swift_beginAccess();
      *(void *)(v71 + 176) = v68;
      swift_beginAccess();
      *(void *)(v71 + 184) = v70;
      swift_beginAccess();
      *(_OWORD *)(v71 + 144) = 0u;
      *(_OWORD *)(v71 + 160) = 0u;
      *(_OWORD *)(v71 + 112) = 0u;
      *(_OWORD *)(v71 + 128) = 0u;
      *(_OWORD *)(v71 + 80) = 0u;
      *(_OWORD *)(v71 + 96) = 0u;
      *(_OWORD *)(v71 + 48) = 0u;
      *(_OWORD *)(v71 + 64) = 0u;
      *(_OWORD *)(v71 + 32) = 0u;
      uint64_t *v144 = v71;
      type metadata accessor for FormatContentSlotItemObject();
      return swift_storeEnumTagMultiPayload();
    case 5u:
      id v72 = objc_msgSend(*(id *)v25, sel_identifier);
      uint64_t v73 = sub_1C151E62C();
      uint64_t v75 = v74;

      uint64_t v76 = type metadata accessor for FormatContentSlotItemResolution();
      uint64_t v77 = *(void *)(v143 + *(int *)(v76 + 24));
      uint64_t v78 = *(void *)(v143 + *(int *)(v76 + 28));
      swift_bridgeObjectRetain();
      uint64_t v79 = sub_1C0ACDC90(v78);
      swift_unknownObjectRelease();
      id v80 = v139;
      (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(v141 + 56))(&v139->i8[*(int *)(v138 + 24)], 1, 1, v142);
      *id v80 = vdupq_n_s64(0xF000000000000007);
      type metadata accessor for FormatPuzzleType(0);
      uint64_t v81 = swift_allocObject();
      *(void *)(v81 + 16) = v73;
      *(void *)(v81 + 24) = v75;
      uint64_t v82 = (void *)(v81 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
      swift_beginAccess();
      *uint64_t v82 = v77;
      uint64_t v83 = (uint64_t *)(v81 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
      swift_beginAccess();
      *uint64_t v83 = v79;
      uint64_t v84 = v81 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
      swift_beginAccess();
      sub_1C0AD0EEC((uint64_t)v80, v84, type metadata accessor for FormatPuzzleType.Overrides);
      uint64_t *v144 = v81;
      type metadata accessor for FormatContentSlotItemObject();
      return swift_storeEnumTagMultiPayload();
    case 6u:
      unint64_t v85 = 0xED00006B61657274;
      uint64_t v86 = (uint64_t)v25;
      uint64_t v87 = v137;
      sub_1C0AD0EEC(v86, (uint64_t)v137, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      id v88 = objc_msgSend(*v87, sel_identifier);
      uint64_t v89 = sub_1C151E62C();
      uint64_t v91 = v90;

      uint64_t v92 = v139;
      (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(v141 + 56))(&v139->i8[*(int *)(v138 + 24)], 1, 1, v142);
      *uint64_t v92 = vdupq_n_s64(0xF000000000000007);
      type metadata accessor for FormatPuzzleType(0);
      uint64_t v93 = swift_allocObject();
      *(void *)(v93 + 16) = v89;
      *(void *)(v93 + 24) = v91;
      uint64_t v94 = (void *)(v93 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
      swift_beginAccess();
      *uint64_t v94 = MEMORY[0x1E4FBC870];
      uint64_t v95 = (void *)(v93 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
      swift_beginAccess();
      *uint64_t v95 = MEMORY[0x1E4FBC860];
      uint64_t v96 = v93 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
      swift_beginAccess();
      sub_1C0AD0EEC((uint64_t)v92, v96, type metadata accessor for FormatPuzzleType.Overrides);
      PuzzleStatisticCategory.statisticType.getter(&v145);
      unint64_t v97 = 0x53747365676E6F6CLL;
      switch(v145)
      {
        case 1:
          unint64_t v97 = 0x53746E6572727563;
          break;
        case 2:
          unint64_t v85 = 0xED00006465766C6FLL;
          unint64_t v97 = 0x5373656C7A7A7570;
          break;
        case 3:
          unint64_t v85 = 0xE900000000000065;
          unint64_t v97 = 0x74615265766C6F73;
          break;
        case 4:
          uint64_t v123 = "fastestTimeByDifficultyLevel";
          goto LABEL_21;
        case 5:
          uint64_t v123 = "averageTimeByDifficultyLevel";
LABEL_21:
          unint64_t v85 = (unint64_t)(v123 - 32) | 0x8000000000000000;
          unint64_t v97 = 0xD00000000000001CLL;
          break;
        case 6:
          unint64_t v97 = 0xD00000000000001DLL;
          uint64_t v124 = "highestScoreByDifficultyLevel";
          goto LABEL_25;
        case 7:
          unint64_t v85 = 0xEC00000073746174;
          unint64_t v97 = 0x53646570756F7267;
          break;
        case 8:
          unint64_t v97 = 0xD000000000000015;
          uint64_t v124 = "gameCenterLeaderboard";
LABEL_25:
          unint64_t v85 = (unint64_t)(v124 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      uint64_t v125 = type metadata accessor for FormatContentSlotItemResolution();
      uint64_t v126 = *(void *)(v143 + *(int *)(v125 + 24));
      uint64_t v127 = *(void *)(v143 + *(int *)(v125 + 28));
      swift_bridgeObjectRetain();
      uint64_t v128 = sub_1C0ACDC90(v127);
      sub_1C0AD0E8C((uint64_t)v87, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      uint64_t v129 = v144;
      uint64_t *v144 = v93;
      v129[1] = v97;
      v129[2] = v85;
      v129[3] = v126;
      v129[4] = v128;
      type metadata accessor for FormatContentSlotItemObject();
      return swift_storeEnumTagMultiPayload();
    case 7u:
      v98 = v133;
      sub_1C0AD0EEC((uint64_t)v25, (uint64_t)v133, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
      uint64_t v100 = *v98;
      uint64_t v99 = v98[1];
      uint64_t v102 = v98[2];
      uint64_t v101 = v98[3];
      uint64_t v103 = v135;
      sub_1C0AD0F88((uint64_t)v98 + *(int *)(v132 + 24), v135, (uint64_t (*)(void))sub_1BFE323F8);
      uint64_t v104 = type metadata accessor for FormatContentSlotItemResolution();
      uint64_t v105 = v143;
      uint64_t v106 = *(void *)(v143 + *(int *)(v104 + 28));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v107 = sub_1C0ACDC90(v106);
      sub_1C0AD0E8C((uint64_t)v98, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
      uint64_t v108 = *(void *)(v105 + *(int *)(v104 + 24));
      v109 = v144;
      uint64_t *v144 = v100;
      v109[1] = v99;
      v109[2] = v102;
      v109[3] = v101;
      uint64_t v110 = (int *)type metadata accessor for FormatCustomItem();
      sub_1C0AD0EEC(v103, (uint64_t)v109 + v110[6], (uint64_t (*)(void))sub_1BFE323F8);
      *(uint64_t *)((char *)v109 + v110[7]) = v107;
      *(uint64_t *)((char *)v109 + v110[8]) = v108;
      type metadata accessor for FormatContentSlotItemObject();
      swift_storeEnumTagMultiPayload();
      return swift_bridgeObjectRetain();
    case 8u:
      uint64_t v112 = *((void *)v25 + 1);
      char v113 = v25[16];
      v114 = v144;
      uint64_t *v144 = *(void *)v25;
      v114[1] = v112;
      *((unsigned char *)v114 + 16) = v113;
      type metadata accessor for FormatContentSlotItemObject();
      return swift_storeEnumTagMultiPayload();
    default:
      id v26 = objc_msgSend(*(id *)v25, sel_articleID);
      uint64_t v27 = sub_1C151E62C();
      uint64_t v29 = v28;

      unint64_t v30 = (void *)swift_unknownObjectRetain();
      sub_1BFE09C88(v30, (uint64_t)v19);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
      {
        uint64_t v31 = v130;
        if (qword_1EB88A568 != -1) {
          swift_once();
        }
        uint64_t v32 = __swift_project_value_buffer(v20, (uint64_t)qword_1EB88A548);
        sub_1C0AD0F88(v32, v31, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
        sub_1C0AD0E8C((uint64_t)v19, (uint64_t (*)(void))sub_1BFE0E6A0);
      }
      else
      {
        uint64_t v31 = v130;
        sub_1C0AD0EEC((uint64_t)v19, v130, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
      }
      uint64_t v115 = type metadata accessor for FormatContentSlotItemResolution();
      uint64_t v116 = *(void *)(v143 + *(int *)(v115 + 24));
      uint64_t v117 = *(void *)(v143 + *(int *)(v115 + 28));
      swift_bridgeObjectRetain();
      uint64_t v118 = sub_1C0ACDC90(v117);
      swift_unknownObjectRelease();
      type metadata accessor for FormatArticle();
      uint64_t v119 = swift_allocObject();
      *(void *)(v119 + 16) = v27;
      *(void *)(v119 + 24) = v29;
      uint64_t v120 = v119 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
      swift_beginAccess();
      sub_1C0AD0EEC(v31, v120, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
      id v121 = (void *)(v119 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
      swift_beginAccess();
      *id v121 = v116;
      uint64_t v122 = (uint64_t *)(v119 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
      swift_beginAccess();
      *uint64_t v122 = v118;
      *(void *)(v119 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate) = 0;
      uint64_t *v144 = v119;
      type metadata accessor for FormatContentSlotItemObject();
      return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_1C0AD0438(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v61 = *(void *)(a3 + 16);
  long long v5 = *(_OWORD *)(a3 + 24);
  long long v59 = *(_OWORD *)(a3 + 40);
  long long v60 = v5;
  long long v62 = *(_OWORD *)(a3 + 56);
  uint64_t v6 = *(void *)(a3 + 72);
  uint64_t v51 = type metadata accessor for FormatContentSlotItem();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v55 = &v46[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0AD0FF0(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (uint64_t *)&v46[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for FormatContentSlotItemObject();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v68 = &v46[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for FeedItem(0);
  uint64_t v58 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = &v46[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v17);
  uint64_t v57 = &v46[-v18];
  uint64_t v19 = *(void *)(a2 + 64);
  uint64_t v53 = a2 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  int64_t v54 = (unint64_t)(v20 + 63) >> 6;
  v56 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v48 = v62;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v24 = 0;
  uint64_t v49 = v11;
  uint64_t v52 = v6;
  while (1)
  {
    if (v22)
    {
      unint64_t v25 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v26 = v25 | (v24 << 6);
      goto LABEL_24;
    }
    int64_t v27 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v27 >= v54) {
      goto LABEL_34;
    }
    unint64_t v28 = *(void *)(v53 + 8 * v27);
    ++v24;
    if (!v28)
    {
      int64_t v24 = v27 + 1;
      if (v27 + 1 >= v54) {
        goto LABEL_34;
      }
      unint64_t v28 = *(void *)(v53 + 8 * v24);
      if (!v28)
      {
        int64_t v24 = v27 + 2;
        if (v27 + 2 >= v54) {
          goto LABEL_34;
        }
        unint64_t v28 = *(void *)(v53 + 8 * v24);
        if (!v28)
        {
          int64_t v24 = v27 + 3;
          if (v27 + 3 >= v54) {
            goto LABEL_34;
          }
          unint64_t v28 = *(void *)(v53 + 8 * v24);
          if (!v28) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v22 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v24 << 6);
LABEL_24:
    unint64_t v30 = v57;
    sub_1C0AD0F88(*(void *)(a2 + 56) + *(void *)(v58 + 72) * v26, (uint64_t)v57, type metadata accessor for FeedItem);
    sub_1C0AD0EEC((uint64_t)v30, (uint64_t)v16, type metadata accessor for FeedItem);
    uint64_t v63 = v61;
    long long v64 = v60;
    long long v65 = v59;
    long long v66 = v62;
    uint64_t v67 = v6;
    sub_1C0ACDE5C((uint64_t)&v63, v10);
    if ((*v56)(v10, 1, v11) == 1)
    {
      sub_1C0AD0E8C((uint64_t)v10, (uint64_t (*)(void))sub_1C0AD0FF0);
    }
    else
    {
      sub_1C0AD0EEC((uint64_t)v10, (uint64_t)v68, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v31 = FeedItem.identifier.getter();
      uint64_t v33 = v48;
      if (*(void *)(v48 + 16) && (unint64_t v34 = sub_1BFEF2D8C(v31, v32), (v35 & 1) != 0))
      {
        uint64_t v36 = (uint64_t *)(*(void *)(v33 + 56) + 16 * v34);
        unint64_t v47 = a1;
        uint64_t v37 = a2;
        uint64_t v39 = *v36;
        uint64_t v38 = v36[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v40 = sub_1C0ACDC90(v38);
        uint64_t v41 = sub_1C0ACF1C8(v39);
        a2 = v37;
        a1 = v47;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v40 = 0;
        uint64_t v41 = 0;
      }
      uint64_t v42 = v55;
      sub_1C0AD0F88((uint64_t)v68, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      id v43 = (uint64_t *)&v42[*(int *)(v51 + 20)];
      *id v43 = v40;
      v43[1] = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a1 = sub_1C0EE6F50(0, *(void *)(a1 + 16) + 1, 1, a1);
      }
      unint64_t v45 = *(void *)(a1 + 16);
      unint64_t v44 = *(void *)(a1 + 24);
      uint64_t v11 = v49;
      if (v45 >= v44 >> 1) {
        a1 = sub_1C0EE6F50(v44 > 1, v45 + 1, 1, a1);
      }
      *(void *)(a1 + 16) = v45 + 1;
      sub_1C0AD0EEC((uint64_t)v55, a1+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v45, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItem);
      sub_1C0AD0E8C((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      uint64_t v6 = v52;
    }
    uint64_t result = sub_1C0AD0E8C((uint64_t)v16, type metadata accessor for FeedItem);
  }
  int64_t v29 = v27 + 4;
  if (v29 >= v54)
  {
LABEL_34:
    swift_release();
    return a1;
  }
  unint64_t v28 = *(void *)(v53 + 8 * v29);
  if (v28)
  {
    int64_t v24 = v29;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v24 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v24 >= v54) {
      goto LABEL_34;
    }
    unint64_t v28 = *(void *)(v53 + 8 * v24);
    ++v29;
    if (v28) {
      goto LABEL_23;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_1C0AD0AD8(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v4 = a1;
  uint64_t v45 = MEMORY[0x1E4FBC860];
  sub_1C05F759C(0, v2, 0);
  uint64_t v3 = v45;
  unint64_t result = sub_1BFEABF78(v4);
  uint64_t v7 = 0;
  uint64_t v8 = v4 + 64;
  uint64_t v29 = v4 + 80;
  int64_t v30 = v2;
  int v31 = v6;
  uint64_t v32 = v4 + 64;
  uint64_t v33 = v4;
  while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << *(unsigned char *)(v4 + 32))
  {
    unint64_t v11 = result >> 6;
    if ((*(void *)(v8 + 8 * (result >> 6)) & (1 << result)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v4 + 36) != v6) {
      goto LABEL_24;
    }
    uint64_t v35 = v7;
    uint64_t v36 = 1 << result;
    uint64_t v12 = (uint64_t *)(*(void *)(v4 + 48) + 16 * result);
    uint64_t v13 = v12[1];
    uint64_t v41 = *v12;
    uint64_t v42 = v3;
    uint64_t v14 = (uint64_t *)(*(void *)(v4 + 56) + (result << 6));
    uint64_t v15 = *v14;
    uint64_t v43 = v14[1];
    uint64_t v16 = v14[3];
    uint64_t v37 = v14[2];
    uint64_t v17 = v14[4];
    uint64_t v18 = v14[5];
    uint64_t v19 = v14[6];
    uint64_t v20 = v14[7];
    int64_t v39 = result;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1C0ACDC90(v19);
    v44[0] = v41;
    v44[1] = v13;
    v44[2] = v15;
    v44[3] = v43;
    v44[4] = v37;
    v44[5] = v16;
    v44[6] = v17;
    v44[7] = v18;
    v44[8] = v19;
    v44[9] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1C0AD0438(MEMORY[0x1E4FBC860], a2, (uint64_t)v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v3 = v42;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    unint64_t result = swift_bridgeObjectRelease_n();
    uint64_t v45 = v42;
    unint64_t v22 = *(void *)(v42 + 16);
    unint64_t v21 = *(void *)(v42 + 24);
    if (v22 >= v21 >> 1)
    {
      unint64_t result = sub_1C05F759C(v21 > 1, v22 + 1, 1);
      uint64_t v3 = v45;
    }
    *(void *)(v3 + 16) = v22 + 1;
    uint64_t v23 = (void *)(v3 + 48 * v22);
    v23[4] = v15;
    v23[5] = v43;
    v23[6] = v40;
    v23[7] = MEMORY[0x1E4FBC860];
    v23[8] = v38;
    v23[9] = v20;
    uint64_t v4 = v33;
    int64_t v9 = 1 << *(unsigned char *)(v33 + 32);
    if (v39 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v32;
    uint64_t v24 = *(void *)(v32 + 8 * v11);
    if ((v24 & v36) == 0) {
      goto LABEL_26;
    }
    int v6 = v31;
    if (*(_DWORD *)(v33 + 36) != v31) {
      goto LABEL_27;
    }
    unint64_t v25 = v24 & (-2 << (v39 & 0x3F));
    if (v25)
    {
      int64_t v9 = __clz(__rbit64(v25)) | v39 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v30;
    }
    else
    {
      unint64_t v26 = v11 + 1;
      unint64_t v27 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v30;
      if (v11 + 1 < v27)
      {
        unint64_t v28 = *(void *)(v32 + 8 * v26);
        if (v28)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v28)) + (v26 << 6);
        }
        else
        {
          while (v27 - 2 != v11)
          {
            unint64_t v28 = *(void *)(v29 + 8 * v11++);
            if (v28)
            {
              unint64_t v26 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v35 + 1;
    unint64_t result = v9;
    if (v35 + 1 == v10) {
      return v3;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C0AD0E8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0AD0EEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C0AD0F54(uint64_t a1)
{
}

uint64_t sub_1C0AD0F88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C0AD0FF0(uint64_t a1)
{
}

uint64_t FeedPaywall.debugSourceName.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedPaywall.debugTitle.getter()
{
  return 0x206C6C6177796150;
}

uint64_t FeedPaywall.debugAssetHandle.getter()
{
  return 0;
}

BOOL static SubscriptionActivationEligibility.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SubscriptionActivationEligibility.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t SubscriptionActivationEligibility.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t SubscriptionActivationEligibility.selectors.getter()
{
  if (*v0) {
    uint64_t v1 = &unk_1F1B82460;
  }
  else {
    uint64_t v1 = &unk_1F1B82430;
  }
  uint64_t v2 = sub_1C00B818C((uint64_t)v1);
  swift_arrayDestroy();
  return v2;
}

uint64_t FeedPaywall.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void FeedPaywall.traits.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 208);
}

void *FeedPaywall.traits.setter(void *result)
{
  *(void *)(v1 + 208) = *result;
  return result;
}

uint64_t (*FeedPaywall.traits.modify())(void)
{
  return nullsub_1;
}

void FeedPaywall.layoutDirection.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 224);
  *(void *)a1 = *(void *)(v1 + 216);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FeedPaywall.layoutDirection.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 216) = *(void *)result;
  *(unsigned char *)(v1 + 224) = v2;
  return result;
}

uint64_t (*FeedPaywall.layoutDirection.modify())(void)
{
  return nullsub_1;
}

uint64_t FeedPaywall.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 232);
  unint64_t v3 = *(void *)(v1 + 240);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFF7FF04(v2, v3);
}

uint64_t FeedPaywall.kind.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1BFEEFC20(*(void *)(v1 + 232), *(void *)(v1 + 240));
  *(void *)(v1 + 232) = v2;
  *(void *)(v1 + 240) = v3;
  return result;
}

uint64_t (*FeedPaywall.kind.modify())(void)
{
  return nullsub_1;
}

__n128 FeedPaywall.init(identifier:paywallType:paywallHost:isBundleFreeTrialEligible:isWebAccessAvailable:channelName:numberOfOffers:buttonText:servicesBundlePrice:servicesBundlePriceDelta:servicesBundleTrialEligible:servicesBundleUpsellScenario:activationEligibility:articleRole:personalizedTopChannelsClause:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13, long long a14, __n128 a15, char a16, uint64_t a17, uint64_t a18, char *a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23)
{
  __n128 result = a15;
  uint64_t v24 = *a13;
  uint64_t v25 = a13[1];
  char v26 = *a19;
  *(void *)(a9 + 208) = qword_1F1B89900;
  *(void *)(a9 + 216) = 0;
  *(unsigned char *)(a9 + 224) = 1;
  *(_OWORD *)(a9 + 232) = xmmword_1C158A1C0;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 49) = a8;
  *(void *)(a9 + 56) = a12;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = a11;
  *(void *)(a9 + 80) = v24;
  *(void *)(a9 + 88) = v25;
  *(_OWORD *)(a9 + 96) = *((_OWORD *)a13 + 1);
  *(_OWORD *)(a9 + 144) = a14;
  *(__n128 *)(a9 + 160) = a15;
  *(unsigned char *)(a9 + 112) = a16;
  *(void *)(a9 + 120) = a17;
  *(void *)(a9 + 128) = a18;
  *(unsigned char *)(a9 + 136) = v26;
  *(void *)(a9 + 176) = a20;
  *(unsigned char *)(a9 + 184) = a21 & 1;
  *(void *)(a9 + 192) = a22;
  *(void *)(a9 + 200) = a23;
  return result;
}

void sub_1C0AD13D8(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 208);
}

void sub_1C0AD13E4(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 224);
  *(void *)a1 = *(void *)(v1 + 216);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t sub_1C0AD13F8()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedPaywall.debugScoreProfile.getter()
{
  return 0;
}

uint64_t FeedPaywall.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = v1[13];
  long long v3 = v1[11];
  long long v34 = v1[12];
  long long v35 = v2;
  long long v4 = v1[13];
  long long v36 = v1[14];
  long long v5 = v1[9];
  long long v7 = v1[7];
  long long v30 = v1[8];
  long long v6 = v30;
  long long v31 = v5;
  long long v8 = v1[9];
  long long v9 = v1[11];
  long long v32 = v1[10];
  long long v10 = v32;
  long long v33 = v9;
  long long v11 = v1[5];
  long long v13 = v1[3];
  long long v26 = v1[4];
  long long v12 = v26;
  long long v27 = v11;
  long long v14 = v1[5];
  long long v15 = v1[7];
  long long v28 = v1[6];
  long long v16 = v28;
  long long v29 = v15;
  long long v17 = v1[1];
  v23[0] = *v1;
  v23[1] = v17;
  long long v18 = v1[3];
  long long v20 = *v1;
  long long v19 = v1[1];
  long long v24 = v1[2];
  long long v21 = v24;
  long long v25 = v18;
  *(_OWORD *)(a1 + 192) = v34;
  *(_OWORD *)(a1 + 208) = v4;
  *(_OWORD *)(a1 + 224) = v1[14];
  *(_OWORD *)(a1 + 128) = v6;
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 160) = v10;
  *(_OWORD *)(a1 + 176) = v3;
  *(_OWORD *)(a1 + 64) = v12;
  *(_OWORD *)(a1 + 80) = v14;
  *(_OWORD *)(a1 + 96) = v16;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)a1 = v20;
  *(_OWORD *)(a1 + 16) = v19;
  uint64_t v37 = *((void *)v1 + 30);
  *(void *)(a1 + 240) = *((void *)v1 + 30);
  *(_OWORD *)(a1 + 32) = v21;
  *(_OWORD *)(a1 + 48) = v13;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  return sub_1C0642468((uint64_t)v23);
}

uint64_t sub_1C0AD150C@<X0>(uint64_t a1@<X8>)
{
  long long v2 = v1[13];
  long long v3 = v1[11];
  long long v34 = v1[12];
  long long v35 = v2;
  long long v4 = v1[13];
  long long v36 = v1[14];
  long long v5 = v1[9];
  long long v7 = v1[7];
  long long v30 = v1[8];
  long long v6 = v30;
  long long v31 = v5;
  long long v8 = v1[9];
  long long v9 = v1[11];
  long long v32 = v1[10];
  long long v10 = v32;
  long long v33 = v9;
  long long v11 = v1[5];
  long long v13 = v1[3];
  long long v26 = v1[4];
  long long v12 = v26;
  long long v27 = v11;
  long long v14 = v1[5];
  long long v15 = v1[7];
  long long v28 = v1[6];
  long long v16 = v28;
  long long v29 = v15;
  long long v17 = v1[1];
  v23[0] = *v1;
  v23[1] = v17;
  long long v18 = v1[3];
  long long v20 = *v1;
  long long v19 = v1[1];
  long long v24 = v1[2];
  long long v21 = v24;
  long long v25 = v18;
  *(_OWORD *)(a1 + 192) = v34;
  *(_OWORD *)(a1 + 208) = v4;
  *(_OWORD *)(a1 + 224) = v1[14];
  *(_OWORD *)(a1 + 128) = v6;
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 160) = v10;
  *(_OWORD *)(a1 + 176) = v3;
  *(_OWORD *)(a1 + 64) = v12;
  *(_OWORD *)(a1 + 80) = v14;
  *(_OWORD *)(a1 + 96) = v16;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)a1 = v20;
  *(_OWORD *)(a1 + 16) = v19;
  uint64_t v37 = *((void *)v1 + 30);
  *(void *)(a1 + 240) = *((void *)v1 + 30);
  *(_OWORD *)(a1 + 32) = v21;
  *(_OWORD *)(a1 + 48) = v13;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  return sub_1C0642468((uint64_t)v23);
}

uint64_t static FeedPaywall.groupContentSelectors(isBundleFreeTrialEligible:servicesBundleTrialEligible:servicesBundleUpsellScenario:isWebAccessAvailable:articleRole:numberOfOffers:activationEligibility:personalizedTopChannelsClause:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, unsigned __int8 *a9, uint64_t a10, unint64_t a11)
{
  return sub_1C0AD167C(a1, a2, a3, a4, a5, a6, a7 & 1, a8, a9, a10, a11);
}

void *sub_1C0AD15FC()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 48);
  char v2 = *(unsigned char *)(v0 + 49);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 112);
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 176);
  char v7 = *(unsigned char *)(v0 + 184);
  uint64_t v8 = *(void *)(v0 + 192);
  unint64_t v9 = *(void *)(v0 + 200);
  unsigned __int8 v13 = *(unsigned char *)(v0 + 136);
  uint64_t v10 = sub_1C0AD167C(v1, v3, v4, v5, v2, v6, v7, 1, &v13, v8, v9);
  long long v11 = sub_1BFE71F8C(v10);
  swift_bridgeObjectRelease();
  return v11;
}

NewsFeed::FeedPaywallButton __swiftcall FeedPaywallButton.init(primaryText:secondaryText:)(Swift::String primaryText, Swift::String_optional secondaryText)
{
  v2->value = primaryText;
  v2[1] = secondaryText;
  result.secondaryText = secondaryText;
  result.primaryText = primaryText;
  return result;
}

uint64_t sub_1C0AD167C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, unsigned __int8 *a9, uint64_t a10, unint64_t a11)
{
  int v56 = *a9;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  long long v11 = sub_1BFEF9B68(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v13 = v11[2];
  unint64_t v12 = v11[3];
  if (v13 >= v12 >> 1) {
    long long v11 = sub_1BFEF9B68((void *)(v12 > 1), v13 + 1, 1, v11);
  }
  v11[2] = v13 + 1;
  long long v14 = &v11[2 * v13];
  v14[4] = 0xD000000000000012;
  v14[5] = 0x80000001C161B770;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  unint64_t v16 = v11[2];
  unint64_t v15 = v11[3];
  unint64_t v17 = v16 + 1;
  if (v16 >= v15 >> 1) {
    long long v11 = sub_1BFEF9B68((void *)(v15 > 1), v16 + 1, 1, v11);
  }
  v11[2] = v17;
  long long v18 = &v11[2 * v16];
  v18[4] = 0xD00000000000001BLL;
  v18[5] = 0x80000001C161B790;
  uint64_t v58 = v11;
  if (a3 == 0x73676E69766173 && a4 == 0xE700000000000000) {
    goto LABEL_9;
  }
  if (sub_1C1520A9C())
  {
    unint64_t v17 = v11[2];
LABEL_9:
    unint64_t v19 = v11[3];
    if (v17 >= v19 >> 1) {
      long long v11 = sub_1BFEF9B68((void *)(v19 > 1), v17 + 1, 1, v11);
    }
    v11[2] = v17 + 1;
    long long v20 = &v11[2 * v17];
    long long v21 = "services-bundle-upsell-scenario-savings";
    unint64_t v22 = 0xD000000000000027;
LABEL_18:
    v20[4] = v22;
    v20[5] = (unint64_t)(v21 - 32) | 0x8000000000000000;
    uint64_t v58 = v11;
    goto LABEL_19;
  }
  if (a3 == 0x6465726563697270 && a4 == 0xEE006E6F69746375 || (sub_1C1520A9C() & 1) != 0)
  {
    unint64_t v24 = v11[2];
    unint64_t v23 = v11[3];
    if (v24 >= v23 >> 1) {
      long long v11 = sub_1BFEF9B68((void *)(v23 > 1), v24 + 1, 1, v11);
    }
    v11[2] = v24 + 1;
    long long v20 = &v11[2 * v24];
    long long v21 = "services-bundle-upsell-scenario-price-reduction";
    unint64_t v22 = 0xD00000000000002FLL;
    goto LABEL_18;
  }
  if (a3 == 0x756C617674736562 && a4 == 0xE900000000000065 || (sub_1C1520A9C() & 1) != 0)
  {
    unint64_t v47 = v11[2];
    unint64_t v46 = v11[3];
    if (v47 >= v46 >> 1) {
      long long v11 = sub_1BFEF9B68((void *)(v46 > 1), v47 + 1, 1, v11);
    }
    char v48 = a5;
    v11[2] = v47 + 1;
    uint64_t v49 = "services-bundle-upsell-scenario-best-value";
    goto LABEL_59;
  }
  if (a3 == 0x6974736567677573 && a4 == 0xEA00000000006E6FLL || (sub_1C1520A9C() & 1) != 0)
  {
    unint64_t v47 = v11[2];
    unint64_t v50 = v11[3];
    if (v47 >= v50 >> 1) {
      long long v11 = sub_1BFEF9B68((void *)(v50 > 1), v47 + 1, 1, v11);
    }
    char v48 = a5;
    v11[2] = v47 + 1;
    uint64_t v49 = "services-bundle-upsell-scenario-suggestion";
LABEL_59:
    uint64_t v51 = &v11[2 * v47];
    v51[4] = 0xD00000000000002ALL;
    v51[5] = (unint64_t)(v49 - 32) | 0x8000000000000000;
    uint64_t v58 = v11;
    if ((v48 & 1) == 0) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
LABEL_19:
  if ((a5 & 1) == 0) {
    goto LABEL_23;
  }
LABEL_20:
  unint64_t v26 = v11[2];
  unint64_t v25 = v11[3];
  if (v26 >= v25 >> 1) {
    long long v11 = sub_1BFEF9B68((void *)(v25 > 1), v26 + 1, 1, v11);
  }
  v11[2] = v26 + 1;
  long long v27 = &v11[2 * v26];
  v27[4] = 0xD000000000000014;
  v27[5] = 0x80000001C161B810;
  uint64_t v58 = v11;
LABEL_23:
  if ((a7 & 1) == 0)
  {
    uint64_t v28 = FCArticleRole.selector.getter();
    uint64_t v30 = v29;
    unint64_t v32 = v11[2];
    unint64_t v31 = v11[3];
    if (v32 >= v31 >> 1) {
      long long v11 = sub_1BFEF9B68((void *)(v31 > 1), v32 + 1, 1, v11);
    }
    v11[2] = v32 + 1;
    long long v33 = &v11[2 * v32];
    v33[4] = v28;
    v33[5] = v30;
    uint64_t v58 = v11;
  }
  if (a8 < 2)
  {
    if (v56 != 2) {
      goto LABEL_31;
    }
  }
  else
  {
    unint64_t v35 = v11[2];
    unint64_t v34 = v11[3];
    if (v35 >= v34 >> 1) {
      long long v11 = sub_1BFEF9B68((void *)(v34 > 1), v35 + 1, 1, v11);
    }
    v11[2] = v35 + 1;
    long long v36 = &v11[2 * v35];
    v36[4] = 0xD000000000000019;
    v36[5] = 0x80000001C161B7F0;
    uint64_t v58 = v11;
    if (v56 != 2)
    {
LABEL_31:
      if (v56) {
        uint64_t v37 = &unk_1F1B82460;
      }
      else {
        uint64_t v37 = &unk_1F1B82430;
      }
      uint64_t v38 = sub_1C00B818C((uint64_t)v37);
      swift_arrayDestroy();
      sub_1BFE72794(v38);
      if (!a11) {
        goto LABEL_35;
      }
      goto LABEL_38;
    }
  }
  if (!a11)
  {
LABEL_35:
    int64_t v39 = v58;
    goto LABEL_46;
  }
LABEL_38:
  uint64_t v40 = a10 & 0xFFFFFFFFFFFFLL;
  if ((a11 & 0x2000000000000000) != 0) {
    uint64_t v40 = HIBYTE(a11) & 0xF;
  }
  int64_t v39 = v58;
  if (v40)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v39 = sub_1BFEF9B68(0, v58[2] + 1, 1, v58);
    }
    unint64_t v42 = v39[2];
    unint64_t v41 = v39[3];
    if (v42 >= v41 >> 1) {
      int64_t v39 = sub_1BFEF9B68((void *)(v41 > 1), v42 + 1, 1, v39);
    }
    v39[2] = v42 + 1;
    uint64_t v43 = &v39[2 * v42];
    v43[4] = 0xD000000000000032;
    v43[5] = 0x80000001C161B7B0;
  }
LABEL_46:
  uint64_t v44 = sub_1BFEF4060((uint64_t)v39);
  swift_bridgeObjectRelease();
  return v44;
}

unint64_t sub_1C0AD1D4C()
{
  unint64_t result = qword_1EA1A34E8;
  if (!qword_1EA1A34E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A34E8);
  }
  return result;
}

unint64_t sub_1C0AD1DA0(uint64_t a1)
{
  unint64_t result = sub_1C0AD1DC8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0AD1DC8()
{
  unint64_t result = qword_1EA1A34F0;
  if (!qword_1EA1A34F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A34F0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SubscriptionActivationEligibility(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0AD1EE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionActivationEligibility()
{
  return &type metadata for SubscriptionActivationEligibility;
}

unint64_t destroy for FeedPaywall(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(a1 + 240);
  if (result >= 0x11)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FeedPaywall(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v8 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v8;
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v9 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v9;
  uint64_t v10 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v10;
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  uint64_t v11 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v11;
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  uint64_t v12 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v12;
  unint64_t v15 = (void *)(a2 + 232);
  unint64_t v13 = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13 >= 0x11)
  {
    *(void *)(a1 + 232) = *v15;
    *(void *)(a1 + 240) = v13;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 232) = *(_OWORD *)v15;
  }
  return a1;
}

uint64_t assignWithCopy for FeedPaywall(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v4;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  uint64_t v5 = *(void *)(a2 + 216);
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(void *)(a1 + 216) = v5;
  unint64_t v6 = *(void *)(a2 + 240);
  if (*(void *)(a1 + 240) >= 0x11uLL)
  {
    if (v6 >= 0x11)
    {
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C01A7564(a1 + 232);
    goto LABEL_6;
  }
  if (v6 < 0x11)
  {
LABEL_6:
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    return a1;
  }
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for FeedPaywall(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v10 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v12 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v13;
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  long long v14 = (void *)(a2 + 232);
  if (*(void *)(a1 + 240) >= 0x11uLL)
  {
    unint64_t v15 = *(void *)(a2 + 240);
    if (v15 >= 0x11)
    {
      *(void *)(a1 + 232) = *v14;
      *(void *)(a1 + 240) = v15;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C01A7564(a1 + 232);
  }
  *(_OWORD *)(a1 + 232) = *(_OWORD *)v14;
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedPaywall(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 248)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedPaywall(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 248) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 248) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedPaywall()
{
  return &type metadata for FeedPaywall;
}

ValueMetadata *type metadata accessor for FeedPaywallButton()
{
  return &type metadata for FeedPaywallButton;
}

uint64_t dispatch thunk of FormatError.errorDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FormatError.errorHint.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

id sub_1C0AD25C0()
{
  id result = sub_1BFC81AA4(0xD00000000000001ALL, 0x80000001C161B920);
  qword_1EB93C268 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for FeedConfigCoderFormatter()
{
  return self;
}

uint64_t sub_1C0AD261C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 2:
    case 4:
    case 5:
      goto LABEL_3;
    case 1:
      swift_bridgeObjectRetain();
      sub_1BFE60260(a2);
LABEL_3:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0AD26C4(uint64_t a1)
{
  return sub_1C0AD26D8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_1C0AD26D8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 2:
    case 4:
    case 5:
      goto LABEL_3;
    case 1:
      swift_bridgeObjectRelease();
      sub_1BFD7F858(a2);
LABEL_3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0AD2780(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1C0AD261C(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t sub_1C0AD27E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1C0AD261C(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  unint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1C0AD26D8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t sub_1C0AD2858(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1C0AD26D8(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t sub_1C0AD28A4(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 6) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_1C0AD28EC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 250;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C0AD2934(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 5u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_1C0AD294C(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(void *)uint64_t result = a2 - 6;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 6;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

uint64_t type metadata accessor for FeedServiceError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FormatBindExpression.init(identifier:kinds:count:traits:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t FormatBindExpression.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBindExpression.kinds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatBindExpression.count.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t FormatBindExpression.traits.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatBindExpression.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FormatBindExpression.identifier.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatBindExpression.kinds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*FormatBindExpression.kinds.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatBindExpression.count.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t (*FormatBindExpression.count.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatBindExpression.traits.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*FormatBindExpression.traits.modify())(void)
{
  return nullsub_1;
}

uint64_t _s8NewsFeed20FormatBindExpressionV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (!v8 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v9 = sub_1C00AC6B0(v2, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0 || v4 != v6) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v10 = sub_1C00ECAB4(v3, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

unint64_t sub_1C0AD2D04(uint64_t a1)
{
  unint64_t result = sub_1C0AD2D2C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0AD2D2C()
{
  unint64_t result = qword_1EA1A34F8;
  if (!qword_1EA1A34F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A34F8);
  }
  return result;
}

unint64_t sub_1C0AD2D80(void *a1)
{
  a1[1] = sub_1BFE661D4();
  a1[2] = sub_1BFE3F014();
  unint64_t result = sub_1C0AD2DB8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0AD2DB8()
{
  unint64_t result = qword_1EA1A3500;
  if (!qword_1EA1A3500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3500);
  }
  return result;
}

uint64_t sub_1C0AD2E0C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0AD2E18(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t sub_1C0AD2E5C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0AD2E68(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1C0AD2EAC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 24);
  return result;
}

void *sub_1C0AD2EB8(void *result, uint64_t a2)
{
  *(void *)(a2 + 24) = *result;
  return result;
}

uint64_t sub_1C0AD2EC4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0AD2ED0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = v3;
  return result;
}

void *assignWithCopy for FormatBindExpression(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatBindExpression(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatBindExpression()
{
  return &type metadata for FormatBindExpression;
}

uint64_t sub_1C0AD3004(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFECA284(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t FormatPaywallBinding.Bool.BOOL(from:)(uint64_t a1)
{
  if (!*v1) {
    return *(unsigned __int8 *)(a1 + 48);
  }
  if (*v1 == 1) {
    return *(unsigned __int8 *)(a1 + 49);
  }
  return *(void *)(a1 + 56) > 1;
}

unint64_t sub_1C0AD3090(char a1)
{
  unint64_t result = 0xD000000000000019;
  if (a1 == 1) {
    return 0xD000000000000014;
  }
  return result;
}

uint64_t sub_1C0AD30EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1487944(*a1, *a2);
}

uint64_t sub_1C0AD30F8()
{
  return sub_1C015E490();
}

uint64_t sub_1C0AD3100()
{
  return sub_1C0449E00();
}

uint64_t sub_1C0AD3108()
{
  return sub_1C044EF48();
}

uint64_t sub_1C0AD3110@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0AD3668();
  *a1 = result;
  return result;
}

unint64_t sub_1C0AD3140@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C0AD3090(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0AD316C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0AD31CC()
{
  return sub_1C151EAEC();
}

void sub_1C0AD321C(void *a1@<X8>)
{
  *a1 = &unk_1F1B6AB58;
}

BOOL static FormatPaywallBinding.Bool.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatPaywallBinding.Bool.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatPaywallBinding.Bool.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0AD32B8()
{
  unint64_t result = qword_1EA1A3508;
  if (!qword_1EA1A3508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3508);
  }
  return result;
}

unint64_t sub_1C0AD330C(uint64_t a1)
{
  unint64_t result = sub_1C0AD3334();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0AD3334()
{
  unint64_t result = qword_1EA1A3510;
  if (!qword_1EA1A3510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3510);
  }
  return result;
}

unint64_t sub_1C0AD3388(void *a1)
{
  a1[1] = sub_1C088A0F0();
  a1[2] = sub_1C08FAC08();
  unint64_t result = sub_1C0AD32B8();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0AD33C0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatPaywallBinding.Bool.init(from:)(a1, a2);
}

uint64_t sub_1C0AD33D8(void *a1)
{
  return FormatPaywallBinding.Bool.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatPaywallBinding.Bool()
{
  return &type metadata for FormatPaywallBinding.Bool;
}

unsigned char *_s4BoolOwst_4_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0AD34D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4BoolO10CodingTypeOMa_2()
{
  return &_s4BoolO10CodingTypeON_2;
}

unint64_t sub_1C0AD350C()
{
  unint64_t result = qword_1EA1A3518;
  if (!qword_1EA1A3518)
  {
    sub_1C0AD3564();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3518);
  }
  return result;
}

void sub_1C0AD3564()
{
  if (!qword_1EA1A3520)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A3520);
    }
  }
}

unint64_t sub_1C0AD35C0()
{
  unint64_t result = qword_1EA1A3528;
  if (!qword_1EA1A3528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3528);
  }
  return result;
}

unint64_t sub_1C0AD3614()
{
  unint64_t result = qword_1EA1A3530;
  if (!qword_1EA1A3530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3530);
  }
  return result;
}

uint64_t sub_1C0AD3668()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

char *sub_1C0AD36B4(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationHeaderView_titleLabel;
  id v11 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  char v12 = v4;
  id v13 = objc_msgSend(v11, sel_init);
  long long v14 = self;
  id v15 = objc_msgSend(v14, sel_systemFontOfSize_weight_, 20.0, *MEMORY[0x1E4FB09B8]);
  objc_msgSend(v13, sel_setFont_, v15);

  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v5[v10] = v13;
  uint64_t v16 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationHeaderView_subHeaderLabel;
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v18 = objc_msgSend(v14, sel_systemFontOfSize_weight_, 14.0, *MEMORY[0x1E4FB09D8]);
  objc_msgSend(v17, sel_setFont_, v18);

  id v19 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v17, sel_setTextColor_, v19);

  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v12[v16] = v17;

  v51.receiver = v12;
  v51.super_class = ObjectType;
  long long v20 = (char *)objc_msgSendSuper2(&v51, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v21 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationHeaderView_titleLabel;
  unint64_t v22 = *(void **)&v20[OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationHeaderView_titleLabel];
  unint64_t v23 = v20;
  objc_msgSend(v23, sel_addSubview_, v22);
  uint64_t v24 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationHeaderView_subHeaderLabel;
  objc_msgSend(v23, sel_addSubview_, *(void *)&v23[OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationHeaderView_subHeaderLabel]);
  id v50 = self;
  sub_1BFE4DBE0();
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1C152F080;
  id v26 = objc_msgSend(v22, sel_topAnchor);
  id v27 = objc_msgSend(v23, (SEL)&selRef_setTailIndent_ + 3);
  id v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v27, 8.0);

  *(void *)(v25 + 32) = v28;
  id v29 = objc_msgSend(*(id *)&v20[v21], sel_leadingAnchor);
  id v30 = objc_msgSend(v23, (SEL)&selRef_systemImageNamed_withConfiguration_ + 2);
  id v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v30, 4.0);

  *(void *)(v25 + 40) = v31;
  id v32 = objc_msgSend(*(id *)&v20[v21], sel_trailingAnchor);
  id v33 = objc_msgSend(v23, sel_trailingAnchor);
  id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, -16.0);

  *(void *)(v25 + 48) = v34;
  id v35 = objc_msgSend(*(id *)&v23[v24], sel_topAnchor);
  id v36 = objc_msgSend(*(id *)&v20[v21], sel_bottomAnchor);
  id v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v36, 2.0);

  *(void *)(v25 + 56) = v37;
  id v38 = objc_msgSend(*(id *)&v23[v24], sel_leadingAnchor);
  id v39 = objc_msgSend(v23, sel_leadingAnchor);
  id v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_constant_, v39, 4.0);

  *(void *)(v25 + 64) = v40;
  id v41 = objc_msgSend(*(id *)&v23[v24], sel_trailingAnchor);
  id v42 = objc_msgSend(v23, sel_trailingAnchor);
  id v43 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v42, -16.0);

  *(void *)(v25 + 72) = v43;
  id v44 = objc_msgSend(*(id *)&v23[v24], sel_bottomAnchor);
  id v45 = objc_msgSend(v23, sel_bottomAnchor);
  id v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_constant_, v45, -8.0);

  *(void *)(v25 + 80) = v46;
  sub_1C151EBEC();
  sub_1C03767D0();
  unint64_t v47 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v50, sel_activateConstraints_, v47);

  return v23;
}

id sub_1C0AD3C28(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationHeaderView_titleLabel;
  id v3 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  unsigned int v4 = v1;
  id v5 = objc_msgSend(v3, sel_init);
  unsigned int v6 = self;
  id v7 = objc_msgSend(v6, sel_systemFontOfSize_weight_, 20.0, *MEMORY[0x1E4FB09B8]);
  objc_msgSend(v5, sel_setFont_, v7);

  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v1[v2] = v5;
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationHeaderView_subHeaderLabel;
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v10 = objc_msgSend(v6, sel_systemFontOfSize_weight_, 14.0, *MEMORY[0x1E4FB09D8]);
  objc_msgSend(v9, sel_setFont_, v10);

  id v11 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v9, sel_setTextColor_, v11);

  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v4[v8] = v9;

  v16.receiver = v4;
  v16.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v16, sel_initWithCoder_, a1);

  return v12;
}

uint64_t type metadata accessor for DebugPersonalizationHeaderView()
{
  return self;
}

void sub_1C0AD3E88()
{
  sub_1C0AD3F14((unint64_t *)&unk_1EA1AFBD0);
  JUMPOUT(0x1C18C4650);
}

uint64_t sub_1C0AD3EE0()
{
  return sub_1C0AD3F14(&qword_1EA1A3548);
}

uint64_t sub_1C0AD3F14(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DebugPersonalizationHeaderView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static FormatIssueCoverBinding.== infix(_:_:)(unsigned char *a1, unsigned char *a2)
{
  if (*a1)
  {
    if ((*a2 & 1) == 0) {
      return 0;
    }
  }
  else if (*a2)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_1C0AD3F78(uint64_t a1)
{
  unint64_t result = sub_1C0AD3FA0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0AD3FA0()
{
  unint64_t result = qword_1EA1A3550;
  if (!qword_1EA1A3550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3550);
  }
  return result;
}

unint64_t sub_1C0AD3FF4(void *a1)
{
  a1[1] = sub_1BFC90268();
  a1[2] = sub_1C007302C();
  unint64_t result = sub_1C0AD402C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0AD402C()
{
  unint64_t result = qword_1EA1A3558;
  if (!qword_1EA1A3558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3558);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatIssueCoverBinding()
{
  return &type metadata for FormatIssueCoverBinding;
}

double FormatShadow.radius.getter()
{
  return *(double *)v0;
}

__n128 FormatShadow.init(radius:opacity:offset:color:motion:)@<Q0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, float a6@<S1>)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *(void *)(a3 + 32);
  char v8 = *(unsigned char *)(a3 + 40);
  *(double *)a4 = a5;
  *(float *)(a4 + 8) = a6;
  *(_OWORD *)(a4 + 16) = *a1;
  *(void *)(a4 + 32) = v6;
  __n128 result = *(__n128 *)a3;
  long long v10 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 40) = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 56) = v10;
  *(void *)(a4 + 72) = v7;
  *(unsigned char *)(a4 + 80) = v8;
  return result;
}

float FormatShadow.opacity.getter()
{
  return *(float *)(v0 + 8);
}

__n128 FormatShadow.offset.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = v1[1];
  *a1 = result;
  return result;
}

void FormatShadow.Offset.init(height:width:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  *a1 = a2;
  a1[1] = a3;
}

double FormatShadow.Offset.size.getter()
{
  return *(double *)(v0 + 8);
}

void FormatShadow.radius.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*FormatShadow.radius.modify())(void)
{
  return nullsub_1;
}

void FormatShadow.opacity.setter(float a1)
{
  *(float *)(v1 + 8) = a1;
}

uint64_t (*FormatShadow.opacity.modify())(void)
{
  return nullsub_1;
}

__n128 FormatShadow.offset.setter(__n128 *a1)
{
  __n128 result = *a1;
  v1[1] = *a1;
  return result;
}

uint64_t (*FormatShadow.offset.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatShadow.color.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_release();
  *(void *)(v1 + 32) = v2;
  return result;
}

uint64_t (*FormatShadow.color.modify())(void)
{
  return nullsub_1;
}

__n128 FormatShadow.motion.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  char v3 = *(unsigned char *)(v1 + 80);
  __n128 result = *(__n128 *)(v1 + 40);
  long long v5 = *(_OWORD *)(v1 + 56);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 40) = v3;
  return result;
}

BOOL static FormatShadow.Offset.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

double _s8NewsFeed12FormatShadowV6OffsetV4zeroAEvgZ_0@<D0>(_OWORD *a1@<X8>)
{
  if (qword_1EB881A88 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_1EB894638;
  *a1 = xmmword_1EB894638;
  return result;
}

BOOL static FormatCodingZeroOffsetStrategy.shouldEncode(wrappedValue:)(double *a1)
{
  double v1 = *a1;
  double v2 = a1[1];
  if (qword_1EB881A88 != -1) {
    swift_once();
  }
  return v2 != *((double *)&xmmword_1EB894638 + 1) || v1 != *(double *)&xmmword_1EB894638;
}

BOOL sub_1C0AD4310(double *a1)
{
  double v1 = *a1;
  double v2 = a1[1];
  if (qword_1EB881A88 != -1) {
    swift_once();
  }
  return v2 != *((double *)&xmmword_1EB894638 + 1) || v1 != *(double *)&xmmword_1EB894638;
}

uint64_t _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2
    || *(float *)(a1 + 8) != *(float *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16)
    || *(double *)(a1 + 24) != *(double *)(a2 + 24))
  {
    return 0;
  }
  long long v13 = *(_OWORD *)(a1 + 56);
  long long v14 = *(_OWORD *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 72);
  int v6 = *(unsigned __int8 *)(a1 + 80);
  long long v11 = *(_OWORD *)(a2 + 56);
  long long v12 = *(_OWORD *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 72);
  int v8 = *(unsigned __int8 *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 32);
  *(void *)&v18[0] = *(void *)(a1 + 32);
  *(void *)&v15[0] = v9;
  if ((static FormatColor.== infix(_:_:)((uint64_t *)v18, (unint64_t *)v15) & 1) == 0) {
    return 0;
  }
  if (v6 == 255)
  {
    if (v8 != 255) {
      return 0;
    }
  }
  else
  {
    v18[0] = v14;
    v18[1] = v13;
    uint64_t v19 = v5;
    char v20 = v6;
    if (v8 == 255) {
      return 0;
    }
    v15[0] = v12;
    v15[1] = v11;
    uint64_t v16 = v7;
    char v17 = v8;
    if ((_s8NewsFeed12FormatMotionO2eeoiySbAC_ACtFZ_0((uint64_t)v18, (uint64_t)v15) & 1) == 0) {
      return 0;
    }
  }
  return 1;
}

unint64_t sub_1C0AD4478(uint64_t a1)
{
  unint64_t result = sub_1C0AD44A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0AD44A0()
{
  unint64_t result = qword_1EA1A3560;
  if (!qword_1EA1A3560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3560);
  }
  return result;
}

uint64_t sub_1C0AD44F4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0AD4644(a1, a2, a3, (uint64_t (*)(void))sub_1BFD54B88, (uint64_t (*)(void))sub_1BFD8DFD4, (uint64_t (*)(void))sub_1C0AD4534);
}

unint64_t sub_1C0AD4534()
{
  unint64_t result = qword_1EA1A3568;
  if (!qword_1EA1A3568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3568);
  }
  return result;
}

unint64_t sub_1C0AD4588(uint64_t a1)
{
  unint64_t result = sub_1C0AD45B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0AD45B0()
{
  unint64_t result = qword_1EA1A3570;
  if (!qword_1EA1A3570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3570);
  }
  return result;
}

uint64_t sub_1C0AD4604(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0AD4644(a1, a2, a3, (uint64_t (*)(void))sub_1BFE94124, (uint64_t (*)(void))sub_1BFFC87B4, (uint64_t (*)(void))sub_1C0AD4698);
}

uint64_t sub_1C0AD4644(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0AD4698()
{
  unint64_t result = qword_1EA1A3578;
  if (!qword_1EA1A3578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3578);
  }
  return result;
}

unint64_t sub_1C0AD46EC(uint64_t a1)
{
  unint64_t result = sub_1C0AD4714();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0AD4714()
{
  unint64_t result = qword_1EA1A3580;
  if (!qword_1EA1A3580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3580);
  }
  return result;
}

double sub_1C0AD4770@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

double sub_1C0AD477C(double *a1, void *a2)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

float sub_1C0AD4788@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result = *(float *)(a1 + 8);
  *a2 = result;
  return result;
}

float sub_1C0AD4794(float *a1, uint64_t a2)
{
  float result = *a1;
  *(float *)(a2 + 8) = *a1;
  return result;
}

__n128 sub_1C0AD47A0@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[1];
  *a2 = result;
  return result;
}

__n128 sub_1C0AD47AC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1] = *a1;
  return result;
}

uint64_t sub_1C0AD47B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 32);
  return swift_retain();
}

uint64_t sub_1C0AD47C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 32) = v3;
  return result;
}

uint64_t destroy for FormatShadow()
{
  return swift_release();
}

uint64_t initializeWithCopy for FormatShadow(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatShadow(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  long long v4 = *(_OWORD *)(a2 + 40);
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  *(_OWORD *)(a1 + 56) = v5;
  *(_OWORD *)(a1 + 40) = v4;
  return a1;
}

uint64_t assignWithTake for FormatShadow(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  return a1;
}

ValueMetadata *type metadata accessor for FormatShadow()
{
  return &type metadata for FormatShadow;
}

ValueMetadata *type metadata accessor for FormatShadow.Offset()
{
  return &type metadata for FormatShadow.Offset;
}

ValueMetadata *type metadata accessor for FormatCodingZeroOffsetStrategy()
{
  return &type metadata for FormatCodingZeroOffsetStrategy;
}

void *sub_1C0AD49A4(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v5 = *(void *)(a1 + 32);
  uint64_t v47 = *(void *)(a1 + 48);
  uint64_t v48 = *(void *)(a1 + 40);
  uint64_t v45 = *(void *)(a1 + 64);
  uint64_t v46 = *(void *)(a1 + 56);
  uint64_t v44 = *(void *)(a1 + 72);
  int v6 = *(unsigned __int8 *)(a1 + 80);
  int v42 = v6;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  id v43 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v7);
  sub_1C0181BEC(0);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 72);
  unint64_t v10 = (*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v11 = swift_allocObject();
  BOOL v12 = v6 == 254;
  unsigned __int8 v13 = v6 == 254;
  *(_OWORD *)(v11 + 16) = xmmword_1C152C7E0;
  uint64_t v52 = v1;
  uint64_t v53 = v11;
  unint64_t v14 = v11 + v10;
  if (v12) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = v1;
  }
  uint64_t v50 = v3;
  uint64_t v51 = v2;
  if (v12) {
    uint64_t v16 = 0;
  }
  else {
    uint64_t v16 = v2;
  }
  unint64_t v17 = 0xF000000000000007;
  uint64_t v49 = v5;
  if (!v12) {
    unint64_t v17 = v5;
  }
  uint64_t v41 = v17;
  if (v12) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = v4;
  }
  if (v12) {
    uint64_t v3 = 0;
  }
  sub_1C042F1BC(0x737569646152, 0xE600000000000000, v15, v13, (void *)(v11 + v10));
  uint64_t v19 = type metadata accessor for FormatInspectionItem(0);
  char v20 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v14, 0, 1, v19);
  LOBYTE(v55) = v13;
  sub_1C0437250(0x7974696361704FLL, 0xE700000000000000, v16 | ((unint64_t)v13 << 32), (void *)(v14 + v9));
  v20(v14 + v9, 0, 1, v19);
  sub_1C04374E0(0x74657366664FLL, 0xE600000000000000, v18, v3, v13, (void *)(v14 + 2 * v9));
  v20(v14 + 2 * v9, 0, 1, v19);
  sub_1C0433BC8(0x726F6C6F43, 0xE500000000000000, v41, (void *)(v14 + 3 * v9));
  v20(v14 + 3 * v9, 0, 1, v19);
  sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v43);
  uint64_t v21 = swift_initStackObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C1529AE0;
  if (v42 == 254)
  {
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    char v27 = -1;
    uint64_t v29 = v47;
    uint64_t v28 = v48;
    uint64_t v31 = v45;
    uint64_t v30 = v46;
    uint64_t v32 = v44;
  }
  else
  {
    uint64_t v29 = v47;
    uint64_t v28 = v48;
    uint64_t v22 = v48;
    uint64_t v23 = v47;
    uint64_t v31 = v45;
    uint64_t v30 = v46;
    uint64_t v24 = v46;
    uint64_t v25 = v45;
    uint64_t v32 = v44;
    uint64_t v26 = v44;
    char v27 = v42;
  }
  *(void *)&long long v55 = v22;
  *((void *)&v55 + 1) = v23;
  id v33 = (void *)(v14 + 4 * v9);
  *(void *)&long long v56 = v24;
  *((void *)&v56 + 1) = v25;
  uint64_t v57 = v26;
  char v58 = v27;
  sub_1BFEF8708(v52, v51, v50, v4, v49, v28, v29, v30, v31, v32, v42);
  id v34 = sub_1C0BA2EF0((uint64_t)&v55);
  *(void *)(v21 + 56) = &type metadata for FormatInspection;
  *(void *)(v21 + 64) = &off_1F1C29D30;
  *(void *)(v21 + 32) = v34;
  uint64_t v35 = sub_1C0233FC8(v21);
  swift_setDeallocating();
  sub_1C01004D8();
  swift_arrayDestroy();
  id v36 = sub_1C131B79C(v35);
  swift_bridgeObjectRelease();
  sub_1C042F458(0xD000000000000013, 0x80000001C161B9B0, (uint64_t)v36, 0, 0, v33);
  v20((unint64_t)v33, 0, 1, v19);
  sub_1C09BCFA4(0x776F64616853, 0xE600000000000000, 0, 0, v53, &v55);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v37 = swift_allocObject();
  *(void *)(inited + 32) = v37;
  *(void *)(v37 + 48) = v57;
  long long v38 = v56;
  *(_OWORD *)(v37 + 16) = v55;
  *(_OWORD *)(v37 + 32) = v38;
  id v39 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v39;
}

uint64_t sub_1C0AD4EBC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id StubImageDownloader.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id StubImageDownloader.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id StubImageDownloader.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t FormatSupplementaryNodeLayoutAttributes.__allocating_init(layoutAttributes:style:resizing:contextLayoutOptions:zIndex:pinTrait:rubberbandTrait:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *a3;
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  *(void *)(v16 + 32) = v17;
  *(void *)(v16 + 40) = a4;
  *(void *)(v16 + 48) = a5;
  *(unsigned char *)(v16 + 56) = a6 & 1;
  sub_1BFFFA894(a7, v16 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, &qword_1EB87C7F8, MEMORY[0x1E4FAD3E0]);
  sub_1BFFFA894(a8, v16 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, &qword_1EB882B90, MEMORY[0x1E4FAD628]);
  return v16;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatSupplementaryNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatSupplementaryNodeLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
  return swift_retain();
}

uint64_t FormatSupplementaryNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatSupplementaryNodeLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t FormatSupplementaryNodeLayoutAttributes.pinTrait.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFD3E2B4(v1 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, a1, &qword_1EB87C7F8, MEMORY[0x1E4FAD3E0]);
}

uint64_t FormatSupplementaryNodeLayoutAttributes.rubberbandTrait.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFD3E2B4(v1 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, a1, &qword_1EB882B90, MEMORY[0x1E4FAD628]);
}

uint64_t FormatSupplementaryNodeLayoutAttributes.init(layoutAttributes:style:resizing:contextLayoutOptions:zIndex:pinTrait:rubberbandTrait:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = *a3;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 48) = a5;
  *(unsigned char *)(v8 + 56) = a6 & 1;
  sub_1BFFFA894(a7, v8 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, &qword_1EB87C7F8, MEMORY[0x1E4FAD3E0]);
  sub_1BFFFA894(a8, v8 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, &qword_1EB882B90, MEMORY[0x1E4FAD628]);
  return v8;
}

double FormatSupplementaryNodeLayoutAttributes.frame.getter()
{
  return *(double *)(*(void *)(v0 + 16) + 16);
}

uint64_t FormatSupplementaryNodeLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.itemIdentifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.layoutValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementaryNodeLayoutAttributes.accessibilityValues.getter()
{
  return swift_bridgeObjectRetain();
}

void FormatSupplementaryNodeLayoutAttributes.accessibilityRole.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(v1 + 16) + 128);
}

unint64_t sub_1C0AD52F4(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C797473;
      break;
    case 2:
      unint64_t result = 0x676E697A69736572;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x7865646E497ALL;
      break;
    case 5:
      unint64_t result = 0x74696172546E6970;
      break;
    case 6:
      unint64_t result = 0x6162726562627572;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0AD53E4()
{
  return sub_1C0AD52F4(*v0);
}

uint64_t sub_1C0AD53EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0AD67F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0AD5414(uint64_t a1)
{
  unint64_t v2 = sub_1C0AD590C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0AD5450(uint64_t a1)
{
  unint64_t v2 = sub_1C0AD590C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatSupplementaryNodeLayoutAttributes.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFCB3A60(v0 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, &qword_1EB87C7F8, MEMORY[0x1E4FAD3E0]);
  sub_1BFCB3A60(v0 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, &qword_1EB882B90, MEMORY[0x1E4FAD628]);
  return v0;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0AD60C0(0, &qword_1EA1A3588, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0AD590C();
  sub_1C1520F0C();
  uint64_t v12 = v3[2];
  HIBYTE(v11) = 0;
  type metadata accessor for FormatLayoutAttributes();
  sub_1BFFD3EB0(&qword_1EB88A8A8, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v12 = v3[3];
    HIBYTE(v11) = 1;
    type metadata accessor for FormatSupplementaryNodeStyle();
    sub_1BFFD3EB0(&qword_1EB8686B8, (void (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeStyle);
    sub_1C152078C();
    uint64_t v12 = v3[4];
    HIBYTE(v11) = 2;
    sub_1C026063C();
    sub_1C152078C();
    uint64_t v12 = v3[5];
    HIBYTE(v11) = 3;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BFFD3EB0(&qword_1EA198B58, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C152080C();
    LOBYTE(v12) = 4;
    sub_1C152077C();
    LOBYTE(v12) = 5;
    sub_1C151C37C();
    sub_1BFFD3EB0(&qword_1EA1A3598, MEMORY[0x1E4FAD3E0]);
    sub_1C152078C();
    LOBYTE(v12) = 6;
    sub_1C151C69C();
    sub_1BFFD3EB0(&qword_1EA1A35A0, MEMORY[0x1E4FAD628]);
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0AD590C()
{
  unint64_t result = qword_1EA1A3590;
  if (!qword_1EA1A3590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3590);
  }
  return result;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatSupplementaryNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t *FormatSupplementaryNodeLayoutAttributes.init(from:)(void *a1)
{
  uint64_t v28 = *v1;
  uint64_t v29 = v2;
  sub_1BFD3E320(0, &qword_1EB882B90, MEMORY[0x1E4FAD628]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v23 - v5;
  sub_1BFD3E320(0, &qword_1EB87C7F8, MEMORY[0x1E4FAD3E0]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v23 - v8;
  sub_1C0AD60C0(0, &qword_1EA1A35A8, MEMORY[0x1E4FBBDC0]);
  uint64_t v26 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unsigned __int8 v13 = (char *)&v23 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0AD590C();
  char v27 = v13;
  unint64_t v14 = v29;
  sub_1C1520EBC();
  if (v14)
  {
LABEL_7:
    swift_deallocPartialClassInstance();
    uint64_t v22 = (uint64_t)a1;
    goto LABEL_8;
  }
  uint64_t v29 = v6;
  uint64_t v15 = v11;
  type metadata accessor for FormatLayoutAttributes();
  char v30 = 0;
  sub_1BFFD3EB0(&qword_1EB88A8B0, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
  uint64_t v16 = v26;
  sub_1C15206EC();
  v1[2] = v31;
  type metadata accessor for FormatSupplementaryNodeStyle();
  char v30 = 1;
  sub_1BFFD3EB0(&qword_1EB88D080, (void (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeStyle);
  sub_1C152065C();
  v1[3] = v31;
  char v30 = 2;
  sub_1C0260F28();
  sub_1C152065C();
  v1[4] = v31;
  type metadata accessor for FormatContextLayoutOptions();
  uint64_t v25 = 0;
  char v30 = 3;
  sub_1BFFD3EB0(&qword_1EA198B88, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
  uint64_t v17 = v25;
  uint64_t v18 = v25;
  sub_1C15206EC();
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v27, v16);
    swift_release();
    swift_release();
    if (!v17) {
      swift_release();
    }
    goto LABEL_7;
  }
  uint64_t v24 = a1;
  v1[5] = v31;
  LOBYTE(v31) = 4;
  v1[6] = sub_1C152063C();
  *((unsigned char *)v1 + 56) = v19 & 1;
  sub_1C151C37C();
  LOBYTE(v31) = 5;
  sub_1BFFD3EB0(&qword_1EA1A35B0, MEMORY[0x1E4FAD3E0]);
  sub_1C152065C();
  sub_1BFFFA894((uint64_t)v9, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, &qword_1EB87C7F8, MEMORY[0x1E4FAD3E0]);
  sub_1C151C69C();
  LOBYTE(v31) = 6;
  sub_1BFFD3EB0(&qword_1EA1A35B8, MEMORY[0x1E4FAD628]);
  uint64_t v20 = (uint64_t)v29;
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v27, v16);
  sub_1BFFFA894(v20, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, &qword_1EB882B90, MEMORY[0x1E4FAD628]);
  uint64_t v22 = (uint64_t)v24;
LABEL_8:
  __swift_destroy_boxed_opaque_existential_1(v22);
  return v1;
}

void sub_1C0AD60C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0AD590C();
    unint64_t v7 = a3(a1, &type metadata for FormatSupplementaryNodeLayoutAttributes.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t *sub_1C0AD6124@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  unint64_t result = FormatSupplementaryNodeLayoutAttributes.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0AD617C(void *a1)
{
  return FormatSupplementaryNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C0AD61A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatSupplementaryNodeLayoutAttributes.flipRightToLeft(bounds:)();
  *a1 = result;
  return result;
}

uint64_t FormatSupplementaryNodeLayoutAttributes.flipRightToLeft(bounds:)()
{
  uint64_t v1 = v0;
  uint64_t v21 = (void (*)(uint64_t))MEMORY[0x1E4FAD628];
  sub_1BFD3E320(0, &qword_1EB882B90, MEMORY[0x1E4FAD628]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v20 = (uint64_t)&v18 - v3;
  uint64_t v4 = (void (*)(uint64_t))MEMORY[0x1E4FAD3E0];
  sub_1BFD3E320(0, &qword_1EB87C7F8, MEMORY[0x1E4FAD3E0]);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v18 - v6;
  uint64_t v22 = *(void *)(v0 + 16);
  type metadata accessor for FormatLayoutAttributes();
  sub_1BFFD3EB0(&qword_1EB88A8A0, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
  sub_1C151798C();
  uint64_t v8 = v23;
  uint64_t v10 = *(void *)(v0 + 24);
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 40);
  uint64_t v19 = *(void *)(v1 + 48);
  char v12 = *(unsigned char *)(v1 + 56);
  sub_1BFD3E2B4(v1 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, (uint64_t)v7, &qword_1EB87C7F8, v4);
  uint64_t v13 = v1 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait;
  uint64_t v15 = v20;
  unint64_t v14 = v21;
  sub_1BFD3E2B4(v13, v20, &qword_1EB882B90, v21);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v8;
  *(void *)(v16 + 24) = v10;
  *(void *)(v16 + 32) = v9;
  *(void *)(v16 + 40) = v11;
  *(void *)(v16 + 48) = v19;
  *(unsigned char *)(v16 + 56) = v12;
  sub_1BFFFA894((uint64_t)v7, v16 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, &qword_1EB87C7F8, v4);
  sub_1BFFFA894(v15, v16 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, &qword_1EB882B90, v14);
  swift_retain();
  swift_retain();
  swift_retain();
  return v16;
}

uint64_t sub_1C0AD6468()
{
  return sub_1BFFD3EB0(&qword_1EA1A35C0, (void (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeLayoutAttributes);
}

uint64_t sub_1C0AD64B0()
{
  return sub_1BFFD3EB0(&qword_1EA1A35C8, (void (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeLayoutAttributes);
}

uint64_t sub_1C0AD64F8()
{
  return sub_1BFFD3EB0(&qword_1EA1A35D0, (void (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeLayoutAttributes);
}

uint64_t sub_1C0AD6540()
{
  return sub_1BFFD3EB0(&qword_1EA1A35D8, (void (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeLayoutAttributes);
}

uint64_t sub_1C0AD6588()
{
  return type metadata accessor for FormatSupplementaryNodeLayoutAttributes();
}

uint64_t method lookup function for FormatSupplementaryNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatSupplementaryNodeLayoutAttributes);
}

uint64_t dispatch thunk of FormatSupplementaryNodeLayoutAttributes.__allocating_init(layoutAttributes:style:resizing:contextLayoutOptions:zIndex:pinTrait:rubberbandTrait:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v6 + 136))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t dispatch thunk of FormatSupplementaryNodeLayoutAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

unsigned char *storeEnumTagSinglePayload for FormatSupplementaryNodeLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0AD66B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSupplementaryNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatSupplementaryNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1C0AD66F0()
{
  unint64_t result = qword_1EA1A35E0;
  if (!qword_1EA1A35E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A35E0);
  }
  return result;
}

unint64_t sub_1C0AD6748()
{
  unint64_t result = qword_1EA1A35E8;
  if (!qword_1EA1A35E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A35E8);
  }
  return result;
}

unint64_t sub_1C0AD67A0()
{
  unint64_t result = qword_1EA1A35F0;
  if (!qword_1EA1A35F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A35F0);
  }
  return result;
}

uint64_t sub_1C0AD67F4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001C1608CE0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1608D00 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74696172546E6970 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6162726562627572 && a2 == 0xEF7469617254646ELL)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t getEnumTagSinglePayload for WebEmbedDataVisualizationURLDataSourceContentType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for FormatCodingKeys()
{
  return &type metadata for FormatCodingKeys;
}

uint64_t sub_1C0AD6B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1C0AD6C34(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

double sub_1C0AD6B84@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C158A220;
  return result;
}

uint64_t sub_1C0AD6B94(uint64_t a1)
{
  unint64_t v2 = sub_1BFEB6A24();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0AD6BD0(uint64_t a1)
{
  unint64_t v2 = sub_1BFEB6A24();
  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1C0AD6C0C(uint64_t a1)
{
  unint64_t result = sub_1BFEB6A24();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0AD6C34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2
    || (uint64_t v4 = a1, (sub_1C1520A9C() & 1) != 0)
    || v4 == 1635017060 && a2 == 0xE400000000000000
    || (sub_1C1520A9C() & 1) != 0
    || v4 == 0x617461646174656DLL && a2 == 0xE800000000000000
    || (sub_1C1520A9C() & 1) != 0
    || v4 == 1885433183 && a2 == 0xE400000000000000
    || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

uint64_t sub_1C0AD6DC8(uint64_t *a1)
{
  sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v25[-v8];
  MEMORY[0x1F4188790](v10);
  char v12 = &v25[-v11];
  uint64_t v13 = type metadata accessor for FormatDerivedDataBindingItemResult();
  sub_1C034CEE0((uint64_t)a1 + *(int *)(v13 + 20), (uint64_t)v12);
  uint64_t v14 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14);
  sub_1C034CF60((uint64_t)v12);
  if (v16 == 1)
  {
    sub_1C0AD708C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    uint64_t v18 = *a1;
    unint64_t v19 = a1[1];
    *(void *)(inited + 32) = *a1;
    *(void *)(inited + 40) = v19;
    sub_1BFE74E64(v18, v19);
    uint64_t v20 = sub_1C00B8CBC(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v21 = (char *)v6 + *(int *)(v14 + 36);
    uint64_t v22 = sub_1C1518CDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
    *unsigned int v6 = 0x100000001;
    uint64_t v23 = MEMORY[0x1E4FBC860];
    v6[1] = v20;
    v6[2] = v23;
    v6[3] = 0;
    v6[4] = 0;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v6, 0, 1, v14);
    sub_1C0F9F6C4(v1, (uint64_t)v6, (uint64_t)v9);
    uint64_t result = sub_1C034CF60((uint64_t)v6);
    if (!v2) {
      return sub_1C034D148((uint64_t)v9, v1);
    }
  }
  else
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1C00DAB28();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  return result;
}

void sub_1C0AD708C()
{
  if (!qword_1EB880EA8)
  {
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB880EA8);
    }
  }
}

uint64_t *sub_1C0AD70E4(uint64_t *a1, uint64_t *a2)
{
  sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t v7 = type metadata accessor for FormatSlotDefinitionItemSet();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v10 = a2[2];
      a1[1] = a2[1];
      a1[2] = v10;
      uint64_t v11 = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v11)
      {
        uint64_t v12 = a2[4];
        a1[3] = v11;
        a1[4] = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
      }
      uint64_t v13 = *(int *)(v7 + 36);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_1C1518CDC();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1C0AD7390(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v4 = a1 + *(int *)(v2 + 36);
    uint64_t v5 = sub_1C1518CDC();
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v5);
    if (!result)
    {
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
      return v6(v4, v5);
    }
  }
  return result;
}

void *sub_1C0AD74D0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t v8 = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      uint64_t v9 = a2[4];
      a1[3] = v8;
      a1[4] = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    }
    uint64_t v10 = *(int *)(v4 + 36);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_1C1518CDC();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

uint64_t sub_1C0AD773C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_1C034D0EC(a1);
      goto LABEL_7;
    }
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(a2 + 24);
    if (*(void *)(a1 + 24))
    {
      if (v13)
      {
        *(void *)(a1 + 24) = v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_22:
        uint64_t v21 = *(int *)(v4 + 36);
        uint64_t v22 = (void *)(a1 + v21);
        a2 += v21;
        uint64_t v23 = sub_1C1518CDC();
        uint64_t v24 = *(void *)(v23 - 8);
        uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
        int v26 = v25(v22, 1, v23);
        int v27 = v25((void *)a2, 1, v23);
        if (v26)
        {
          if (!v27)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v24 + 16))(v22, a2, v23);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v22, 0, 1, v23);
            return a1;
          }
        }
        else
        {
          if (!v27)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v24 + 24))(v22, a2, v23);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v24 + 8))(v22, v23);
        }
        sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        size_t v11 = *(void *)(*(void *)(v28 - 8) + 64);
        uint64_t v12 = v22;
        goto LABEL_8;
      }
      sub_1C034DE40(a1 + 24);
    }
    else if (v13)
    {
      *(void *)(a1 + 24) = v13;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_22;
    }
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    goto LABEL_22;
  }
  if (v8)
  {
LABEL_7:
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    size_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
    uint64_t v12 = (void *)a1;
LABEL_8:
    memcpy(v12, (const void *)a2, v11);
    return a1;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  uint64_t v14 = *(int *)(v4 + 36);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_1C1518CDC();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *sub_1C0AD7BEC(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    uint64_t v7 = *(int *)(v4 + 36);
    int v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C1518CDC();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_1C0AD7E0C(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_1C034D0EC((uint64_t)a1);
      goto LABEL_7;
    }
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    swift_bridgeObjectRelease();
    uint64_t v18 = a2[3];
    if (a1[3])
    {
      if (v18)
      {
        a1[3] = v18;
        swift_bridgeObjectRelease();
        a1[4] = a2[4];
        swift_bridgeObjectRelease();
LABEL_17:
        uint64_t v20 = *(int *)(v4 + 36);
        uint64_t v21 = (char *)a1 + v20;
        a2 = (void *)((char *)a2 + v20);
        uint64_t v22 = sub_1C1518CDC();
        uint64_t v23 = *(void *)(v22 - 8);
        uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
        int v25 = v24(v21, 1, v22);
        int v26 = v24((char *)a2, 1, v22);
        if (v25)
        {
          if (!v26)
          {
            (*(void (**)(char *, void *, uint64_t))(v23 + 32))(v21, a2, v22);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
            return a1;
          }
        }
        else
        {
          if (!v26)
          {
            (*(void (**)(char *, void *, uint64_t))(v23 + 40))(v21, a2, v22);
            return a1;
          }
          (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
        }
        sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        size_t v16 = *(void *)(*(void *)(v27 - 8) + 64);
        uint64_t v17 = v21;
        goto LABEL_8;
      }
      sub_1C034DE40((uint64_t)(a1 + 3));
    }
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    goto LABEL_17;
  }
  if (v8)
  {
LABEL_7:
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    size_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
    uint64_t v17 = (char *)a1;
LABEL_8:
    memcpy(v17, a2, v16);
    return a1;
  }
  *a1 = *a2;
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  uint64_t v9 = *(int *)(v4 + 36);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1C1518CDC();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1C0AD8214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0AD8228);
}

uint64_t sub_1C0AD8228(uint64_t a1, uint64_t a2)
{
  sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1C0AD82B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0AD82C4);
}

uint64_t sub_1C0AD82C4(uint64_t a1, uint64_t a2)
{
  sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FormatDerivedDataBindingAuxiliaryResult()
{
  uint64_t result = qword_1EA1A35F8;
  if (!qword_1EA1A35F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C0AD839C()
{
  sub_1C034D4B8(319, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

BOOL static SportsEmbedConfigurationManager.RequestKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SportsEmbedConfigurationManager.RequestKind.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t SportsEmbedConfigurationManager.RequestKind.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t SportsEmbedConfigurationManager.embedConfiguration(for:)(unsigned char *a1)
{
  switch(*a1)
  {
    case 1:
      uint64_t result = sub_1C0AD861C();
      break;
    case 2:
      uint64_t result = sub_1C0AD8710();
      break;
    case 3:
      uint64_t result = sub_1C0AD8804();
      break;
    case 4:
      uint64_t result = sub_1C0AD88F8();
      break;
    case 5:
      uint64_t result = sub_1C0AD89EC();
      break;
    case 6:
      uint64_t result = sub_1C0AD8AE0();
      break;
    default:
      uint64_t result = sub_1C0AD8528();
      break;
  }
  return result;
}

uint64_t sub_1C0AD8528()
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v3 == 255) {
    goto LABEL_5;
  }
  if (v3)
  {
    sub_1C093651C(v2, v3);
LABEL_5:
    uint64_t v0 = sub_1C15183CC();
    swift_bridgeObjectRelease();
    return v0;
  }
  sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t sub_1C0AD861C()
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v3 == 255) {
    goto LABEL_5;
  }
  if (v3)
  {
    sub_1C093651C(v2, v3);
LABEL_5:
    uint64_t v0 = sub_1C15183CC();
    swift_bridgeObjectRelease();
    return v0;
  }
  sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t sub_1C0AD8710()
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v3 == 255) {
    goto LABEL_5;
  }
  if (v3)
  {
    sub_1C093651C(v2, v3);
LABEL_5:
    uint64_t v0 = sub_1C15183CC();
    swift_bridgeObjectRelease();
    return v0;
  }
  sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t sub_1C0AD8804()
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v3 == 255) {
    goto LABEL_5;
  }
  if (v3)
  {
    sub_1C093651C(v2, v3);
LABEL_5:
    uint64_t v0 = sub_1C15183CC();
    swift_bridgeObjectRelease();
    return v0;
  }
  sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t sub_1C0AD88F8()
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v3 == 255) {
    goto LABEL_5;
  }
  if (v3)
  {
    sub_1C093651C(v2, v3);
LABEL_5:
    uint64_t v0 = sub_1C15183CC();
    swift_bridgeObjectRelease();
    return v0;
  }
  sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t sub_1C0AD89EC()
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v3 == 255) {
    goto LABEL_5;
  }
  if (v3)
  {
    sub_1C093651C(v2, v3);
LABEL_5:
    uint64_t v0 = sub_1C15183CC();
    swift_bridgeObjectRelease();
    return v0;
  }
  sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t sub_1C0AD8AE0()
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v3 == 255) {
    goto LABEL_5;
  }
  if (v3)
  {
    sub_1C093651C(v2, v3);
LABEL_5:
    uint64_t v0 = sub_1C15183CC();
    swift_bridgeObjectRelease();
    return v0;
  }
  sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t sub_1C0AD8BD4()
{
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C5E8;
  sub_1C151F38C();
  sub_1C15197BC();

  sub_1C151932C();
  uint64_t v1 = (void *)sub_1C1518E7C();
  sub_1C151900C();
  swift_release();

  uint64_t v2 = (void *)sub_1C1518E7C();
  sub_1C15190EC();
  swift_release();

  unsigned __int8 v3 = (void *)sub_1C1518E7C();
  uint64_t v4 = sub_1C151903C();
  swift_release();

  return v4;
}

uint64_t sub_1C0AD8D84(uint64_t *a1)
{
  uint64_t v5 = *a1;
  swift_bridgeObjectRetain();
  sub_1C0337C7C(&v5, &v3);
  uint64_t v1 = v3;
  char v4 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C1518ECC();
  swift_release();
  uint64_t v3 = v1;
  sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

id sub_1C0AD8E40(void *a1)
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v3 == 255)
  {
    swift_willThrow();
    return a1;
  }
  else
  {
    sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return (id)sub_1C151908C();
  }
}

uint64_t sub_1C0AD8EFC()
{
  return sub_1C0ADA24C();
}

uint64_t sub_1C0AD8F0C()
{
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C5E8;
  sub_1C151F38C();
  sub_1C15197BC();

  sub_1C151932C();
  uint64_t v1 = (void *)sub_1C1518E7C();
  sub_1C151900C();
  swift_release();

  uint64_t v2 = (void *)sub_1C1518E7C();
  sub_1C15190EC();
  swift_release();

  unsigned __int8 v3 = (void *)sub_1C1518E7C();
  uint64_t v4 = sub_1C151903C();
  swift_release();

  return v4;
}

uint64_t sub_1C0AD90BC(uint64_t *a1)
{
  uint64_t v5 = *a1;
  swift_bridgeObjectRetain();
  sub_1C0337C7C(&v5, &v3);
  uint64_t v1 = v3;
  char v4 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C1518ECC();
  swift_release();
  uint64_t v3 = v1;
  sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

id sub_1C0AD9178(void *a1)
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v3 == 255)
  {
    swift_willThrow();
    return a1;
  }
  else
  {
    sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return (id)sub_1C151908C();
  }
}

uint64_t sub_1C0AD9234()
{
  return sub_1C0ADA24C();
}

uint64_t sub_1C0AD9244()
{
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C5E8;
  sub_1C151F38C();
  sub_1C15197BC();

  sub_1C151932C();
  uint64_t v1 = (void *)sub_1C1518E7C();
  sub_1C151900C();
  swift_release();

  uint64_t v2 = (void *)sub_1C1518E7C();
  sub_1C15190EC();
  swift_release();

  unsigned __int8 v3 = (void *)sub_1C1518E7C();
  uint64_t v4 = sub_1C151903C();
  swift_release();

  return v4;
}

uint64_t sub_1C0AD93F4(uint64_t *a1)
{
  uint64_t v5 = *a1;
  swift_bridgeObjectRetain();
  sub_1C0337C7C(&v5, &v3);
  uint64_t v1 = v3;
  char v4 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C1518ECC();
  swift_release();
  uint64_t v3 = v1;
  sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

id sub_1C0AD94B0(void *a1)
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v3 == 255)
  {
    swift_willThrow();
    return a1;
  }
  else
  {
    sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return (id)sub_1C151908C();
  }
}

uint64_t sub_1C0AD956C()
{
  return sub_1C0ADA24C();
}

uint64_t sub_1C0AD957C()
{
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C5E8;
  sub_1C151F38C();
  sub_1C15197BC();

  sub_1C151932C();
  uint64_t v1 = (void *)sub_1C1518E7C();
  sub_1C151900C();
  swift_release();

  uint64_t v2 = (void *)sub_1C1518E7C();
  sub_1C15190EC();
  swift_release();

  unsigned __int8 v3 = (void *)sub_1C1518E7C();
  uint64_t v4 = sub_1C151903C();
  swift_release();

  return v4;
}

uint64_t sub_1C0AD972C(uint64_t *a1)
{
  uint64_t v5 = *a1;
  swift_bridgeObjectRetain();
  sub_1C0337C7C(&v5, &v3);
  uint64_t v1 = v3;
  char v4 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C1518ECC();
  swift_release();
  uint64_t v3 = v1;
  sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

id sub_1C0AD97E8(void *a1)
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v3 == 255)
  {
    swift_willThrow();
    return a1;
  }
  else
  {
    sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return (id)sub_1C151908C();
  }
}

uint64_t sub_1C0AD98A4()
{
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C5E8;
  sub_1C151F38C();
  sub_1C15197BC();

  sub_1C151932C();
  uint64_t v1 = (void *)sub_1C1518E7C();
  sub_1C151900C();
  swift_release();

  uint64_t v2 = (void *)sub_1C1518E7C();
  sub_1C15190EC();
  swift_release();

  unsigned __int8 v3 = (void *)sub_1C1518E7C();
  uint64_t v4 = sub_1C151903C();
  swift_release();

  return v4;
}

uint64_t sub_1C0AD9A54(uint64_t *a1)
{
  uint64_t v5 = *a1;
  swift_bridgeObjectRetain();
  sub_1C0337C7C(&v5, &v3);
  uint64_t v1 = v3;
  char v4 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C1518ECC();
  swift_release();
  uint64_t v3 = v1;
  sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

id sub_1C0AD9B10(void *a1)
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v3 == 255)
  {
    swift_willThrow();
    return a1;
  }
  else
  {
    sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return (id)sub_1C151908C();
  }
}

uint64_t sub_1C0AD9BCC()
{
  return sub_1C0ADA24C();
}

uint64_t sub_1C0AD9BDC()
{
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C5E8;
  sub_1C151F38C();
  sub_1C15197BC();

  sub_1C151932C();
  uint64_t v1 = (void *)sub_1C1518E7C();
  sub_1C151900C();
  swift_release();

  uint64_t v2 = (void *)sub_1C1518E7C();
  sub_1C15190EC();
  swift_release();

  unsigned __int8 v3 = (void *)sub_1C1518E7C();
  uint64_t v4 = sub_1C151903C();
  swift_release();

  return v4;
}

uint64_t sub_1C0AD9D8C(uint64_t *a1)
{
  uint64_t v5 = *a1;
  swift_bridgeObjectRetain();
  sub_1C0337C7C(&v5, &v3);
  uint64_t v1 = v3;
  char v4 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C1518ECC();
  swift_release();
  uint64_t v3 = v1;
  sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

id sub_1C0AD9E48(void *a1)
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v3 == 255)
  {
    swift_willThrow();
    return a1;
  }
  else
  {
    sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return (id)sub_1C151908C();
  }
}

uint64_t sub_1C0AD9F04()
{
  return sub_1C0ADA24C();
}

uint64_t sub_1C0AD9F14()
{
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C5E8;
  sub_1C151F38C();
  sub_1C15197BC();

  sub_1C151932C();
  uint64_t v1 = (void *)sub_1C1518E7C();
  sub_1C151900C();
  swift_release();

  uint64_t v2 = (void *)sub_1C1518E7C();
  sub_1C15190EC();
  swift_release();

  unsigned __int8 v3 = (void *)sub_1C1518E7C();
  uint64_t v4 = sub_1C151903C();
  swift_release();

  return v4;
}

uint64_t sub_1C0ADA0C4(uint64_t *a1)
{
  uint64_t v5 = *a1;
  swift_bridgeObjectRetain();
  sub_1C0337C7C(&v5, &v3);
  uint64_t v1 = v3;
  char v4 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C1518ECC();
  swift_release();
  uint64_t v3 = v1;
  sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

id sub_1C0ADA180(void *a1)
{
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v3 == 255)
  {
    swift_willThrow();
    return a1;
  }
  else
  {
    sub_1C006D534(0, &qword_1EB863E68, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return (id)sub_1C151908C();
  }
}

uint64_t sub_1C0ADA23C()
{
  return sub_1C0ADA24C();
}

uint64_t sub_1C0ADA24C()
{
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C5E8;
  sub_1C151F36C();
  sub_1BFC8B664(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1529AE0;
  swift_getErrorValue();
  uint64_t v2 = sub_1C1520D3C();
  uint64_t v4 = v3;
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 64) = sub_1BFE9C558();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  sub_1C15197BC();

  return swift_bridgeObjectRelease();
}

uint64_t SportsEmbedConfigurationManager.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t SportsEmbedConfigurationManager.__deallocating_deinit()
{
  SportsEmbedConfigurationManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0ADA430(unsigned char *a1)
{
  switch(*a1)
  {
    case 1:
      uint64_t result = sub_1C0AD861C();
      break;
    case 2:
      uint64_t result = sub_1C0AD8710();
      break;
    case 3:
      uint64_t result = sub_1C0AD8804();
      break;
    case 4:
      uint64_t result = sub_1C0AD88F8();
      break;
    case 5:
      uint64_t result = sub_1C0AD89EC();
      break;
    case 6:
      uint64_t result = sub_1C0AD8AE0();
      break;
    default:
      uint64_t result = sub_1C0AD8528();
      break;
  }
  return result;
}

unint64_t sub_1C0ADA4C8()
{
  unint64_t result = qword_1EA1A3608;
  if (!qword_1EA1A3608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3608);
  }
  return result;
}

uint64_t dispatch thunk of SportsEmbedConfigurationManagerType.embedConfiguration(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for SportsEmbedConfigurationManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SportsEmbedConfigurationManager);
}

unsigned char *storeEnumTagSinglePayload for SportsEmbedConfigurationManager.RequestKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0ADA614);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsEmbedConfigurationManager.RequestKind()
{
  return &type metadata for SportsEmbedConfigurationManager.RequestKind;
}

void *sub_1C0ADA64C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = sub_1C15189FC();
  MEMORY[0x1F4188790](v7);
  sub_1BFCF0A24((unint64_t *)&unk_1EB871420, 255, MEMORY[0x1E4FAACC8]);
  sub_1BFC8B664(0, (unint64_t *)&unk_1EB879C50, MEMORY[0x1E4FAACC8], MEMORY[0x1E4FBB320]);
  sub_1C0064E2C();
  sub_1C151FFBC();
  sub_1C0091B50();
  swift_allocObject();
  v3[4] = sub_1C15183BC();
  sub_1BFC8B664(0, &qword_1EB863E10, (uint64_t (*)(uint64_t))sub_1C006D4C0, MEMORY[0x1E4FAB060]);
  swift_allocObject();
  v3[5] = sub_1C1518E9C();
  swift_allocObject();
  v3[6] = sub_1C1518E9C();
  swift_allocObject();
  v3[7] = sub_1C1518E9C();
  swift_allocObject();
  v3[8] = sub_1C1518E9C();
  swift_allocObject();
  v3[9] = sub_1C1518E9C();
  swift_allocObject();
  v3[10] = sub_1C1518E9C();
  uint64_t v10 = 0;
  char v11 = -1;
  swift_allocObject();
  v3[11] = sub_1C1518E9C();
  v3[2] = a1;
  v3[3] = a2;
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_1BFCF0A24(&qword_1EB869558, v8, (void (*)(uint64_t))type metadata accessor for SportsEmbedConfigurationManager);
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C1518B1C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  return v3;
}

uint64_t sub_1C0ADA998()
{
  return sub_1C0AD8BD4();
}

uint64_t sub_1C0ADA9A0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32))(ObjectType, v1);
}

uint64_t sub_1C0ADA9F4()
{
  return sub_1C0AD8F0C();
}

uint64_t sub_1C0ADA9FC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40))(ObjectType, v1);
}

uint64_t sub_1C0ADAA50()
{
  return sub_1C0AD9244();
}

uint64_t sub_1C0ADAA58()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 48))(ObjectType, v1);
}

uint64_t sub_1C0ADAAAC()
{
  return sub_1C0AD957C();
}

uint64_t sub_1C0ADAAB4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1);
}

uint64_t sub_1C0ADAB08()
{
  return sub_1C0AD98A4();
}

uint64_t sub_1C0ADAB10()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 56))(ObjectType, v1);
}

uint64_t sub_1C0ADAB64()
{
  return sub_1C0AD9BDC();
}

uint64_t sub_1C0ADAB6C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
}

uint64_t sub_1C0ADABC0()
{
  return sub_1C0AD9F14();
}

uint64_t sub_1C0ADABC8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 64))(ObjectType, v1);
}

uint64_t sub_1C0ADAC1C()
{
  sub_1C0ADB808(0, &qword_1EB85F108, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unsigned int v4 = (char *)&v6 - v3;
  sub_1C0ADB808(0, (unint64_t *)&unk_1EB85F370, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB85F110 = result;
  return result;
}

uint64_t static Commands.openInNewWindow.getter()
{
  if (qword_1EB85F120 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t static ContextMenuItem.openInNewWindow(tag:feedConfiguration:)(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  return sub_1C0ADB0C4(a1, a2);
}

uint64_t static KeyCommandItem.openInNewWindow(headline:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (objc_msgSend(a1, sel_contentType) == (id)1)
  {
    if (qword_1EA194B50 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1C15198DC();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EA2B53A8);
    unsigned int v4 = sub_1C15198AC();
    os_log_type_t v5 = sub_1C151F38C();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1BFC31000, v4, v5, "Key Command item 'openInNewWindow' not available for web articles", v6, 2u);
      MEMORY[0x1C18C9B00](v6, -1, -1);
    }

    uint64_t v7 = sub_1C151A5CC();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    return v8(a2, 1, 1, v7);
  }
  else
  {
    if (qword_1EB85F120 != -1) {
      swift_once();
    }
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    char v11 = self;
    swift_retain();
    swift_unknownObjectRetain();
    id v12 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1C1515B8C();

    sub_1C151A5BC();
    uint64_t v13 = sub_1C151A5CC();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 0, 1, v13);
  }
}

uint64_t sub_1C0ADB0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151B03C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB85F120 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v9 = self;
  swift_retain();
  swift_unknownObjectRetain();
  id v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1C151C8FC();
  sub_1C151C8EC();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAC3E0], v4);
  v12[1] = a1;
  v12[2] = a2;
  char v13 = 2;
  swift_allocObject();
  return sub_1C151A7FC();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = MEMORY[0x1F4188790](v2).n128_u64[0];
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_contentType, v4) == (id)1)
  {
    if (qword_1EA194B50 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1C15198DC();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EA2B53A8);
    uint64_t v8 = sub_1C15198AC();
    os_log_type_t v9 = sub_1C151F38C();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v10 = 0;
      _os_log_impl(&dword_1BFC31000, v8, v9, "Context menu item 'openInNewWindow' not available for web articles", v10, 2u);
      MEMORY[0x1C18C9B00](v10, -1, -1);
    }

    return 0;
  }
  else
  {
    if (qword_1EB85F120 != -1) {
      swift_once();
    }
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    char v13 = self;
    swift_retain();
    swift_unknownObjectRetain();
    id v14 = objc_msgSend(v13, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1C1515B8C();

    sub_1C151C8FC();
    sub_1C151C8EC();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E4FAC3E0], v2);
    v15[1] = a1;
    _OWORD v15[2] = 0;
    char v16 = 1;
    sub_1C151A81C();
    swift_allocObject();
    return sub_1C151A7FC();
  }
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow5issueACSgSo7FCIssueC_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB85F120 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v7 = self;
  swift_retain();
  id v8 = a1;
  id v9 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1C151C8FC();
  sub_1C151C8EC();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  v11[1] = a1;
  v11[2] = 0;
  char v12 = 0;
  sub_1C151A81C();
  swift_allocObject();
  return sub_1C151A7FC();
}

void sub_1C0ADB808(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for OpenCommandContext);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t FormatPackage.packages.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.groups.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.items.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.snippets.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.styles.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.supplementaries.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.types.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 104);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.decorations.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 112);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.localizations.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 152);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0ADB8C4(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v21 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (!v6) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v7 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v7 | (v2 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v2 << 6))
  {
    id v9 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
    uint64_t v11 = *v9;
    uint64_t v10 = v9[1];
    sub_1C0180128();
    sub_1C018017C();
    swift_bridgeObjectRetain();
    if (sub_1C151E50C())
    {
      uint64_t result = swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v15 = v20;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1BFF661B8(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v15 = v20;
      }
      unint64_t v17 = *(void *)(v15 + 16);
      unint64_t v16 = *(void *)(v15 + 24);
      unint64_t v18 = v17 + 1;
      if (v17 >= v16 >> 1)
      {
        uint64_t result = sub_1BFF661B8(v16 > 1, v17 + 1, 1);
        unint64_t v18 = v17 + 1;
        uint64_t v15 = v20;
      }
      *(void *)(v15 + 16) = v18;
      uint64_t v20 = v15;
      uint64_t v19 = v15 + 16 * v17;
      *(void *)(v19 + 32) = v11;
      *(void *)(v19 + 40) = v10;
      if (v6) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v12 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v21) {
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v12);
    ++v2;
    if (!v13)
    {
      int64_t v2 = v12 + 1;
      if (v12 + 1 >= v21) {
        goto LABEL_29;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v2);
      if (!v13)
      {
        int64_t v2 = v12 + 2;
        if (v12 + 2 >= v21) {
          goto LABEL_29;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v2);
        if (!v13)
        {
          int64_t v2 = v12 + 3;
          if (v12 + 3 >= v21) {
            goto LABEL_29;
          }
          unint64_t v13 = *(void *)(v3 + 8 * v2);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v21)
  {
LABEL_29:
    swift_release();
    return v20;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    int64_t v2 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v2 >= v21) {
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v2);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C0ADBB38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v215 = a5;
  uint64_t v194 = a3;
  uint64_t v195 = a4;
  uint64_t v193 = a2;
  sub_1C0AE6CE8(0, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v212 = v8;
  uint64_t v192 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v211 = (uint64_t)&v189 - v9;
  sub_1C0AE6CE8(0, (unint64_t *)&unk_1EB876730, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v209 = *(void *)(v10 - 8);
  uint64_t v210 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v214 = (uint64_t)&v189 - v11;
  sub_1C0AE6CE8(0, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v200 = *(void *)(v12 - 8);
  uint64_t v201 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v216 = (uint64_t)&v189 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  v199 = (unint64_t (**)())((char *)&v189 - v15);
  MEMORY[0x1F4188790](v16);
  uint64_t v198 = (uint64_t)&v189 - v17;
  sub_1C0AE6CE8(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v208 = v18;
  uint64_t v191 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v207 = (uint64_t)&v189 - v19;
  sub_1C0AE6CE8(0, &qword_1EB876760, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v205 = *(void *)(v20 - 8);
  uint64_t v206 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v213 = (uint64_t)&v189 - v21;
  sub_1C0AE6CE8(0, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v218 = v22;
  uint64_t v202 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  *(void *)&long long v217 = (char *)&v189 - v23;
  uint64_t v24 = (void *)a6;
  sub_1C0AE6CE8(0, (unint64_t *)&unk_1EB876770, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v203 = *(void *)(v25 - 8);
  uint64_t v204 = v25;
  MEMORY[0x1F4188790](v25);
  uint64_t v219 = (uint64_t)&v189 - v26;
  sub_1C0AE6CE8(0, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v225 = (uint64_t)&v189 - v28;
  sub_1C0AE6CE8(0, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  unint64_t v30 = *((void *)v29 - 1);
  v223 = (unint64_t (*)())v29;
  unint64_t v224 = v30;
  MEMORY[0x1F4188790](v29);
  uint64_t v32 = (_OWORD *)((char *)&v189 - v31);
  sub_1C0AE6CE8(0, &qword_1EB876768, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v221 = (uint64_t (*)())*((void *)v33 - 1);
  v222 = v33;
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (_OWORD *)((char *)&v189 - v34);
  *(_OWORD *)(a6 + 160) = xmmword_1C1533700;
  uint64_t v36 = *(void *)(a1 + 24);
  *(void *)a6 = *(void *)(a1 + 16);
  *(void *)(a6 + 8) = v36;
  *(unsigned char *)(a6 + 48) = *(unsigned char *)(a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role);
  uint64_t v37 = (unsigned char *)(a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction);
  swift_beginAccess();
  *(unsigned char *)(a6 + 49) = *v37;
  long long v38 = (void *)(a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
  swift_beginAccess();
  uint64_t v39 = v38[1];
  *(void *)(a6 + 16) = *v38;
  *(void *)(a6 + 24) = v39;
  id v40 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__comment);
  swift_beginAccess();
  uint64_t v41 = *v40;
  uint64_t v42 = v40[1];
  *(void *)(a6 + 32) = v41;
  *(void *)(a6 + 40) = v42;
  uint64_t v43 = MEMORY[0x1E4FBC860];
  v24[7] = MEMORY[0x1E4FBC860];
  uint64_t v196 = a1;
  uint64_t v44 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
  swift_beginAccess();
  uint64_t v45 = *v44;
  int64_t v46 = *(void *)(*v44 + 16);
  v197 = v24;
  if (v46)
  {
    uint64_t v228 = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C05F72A0(0, v46, 0);
    uint64_t v47 = *(unsigned __int8 *)(v224 + 80);
    uint64_t v190 = v45;
    uint64_t v48 = v45 + ((v47 + 32) & ~v47);
    *(void *)&long long v220 = *(void *)(v224 + 72);
    int64_t v49 = v46 - 1;
    uint64_t v50 = &type metadata for FormatGroup;
    while (1)
    {
      unint64_t v224 = v48;
      sub_1C0AE6A0C(v48, (uint64_t)v32, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)v50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      sub_1C0157FF8(0, qword_1EB873CA0);
      uint64_t v52 = *(int *)(v51 + 48);
      long long v53 = v32[5];
      long long v54 = v32[7];
      long long v234 = v32[6];
      long long v235 = v54;
      long long v55 = v32[7];
      long long v236 = v32[8];
      long long v56 = v32[3];
      long long v57 = v32[5];
      long long v232 = v32[4];
      long long v58 = v232;
      long long v233 = v57;
      long long v59 = v32[3];
      long long v61 = v32[1];
      long long v230 = v32[2];
      long long v60 = v230;
      long long v231 = v59;
      long long v62 = v32[1];
      v229[0] = *v32;
      long long v63 = v229[0];
      v229[1] = v62;
      v35[6] = v234;
      v35[7] = v55;
      v35[8] = v32[8];
      v35[2] = v60;
      v35[3] = v56;
      v35[4] = v58;
      v35[5] = v53;
      uint64_t v64 = (uint64_t)v35 + v52;
      uint64_t v65 = (uint64_t)v32 + *((int *)v223 + 9);
      *uint64_t v35 = v63;
      v35[1] = v61;
      uint64_t v66 = (uint64_t)v50;
      uint64_t v67 = v225;
      sub_1C0AE6A0C(v65, v225, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
      uint64_t v68 = v67;
      uint64_t v50 = (ValueMetadata *)v66;
      sub_1C0AE6C80(v68, v64, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      swift_storeEnumTagMultiPayload();
      sub_1C0187D08((uint64_t)v229);
      sub_1C0AE4928((uint64_t)v32, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, v66, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      uint64_t v69 = v228;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F72A0(0, *(void *)(v69 + 16) + 1, 1);
        uint64_t v69 = v228;
      }
      unint64_t v71 = *(void *)(v69 + 16);
      unint64_t v70 = *(void *)(v69 + 24);
      if (v71 >= v70 >> 1)
      {
        sub_1C05F72A0(v70 > 1, v71 + 1, 1);
        uint64_t v69 = v228;
      }
      *(void *)(v69 + 16) = v71 + 1;
      sub_1C0AE6A80((uint64_t)v35, v69+ ((*((unsigned __int8 *)v221 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v221 + 80))+ *((void *)v221 + 9) * v71, &qword_1EB876768, (uint64_t (*)(void))sub_1C00F6D64, v66);
      if (!v49) {
        break;
      }
      --v49;
      uint64_t v48 = v224 + v220;
    }
    swift_bridgeObjectRelease();
    uint64_t v24 = v197;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v69 = MEMORY[0x1E4FBC860];
  }
  uint64_t v72 = v196;
  v24[8] = v69;
  uint64_t v73 = (uint64_t *)(v72 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v74 = *v73;
  int64_t v75 = *(void *)(*v73 + 16);
  uint64_t v76 = MEMORY[0x1E4FBC860];
  if (v75)
  {
    uint64_t v228 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F7280(0, v75, 0);
    uint64_t v77 = *(unsigned __int8 *)(v202 + 80);
    uint64_t v190 = v74;
    uint64_t v78 = (uint64_t (*)(void))(v74 + ((v77 + 32) & ~v77));
    uint64_t v202 = *(void *)(v202 + 72);
    uint64_t v79 = v219;
    uint64_t v80 = v217;
    do
    {
      v223 = (unint64_t (*)())v78;
      unint64_t v224 = v75;
      v222 = (uint64_t (*)(void))sub_1C00F6C5C;
      v221 = type metadata accessor for FormatObject;
      sub_1C0AE6A0C((uint64_t)v78, v80, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      sub_1C0157FF8(0, &qword_1EB873D70);
      uint64_t v82 = v79 + *(int *)(v81 + 48);
      uint64_t v83 = *(void *)(v80 + 8);
      uint64_t v84 = *(void *)(v80 + 16);
      uint64_t v86 = *(void *)(v80 + 40);
      uint64_t v85 = *(void *)(v80 + 48);
      uint64_t v87 = *(void *)(v80 + 56);
      uint64_t v88 = *(void *)(v80 + 64);
      *(void *)uint64_t v79 = *(void *)v80;
      *(void *)(v79 + 8) = v83;
      *(void *)(v79 + 16) = v84;
      long long v220 = *(_OWORD *)(v80 + 24);
      *(_OWORD *)(v79 + 24) = v220;
      *(void *)(v79 + 40) = v86;
      *(void *)(v79 + 48) = v85;
      *(void *)(v79 + 56) = v87;
      *(void *)(v79 + 64) = v88;
      uint64_t v89 = v225;
      sub_1C0AE6A0C(v80 + *(int *)(v218 + 36), v225, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
      sub_1C0AE6C80(v89, v82, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C0AE4928(v80, (unint64_t *)&qword_1EB874220, v222, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v221);
      uint64_t v76 = v228;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7280(0, *(void *)(v76 + 16) + 1, 1);
        uint64_t v76 = v228;
      }
      unint64_t v91 = *(void *)(v76 + 16);
      unint64_t v90 = *(void *)(v76 + 24);
      unint64_t v92 = v224;
      if (v91 >= v90 >> 1)
      {
        sub_1C05F7280(v90 > 1, v91 + 1, 1);
        uint64_t v76 = v228;
      }
      *(void *)(v76 + 16) = v91 + 1;
      uint64_t v93 = v76
          + ((*(unsigned __int8 *)(v203 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v203 + 80))
          + *(void *)(v203 + 72) * v91;
      uint64_t v79 = v219;
      sub_1C0AE6A80(v219, v93, (unint64_t *)&unk_1EB876770, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle);
      uint64_t v78 = (uint64_t (*)(void))((char *)v223 + v202);
      int64_t v75 = v92 - 1;
    }
    while (v75);
    swift_bridgeObjectRelease();
    uint64_t v72 = v196;
    uint64_t v24 = v197;
  }
  v24[10] = v76;
  uint64_t v94 = (uint64_t *)(v72 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
  swift_beginAccess();
  uint64_t v95 = *v94;
  int64_t v96 = *(void *)(*v94 + 16);
  uint64_t v97 = MEMORY[0x1E4FBC860];
  if (v96)
  {
    uint64_t v227 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F7260(0, v96, 0);
    v98 = (uint64_t (*)(void))(v95
                            + ((*(unsigned __int8 *)(v191 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v191 + 80)));
    uint64_t v99 = *(void *)(v191 + 72);
    uint64_t v203 = v95;
    uint64_t v204 = v99;
    uint64_t v100 = v213;
    do
    {
      v223 = (unint64_t (*)())v98;
      unint64_t v224 = v96;
      v222 = (uint64_t (*)(void))sub_1C00F6B20;
      v221 = type metadata accessor for FormatObject;
      uint64_t v101 = v207;
      sub_1C0AE6A0C((uint64_t)v98, v207, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      sub_1C0157FF8(0, &qword_1EB873BA0);
      *(void *)&long long v217 = v100 + *(int *)(v102 + 48);
      uint64_t v103 = *(void *)v101;
      uint64_t v104 = *(void *)(v101 + 8);
      uint64_t v105 = *(void *)(v101 + 16);
      uint64_t v106 = *(void *)(v101 + 24);
      uint64_t v107 = *(void *)(v101 + 32);
      uint64_t v108 = *(void *)(v101 + 40);
      uint64_t v109 = *(void *)(v101 + 48);
      uint64_t v219 = *(void *)(v101 + 56);
      uint64_t v110 = v219;
      *(void *)&long long v220 = v109;
      uint64_t v112 = *(void *)(v101 + 72);
      uint64_t v218 = *(void *)(v101 + 64);
      uint64_t v111 = v218;
      *(void *)uint64_t v100 = v103;
      *(void *)(v100 + 8) = v104;
      *(void *)(v100 + 32) = v107;
      *(void *)(v100 + 40) = v108;
      *(void *)(v100 + 48) = v109;
      *(void *)(v100 + 56) = v110;
      *(void *)(v100 + 64) = v111;
      *(void *)(v100 + 72) = v112;
      unsigned __int8 v113 = *(unsigned char *)(v101 + 80);
      *(unsigned char *)(v100 + 80) = v113;
      uint64_t v114 = v101 + *(int *)(v208 + 36);
      *(void *)(v100 + 16) = v105;
      *(void *)(v100 + 24) = v106;
      uint64_t v115 = v225;
      sub_1C0AE6A0C(v114, v225, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
      sub_1C0AE6C80(v115, v217, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1DB64(v107, v108, v220, v219, v218, v112, v113);
      sub_1C0AE4928(v101, (unint64_t *)&qword_1EB8741E0, v222, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v221);
      uint64_t v97 = v227;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7260(0, *(void *)(v97 + 16) + 1, 1);
        uint64_t v97 = v227;
      }
      unint64_t v117 = *(void *)(v97 + 16);
      unint64_t v116 = *(void *)(v97 + 24);
      unint64_t v118 = v224;
      if (v117 >= v116 >> 1)
      {
        sub_1C05F7260(v116 > 1, v117 + 1, 1);
        uint64_t v97 = v227;
      }
      *(void *)(v97 + 16) = v117 + 1;
      uint64_t v119 = v97
           + ((*(unsigned __int8 *)(v205 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80))
           + *(void *)(v205 + 72) * v117;
      uint64_t v100 = v213;
      sub_1C0AE6A80(v213, v119, &qword_1EB876760, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType);
      v98 = (uint64_t (*)(void))((char *)v223 + v204);
      int64_t v96 = v118 - 1;
    }
    while (v96);
    swift_bridgeObjectRelease();
    uint64_t v72 = v196;
    uint64_t v24 = v197;
  }
  v24[13] = v97;
  uint64_t v120 = (uint64_t *)(v72 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
  swift_beginAccess();
  uint64_t v121 = *v120;
  int64_t v122 = *(void *)(*v120 + 16);
  uint64_t v123 = MEMORY[0x1E4FBC860];
  if (v122)
  {
    uint64_t v226 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F7240(0, v122, 0);
    uint64_t v124 = *(unsigned __int8 *)(v192 + 80);
    uint64_t v208 = v121;
    uint64_t v125 = v121 + ((v124 + 32) & ~v124);
    uint64_t v213 = *(void *)(v192 + 72);
    uint64_t v126 = v214;
    do
    {
      v223 = sub_1C00F6ACC;
      unint64_t v224 = v122;
      v222 = type metadata accessor for FormatObject;
      uint64_t v127 = v211;
      sub_1C0AE6A0C(v125, v211, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      sub_1C0157FF8(0, &qword_1EB8752C8);
      uint64_t v218 = v126 + *(int *)(v128 + 48);
      uint64_t v129 = *(void *)v127;
      uint64_t v130 = *(void *)(v127 + 8);
      uint64_t v131 = *(void *)(v127 + 16);
      uint64_t v132 = *(void *)(v127 + 40);
      uint64_t v133 = *(void *)(v127 + 48);
      uint64_t v135 = *(void *)(v127 + 56);
      uint64_t v134 = *(void *)(v127 + 64);
      char v136 = *(unsigned char *)(v127 + 72);
      uint64_t v138 = *(void *)(v127 + 80);
      uint64_t v137 = *(void *)(v127 + 88);
      uint64_t v219 = *(void *)(v127 + 96);
      uint64_t v139 = v219;
      *(void *)&long long v220 = v132;
      int v140 = *(unsigned __int8 *)(v127 + 106);
      int v141 = *(unsigned __int16 *)(v127 + 104);
      LODWORD(v221) = v141 | (v140 << 16);
      *(void *)uint64_t v126 = v129;
      *(void *)(v126 + 8) = v130;
      long long v217 = *(_OWORD *)(v127 + 24);
      *(_OWORD *)(v126 + 24) = v217;
      *(void *)(v126 + 40) = v132;
      *(void *)(v126 + 48) = v133;
      *(void *)(v126 + 56) = v135;
      *(void *)(v126 + 64) = v134;
      *(unsigned char *)(v126 + 72) = v136;
      *(void *)(v126 + 80) = v138;
      *(void *)(v126 + 88) = v137;
      *(void *)(v126 + 96) = v139;
      *(unsigned char *)(v126 + 106) = v140;
      *(_WORD *)(v126 + 104) = v141;
      uint64_t v142 = v127 + *(int *)(v212 + 36);
      *(void *)(v126 + 16) = v131;
      uint64_t v143 = v225;
      sub_1C0AE6A0C(v142, v225, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
      sub_1C0AE6C80(v143, v218, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      swift_storeEnumTagMultiPayload();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF9C7FC(v219, v221);
      sub_1C0AE4928(v127, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))v223, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v222);
      uint64_t v123 = v226;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7240(0, *(void *)(v123 + 16) + 1, 1);
        uint64_t v123 = v226;
      }
      unint64_t v145 = *(void *)(v123 + 16);
      unint64_t v144 = *(void *)(v123 + 24);
      unint64_t v146 = v224;
      if (v145 >= v144 >> 1)
      {
        sub_1C05F7240(v144 > 1, v145 + 1, 1);
        uint64_t v123 = v226;
      }
      *(void *)(v123 + 16) = v145 + 1;
      uint64_t v126 = v214;
      sub_1C0AE6A80(v214, v123+ ((*(unsigned __int8 *)(v209 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v209 + 80))+ *(void *)(v209 + 72) * v145, (unint64_t *)&unk_1EB876730, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration);
      v125 += v213;
      int64_t v122 = v146 - 1;
    }
    while (v122);
    swift_bridgeObjectRelease();
    uint64_t v72 = v196;
    uint64_t v24 = v197;
  }
  uint64_t v147 = v193;
  v24[14] = v123;
  v24[15] = v147;
  v24[16] = v194;
  uint64_t v148 = (void *)(v72 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
  swift_beginAccess();
  v24[17] = *v148;
  uint64_t v149 = (char *)v24;
  uint64_t v150 = (void *)(v72 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__selectors);
  swift_beginAccess();
  *((void *)v149 + 18) = *v150;
  uint64_t v151 = *(void *)(v72 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem);
  unint64_t v152 = *(void *)(v72 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem + 8);
  uint64_t v153 = *((void *)v149 + 20);
  unint64_t v154 = *((void *)v149 + 21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEB9640(v151, v152);
  sub_1BFFD0438(v153, v154);
  *((void *)v149 + 20) = v151;
  *((void *)v149 + 21) = v152;
  uint64_t v155 = v72 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions;
  v156 = (int *)type metadata accessor for FormatPackage();
  sub_1C0AE25B0(v155, (uint64_t)&v149[v156[23]], type metadata accessor for FormatCompilerOptions);
  if (qword_1EB87BD00 != -1) {
    swift_once();
  }
  uint64_t v157 = sub_1C151928C();
  uint64_t v158 = __swift_project_value_buffer(v157, (uint64_t)qword_1EB8799C8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v157 - 8) + 16))(&v149[v156[24]], v158, v157);
  uint64_t v159 = type metadata accessor for FormatCompilerOptions(0);
  sub_1BFEF6CE8(v155 + *(int *)(v159 + 28), (uint64_t)&v149[v156[25]]);
  swift_beginAccess();
  uint64_t v160 = v195;
  swift_bridgeObjectRetain();
  uint64_t v161 = swift_bridgeObjectRetain();
  uint64_t v162 = 0;
  unint64_t v163 = sub_1C0AE59E8(v161, v160);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((void *)v149 + 9) = v163;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v164 = swift_bridgeObjectRetain();
  unint64_t v165 = sub_1C0AE5E00(v164, v160);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((void *)v149 + 11) = v165;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v166 = swift_bridgeObjectRetain();
  unint64_t v167 = sub_1C0AE6320(v166, v160);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  *((void *)v149 + 12) = v167;
  v168 = (void *)(v72 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
  swift_beginAccess();
  *(void *)&long long v217 = *v168;
  uint64_t v169 = *(void *)(v217 + 16);
  uint64_t v170 = v215;
  if (v169)
  {
    sub_1C0AE6CE8(0, (unint64_t *)&qword_1EB874190, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    uint64_t v218 = v171;
    uint64_t v172 = v217
         + ((*(unsigned __int8 *)(*(void *)(v171 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v171 - 8) + 80));
    uint64_t v219 = *(void *)(*(void *)(v171 - 8) + 72);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v173 = MEMORY[0x1E4FBC860];
    do
    {
      long long v174 = *(unint64_t (**)())(v172 + 8);
      v223 = *(unint64_t (**)())v172;
      unint64_t v224 = v173;
      long long v175 = *(uint64_t (**)(void))(v172 + 16);
      v176 = *(unint64_t (**)())(v172 + 24);
      long long v177 = *(unint64_t (**)())(v172 + 40);
      v221 = *(uint64_t (**)())(v172 + 32);
      v222 = v175;
      uint64_t v178 = *(void *)(v172 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v179 = sub_1C0AE6738(v178, v170);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v180 = *(void *)(v179 + 16);
      swift_bridgeObjectRelease();
      if (v180)
      {
        *(void *)&long long v220 = v162;
        sub_1C0157FF8(0, &qword_1EB876020);
        long long v182 = v199;
        uint64_t v183 = (uint64_t)v199 + *(int *)(v181 + 48);
        *v199 = v223;
        v182[1] = v174;
        v182[2] = (unint64_t (*)())v222;
        v182[3] = v176;
        v182[4] = (unint64_t (*)())v221;
        v182[5] = v177;
        v182[6] = (unint64_t (*)())v179;
        uint64_t v184 = v225;
        sub_1C0AE6A0C(v172 + *(int *)(v218 + 36), v225, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
        sub_1C0AE6C80(v184, v183, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        swift_storeEnumTagMultiPayload();
        uint64_t v185 = v198;
        sub_1C0AE6A80((uint64_t)v182, v198, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization);
        sub_1C0AE6A80(v185, v216, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization);
        unint64_t v173 = v224;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v173 = sub_1C0EE4C08(0, *(void *)(v173 + 16) + 1, 1, v173);
        }
        uint64_t v170 = v215;
        unint64_t v187 = *(void *)(v173 + 16);
        unint64_t v186 = *(void *)(v173 + 24);
        uint64_t v162 = v220;
        if (v187 >= v186 >> 1) {
          unint64_t v173 = sub_1C0EE4C08(v186 > 1, v187 + 1, 1, v173);
        }
        *(void *)(v173 + 16) = v187 + 1;
        sub_1C0AE6A80(v216, v173+ ((*(unsigned __int8 *)(v200 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v200 + 80))+ *(void *)(v200 + 72) * v187, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v170 = v215;
        unint64_t v173 = v224;
      }
      v172 += v219;
      --v169;
    }
    while (v169);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_release();
    unint64_t v173 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  v197[19] = v173;
  return result;
}

uint64_t FormatPackage.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPackage.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPackage.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *int64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FormatPackage.identifier.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPackage.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatPackage.name.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPackage.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPackage.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatPackage.description.modify())(void)
{
  return nullsub_1;
}

void FormatPackage.role.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

unsigned char *FormatPackage.role.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 48) = *result;
  return result;
}

uint64_t (*FormatPackage.role.modify())(void)
{
  return nullsub_1;
}

void FormatPackage.direction.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 49);
}

unsigned char *FormatPackage.direction.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 49) = *result;
  return result;
}

uint64_t (*FormatPackage.direction.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPackage.packages.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = v2;
  return result;
}

uint64_t (*FormatPackage.packages.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPackage.groups.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = v2;
  return result;
}

uint64_t (*FormatPackage.groups.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPackage.items.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = v2;
  return result;
}

uint64_t (*FormatPackage.items.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPackage.styles.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = v2;
  return result;
}

uint64_t (*FormatPackage.styles.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPackage.snippets.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 88) = v2;
  return result;
}

uint64_t (*FormatPackage.snippets.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPackage.supplementaries.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = v2;
  return result;
}

uint64_t (*FormatPackage.supplementaries.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPackage.types.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = v2;
  return result;
}

uint64_t (*FormatPackage.types.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPackage.decorations.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 112) = v2;
  return result;
}

uint64_t (*FormatPackage.decorations.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPackage.slots.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.slots.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 120) = a1;
  return result;
}

uint64_t (*FormatPackage.slots.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPackage.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.properties.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 128) = a1;
  return result;
}

uint64_t (*FormatPackage.properties.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPackage.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.options.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 136) = a1;
  return result;
}

uint64_t (*FormatPackage.options.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPackage.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.selectors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 144) = a1;
  return result;
}

uint64_t (*FormatPackage.selectors.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPackage.localizations.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 152) = v2;
  return result;
}

uint64_t (*FormatPackage.localizations.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPackage.columnSystem.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 160);
  unint64_t v3 = *(void *)(v1 + 168);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFEB9640(v2, v3);
}

uint64_t FormatPackage.columnSystem.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1BFFD0438(*(void *)(v1 + 160), *(void *)(v1 + 168));
  *(void *)(v1 + 160) = v2;
  *(void *)(v1 + 168) = v3;
  return result;
}

uint64_t (*FormatPackage.columnSystem.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPackage.compilerOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatPackage();
  return sub_1C0AE25B0(v1 + *(int *)(v3 + 92), a1, type metadata accessor for FormatCompilerOptions);
}

uint64_t FormatPackage.compilerOptions.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatPackage() + 92);
  return sub_1C0ADDB38(a1, v3);
}

uint64_t sub_1C0ADDB38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatCompilerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*FormatPackage.compilerOptions.modify())()
{
  return nullsub_1;
}

uint64_t FormatPackage.formatVersion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatPackage() + 96);
  uint64_t v4 = sub_1C151928C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FormatPackage.formatVersion.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatPackage() + 96);
  uint64_t v4 = sub_1C151928C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*FormatPackage.formatVersion.modify())()
{
  return nullsub_1;
}

uint64_t FormatPackage.editorProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatPackage() + 100);
  return sub_1BFEF6CE8(v3, a1);
}

uint64_t sub_1C0ADDD60@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  sub_1C0AE6CE8(0, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v7 - 8);
  if (!*(void *)(a2 + 16)) {
    goto LABEL_13;
  }
  uint64_t v38 = (uint64_t)&v37 - v8;
  uint64_t v45 = v3;
  uint64_t v10 = *a1;
  uint64_t v9 = a1[1];
  sub_1C1520DBC();
  sub_1C1520DCC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  uint64_t v11 = sub_1C1520E0C();
  uint64_t v12 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    sub_1C0AE6CE8(0, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    return (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a3, 1, 1, v36);
  }
  uint64_t v15 = ~v12;
  uint64_t v16 = *(void *)(a2 + 48);
  while (1)
  {
    uint64_t v17 = v16 + 24 * v13;
    if (*(unsigned char *)(v17 + 16) == 1)
    {
      BOOL v18 = *(void *)v17 == v10 && *(void *)(v17 + 8) == v9;
      if (v18 || (sub_1C1520A9C() & 1) != 0) {
        break;
      }
    }
    unint64_t v13 = (v13 + 1) & v15;
    if (((*(void *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
  sub_1C0157FF8(0, &qword_1EB873B40);
  uint64_t v20 = (uint64_t)a3 + *(int *)(v19 + 48);
  uint64_t v21 = a1[10];
  char v22 = *((unsigned char *)a1 + 120);
  *(void *)&long long v39 = v10;
  *((void *)&v39 + 1) = v9;
  long long v23 = *((_OWORD *)a1 + 2);
  long long v40 = *((_OWORD *)a1 + 1);
  long long v41 = v23;
  long long v24 = *((_OWORD *)a1 + 4);
  long long v42 = *((_OWORD *)a1 + 3);
  long long v43 = v24;
  *(void *)uint64_t v44 = v21;
  *(_OWORD *)&v44[8] = *(_OWORD *)(a1 + 11);
  *(_OWORD *)&v44[24] = *(_OWORD *)(a1 + 13);
  v44[40] = v22;
  long long v25 = v39;
  long long v26 = v40;
  long long v27 = v42;
  a3[2] = v41;
  a3[3] = v27;
  *a3 = v25;
  a3[1] = v26;
  long long v28 = v43;
  long long v29 = *(_OWORD *)v44;
  long long v30 = *(_OWORD *)&v44[16];
  *(_OWORD *)((char *)a3 + 105) = *(_OWORD *)&v44[25];
  a3[5] = v29;
  a3[6] = v30;
  a3[4] = v28;
  sub_1C0AE6CE8(0, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v32 = v38;
  sub_1C0AE6A0C((uint64_t)a1 + *(int *)(v31 + 36), v38, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1C0AE6C80(v32, v20, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1C0AE6CE8(0, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v34 = v33;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(a3, 0, 1, v34);
  return sub_1C025AE48((uint64_t)&v39);
}

uint64_t sub_1C0ADE140@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0AE6CE8(0, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v7 - 8);
  if (!*(void *)(a2 + 16)) {
    goto LABEL_13;
  }
  uint64_t v42 = (uint64_t)&v36 - v8;
  uint64_t v43 = v3;
  uint64_t v10 = *a1;
  uint64_t v9 = a1[1];
  sub_1C1520DBC();
  sub_1C1520DCC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  uint64_t v11 = sub_1C1520E0C();
  uint64_t v12 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    sub_1C0AE6CE8(0, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(a3, 1, 1, v35);
  }
  uint64_t v15 = ~v12;
  uint64_t v16 = *(void *)(a2 + 48);
  while (1)
  {
    uint64_t v17 = v16 + 24 * v13;
    if (*(unsigned __int8 *)(v17 + 16) >= 2u)
    {
      BOOL v18 = *(void *)v17 == v10 && *(void *)(v17 + 8) == v9;
      if (v18 || (sub_1C1520A9C() & 1) != 0) {
        break;
      }
    }
    unint64_t v13 = (v13 + 1) & v15;
    if (((*(void *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
  sub_1C0157FF8(0, &qword_1EB876998);
  uint64_t v37 = a3 + *(int *)(v19 + 48);
  uint64_t v20 = a1[2];
  uint64_t v21 = a1[5];
  uint64_t v22 = a1[6];
  uint64_t v23 = a1[7];
  uint64_t v24 = a1[8];
  uint64_t v25 = a1[9];
  char v26 = *((unsigned char *)a1 + 80);
  uint64_t v27 = a1[12];
  uint64_t v39 = a1[11];
  uint64_t v28 = v39;
  uint64_t v40 = v27;
  uint64_t v41 = v21;
  char v29 = *((unsigned char *)a1 + 104);
  *(void *)a3 = v10;
  *(void *)(a3 + 8) = v9;
  *(void *)(a3 + 16) = v20;
  long long v38 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(a3 + 24) = v38;
  *(void *)(a3 + 40) = v21;
  *(void *)(a3 + 48) = v22;
  *(void *)(a3 + 56) = v23;
  *(void *)(a3 + 64) = v24;
  *(void *)(a3 + 72) = v25;
  *(unsigned char *)(a3 + 80) = v26;
  *(void *)(a3 + 88) = v28;
  *(void *)(a3 + 96) = v27;
  *(unsigned char *)(a3 + 104) = v29;
  sub_1C0AE6CE8(0, (unint64_t *)&qword_1EB8741B0, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v31 = v42;
  sub_1C0AE6A0C((uint64_t)a1 + *(int *)(v30 + 36), v42, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1C0AE6C80(v31, v37, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1C0AE6CE8(0, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v33 = v32;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a3, 0, 1, v33);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatPackage.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v103 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v111 = (uint64_t)&v100 - v5;
  sub_1BFE79B2C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], v3);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v110 = (uint64_t)&v100 - v7;
  uint64_t v8 = sub_1C151928C();
  uint64_t v105 = *(void *)(v8 - 8);
  uint64_t v106 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v109 = (uint64_t)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE79B2C(0, &qword_1EB889EC0, type metadata accessor for FormatCompilerOptions, v3);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v108 = (uint64_t)&v100 - v11;
  uint64_t v107 = type metadata accessor for FormatCompilerOptions(0);
  uint64_t v104 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  unint64_t v13 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C151635C();
  uint64_t v112 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0AE6CE8(0, &qword_1EB87A500, (uint64_t (*)(void))sub_1C08E8CA0, (uint64_t)&type metadata for FormatPackage.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v18 = v17;
  uint64_t v113 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v100 - v19;
  uint64_t v115 = (int *)type metadata accessor for FormatPackage();
  MEMORY[0x1F4188790](v115);
  uint64_t v22 = (uint64_t *)((char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  *((_OWORD *)v22 + 1) = 0u;
  *((_OWORD *)v22 + 2) = 0u;
  unint64_t v117 = v22;
  *((_OWORD *)v22 + 10) = xmmword_1C1533700;
  uint64_t v23 = a1[3];
  uint64_t v114 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_1C08E8CA0();
  uint64_t v24 = v116;
  sub_1C1520EBC();
  if (v24)
  {
    uint64_t v116 = v24;
    unsigned int v28 = 4456454;
    goto LABEL_4;
  }
  uint64_t v25 = v112;
  uint64_t v102 = (uint64_t *)v13;
  LOBYTE(v118[0]) = 0;
  uint64_t v26 = sub_1C152060C();
  uint64_t v46 = v27;
  uint64_t v101 = v20;
  if (v27)
  {
    uint64_t v47 = v26;
  }
  else
  {
    sub_1C151634C();
    uint64_t v47 = sub_1C151633C();
    uint64_t v46 = v48;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v14);
  }
  int64_t v49 = v117;
  uint64_t *v117 = v47;
  v49[1] = v46;
  char v119 = 3;
  sub_1BFD8B858();
  sub_1C15206EC();
  *((unsigned char *)v49 + 48) = v118[0];
  char v119 = 4;
  sub_1BFD8B708();
  sub_1C152065C();
  char v50 = v118[0];
  if (LOBYTE(v118[0]) == 5) {
    char v50 = 4;
  }
  *((unsigned char *)v49 + 49) = v50;
  LOBYTE(v118[0]) = 1;
  uint64_t v51 = sub_1C152060C();
  uint64_t v53 = v52;
  swift_bridgeObjectRelease();
  v49[2] = v51;
  v49[3] = v53;
  LOBYTE(v118[0]) = 2;
  uint64_t v54 = sub_1C152060C();
  uint64_t v56 = v55;
  swift_bridgeObjectRelease();
  v49[4] = v54;
  v49[5] = v56;
  sub_1BFE38D20();
  char v119 = 5;
  sub_1BFEBC2BC((unint64_t *)&unk_1EB878E00, (void (*)(uint64_t))sub_1BFE38D20);
  sub_1C152065C();
  uint64_t v57 = v18;
  uint64_t v58 = v118[0];
  uint64_t v59 = MEMORY[0x1E4FBC860];
  if (!v118[0]) {
    uint64_t v58 = MEMORY[0x1E4FBC860];
  }
  v49[7] = v58;
  sub_1C0AE6CE8(0, &qword_1EB878DE8, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  char v119 = 6;
  sub_1C0AE2158();
  sub_1C152065C();
  uint64_t v60 = v118[0];
  if (!v118[0]) {
    uint64_t v60 = v59;
  }
  v49[8] = v60;
  sub_1C0AE6CE8(0, &qword_1EB878DC8, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  char v119 = 7;
  sub_1C0AE21E8();
  sub_1C152065C();
  uint64_t v61 = v118[0];
  if (!v118[0]) {
    uint64_t v61 = v59;
  }
  v49[9] = v61;
  sub_1C0AE6CE8(0, &qword_1EB878DF8, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  char v119 = 8;
  sub_1C0AE2278();
  sub_1C152065C();
  uint64_t v62 = v118[0];
  if (!v118[0]) {
    uint64_t v62 = v59;
  }
  v117[10] = v62;
  sub_1C08E90F0();
  char v119 = 9;
  sub_1BFEBC2BC(&qword_1EB8803E8, (void (*)(uint64_t))sub_1C08E90F0);
  uint64_t v63 = v57;
  sub_1C152065C();
  uint64_t v116 = 0;
  uint64_t v64 = v118[0];
  if (!v118[0]) {
    uint64_t v64 = v59;
  }
  v117[11] = v64;
  sub_1C0AE6CE8(0, &qword_1EB878DB8, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  char v119 = 10;
  sub_1C0AE2308();
  uint64_t v65 = v116;
  sub_1C152065C();
  uint64_t v116 = v65;
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v113 + 8))(v101, v57);
    unsigned int v28 = 263159;
    goto LABEL_4;
  }
  uint64_t v66 = v118[0];
  if (!v118[0]) {
    uint64_t v66 = v59;
  }
  v117[12] = v66;
  sub_1C0AE6CE8(0, &qword_1EB878DD8, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  char v119 = 11;
  sub_1C0AE2398();
  uint64_t v67 = v116;
  sub_1C152065C();
  uint64_t v116 = v67;
  if (v67)
  {
    (*(void (**)(char *, uint64_t))(v113 + 8))(v101, v57);
    unsigned int v28 = 264183;
    goto LABEL_4;
  }
  uint64_t v68 = v118[0];
  if (!v118[0]) {
    uint64_t v68 = v59;
  }
  v117[13] = v68;
  sub_1C0AE6CE8(0, &qword_1EB878D98, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  char v119 = 12;
  sub_1C0AE2428();
  uint64_t v69 = v116;
  sub_1C152065C();
  uint64_t v116 = v69;
  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v113 + 8))(v101, v57);
    unsigned int v28 = 266231;
    goto LABEL_4;
  }
  uint64_t v70 = v118[0];
  if (!v118[0]) {
    uint64_t v70 = v59;
  }
  v117[14] = v70;
  sub_1BFE79B2C(0, &qword_1EB879E50, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, MEMORY[0x1E4FBB320]);
  char v119 = 13;
  sub_1BFCCF8EC(&qword_1EB879E58, &qword_1EB879E50, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (void (*)(void))sub_1C0AE24B8);
  uint64_t v71 = v116;
  sub_1C152065C();
  uint64_t v116 = v71;
  if (v71)
  {
    unsigned int v28 = 270327;
    (*(void (**)(char *, uint64_t))(v113 + 8))(v101, v57);
    goto LABEL_4;
  }
  uint64_t v72 = v118[0];
  if (!v118[0]) {
    uint64_t v72 = v59;
  }
  v117[15] = v72;
  sub_1BFE79B2C(0, &qword_1EB879EE0, type metadata accessor for FormatPropertyDefinition, MEMORY[0x1E4FBB320]);
  char v119 = 14;
  sub_1BFCCF8EC((unint64_t *)&qword_1EB879EE8, &qword_1EB879EE0, type metadata accessor for FormatPropertyDefinition, (void (*)(void))sub_1C0AE24EC);
  uint64_t v73 = v116;
  sub_1C152065C();
  uint64_t v116 = v73;
  if (v73)
  {
    (*(void (**)(char *, uint64_t))(v113 + 8))(v101, v57);
    unsigned int v28 = 278519;
    goto LABEL_4;
  }
  uint64_t v74 = v118[0];
  if (!v118[0]) {
    uint64_t v74 = v59;
  }
  v117[16] = v74;
  sub_1BFE79B2C(0, (unint64_t *)&unk_1EB879D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBB320]);
  char v119 = 15;
  sub_1BFCCF8EC((unint64_t *)&qword_1EB879DA0, (unint64_t *)&unk_1EB879D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (void (*)(void))sub_1C0082FE0);
  uint64_t v75 = v116;
  sub_1C152065C();
  uint64_t v116 = v75;
  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v113 + 8))(v101, v57);
    unsigned int v28 = 294903;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
    int v29 = 0;
    BOOL v30 = 0;
    int v31 = 0;
    int v32 = 0;
    int v33 = 0;
    int v34 = 0;
    BOOL v35 = 0;
    int v36 = 0;
    int v37 = 0;
    int v38 = 0;
    int v39 = (v28 >> 5) & 1;
    int v40 = (v28 >> 6) & 1;
    int v41 = (v28 >> 7) & 1;
    LODWORD(v107) = (v28 >> 8) & 1;
    LODWORD(v108) = (v28 >> 9) & 1;
    LODWORD(v109) = (v28 >> 10) & 1;
    LODWORD(v110) = (v28 >> 11) & 1;
    LODWORD(v111) = (v28 >> 12) & 1;
    LODWORD(v112) = (v28 >> 13) & 1;
    LODWORD(v113) = (v28 >> 14) & 1;
    if ((v28 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v76 = v118[0];
  if (!v118[0]) {
    uint64_t v76 = v59;
  }
  v117[17] = v76;
  sub_1BFEBC4B4();
  char v119 = 16;
  sub_1BFEBC724((unint64_t *)&qword_1EB87A020, (void (*)(uint64_t))sub_1BFEBC4B4);
  uint64_t v77 = v116;
  sub_1C152065C();
  BOOL v78 = v77 == 0;
  uint64_t v116 = v77;
  if (v77) {
    goto LABEL_81;
  }
  uint64_t v79 = v118[0];
  uint64_t v80 = MEMORY[0x1E4FBC870];
  if (!v118[0]) {
    uint64_t v79 = MEMORY[0x1E4FBC870];
  }
  v117[18] = v79;
  sub_1C0AE6CE8(0, &qword_1EB878DA8, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  char v119 = 17;
  sub_1C0AE2520();
  uint64_t v81 = v116;
  sub_1C152065C();
  uint64_t v116 = v81;
  if (v81)
  {
LABEL_81:
    (*(void (**)(char *, uint64_t))(v113 + 8))(v101, v63);
    int v82 = 0;
    int v32 = 0;
    int v83 = 0;
  }
  else
  {
    uint64_t v84 = v118[0];
    if (!v118[0]) {
      uint64_t v84 = v59;
    }
    v117[19] = v84;
    char v119 = 18;
    sub_1BFDCA124();
    uint64_t v85 = v116;
    sub_1C152065C();
    uint64_t v116 = v85;
    if (v85) {
      goto LABEL_87;
    }
    uint64_t v86 = v118[0];
    uint64_t v87 = v118[1];
    uint64_t v88 = v117;
    sub_1BFFD0438(v117[20], v117[21]);
    v88[20] = v86;
    v88[21] = v87;
    LOBYTE(v118[0]) = 19;
    sub_1BFEBC2BC(&qword_1EB876F48, (void (*)(uint64_t))type metadata accessor for FormatCompilerOptions);
    uint64_t v89 = v116;
    sub_1C152065C();
    uint64_t v116 = v89;
    if (v89)
    {
LABEL_87:
      (*(void (**)(char *, uint64_t))(v113 + 8))(v101, v63);
      int v32 = 0;
      int v83 = 0;
      int v82 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v108, 1, v107) == 1)
      {
        if (qword_1EA194400 != -1) {
          swift_once();
        }
        uint64_t v90 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
        uint64_t v91 = __swift_project_value_buffer(v90, (uint64_t)qword_1EA198E48);
        uint64_t v92 = v107;
        uint64_t v93 = v102;
        sub_1C0AE25B0(v91, (uint64_t)v102 + *(int *)(v107 + 24), type metadata accessor for FormatCompilerOptions.Newsroom);
        uint64_t v94 = (char *)v93 + *(int *)(v92 + 28);
        uint64_t v95 = sub_1C1518CDC();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56))(v94, 1, 1, v95);
        *uint64_t v93 = v59;
        v93[1] = v59;
        *(uint64_t *)((char *)v93 + *(int *)(v92 + 32)) = v80;
        sub_1C0AE6DAC(v108, &qword_1EB889EC0, type metadata accessor for FormatCompilerOptions);
      }
      else
      {
        sub_1C0AE6C80(v108, (uint64_t)v102, type metadata accessor for FormatCompilerOptions);
      }
      sub_1C0AE6C80((uint64_t)v102, (uint64_t)v117 + v115[23], type metadata accessor for FormatCompilerOptions);
      LOBYTE(v118[0]) = 20;
      sub_1BFEBC2BC(&qword_1EB8714E8, MEMORY[0x1E4FAB0A8]);
      uint64_t v96 = v116;
      sub_1C152065C();
      uint64_t v116 = v96;
      if (v96)
      {
        (*(void (**)(char *, uint64_t))(v113 + 8))(v101, v63);
        int v83 = 0;
        int v82 = 1;
        int v32 = 1;
      }
      else
      {
        sub_1BFC66384((uint64_t)v114, (uint64_t)v118);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v110, 1, v106) == 1)
        {
          __swift_project_boxed_opaque_existential_1(v118, v118[3]);
          uint64_t v97 = sub_1C1520EAC();
          Dictionary<>.formatVersion.getter(v97, v109);
          swift_bridgeObjectRelease();
          sub_1C0AE6DAC(v110, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 32))(v109, v110, v106);
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v118);
        (*(void (**)(char *, uint64_t, uint64_t))(v105 + 32))((char *)v117 + v115[24], v109, v106);
        sub_1C1518CDC();
        char v119 = 21;
        sub_1BFEBC2BC(&qword_1EB884FD8, MEMORY[0x1E4FAAFC8]);
        uint64_t v98 = v116;
        sub_1C152065C();
        uint64_t v116 = v98;
        if (!v98)
        {
          (*(void (**)(char *, uint64_t))(v113 + 8))(v101, v63);
          uint64_t v99 = (uint64_t)v117;
          sub_1BFEF6F58(v111, (uint64_t)v117 + v115[25]);
          sub_1C0AE25B0(v99, v103, (uint64_t (*)(void))type metadata accessor for FormatPackage);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
          return sub_1C0AE6E1C(v99, (uint64_t (*)(void))type metadata accessor for FormatPackage);
        }
        (*(void (**)(char *, uint64_t))(v113 + 8))(v101, v63);
        int v82 = 1;
        int v32 = 1;
        int v83 = 1;
      }
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
  int v39 = 1;
  int v40 = 1;
  int v41 = 1;
  LODWORD(v107) = 1;
  LODWORD(v108) = 1;
  LODWORD(v109) = 1;
  LODWORD(v110) = 1;
  LODWORD(v111) = 1;
  LODWORD(v112) = 1;
  LODWORD(v113) = 1;
  int v29 = 1;
  BOOL v30 = v78;
  int v31 = v82;
  int v33 = v83;
LABEL_5:
  BOOL v35 = v30;
  int v36 = v31;
  int v42 = v33;
  swift_bridgeObjectRelease();
  int v34 = v29;
  int v37 = v32;
  int v38 = v42;
LABEL_6:
  LODWORD(v114) = v38;
  int v43 = v37;
  uint64_t v44 = v117;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v39)
  {
    swift_bridgeObjectRelease();
    if (!v40)
    {
LABEL_8:
      if (!v41) {
        goto LABEL_9;
      }
      goto LABEL_27;
    }
  }
  else if (!v40)
  {
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  if (!v41)
  {
LABEL_9:
    if (!v107) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  if (!v107)
  {
LABEL_10:
    if (!v108) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  swift_bridgeObjectRelease();
  if (!v108)
  {
LABEL_11:
    if (!v109) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_29:
  swift_bridgeObjectRelease();
  if (!v109)
  {
LABEL_12:
    if (!v110) {
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  if (!v110)
  {
LABEL_13:
    if (!v111) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_31:
  swift_bridgeObjectRelease();
  if (!v111)
  {
LABEL_14:
    if (!v112) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  swift_bridgeObjectRelease();
  if (!v112)
  {
LABEL_15:
    if (!v113) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  swift_bridgeObjectRelease();
  if (!v113)
  {
LABEL_16:
    if (!v34) {
      goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_34:
  swift_bridgeObjectRelease();
  if (!v34)
  {
LABEL_17:
    if (!v35) {
      goto LABEL_18;
    }
LABEL_36:
    swift_bridgeObjectRelease();
    if (!v36) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_35:
  swift_bridgeObjectRelease();
  if (v35) {
    goto LABEL_36;
  }
LABEL_18:
  if (v36) {
LABEL_19:
  }
    swift_bridgeObjectRelease();
LABEL_20:
  uint64_t result = sub_1BFFD0438(v44[20], v44[21]);
  if (v43) {
    uint64_t result = sub_1C0AE6E1C((uint64_t)v44 + v115[23], type metadata accessor for FormatCompilerOptions);
  }
  if (v114) {
    return (*(uint64_t (**)(char *, uint64_t))(v105 + 8))((char *)v44 + v115[24], v106);
  }
  return result;
}

uint64_t FormatPackage.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  v168 = (char *)&v165 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v167 = (uint64_t)&v165 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v166 = (uint64_t)&v165 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v169 = (uint64_t)&v165 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v171 = (uint64_t)&v165 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v172 = (uint64_t)&v165 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v173 = (uint64_t)&v165 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v174 = (uint64_t)&v165 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v175 = (uint64_t)&v165 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v176 = (uint64_t)&v165 - v23;
  MEMORY[0x1F4188790](v24);
  long long v177 = (char *)&v165 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v178 = (char *)&v165 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v179 = (char *)&v165 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v180 = (char *)&v165 - v31;
  MEMORY[0x1F4188790](v32);
  uint64_t v181 = (char *)&v165 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v182 = (uint64_t)&v165 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v183 = (char *)&v165 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v184 = (uint64_t)&v165 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v185 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v165 - v41);
  MEMORY[0x1F4188790](v42);
  uint64_t v186 = (uint64_t)&v165 - v43;
  MEMORY[0x1F4188790](v44);
  uint64_t v46 = (char *)&v165 - v45;
  MEMORY[0x1F4188790](v47);
  int64_t v49 = (char *)&v165 - v48;
  sub_1C08E8C04();
  uint64_t v170 = v50;
  MEMORY[0x1F4188790](v50);
  uint64_t v52 = (char *)&v165 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = a1[3];
  uint64_t v53 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v54);
  uint64_t v55 = type metadata accessor for FormatPackage();
  unint64_t v56 = sub_1C08E8CA0();
  uint64_t v165 = v55;
  sub_1BFEFBD78(v55, v57, v54, v55, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v53, (uint64_t)v52, v56, (uint64_t)&off_1F1C39B68);
  uint64_t v58 = *v2;
  uint64_t v59 = v2[1];
  unint64_t v187 = v2;
  uint64_t v60 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v60 != -1) {
    swift_once();
  }
  uint64_t v61 = sub_1C151928C();
  uint64_t v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1EB93CAB0);
  uint64_t v63 = *(void *)(v61 - 8);
  uint64_t v64 = *(char **)(v63 + 16);
  uint64_t v65 = v63 + 16;
  uint64_t v188 = v62;
  ((void (*)(char *))v64)(v49);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v66 = v189;
  sub_1C06C58D4(v58, v59, 0, (uint64_t)v49, (uint64_t)sub_1C01B158C, 0);
  if (v66)
  {
    sub_1C0AE6E1C((uint64_t)v49, type metadata accessor for FormatVersionRequirement);
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t v78 = (uint64_t)v52;
    return sub_1C0AE6E1C(v78, (uint64_t (*)(void))sub_1C08E8C04);
  }
  uint64_t v189 = 0;
  sub_1C0AE6E1C((uint64_t)v49, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v67 = v64;
  uint64_t v68 = v188;
  ((void (*)(char *, uint64_t, uint64_t))v67)(v46, v188, v61);
  swift_storeEnumTagMultiPayload();
  sub_1C0AE6E1C((uint64_t)v46, type metadata accessor for FormatVersionRequirement);
  uint64_t v69 = v65;
  uint64_t v71 = v186;
  uint64_t v70 = v187;
  uint64_t v72 = v187[4];
  uint64_t v73 = v187[5];
  uint64_t v74 = v68;
  uint64_t v75 = (void (*)(uint64_t, uint64_t, uint64_t))v67;
  uint64_t v76 = v69;
  v75(v186, v74, v61);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  uint64_t v77 = v189;
  sub_1C0725D14(v72, v73, 2, v71, (uint64_t)sub_1C01B158C, 0);
  if (v77)
  {
    sub_1C0AE6E1C(v71, type metadata accessor for FormatVersionRequirement);
    goto LABEL_7;
  }
  sub_1C0AE6E1C(v71, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v189 = 0;
  char v80 = *((unsigned char *)v70 + 48);
  uint64_t v81 = (uint64_t)v52;
  uint64_t v82 = (uint64_t)v185;
  uint64_t v83 = v188;
  v75((uint64_t)v185, v188, v61);
  swift_storeEnumTagMultiPayload();
  uint64_t v84 = v189;
  sub_1C06C5A30(v80, 3, v82, (uint64_t)sub_1C01B158C, 0);
  if (v84)
  {
    sub_1C0AE6E1C(v82, type metadata accessor for FormatVersionRequirement);
    uint64_t v78 = v81;
    return sub_1C0AE6E1C(v78, (uint64_t (*)(void))sub_1C08E8C04);
  }
  uint64_t v85 = v76;
  uint64_t v86 = v81;
  uint64_t v189 = 0;
  uint64_t v186 = v61;
  sub_1C0AE6E1C(v82, type metadata accessor for FormatVersionRequirement);
  int v87 = *((unsigned __int8 *)v187 + 49);
  if (qword_1EB887658 != -1) {
    swift_once();
  }
  uint64_t v88 = v186;
  uint64_t v89 = __swift_project_value_buffer(v186, (uint64_t)qword_1EB93CAF8);
  uint64_t v90 = v184;
  v75(v184, v89, v88);
  swift_storeEnumTagMultiPayload();
  if (v87 == 4)
  {
    uint64_t v185 = v75;
    uint64_t v91 = v85;
    goto LABEL_21;
  }
  uint64_t v92 = v189;
  char v93 = sub_1C0844114(v90, 4, (uint64_t)sub_1C01B158C, 0);
  if (v92)
  {
LABEL_16:
    sub_1C0AE6E1C(v184, type metadata accessor for FormatVersionRequirement);
    return sub_1C0AE6E1C(v81, (uint64_t (*)(void))sub_1C08E8C04);
  }
  uint64_t v185 = v75;
  uint64_t v189 = 0;
  uint64_t v91 = v85;
  if (v93)
  {
    LOBYTE(v191) = 4;
    LOBYTE(v190) = v87;
    sub_1C0AE6CE8(0, &qword_1EA1A07F0, (uint64_t (*)(void))sub_1C08E8CA0, (uint64_t)&type metadata for FormatPackage.CodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1C08E8CF4();
    sub_1C0473CDC();
    uint64_t v94 = v189;
    sub_1C1520BAC();
    if (v94) {
      goto LABEL_16;
    }
    uint64_t v189 = 0;
  }
  uint64_t v90 = v184;
LABEL_21:
  sub_1C0AE6E1C(v90, type metadata accessor for FormatVersionRequirement);
  uint64_t v95 = (uint64_t)v183;
  uint64_t v96 = v83;
  uint64_t v97 = v185;
  v185((uint64_t)v183, v96, v186);
  swift_storeEnumTagMultiPayload();
  uint64_t v98 = swift_bridgeObjectRetain();
  uint64_t v99 = v189;
  sub_1C06DCA34(v98, 5, v95, (uint64_t)sub_1C01B158C, 0);
  if (v99)
  {
    sub_1C0AE6E1C(v95, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1C0AE6E1C(v81, (uint64_t (*)(void))sub_1C08E8C04);
  }
  sub_1C0AE6E1C(v95, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v100 = v182;
  uint64_t v101 = v186;
  v97(v182, v188, v186);
  swift_storeEnumTagMultiPayload();
  uint64_t v102 = swift_bridgeObjectRetain();
  sub_1C06DCA98(v102, 6);
  sub_1C0AE6E1C(v100, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v103 = (uint64_t)v181;
  v97((uint64_t)v181, v188, v101);
  swift_storeEnumTagMultiPayload();
  uint64_t v104 = swift_bridgeObjectRetain();
  sub_1C06DCBF8(v104, 7);
  sub_1C0AE6E1C(v103, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v105 = (uint64_t)v180;
  v97((uint64_t)v180, v188, v101);
  swift_storeEnumTagMultiPayload();
  uint64_t v106 = swift_bridgeObjectRetain();
  sub_1C06DCD58(v106, 8);
  sub_1C0AE6E1C(v105, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v107 = (uint64_t)v179;
  v97((uint64_t)v179, v188, v101);
  swift_storeEnumTagMultiPayload();
  uint64_t v108 = swift_bridgeObjectRetain();
  sub_1C06DCEB8(v108, 9, v107, (uint64_t)sub_1C01B158C, 0);
  sub_1C0AE6E1C(v107, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v109 = (uint64_t)v178;
  v97((uint64_t)v178, v188, v101);
  swift_storeEnumTagMultiPayload();
  uint64_t v110 = swift_bridgeObjectRetain();
  sub_1C06DD068(v110, 10);
  sub_1C0AE6E1C(v109, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v111 = (uint64_t)v177;
  v97((uint64_t)v177, v188, v101);
  swift_storeEnumTagMultiPayload();
  uint64_t v112 = swift_bridgeObjectRetain();
  sub_1C06DD1C8(v112, 11);
  sub_1C0AE6E1C(v111, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v113 = v188;
  uint64_t v184 = v91;
  ((void (*)(uint64_t))v97)(v176);
  swift_storeEnumTagMultiPayload();
  uint64_t v114 = swift_bridgeObjectRetain();
  sub_1C06DD328(v114, 12);
  sub_1C0AE6E1C(v176, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v115 = v175;
  v185(v175, v113, v186);
  swift_storeEnumTagMultiPayload();
  uint64_t v116 = swift_bridgeObjectRetain();
  sub_1C06C5B90(v116, 13, v115, (uint64_t)sub_1C01B158C, 0);
  sub_1C0AE6E1C(v175, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v117 = v174;
  v185(v174, v113, v186);
  swift_storeEnumTagMultiPayload();
  uint64_t v118 = swift_bridgeObjectRetain();
  sub_1C06C5D28(v118, 14, v117, (uint64_t)sub_1C01B158C, 0);
  sub_1C0AE6E1C(v174, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v185(v173, v113, v186);
  swift_storeEnumTagMultiPayload();
  uint64_t v119 = swift_bridgeObjectRetain();
  sub_1C06DD488(v119, 15);
  sub_1C0AE6E1C(v173, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v120 = (void *)(v86 + *(int *)(v170 + 36));
  uint64_t v121 = v120[3];
  uint64_t v122 = v120[4];
  uint64_t v123 = __swift_project_boxed_opaque_existential_1(v120, v121);
  uint64_t v124 = sub_1BFDCC904((uint64_t)v123, v121, (uint64_t)&type metadata for FormatVersions.SydroC, v122, (uint64_t)&off_1F1C399C8);
  uint64_t v125 = v187[18];
  swift_bridgeObjectRetain();
  if ((v124 & 1) == 0)
  {
    uint64_t v126 = swift_bridgeObjectRetain();
    uint64_t v127 = sub_1C0ADB8C4(v126);
    uint64_t v128 = sub_1BFEF4060(v127);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v125 = v128;
  }
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v129 = v186;
  uint64_t v130 = __swift_project_value_buffer(v186, (uint64_t)qword_1EB93CA98);
  v185(v172, v130, v129);
  uint64_t v131 = swift_storeEnumTagMultiPayload();
  MEMORY[0x1F4188790](v131);
  unint64_t v163 = (uint64_t (*)())v125;
  if (*(void *)(v125 + 16))
  {
    MEMORY[0x1F4188790](v132);
    unint64_t v163 = sub_1C0AE2F44;
    uint64_t v164 = v133;
    if (sub_1C0844114(v172, 16, (uint64_t)sub_1C08E8D9C, (uint64_t)(&v165 - 4)))
    {
      char v192 = 16;
      uint64_t v134 = swift_bridgeObjectRetain();
      uint64_t v135 = sub_1BFE71F8C(v134);
      swift_bridgeObjectRelease();
      uint64_t v190 = v135;
      swift_retain();
      sub_1BFD8BB48((uint64_t *)&v190);
      uint64_t v189 = 0;
      swift_release();
      uint64_t v191 = (uint64_t)v190;
      sub_1C0AE6CE8(0, &qword_1EA1A07F0, (uint64_t (*)(void))sub_1C08E8CA0, (uint64_t)&type metadata for FormatPackage.CodingKeys, MEMORY[0x1E4FBBDE0]);
      uint64_t v183 = v136;
      sub_1C08E8CF4();
      sub_1BFED9C20();
      sub_1BFEBC724((unint64_t *)&qword_1EB85DF50, (void (*)(uint64_t))sub_1BFED9C20);
      uint64_t v137 = v189;
      sub_1C1520BAC();
      if (v137)
      {
        swift_release();
        sub_1C0AE6E1C(v172, type metadata accessor for FormatVersionRequirement);
        sub_1C0AE6E1C(v86, (uint64_t (*)(void))sub_1C08E8C04);
        return swift_bridgeObjectRelease();
      }
      swift_release();
    }
  }
  sub_1C0AE6E1C(v172, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v185(v171, v113, v186);
  swift_storeEnumTagMultiPayload();
  uint64_t v138 = swift_bridgeObjectRetain();
  sub_1C06DD5E0(v138, 17);
  sub_1C0AE6E1C(v171, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v139 = v187[20];
  unint64_t v140 = v187[21];
  uint64_t v141 = v169;
  v185(v169, v130, v186);
  swift_storeEnumTagMultiPayload();
  sub_1BFEB9640(v139, v140);
  sub_1C0725F08(v139, v140, 18, v141, (uint64_t)sub_1C01B158C, 0);
  uint64_t v189 = 0;
  sub_1C0AE6E1C(v169, type metadata accessor for FormatVersionRequirement);
  sub_1BFFD0438(v139, v140);
  uint64_t v182 = *(int *)(v165 + 92);
  uint64_t v142 = v166;
  v185(v166, v113, v186);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v191) = 19;
  uint64_t v143 = (uint64_t *)(v86 + *(int *)(v170 + 44));
  uint64_t v145 = *v143;
  uint64_t v144 = v143[1];
  uint64_t v146 = swift_allocObject();
  uint64_t v183 = (char *)&v165;
  *(unsigned char *)(v146 + 16) = 19;
  *(void *)(v146 + 24) = v145;
  *(void *)(v146 + 32) = v144;
  MEMORY[0x1F4188790](v146);
  *(&v165 - 4) = (uint64_t)sub_1C01B158C;
  *(&v165 - 3) = 0;
  unint64_t v163 = sub_1C0AE2F84;
  uint64_t v164 = v147;
  swift_retain();
  uint64_t v148 = v189;
  sub_1C0816644(v142, 19, (uint64_t)sub_1C08659A0, (uint64_t)(&v165 - 6));
  uint64_t v189 = v148;
  if (v148) {
    goto LABEL_36;
  }
  sub_1C0AE6CE8(0, &qword_1EA1A07F0, (uint64_t (*)(void))sub_1C08E8CA0, (uint64_t)&type metadata for FormatPackage.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v150 = v149;
  unint64_t v151 = sub_1C08E8CF4();
  type metadata accessor for FormatCompilerOptions(0);
  sub_1BFEBC2BC(&qword_1EB85BCB0, (void (*)(uint64_t))type metadata accessor for FormatCompilerOptions);
  uint64_t v152 = v189;
  uint64_t v182 = (uint64_t)v150;
  uint64_t v183 = (char *)v151;
  sub_1C1520BAC();
  uint64_t v189 = v152;
  if (v152)
  {
LABEL_36:
    swift_release();
    sub_1C0AE6E1C(v166, type metadata accessor for FormatVersionRequirement);
  }
  else
  {
    swift_release();
    sub_1C0AE6E1C(v166, type metadata accessor for FormatVersionRequirement);
    uint64_t v153 = v167;
    v185(v167, v113, v186);
    swift_storeEnumTagMultiPayload();
    LOBYTE(v191) = 20;
    uint64_t v154 = *v143;
    uint64_t v155 = v143[1];
    uint64_t v156 = swift_allocObject();
    *(unsigned char *)(v156 + 16) = 20;
    *(void *)(v156 + 24) = v154;
    *(void *)(v156 + 32) = v155;
    MEMORY[0x1F4188790](v156);
    *(&v165 - 4) = (uint64_t)sub_1C01B158C;
    *(&v165 - 3) = 0;
    unint64_t v163 = sub_1C0AE2F84;
    uint64_t v164 = v157;
    swift_retain();
    uint64_t v158 = v189;
    sub_1C0816644(v153, 20, (uint64_t)sub_1C090A470, (uint64_t)(&v165 - 6));
    if (!v158)
    {
      sub_1BFEBC2BC(&qword_1EB85C8B0, MEMORY[0x1E4FAB0A8]);
      sub_1C1520BAC();
      swift_release();
      sub_1C0AE6E1C(v167, type metadata accessor for FormatVersionRequirement);
      uint64_t v159 = (uint64_t)v187 + *(int *)(v165 + 100);
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      uint64_t v160 = v186;
      uint64_t v161 = __swift_project_value_buffer(v186, (uint64_t)qword_1EB93CA80);
      uint64_t v162 = (uint64_t)v168;
      v185((uint64_t)v168, v161, v160);
      swift_storeEnumTagMultiPayload();
      sub_1C07260FC(v159, 21, v162, (uint64_t)sub_1C01B158C, 0);
      sub_1C0AE6E1C(v162, type metadata accessor for FormatVersionRequirement);
      uint64_t v78 = v86;
      return sub_1C0AE6E1C(v78, (uint64_t (*)(void))sub_1C08E8C04);
    }
    swift_release();
    sub_1C0AE6E1C(v167, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1C0AE6E1C(v86, (uint64_t (*)(void))sub_1C08E8C04);
}

uint64_t sub_1C0AE177C()
{
  return 0;
}

unint64_t sub_1C0AE1820(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x7470697263736564;
      break;
    case 3:
      unint64_t result = 1701605234;
      break;
    case 4:
      unint64_t result = 0x6F69746365726964;
      break;
    case 5:
      unint64_t result = 0x736567616B636170;
      break;
    case 6:
      unint64_t result = 0x7370756F7267;
      break;
    case 7:
      unint64_t result = 0x736D657469;
      break;
    case 8:
      unint64_t result = 0x73656C797473;
      break;
    case 9:
      unint64_t result = 0x7374657070696E73;
      break;
    case 10:
      unint64_t result = 0x656D656C70707573;
      break;
    case 11:
      unint64_t result = 0x7365707974;
      break;
    case 12:
      unint64_t result = 0x697461726F636564;
      break;
    case 13:
      unint64_t result = 0x73746F6C73;
      break;
    case 14:
      unint64_t result = 0x69747265706F7270;
      break;
    case 15:
      unint64_t result = 0x736E6F6974706FLL;
      break;
    case 16:
      unint64_t result = 0x726F7463656C6573;
      break;
    case 17:
      unint64_t result = 0x617A696C61636F6CLL;
      break;
    case 18:
      unint64_t result = 0x79536E6D756C6F63;
      break;
    case 19:
      unint64_t result = 0x72656C69706D6F63;
      break;
    case 20:
      unint64_t result = 0x655674616D726F66;
      break;
    case 21:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0AE1AE4(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1C0AE1820(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C0AE1820(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0AE1B70()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0AE1820(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0AE1BD4()
{
  sub_1C0AE1820(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0AE1C28()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0AE1820(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0AE1C88@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0AE69B8();
  *a1 = result;
  return result;
}

unint64_t sub_1C0AE1CB8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C0AE1820(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C0AE1CE4()
{
  return sub_1C0AE1820(*v0);
}

uint64_t sub_1C0AE1CEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0AE69B8();
  *a1 = result;
  return result;
}

void sub_1C0AE1D14(unsigned char *a1@<X8>)
{
  *a1 = 22;
}

uint64_t sub_1C0AE1D20(uint64_t a1)
{
  unint64_t v2 = sub_1C08E8CA0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0AE1D5C(uint64_t a1)
{
  unint64_t v2 = sub_1C08E8CA0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0AE1D98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  char v1 = (int *)type metadata accessor for FormatCompilerOptions(0);
  MEMORY[0x1F4188790](v1);
  unint64_t v3 = (uint64_t *)((char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_1C151928C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151635C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151634C();
  uint64_t v12 = sub_1C151633C();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_1EB87BD00 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB8799C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15, v4);
  unsigned __int8 v28 = 0;
  if (qword_1EA194400 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1EA198E48);
  sub_1C0AE25B0(v17, (uint64_t)v3 + v1[6], type metadata accessor for FormatCompilerOptions.Newsroom);
  uint64_t v18 = (char *)v3 + v1[7];
  uint64_t v19 = sub_1C1518CDC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = (unsigned char *)MEMORY[0x1E4FBC860];
  *unint64_t v3 = MEMORY[0x1E4FBC860];
  v3[1] = v20;
  uint64_t v21 = MEMORY[0x1E4FBC870];
  *(void *)((char *)v3 + v1[8]) = MEMORY[0x1E4FBC870];
  long long v27 = xmmword_1C1533700;
  char v26 = 4;
  uint64_t v22 = sub_1C1147B64(v12, v14, (uint64_t)v7, &v28, &v26, 0, 0, 0, 0, (uint64_t)v20, v20, (uint64_t)v20, (uint64_t)v20, (uint64_t)v20, (uint64_t)v20, (uint64_t)v20, (uint64_t)v20, (uint64_t)v20, v21,
          (uint64_t)v20,
          (uint64_t)v3,
          (uint64_t *)&v27,
          (uint64_t)v20);
  return sub_1C0ADBB38((uint64_t)v22, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC870], MEMORY[0x1E4FBC870], v25);
}

uint64_t sub_1C0AE2124@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPackage.init(from:)(a1, a2);
}

uint64_t sub_1C0AE213C(void *a1)
{
  return FormatPackage.encode(to:)(a1);
}

unint64_t sub_1C0AE2158()
{
  unint64_t result = qword_1EB878DE0;
  if (!qword_1EB878DE0)
  {
    sub_1C0AE6CE8(255, &qword_1EB878DE8, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878DE0);
  }
  return result;
}

unint64_t sub_1C0AE21E8()
{
  unint64_t result = qword_1EB878DC0;
  if (!qword_1EB878DC0)
  {
    sub_1C0AE6CE8(255, &qword_1EB878DC8, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878DC0);
  }
  return result;
}

unint64_t sub_1C0AE2278()
{
  unint64_t result = qword_1EB878DF0;
  if (!qword_1EB878DF0)
  {
    sub_1C0AE6CE8(255, &qword_1EB878DF8, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878DF0);
  }
  return result;
}

unint64_t sub_1C0AE2308()
{
  unint64_t result = qword_1EB878DB0;
  if (!qword_1EB878DB0)
  {
    sub_1C0AE6CE8(255, &qword_1EB878DB8, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878DB0);
  }
  return result;
}

unint64_t sub_1C0AE2398()
{
  unint64_t result = qword_1EB878DD0;
  if (!qword_1EB878DD0)
  {
    sub_1C0AE6CE8(255, &qword_1EB878DD8, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878DD0);
  }
  return result;
}

unint64_t sub_1C0AE2428()
{
  unint64_t result = qword_1EB878D90;
  if (!qword_1EB878D90)
  {
    sub_1C0AE6CE8(255, &qword_1EB878D98, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878D90);
  }
  return result;
}

uint64_t sub_1C0AE24B8()
{
  return sub_1BFEBC2BC(&qword_1EB876CB8, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
}

uint64_t sub_1C0AE24EC()
{
  return sub_1BFEBC2BC(&qword_1EB8782A8, (void (*)(uint64_t))type metadata accessor for FormatPropertyDefinition);
}

unint64_t sub_1C0AE2520()
{
  unint64_t result = qword_1EB878DA0;
  if (!qword_1EB878DA0)
  {
    sub_1C0AE6CE8(255, &qword_1EB878DA8, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878DA0);
  }
  return result;
}

uint64_t sub_1C0AE25B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

BOOL _s8NewsFeed13FormatPackageV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFFC50CC();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v68 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v68 - v19;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v21 = sub_1C1520A9C(), BOOL result = 0, (v21 & 1) != 0))
  {
    uint64_t v23 = *(void *)(a1 + 24);
    uint64_t v24 = *(void *)(a2 + 24);
    if (v23)
    {
      if (!v24) {
        return 0;
      }
      if (*(void *)(a1 + 16) != *(void *)(a2 + 16) || v23 != v24)
      {
        char v25 = sub_1C1520A9C();
        BOOL result = 0;
        if ((v25 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v24)
    {
      return 0;
    }
    uint64_t v26 = *(void *)(a1 + 40);
    uint64_t v27 = *(void *)(a2 + 40);
    if (v26)
    {
      if (!v27) {
        return 0;
      }
      if (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v26 != v27)
      {
        char v28 = sub_1C1520A9C();
        BOOL result = 0;
        if ((v28 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v27)
    {
      return 0;
    }
    if ((sub_1C147E540(*(unsigned char *)(a1 + 48), *(unsigned char *)(a2 + 48)) & 1) == 0) {
      return 0;
    }
    int v29 = *(unsigned __int8 *)(a1 + 49);
    int v30 = *(unsigned __int8 *)(a2 + 49);
    if (v29 == 4)
    {
      if (v30 != 4) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      if (v30 == 4 || v29 != v30) {
        return result;
      }
    }
    uint64_t v69 = v5;
    uint64_t v70 = v4;
    uint64_t v31 = *(void *)(a1 + 56);
    uint64_t v32 = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v71) = sub_1C00E5A38(v31, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v71 & 1) == 0) {
      return 0;
    }
    uint64_t v33 = *(void *)(a1 + 64);
    uint64_t v34 = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v71) = sub_1C00F05C8(v33, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v71 & 1) == 0) {
      return 0;
    }
    uint64_t v35 = *(void *)(a1 + 72);
    uint64_t v36 = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v71) = sub_1C00F03C0(v35, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v71 & 1) == 0) {
      return 0;
    }
    uint64_t v37 = *(void *)(a1 + 80);
    uint64_t v38 = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v71) = sub_1C00F0384(v37, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v71 & 1) == 0) {
      return 0;
    }
    uint64_t v39 = *(void *)(a1 + 88);
    uint64_t v40 = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v71) = sub_1C00F0330(v39, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v71 & 1) == 0) {
      return 0;
    }
    uint64_t v41 = *(void *)(a1 + 96);
    uint64_t v42 = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v71) = sub_1C00F02F4(v41, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v71 & 1) == 0) {
      return 0;
    }
    uint64_t v43 = *(void *)(a1 + 104);
    uint64_t v44 = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v71) = sub_1C00F02B8(v43, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v71 & 1) == 0) {
      return 0;
    }
    uint64_t v45 = *(void *)(a1 + 112);
    uint64_t v46 = *(void *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v71) = sub_1C00F027C(v45, v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v71 & 1) == 0) {
      return 0;
    }
    if ((sub_1C00F01EC(*(void *)(a1 + 120), *(void *)(a2 + 120)) & 1) == 0) {
      return 0;
    }
    if ((sub_1C00DFB04(*(void *)(a1 + 128), *(void *)(a2 + 128)) & 1) == 0) {
      return 0;
    }
    uint64_t v47 = *(void *)(a1 + 136);
    uint64_t v48 = *(void *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v71) = sub_1C00E0650(v47, v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v71 & 1) == 0) {
      return 0;
    }
    uint64_t v49 = *(void *)(a1 + 144);
    uint64_t v50 = *(void *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v71) = sub_1BFEFAE14(v49, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v71 & 1) == 0) {
      return 0;
    }
    uint64_t v51 = *(void *)(a1 + 152);
    uint64_t v52 = *(void *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v71) = sub_1C00F0240(v51, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v71 & 1) == 0) {
      return 0;
    }
    unint64_t v53 = *(void *)(a1 + 168);
    uint64_t v71 = *(void *)(a1 + 160);
    unint64_t v54 = *(void *)(a2 + 168);
    uint64_t v68 = *(void *)(a2 + 160);
    if (v53 == 2)
    {
      if (v54 == 2)
      {
LABEL_44:
        uint64_t v58 = type metadata accessor for FormatPackage();
        if ((_s8NewsFeed21FormatCompilerOptionsV2eeoiySbAC_ACtFZ_0((uint64_t *)(a1 + *(int *)(v58 + 92)), (uint64_t *)(a2 + *(int *)(v58 + 92))) & 1) == 0|| (sub_1C151922C() & 1) == 0)
        {
          return 0;
        }
        sub_1BFEF6CE8(a1 + *(int *)(v58 + 100), (uint64_t)v20);
        sub_1BFEF6CE8(a2 + *(int *)(v58 + 100), (uint64_t)v17);
        uint64_t v59 = (uint64_t)&v11[*(int *)(v9 + 48)];
        sub_1BFEF6CE8((uint64_t)v20, (uint64_t)v11);
        sub_1BFEF6CE8((uint64_t)v17, v59);
        uint64_t v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
        if (v60((uint64_t)v11, 1, v70) == 1)
        {
          uint64_t v61 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
          sub_1C0AE6DAC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          sub_1C0AE6DAC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v61);
          if (v60(v59, 1, v70) == 1)
          {
            sub_1C0AE6DAC((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            return 1;
          }
          goto LABEL_51;
        }
        sub_1BFEF6CE8((uint64_t)v11, (uint64_t)v14);
        if (v60(v59, 1, v70) == 1)
        {
          uint64_t v62 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
          sub_1C0AE6DAC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          sub_1C0AE6DAC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v62);
          (*(void (**)(char *, uint64_t))(v69 + 8))(v14, v70);
LABEL_51:
          sub_1C0AE6E1C((uint64_t)v11, (uint64_t (*)(void))sub_1BFFC50CC);
          return 0;
        }
        uint64_t v64 = v69;
        uint64_t v63 = v70;
        (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v7, v59, v70);
        sub_1BFEBC2BC(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
        char v65 = sub_1C151E5CC();
        uint64_t v66 = *(void (**)(char *, uint64_t))(v64 + 8);
        v66(v7, v63);
        uint64_t v67 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
        sub_1C0AE6DAC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        sub_1C0AE6DAC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v67);
        v66(v14, v63);
        sub_1C0AE6DAC((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, v67);
        return (v65 & 1) != 0;
      }
    }
    else
    {
      uint64_t v73 = v71;
      unint64_t v74 = v53;
      if (v54 != 2)
      {
        v72[0] = v68;
        v72[1] = v54;
        uint64_t v57 = v71;
        sub_1BFEB9640(v71, v53);
        sub_1C0187DE0(v57, v53);
        LODWORD(v68) = _s8NewsFeed23FormatGroupColumnSystemO2eeoiySbAC_ACtFZ_0(&v73, (uint64_t)v72);
        sub_1BFFBE2A8(v73, v74);
        sub_1BFFD0438(v57, v53);
        if ((v68 & 1) == 0) {
          return 0;
        }
        goto LABEL_44;
      }
      uint64_t v55 = v71;
      sub_1C0187DE0(v71, v53);
      sub_1C0187DE0(v55, v53);
      sub_1BFFBE2A8(v55, v53);
    }
    uint64_t v56 = v68;
    sub_1BFEB9640(v68, v54);
    sub_1BFFD0438(v71, v53);
    sub_1BFFD0438(v56, v54);
    return 0;
  }
  return result;
}

uint64_t sub_1C0AE2F44()
{
  return sub_1C0AE177C();
}

uint64_t sub_1C0AE2F4C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0AE2F88()
{
  return sub_1C0827CFC(*(unsigned char *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24));
}

uint64_t sub_1C0AE2F94@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0AE2FA0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1C0AE2FE4@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 49);
  return result;
}

unsigned char *sub_1C0AE2FF0(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 49) = *result;
  return result;
}

uint64_t sub_1C0AE2FFC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0AE3008(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 56) = v3;
  return result;
}

uint64_t sub_1C0AE304C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0AE3058(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 64) = v3;
  return result;
}

uint64_t sub_1C0AE309C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0AE30A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 72) = v3;
  return result;
}

uint64_t sub_1C0AE30EC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0AE30F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 80) = v3;
  return result;
}

uint64_t sub_1C0AE313C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0AE3148(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 88) = v3;
  return result;
}

uint64_t sub_1C0AE318C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0AE3198(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 96) = v3;
  return result;
}

uint64_t sub_1C0AE31DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 104);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0AE31E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 104) = v3;
  return result;
}

uint64_t sub_1C0AE322C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 112);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0AE3238(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 112) = v3;
  return result;
}

uint64_t sub_1C0AE327C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 136);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0AE3288(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 136) = v3;
  return result;
}

uint64_t sub_1C0AE32CC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 144);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0AE32D8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 144) = v3;
  return result;
}

uint64_t sub_1C0AE331C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 152);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0AE3328(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 152) = v3;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatPackage(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    uint64_t v10 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v10;
    uint64_t v11 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v11;
    uint64_t v48 = a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v48;
    uint64_t v49 = a2[16];
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v49;
    uint64_t v50 = a2[18];
    *(void *)(a1 + 136) = a2[17];
    *(void *)(a1 + 144) = v50;
    *(void *)(a1 + 152) = a2[19];
    uint64_t v46 = a2 + 20;
    uint64_t v47 = (_OWORD *)(a1 + 160);
    unint64_t v52 = a2[21];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v52 >= 2)
    {
      uint64_t v12 = a3;
      if (v52 == 2)
      {
        *uint64_t v47 = *v46;
      }
      else
      {
        *(unsigned char *)(a1 + 160) = *(unsigned char *)v46;
        *(void *)(a1 + 168) = v52;
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      *uint64_t v47 = *v46;
      uint64_t v12 = a3;
    }
    uint64_t v14 = *(int *)(v12 + 92);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 8);
    void *v15 = *(uint64_t *)((char *)a2 + v14);
    v15[1] = v17;
    uint64_t v18 = (int *)type metadata accessor for FormatCompilerOptions(0);
    uint64_t v19 = v18[6];
    uint64_t v20 = (char *)v15 + v19;
    uint64_t v21 = v16 + v19;
    uint64_t v22 = *(void *)(v16 + v19 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22 == 1)
    {
      long long v23 = *(_OWORD *)(v21 + 16);
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v23;
      *((_OWORD *)v20 + 2) = *(_OWORD *)(v21 + 32);
    }
    else
    {
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v22;
      uint64_t v24 = *(void *)(v21 + 24);
      *((void *)v20 + 2) = *(void *)(v21 + 16);
      *((void *)v20 + 3) = v24;
      uint64_t v25 = *(void *)(v21 + 40);
      *((void *)v20 + 4) = *(void *)(v21 + 32);
      *((void *)v20 + 5) = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v26 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
    uint64_t v27 = &v20[v26];
    char v28 = (const void *)(v21 + v26);
    uint64_t v29 = sub_1C1518CDC();
    uint64_t v30 = *(void *)(v29 - 8);
    unint64_t v54 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
    if (v54(v28, 1, v29))
    {
      sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    uint64_t v32 = v18[7];
    uint64_t v33 = (char *)v15 + v32;
    uint64_t v34 = (const void *)(v16 + v32);
    uint64_t v51 = v30;
    if (v54((const void *)(v16 + v32), 1, v29))
    {
      sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v30 + 16))(v33, v34, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v33, 0, 1, v29);
    }
    *(void *)((char *)v15 + v18[8]) = *(void *)(v16 + v18[8]);
    uint64_t v36 = *(int *)(a3 + 96);
    uint64_t v37 = a1 + v36;
    uint64_t v38 = (uint64_t)a2 + v36;
    uint64_t v39 = sub_1C151928C();
    uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16);
    swift_bridgeObjectRetain();
    v40(v37, v38, v39);
    uint64_t v41 = *(int *)(a3 + 100);
    uint64_t v42 = (void *)(a1 + v41);
    uint64_t v43 = (char *)a2 + v41;
    if (v54(v43, 1, v29))
    {
      sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v51 + 16))(v42, v43, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v42, 0, 1, v29);
    }
  }
  return a1;
}

uint64_t destroy for FormatPackage(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 168) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + a2[23];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for FormatCompilerOptions(0);
  uint64_t v6 = v4 + *(int *)(v5 + 24);
  if (*(void *)(v6 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = v6 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  uint64_t v8 = sub_1C1518CDC();
  uint64_t v16 = *(void *)(v8 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (!v9(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v7, v8);
  }
  uint64_t v10 = v4 + *(int *)(v5 + 28);
  if (!v9(v10, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v10, v8);
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + a2[24];
  uint64_t v12 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[25];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v13, 1, v8);
  if (!result)
  {
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
    return v15(v13, v8);
  }
  return result;
}

uint64_t initializeWithCopy for FormatPackage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  uint64_t v45 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v45;
  uint64_t v46 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v46;
  uint64_t v47 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v47;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  uint64_t v50 = (unsigned char *)(a2 + 160);
  unint64_t v48 = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v48 >= 2)
  {
    uint64_t v12 = (_OWORD *)(a1 + 160);
    if (v48 != 2)
    {
      *(unsigned char *)(a1 + 160) = *v50;
      *(void *)(a1 + 168) = v48;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    }
    long long v11 = *(_OWORD *)v50;
  }
  else
  {
    long long v11 = *(_OWORD *)v50;
    uint64_t v12 = (_OWORD *)(a1 + 160);
  }
  *uint64_t v12 = v11;
LABEL_7:
  uint64_t v13 = a3[23];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a2 + v13 + 8);
  *uint64_t v14 = *(void *)(a2 + v13);
  v14[1] = v16;
  uint64_t v17 = (int *)type metadata accessor for FormatCompilerOptions(0);
  uint64_t v18 = v17[6];
  uint64_t v19 = (char *)v14 + v18;
  uint64_t v20 = v15 + v18;
  uint64_t v21 = *(void *)(v15 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21 == 1)
  {
    long long v22 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v22;
    *((_OWORD *)v19 + 2) = *(_OWORD *)(v20 + 32);
  }
  else
  {
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v23 = *(void *)(v20 + 24);
    *((void *)v19 + 2) = *(void *)(v20 + 16);
    *((void *)v19 + 3) = v23;
    uint64_t v24 = *(void *)(v20 + 40);
    *((void *)v19 + 4) = *(void *)(v20 + 32);
    *((void *)v19 + 5) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v25 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  uint64_t v26 = &v19[v25];
  uint64_t v27 = (const void *)(v20 + v25);
  uint64_t v28 = sub_1C1518CDC();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v51 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48);
  if (v51(v27, 1, v28))
  {
    sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v29 + 16))(v26, v27, v28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  uint64_t v31 = v17[7];
  uint64_t v32 = (char *)v14 + v31;
  uint64_t v33 = (const void *)(v15 + v31);
  uint64_t v49 = v29;
  if (v51((const void *)(v15 + v31), 1, v28))
  {
    sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v29 + 16))(v32, v33, v28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v32, 0, 1, v28);
  }
  *(void *)((char *)v14 + v17[8]) = *(void *)(v15 + v17[8]);
  uint64_t v35 = a3[24];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_1C151928C();
  uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16);
  swift_bridgeObjectRetain();
  v39(v36, v37, v38);
  uint64_t v40 = a3[25];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (const void *)(a2 + v40);
  if (v51(v42, 1, v28))
  {
    sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v49 + 16))(v41, v42, v28);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v41, 0, 1, v28);
  }
  return a1;
}

uint64_t assignWithCopy for FormatPackage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = *(void *)(a1 + 168);
  unint64_t v7 = *(void *)(a2 + 168);
  if (v6 == 2)
  {
    if (v7 > 2) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  if (v7 == 2)
  {
    sub_1C01D3D9C(a1 + 160);
LABEL_11:
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    goto LABEL_12;
  }
  if (v6 < 2)
  {
    if (v7 >= 2)
    {
LABEL_8:
      *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v7 < 2)
  {
    sub_1C0AE4928(a1 + 160, (unint64_t *)&qword_1EB888F20, (uint64_t (*)(void))sub_1C01D3D48, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    goto LABEL_11;
  }
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_12:
  uint64_t v8 = *(int *)(a3 + 92);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v11 = (int *)type metadata accessor for FormatCompilerOptions(0);
  uint64_t v12 = v11[6];
  uint64_t v13 = v9 + v12;
  uint64_t v47 = v10;
  uint64_t v14 = (long long *)(v10 + v12);
  uint64_t v15 = *(void *)(v9 + v12 + 8);
  uint64_t v16 = *((void *)v14 + 1);
  uint64_t v45 = a3;
  if (v15 == 1)
  {
    if (v16 == 1)
    {
      long long v17 = *v14;
      long long v18 = v14[2];
      *(_OWORD *)(v13 + 16) = v14[1];
      *(_OWORD *)(v13 + 32) = v18;
      *(_OWORD *)uint64_t v13 = v17;
    }
    else
    {
      *(void *)uint64_t v13 = *(void *)v14;
      *(void *)(v13 + 8) = *((void *)v14 + 1);
      *(void *)(v13 + 16) = *((void *)v14 + 2);
      *(void *)(v13 + 24) = *((void *)v14 + 3);
      *(void *)(v13 + 32) = *((void *)v14 + 4);
      *(void *)(v13 + 40) = *((void *)v14 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v16 == 1)
  {
    sub_1C028CE04(v13);
    long long v20 = v14[1];
    long long v19 = v14[2];
    *(_OWORD *)uint64_t v13 = *v14;
    *(_OWORD *)(v13 + 16) = v20;
    *(_OWORD *)(v13 + 32) = v19;
  }
  else
  {
    *(void *)uint64_t v13 = *(void *)v14;
    *(void *)(v13 + 8) = *((void *)v14 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v13 + 16) = *((void *)v14 + 2);
    *(void *)(v13 + 24) = *((void *)v14 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v13 + 32) = *((void *)v14 + 4);
    *(void *)(v13 + 40) = *((void *)v14 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  long long v22 = (void *)(v13 + v21);
  uint64_t v23 = (char *)v14 + v21;
  uint64_t v24 = sub_1C1518CDC();
  uint64_t v46 = *(void *)(v24 - 8);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
  int v26 = v25(v22, 1, v24);
  int v27 = v25(v23, 1, v24);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, char *, uint64_t))(v46 + 16))(v22, v23, v24);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v22, 0, 1, v24);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v46 + 8))(v22, v24);
LABEL_24:
    sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v22, v23, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, char *, uint64_t))(v46 + 24))(v22, v23, v24);
LABEL_25:
  uint64_t v29 = v11[7];
  uint64_t v30 = (void *)(v9 + v29);
  uint64_t v31 = (void *)(v47 + v29);
  int v32 = v25((void *)(v9 + v29), 1, v24);
  int v33 = v25(v31, 1, v24);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v46 + 16))(v30, v31, v24);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v30, 0, 1, v24);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v33)
  {
    (*(void (**)(void *, uint64_t))(v46 + 8))(v30, v24);
LABEL_30:
    sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v46 + 24))(v30, v31, v24);
LABEL_31:
  *(void *)(v9 + v11[8]) = *(void *)(v47 + v11[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = *(int *)(v45 + 96);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = *(int *)(v45 + 100);
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)(a2 + v39);
  LODWORD(v36) = v25((void *)(a1 + v39), 1, v24);
  int v42 = v25(v41, 1, v24);
  if (!v36)
  {
    if (!v42)
    {
      (*(void (**)(void *, void *, uint64_t))(v46 + 24))(v40, v41, v24);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v46 + 8))(v40, v24);
    goto LABEL_36;
  }
  if (v42)
  {
LABEL_36:
    sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v46 + 16))(v40, v41, v24);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v40, 0, 1, v24);
  return a1;
}

uint64_t sub_1C0AE4928(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  sub_1C0AE6CE8(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t initializeWithTake for FormatPackage(uint64_t a1, uint64_t a2, int *a3)
{
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  uint64_t v6 = a3[23];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)(a1 + v6) = *(_OWORD *)(a2 + v6);
  uint64_t v38 = (int *)type metadata accessor for FormatCompilerOptions(0);
  uint64_t v9 = v38[6];
  uint64_t v10 = (_OWORD *)(v7 + v9);
  uint64_t v11 = v8 + v9;
  long long v12 = *(_OWORD *)(v8 + v9 + 16);
  *uint64_t v10 = *(_OWORD *)(v8 + v9);
  v10[1] = v12;
  v10[2] = *(_OWORD *)(v8 + v9 + 32);
  uint64_t v13 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  uint64_t v14 = (char *)v10 + v13;
  uint64_t v15 = (const void *)(v11 + v13);
  uint64_t v16 = sub_1C1518CDC();
  uint64_t v17 = *(void *)(v16 - 8);
  long long v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v37 = v17;
  if (v18(v15, 1, v16))
  {
    sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v20 = v38[7];
  uint64_t v21 = (void *)(v7 + v20);
  long long v22 = (const void *)(v8 + v20);
  uint64_t v23 = v18;
  if (v18((const void *)(v8 + v20), 1, v16))
  {
    sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    uint64_t v25 = v37;
  }
  else
  {
    int v26 = v22;
    uint64_t v25 = v37;
    (*(void (**)(void *, const void *, uint64_t))(v37 + 32))(v21, v26, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v21, 0, 1, v16);
  }
  *(void *)(v7 + v38[8]) = *(void *)(v8 + v38[8]);
  uint64_t v27 = a3[24];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[25];
  int v32 = (void *)(a1 + v31);
  int v33 = (const void *)(a2 + v31);
  if (v23(v33, 1, v16))
  {
    sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v32, v33, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v32, 0, 1, v16);
  }
  return a1;
}

uint64_t assignWithTake for FormatPackage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  uint64_t v9 = (_OWORD *)(a2 + 160);
  unint64_t v10 = *(void *)(a1 + 168);
  unint64_t v11 = *(void *)(a2 + 168);
  if (v10 == 2) {
    goto LABEL_7;
  }
  if (v11 == 2)
  {
    sub_1C01D3D9C(a1 + 160);
LABEL_7:
    *(_OWORD *)(a1 + 160) = *v9;
    goto LABEL_8;
  }
  if (v10 < 2) {
    goto LABEL_7;
  }
  if (v11 < 2)
  {
    sub_1C0AE4928(a1 + 160, (unint64_t *)&qword_1EB888F20, (uint64_t (*)(void))sub_1C01D3D48, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    goto LABEL_7;
  }
  *(unsigned char *)(a1 + 160) = *(unsigned char *)v9;
  *(void *)(a1 + 168) = v11;
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v46 = a3;
  uint64_t v12 = *(int *)(a3 + 92);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_bridgeObjectRelease();
  *(void *)(v13 + 8) = *(void *)(v14 + 8);
  swift_bridgeObjectRelease();
  unint64_t v48 = (int *)type metadata accessor for FormatCompilerOptions(0);
  uint64_t v15 = v48[6];
  uint64_t v16 = v13 + v15;
  uint64_t v17 = v14 + v15;
  if (*(void *)(v13 + v15 + 8) == 1)
  {
LABEL_11:
    long long v19 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v19;
    *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
    goto LABEL_13;
  }
  uint64_t v18 = *(void *)(v17 + 8);
  if (v18 == 1)
  {
    sub_1C028CE04(v16);
    goto LABEL_11;
  }
  *(void *)uint64_t v16 = *(void *)v17;
  *(void *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v17 + 24);
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  *(void *)(v16 + 24) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v17 + 40);
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  *(void *)(v16 + 40) = v21;
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v22 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  uint64_t v23 = (void *)(v16 + v22);
  uint64_t v24 = (void *)(v17 + v22);
  uint64_t v25 = sub_1C1518CDC();
  uint64_t v47 = *(void *)(v25 - 8);
  int v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v47 + 48);
  int v27 = v26(v23, 1, v25);
  uint64_t v49 = v26;
  int v28 = v26(v24, 1, v25);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v47 + 32))(v23, v24, v25);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v23, 0, 1, v25);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(void *, uint64_t))(v47 + 8))(v23, v25);
LABEL_18:
    sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v47 + 40))(v23, v24, v25);
LABEL_19:
  uint64_t v30 = v48[7];
  uint64_t v31 = (void *)(v13 + v30);
  int v32 = (void *)(v14 + v30);
  int v33 = v26((void *)(v13 + v30), 1, v25);
  int v34 = v26(v32, 1, v25);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v47 + 32))(v31, v32, v25);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v31, 0, 1, v25);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v34)
  {
    (*(void (**)(void *, uint64_t))(v47 + 8))(v31, v25);
LABEL_24:
    sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v47 + 40))(v31, v32, v25);
LABEL_25:
  *(void *)(v13 + v48[8]) = *(void *)(v14 + v48[8]);
  swift_bridgeObjectRelease();
  uint64_t v36 = *(int *)(v46 + 96);
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 40))(v37, v38, v39);
  uint64_t v40 = *(int *)(v46 + 100);
  uint64_t v41 = (void *)(a1 + v40);
  int v42 = (void *)(a2 + v40);
  LODWORD(v37) = v49((void *)(a1 + v40), 1, v25);
  int v43 = v49(v42, 1, v25);
  if (!v37)
  {
    if (!v43)
    {
      (*(void (**)(void *, void *, uint64_t))(v47 + 40))(v41, v42, v25);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v47 + 8))(v41, v25);
    goto LABEL_30;
  }
  if (v43)
  {
LABEL_30:
    sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v47 + 32))(v41, v42, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v41, 0, 1, v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatPackage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0AE5478);
}

uint64_t sub_1C0AE5478(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = type metadata accessor for FormatCompilerOptions(0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[23];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_1C151928C();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[24];
    goto LABEL_9;
  }
  sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[25];
  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for FormatPackage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0AE5634);
}

uint64_t sub_1C0AE5634(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = type metadata accessor for FormatCompilerOptions(0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[23];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1C151928C();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[24];
    goto LABEL_7;
  }
  sub_1BFE79B2C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[25];
  return v15(v17, a2, a2, v16);
}

unsigned char *storeEnumTagSinglePayload for FormatPackage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *uint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0AE58A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPackage.CodingKeys()
{
  return &type metadata for FormatPackage.CodingKeys;
}

unint64_t sub_1C0AE58E4()
{
  unint64_t result = qword_1EA1A3610;
  if (!qword_1EA1A3610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3610);
  }
  return result;
}

unint64_t sub_1C0AE593C()
{
  unint64_t result = qword_1EB874548;
  if (!qword_1EB874548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874548);
  }
  return result;
}

unint64_t sub_1C0AE5994()
{
  unint64_t result = qword_1EB874540;
  if (!qword_1EB874540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874540);
  }
  return result;
}

unint64_t sub_1C0AE59E8(uint64_t a1, uint64_t a2)
{
  sub_1C0AE6B04(0, &qword_1EA1A3620, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (_OWORD *)((char *)&v24 - v6);
  sub_1C0AE6CE8(0, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v32 = (uint64_t)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v30 = (uint64_t)&v24 - v13;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C0AE6CE8(0, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)));
  uint64_t v28 = v10;
  uint64_t v18 = (unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v31 = *(void *)(v16 + 72);
  uint64_t v24 = a1;
  swift_bridgeObjectRetain();
  unint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v29 = a2;
  int v26 = v7;
  uint64_t v27 = v9;
  uint64_t v25 = v18;
  do
  {
    sub_1C0ADDD60(v17, a2, v7);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*v18)(v7, 1, v9) == 1)
    {
      sub_1C0AE6D50((uint64_t)v7, &qword_1EA1A3620, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem);
    }
    else
    {
      uint64_t v20 = v30;
      sub_1C0AE6A80((uint64_t)v7, v30, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem);
      sub_1C0AE6A80(v20, v32, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = sub_1C0EE5268(0, *(void *)(v19 + 16) + 1, 1, v19);
      }
      unint64_t v22 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      uint64_t v18 = v25;
      if (v22 >= v21 >> 1) {
        unint64_t v19 = sub_1C0EE5268(v21 > 1, v22 + 1, 1, v19);
      }
      uint64_t v7 = v26;
      *(void *)(v19 + 16) = v22 + 1;
      sub_1C0AE6A80(v32, v19+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v22, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem);
      a2 = v29;
      uint64_t v9 = v27;
    }
    uint64_t v17 = (uint64_t *)((char *)v17 + v31);
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_1C0AE5E00(uint64_t a1, uint64_t a2)
{
  sub_1C0AE6CE8(0, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v46 = (uint64_t)v40 - v6;
  sub_1C00F6BC8();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v47 = (uint64_t)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  int v43 = (void *)((char *)v40 - v10);
  MEMORY[0x1F4188790](v11);
  uint64_t v42 = (uint64_t)v40 - v12;
  uint64_t v49 = *(void *)(a1 + 16);
  if (!v49) {
    return MEMORY[0x1E4FBC860];
  }
  v40[1] = v2;
  sub_1C0AE6B74(0, &qword_1EB87D5F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v41 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v52 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v51 = *(void *)(v14 + 72);
  uint64_t v15 = a2 + 56;
  v40[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  unint64_t v50 = MEMORY[0x1E4FBC860];
  uint64_t v17 = a2;
  uint64_t v18 = v49;
  uint64_t v48 = v17;
  do
  {
    unint64_t v19 = (uint64_t *)(v52 + v51 * v16);
    uint64_t v20 = *v19;
    swift_beginAccess();
    if (*(void *)(v17 + 16))
    {
      uint64_t v21 = *(void *)(v20 + 16);
      uint64_t v22 = *(void *)(v20 + 24);
      sub_1C1520DBC();
      sub_1C1520DCC();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      uint64_t v23 = sub_1C1520E0C();
      uint64_t v24 = -1 << *(unsigned char *)(v17 + 32);
      unint64_t v25 = v23 & ~v24;
      if ((*(void *)(v15 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25))
      {
        uint64_t v26 = ~v24;
        uint64_t v27 = *(void *)(v17 + 48);
        while (1)
        {
          uint64_t v28 = v27 + 24 * v25;
          if (!*(unsigned char *)(v28 + 16))
          {
            BOOL v29 = *(void *)v28 == v21 && *(void *)(v28 + 8) == v22;
            if (v29 || (sub_1C1520A9C() & 1) != 0) {
              break;
            }
          }
          unint64_t v25 = (v25 + 1) & v26;
          if (((*(void *)(v15 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v17 = v48;
            uint64_t v18 = v49;
            goto LABEL_4;
          }
        }
        swift_bridgeObjectRelease();
        sub_1C0AE6C10();
        uint64_t v31 = (uint64_t)v43;
        uint64_t v32 = (uint64_t)v43 + *(int *)(v30 + 48);
        *int v43 = v20;
        uint64_t v33 = v46;
        sub_1C0AE6A0C((uint64_t)v19 + *(int *)(v41 + 36), v46, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
        sub_1C0AE6C80(v33, v32, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        swift_storeEnumTagMultiPayload();
        uint64_t v34 = v42;
        sub_1C0AE6C80(v31, v42, (uint64_t (*)(void))sub_1C00F6BC8);
        sub_1C0AE6C80(v34, v47, (uint64_t (*)(void))sub_1C00F6BC8);
        swift_retain();
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v18 = v49;
          unint64_t v35 = v50;
        }
        else
        {
          unint64_t v35 = sub_1C0EE5220(0, *(void *)(v50 + 16) + 1, 1, v50);
          uint64_t v18 = v49;
        }
        unint64_t v37 = *(void *)(v35 + 16);
        unint64_t v36 = *(void *)(v35 + 24);
        if (v37 >= v36 >> 1) {
          unint64_t v35 = sub_1C0EE5220(v36 > 1, v37 + 1, 1, v35);
        }
        *(void *)(v35 + 16) = v37 + 1;
        unint64_t v38 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
        unint64_t v50 = v35;
        sub_1C0AE6C80(v47, v35 + v38 + *(void *)(v44 + 72) * v37, (uint64_t (*)(void))sub_1C00F6BC8);
        uint64_t v17 = v48;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
LABEL_4:
    ++v16;
  }
  while (v16 != v18);
  swift_bridgeObjectRelease();
  return v50;
}

unint64_t sub_1C0AE6320(uint64_t a1, uint64_t a2)
{
  sub_1C0AE6B04(0, &qword_1EA1A3618, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v24 - v6;
  sub_1C0AE6CE8(0, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v32 = (uint64_t)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v30 = (uint64_t)&v24 - v13;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C0AE6CE8(0, (unint64_t *)&qword_1EB8741B0, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)));
  uint64_t v28 = v10;
  uint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v31 = *(void *)(v16 + 72);
  uint64_t v24 = a1;
  swift_bridgeObjectRetain();
  unint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v29 = a2;
  uint64_t v26 = v7;
  uint64_t v27 = v9;
  unint64_t v25 = v18;
  do
  {
    sub_1C0ADE140(v17, a2, (uint64_t)v7);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*v18)(v7, 1, v9) == 1)
    {
      sub_1C0AE6D50((uint64_t)v7, &qword_1EA1A3618, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary);
    }
    else
    {
      uint64_t v20 = v30;
      sub_1C0AE6A80((uint64_t)v7, v30, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary);
      sub_1C0AE6A80(v20, v32, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = sub_1C0EE4F14(0, *(void *)(v19 + 16) + 1, 1, v19);
      }
      unint64_t v22 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      uint64_t v18 = v25;
      if (v22 >= v21 >> 1) {
        unint64_t v19 = sub_1C0EE4F14(v21 > 1, v22 + 1, 1, v19);
      }
      uint64_t v7 = v26;
      *(void *)(v19 + 16) = v22 + 1;
      sub_1C0AE6A80(v32, v19+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v22, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary);
      a2 = v29;
      uint64_t v9 = v27;
    }
    uint64_t v17 = (uint64_t *)((char *)v17 + v31);
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1C0AE6738(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    unint64_t v4 = 0;
    uint64_t v30 = result + 32;
    uint64_t v5 = a2 + 56;
    uint64_t v28 = MEMORY[0x1E4FBC860];
    unint64_t v31 = *(void *)(result + 16);
    while (1)
    {
      if (v4 <= v2) {
        unint64_t v6 = v2;
      }
      else {
        unint64_t v6 = v4;
      }
      unint64_t v7 = v4;
      unint64_t v29 = v6;
      while (1)
      {
        if (v7 == v6)
        {
          __break(1u);
          return result;
        }
        unint64_t v4 = v7 + 1;
        if (*(void *)(a2 + 16)) {
          break;
        }
LABEL_8:
        unint64_t v7 = v4;
        if (v4 == v2) {
          return v28;
        }
      }
      uint64_t v8 = (uint64_t *)(v30 + 40 * v7);
      uint64_t v10 = *v8;
      uint64_t v9 = v8[1];
      uint64_t v11 = v8[3];
      uint64_t v32 = v8[2];
      uint64_t v12 = v8[4];
      sub_1C1520DBC();
      uint64_t v34 = v11;
      swift_bridgeObjectRetain();
      uint64_t v33 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_1C151E77C();
      uint64_t v13 = sub_1C1520E0C();
      uint64_t v14 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v15 = v13 & ~v14;
      if (((*(void *)(v5 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
        goto LABEL_7;
      }
      uint64_t v16 = *(void *)(a2 + 48);
      uint64_t v17 = (void *)(v16 + 16 * v15);
      BOOL v18 = *v17 == v10 && v17[1] == v9;
      if (!v18 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
LABEL_25:
      swift_bridgeObjectRelease();
      uint64_t v24 = v28;
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        unint64_t result = sub_1C05F740C(0, *(void *)(v28 + 16) + 1, 1);
        uint64_t v24 = v28;
      }
      unint64_t v26 = *(void *)(v24 + 16);
      unint64_t v25 = *(void *)(v24 + 24);
      if (v26 >= v25 >> 1)
      {
        unint64_t result = sub_1C05F740C(v25 > 1, v26 + 1, 1);
        uint64_t v24 = v28;
      }
      *(void *)(v24 + 16) = v26 + 1;
      uint64_t v28 = v24;
      uint64_t v27 = (void *)(v24 + 40 * v26);
      v27[4] = v10;
      v27[5] = v9;
      unint64_t v2 = v31;
      v27[6] = v32;
      v27[7] = v34;
      v27[8] = v33;
      if (v4 == v31) {
        return v28;
      }
    }
    uint64_t v19 = ~v14;
    for (unint64_t i = v15 + 1; ; unint64_t i = v21 + 1)
    {
      uint64_t v21 = i & v19;
      if (((*(void *)(v5 + (((i & v19) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v19)) & 1) == 0) {
        break;
      }
      unint64_t v22 = (void *)(v16 + 16 * v21);
      BOOL v23 = *v22 == v10 && v22[1] == v9;
      if (v23 || (sub_1C1520A9C() & 1) != 0) {
        goto LABEL_25;
      }
    }
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease_n();
    unint64_t v2 = v31;
    unint64_t v6 = v29;
    goto LABEL_8;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C0AE69B8()
{
  unint64_t v0 = sub_1C1520C8C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x16) {
    return 22;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C0AE6A0C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  sub_1C0AE6CE8(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_1C0AE6A80(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  sub_1C0AE6CE8(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1C0AE6B04(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  if (!*a2)
  {
    sub_1C0AE6CE8(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    unint64_t v6 = sub_1C151FD8C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C0AE6B74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for FormatSnippet();
    uint64_t v7 = sub_1BFEBC2BC(&qword_1EB891140, (void (*)(uint64_t))type metadata accessor for FormatSnippet);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0AE6C10()
{
  if (!qword_1EB87D788)
  {
    type metadata accessor for FormatSnippet();
    type metadata accessor for FormatMetadata();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB87D788);
    }
  }
}

uint64_t sub_1C0AE6C80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C0AE6CE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0AE6D50(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  sub_1C0AE6B04(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C0AE6DAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFE79B2C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0AE6E1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t FormatLineScoreDataVisualization.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatLineScoreDataVisualization.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatLineScoreDataVisualization.eventIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLineScoreDataVisualization.tagIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLineScoreDataVisualization.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatLineScoreDataVisualization.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatLineScoreDataVisualization.properties.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatLineScoreDataVisualization.properties.modify())()
{
  return j__swift_endAccess;
}

void *FormatLineScoreDataVisualization.__allocating_init(eventIdentifier:tagIdentifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a1;
  void v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  swift_beginAccess();
  v12[6] = a5;
  swift_beginAccess();
  v12[7] = a6;
  return v12;
}

void *FormatLineScoreDataVisualization.init(eventIdentifier:tagIdentifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  swift_beginAccess();
  v6[6] = a5;
  swift_beginAccess();
  v6[7] = a6;
  return v6;
}

uint64_t sub_1C0AE719C()
{
  uint64_t result = 0x656449746E657665;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E656449676174;
      break;
    case 2:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 3:
      uint64_t result = 0x69747265706F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0AE724C(uint64_t a1)
{
  unint64_t v2 = sub_1C0AE7644();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0AE7288(uint64_t a1)
{
  unint64_t v2 = sub_1C0AE7644();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatLineScoreDataVisualization.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatLineScoreDataVisualization.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatLineScoreDataVisualization.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0AE7CF4(0, &qword_1EA1A3628, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0AE7644();
  sub_1C1520F0C();
  char v16 = 0;
  sub_1C15207CC();
  if (!v2)
  {
    char v16 = 1;
    sub_1C15207CC();
    swift_beginAccess();
    uint64_t v11 = *(void *)(v3 + 48);
    if (*(void *)(v11 + 16))
    {
      char v17 = 2;
      swift_bridgeObjectRetain_n();
      uint64_t v12 = sub_1BFE71F8C(v11);
      swift_bridgeObjectRelease();
      unint64_t v15 = v12;
      swift_retain();
      sub_1BFD8BB48((uint64_t *)&v15);
      swift_release();
      v14[1] = v15;
      sub_1C0AE7C80();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
      sub_1BFD8BA00();
      sub_1C1520BAC();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    uint64_t v13 = *(void *)(v3 + 56);
    if (*(void *)(v13 + 16))
    {
      char v17 = 3;
      unint64_t v15 = (void *)v13;
      sub_1C0AE7C80();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
      sub_1C00FCE94();
      sub_1C1520BAC();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0AE7644()
{
  unint64_t result = qword_1EA1A3630;
  if (!qword_1EA1A3630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3630);
  }
  return result;
}

uint64_t FormatLineScoreDataVisualization.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatLineScoreDataVisualization.init(from:)(a1);
  return v2;
}

void *FormatLineScoreDataVisualization.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v1;
  uint64_t v41 = v2;
  uint64_t v42 = v5;
  sub_1C00FC8DC();
  uint64_t v40 = v6;
  uint64_t v36 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v38 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE89214();
  uint64_t v9 = v8;
  uint64_t v37 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0AE7CF4(0, &qword_1EA1A3640, MEMORY[0x1E4FBBDC0]);
  uint64_t v13 = v12;
  uint64_t v39 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v35 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0AE7644();
  char v16 = v41;
  sub_1C1520EBC();
  if (v16)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v17 = v11;
    uint64_t v41 = a1;
    uint64_t v18 = v39;
    uint64_t v19 = v40;
    char v48 = 0;
    uint64_t v20 = v15;
    v3[2] = sub_1C152069C();
    v3[3] = v21;
    char v47 = 1;
    v3[4] = sub_1C152069C();
    v3[5] = v23;
    char v46 = 2;
    char v24 = sub_1C152071C();
    if (v24)
    {
      char v43 = 2;
      sub_1C0AE7D58(&qword_1EB87C6E0, 255, (void (*)(uint64_t))sub_1BFE89214);
      uint64_t v25 = v9;
      sub_1C15206EC();
      uint64_t v26 = v19;
      uint64_t v35 = v25;
      unint64_t v15 = v20;
      uint64_t v27 = sub_1C1517E5C();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v35);
    }
    else
    {
      uint64_t v27 = MEMORY[0x1E4FBC870];
      uint64_t v26 = v19;
    }
    v3[6] = v27;
    char v45 = 3;
    uint64_t v28 = v15;
    if (sub_1C152071C())
    {
      char v44 = 3;
      sub_1C0AE7D58(&qword_1EB85F2C8, 255, (void (*)(uint64_t))sub_1C00FC8DC);
      unint64_t v29 = v38;
      sub_1C15206EC();
      uint64_t v30 = v28;
      uint64_t v31 = sub_1C1517E5C();
      uint64_t v32 = v26;
      uint64_t v33 = v31;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v32);
      uint64_t v34 = v18;
      a1 = v41;
    }
    else
    {
      uint64_t v33 = MEMORY[0x1E4FBC860];
      uint64_t v34 = v18;
      a1 = v41;
      uint64_t v30 = v15;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v13);
    v3[7] = v33;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

void *sub_1C0AE7BF8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  unint64_t result = FormatLineScoreDataVisualization.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0AE7C50(void *a1)
{
  return FormatLineScoreDataVisualization.encode(to:)(a1);
}

uint64_t sub_1C0AE7C74(void **a1, void **a2)
{
  return static FormatLineScoreDataVisualization.== infix(_:_:)(*a1, *a2);
}

unint64_t sub_1C0AE7C80()
{
  unint64_t result = qword_1EA1A3638;
  if (!qword_1EA1A3638)
  {
    sub_1C0AE7CF4(255, &qword_1EA1A3628, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3638);
  }
  return result;
}

void sub_1C0AE7CF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0AE7644();
    unint64_t v7 = a3(a1, &type metadata for FormatLineScoreDataVisualization.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0AE7D58(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0AE7DA0(void *a1, uint64_t a2)
{
  a1[1] = sub_1C0AE7D58(&qword_1EA19CD18, a2, (void (*)(uint64_t))type metadata accessor for FormatLineScoreDataVisualization);
  a1[2] = sub_1C0AE7D58(&qword_1EA19CD48, v3, (void (*)(uint64_t))type metadata accessor for FormatLineScoreDataVisualization);
  uint64_t result = sub_1C0AE7D58(&qword_1EA1A3648, v4, (void (*)(uint64_t))type metadata accessor for FormatLineScoreDataVisualization);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatLineScoreDataVisualization()
{
  return self;
}

uint64_t sub_1C0AE7E70@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0AE7EC0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatLineScoreDataVisualization(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatLineScoreDataVisualization);
}

uint64_t dispatch thunk of FormatLineScoreDataVisualization.__allocating_init(eventIdentifier:tagIdentifier:selectors:properties:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatLineScoreDataVisualization.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

unsigned char *storeEnumTagSinglePayload for FormatLineScoreDataVisualization.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0AE8030);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatLineScoreDataVisualization.CodingKeys()
{
  return &type metadata for FormatLineScoreDataVisualization.CodingKeys;
}

unint64_t sub_1C0AE806C()
{
  unint64_t result = qword_1EA1A3650;
  if (!qword_1EA1A3650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3650);
  }
  return result;
}

unint64_t sub_1C0AE80C4()
{
  unint64_t result = qword_1EA1A3658;
  if (!qword_1EA1A3658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3658);
  }
  return result;
}

unint64_t sub_1C0AE811C()
{
  unint64_t result = qword_1EA1A3660;
  if (!qword_1EA1A3660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3660);
  }
  return result;
}

uint64_t FormatAnchor.rawValue.getter()
{
  uint64_t result = 7368564;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D6F74746F62;
      break;
    case 2:
      uint64_t result = 0x676E696461656CLL;
      break;
    case 3:
      uint64_t result = 0x676E696C69617274;
      break;
    case 4:
      uint64_t result = 0x7265746E6563;
      break;
    case 5:
      uint64_t result = 0x7265746E656368;
      break;
    case 6:
      uint64_t result = 0x7265746E656376;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0AE8248(unsigned __int8 *a1, char *a2)
{
  return sub_1C148EB80(*a1, *a2);
}

unint64_t sub_1C0AE8258()
{
  unint64_t result = qword_1EB890F88;
  if (!qword_1EB890F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB890F88);
  }
  return result;
}

uint64_t sub_1C0AE82AC()
{
  return sub_1C04509F8();
}

uint64_t sub_1C0AE82B8()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0AE83C4()
{
  return sub_1C04509F8();
}

void sub_1C0AE83CC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 7368564;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x6D6F74746F62;
      goto LABEL_3;
    case 2:
      *a1 = 0x676E696461656CLL;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0x676E696C69617274;
      a1[1] = 0xE800000000000000;
      break;
    case 4:
      *a1 = 0x7265746E6563;
      a1[1] = 0xE600000000000000;
      break;
    case 5:
      *a1 = 0x7265746E656368;
      a1[1] = 0xE700000000000000;
      break;
    case 6:
      *a1 = 0x7265746E656376;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1C0AE84BC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0AE84EC();
  unint64_t result = sub_1BFCD92CC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0AE84EC()
{
  unint64_t result = qword_1EA1A3668;
  if (!qword_1EA1A3668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3668);
  }
  return result;
}

unint64_t sub_1C0AE8540(uint64_t a1)
{
  unint64_t result = sub_1C086BEE8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0AE8568(void *a1)
{
  a1[1] = sub_1C00834B0();
  a1[2] = sub_1C0083504();
  unint64_t result = sub_1C0AE8258();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatAnchor()
{
  return &type metadata for FormatAnchor;
}

uint64_t FormatVideoNodeStyle.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatVideoNodeStyle.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C0AE865C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  swift_beginAccess();
  v238 = v1;
  uint64_t v7 = v1[6];
  swift_beginAccess();
  uint64_t v237 = a1;
  uint64_t v8 = *(void *)(a1 + 48);
  unint64_t v323 = MEMORY[0x1E4FBC868];
  int64_t v9 = *(void *)(v7 + 16);
  int64_t v10 = *(void *)(v8 + 16);
  if (__OFADD__(v9, v10)) {
    goto LABEL_102;
  }
  uint64_t v234 = v5;
  uint64_t v236 = v4;
  sub_1C0AEB9E0();
  uint64_t v235 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = v7;
  sub_1C151E3AC();
  v296 = sub_1BFEF692C(0, v9, 0, MEMORY[0x1E4FBC860]);
  uint64_t v12 = *(void *)(v7 + 16);
  uint64_t v233 = v6;
  uint64_t v239 = v8;
  if (!v12) {
    goto LABEL_20;
  }
  int64_t v293 = v10;
  swift_bridgeObjectRetain();
  long long v13 = *(_OWORD *)(v11 + 160);
  long long v319 = *(_OWORD *)(v11 + 144);
  long long v320 = v13;
  long long v321 = *(_OWORD *)(v11 + 176);
  char v322 = *(unsigned char *)(v11 + 192);
  long long v14 = *(_OWORD *)(v11 + 96);
  long long v315 = *(_OWORD *)(v11 + 80);
  long long v316 = v14;
  long long v15 = *(_OWORD *)(v11 + 128);
  long long v317 = *(_OWORD *)(v11 + 112);
  long long v318 = v15;
  long long v16 = *(_OWORD *)(v11 + 48);
  long long v312 = *(_OWORD *)(v11 + 32);
  long long v313 = v16;
  long long v314 = *(_OWORD *)(v11 + 64);
  uint64_t v17 = *((void *)&v312 + 1);
  uint64_t v18 = v12 - 1;
  for (uint64_t i = 200; ; i += 168)
  {
    uint64_t v20 = v312;
    sub_1C05DD98C((uint64_t)&v312);
    sub_1C05DD98C((uint64_t)&v312);
    swift_bridgeObjectRetain();
    unint64_t v21 = v323;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v298[0] = v21;
    unint64_t v24 = sub_1BFEF2D8C(v20, v17);
    uint64_t v25 = *(void *)(v21 + 16);
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      uint64_t result = sub_1C1520CFC();
      __break(1u);
      return result;
    }
    char v28 = v23;
    if (*(void *)(v21 + 24) >= v27)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v23) {
          goto LABEL_11;
        }
      }
      else
      {
        sub_1C10723A0();
        if (v28) {
          goto LABEL_11;
        }
      }
    }
    else
    {
      sub_1C10609D0(v27, isUniquelyReferenced_nonNull_native);
      unint64_t v29 = sub_1BFEF2D8C(v20, v17);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_103;
      }
      unint64_t v24 = v29;
      if (v28)
      {
LABEL_11:
        uint64_t v31 = *(void **)&v298[0];
        uint64_t v32 = *(void *)(*(void *)&v298[0] + 56) + 168 * v24;
        long long v34 = *(_OWORD *)(v32 + 16);
        long long v33 = *(_OWORD *)(v32 + 32);
        long long v301 = *(_OWORD *)v32;
        long long v302 = v34;
        long long v303 = v33;
        long long v35 = *(_OWORD *)(v32 + 96);
        long long v37 = *(_OWORD *)(v32 + 48);
        long long v36 = *(_OWORD *)(v32 + 64);
        long long v306 = *(_OWORD *)(v32 + 80);
        long long v307 = v35;
        long long v304 = v37;
        long long v305 = v36;
        long long v39 = *(_OWORD *)(v32 + 128);
        long long v38 = *(_OWORD *)(v32 + 144);
        long long v40 = *(_OWORD *)(v32 + 112);
        char v311 = *(unsigned char *)(v32 + 160);
        long long v309 = v39;
        long long v310 = v38;
        long long v308 = v40;
        sub_1C05DDA78((uint64_t)&v301);
        long long v42 = v313;
        long long v41 = v314;
        *(_OWORD *)uint64_t v32 = v312;
        *(_OWORD *)(v32 + 16) = v42;
        *(_OWORD *)(v32 + 32) = v41;
        long long v43 = v318;
        long long v45 = v315;
        long long v44 = v316;
        *(_OWORD *)(v32 + 80) = v317;
        *(_OWORD *)(v32 + 96) = v43;
        *(_OWORD *)(v32 + 48) = v45;
        *(_OWORD *)(v32 + 64) = v44;
        long long v47 = v320;
        long long v46 = v321;
        long long v48 = v319;
        *(unsigned char *)(v32 + 160) = v322;
        *(_OWORD *)(v32 + 128) = v47;
        *(_OWORD *)(v32 + 144) = v46;
        *(_OWORD *)(v32 + 112) = v48;
        goto LABEL_15;
      }
    }
    uint64_t v31 = *(void **)&v298[0];
    *(void *)(*(void *)&v298[0] + 8 * (v24 >> 6) + 64) |= 1 << v24;
    uint64_t v49 = (uint64_t *)(v31[6] + 16 * v24);
    *uint64_t v49 = v20;
    v49[1] = v17;
    uint64_t v50 = v31[7] + 168 * v24;
    char v51 = v322;
    long long v53 = v320;
    long long v52 = v321;
    *(_OWORD *)(v50 + 112) = v319;
    *(_OWORD *)(v50 + 128) = v53;
    *(_OWORD *)(v50 + 144) = v52;
    *(unsigned char *)(v50 + 160) = v51;
    long long v55 = v317;
    long long v54 = v318;
    long long v56 = v316;
    *(_OWORD *)(v50 + 48) = v315;
    *(_OWORD *)(v50 + 64) = v56;
    *(_OWORD *)(v50 + 80) = v55;
    *(_OWORD *)(v50 + 96) = v54;
    long long v58 = v313;
    long long v57 = v314;
    *(_OWORD *)uint64_t v50 = v312;
    *(_OWORD *)(v50 + 16) = v58;
    *(_OWORD *)(v50 + 32) = v57;
    uint64_t v59 = v31[2];
    BOOL v60 = __OFADD__(v59, 1);
    uint64_t v61 = v59 + 1;
    if (v60) {
      goto LABEL_98;
    }
    v31[2] = v61;
    swift_bridgeObjectRetain();
LABEL_15:
    unint64_t v323 = (unint64_t)v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v62 = v296[2];
    unint64_t v63 = v296[3];
    swift_bridgeObjectRetain();
    if (v62 >= v63 >> 1) {
      v296 = sub_1BFEF692C((void *)(v63 > 1), v62 + 1, 1, v296);
    }
    v296[2] = v62 + 1;
    uint64_t v64 = &v296[2 * v62];
    v64[4] = v20;
    v64[5] = v17;
    sub_1C05DDA78((uint64_t)&v312);
    if (!v18) {
      break;
    }
    long long v65 = *(_OWORD *)(v11 + i);
    long long v66 = *(_OWORD *)(v11 + i + 32);
    long long v313 = *(_OWORD *)(v11 + i + 16);
    long long v314 = v66;
    long long v312 = v65;
    long long v67 = *(_OWORD *)(v11 + i + 48);
    long long v68 = *(_OWORD *)(v11 + i + 64);
    long long v69 = *(_OWORD *)(v11 + i + 96);
    long long v317 = *(_OWORD *)(v11 + i + 80);
    long long v318 = v69;
    long long v315 = v67;
    long long v316 = v68;
    long long v70 = *(_OWORD *)(v11 + i + 112);
    long long v71 = *(_OWORD *)(v11 + i + 128);
    long long v72 = *(_OWORD *)(v11 + i + 144);
    char v322 = *(unsigned char *)(v11 + i + 160);
    long long v320 = v71;
    long long v321 = v72;
    long long v319 = v70;
    uint64_t v17 = *((void *)&v312 + 1);
    --v18;
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = v239;
  int64_t v10 = v293;
LABEL_20:
  uint64_t v73 = sub_1BFEF692C(0, v10, 0, MEMORY[0x1E4FBC860]);
  uint64_t v74 = *(void *)(v8 + 16);
  if (!v74) {
    goto LABEL_68;
  }
  swift_bridgeObjectRetain();
  long long v75 = *(_OWORD *)(v8 + 160);
  long long v319 = *(_OWORD *)(v8 + 144);
  long long v320 = v75;
  long long v321 = *(_OWORD *)(v8 + 176);
  char v322 = *(unsigned char *)(v8 + 192);
  long long v76 = *(_OWORD *)(v8 + 96);
  long long v315 = *(_OWORD *)(v8 + 80);
  long long v316 = v76;
  long long v77 = *(_OWORD *)(v8 + 128);
  long long v317 = *(_OWORD *)(v8 + 112);
  long long v318 = v77;
  long long v78 = *(_OWORD *)(v8 + 48);
  long long v312 = *(_OWORD *)(v8 + 32);
  long long v313 = v78;
  long long v314 = *(_OWORD *)(v8 + 64);
  uint64_t v79 = v74 - 1;
  uint64_t v80 = 200;
  uint64_t v81 = *((void *)&v312 + 1);
  while (2)
  {
    uint64_t v82 = v312;
    uint64_t v83 = (void *)v323;
    uint64_t v84 = *(void *)(v323 + 16);
    sub_1C05DD98C((uint64_t)&v312);
    if (v84)
    {
      swift_bridgeObjectRetain();
      unint64_t v85 = sub_1BFEF2D8C(v82, v81);
      if (v86)
      {
        uint64_t v87 = v83[7] + 168 * v85;
        long long v89 = *(_OWORD *)(v87 + 16);
        long long v88 = *(_OWORD *)(v87 + 32);
        long long v301 = *(_OWORD *)v87;
        long long v302 = v89;
        long long v303 = v88;
        long long v90 = *(_OWORD *)(v87 + 48);
        long long v91 = *(_OWORD *)(v87 + 64);
        long long v92 = *(_OWORD *)(v87 + 96);
        long long v306 = *(_OWORD *)(v87 + 80);
        long long v307 = v92;
        long long v304 = v90;
        long long v305 = v91;
        long long v93 = *(_OWORD *)(v87 + 112);
        long long v94 = *(_OWORD *)(v87 + 128);
        long long v95 = *(_OWORD *)(v87 + 144);
        char v311 = *(unsigned char *)(v87 + 160);
        long long v309 = v94;
        long long v310 = v95;
        long long v308 = v93;
        sub_1C05DD98C((uint64_t)&v301);
        swift_bridgeObjectRelease();
        uint64_t v96 = v302;
        if (!(void)v302)
        {
          uint64_t v96 = v313;
          swift_bridgeObjectRetain();
        }
        uint64_t v97 = *((void *)&v302 + 1);
        uint64_t v98 = *((void *)&v302 + 1);
        if ((~*((void *)&v302 + 1) & 0xF000000000000007) == 0)
        {
          uint64_t v98 = *((void *)&v313 + 1);
          sub_1BFEF683C(*((uint64_t *)&v313 + 1));
        }
        uint64_t v249 = v98;
        uint64_t v251 = v80;
        uint64_t v99 = v303;
        if (!(void)v303)
        {
          uint64_t v99 = v314;
          swift_bridgeObjectRetain();
        }
        uint64_t v253 = v79;
        uint64_t v100 = *((void *)&v303 + 1);
        uint64_t v101 = v304;
        char v102 = BYTE8(v304);
        uint64_t v272 = v304;
        uint64_t v274 = *((void *)&v303 + 1);
        char v103 = BYTE8(v304);
        if (BYTE8(v304) >= 0xFEu)
        {
          uint64_t v100 = *((void *)&v314 + 1);
          uint64_t v101 = v315;
          char v103 = BYTE8(v315);
          sub_1BFEF6828(*((uint64_t *)&v314 + 1), v315, SBYTE8(v315));
        }
        uint64_t v243 = v101;
        uint64_t v245 = v100;
        uint64_t v240 = v96;
        uint64_t v104 = v305;
        long long v105 = v309;
        uint64_t v268 = *((void *)&v305 + 1);
        uint64_t v270 = v305;
        uint64_t v291 = v306;
        uint64_t v294 = *((void *)&v305 + 1);
        uint64_t v264 = *((void *)&v306 + 1);
        uint64_t v266 = v306;
        uint64_t v287 = v307;
        uint64_t v289 = *((void *)&v306 + 1);
        uint64_t v260 = *((void *)&v307 + 1);
        uint64_t v262 = v307;
        uint64_t v284 = v308;
        uint64_t v286 = *((void *)&v307 + 1);
        uint64_t v256 = *((void *)&v308 + 1);
        uint64_t v258 = v308;
        uint64_t v281 = v309;
        uint64_t v282 = *((void *)&v308 + 1);
        uint64_t v279 = *((void *)&v309 + 1);
        unsigned __int8 v106 = v310;
        char v277 = v310;
        if (v310 == 254)
        {
          uint64_t v104 = v316;
          char v277 = v321;
          uint64_t v279 = *((void *)&v320 + 1);
          uint64_t v281 = v320;
          uint64_t v291 = v317;
          uint64_t v294 = *((void *)&v316 + 1);
          uint64_t v287 = v318;
          uint64_t v289 = *((void *)&v317 + 1);
          uint64_t v284 = v319;
          uint64_t v286 = *((void *)&v318 + 1);
          uint64_t v282 = *((void *)&v319 + 1);
          sub_1BFEF8708(v316, *((uint64_t *)&v316 + 1), v317, *((uint64_t *)&v317 + 1), v318, *((uint64_t *)&v318 + 1), v319, *((uint64_t *)&v319 + 1), v320, *((uint64_t *)&v320 + 1), v321);
        }
        uint64_t v242 = v104;
        uint64_t v247 = v99;
        uint64_t v107 = *((void *)&v310 + 1);
        uint64_t v108 = *((void *)&v310 + 1);
        if ((~*((void *)&v310 + 1) & 0xF000000000000007) == 0)
        {
          uint64_t v108 = *((void *)&v321 + 1);
          sub_1BFDC11A4(*((uint64_t *)&v321 + 1));
        }
        char v109 = v311;
        if (v311 == 2) {
          char v109 = v322;
        }
        char v241 = v109;
        long long v110 = v301;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        sub_1BFEF683C(v97);
        swift_bridgeObjectRetain();
        sub_1BFEF6828(v274, v272, v102);
        sub_1BFEF8708(v270, v268, v266, v264, v262, v260, v258, v256, v105, *((uint64_t *)&v105 + 1), v106);
        sub_1BFDC11A4(v107);
        char v111 = swift_isUniquelyReferenced_nonNull_native();
        v300 = v83;
        unint64_t v323 = 0x8000000000000000;
        unint64_t v113 = sub_1BFEF2D8C(v110, *((uint64_t *)&v110 + 1));
        uint64_t v114 = v83[2];
        BOOL v115 = (v112 & 1) == 0;
        uint64_t v116 = v114 + v115;
        if (__OFADD__(v114, v115)) {
          goto LABEL_100;
        }
        char v117 = v112;
        if (v83[3] >= v116)
        {
          uint64_t v79 = v253;
          uint64_t v80 = v251;
          if (v111)
          {
            uint64_t v120 = v240;
            if ((v112 & 1) == 0) {
              goto LABEL_63;
            }
          }
          else
          {
            sub_1C10723A0();
            uint64_t v120 = v240;
            if ((v117 & 1) == 0) {
              goto LABEL_63;
            }
          }
        }
        else
        {
          sub_1C10609D0(v116, v111);
          unint64_t v118 = sub_1BFEF2D8C(v110, *((uint64_t *)&v110 + 1));
          uint64_t v79 = v253;
          uint64_t v80 = v251;
          if ((v117 & 1) != (v119 & 1)) {
            goto LABEL_103;
          }
          unint64_t v113 = v118;
          uint64_t v120 = v240;
          if ((v117 & 1) == 0)
          {
LABEL_63:
            uint64_t v148 = v300;
            v300[(v113 >> 6) + 8] |= 1 << v113;
            *(_OWORD *)(v148[6] + 16 * v113) = v110;
            uint64_t v173 = v148[7] + 168 * v113;
            *(_OWORD *)uint64_t v173 = v110;
            *(void *)(v173 + 16) = v120;
            *(void *)(v173 + 24) = v249;
            *(void *)(v173 + 32) = v247;
            *(void *)(v173 + 40) = v245;
            *(void *)(v173 + 48) = v243;
            *(unsigned char *)(v173 + 56) = v103;
            *(void *)(v173 + 64) = v242;
            *(void *)(v173 + 72) = v294;
            *(void *)(v173 + 80) = v291;
            *(void *)(v173 + 88) = v289;
            *(void *)(v173 + 96) = v287;
            *(void *)(v173 + 104) = v286;
            *(void *)(v173 + 112) = v284;
            *(void *)(v173 + 120) = v282;
            *(void *)(v173 + 128) = v281;
            *(void *)(v173 + 136) = v279;
            *(unsigned char *)(v173 + 144) = v277;
            *(void *)(v173 + 152) = v108;
            *(unsigned char *)(v173 + 160) = v241;
            uint64_t v174 = v148[2];
            BOOL v60 = __OFADD__(v174, 1);
            uint64_t v175 = v174 + 1;
            if (v60) {
              goto LABEL_101;
            }
            v148[2] = v175;
            swift_bridgeObjectRetain();
            goto LABEL_65;
          }
        }
        uint64_t v148 = v300;
        uint64_t v149 = v300[7] + 168 * v113;
        long long v151 = *(_OWORD *)(v149 + 16);
        long long v150 = *(_OWORD *)(v149 + 32);
        v298[0] = *(_OWORD *)v149;
        v298[1] = v151;
        v298[2] = v150;
        long long v152 = *(_OWORD *)(v149 + 96);
        long long v154 = *(_OWORD *)(v149 + 48);
        long long v153 = *(_OWORD *)(v149 + 64);
        v298[5] = *(_OWORD *)(v149 + 80);
        v298[6] = v152;
        v298[3] = v154;
        v298[4] = v153;
        long long v156 = *(_OWORD *)(v149 + 128);
        long long v155 = *(_OWORD *)(v149 + 144);
        long long v157 = *(_OWORD *)(v149 + 112);
        char v299 = *(unsigned char *)(v149 + 160);
        v298[8] = v156;
        v298[9] = v155;
        v298[7] = v157;
        sub_1C05DDA78((uint64_t)v298);
        *(_OWORD *)uint64_t v149 = v110;
        *(void *)(v149 + 16) = v120;
        *(void *)(v149 + 24) = v249;
        *(void *)(v149 + 32) = v247;
        *(void *)(v149 + 40) = v245;
        *(void *)(v149 + 48) = v243;
        *(unsigned char *)(v149 + 56) = v103;
        *(void *)(v149 + 64) = v242;
        *(void *)(v149 + 72) = v294;
        *(void *)(v149 + 80) = v291;
        *(void *)(v149 + 88) = v289;
        *(void *)(v149 + 96) = v287;
        *(void *)(v149 + 104) = v286;
        *(void *)(v149 + 112) = v284;
        *(void *)(v149 + 120) = v282;
        *(void *)(v149 + 128) = v281;
        *(void *)(v149 + 136) = v279;
        *(unsigned char *)(v149 + 144) = v277;
        *(void *)(v149 + 152) = v108;
        *(unsigned char *)(v149 + 160) = v241;
LABEL_65:
        unint64_t v323 = (unint64_t)v148;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C05DDA78((uint64_t)&v301);
        sub_1C05DDA78((uint64_t)&v312);
        uint64_t v8 = v239;
        if (!v79) {
          goto LABEL_67;
        }
LABEL_66:
        long long v176 = *(_OWORD *)(v8 + v80);
        long long v177 = *(_OWORD *)(v8 + v80 + 32);
        long long v313 = *(_OWORD *)(v8 + v80 + 16);
        long long v314 = v177;
        long long v312 = v176;
        long long v178 = *(_OWORD *)(v8 + v80 + 48);
        long long v179 = *(_OWORD *)(v8 + v80 + 64);
        long long v180 = *(_OWORD *)(v8 + v80 + 96);
        long long v317 = *(_OWORD *)(v8 + v80 + 80);
        long long v318 = v180;
        long long v315 = v178;
        long long v316 = v179;
        long long v181 = *(_OWORD *)(v8 + v80 + 112);
        long long v182 = *(_OWORD *)(v8 + v80 + 128);
        long long v183 = *(_OWORD *)(v8 + v80 + 144);
        char v322 = *(unsigned char *)(v8 + v80 + 160);
        long long v320 = v182;
        long long v321 = v183;
        long long v319 = v181;
        uint64_t v81 = *((void *)&v312 + 1);
        v80 += 168;
        --v79;
        continue;
      }
      swift_bridgeObjectRelease();
    }
    break;
  }
  sub_1C05DD98C((uint64_t)&v312);
  swift_bridgeObjectRetain();
  char v121 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v298[0] = v83;
  unint64_t v123 = sub_1BFEF2D8C(v82, v81);
  uint64_t v124 = v83[2];
  BOOL v125 = (v122 & 1) == 0;
  uint64_t v126 = v124 + v125;
  if (__OFADD__(v124, v125)) {
    goto LABEL_97;
  }
  char v127 = v122;
  if (v83[3] >= v126)
  {
    if (v121)
    {
      if ((v122 & 1) == 0) {
        goto LABEL_56;
      }
    }
    else
    {
      sub_1C10723A0();
      if ((v127 & 1) == 0) {
        goto LABEL_56;
      }
    }
    goto LABEL_51;
  }
  sub_1C10609D0(v126, v121);
  unint64_t v128 = sub_1BFEF2D8C(v82, v81);
  if ((v127 & 1) != (v129 & 1)) {
    goto LABEL_103;
  }
  unint64_t v123 = v128;
  if (v127)
  {
LABEL_51:
    uint64_t v130 = *(void **)&v298[0];
    uint64_t v131 = *(void *)(*(void *)&v298[0] + 56) + 168 * v123;
    long long v133 = *(_OWORD *)(v131 + 16);
    long long v132 = *(_OWORD *)(v131 + 32);
    long long v301 = *(_OWORD *)v131;
    long long v302 = v133;
    long long v303 = v132;
    long long v134 = *(_OWORD *)(v131 + 96);
    long long v136 = *(_OWORD *)(v131 + 48);
    long long v135 = *(_OWORD *)(v131 + 64);
    long long v306 = *(_OWORD *)(v131 + 80);
    long long v307 = v134;
    long long v304 = v136;
    long long v305 = v135;
    long long v138 = *(_OWORD *)(v131 + 128);
    long long v137 = *(_OWORD *)(v131 + 144);
    long long v139 = *(_OWORD *)(v131 + 112);
    char v311 = *(unsigned char *)(v131 + 160);
    long long v309 = v138;
    long long v310 = v137;
    long long v308 = v139;
    sub_1C05DDA78((uint64_t)&v301);
    long long v141 = v313;
    long long v140 = v314;
    *(_OWORD *)uint64_t v131 = v312;
    *(_OWORD *)(v131 + 16) = v141;
    *(_OWORD *)(v131 + 32) = v140;
    long long v142 = v318;
    long long v144 = v315;
    long long v143 = v316;
    *(_OWORD *)(v131 + 80) = v317;
    *(_OWORD *)(v131 + 96) = v142;
    *(_OWORD *)(v131 + 48) = v144;
    *(_OWORD *)(v131 + 64) = v143;
    long long v146 = v320;
    long long v145 = v321;
    long long v147 = v319;
    *(unsigned char *)(v131 + 160) = v322;
    *(_OWORD *)(v131 + 128) = v146;
    *(_OWORD *)(v131 + 144) = v145;
    *(_OWORD *)(v131 + 112) = v147;
    goto LABEL_58;
  }
LABEL_56:
  uint64_t v130 = *(void **)&v298[0];
  *(void *)(*(void *)&v298[0] + 8 * (v123 >> 6) + 64) |= 1 << v123;
  uint64_t v158 = (uint64_t *)(v130[6] + 16 * v123);
  *uint64_t v158 = v82;
  v158[1] = v81;
  uint64_t v159 = v130[7] + 168 * v123;
  char v160 = v322;
  long long v162 = v320;
  long long v161 = v321;
  *(_OWORD *)(v159 + 112) = v319;
  *(_OWORD *)(v159 + 128) = v162;
  *(_OWORD *)(v159 + 144) = v161;
  *(unsigned char *)(v159 + 160) = v160;
  long long v164 = v317;
  long long v163 = v318;
  long long v165 = v316;
  *(_OWORD *)(v159 + 48) = v315;
  *(_OWORD *)(v159 + 64) = v165;
  *(_OWORD *)(v159 + 80) = v164;
  *(_OWORD *)(v159 + 96) = v163;
  long long v167 = v313;
  long long v166 = v314;
  *(_OWORD *)uint64_t v159 = v312;
  *(_OWORD *)(v159 + 16) = v167;
  *(_OWORD *)(v159 + 32) = v166;
  uint64_t v168 = v130[2];
  BOOL v60 = __OFADD__(v168, 1);
  uint64_t v169 = v168 + 1;
  if (v60) {
    goto LABEL_99;
  }
  v130[2] = v169;
  swift_bridgeObjectRetain();
LABEL_58:
  unint64_t v323 = (unint64_t)v130;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v170 = v73[2];
  unint64_t v171 = v73[3];
  swift_bridgeObjectRetain();
  if (v170 >= v171 >> 1) {
    uint64_t v73 = sub_1BFEF692C((void *)(v171 > 1), v170 + 1, 1, v73);
  }
  v73[2] = v170 + 1;
  uint64_t v172 = &v73[2 * v170];
  v172[4] = v82;
  v172[5] = v81;
  sub_1C05DDA78((uint64_t)&v312);
  if (v79) {
    goto LABEL_66;
  }
LABEL_67:
  swift_bridgeObjectRelease();
LABEL_68:
  *(void *)&long long v312 = v73;
  swift_bridgeObjectRetain();
  uint64_t v184 = swift_bridgeObjectRetain();
  sub_1BFEF6AA0(v184);
  uint64_t v185 = v312;
  uint64_t v186 = *(void *)(v312 + 16);
  if (v186)
  {
    swift_bridgeObjectRetain();
    unint64_t v187 = (uint64_t *)(v185 + 40);
    uint64_t v188 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      unint64_t v189 = v323;
      if (*(void *)(v323 + 16))
      {
        uint64_t v191 = *(v187 - 1);
        uint64_t v190 = *v187;
        swift_bridgeObjectRetain_n();
        unint64_t v192 = sub_1BFEF2D8C(v191, v190);
        if (v193)
        {
          uint64_t v194 = *(void *)(v189 + 56) + 168 * v192;
          long long v196 = *(_OWORD *)(v194 + 16);
          long long v195 = *(_OWORD *)(v194 + 32);
          long long v312 = *(_OWORD *)v194;
          long long v313 = v196;
          long long v314 = v195;
          long long v197 = *(_OWORD *)(v194 + 48);
          long long v198 = *(_OWORD *)(v194 + 64);
          long long v199 = *(_OWORD *)(v194 + 96);
          long long v317 = *(_OWORD *)(v194 + 80);
          long long v318 = v199;
          long long v315 = v197;
          long long v316 = v198;
          long long v200 = *(_OWORD *)(v194 + 112);
          long long v201 = *(_OWORD *)(v194 + 128);
          long long v202 = *(_OWORD *)(v194 + 144);
          char v322 = *(unsigned char *)(v194 + 160);
          long long v320 = v201;
          long long v321 = v202;
          long long v319 = v200;
          sub_1C05DD98C((uint64_t)&v312);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v188 = sub_1C0EE1144(0, v188[2] + 1, 1, v188);
          }
          unint64_t v204 = v188[2];
          unint64_t v203 = v188[3];
          if (v204 >= v203 >> 1) {
            uint64_t v188 = sub_1C0EE1144((void *)(v203 > 1), v204 + 1, 1, v188);
          }
          v188[2] = v204 + 1;
          uint64_t v205 = &v188[21 * v204];
          long long v206 = v312;
          long long v207 = v314;
          *((_OWORD *)v205 + 3) = v313;
          *((_OWORD *)v205 + 4) = v207;
          *((_OWORD *)v205 + 2) = v206;
          long long v208 = v315;
          long long v209 = v316;
          long long v210 = v318;
          *((_OWORD *)v205 + 7) = v317;
          *((_OWORD *)v205 + 8) = v210;
          *((_OWORD *)v205 + 5) = v208;
          *((_OWORD *)v205 + 6) = v209;
          long long v211 = v319;
          long long v212 = v320;
          long long v213 = v321;
          *((unsigned char *)v205 + 192) = v322;
          *((_OWORD *)v205 + 10) = v212;
          *((_OWORD *)v205 + 11) = v213;
          *((_OWORD *)v205 + 9) = v211;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v187 += 2;
      --v186;
    }
    while (v186);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v188 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v214 = v238[7];
  if (!v214)
  {
    uint64_t v214 = *(void *)(v237 + 56);
    swift_bridgeObjectRetain();
  }
  uint64_t v285 = v238[8];
  uint64_t v215 = v285;
  if ((~v285 & 0xF000000000000007) == 0)
  {
    uint64_t v215 = *(void *)(v237 + 64);
    sub_1BFEF683C(v215);
  }
  uint64_t v216 = v238[9];
  if (!v216) {
    uint64_t v216 = swift_bridgeObjectRetain();
  }
  uint64_t v273 = v216;
  uint64_t v275 = v215;
  uint64_t v283 = v214;
  uint64_t v217 = v238[10];
  uint64_t v218 = v238[11];
  uint64_t v278 = v218;
  uint64_t v280 = v217;
  unsigned int v219 = *((unsigned __int8 *)v238 + 96);
  char v276 = *((unsigned char *)v238 + 96);
  if (v219 >= 0xFE)
  {
    uint64_t v217 = *(void *)(v237 + 80);
    uint64_t v218 = *(void *)(v237 + 88);
    LOBYTE(v219) = *(unsigned char *)(v237 + 96);
    sub_1BFEF6828(v217, v218, v219);
  }
  char v248 = v219;
  uint64_t v252 = v218;
  uint64_t v255 = v217;
  uint64_t v220 = v238[13];
  uint64_t v221 = v238[14];
  uint64_t v222 = v238[20];
  uint64_t v223 = v238[21];
  uint64_t v224 = v238[22];
  uint64_t v269 = v221;
  uint64_t v271 = v220;
  uint64_t v265 = v238[16];
  uint64_t v267 = v238[15];
  uint64_t v295 = v265;
  uint64_t v297 = v267;
  uint64_t v261 = v238[18];
  uint64_t v263 = v238[17];
  uint64_t v290 = v261;
  uint64_t v292 = v263;
  uint64_t v257 = v222;
  uint64_t v259 = v238[19];
  uint64_t v288 = v259;
  uint64_t v254 = v223;
  uint64_t v250 = v224;
  int v225 = *((unsigned __int8 *)v238 + 184);
  unsigned __int8 v226 = *((unsigned char *)v238 + 184);
  if (v225 == 254)
  {
    uint64_t v220 = *(void *)(v237 + 104);
    uint64_t v221 = *(void *)(v237 + 112);
    uint64_t v222 = *(void *)(v237 + 160);
    uint64_t v223 = *(void *)(v237 + 168);
    uint64_t v224 = *(void *)(v237 + 176);
    unsigned __int8 v226 = *(unsigned char *)(v237 + 184);
    uint64_t v295 = *(void *)(v237 + 128);
    uint64_t v297 = *(void *)(v237 + 120);
    uint64_t v290 = *(void *)(v237 + 144);
    uint64_t v292 = *(void *)(v237 + 136);
    uint64_t v288 = *(void *)(v237 + 152);
    sub_1BFEF8708(v220, v221, v297, v295, v292, v290, v288, v222, v223, v224, v226);
  }
  uint64_t v244 = v222;
  uint64_t v246 = v220;
  uint64_t v227 = v238[24];
  uint64_t v228 = v227;
  if ((~v227 & 0xF000000000000007) == 0)
  {
    uint64_t v228 = *(void *)(v237 + 192);
    sub_1BFDC11A4(v228);
  }
  uint64_t v229 = v221;
  int v230 = *((unsigned __int8 *)v238 + 200);
  if (v230 == 2) {
    LOBYTE(v230) = *(unsigned char *)(v237 + 200);
  }
  uint64_t v231 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v231 + 16) = v236;
  *(void *)(v231 + 24) = v235;
  *(void *)(v231 + 32) = v234;
  *(void *)(v231 + 40) = v233;
  swift_beginAccess();
  *(void *)(v231 + 48) = v188;
  *(void *)(v231 + 56) = v283;
  *(void *)(v231 + 64) = v275;
  *(void *)(v231 + 72) = v273;
  *(void *)(v231 + 80) = v255;
  *(void *)(v231 + 88) = v252;
  *(unsigned char *)(v231 + 96) = v248;
  *(void *)(v231 + 104) = v246;
  *(void *)(v231 + 112) = v229;
  *(void *)(v231 + 120) = v297;
  *(void *)(v231 + 128) = v295;
  *(void *)(v231 + 136) = v292;
  *(void *)(v231 + 144) = v290;
  *(void *)(v231 + 152) = v288;
  *(void *)(v231 + 160) = v244;
  *(void *)(v231 + 168) = v223;
  *(void *)(v231 + 176) = v224;
  *(unsigned char *)(v231 + 184) = v226;
  *(void *)(v231 + 192) = v228;
  *(unsigned char *)(v231 + 200) = v230;
  swift_bridgeObjectRetain();
  sub_1BFEF683C(v285);
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v280, v278, v276);
  sub_1BFEF8708(v271, v269, v267, v265, v263, v261, v259, v257, v254, v250, v225);
  sub_1BFDC11A4(v227);
  return v231;
}

uint64_t sub_1C0AE96D4(uint64_t a1)
{
  uint64_t v106 = a1;
  uint64_t v107 = 0;
  uint64_t v130 = *MEMORY[0x1E4F143B8];
  uint64_t v100 = *v1;
  swift_beginAccess();
  long long v95 = v1;
  uint64_t v2 = v1[6];
  int64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v5 = sub_1C0EE1144(0, v3, 0, MEMORY[0x1E4FBC860]);
  uint64_t v96 = sub_1C0EE1108(0, v3, 0, v4);
  uint64_t v98 = *(void *)(v2 + 16);
  uint64_t v99 = v2;
  if (!v98)
  {
LABEL_31:
    sub_1C0AEBA44();
    uint64_t v58 = sub_1C151EC0C();
    swift_bridgeObjectRelease();
    uint64_t v59 = *(void *)(v58 + 16);
    if (v59)
    {
      uint64_t v60 = v59 - 1;
      for (uint64_t i = 32; ; i += 176)
      {
        long long v62 = *(_OWORD *)(v58 + i);
        long long v63 = *(_OWORD *)(v58 + i + 32);
        long long v109 = *(_OWORD *)(v58 + i + 16);
        long long v110 = v63;
        long long v108 = v62;
        long long v64 = *(_OWORD *)(v58 + i + 48);
        long long v65 = *(_OWORD *)(v58 + i + 64);
        long long v66 = *(_OWORD *)(v58 + i + 96);
        long long v113 = *(_OWORD *)(v58 + i + 80);
        long long v114 = v66;
        long long v111 = v64;
        long long v112 = v65;
        long long v67 = *(_OWORD *)(v58 + i + 112);
        long long v68 = *(_OWORD *)(v58 + i + 128);
        long long v69 = *(_OWORD *)(v58 + i + 160);
        long long v117 = *(_OWORD *)(v58 + i + 144);
        long long v118 = v69;
        long long v116 = v68;
        long long v115 = v67;
        sub_1C05DD98C((uint64_t)&v108);
        unint64_t v71 = v5[2];
        unint64_t v70 = v5[3];
        if (v71 >= v70 >> 1) {
          uint64_t v5 = sub_1C0EE1144((void *)(v70 > 1), v71 + 1, 1, v5);
        }
        v5[2] = v71 + 1;
        long long v72 = &v5[21 * v71];
        long long v73 = v108;
        long long v74 = v110;
        *((_OWORD *)v72 + 3) = v109;
        *((_OWORD *)v72 + 4) = v74;
        *((_OWORD *)v72 + 2) = v73;
        long long v75 = v111;
        long long v76 = v112;
        long long v77 = v114;
        *((_OWORD *)v72 + 7) = v113;
        *((_OWORD *)v72 + 8) = v77;
        *((_OWORD *)v72 + 5) = v75;
        *((_OWORD *)v72 + 6) = v76;
        long long v78 = v115;
        long long v79 = v116;
        long long v80 = v117;
        *((unsigned char *)v72 + 192) = v118;
        *((_OWORD *)v72 + 10) = v79;
        *((_OWORD *)v72 + 11) = v80;
        *((_OWORD *)v72 + 9) = v78;
        if (!v60) {
          break;
        }
        --v60;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v81 = v5[2];
    if (v81)
    {
      uint64_t v82 = (uint64_t)v95;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v83 = v81 - 1;
      uint64_t v84 = v82;
      for (uint64_t j = 4; ; j += 21)
      {
        long long v86 = *(_OWORD *)&v5[j];
        long long v87 = *(_OWORD *)&v5[j + 4];
        long long v109 = *(_OWORD *)&v5[j + 2];
        long long v110 = v87;
        long long v108 = v86;
        long long v88 = *(_OWORD *)&v5[j + 6];
        long long v89 = *(_OWORD *)&v5[j + 8];
        long long v90 = *(_OWORD *)&v5[j + 12];
        long long v113 = *(_OWORD *)&v5[j + 10];
        long long v114 = v90;
        long long v111 = v88;
        long long v112 = v89;
        long long v91 = *(_OWORD *)&v5[j + 14];
        long long v92 = *(_OWORD *)&v5[j + 16];
        long long v93 = *(_OWORD *)&v5[j + 18];
        LOBYTE(v118) = v5[j + 20];
        long long v116 = v92;
        long long v117 = v93;
        long long v115 = v91;
        long long v127 = v92;
        long long v128 = v93;
        char v129 = v118;
        long long v123 = v112;
        long long v124 = v113;
        long long v125 = v90;
        long long v126 = v91;
        long long v119 = v108;
        long long v120 = v109;
        long long v121 = v110;
        long long v122 = v111;
        swift_allocObject();
        sub_1C05DD98C((uint64_t)&v108);
        uint64_t v84 = sub_1C0AEAE70(v84, &v119);
        swift_release();
        if (!v83) {
          break;
        }
        --v83;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v84 = (uint64_t)v95;
      swift_retain();
      swift_bridgeObjectRelease();
    }
    return v84;
  }
  uint64_t v97 = v2 + 32;
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
LABEL_3:
  unint64_t v102 = v6;
  uint64_t v7 = v97 + 168 * v6;
  long long v8 = *(_OWORD *)v7;
  long long v9 = *(_OWORD *)(v7 + 32);
  long long v120 = *(_OWORD *)(v7 + 16);
  long long v121 = v9;
  long long v119 = v8;
  long long v10 = *(_OWORD *)(v7 + 48);
  long long v11 = *(_OWORD *)(v7 + 64);
  long long v12 = *(_OWORD *)(v7 + 96);
  long long v124 = *(_OWORD *)(v7 + 80);
  long long v125 = v12;
  long long v122 = v10;
  long long v123 = v11;
  long long v13 = *(_OWORD *)(v7 + 112);
  long long v14 = *(_OWORD *)(v7 + 128);
  long long v15 = *(_OWORD *)(v7 + 144);
  char v129 = *(unsigned char *)(v7 + 160);
  long long v127 = v14;
  long long v128 = v15;
  long long v126 = v13;
  long long v16 = v119;
  sub_1C05DD98C((uint64_t)&v119);
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  long long v108 = v16;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1BFEF53C0((uint64_t *)&v108);
  swift_bridgeObjectRelease();
  uint64_t v104 = *(void *)(v17 + 16);
  if (!v104)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  uint64_t v101 = v5;
  unint64_t v18 = 0;
  uint64_t v19 = (uint64_t *)(v17 + 64);
  uint64_t v20 = v17;
  while (1)
  {
    if (v18 >= *(void *)(v20 + 16))
    {
      __break(1u);
      goto LABEL_45;
    }
    uint64_t v103 = *(v19 - 2);
    uint64_t v21 = *(v19 - 1);
    uint64_t v22 = *v19;
    char v23 = *(unsigned char *)(v21 + 32);
    unsigned int v24 = v23 & 0x3F;
    unint64_t v25 = (unint64_t)((1 << v23) + 63) >> 6;
    size_t v26 = 8 * v25;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v24 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    char v28 = (char *)swift_slowAlloc();
    bzero(v28, v26);
    uint64_t v32 = v25;
    char v30 = v107;
    uint64_t v31 = sub_1BFEFB09C((uint64_t)v28, v32, v21, v106);
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_47;
    }
    uint64_t v107 = 0;
    MEMORY[0x1C18C9B00](v28, -1, -1);
LABEL_15:
    char v33 = sub_1BFEFAE14(v31, v21);
    swift_release();
    if (v33 & 1) != 0 && (sub_1BFEFB810(v106, v22))
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = v103;
      if (v103 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C05DD98C((uint64_t)&v119);
        uint64_t v5 = v101;
        unint64_t v48 = v101[2];
        unint64_t v47 = v101[3];
        if (v48 >= v47 >> 1) {
          uint64_t v5 = sub_1C0EE1144((void *)(v47 > 1), v48 + 1, 1, v101);
        }
        v5[2] = v48 + 1;
        uint64_t v49 = &v5[21 * v48];
        long long v50 = v119;
        long long v51 = v121;
        *((_OWORD *)v49 + 3) = v120;
        *((_OWORD *)v49 + 4) = v51;
        *((_OWORD *)v49 + 2) = v50;
        long long v52 = v122;
        long long v53 = v123;
        long long v54 = v125;
        *((_OWORD *)v49 + 7) = v124;
        *((_OWORD *)v49 + 8) = v54;
        *((_OWORD *)v49 + 5) = v52;
        *((_OWORD *)v49 + 6) = v53;
        long long v55 = v126;
        long long v56 = v127;
        long long v57 = v128;
        *((unsigned char *)v49 + 192) = v129;
        *((_OWORD *)v49 + 10) = v56;
        *((_OWORD *)v49 + 11) = v57;
        *((_OWORD *)v49 + 9) = v55;
      }
      else
      {
        sub_1C05DD98C((uint64_t)&v119);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v35 = v96;
        unint64_t v37 = v96[2];
        unint64_t v36 = v96[3];
        uint64_t v5 = v101;
        if (v37 >= v36 >> 1) {
          long long v35 = sub_1C0EE1108((void *)(v36 > 1), v37 + 1, 1, v96);
        }
        long long v112 = v123;
        long long v113 = v124;
        long long v110 = v121;
        long long v111 = v122;
        LOBYTE(v118) = v129;
        long long v116 = v127;
        long long v117 = v128;
        long long v114 = v125;
        long long v115 = v126;
        long long v108 = v119;
        long long v109 = v120;
        v35[2] = v37 + 1;
        uint64_t v96 = v35;
        long long v38 = &v35[22 * v37];
        long long v39 = v108;
        long long v40 = v110;
        *((_OWORD *)v38 + 3) = v109;
        *((_OWORD *)v38 + 4) = v40;
        *((_OWORD *)v38 + 2) = v39;
        long long v41 = v111;
        long long v42 = v112;
        long long v43 = v114;
        *((_OWORD *)v38 + 7) = v113;
        *((_OWORD *)v38 + 8) = v43;
        *((_OWORD *)v38 + 5) = v41;
        *((_OWORD *)v38 + 6) = v42;
        long long v44 = v115;
        long long v45 = v117;
        uint64_t v46 = v118;
        *((_OWORD *)v38 + 10) = v116;
        *((_OWORD *)v38 + 11) = v45;
        *((_OWORD *)v38 + 9) = v44;
        v38[24] = v46;
        v38[25] = v34;
      }
LABEL_26:
      sub_1C05DDA78((uint64_t)&v119);
LABEL_27:
      unint64_t v6 = v102 + 1;
      if (v102 + 1 == v98)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      if (v6 >= *(void *)(v99 + 16)) {
LABEL_45:
      }
        __break(1u);
      goto LABEL_3;
    }
    ++v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 += 5;
    if (v104 == v18)
    {
      swift_bridgeObjectRelease();
      sub_1C05DDA78((uint64_t)&v119);
      uint64_t v5 = v101;
      goto LABEL_27;
    }
  }
  long long v105 = &v95;
  MEMORY[0x1F4188790](isStackAllocationSafe);
  char v28 = (char *)&v95 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v28, v26);
  uint64_t v29 = v25;
  char v30 = v107;
  uint64_t v31 = sub_1BFEFB09C((uint64_t)v28, v29, v21, v106);
  swift_bridgeObjectRelease();
  if (!v30)
  {
    uint64_t v107 = 0;
    goto LABEL_15;
  }
  swift_willThrow();

  __break(1u);
LABEL_47:

  uint64_t result = MEMORY[0x1C18C9B00](v28, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1C0AE9E8C()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v32 = v3;
  uint64_t v33 = v2;
  uint64_t v28 = *(void *)(v1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v7 & 0xF000000000000007) != 0)
  {
    sub_1C0EF4E60(v34);
    uint64_t v7 = v34[0];
  }
  uint64_t v8 = *(void *)(v1 + 72);
  uint64_t v29 = v6;
  uint64_t v30 = v4;
  if (v8) {
    uint64_t v8 = sub_1C096BB70(v8);
  }
  uint64_t v9 = *(void *)(v1 + 80);
  uint64_t v10 = *(void *)(v1 + 88);
  char v11 = *(unsigned char *)(v1 + 96);
  uint64_t v12 = *(void *)(v1 + 112);
  uint64_t v13 = *(void *)(v1 + 136);
  int v14 = *(unsigned __int8 *)(v1 + 184);
  uint64_t v31 = v5;
  uint64_t v26 = *(void *)(v1 + 104);
  uint64_t v27 = v8;
  uint64_t v24 = *(void *)(v1 + 128);
  uint64_t v25 = *(void *)(v1 + 120);
  uint64_t v22 = *(void *)(v1 + 152);
  uint64_t v23 = *(void *)(v1 + 144);
  uint64_t v20 = *(void *)(v1 + 168);
  uint64_t v21 = *(void *)(v1 + 160);
  uint64_t v19 = *(void *)(v1 + 176);
  sub_1BFEF6828(v9, v10, v11);
  if (v14 != 254)
  {
    sub_1C10E55EC(v34);
    uint64_t v13 = v34[0];
    uint64_t v12 = v12;
  }
  uint64_t v15 = *(void *)(v1 + 192);
  if ((~v15 & 0xF000000000000007) != 0)
  {
    sub_1C10E55EC(v34);
    uint64_t v15 = v34[0];
  }
  char v16 = *(unsigned char *)(v1 + 200);
  uint64_t v17 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v17 + 16) = v33;
  *(void *)(v17 + 24) = v32;
  *(void *)(v17 + 32) = v31;
  *(void *)(v17 + 40) = v30;
  swift_beginAccess();
  *(void *)(v17 + 48) = v29;
  *(void *)(v17 + 56) = v28;
  *(void *)(v17 + 64) = v7;
  *(void *)(v17 + 72) = v27;
  *(void *)(v17 + 80) = v9;
  *(void *)(v17 + 88) = v10;
  *(unsigned char *)(v17 + 96) = v11;
  *(void *)(v17 + 104) = v26;
  *(void *)(v17 + 112) = v12;
  *(void *)(v17 + 120) = v25;
  *(void *)(v17 + 128) = v24;
  *(void *)(v17 + 136) = v13;
  *(void *)(v17 + 144) = v23;
  *(void *)(v17 + 152) = v22;
  *(void *)(v17 + 160) = v21;
  *(void *)(v17 + 168) = v20;
  *(void *)(v17 + 176) = v19;
  *(unsigned char *)(v17 + 184) = v14;
  *(void *)(v17 + 192) = v15;
  *(unsigned char *)(v17 + 200) = v16;
  return v17;
}

uint64_t FormatVideoNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVideoNodeStyle.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatVideoNodeStyle.class.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoNodeStyle.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVideoNodeStyle.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatVideoNodeStyle.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t FormatVideoNodeStyle.background.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  *a1 = v2;
  return sub_1BFEF683C(v2);
}

uint64_t FormatVideoNodeStyle.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatVideoNodeStyle.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 88);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 96);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t FormatVideoNodeStyle.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = *(void *)(v1 + 120);
  uint64_t v5 = *(void *)(v1 + 128);
  uint64_t v6 = *(void *)(v1 + 136);
  uint64_t v7 = *(void *)(v1 + 144);
  uint64_t v8 = *(void *)(v1 + 152);
  uint64_t v9 = *(void *)(v1 + 160);
  uint64_t v10 = *(void *)(v1 + 168);
  uint64_t v11 = *(void *)(v1 + 176);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 184);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatVideoNodeStyle.tintColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 192);
  *a1 = v2;
  return sub_1BFDC11A4(v2);
}

uint64_t FormatVideoNodeStyle.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 200);
}

uint64_t FormatVideoNodeStyle.__allocating_init(identifier:class:selectors:alpha:background:borders:cornerRadius:shadow:tintColor:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t *a9, long long *a10, uint64_t *a11, char a12)
{
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = *a6;
  uint64_t v16 = *a7;
  uint64_t v17 = *a9;
  uint64_t v18 = a9[1];
  char v19 = *((unsigned char *)a9 + 16);
  long long v27 = a10[1];
  long long v28 = *a10;
  long long v25 = a10[3];
  long long v26 = a10[2];
  uint64_t v20 = *((void *)a10 + 8);
  uint64_t v21 = *((void *)a10 + 9);
  char v22 = *((unsigned char *)a10 + 80);
  uint64_t v23 = *a11;
  swift_beginAccess();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  swift_beginAccess();
  *(void *)(v14 + 48) = a5;
  *(void *)(v14 + 56) = v15;
  *(void *)(v14 + 64) = v16;
  *(void *)(v14 + 72) = a8;
  *(void *)(v14 + 80) = v17;
  *(void *)(v14 + 88) = v18;
  *(unsigned char *)(v14 + 96) = v19;
  *(_OWORD *)(v14 + 104) = v28;
  *(_OWORD *)(v14 + 120) = v27;
  *(_OWORD *)(v14 + 136) = v26;
  *(_OWORD *)(v14 + 152) = v25;
  *(void *)(v14 + 168) = v20;
  *(void *)(v14 + 176) = v21;
  *(unsigned char *)(v14 + 184) = v22;
  *(void *)(v14 + 192) = v23;
  *(unsigned char *)(v14 + 200) = a12;
  return v14;
}

uint64_t FormatVideoNodeStyle.init(identifier:class:selectors:alpha:background:borders:cornerRadius:shadow:tintColor:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t *a9, long long *a10, uint64_t *a11, char a12)
{
  uint64_t v17 = *a6;
  uint64_t v18 = *a7;
  uint64_t v19 = *a9;
  uint64_t v30 = a9[1];
  char v20 = *((unsigned char *)a9 + 16);
  long long v28 = a10[1];
  long long v29 = *a10;
  long long v26 = a10[3];
  long long v27 = a10[2];
  uint64_t v24 = *((void *)a10 + 9);
  uint64_t v25 = *((void *)a10 + 8);
  char v23 = *((unsigned char *)a10 + 80);
  uint64_t v21 = *a11;
  swift_beginAccess();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  *(void *)(v12 + 32) = a3;
  *(void *)(v12 + 40) = a4;
  swift_beginAccess();
  *(void *)(v12 + 48) = a5;
  *(void *)(v12 + 56) = v17;
  *(void *)(v12 + 64) = v18;
  *(void *)(v12 + 72) = a8;
  *(void *)(v12 + 80) = v19;
  *(void *)(v12 + 88) = v30;
  *(unsigned char *)(v12 + 96) = v20;
  *(_OWORD *)(v12 + 104) = v29;
  *(_OWORD *)(v12 + 120) = v28;
  *(_OWORD *)(v12 + 136) = v27;
  *(_OWORD *)(v12 + 152) = v26;
  *(void *)(v12 + 168) = v25;
  *(void *)(v12 + 176) = v24;
  *(unsigned char *)(v12 + 184) = v23;
  *(void *)(v12 + 192) = v21;
  *(unsigned char *)(v12 + 200) = a12;
  return v12;
}

uint64_t FormatVideoNodeStyle.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF68C0(*(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  sub_1BFEF68AC(*(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned char *)(v0 + 96));
  sub_1BFEF8738(*(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(unsigned char *)(v0 + 184));
  sub_1BFDC11BC(*(void *)(v0 + 192));
  return v0;
}

uint64_t FormatVideoNodeStyle.__deallocating_deinit()
{
  FormatVideoNodeStyle.deinit();
  return swift_deallocClassInstance();
}

unsigned char *sub_1C0AEA64C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C08C8024(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C0AEA678(void *a1)
{
  return FormatVideoNodeStyle.encode(to:)(a1);
}

uint64_t sub_1C0AEA69C(uint64_t *a1, uint64_t *a2)
{
  return static FormatVideoNodeStyle.== infix(_:_:)(*a1, *a2);
}

uint64_t FormatVideoNodeStyle.Selector.selector.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatVideoNodeStyle.Selector.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatVideoNodeStyle.Selector.background.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = v2;
  return sub_1BFEF683C(v2);
}

uint64_t FormatVideoNodeStyle.Selector.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatVideoNodeStyle.Selector.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 56);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t FormatVideoNodeStyle.Selector.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = *(void *)(v1 + 88);
  uint64_t v6 = *(void *)(v1 + 96);
  uint64_t v7 = *(void *)(v1 + 104);
  uint64_t v8 = *(void *)(v1 + 112);
  uint64_t v9 = *(void *)(v1 + 120);
  uint64_t v10 = *(void *)(v1 + 128);
  uint64_t v11 = *(void *)(v1 + 136);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 144);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatVideoNodeStyle.Selector.tintColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 152);
  *a1 = v2;
  return sub_1BFDC11A4(v2);
}

uint64_t FormatVideoNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 160);
}

uint64_t sub_1C0AEA758@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatVideoNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t sub_1C0AEA770(void *a1)
{
  return FormatVideoNodeStyle.Selector.encode(to:)(a1);
}

uint64_t FormatVideoNodeStyle.auxViewRequirements.getter()
{
  sub_1BFE6FE94(0, (unint64_t *)&qword_1EB87A888, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v2 = *(void *)(v0 + 64);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    uint64_t v5 = &protocol witness table for FormatBackground;
    uint64_t v4 = &type metadata for FormatBackground;
    uint64_t v3 = *(void *)(v0 + 64);
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    *(void *)(inited + 40) = 0;
    *(void *)(inited + 48) = 0;
  }
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 56) = v4;
  *(void *)(inited + 64) = v5;
  sub_1BFEF683C(v2);
  uint64_t v6 = sub_1BFE70334(inited);
  swift_setDeallocating();
  sub_1BFE4D1E4(0, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
  swift_arrayDestroy();
  return v6;
}

uint64_t sub_1C0AEA88C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 168);
  return result;
}

uint64_t _s8NewsFeed20FormatVideoNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v61 = *(void *)(a1 + 32);
  uint64_t v56 = *(void *)(a1 + 40);
  uint64_t v57 = *(void *)(a1 + 48);
  unsigned int v55 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v48 = *(void *)(a1 + 64);
  uint64_t v49 = *(void *)(a1 + 72);
  uint64_t v50 = *(void *)(a1 + 80);
  uint64_t v51 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v46 = *(void *)(a1 + 104);
  uint64_t v5 = *(void *)(a1 + 120);
  uint64_t v47 = *(void *)(a1 + 128);
  uint64_t v45 = *(void *)(a1 + 136);
  uint64_t v6 = *(void *)(a1 + 152);
  int v7 = *(unsigned __int8 *)(a1 + 160);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v60 = *(void *)(a2 + 32);
  uint64_t v52 = *(void *)(a1 + 96);
  uint64_t v53 = *(void *)(a2 + 40);
  uint64_t v54 = *(void *)(a2 + 48);
  int v58 = *(unsigned __int8 *)(a1 + 144);
  unsigned int v59 = *(unsigned __int8 *)(a2 + 56);
  uint64_t v37 = *(void *)(a2 + 64);
  uint64_t v38 = *(void *)(a2 + 72);
  uint64_t v39 = *(void *)(a2 + 80);
  uint64_t v40 = *(void *)(a2 + 88);
  uint64_t v41 = *(void *)(a2 + 96);
  uint64_t v42 = *(void *)(a2 + 104);
  uint64_t v43 = *(void *)(a2 + 112);
  uint64_t v44 = *(void *)(a2 + 120);
  uint64_t v35 = *(void *)(a2 + 136);
  uint64_t v36 = *(void *)(a2 + 128);
  int v10 = *(unsigned __int8 *)(a2 + 144);
  unint64_t v34 = *(void *)(a2 + 152);
  int v11 = *(unsigned __int8 *)(a2 + 160);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_1C1520A9C(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2)
    {
      if (!v8) {
        return 0;
      }
      uint64_t v33 = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v14 = sub_1C00DE998(v2, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t v33 = v4;
      if (v8) {
        return 0;
      }
    }
    if ((~v3 & 0xF000000000000007) != 0)
    {
      uint64_t v73 = v3;
      if ((~v9 & 0xF000000000000007) != 0)
      {
        unint64_t v62 = v9;
        swift_retain_n();
        char v15 = static FormatBackground.== infix(_:_:)(&v73, &v62);
        swift_release();
        sub_1BFEF68C0(v3);
        if ((v15 & 1) == 0) {
          return 0;
        }
LABEL_18:
        if (v61)
        {
          uint64_t v16 = v6;
          int v17 = v7;
          int v18 = v11;
          uint64_t v19 = v5;
          uint64_t v20 = v33;
          if (!v60) {
            return 0;
          }
          int v21 = v10;
          swift_bridgeObjectRetain();
          uint64_t v22 = swift_bridgeObjectRetain();
          BOOL v23 = sub_1C00DFB58(v22, v60);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v23) {
            return 0;
          }
        }
        else
        {
          uint64_t v16 = v6;
          int v17 = v7;
          int v18 = v11;
          uint64_t v19 = v5;
          uint64_t v20 = v33;
          int v21 = v10;
          if (v60) {
            return 0;
          }
        }
        if (v55 <= 0xFD)
        {
          uint64_t v73 = v56;
          uint64_t v74 = v57;
          LOBYTE(v75) = v55;
          int v25 = v58;
          if (v59 <= 0xFD)
          {
            unint64_t v62 = v53;
            uint64_t v63 = v54;
            LOBYTE(v64) = v59;
            sub_1BFEF6828(v56, v57, v55);
            sub_1BFF046A0(v56, v57, v55);
            char v27 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v73, (uint64_t)&v62);
            sub_1BFF04738(v73, v74, v75);
            sub_1BFEF68AC(v56, v57, v55);
            if ((v27 & 1) == 0) {
              return 0;
            }
LABEL_30:
            if (v25 == 254)
            {
              uint64_t v28 = v46;
              uint64_t v29 = v52;
              if (v21 == 254)
              {
LABEL_37:
                if ((~v16 & 0xF000000000000007) == 0)
                {
                  uint64_t v31 = v34;
                  if ((~v34 & 0xF000000000000007) == 0)
                  {
LABEL_44:
                    if (v17 == 2)
                    {
                      if (v18 == 2) {
                        return 1;
                      }
                    }
                    else if (v18 != 2 && ((((v17 & 1) == 0) ^ v18) & 1) != 0)
                    {
                      return 1;
                    }
                    return 0;
                  }
                  goto LABEL_42;
                }
                uint64_t v73 = v16;
                uint64_t v31 = v34;
                if ((~v34 & 0xF000000000000007) == 0)
                {
                  swift_retain();
LABEL_42:
                  sub_1BFDC11A4(v31);
                  sub_1BFDC11BC(v16);
                  sub_1BFDC11BC(v31);
                  return 0;
                }
                unint64_t v62 = v34;
                swift_retain_n();
                char v32 = static FormatColor.== infix(_:_:)(&v73, &v62);
                swift_release();
                sub_1BFDC11BC(v16);
                if (v32) {
                  goto LABEL_44;
                }
                return 0;
              }
            }
            else
            {
              uint64_t v73 = v48;
              uint64_t v74 = v49;
              uint64_t v75 = v50;
              uint64_t v76 = v51;
              uint64_t v28 = v46;
              uint64_t v77 = v52;
              uint64_t v78 = v46;
              uint64_t v79 = v20;
              uint64_t v80 = v19;
              uint64_t v81 = v47;
              uint64_t v82 = v45;
              char v83 = v25;
              if (v21 != 254)
              {
                unint64_t v62 = v37;
                LODWORD(v63) = v38;
                uint64_t v64 = v39;
                uint64_t v65 = v40;
                uint64_t v66 = v41;
                uint64_t v67 = v42;
                uint64_t v68 = v43;
                uint64_t v69 = v44;
                uint64_t v70 = v36;
                uint64_t v71 = v35;
                char v72 = v21;
                sub_1BFEF8708(v48, v49, v50, v51, v52, v46, v20, v19, v47, v45, v25);
                swift_retain();
                char v30 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v73, (uint64_t)&v62);
                swift_release();
                sub_1BFEF8738(v48, v49, v50, v51, v52, v46, v20, v19, v47, v45, v25);
                if ((v30 & 1) == 0) {
                  return 0;
                }
                goto LABEL_37;
              }
              swift_retain();
              uint64_t v29 = v52;
            }
            uint64_t v73 = v48;
            uint64_t v74 = v49;
            uint64_t v75 = v50;
            uint64_t v76 = v51;
            uint64_t v77 = v29;
            uint64_t v78 = v28;
            uint64_t v79 = v20;
            uint64_t v80 = v19;
            uint64_t v81 = v47;
            uint64_t v82 = v45;
            char v83 = v25;
            uint64_t v84 = v37;
            uint64_t v85 = v38;
            uint64_t v86 = v39;
            uint64_t v87 = v40;
            uint64_t v88 = v41;
            uint64_t v89 = v42;
            uint64_t v90 = v43;
            uint64_t v91 = v44;
            uint64_t v92 = v36;
            uint64_t v93 = v35;
            char v94 = v21;
            sub_1BFEF8708(v37, v38, v39, v40, v41, v42, v43, v44, v36, v35, v21);
            sub_1C02D2004((uint64_t)&v73);
            return 0;
          }
          sub_1BFF046A0(v56, v57, v55);
          sub_1BFF046A0(v56, v57, v55);
          sub_1BFF04738(v56, v57, v55);
          char v24 = v59;
        }
        else
        {
          int v25 = v58;
          char v24 = v59;
          if (v59 > 0xFD) {
            goto LABEL_30;
          }
        }
        char v26 = v24;
        sub_1BFEF6828(v53, v54, v24);
        sub_1BFEF68AC(v56, v57, v55);
        sub_1BFEF68AC(v53, v54, v26);
        return 0;
      }
      swift_retain();
    }
    else if ((~v9 & 0xF000000000000007) == 0)
    {
      goto LABEL_18;
    }
    sub_1BFEF683C(v9);
    sub_1BFEF68C0(v3);
    sub_1BFEF68C0(v9);
    return 0;
  }
  return result;
}

uint64_t sub_1C0AEAE70(uint64_t a1, long long *a2)
{
  long long v4 = a2[9];
  long long v62 = a2[8];
  long long v63 = v4;
  char v64 = *((unsigned char *)a2 + 160);
  long long v5 = a2[5];
  long long v58 = a2[4];
  long long v59 = v5;
  long long v6 = a2[7];
  long long v60 = a2[6];
  long long v61 = v6;
  long long v7 = a2[1];
  long long v54 = *a2;
  long long v55 = v7;
  long long v8 = a2[3];
  long long v56 = a2[2];
  long long v57 = v8;
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v2 + 16) = v9;
  *(void *)(v2 + 24) = v10;
  uint64_t v11 = *(void *)(a1 + 40);
  *(void *)(v2 + 32) = *(void *)(a1 + 32);
  *(void *)(v2 + 40) = v11;
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 48);
  swift_beginAccess();
  *(void *)(v2 + 48) = v12;
  uint64_t v13 = v55;
  if (!(void)v55) {
    uint64_t v13 = swift_bridgeObjectRetain();
  }
  *(void *)(v2 + 56) = v13;
  uint64_t v53 = *((void *)&v55 + 1);
  uint64_t v14 = *((void *)&v55 + 1);
  if ((~*((void *)&v55 + 1) & 0xF000000000000007) == 0)
  {
    uint64_t v14 = *(void *)(a1 + 64);
    sub_1BFEF683C(v14);
  }
  *(void *)(v2 + 64) = v14;
  uint64_t v15 = v56;
  if (!(void)v56) {
    uint64_t v15 = swift_bridgeObjectRetain();
  }
  *(void *)(v2 + 72) = v15;
  uint64_t v16 = *((void *)&v56 + 1);
  uint64_t v17 = v57;
  uint64_t v51 = v57;
  uint64_t v52 = *((void *)&v56 + 1);
  char v18 = BYTE8(v57);
  char v50 = BYTE8(v57);
  if (BYTE8(v57) >= 0xFEu)
  {
    uint64_t v16 = *(void *)(a1 + 80);
    uint64_t v17 = *(void *)(a1 + 88);
    char v18 = *(unsigned char *)(a1 + 96);
    sub_1BFEF6828(v16, v17, v18);
  }
  *(void *)(v2 + 80) = v16;
  *(void *)(v2 + 88) = v17;
  uint64_t v19 = *((void *)&v58 + 1);
  uint64_t v21 = *((void *)&v59 + 1);
  uint64_t v20 = v59;
  uint64_t v23 = *((void *)&v60 + 1);
  uint64_t v22 = v60;
  uint64_t v24 = *((void *)&v61 + 1);
  uint64_t v25 = v61;
  uint64_t v48 = *((void *)&v58 + 1);
  uint64_t v49 = v58;
  uint64_t v26 = v58;
  uint64_t v46 = *((void *)&v59 + 1);
  uint64_t v47 = v59;
  uint64_t v44 = *((void *)&v60 + 1);
  uint64_t v45 = v60;
  uint64_t v42 = *((void *)&v61 + 1);
  uint64_t v43 = v61;
  uint64_t v27 = *((void *)&v62 + 1);
  unsigned long long v29 = v62;
  uint64_t v40 = v29 >> 64;
  uint64_t v28 = v29;
  uint64_t v41 = v62;
  *(unsigned char *)(v2 + 96) = v18;
  unsigned __int8 v30 = v63;
  unsigned __int8 v39 = v63;
  if (v63 == 254)
  {
    uint64_t v37 = *(void *)(a1 + 112);
    uint64_t v38 = *(void *)(a1 + 104);
    uint64_t v31 = *(void *)(a1 + 128);
    uint64_t v36 = *(void *)(a1 + 120);
    uint64_t v22 = *(void *)(a1 + 136);
    uint64_t v23 = *(void *)(a1 + 144);
    uint64_t v25 = *(void *)(a1 + 152);
    uint64_t v24 = *(void *)(a1 + 160);
    uint64_t v28 = *(void *)(a1 + 168);
    uint64_t v27 = *(void *)(a1 + 176);
    unsigned __int8 v30 = *(unsigned char *)(a1 + 184);
    sub_1BFEF8708(v38, v37, v36, v31, v22, v23, v25, v24, v28, v27, v30);
    uint64_t v21 = v31;
    uint64_t v20 = v36;
    uint64_t v19 = v37;
    uint64_t v26 = v38;
  }
  *(void *)(v2 + 104) = v26;
  *(void *)(v2 + 112) = v19;
  *(void *)(v2 + 120) = v20;
  *(void *)(v2 + 128) = v21;
  *(void *)(v2 + 136) = v22;
  *(void *)(v2 + 144) = v23;
  *(void *)(v2 + 152) = v25;
  *(void *)(v2 + 160) = v24;
  *(void *)(v2 + 168) = v28;
  *(void *)(v2 + 176) = v27;
  uint64_t v32 = *((void *)&v63 + 1);
  uint64_t v33 = *((void *)&v63 + 1);
  *(unsigned char *)(v2 + 184) = v30;
  if ((~v33 & 0xF000000000000007) == 0)
  {
    uint64_t v33 = *(void *)(a1 + 192);
    sub_1BFDC11A4(v33);
  }
  *(void *)(v2 + 192) = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF683C(v53);
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v52, v51, v50);
  sub_1BFEF8708(v49, v48, v47, v46, v45, v44, v43, v42, v41, v40, v39);
  sub_1BFDC11A4(v32);
  sub_1C05DDA78((uint64_t)&v54);
  char v34 = v64;
  if (v64 == 2) {
    char v34 = *(unsigned char *)(a1 + 200);
  }
  *(unsigned char *)(v2 + 200) = v34;
  return v2;
}

uint64_t sub_1C0AEB144(uint64_t a1)
{
  uint64_t result = sub_1C0AEB2A0(&qword_1EA1A3670);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatVideoNodeStyle()
{
  return self;
}

uint64_t sub_1C0AEB1AC(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1C0AEB2A0(&qword_1EB866B18);
  uint64_t result = sub_1C0AEB2A0(&qword_1EA1A08B0);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C0AEB214(void *a1)
{
  a1[1] = sub_1C0AEB2A0(&qword_1EB866B18);
  a1[2] = sub_1C0AEB2A0(&qword_1EA1A08B0);
  uint64_t result = sub_1C0AEB2A0(&qword_1EA1A3678);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0AEB2A0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatVideoNodeStyle();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0AEB2E0(uint64_t a1)
{
  unint64_t result = sub_1C0AEB308();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0AEB308()
{
  unint64_t result = qword_1EA1A3680;
  if (!qword_1EA1A3680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3680);
  }
  return result;
}

unint64_t sub_1C0AEB35C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C08EB208();
  unint64_t result = sub_1C08EB16C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0AEB38C(void *a1)
{
  a1[1] = sub_1C08EB208();
  a1[2] = sub_1C08EB16C();
  unint64_t result = sub_1C0AEB3C4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0AEB3C4()
{
  unint64_t result = qword_1EA1A3688;
  if (!qword_1EA1A3688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3688);
  }
  return result;
}

uint64_t sub_1C0AEB418@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0AEB468@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatVideoNodeStyle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatVideoNodeStyle);
}

uint64_t dispatch thunk of FormatVideoNodeStyle.__allocating_init(identifier:class:selectors:alpha:background:borders:cornerRadius:shadow:tintColor:ignoresSmartInvertColors:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t assignWithCopy for FormatVideoNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(a1 + 24);
  uint64_t v5 = *(void *)(a2 + 24);
  unint64_t v6 = v5 & 0xF000000000000007;
  if ((~*(void *)(a1 + 24) & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *uint64_t v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1C09C6DD8(a1 + 24);
    uint64_t v5 = *(void *)(a2 + 24);
LABEL_6:
    *uint64_t v4 = v5;
    goto LABEL_8;
  }
  *uint64_t v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v7 = (_OWORD *)(a1 + 40);
  long long v8 = (_OWORD *)(a2 + 40);
  unsigned int v9 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v9 <= 0xFD)
    {
      uint64_t v14 = *(void *)(a2 + 40);
      uint64_t v15 = *(void *)(a2 + 48);
      sub_1BFF046A0(v14, v15, *(unsigned char *)(a2 + 56));
      uint64_t v16 = *(void *)(a1 + 40);
      uint64_t v17 = *(void *)(a1 + 48);
      *(void *)(a1 + 40) = v14;
      *(void *)(a1 + 48) = v15;
      char v18 = *(unsigned char *)(a1 + 56);
      *(unsigned char *)(a1 + 56) = v9;
      sub_1BFF04738(v16, v17, v18);
    }
    else
    {
      sub_1C02D0F84(a1 + 40);
      char v11 = *(unsigned char *)(a2 + 56);
      _OWORD *v7 = *v8;
      *(unsigned char *)(a1 + 56) = v11;
    }
  }
  else if (v9 <= 0xFD)
  {
    uint64_t v12 = *(void *)(a2 + 40);
    uint64_t v13 = *(void *)(a2 + 48);
    sub_1BFF046A0(v12, v13, *(unsigned char *)(a2 + 56));
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v13;
    *(unsigned char *)(a1 + 56) = v9;
  }
  else
  {
    long long v10 = *v8;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    _OWORD *v7 = v10;
  }
  uint64_t v19 = (_OWORD *)(a1 + 64);
  uint64_t v20 = (_OWORD *)(a2 + 64);
  int v21 = *(unsigned __int8 *)(a2 + 144);
  if (*(unsigned __int8 *)(a1 + 144) == 254)
  {
    if (v21 == 254)
    {
      long long v22 = *(_OWORD *)(a2 + 80);
      *uint64_t v19 = *v20;
      *(_OWORD *)(a1 + 80) = v22;
      long long v23 = *(_OWORD *)(a2 + 96);
      long long v24 = *(_OWORD *)(a2 + 112);
      long long v25 = *(_OWORD *)(a2 + 128);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(_OWORD *)(a1 + 112) = v24;
      *(_OWORD *)(a1 + 128) = v25;
      *(_OWORD *)(a1 + 96) = v23;
    }
    else
    {
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      long long v30 = *(_OWORD *)(a2 + 104);
      long long v31 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
      *(_OWORD *)(a1 + 120) = v31;
      *(_OWORD *)(a1 + 104) = v30;
      swift_retain();
    }
  }
  else if (v21 == 254)
  {
    sub_1C02D0FD8(a1 + 64);
    long long v26 = *(_OWORD *)(a2 + 80);
    *uint64_t v19 = *v20;
    *(_OWORD *)(a1 + 80) = v26;
    long long v28 = *(_OWORD *)(a2 + 112);
    long long v27 = *(_OWORD *)(a2 + 128);
    long long v29 = *(_OWORD *)(a2 + 96);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v28;
    *(_OWORD *)(a1 + 128) = v27;
    *(_OWORD *)(a1 + 96) = v29;
  }
  else
  {
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_retain();
    swift_release();
    long long v32 = *(_OWORD *)(a2 + 104);
    long long v33 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
    *(_OWORD *)(a1 + 120) = v33;
    *(_OWORD *)(a1 + 104) = v32;
  }
  char v34 = (void *)(a1 + 152);
  uint64_t v35 = *(void *)(a2 + 152);
  unint64_t v36 = v35 & 0xF000000000000007;
  if ((~*(void *)(a1 + 152) & 0xF000000000000007) != 0)
  {
    if (v36 != 0xF000000000000007)
    {
      *char v34 = v35;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    sub_1C036EDB0(a1 + 152);
    uint64_t v35 = *(void *)(a2 + 152);
    goto LABEL_27;
  }
  if (v36 == 0xF000000000000007)
  {
LABEL_27:
    *char v34 = v35;
    goto LABEL_29;
  }
  *char v34 = v35;
  swift_retain();
LABEL_29:
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  return a1;
}

uint64_t assignWithTake for FormatVideoNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)(a1 + 24);
  uint64_t v6 = *(void *)(a2 + 24);
  if ((~*(void *)(a1 + 24) & 0xF000000000000007) == 0) {
    goto LABEL_4;
  }
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1C09C6DD8(a1 + 24);
LABEL_4:
    *uint64_t v5 = v6;
    goto LABEL_6;
  }
  *uint64_t v5 = v6;
  swift_release();
LABEL_6:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  long long v7 = (_OWORD *)(a2 + 40);
  unsigned int v8 = *(unsigned __int8 *)(a1 + 56);
  if (v8 > 0xFD)
  {
LABEL_9:
    *(_OWORD *)(a1 + 40) = *v7;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    goto LABEL_11;
  }
  unsigned int v9 = *(unsigned __int8 *)(a2 + 56);
  if (v9 > 0xFD)
  {
    sub_1C02D0F84(a1 + 40);
    goto LABEL_9;
  }
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *v7;
  *(unsigned char *)(a1 + 56) = v9;
  sub_1BFF04738(v10, v11, v8);
LABEL_11:
  if (*(unsigned __int8 *)(a1 + 144) == 254)
  {
LABEL_14:
    long long v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    long long v13 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    goto LABEL_16;
  }
  if (*(unsigned __int8 *)(a2 + 144) == 254)
  {
    sub_1C02D0FD8(a1 + 64);
    goto LABEL_14;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
LABEL_16:
  uint64_t v14 = (void *)(a1 + 152);
  uint64_t v15 = *(void *)(a2 + 152);
  if ((~*(void *)(a1 + 152) & 0xF000000000000007) != 0)
  {
    if ((~v15 & 0xF000000000000007) != 0)
    {
      *uint64_t v14 = v15;
      swift_release();
      goto LABEL_21;
    }
    sub_1C036EDB0(a1 + 152);
  }
  *uint64_t v14 = v15;
LABEL_21:
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  return a1;
}

ValueMetadata *type metadata accessor for FormatVideoNodeStyle.Selector()
{
  return &type metadata for FormatVideoNodeStyle.Selector;
}

void sub_1C0AEB9E0()
{
  if (!qword_1EA1A3690)
  {
    sub_1C008192C();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A3690);
    }
  }
}

void sub_1C0AEBA44()
{
  if (!qword_1EA1A87A0)
  {
    sub_1C0AEBAA0();
    unint64_t v0 = type metadata accessor for FormatNodeStyleSelectorOrder();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A87A0);
    }
  }
}

unint64_t sub_1C0AEBAA0()
{
  unint64_t result = qword_1EA1A3698;
  if (!qword_1EA1A3698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3698);
  }
  return result;
}

void *sub_1C0AEBAF4(double *a1, uint64_t a2)
{
  sub_1BFE6FE94(0, (unint64_t *)&qword_1EA1974D0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152A660;
  sub_1C09C76D8(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
  sub_1C0181BEC(0);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v45 = *(void *)(*(void *)(v4 - 8) + 72);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
  unsigned int v8 = (char *)(v7 + v6);
  if (a2)
  {
    unint64_t v9 = *(void *)(a2 + 40);
    uint64_t v42 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_1C0AE9E8C();
    long long v50 = 0u;
    long long v51 = 0u;
    uint64_t v52 = 0;
    long long v53 = xmmword_1C158F150;
    uint64_t v10 = swift_allocObject();
    sub_1C02D1F8C((uint64_t)&v49, v10 + 16);
    uint64_t v11 = sub_1C02D1FE8;
  }
  else
  {
    uint64_t v11 = sub_1C139486C;
    uint64_t v10 = 0;
    uint64_t v42 = 0;
    unint64_t v9 = 0xE000000000000000;
  }
  uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
  long long v13 = (uint64_t (**)())&v8[*(int *)(v12 + 24)];
  *long long v13 = v11;
  v13[1] = (uint64_t (*)())v10;
  uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
  *(void *)(v7 + v6) = v42;
  *((void *)v8 + 2) = 0;
  *((void *)v8 + 3) = 0;
  *((void *)v8 + 1) = v9;
  uint64_t v15 = &v8[*(int *)(v12 + 28)];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  v15[16] = -1;
  uint64_t v16 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v16(v8, 0, 1, v12);
  sub_1C09BCFA4(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v7, v57);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v17 = swift_allocObject();
  *(void *)(inited + 32) = v17;
  *(void *)(v17 + 48) = v58;
  long long v18 = v57[1];
  *(_OWORD *)(v17 + 16) = v57[0];
  *(_OWORD *)(v17 + 32) = v18;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C152C7E0;
  uint64_t v20 = (char *)(v19 + v6);
  int v21 = v16;
  sub_1C0433600(1701869908, 0xE400000000000000, 0x6F65646956, 0xE500000000000000, v20);
  v16(v20, 0, 1, v12);
  if (a2)
  {
    uint64_t v22 = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, v22, &v20[v45]);
    v21(&v20[v45], 0, 1, v12);
    unint64_t v23 = *(void *)(a2 + 64);
    sub_1BFEF683C(v23);
  }
  else
  {
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, 0, &v20[v45]);
    v16(&v20[v45], 0, 1, v12);
    unint64_t v23 = 0xF000000000000007;
  }
  sub_1C0439948(0x756F72676B636142, 0xEA0000000000646ELL, v23, (uint64_t)&v20[2 * v45]);
  v21(&v20[2 * v45], 0, 1, v12);
  if (a2)
  {
    uint64_t v24 = *(void *)(a2 + 192);
    sub_1BFDC11A4(v24);
    sub_1C0433BC8(0x6C6F4320746E6954, 0xEA0000000000726FLL, v24, &v20[3 * v45]);
    v21(&v20[3 * v45], 0, 1, v12);
    char v25 = *(unsigned char *)(a2 + 200);
  }
  else
  {
    sub_1C0433BC8(0x6C6F4320746E6954, 0xEA0000000000726FLL, 0xF000000000000007, &v20[3 * v45]);
    v21(&v20[3 * v45], 0, 1, v12);
    char v25 = 2;
  }
  sub_1C0432B74(0xD00000000000001BLL, 0x80000001C160A2E0, v25, &v20[4 * v45]);
  v21(&v20[4 * v45], 0, 1, v12);
  sub_1C09BCFA4(2003134806, 0xE400000000000000, 0, 0, v19, v59);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 104) = &off_1F1BDEC90;
  uint64_t v26 = swift_allocObject();
  *(void *)(inited + 72) = v26;
  *(void *)(v26 + 48) = v60;
  long long v27 = v59[1];
  *(_OWORD *)(v26 + 16) = v59[0];
  *(_OWORD *)(v26 + 32) = v27;
  if (a2)
  {
    uint64_t v28 = *(void *)(a2 + 80);
    uint64_t v29 = *(void *)(a2 + 88);
    char v30 = *(unsigned char *)(a2 + 96);
    sub_1BFEF6828(v28, v29, v30);
  }
  else
  {
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    char v30 = -2;
  }
  uint64_t v49 = v28;
  *(void *)&long long v50 = v29;
  BYTE8(v50) = v30;
  long long v31 = sub_1C108626C(a1, (uint64_t)&v49);
  sub_1BFEF68AC(v28, v29, v30);
  *(void *)(inited + 136) = &type metadata for FormatInspection;
  *(void *)(inited + 144) = &off_1F1C29D30;
  uint64_t v48 = (void *)inited;
  *(void *)(inited + 112) = v31;
  if (a2)
  {
    unsigned __int8 v43 = *(unsigned char *)(a2 + 184);
    uint64_t v44 = *(void *)(a2 + 176);
    uint64_t v47 = *(void *)(a2 + 168);
    uint64_t v32 = *(void *)(a2 + 104);
    uint64_t v33 = *(void *)(a2 + 112);
    uint64_t v34 = *(void *)(a2 + 120);
    uint64_t v35 = *(void *)(a2 + 128);
    uint64_t v36 = *(void *)(a2 + 136);
    uint64_t v37 = *(void *)(a2 + 144);
    uint64_t v38 = *(void *)(a2 + 152);
    a2 = *(void *)(a2 + 160);
    sub_1BFEF8708(v32, v33, v34, v35, v36, v37, v38, a2, v47, v44, v43);
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    uint64_t v47 = 0;
    uint64_t v44 = 0;
    unsigned __int8 v43 = -2;
  }
  uint64_t v49 = v32;
  *(void *)&long long v50 = v33;
  *((void *)&v50 + 1) = v34;
  *(void *)&long long v51 = v35;
  *((void *)&v51 + 1) = v36;
  uint64_t v52 = v37;
  *(void *)&long long v53 = v38;
  *((void *)&v53 + 1) = a2;
  uint64_t v54 = v47;
  uint64_t v55 = v44;
  unsigned __int8 v56 = v43;
  uint64_t v41 = sub_1C0AD49A4((uint64_t)&v49);
  sub_1BFEF8738(v32, v33, v34, v35, v36, v37, v38, a2, v47, v44, v43);
  v48[22] = &type metadata for FormatInspection;
  v48[23] = &off_1F1C29D30;
  v48[19] = v41;
  unsigned __int8 v39 = sub_1C131B79C((uint64_t)v48);
  swift_setDeallocating();
  sub_1BFE4D1E4(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
  swift_arrayDestroy();
  return v39;
}

uint64_t sub_1C0AEC2C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0AEC310()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_1C0AEC354(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0x776F6C6C61736944;
  }
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return 0xD00000000000001FLL;
}

uint64_t sub_1C0AEC3F8()
{
  return sub_1C0AEC354(*v0, v0[1]);
}

ValueMetadata *type metadata accessor for FeedGroupFreezeError()
{
  return &type metadata for FeedGroupFreezeError;
}

uint64_t *sub_1C0AEC410(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for FormatBindingContent();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v48 = v8;
      uint64_t v49 = v7;
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      uint64_t v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      uint64_t v13 = *(int *)(v7 + 28);
      uint64_t v14 = (uint64_t *)((char *)a1 + v13);
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 8);
      *uint64_t v14 = *(uint64_t *)((char *)a2 + v13);
      v14[1] = v16;
      uint64_t v17 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v18 = v17[5];
      uint64_t v44 = &v15[v18];
      uint64_t v46 = (char *)v14 + v18;
      uint64_t v19 = sub_1C151631C();
      uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42(v46, v44, v19);
      uint64_t v20 = v17[6];
      int v21 = (void *)((char *)v14 + v20);
      uint64_t v22 = &v15[v20];
      uint64_t v47 = *((void *)v22 + 1);
      *int v21 = *(void *)v22;
      v21[1] = v47;
      uint64_t v23 = v17[7];
      uint64_t v24 = (void *)((char *)v14 + v23);
      char v25 = &v15[v23];
      uint64_t v26 = *((void *)v25 + 1);
      *uint64_t v24 = *(void *)v25;
      v24[1] = v26;
      uint64_t v27 = v17[8];
      uint64_t v28 = (void *)((char *)v14 + v27);
      uint64_t v29 = &v15[v27];
      uint64_t v30 = *((void *)v29 + 1);
      *uint64_t v28 = *(void *)v29;
      v28[1] = v30;
      uint64_t v31 = v17[9];
      uint64_t v32 = (void *)((char *)v14 + v31);
      uint64_t v33 = &v15[v31];
      uint64_t v34 = *((void *)v33 + 1);
      *uint64_t v32 = *(void *)v33;
      v32[1] = v34;
      uint64_t v35 = v17[10];
      __dst = (char *)v14 + v35;
      unsigned __int8 v43 = &v15[v35];
      uint64_t v36 = sub_1C151D6DC();
      uint64_t v37 = *(void *)(v36 - 8);
      uint64_t v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v45(v43, 1, v36))
      {
        sub_1BFEE3854(0);
        memcpy(__dst, v43, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v43, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
      }
      *(void *)((char *)v14 + v17[11]) = *(void *)&v15[v17[11]];
      *(void *)((char *)v14 + v17[12]) = *(void *)&v15[v17[12]];
      *(void *)((char *)v14 + v17[13]) = *(void *)&v15[v17[13]];
      *(void *)((char *)v14 + v17[14]) = *(void *)&v15[v17[14]];
      *(void *)((char *)v14 + v17[15]) = *(void *)&v15[v17[15]];
      *(void *)((char *)v14 + v17[16]) = *(void *)&v15[v17[16]];
      *(void *)((char *)v14 + v17[17]) = *(void *)&v15[v17[17]];
      unsigned __int8 v39 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v48 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39(a1, 0, 1, v49);
    }
  }
  return a1;
}

uint64_t sub_1C0AEC7EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatBindingContent();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + *(int *)(v2 + 28);
    swift_bridgeObjectRelease();
    uint64_t v5 = type metadata accessor for FormatContent(0);
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = sub_1C151631C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v4 + *(int *)(v5 + 40);
    uint64_t v9 = sub_1C151D6DC();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1C0AECA04(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatBindingContent();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v46 = v7;
    uint64_t v47 = v6;
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    uint64_t v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    uint64_t v11 = *(int *)(v6 + 28);
    uint64_t v48 = a1;
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = *(void *)((char *)a2 + v11 + 8);
    *uint64_t v12 = *(void *)((char *)a2 + v11);
    v12[1] = v14;
    uint64_t v15 = (int *)type metadata accessor for FormatContent(0);
    uint64_t v16 = v15[5];
    uint64_t v42 = &v13[v16];
    __dsta = (char *)v12 + v16;
    uint64_t v17 = sub_1C151631C();
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(__dsta, v42, v17);
    uint64_t v19 = v15[6];
    uint64_t v20 = (void *)((char *)v12 + v19);
    int v21 = &v13[v19];
    uint64_t v43 = *((void *)v21 + 1);
    *uint64_t v20 = *(void *)v21;
    v20[1] = v43;
    uint64_t v22 = v15[7];
    uint64_t v23 = (void *)((char *)v12 + v22);
    uint64_t v24 = &v13[v22];
    uint64_t v25 = *((void *)v24 + 1);
    *uint64_t v23 = *(void *)v24;
    v23[1] = v25;
    uint64_t v26 = v15[8];
    uint64_t v27 = (void *)((char *)v12 + v26);
    uint64_t v28 = &v13[v26];
    uint64_t v29 = *((void *)v28 + 1);
    *uint64_t v27 = *(void *)v28;
    v27[1] = v29;
    uint64_t v30 = v15[9];
    uint64_t v31 = (void *)((char *)v12 + v30);
    uint64_t v32 = &v13[v30];
    uint64_t v33 = *((void *)v32 + 1);
    *uint64_t v31 = *(void *)v32;
    v31[1] = v33;
    uint64_t v34 = v15[10];
    __dst = (char *)v12 + v34;
    uint64_t v35 = &v13[v34];
    uint64_t v36 = sub_1C151D6DC();
    uint64_t v37 = *(void *)(v36 - 8);
    uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v41(v35, 1, v36))
    {
      sub_1BFEE3854(0);
      memcpy(__dst, v35, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v35, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
    }
    *(void *)((char *)v12 + v15[11]) = *(void *)&v13[v15[11]];
    *(void *)((char *)v12 + v15[12]) = *(void *)&v13[v15[12]];
    *(void *)((char *)v12 + v15[13]) = *(void *)&v13[v15[13]];
    *(void *)((char *)v12 + v15[14]) = *(void *)&v13[v15[14]];
    *(void *)((char *)v12 + v15[15]) = *(void *)&v13[v15[15]];
    *(void *)((char *)v12 + v15[16]) = *(void *)&v13[v15[16]];
    *(void *)((char *)v12 + v15[17]) = *(void *)&v13[v15[17]];
    unsigned __int8 v39 = *(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1 = v48;
    v39(v48, 0, 1, v47);
  }
  return a1;
}

void *sub_1C0AECD9C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatBindingContent();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1C0AED540((uint64_t)a1);
      goto LABEL_7;
    }
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[4] = a2[4];
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v33 = *(int *)(v6 + 28);
    uint64_t v71 = a1;
    uint64_t v34 = (void *)((char *)a1 + v33);
    uint64_t v35 = (char *)a2 + v33;
    *uint64_t v34 = *(void *)((char *)a2 + v33);
    v34[1] = *(void *)((char *)a2 + v33 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v36 = (int *)type metadata accessor for FormatContent(0);
    uint64_t v37 = v36[5];
    uint64_t v38 = (char *)v34 + v37;
    unsigned __int8 v39 = &v35[v37];
    uint64_t v40 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 24))(v38, v39, v40);
    uint64_t v41 = v36[6];
    uint64_t v42 = (void *)((char *)v34 + v41);
    uint64_t v43 = &v35[v41];
    *uint64_t v42 = *(void *)v43;
    v42[1] = *((void *)v43 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v44 = v36[7];
    uint64_t v45 = (void *)((char *)v34 + v44);
    uint64_t v46 = &v35[v44];
    *uint64_t v45 = *(void *)v46;
    v45[1] = *((void *)v46 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v47 = v36[8];
    uint64_t v48 = (void *)((char *)v34 + v47);
    uint64_t v49 = &v35[v47];
    void *v48 = *(void *)v49;
    v48[1] = *((void *)v49 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v50 = v36[9];
    long long v51 = (void *)((char *)v34 + v50);
    uint64_t v52 = &v35[v50];
    *long long v51 = *(void *)v52;
    v51[1] = *((void *)v52 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v53 = v36[10];
    uint64_t v54 = (char *)v34 + v53;
    uint64_t v55 = &v35[v53];
    uint64_t v56 = sub_1C151D6DC();
    uint64_t v57 = *(void *)(v56 - 8);
    uint64_t v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
    int v59 = v58(v54, 1, v56);
    int v60 = v58(v55, 1, v56);
    if (v59)
    {
      if (!v60)
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
LABEL_16:
        *(void *)((char *)v34 + v36[11]) = *(void *)&v35[v36[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)((char *)v34 + v36[12]) = *(void *)&v35[v36[12]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)((char *)v34 + v36[13]) = *(void *)&v35[v36[13]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)((char *)v34 + v36[14]) = *(void *)&v35[v36[14]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)((char *)v34 + v36[15]) = *(void *)&v35[v36[15]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)((char *)v34 + v36[16]) = *(void *)&v35[v36[16]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)((char *)v34 + v36[17]) = *(void *)&v35[v36[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return v71;
      }
    }
    else
    {
      if (!v60)
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 24))(v54, v55, v56);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v57 + 8))(v54, v56);
    }
    sub_1BFEE3854(0);
    memcpy(v54, v55, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_16;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v70 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  uint64_t v11 = *(int *)(v6 + 28);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (char *)a2 + v11;
  *uint64_t v12 = *(void *)((char *)a2 + v11);
  v12[1] = *(void *)((char *)a2 + v11 + 8);
  uint64_t v14 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v15 = v14[5];
  uint64_t v67 = &v13[v15];
  __dsta = (char *)v12 + v15;
  uint64_t v16 = sub_1C151631C();
  uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v65(__dsta, v67, v16);
  uint64_t v17 = v14[6];
  uint64_t v18 = (void *)((char *)v12 + v17);
  uint64_t v19 = &v13[v17];
  *uint64_t v18 = *(void *)v19;
  v18[1] = *((void *)v19 + 1);
  uint64_t v20 = v14[7];
  int v21 = (void *)((char *)v12 + v20);
  uint64_t v22 = &v13[v20];
  *int v21 = *(void *)v22;
  v21[1] = *((void *)v22 + 1);
  uint64_t v23 = v14[8];
  uint64_t v24 = (void *)((char *)v12 + v23);
  uint64_t v25 = &v13[v23];
  *uint64_t v24 = *(void *)v25;
  v24[1] = *((void *)v25 + 1);
  uint64_t v26 = v14[9];
  uint64_t v27 = (void *)((char *)v12 + v26);
  uint64_t v28 = &v13[v26];
  *uint64_t v27 = *(void *)v28;
  v27[1] = *((void *)v28 + 1);
  uint64_t v29 = v14[10];
  __dst = (char *)v12 + v29;
  char v64 = &v13[v29];
  uint64_t v30 = sub_1C151D6DC();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v66(v64, 1, v30))
  {
    sub_1BFEE3854(0);
    memcpy(__dst, v64, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v64, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
  }
  *(void *)((char *)v12 + v14[11]) = *(void *)&v13[v14[11]];
  *(void *)((char *)v12 + v14[12]) = *(void *)&v13[v14[12]];
  *(void *)((char *)v12 + v14[13]) = *(void *)&v13[v14[13]];
  *(void *)((char *)v12 + v14[14]) = *(void *)&v13[v14[14]];
  *(void *)((char *)v12 + v14[15]) = *(void *)&v13[v14[15]];
  *(void *)((char *)v12 + v14[16]) = *(void *)&v13[v14[16]];
  *(void *)((char *)v12 + v14[17]) = *(void *)&v13[v14[17]];
  long long v61 = *(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a1 = v70;
  v61(v70, 0, 1, v6);
  return a1;
}

uint64_t sub_1C0AED540(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatBindingContent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1C0AED59C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatBindingContent();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    long long v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    uint64_t v9 = *(int *)(v6 + 28);
    int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *(_OWORD *)((char *)a1 + v9) = *(_OWORD *)((char *)a2 + v9);
    uint64_t v12 = (int *)type metadata accessor for FormatContent(0);
    uint64_t v13 = v12[5];
    uint64_t v14 = &v10[v13];
    uint64_t v15 = &v11[v13];
    uint64_t v16 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    *(_OWORD *)&v10[v12[6]] = *(_OWORD *)&v11[v12[6]];
    *(_OWORD *)&v10[v12[7]] = *(_OWORD *)&v11[v12[7]];
    *(_OWORD *)&v10[v12[8]] = *(_OWORD *)&v11[v12[8]];
    *(_OWORD *)&v10[v12[9]] = *(_OWORD *)&v11[v12[9]];
    uint64_t v17 = v12[10];
    uint64_t v18 = &v10[v17];
    uint64_t v19 = &v11[v17];
    uint64_t v20 = sub_1C151D6DC();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      sub_1BFEE3854(0);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    *(void *)&v10[v12[11]] = *(void *)&v11[v12[11]];
    *(void *)&v10[v12[12]] = *(void *)&v11[v12[12]];
    *(void *)&v10[v12[13]] = *(void *)&v11[v12[13]];
    *(void *)&v10[v12[14]] = *(void *)&v11[v12[14]];
    *(void *)&v10[v12[15]] = *(void *)&v11[v12[15]];
    *(void *)&v10[v12[16]] = *(void *)&v11[v12[16]];
    *(void *)&v10[v12[17]] = *(void *)&v11[v12[17]];
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1C0AED86C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatBindingContent();
  uint64_t v7 = *(void *)(v6 - 8);
  long long v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1C0AED540((uint64_t)a1);
      goto LABEL_7;
    }
    uint64_t v26 = a2[1];
    *a1 = *a2;
    a1[1] = v26;
    swift_bridgeObjectRelease();
    uint64_t v27 = a2[3];
    a1[2] = a2[2];
    a1[3] = v27;
    swift_bridgeObjectRelease();
    uint64_t v28 = a2[5];
    a1[4] = a2[4];
    a1[5] = v28;
    swift_bridgeObjectRelease();
    uint64_t v29 = *(int *)(v6 + 28);
    uint64_t v30 = (void *)((char *)a1 + v29);
    uint64_t v31 = (char *)a2 + v29;
    uint64_t v32 = *(void *)((char *)a2 + v29 + 8);
    *uint64_t v30 = *(void *)((char *)a2 + v29);
    v30[1] = v32;
    swift_bridgeObjectRelease();
    uint64_t v33 = (int *)type metadata accessor for FormatContent(0);
    uint64_t v34 = v33[5];
    uint64_t v35 = (char *)v30 + v34;
    uint64_t v36 = &v31[v34];
    uint64_t v37 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
    uint64_t v38 = v33[6];
    unsigned __int8 v39 = (void *)((char *)v30 + v38);
    uint64_t v40 = &v31[v38];
    uint64_t v42 = *(void *)v40;
    uint64_t v41 = *((void *)v40 + 1);
    *unsigned __int8 v39 = v42;
    v39[1] = v41;
    swift_bridgeObjectRelease();
    uint64_t v43 = v33[7];
    uint64_t v44 = (void *)((char *)v30 + v43);
    uint64_t v45 = &v31[v43];
    uint64_t v47 = *(void *)v45;
    uint64_t v46 = *((void *)v45 + 1);
    *uint64_t v44 = v47;
    v44[1] = v46;
    swift_bridgeObjectRelease();
    uint64_t v48 = v33[8];
    uint64_t v49 = (void *)((char *)v30 + v48);
    uint64_t v50 = &v31[v48];
    uint64_t v52 = *(void *)v50;
    uint64_t v51 = *((void *)v50 + 1);
    *uint64_t v49 = v52;
    v49[1] = v51;
    swift_bridgeObjectRelease();
    uint64_t v53 = v33[9];
    uint64_t v54 = (void *)((char *)v30 + v53);
    uint64_t v55 = &v31[v53];
    uint64_t v57 = *(void *)v55;
    uint64_t v56 = *((void *)v55 + 1);
    *uint64_t v54 = v57;
    v54[1] = v56;
    swift_bridgeObjectRelease();
    uint64_t v58 = v33[10];
    int v59 = (char *)v30 + v58;
    int v60 = &v31[v58];
    uint64_t v61 = sub_1C151D6DC();
    uint64_t v62 = *(void *)(v61 - 8);
    long long v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
    uint64_t v70 = v59;
    LODWORD(v59) = v63(v59, 1, v61);
    int v64 = v63(v60, 1, v61);
    if (v59)
    {
      if (!v64)
      {
        (*(void (**)(void *, char *, uint64_t))(v62 + 32))(v70, v60, v61);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(v70, 0, 1, v61);
        goto LABEL_18;
      }
      sub_1BFEE3854(0);
      size_t v66 = *(void *)(*(void *)(v65 - 8) + 64);
      uint64_t v67 = v70;
    }
    else
    {
      if (!v64)
      {
        (*(void (**)(void *, char *, uint64_t))(v62 + 40))(v70, v60, v61);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v62 + 8))(v70, v61);
      sub_1BFEE3854(0);
      size_t v66 = *(void *)(*(void *)(v68 - 8) + 64);
      uint64_t v67 = v70;
    }
    memcpy(v67, v60, v66);
LABEL_18:
    *(void *)((char *)v30 + v33[11]) = *(void *)&v31[v33[11]];
    swift_bridgeObjectRelease();
    *(void *)((char *)v30 + v33[12]) = *(void *)&v31[v33[12]];
    swift_bridgeObjectRelease();
    *(void *)((char *)v30 + v33[13]) = *(void *)&v31[v33[13]];
    swift_bridgeObjectRelease();
    *(void *)((char *)v30 + v33[14]) = *(void *)&v31[v33[14]];
    swift_bridgeObjectRelease();
    *(void *)((char *)v30 + v33[15]) = *(void *)&v31[v33[15]];
    swift_bridgeObjectRelease();
    *(void *)((char *)v30 + v33[16]) = *(void *)&v31[v33[16]];
    swift_bridgeObjectRelease();
    *(void *)((char *)v30 + v33[17]) = *(void *)&v31[v33[17]];
    swift_bridgeObjectRelease();
    return a1;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  long long v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v12 = *(int *)(v6 + 28);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for FormatContent(0);
  uint64_t v16 = v15[5];
  uint64_t v17 = &v13[v16];
  uint64_t v18 = &v14[v16];
  uint64_t v19 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  *(_OWORD *)&v13[v15[6]] = *(_OWORD *)&v14[v15[6]];
  *(_OWORD *)&v13[v15[7]] = *(_OWORD *)&v14[v15[7]];
  *(_OWORD *)&v13[v15[8]] = *(_OWORD *)&v14[v15[8]];
  *(_OWORD *)&v13[v15[9]] = *(_OWORD *)&v14[v15[9]];
  uint64_t v20 = v15[10];
  uint64_t v21 = &v13[v20];
  uint64_t v22 = &v14[v20];
  uint64_t v23 = sub_1C151D6DC();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1BFEE3854(0);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *(void *)&v13[v15[11]] = *(void *)&v14[v15[11]];
  *(void *)&v13[v15[12]] = *(void *)&v14[v15[12]];
  *(void *)&v13[v15[13]] = *(void *)&v14[v15[13]];
  *(void *)&v13[v15[14]] = *(void *)&v14[v15[14]];
  *(void *)&v13[v15[15]] = *(void *)&v14[v15[15]];
  *(void *)&v13[v15[16]] = *(void *)&v14[v15[16]];
  *(void *)&v13[v15[17]] = *(void *)&v14[v15[17]];
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1C0AEDE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0AEDE80);
}

uint64_t sub_1C0AEDE80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatBindingContent();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C0AEDEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0AEDF00);
}

uint64_t sub_1C0AEDF00(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for FormatBindingContent();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1C0AEDF80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatBindingContent();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_1C0AEDFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatBindingContent();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for DebugFormatBindingItem()
{
  uint64_t result = qword_1EA1A36A0;
  if (!qword_1EA1A36A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0AEE0A4()
{
  uint64_t result = type metadata accessor for FormatBindingContent();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t FeedSponsorshipBannerAd.init(identifier:sponsoredBanner:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (char *)a4 + *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
  uint64_t v6 = sub_1C151D6DC();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  return v7(v5, a3, v6);
}

uint64_t FeedSponsorshipBannerAd.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedSponsorshipBannerAd.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FeedSponsorshipBannerAd.identifier.modify())(void)
{
  return nullsub_1;
}

uint64_t FeedSponsorshipBannerAd.sponsoredBanner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
  uint64_t v4 = sub_1C151D6DC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FeedSponsorshipBannerAd.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C0AEE2EC(v1, a1);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C0AEE2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedSponsorshipBannerAd();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0AEE350@<X0>(uint64_t a1@<X8>)
{
  sub_1C0AEE2EC(v1, a1);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t static FeedSponsorshipBannerAd.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t sub_1C0AEE3D0()
{
  uint64_t v1 = sub_1C151D6DC();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FeedSponsorshipBannerAd();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + *(int *)(v5 + 20), v1);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  if (v6 == *MEMORY[0x1E4F7ACE0])
  {
    uint64_t v7 = sub_1BFEF9B68(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v9 = v7[2];
    unint64_t v8 = v7[3];
    if (v9 >= v8 >> 1) {
      uint64_t v7 = sub_1BFEF9B68((void *)(v8 > 1), v9 + 1, 1, v7);
    }
    v7[2] = v9 + 1;
    int v10 = &v7[2 * v9];
    v10[4] = 0xD00000000000001DLL;
    long long v11 = v10 + 4;
    uint64_t v12 = "sponsored-banner-ad-fulfilled";
LABEL_9:
    v11[1] = (unint64_t)(v12 - 32) | 0x8000000000000000;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return (uint64_t)v7;
  }
  if (v6 == *MEMORY[0x1E4F7ACD8])
  {
    uint64_t v7 = sub_1BFEF9B68(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v14 = v7[2];
    unint64_t v13 = v7[3];
    if (v14 >= v13 >> 1) {
      uint64_t v7 = sub_1BFEF9B68((void *)(v13 > 1), v14 + 1, 1, v7);
    }
    v7[2] = v14 + 1;
    uint64_t v15 = &v7[2 * v14];
    v15[4] = 0xD00000000000001CLL;
    long long v11 = v15 + 4;
    uint64_t v12 = "sponsored-banner-ad-unfilled";
    goto LABEL_9;
  }
  uint64_t result = sub_1C1520A8C();
  __break(1u);
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedSponsorshipBannerAd(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C151D6DC();
    int v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for FeedSponsorshipBannerAd(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C151D6DC();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for FeedSponsorshipBannerAd(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C151D6DC();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for FeedSponsorshipBannerAd(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151D6DC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for FeedSponsorshipBannerAd(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C151D6DC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for FeedSponsorshipBannerAd(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151D6DC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedSponsorshipBannerAd(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0AEE9AC);
}

uint64_t sub_1C0AEE9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C151D6DC();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FeedSponsorshipBannerAd(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0AEEA70);
}

uint64_t sub_1C0AEEA70(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C151D6DC();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void *sub_1C0AEEB18(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1C0AEEB80(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0AEEBCC()
{
  return swift_initClassMetadata2();
}

void sub_1C0AEEC28()
{
}

uint64_t sub_1C0AEEC80(uint64_t a1)
{
  id v3 = v1;
  return a1;
}

void sub_1C0AEEC98(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1C0AEEFC0((uint64_t)v5);
}

void sub_1C0AEECF8()
{
}

uint64_t sub_1C0AEED3C(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(a1 + qword_1EA1A36C8);
  return sub_1BFC3E5C0(v2);
}

uint64_t type metadata accessor for DebugFormatEditorBarButtonItem()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for DebugFormatEditorBarButtonItem.Property()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_1C0AEEDE8@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 1) == 0;
  return result;
}

void sub_1C0AEEDFC(unsigned char *a1)
{
  if (*a1 == 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    id v2 = objc_msgSend(self, sel_systemImageNamed_, v1);

    if (v2) {
      return;
    }
    __break(1u);
  }
  swift_bridgeObjectRetain();
  id v3 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(self, sel_systemImageNamed_, v3);

  if (!v4) {
    __break(1u);
  }
}

void sub_1C0AEEEEC(char *a1, char *a2)
{
  char v4 = *a2;
  id v3 = (id)(*(uint64_t (**)(char *))&a1[qword_1EA1A36B8])(&v4);
  objc_msgSend(a1, sel_setImage_, v3);
}

void sub_1C0AEEF64()
{
}

uint64_t sub_1C0AEEFC0(uint64_t a1)
{
  uint64_t v2 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x50);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  id v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v14 - v7;
  if ((*(void *)((char *)v1 + qword_1EA1A36B0) & 0x8000000000000000) != 0)
  {
    uint64_t v12 = *(void (**)(char *))((char *)v1 + qword_1EA1A36C0);
    swift_retain();
    sub_1C151709C();
    v12(v5);
    uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
    v10(v5, v2);
    sub_1C15170AC();
    uint64_t v11 = *(void (**)(char *))((char *)v1 + qword_1EA1A36C8);
    if (v11)
    {
      sub_1C151709C();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v9 = *(void (**)(char *))((char *)v1 + qword_1EA1A36C0);
    swift_retain();
    sub_1C151894C();
    v9(v5);
    uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
    v10(v5, v2);
    sub_1C151895C();
    uint64_t v11 = *(void (**)(char *))((char *)v1 + qword_1EA1A36C8);
    if (v11)
    {
      sub_1C151894C();
LABEL_6:
      v11(v8);
      swift_release();
      return ((uint64_t (*)(char *, uint64_t))v10)(v8, v2);
    }
  }
  return swift_release();
}

void sub_1C0AEF204()
{
}

void sub_1C0AEF234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  sub_1C0AEF4CC();
  uint64_t v12 = v11;
  unint64_t v13 = (char *)objc_allocWithZone(v11);
  *(void *)&v13[qword_1EA1A36B0] = a1 | 0x8000000000000000;
  uint64_t v14 = &v13[qword_1EA1A36B8];
  *(void *)uint64_t v14 = sub_1C0AEF4AC;
  *((void *)v14 + 1) = v10;
  uint64_t v15 = &v13[qword_1EA1A36C0];
  *(void *)uint64_t v15 = sub_1C0AEEDE8;
  *((void *)v15 + 1) = 0;
  uint64_t v16 = &v13[qword_1EA1A36C8];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  v22.receiver = v13;
  v22.super_class = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v17 = objc_msgSendSuper2(&v22, sel_init);
  sub_1C151709C();
  if (v21 == 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(self, sel_systemImageNamed_, v18);

    if (v19)
    {
LABEL_5:
      objc_msgSend(v17, sel_setImage_, v19);

      objc_msgSend(v17, sel_setTarget_, v17);
      objc_msgSend(v17, sel_setAction_, sel_onActionWithSender_);
      sub_1C15170CC();

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(self, sel_systemImageNamed_, v20);

  if (v19) {
    goto LABEL_5;
  }
  __break(1u);
}

void sub_1C0AEF4AC(unsigned char *a1)
{
}

void sub_1C0AEF4CC()
{
  if (!qword_1EA1A37D0)
  {
    unint64_t v0 = type metadata accessor for DebugFormatEditorBarButtonItem();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A37D0);
    }
  }
}

void sub_1C0AEF52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  sub_1C0AEF4CC();
  uint64_t v12 = v11;
  unint64_t v13 = (char *)objc_allocWithZone(v11);
  *(void *)&v13[qword_1EA1A36B0] = a1;
  uint64_t v14 = &v13[qword_1EA1A36B8];
  *(void *)uint64_t v14 = sub_1C0AEF7A0;
  *((void *)v14 + 1) = v10;
  uint64_t v15 = &v13[qword_1EA1A36C0];
  *(void *)uint64_t v15 = sub_1C0AEF7A4;
  *((void *)v15 + 1) = 0;
  uint64_t v16 = &v13[qword_1EA1A36C8];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  v22.receiver = v13;
  v22.super_class = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v17 = objc_msgSendSuper2(&v22, sel_init);
  sub_1C151894C();
  if (v21 == 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(self, sel_systemImageNamed_, v18);

    if (v19)
    {
LABEL_5:
      objc_msgSend(v17, sel_setImage_, v19);

      objc_msgSend(v17, sel_setTarget_, v17);
      objc_msgSend(v17, sel_setAction_, sel_onActionWithSender_);
      sub_1C151897C();

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(self, sel_systemImageNamed_, v20);

  if (v19) {
    goto LABEL_5;
  }
  __break(1u);
}

void sub_1C0AEF7B8()
{
  if (!qword_1EB870DE8)
  {
    type metadata accessor for InternalErrorViewLayout.Context();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB870DE8);
    }
  }
}

uint64_t FeedItemSupplementaryAttributes.shouldIntegral.getter()
{
  uint64_t v1 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEA2E2C(v0, (uint64_t)v3);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  id v5 = type metadata accessor for FeedItemSupplementaryAttributes;
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload != 2) {
      id v5 = type metadata accessor for InternalErrorViewLayout.Context;
    }
    sub_1C0AEF8E8((uint64_t)v3, (uint64_t (*)(void))v5);
  }
  return 0;
}

uint64_t sub_1C0AEF8E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0AEF948(uint64_t a1)
{
  uint64_t v2 = sub_1BFE4D400(&qword_1EB873250);
  return MEMORY[0x1F4162968](a1, v2);
}

uint64_t FeedItemSupplementaryAttributes.formatImageRequests(options:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (_OWORD *)((char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFEA2E2C(v2, (uint64_t)v6);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = 0;
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload == 2)
    {
      long long v9 = v6[1];
      v14[0] = *v6;
      v14[1] = v9;
      long long v10 = v6[3];
      v14[2] = v6[2];
      v14[3] = v10;
      long long v11 = v6[7];
      v14[6] = v6[6];
      v14[7] = v11;
      long long v12 = v6[5];
      void v14[4] = v6[4];
      v14[5] = v12;
      uint64_t v8 = sub_1BFFCDAA8(a1, *((uint64_t *)&v14[0] + 1));
      swift_release();
      sub_1C0955B08((uint64_t)v14);
    }
    else
    {
      sub_1C0AEF8E8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
      return 0;
    }
  }
  return v8;
}

uint64_t sub_1C0AEFAC4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFD3E374(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0AEFB44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFD3E374(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C0AEFBB4()
{
  if (!qword_1EB893360)
  {
    MEMORY[0x1F4188790](0);
    sub_1BFD3E374(255, (unint64_t *)&qword_1EB871010, (uint64_t (*)(uint64_t))sub_1C0073850, MEMORY[0x1E4FBB320]);
    type metadata accessor for GroupLayoutBindingContext();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EB893360);
    }
  }
}

void *assignWithCopy for FeedItemSupplementaryAttributes(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0AEF8E8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      long long v9 = (void *)a2[3];
      a1[3] = v9;
      long long v10 = (void *)a2[4];
      a1[4] = v10;
      long long v11 = (void *)a2[5];
      a1[5] = v11;
      long long v12 = (void *)a2[6];
      a1[6] = v12;
      uint64_t v56 = (void *)a2[7];
      a1[7] = v56;
      uint64_t v57 = (void *)a2[8];
      a1[8] = v57;
      uint64_t v13 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      uint64_t v58 = (void *)((char *)a1 + v13);
      uint64_t v14 = (char *)a2 + v13;
      type metadata accessor for InternalErrorViewModel();
      swift_bridgeObjectRetain();
      swift_retain();
      id v15 = v9;
      id v16 = v10;
      id v17 = v11;
      id v18 = v12;
      id v19 = v56;
      id v20 = v57;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v58 = *(void *)v14;
        v58[1] = *((void *)v14 + 1);
        unint64_t v21 = *((void *)v14 + 2);
        swift_bridgeObjectRetain();
        if (v21 >= 0xB)
        {
          v58[2] = v21;
          v58[3] = *((void *)v14 + 3);
          v58[4] = *((void *)v14 + 4);
          v58[5] = *((void *)v14 + 5);
          v58[6] = *((void *)v14 + 6);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v22 = *((_OWORD *)v14 + 1);
          long long v23 = *((_OWORD *)v14 + 2);
          v58[6] = *((void *)v14 + 6);
          *((_OWORD *)v58 + 1) = v22;
          *((_OWORD *)v58 + 2) = v23;
        }
        v58[7] = *((void *)v14 + 7);
        v58[8] = *((void *)v14 + 8);
        v58[9] = *((void *)v14 + 9);
        sub_1C0AEFBB4();
        uint64_t v27 = *(int *)(v26 + 80);
        uint64_t v28 = (char *)v58 + v27;
        uint64_t v29 = &v14[v27];
        *uint64_t v28 = v14[v27];
        uint64_t v30 = (uint64_t)v58 + v27 + 8;
        uint64_t v31 = *((void *)v29 + 4);
        *((void *)v28 + 4) = v31;
        *((void *)v28 + 5) = *((void *)v29 + 5);
        uint64_t v32 = **(void (***)(uint64_t, char *, uint64_t))(v31 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v32(v30, v29 + 8, v31);
        *((void *)v28 + 6) = *((void *)v29 + 6);
        *((void *)v28 + 7) = *((void *)v29 + 7);
        *((void *)v28 + 8) = *((void *)v29 + 8);
        *((void *)v28 + 9) = *((void *)v29 + 9);
        *((void *)v28 + 10) = *((void *)v29 + 10);
        v28[88] = v29[88];
        *((void *)v28 + 12) = *((void *)v29 + 12);
        uint64_t v33 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v34 = v33[13];
        uint64_t v54 = &v29[v34];
        uint64_t v55 = &v28[v34];
        uint64_t v35 = sub_1C151787C();
        uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v36(v55, v54, v35);
        *(void *)&v28[v33[14]] = *(void *)&v29[v33[14]];
        *(void *)&v28[v33[15]] = *(void *)&v29[v33[15]];
        v28[v33[16]] = v29[v33[16]];
        *(void *)&v28[v33[17]] = *(void *)&v29[v33[17]];
        *(void *)&v28[v33[18]] = *(void *)&v29[v33[18]];
        *(void *)&v28[v33[19]] = *(void *)&v29[v33[19]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v24 = *(void *)v14;
        id v25 = *(id *)v14;
        *uint64_t v58 = v24;
        v58[1] = *((void *)v14 + 1);
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1C0AEF7B8();
      uint64_t v38 = *(int *)(v37 + 48);
      unsigned __int8 v39 = (_OWORD *)((char *)a1 + v38);
      uint64_t v40 = (long long *)((char *)a2 + v38);
      long long v41 = v40[12];
      long long v42 = v40[13];
      long long v43 = v40[15];
      v39[14] = v40[14];
      v39[15] = v43;
      v39[12] = v41;
      v39[13] = v42;
      long long v44 = v40[8];
      long long v45 = v40[9];
      long long v46 = v40[11];
      v39[10] = v40[10];
      v39[11] = v46;
      v39[8] = v44;
      v39[9] = v45;
      long long v47 = v40[4];
      long long v48 = v40[5];
      long long v49 = v40[7];
      v39[6] = v40[6];
      v39[7] = v49;
      v39[4] = v47;
      v39[5] = v48;
      long long v50 = *v40;
      long long v51 = v40[1];
      long long v52 = v40[3];
      v39[2] = v40[2];
      v39[3] = v52;
      *unsigned __int8 v39 = v50;
      v39[1] = v51;
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      long long v7 = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 4) = v7;
      long long v8 = *((_OWORD *)a2 + 6);
      *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 6) = v8;
      a1[14] = a2[14];
      a1[15] = a2[15];
      a1[16] = a2[16];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *initializeWithTake for FeedItemSupplementaryAttributes(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    long long v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    *((void *)a1 + 8) = *((void *)a2 + 8);
    uint64_t v8 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
    long long v9 = (char *)a1 + v8;
    long long v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for InternalErrorViewModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v12 = *((_OWORD *)v10 + 1);
      *(_OWORD *)long long v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v12;
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      uint64_t v13 = *((void *)v10 + 7);
      *((void *)v9 + 6) = *((void *)v10 + 6);
      *((void *)v9 + 7) = v13;
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      sub_1C0AEFBB4();
      uint64_t v15 = *(int *)(v14 + 80);
      id v16 = &v9[v15];
      id v17 = &v10[v15];
      *id v16 = v10[v15];
      *((void *)v16 + 5) = *(void *)&v10[v15 + 40];
      *(_OWORD *)(v16 + 24) = *(_OWORD *)&v10[v15 + 24];
      *(_OWORD *)(v16 + 8) = *(_OWORD *)&v10[v15 + 8];
      long long v18 = *(_OWORD *)&v10[v15 + 64];
      *((_OWORD *)v16 + 3) = *(_OWORD *)&v10[v15 + 48];
      *((_OWORD *)v16 + 4) = v18;
      *((void *)v16 + 10) = *(void *)&v10[v15 + 80];
      v16[88] = v10[v15 + 88];
      *((void *)v16 + 12) = *(void *)&v10[v15 + 96];
      id v19 = (int *)type metadata accessor for GroupLayoutBindingContext();
      uint64_t v20 = v19[13];
      unint64_t v21 = &v16[v20];
      long long v22 = &v17[v20];
      uint64_t v23 = sub_1C151787C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      *(void *)&v16[v19[14]] = *(void *)&v17[v19[14]];
      *(void *)&v16[v19[15]] = *(void *)&v17[v19[15]];
      v16[v19[16]] = v17[v19[16]];
      *(void *)&v16[v19[17]] = *(void *)&v17[v19[17]];
      *(void *)&v16[v19[18]] = *(void *)&v17[v19[18]];
      *(void *)&v16[v19[19]] = *(void *)&v17[v19[19]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    sub_1C0AEF7B8();
    uint64_t v25 = *(int *)(v24 + 48);
    uint64_t v26 = (_OWORD *)((char *)a1 + v25);
    uint64_t v27 = (_OWORD *)((char *)a2 + v25);
    long long v28 = v27[13];
    v26[12] = v27[12];
    v26[13] = v28;
    long long v29 = v27[15];
    v26[14] = v27[14];
    v26[15] = v29;
    long long v30 = v27[9];
    v26[8] = v27[8];
    v26[9] = v30;
    long long v31 = v27[11];
    v26[10] = v27[10];
    v26[11] = v31;
    long long v32 = v27[5];
    v26[4] = v27[4];
    v26[5] = v32;
    long long v33 = v27[7];
    v26[6] = v27[6];
    v26[7] = v33;
    long long v34 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v34;
    long long v35 = v27[3];
    v26[2] = v27[2];
    v26[3] = v35;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for FeedItemSupplementaryAttributes(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0AEF8E8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      long long v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      *((void *)a1 + 8) = *((void *)a2 + 8);
      uint64_t v8 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      long long v9 = (char *)a1 + v8;
      long long v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for InternalErrorViewModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        long long v12 = *((_OWORD *)v10 + 1);
        *(_OWORD *)long long v9 = *(_OWORD *)v10;
        *((_OWORD *)v9 + 1) = v12;
        *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
        uint64_t v13 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v13;
        *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
        sub_1C0AEFBB4();
        uint64_t v15 = *(int *)(v14 + 80);
        id v16 = &v9[v15];
        id v17 = &v10[v15];
        *id v16 = v10[v15];
        *((void *)v16 + 5) = *(void *)&v10[v15 + 40];
        *(_OWORD *)(v16 + 24) = *(_OWORD *)&v10[v15 + 24];
        *(_OWORD *)(v16 + 8) = *(_OWORD *)&v10[v15 + 8];
        long long v18 = *(_OWORD *)&v10[v15 + 64];
        *((_OWORD *)v16 + 3) = *(_OWORD *)&v10[v15 + 48];
        *((_OWORD *)v16 + 4) = v18;
        *((void *)v16 + 10) = *(void *)&v10[v15 + 80];
        v16[88] = v10[v15 + 88];
        *((void *)v16 + 12) = *(void *)&v10[v15 + 96];
        id v19 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v20 = v19[13];
        unint64_t v21 = &v16[v20];
        long long v22 = &v17[v20];
        uint64_t v23 = sub_1C151787C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
        *(void *)&v16[v19[14]] = *(void *)&v17[v19[14]];
        *(void *)&v16[v19[15]] = *(void *)&v17[v19[15]];
        v16[v19[16]] = v17[v19[16]];
        *(void *)&v16[v19[17]] = *(void *)&v17[v19[17]];
        *(void *)&v16[v19[18]] = *(void *)&v17[v19[18]];
        *(void *)&v16[v19[19]] = *(void *)&v17[v19[19]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      }
      sub_1C0AEF7B8();
      uint64_t v25 = *(int *)(v24 + 48);
      uint64_t v26 = (_OWORD *)((char *)a1 + v25);
      uint64_t v27 = (_OWORD *)((char *)a2 + v25);
      long long v28 = v27[13];
      v26[12] = v27[12];
      v26[13] = v28;
      long long v29 = v27[15];
      v26[14] = v27[14];
      v26[15] = v29;
      long long v30 = v27[9];
      v26[8] = v27[8];
      v26[9] = v30;
      long long v31 = v27[11];
      v26[10] = v27[10];
      v26[11] = v31;
      long long v32 = v27[5];
      v26[4] = v27[4];
      v26[5] = v32;
      long long v33 = v27[7];
      v26[6] = v27[6];
      v26[7] = v33;
      long long v34 = v27[1];
      *uint64_t v26 = *v27;
      v26[1] = v34;
      long long v35 = v27[3];
      v26[2] = v27[2];
      v26[3] = v35;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

char *sub_1C0AF070C(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = sub_1C151635C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_micaView;
  id v15 = objc_allocWithZone((Class)sub_1C151CAFC());
  id v16 = v4;
  *(void *)&v4[v14] = objc_msgSend(v15, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v17 = (uint64_t *)&v16[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_token];
  sub_1C151634C();
  uint64_t v18 = sub_1C151633C();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *id v17 = v18;
  v17[1] = v20;
  unint64_t v21 = &v16[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_model];
  uint64_t v22 = type metadata accessor for FormatMicaSectionDecorationItem();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);

  v25.receiver = v16;
  v25.super_class = ObjectType;
  uint64_t v23 = (char *)objc_msgSendSuper2(&v25, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v23, sel_addSubview_, *(void *)&v23[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_micaView]);
  return v23;
}

uint64_t sub_1C0AF0AC4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = type metadata accessor for FormatMicaSectionDecorationItem();
  uint64_t v32 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v31 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0069B58(0, &qword_1EB87BC80, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaSectionDecorationItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  long long v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = sub_1C151635C();
  uint64_t v14 = *(void *)(v13 - 8);
  *(void *)&double v15 = MEMORY[0x1F4188790](v13).n128_u64[0];
  id v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34.receiver = v2;
  v34.super_class = ObjectType;
  objc_msgSendSuper2(&v34, sel_applyLayoutAttributes_, a1, v15);
  sub_1C151634C();
  uint64_t v18 = sub_1C151633C();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  uint64_t v21 = v32;
  uint64_t v22 = (uint64_t *)&v2[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_token];
  *uint64_t v22 = v18;
  v22[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  v23(v12, 1, 1, v5);
  uint64_t v24 = (uint64_t)&v2[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_model];
  swift_beginAccess();
  sub_1C0AF2448((uint64_t)v12, v24);
  swift_endAccess();
  sub_1C151F96C();
  sub_1C1519E6C();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    id v26 = a1;
    sub_1C1519E3C();
    if (v33[3])
    {
      sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A37F0);
      int v27 = swift_dynamicCast();
      v23(v9, v27 ^ 1u, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v9, 1, v5) != 1)
      {
        long long v28 = v31;
        sub_1C0AF1E94((uint64_t)v9, (uint64_t)v31);
        sub_1C0AF2564((uint64_t)v28, (uint64_t)v12);
        v23(v12, 0, 1, v5);
        swift_beginAccess();
        sub_1C0AF2448((uint64_t)v12, v24);
        swift_endAccess();
        sub_1C151CACC();
        v33[0] = *v28;
        uint64_t v29 = (uint64_t)v28 + *(int *)(v5 + 20);
        swift_retain();
        sub_1C0AF0EF0(v33, v29);
        swift_release();

        return sub_1C0AF1EF8((uint64_t)v28);
      }
    }
    else
    {
      sub_1C0AF24DC((uint64_t)v33);
      v23(v9, 1, 1, v5);
    }

    return sub_1C0AF1E08((uint64_t)v9);
  }
  return result;
}

void sub_1C0AF0EF0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1C0069B58(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080], MEMORY[0x1E4FBB718]);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  long long v9 = (char *)&v33 - v8;
  uint64_t v10 = sub_1C151E17C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  if (*a1 < 0)
  {
    uint64_t v28 = v14 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v29 = *(void *)(v28 + 16);
    uint64_t v30 = *(void *)(v28 + 24);
    swift_retain();
    swift_retain();
    id v31 = objc_msgSend(v3, sel_traitCollection);
    id v32 = objc_msgSend(v31, sel_userInterfaceStyle);

    if (v32 == (id)2) {
      aBlock[0] = v30;
    }
    else {
      aBlock[0] = v29;
    }
    sub_1C0AF0EF0(aBlock, a2);
    swift_release();
    swift_release();
  }
  else
  {
    double v15 = *(void **)(v14 + 16);
    uint64_t v36 = *(void *)&v3[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_token];
    uint64_t v34 = a2;
    uint64_t v16 = *(void *)&v3[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_token + 8];
    id v17 = v15;
    uint64_t v35 = v7;
    id v18 = v17;
    swift_bridgeObjectRetain();
    id v19 = objc_msgSend(v3, sel_traitCollection);
    id v20 = objc_msgSend(v19, sel_userInterfaceStyle);

    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCB28], v10);
    uint64_t v21 = (void *)sub_1C151F5BC();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1C0AF1F8C(v34, (uint64_t)v9, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080]);
    unint64_t v23 = (*(unsigned __int8 *)(v35 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = v18;
    v24[3] = v22;
    v24[4] = v36;
    v24[5] = v16;
    v24[6] = v20;
    sub_1C0AF2170((uint64_t)v9, (uint64_t)v24 + v23);
    aBlock[4] = sub_1C0AF2204;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BFC9FC68;
    aBlock[3] = &block_descriptor_41;
    objc_super v25 = _Block_copy(aBlock);
    id v26 = v18;
    swift_release();
    id v27 = objc_msgSend(v26, sel_downloadIfNeededWithCompletionQueue_completion_, v21, v25);
    _Block_release(v25);

    swift_unknownObjectRelease();
  }
}

uint64_t sub_1C0AF1388(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1C0069B58(0, &qword_1EB87BC80, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaSectionDecorationItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - v5;
  uint64_t v7 = type metadata accessor for FormatMicaSectionDecorationItem();
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)&double v9 = MEMORY[0x1F4188790](v7).n128_u64[0];
  uint64_t v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16.receiver = v1;
  v16.super_class = ObjectType;
  objc_msgSendSuper2(&v16, sel_traitCollectionDidChange_, a1, v9);
  uint64_t v12 = (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_model;
  swift_beginAccess();
  sub_1C0AF1F8C(v12, (uint64_t)v6, &qword_1EB87BC80, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaSectionDecorationItem);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_1C0AF1E08((uint64_t)v6);
  }
  sub_1C0AF1E94((uint64_t)v6, (uint64_t)v11);
  uint64_t v15 = *v11;
  uint64_t v14 = (uint64_t)v11 + *(int *)(v7 + 20);
  swift_retain();
  sub_1C0AF0EF0(&v15, v14);
  swift_release();
  return sub_1C0AF1EF8((uint64_t)v11);
}

uint64_t sub_1C0AF1640(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v30 = a6;
  uint64_t v31 = a3;
  uint64_t v32 = a5;
  uint64_t v33 = a2;
  uint64_t v34 = a4;
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1C151E16C();
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v36 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1C151E1DC();
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0069B58(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080], MEMORY[0x1E4FBB718]);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v29 - v14;
  sub_1BFC39268(0, (unint64_t *)&unk_1EB85EF90);
  uint64_t v16 = sub_1C151E62C();
  id v17 = sub_1C04C4DA4(a1, v16);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  id v18 = (void *)sub_1C151F56C();
  sub_1C0AF1F8C(v30, (uint64_t)v15, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080]);
  unint64_t v19 = (*(unsigned __int8 *)(v13 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  id v20 = (void *)swift_allocObject();
  uint64_t v21 = v34;
  uint64_t v22 = v31;
  v20[2] = v33;
  v20[3] = v22;
  uint64_t v23 = v32;
  v20[4] = v21;
  v20[5] = v23;
  v20[6] = v17;
  sub_1C0AF2170((uint64_t)v15, (uint64_t)v20 + v19);
  aBlock[4] = sub_1C0AF2380;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  aBlock[3] = &block_descriptor_11_0;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  id v25 = v17;
  swift_release();
  sub_1C151E19C();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1BFD32B60();
  sub_1C0069B58(0, (unint64_t *)&qword_1EB879C70, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1BFD32AD8();
  id v26 = v36;
  uint64_t v27 = v39;
  sub_1C151FFBC();
  MEMORY[0x1C18C70C0](0, v11, v26, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v11, v37);
}

void sub_1C0AF1C84(uint64_t a1, uint64_t a2, uint64_t a3, id a4)
{
  uint64_t v7 = a1 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C18C9C60](v7);
  if (v8)
  {
    uint64_t v9 = (char *)v8;
    BOOL v10 = *(void *)(v8 + OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_token) == a2
       && *(void *)(v8 + OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_token + 8) == a3;
    if (v10 || (sub_1C1520A9C() & 1) != 0)
    {
      id v11 = objc_msgSend(v9, sel_traitCollection);
      id v12 = objc_msgSend(v11, sel_userInterfaceStyle);

      if (v12 == a4)
      {
        uint64_t v13 = OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_micaView;
        id v14 = *(id *)&v9[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_micaView];
        sub_1C151CADC();

        uint64_t v15 = (char *)*(id *)&v9[v13];
        sub_1C151CAEC();

        uint64_t v9 = v15;
      }
    }
  }
}

uint64_t sub_1C0AF1E00()
{
  return type metadata accessor for FormatMicaSectionDecorationView();
}

uint64_t sub_1C0AF1E08(uint64_t a1)
{
  sub_1C0069B58(0, &qword_1EB87BC80, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaSectionDecorationItem, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0AF1E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatMicaSectionDecorationItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0AF1EF8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatMicaSectionDecorationItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0AF1F54()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0AF1F8C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C0069B58(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0AF200C()
{
  sub_1C0069B58(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080], MEMORY[0x1E4FBB718]);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);

  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_1C151A8EC();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  return swift_deallocObject();
}

uint64_t sub_1C0AF2170(uint64_t a1, uint64_t a2)
{
  sub_1C0069B58(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0AF2204()
{
  return sub_1C0AF2398((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_1C0AF1640);
}

uint64_t sub_1C0AF221C()
{
  sub_1C0069B58(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080], MEMORY[0x1E4FBB718]);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();

  uint64_t v3 = sub_1C151A8EC();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  return swift_deallocObject();
}

uint64_t sub_1C0AF2380()
{
  return sub_1C0AF2398((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_1C0AF1C84);
}

uint64_t sub_1C0AF2398(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))
{
  sub_1C0069B58(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080], MEMORY[0x1E4FBB718]);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (char *)v1 + ((*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a1(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C0AF2448(uint64_t a1, uint64_t a2)
{
  sub_1C0069B58(0, &qword_1EB87BC80, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaSectionDecorationItem, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0AF24DC(uint64_t a1)
{
  sub_1BFE6A7A4(0, &qword_1EA1A37E8, (unint64_t *)&unk_1EA1A37F0, MEMORY[0x1E4FAD640], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0AF2564(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatMicaSectionDecorationItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C0AF25C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C151635C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_micaView;
  *(void *)&v1[v6] = objc_msgSend(objc_allocWithZone((Class)sub_1C151CAFC()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v7 = (uint64_t *)&v1[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_token];
  sub_1C151634C();
  uint64_t v8 = sub_1C151633C();
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t *v7 = v8;
  v7[1] = v10;
  id v11 = &v1[OBJC_IVAR____TtC8NewsFeed31FormatMicaSectionDecorationView_model];
  uint64_t v12 = type metadata accessor for FormatMicaSectionDecorationItem();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);

  sub_1C152040C();
  __break(1u);
}

void sub_1C0AF27A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  id v11 = *(void **)(a1 + 16);
  if (!(a6 >> 6))
  {
    sub_1C00AB56C(a3, a4, a5);
    sub_1C002B228(v11, a2, a3, a4, a5);
    goto LABEL_16;
  }
  if (a6 >> 6 == 1)
  {
    sub_1C00AB56C(a3, a4, a5);
    sub_1C002B228(objc_msgSend(v11, sel_eventLeagueTag), a2, a3, a4, a5);
    swift_unknownObjectRelease();
LABEL_16:
    sub_1C00AB750(a3, a4, a5, a6, (uint64_t (*)(void))sub_1C002B840);
    return;
  }
  sub_1C00AB56C(a4, a5, a6 & 0x3F);
  id v12 = objc_msgSend(v11, sel_eventCompetitorTags);
  if (v12)
  {
    uint64_t v13 = v12;
    sub_1C017E704();
    unint64_t v14 = sub_1C151EBCC();

    if (!(v14 >> 62)) {
      goto LABEL_7;
    }
  }
  else
  {
    unint64_t v14 = MEMORY[0x1E4FBC860];
    if (!(MEMORY[0x1E4FBC860] >> 62))
    {
LABEL_7:
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v15 > a3) {
        goto LABEL_8;
      }
LABEL_15:
      type metadata accessor for FormatLayoutError();
      sub_1BFE7E51C();
      swift_allocError();
      id v18 = v17;
      swift_bridgeObjectRelease();
      *id v18 = v15;
      v18[1] = a3;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (v15 <= a3) {
    goto LABEL_15;
  }
LABEL_8:
  if ((v14 & 0xC000000000000001) != 0)
  {
    sub_1C00AB56C(a4, a5, a6 & 0x3F);
    uint64_t v16 = (void *)MEMORY[0x1C18C7CB0](a3, v14);
    goto LABEL_12;
  }
  if (a3 < 0)
  {
    __break(1u);
  }
  else if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a3)
  {
    uint64_t v16 = *(void **)(v14 + 8 * a3 + 32);
    sub_1C00AB750(a3, a4, a5, a6, (uint64_t (*)(void))sub_1C00AB56C);
    swift_unknownObjectRetain();
LABEL_12:
    swift_bridgeObjectRelease();
    sub_1C002B228(v16, a2, a4, a5, a6 & 0x3F);
    swift_unknownObjectRelease();
    sub_1C00AB750(a3, a4, a5, a6, (uint64_t (*)(void))sub_1C002B840);
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t sub_1C0AF2AFC(uint64_t a1)
{
  return sub_1BFF5AB10(a1);
}

uint64_t sub_1C0AF2B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v24 = a4;
  uint64_t v26 = a1;
  uint64_t v8 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFF5B538(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = type metadata accessor for FormatOption();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    FormatOptionCollection.subscript.getter(a2, a3, (uint64_t)v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      sub_1C0257E00((uint64_t)v13);
      *uint64_t v10 = a2;
      v10[1] = a3;
      swift_storeEnumTagMultiPayload();
      sub_1BFE7E51C();
      swift_allocError();
      sub_1BFDB5EBC((uint64_t)v10, v18, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
      swift_bridgeObjectRetain();
      swift_willThrow();
      unint64_t v19 = type metadata accessor for FormatLayoutError;
      uint64_t v20 = (uint64_t)v10;
    }
    else
    {
      sub_1C00AB068((uint64_t)v13, (uint64_t)v17);
      swift_retain();
      uint64_t v21 = v25;
      sub_1BFF28A20(v26, &v27);
      swift_release();
      if (!v21)
      {
        a2 = sub_1BFF68B60(v27, a2, a3, v24, v26);
        swift_release();
        sub_1BFF5B5EC((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatOption);
        return a2;
      }
      unint64_t v19 = type metadata accessor for FormatOption;
      uint64_t v20 = (uint64_t)v17;
    }
    sub_1BFF5B5EC(v20, (uint64_t (*)(void))v19);
    return a2;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t _s8NewsFeed20FormatCommandBindingO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  unsigned int v5 = *(unsigned __int8 *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 25);
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  unsigned int v10 = *(unsigned __int8 *)(a2 + 24);
  char v11 = *(unsigned char *)(a2 + 25);
  uint64_t v37 = *(void *)a1;
  switch((4 * v6) | (*(unsigned char *)(a1 + 24) >> 2) & 3)
  {
    case 1:
      if (((4 * v11) | (*(unsigned char *)(a2 + 24) >> 2) & 3) == 1) {
        goto LABEL_20;
      }
      goto LABEL_25;
    case 2:
      if (((4 * v11) | (*(unsigned char *)(a2 + 24) >> 2) & 3) != 2) {
        goto LABEL_25;
      }
      sub_1C0AF3824(v37, v2, v4, v5, v6, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
      sub_1C0AF3824(v7, v8, v9, v10, v11, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
      char v14 = ((v7 ^ v37) & 1) == 0;
      return v14 & 1;
    case 3:
      if (((4 * v11) | (*(unsigned char *)(a2 + 24) >> 2) & 3) == 3)
      {
        uint64_t v42 = *(void *)a1;
        uint64_t v43 = v2;
        LOBYTE(v44) = v4;
        uint64_t v38 = v7;
        uint64_t v39 = v8;
        LOBYTE(v40) = v9;
        uint64_t v34 = v4;
        uint64_t v15 = v2;
        sub_1C0AF3824(v7, v8, v9, v10, v11, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
        uint64_t v16 = v3;
        uint64_t v35 = v15;
        uint64_t v17 = v34;
        sub_1C0AF3824(v16, v15, v34, v5, v6, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
        sub_1C0AF3824(v37, v15, v34, v5, v6, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
        sub_1C0AF3824(v7, v8, v9, v10, v11, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
        char v18 = _s8NewsFeed16FormatTagBindingV7CommandO2eeoiySbAE_AEtFZ_0((uint64_t)&v42, (uint64_t)&v38);
        goto LABEL_18;
      }
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 8);
      sub_1C00AB56C(v3, v2, v4);
      goto LABEL_24;
    case 4:
      if (((4 * v11) | (*(unsigned char *)(a2 + 24) >> 2) & 3) != 4) {
        goto LABEL_25;
      }
      goto LABEL_20;
    case 5:
      if (((4 * v11) | (*(unsigned char *)(a2 + 24) >> 2) & 3) != 5) {
        goto LABEL_25;
      }
      goto LABEL_20;
    case 6:
      if (((4 * v11) | (*(unsigned char *)(a2 + 24) >> 2) & 3) == 6)
      {
        uint64_t v42 = *(void *)a1;
        uint64_t v43 = v2;
        uint64_t v44 = v4;
        char v45 = v5 & 0xF3;
        uint64_t v38 = v7;
        uint64_t v39 = v8;
        uint64_t v40 = v9;
        char v41 = v10 & 0xF3;
        uint64_t v34 = v4;
        uint64_t v19 = v2;
        sub_1C0AF3824(v7, v8, v9, v10, v11, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
        uint64_t v20 = v3;
        uint64_t v35 = v19;
        uint64_t v17 = v34;
        sub_1C0AF3824(v20, v19, v34, v5, v6, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
        sub_1C0AF3824(v37, v19, v34, v5, v6, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
        sub_1C0AF3824(v7, v8, v9, v10, v11, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
        char v18 = _s8NewsFeed24FormatSportsEventBindingV7CommandO2eeoiySbAE_AEtFZ_0((uint64_t)&v42, (uint64_t)&v38);
        goto LABEL_18;
      }
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 8);
      sub_1C00AB750(v3, v2, v4, v5 & 0xF3, (uint64_t (*)(void))sub_1C00AB56C);
      goto LABEL_24;
    case 7:
      if (((4 * v11) | (*(unsigned char *)(a2 + 24) >> 2) & 3) != 7)
      {
        uint64_t v12 = *(void *)(a1 + 16);
        uint64_t v13 = *(void *)(a1 + 8);
        sub_1BFDEB94C(v3, v2, v4, v5 & 1);
        goto LABEL_24;
      }
      uint64_t v42 = *(void *)a1;
      uint64_t v43 = v2;
      uint64_t v44 = v4;
      char v45 = v5 & 1;
      uint64_t v38 = v7;
      uint64_t v39 = v8;
      uint64_t v40 = v9;
      char v41 = v10 & 1;
      uint64_t v34 = v4;
      uint64_t v21 = v2;
      sub_1C0AF3824(v7, v8, v9, v10, v11, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
      uint64_t v22 = v3;
      uint64_t v35 = v21;
      uint64_t v17 = v34;
      sub_1C0AF3824(v22, v21, v34, v5, v6, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
      sub_1C0AF3824(v37, v21, v34, v5, v6, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
      sub_1C0AF3824(v7, v8, v9, v10, v11, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
      char v18 = _s8NewsFeed16FormatSymbolNameO2eeoiySbAC_ACtFZ_0((uint64_t)&v42, (uint64_t)&v38);
LABEL_18:
      char v14 = v18;
      uint64_t v23 = v37;
      uint64_t v24 = v35;
      uint64_t v25 = v17;
      unsigned int v26 = v5;
      char v27 = v6;
      goto LABEL_27;
    case 8:
      if (((4 * v11) | (*(unsigned char *)(a2 + 24) >> 2) & 3) != 8) {
        goto LABEL_25;
      }
LABEL_20:
      sub_1C0AF3824(v37, v2, v4, v5, v6, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
      sub_1C0AF3824(v7, v8, v9, v10, v11, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
      char v14 = v7 == v37;
      return v14 & 1;
    default:
      if ((4 * v11) | (*(unsigned char *)(a2 + 24) >> 2) & 3)
      {
        uint64_t v12 = *(void *)(a1 + 16);
        uint64_t v13 = *(void *)(a1 + 8);
        sub_1C00AB700(v3, v2, v4, v5, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C);
LABEL_24:
        uint64_t v2 = v13;
        uint64_t v4 = v12;
LABEL_25:
        uint64_t v28 = v8;
        uint64_t v36 = v8;
        uint64_t v29 = v4;
        uint64_t v30 = v2;
        sub_1C0AF3824(v7, v28, v9, v10, v11, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
        sub_1C0AF3824(v37, v30, v29, v5, v6, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
        sub_1C0AF3824(v7, v36, v9, v10, v11, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
        char v14 = 0;
      }
      else
      {
        uint64_t v42 = *(void *)a1;
        uint64_t v43 = v2;
        uint64_t v44 = v4;
        char v45 = v5;
        uint64_t v38 = v7;
        uint64_t v39 = v8;
        uint64_t v40 = v9;
        char v41 = v10;
        uint64_t v31 = v4;
        uint64_t v34 = v4;
        uint64_t v32 = v2;
        sub_1C0AF3824(v7, v8, v9, v10, v11, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
        uint64_t v35 = v32;
        sub_1C0AF3824(v37, v32, v31, v5, v6, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
        sub_1C0AF3824(v37, v32, v31, v5, v6, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
        sub_1C0AF3824(v7, v8, v9, v10, v11, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
        char v14 = _s8NewsFeed18FormatGroupBindingV7CommandO2eeoiySbAE_AEtFZ_0((uint64_t)&v42, (uint64_t)&v38);
        uint64_t v23 = v37;
        uint64_t v25 = v34;
        uint64_t v24 = v32;
        unsigned int v26 = v5;
        char v27 = v6;
LABEL_27:
        sub_1C0AF3824(v23, v24, v25, v26, v27, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
        sub_1C0AF3824(v7, v8, v9, v10, v11, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
        sub_1C0AF3824(v7, v8, v9, v10, v11, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
        sub_1C0AF3824(v37, v35, v34, v5, v6, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
      }
      return v14 & 1;
  }
}

unint64_t sub_1C0AF36C4(uint64_t a1)
{
  unint64_t result = sub_1C0AF36EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0AF36EC()
{
  unint64_t result = qword_1EA1A3800;
  if (!qword_1EA1A3800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3800);
  }
  return result;
}

unint64_t sub_1C0AF3740(void *a1)
{
  a1[1] = sub_1BFD6D8CC();
  a1[2] = sub_1BFD9F390();
  unint64_t result = sub_1C0AF3778();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0AF3778()
{
  unint64_t result = qword_1EA1A3808;
  if (!qword_1EA1A3808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3808);
  }
  return result;
}

uint64_t destroy for FormatCommandBinding(uint64_t a1)
{
  return sub_1C0AF3824(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(unsigned char *)(a1 + 25), (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
}

uint64_t sub_1C0AF3824(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  switch((4 * a5) | (a4 >> 2) & 3)
  {
    case 0u:
      unint64_t result = sub_1C00AB700(result, a2, a3, a4, a6, a6);
      break;
    case 3u:
      unint64_t result = a7();
      break;
    case 6u:
      unint64_t result = sub_1C00AB750(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      uint64_t v8 = a4 & 1;
      unint64_t result = a8(result, a2, a3, v8);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for FormatCommandBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 25);
  unsigned int v7 = *(unsigned __int8 *)(a2 + 24);
  sub_1C0AF3824(*(void *)a2, v4, v5, v7, v6, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatCommandBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 25);
  unsigned int v7 = *(unsigned __int8 *)(a2 + 24);
  sub_1C0AF3824(*(void *)a2, v4, v5, v7, v6, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned int v11 = *(unsigned __int8 *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  char v12 = *(unsigned char *)(a1 + 25);
  *(unsigned char *)(a1 + 25) = v6;
  sub_1C0AF3824(v8, v9, v10, v11, v12, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
  return a1;
}

uint64_t assignWithTake for FormatCommandBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  __int16 v4 = *(_WORD *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 25);
  unsigned int v9 = *(unsigned __int8 *)(a1 + 24);
  *(_WORD *)(a1 + 24) = v4;
  sub_1C0AF3824(v5, v7, v6, v9, v8, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
  return a1;
}

uint64_t sub_1C0AF3AD8(uint64_t a1)
{
  return (4 * (*(unsigned char *)(a1 + 25) & 0x3F)) | (*(unsigned __int8 *)(a1 + 24) >> 2) & 3u;
}

uint64_t sub_1C0AF3AEC(uint64_t result)
{
  *(unsigned char *)(result + 24) &= 0xF3u;
  return result;
}

uint64_t sub_1C0AF3AFC(uint64_t result, unsigned int a2)
{
  *(unsigned char *)(result + 24) = *(unsigned char *)(result + 24) & 0xF3 | (4 * (a2 & 3));
  *(unsigned char *)(result + 25) = a2 >> 2;
  return result;
}

ValueMetadata *type metadata accessor for FormatCommandBinding()
{
  return &type metadata for FormatCommandBinding;
}

uint64_t sub_1C0AF3B2C(void **a1, char a2)
{
  uint64_t v2 = *a1;
  switch(a2)
  {
    case 1:
      if (qword_1EB85F120 != -1) {
        swift_once();
      }
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      id v6 = v2;
      uint64_t v5 = swift_retain();
      goto LABEL_8;
    case 2:
      if (qword_1EB87CA88 != -1) {
        swift_once();
      }
      uint64_t v34 = (uint64_t)v2;
      long long v35 = 0u;
      long long v36 = 0u;
      uint64_t v37 = 0;
      char v38 = 3;
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      id v8 = v2;
      uint64_t v9 = swift_retain();
      return sub_1C0A37280(v9, (uint64_t)&v34);
    case 3:
      if (qword_1EB87BDF8 != -1) {
        swift_once();
      }
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      id v10 = v2;
      uint64_t v11 = swift_retain();
      return sub_1C0A37ED8(v11, v2);
    case 4:
      if (qword_1EB85F490 != -1) {
        swift_once();
      }
      sub_1BFE4DBE0();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C15320E0;
      *(void *)(v12 + 32) = v2;
      uint64_t v34 = v12;
      sub_1C151EBEC();
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      id v13 = v2;
      uint64_t v14 = swift_retain();
      return sub_1C0A37C30(v14, v34);
    case 5:
      sub_1BFE4DBE0();
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C15320E0;
      *(void *)(v15 + 32) = v2;
      uint64_t v34 = v15;
      sub_1C151EBEC();
      type metadata accessor for Commands.RemoveIssues.Prompt();
      uint64_t v16 = (void *)swift_allocObject();
      v16[2] = v34;
      v16[3] = &unk_1F1B645F0;
      v16[4] = 0;
      v16[5] = 0;
      uint64_t v17 = qword_1EB85F480;
      id v18 = v2;
      if (v17 != -1) {
        swift_once();
      }
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v19 = swift_retain();
      return sub_1C0A37988(v19, (uint64_t)v16);
    case 6:
      if (qword_1EB87C910 != -1) {
        swift_once();
      }
      uint64_t v20 = qword_1EB87C900;
      swift_retain();
      id v21 = objc_msgSend(v2, sel_sourceChannel);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v22 = v20;
      uint64_t v23 = (uint64_t)v21;
      uint64_t v24 = 0;
      goto LABEL_34;
    case 7:
      if (qword_1EB87B198 != -1) {
        swift_once();
      }
      uint64_t v25 = qword_1EB885460;
      swift_retain();
      id v26 = objc_msgSend(v2, sel_sourceChannel);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v27 = sub_1C0A3C1CC(v25, (uint64_t)v26, 256);
      goto LABEL_30;
    case 8:
      if (qword_1EB87B188 != -1) {
        swift_once();
      }
      uint64_t v28 = qword_1EB8716A0;
      swift_retain();
      id v29 = objc_msgSend(v2, sel_sourceChannel);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v27 = sub_1C0A3BBEC(v28, (uint64_t)v29);
LABEL_30:
      uint64_t v30 = v27;
      swift_release();
      uint64_t result = v30;
      break;
    case 9:
      if (qword_1EB87C910 != -1) {
        swift_once();
      }
      uint64_t v31 = qword_1EB87C900;
      swift_retain();
      id v32 = objc_msgSend(v2, sel_sourceChannel);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v22 = v31;
      uint64_t v23 = (uint64_t)v32;
      uint64_t v24 = 1;
LABEL_34:
      uint64_t result = sub_1C0A36C14(v22, v23, v24, 0);
      break;
    case 10:
      if (qword_1EB85F540 != -1) {
        swift_once();
      }
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v33 = swift_retain();
      uint64_t result = sub_1C0A36690(v33, 1);
      break;
    default:
      if (qword_1EB86BD40 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_1EB86BD30;
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      swift_retain();
      id v4 = v2;
      uint64_t v5 = v3;
LABEL_8:
      uint64_t result = sub_1C0A37610(v5, v2, 0, 0);
      break;
  }
  return result;
}

uint64_t sub_1C0AF4188(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      if (qword_1EB8614F8 != -1) {
        swift_once();
      }
      sub_1C01F09C0(a1, (uint64_t)v11);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v5 = swift_retain();
      uint64_t v4 = sub_1C0A3CE9C(v5, (uint64_t)v11);
      break;
    case 2:
      if (qword_1EB862A00 != -1) {
        swift_once();
      }
      sub_1C01F09C0(a1, (uint64_t)v11);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      uint64_t v4 = sub_1C0A3D1A0(v6, (uint64_t)v11);
      break;
    case 3:
      if (qword_1EB862A38 != -1) {
        swift_once();
      }
      sub_1C01F09C0(a1, (uint64_t)v11);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      uint64_t v4 = sub_1C0A3D4A4(v7, (uint64_t)v11);
      break;
    case 4:
      if (qword_1EB862A20 != -1) {
        swift_once();
      }
      sub_1C01F09C0(a1, (uint64_t)v11);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v8 = swift_retain();
      uint64_t v4 = sub_1C0A3D7A8(v8, (uint64_t)v11);
      break;
    default:
      if (qword_1EB864430 != -1) {
        swift_once();
      }
      sub_1C01F09C0(a1, (uint64_t)v11);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v3 = swift_retain();
      uint64_t v4 = sub_1C0A3CB98(v3, (uint64_t)v11);
      break;
  }
  uint64_t v9 = v4;
  swift_release();
  return v9;
}

void static FormatSlotExpireContent.default.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0;
}

uint64_t static FormatSlotExpireContent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

uint64_t sub_1C0AF4470@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSlotExpireContent.init(from:)(a1, a2);
}

uint64_t sub_1C0AF4488(void *a1)
{
  return FormatSlotExpireContent.encode(to:)(a1);
}

uint64_t FormatSlotExpireContent.expireContent(resolutions:data:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v27[-v10];
  sub_1C0076EB8(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(unsigned char *)(v2 + 8))
  {
    sub_1C0076DAC(a2, (uint64_t)v14);
    uint64_t v15 = type metadata accessor for FormatTransformKnobs();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15) == 1)
    {
      sub_1C0076D4C((uint64_t)v14, (uint64_t (*)(void))sub_1C0076EB8);
      goto LABEL_11;
    }
    uint64_t v16 = &v14[*(int *)(v15 + 20)];
    uint64_t v17 = v16[3];
    uint64_t v18 = v16[4];
    __swift_project_boxed_opaque_existential_1(v16, v17);
    unint64_t v19 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18) + 24);
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_7;
      }
    }
    else if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_7:
      uint64_t v20 = *(void *)&v14[*(int *)(type metadata accessor for FeedContext() + 40)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C03C71BC(v19, v20);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_10:
      sub_1C0076D4C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatTransformKnobs);
      goto LABEL_11;
    }
    swift_release();
    goto LABEL_10;
  }
LABEL_11:
  sub_1C151630C();
  sub_1C151624C();
  uint64_t v22 = *(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8);
  uint64_t v23 = v22(v8, v5);
  MEMORY[0x1F4188790](v23);
  *(void *)&v27[-16] = v11;
  swift_bridgeObjectRetain();
  sub_1C0621F20((uint64_t (*)(char *))sub_1C0AF4BE8, (uint64_t)&v27[-32], a1);
  uint64_t v25 = v24;
  v22(v11, v5);
  return v25;
}

uint64_t sub_1C0AF47F4(uint64_t a1, uint64_t a2)
{
  v25[1] = a2;
  sub_1BFF97C40();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C002F5A0(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v25 - v12;
  uint64_t v14 = sub_1C151631C();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  v25[0] = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = sub_1C120EE98();
  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v13, 1, 1, v4);
LABEL_10:
    uint64_t v21 = (uint64_t (*)(void))sub_1C002F5A0;
    goto LABEL_11;
  }
  uint64_t v18 = v17;
  v25[3] = v2;
  if (objc_msgSend(v17, sel_respondsToSelector_, sel_globalExpirationTime))
  {
    id v19 = objc_msgSend(v18, sel_globalExpirationTime);
    swift_unknownObjectRelease();
    if (v19)
    {
      sub_1C15162BC();

      uint64_t v20 = v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
    }
    else
    {
      uint64_t v20 = v15;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v7, 1, 1, v14);
    }
    sub_1C0AF4EC0((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))sub_1BFF97C40);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
  }
  else
  {
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
    uint64_t v20 = v15;
  }
  sub_1C0AF4EC0((uint64_t)v10, (uint64_t)v13, (uint64_t (*)(void))sub_1C002F5A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1) {
    goto LABEL_10;
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v14) != 1)
  {
    uint64_t v24 = v25[0];
    (*(void (**)(void, char *, uint64_t))(v20 + 32))(v25[0], v13, v14);
    sub_1C0AF4E68();
    char v22 = sub_1C151E57C() ^ 1;
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v24, v14);
    return v22 & 1;
  }
  uint64_t v21 = (uint64_t (*)(void))sub_1BFF97C40;
LABEL_11:
  sub_1C0076D4C((uint64_t)v13, v21);
  char v22 = 1;
  return v22 & 1;
}

uint64_t sub_1C0AF4BE8(uint64_t a1)
{
  return sub_1C0AF47F4(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t FormatSlotExpireContent.description.getter()
{
  if (*(unsigned char *)(v0 + 8)) {
    return 0x73626F6E6BLL;
  }
  sub_1C0AF4CF0();
  sub_1C152036C();
  return 0;
}

uint64_t sub_1C0AF4C7C()
{
  if (*(unsigned char *)(v0 + 8)) {
    return 0x73626F6E6BLL;
  }
  sub_1C0AF4CF0();
  sub_1C152036C();
  return 0;
}

void sub_1C0AF4CF0()
{
  if (!qword_1EA19DEF8)
  {
    unint64_t v0 = type metadata accessor for FormatValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19DEF8);
    }
  }
}

unint64_t sub_1C0AF4D50(uint64_t a1)
{
  unint64_t result = sub_1C0AF4D78();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0AF4D78()
{
  unint64_t result = qword_1EA1A3810;
  if (!qword_1EA1A3810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3810);
  }
  return result;
}

unint64_t sub_1C0AF4DCC(void *a1)
{
  a1[1] = sub_1C08B3E04();
  a1[2] = sub_1C08F0084();
  unint64_t result = sub_1C0AF4E04();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0AF4E04()
{
  unint64_t result = qword_1EA1A3818;
  if (!qword_1EA1A3818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3818);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotExpireContent()
{
  return &type metadata for FormatSlotExpireContent;
}

unint64_t sub_1C0AF4E68()
{
  unint64_t result = qword_1EB870780;
  if (!qword_1EB870780)
  {
    sub_1C151631C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870780);
  }
  return result;
}

uint64_t sub_1C0AF4EC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id IssueCoverViewButton.onTap.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed20IssueCoverViewButton_onTap);
}

id IssueCoverViewButton.coverView.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed20IssueCoverViewButton_coverView);
}

id IssueCoverViewButton.isHighlighted.getter()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_isHighlighted);
}

void IssueCoverViewButton.isHighlighted.setter(char a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, sel_setHighlighted_, a1 & 1);
  uint64_t v3 = self;
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v6[4] = sub_1C0AF5314;
  v6[5] = v4;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  v6[2] = sub_1BFC9FC68;
  v6[3] = &block_descriptor_42;
  uint64_t v5 = _Block_copy(v6);
  swift_release();
  objc_msgSend(v3, sel_animateWithDuration_animations_, v5, 0.2);
  _Block_release(v5);
}

uint64_t sub_1C0AF51F8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C0AF5230(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  objc_super v2 = (char *)MEMORY[0x1C18C9C60](v1);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed20IssueCoverViewButton_coverView];
    v10.receiver = v2;
    v10.super_class = (Class)type metadata accessor for IssueCoverViewButton();
    id v5 = v4;
    if (objc_msgSendSuper2(&v10, sel_isHighlighted))
    {
      CGAffineTransformMakeScale(&v9, 0.95, 0.95);
      long long v7 = *(_OWORD *)&v9.a;
      long long v6 = *(_OWORD *)&v9.c;
      long long v8 = *(_OWORD *)&v9.tx;
    }
    else
    {
      long long v6 = xmmword_1C158FA40;
      long long v7 = xmmword_1C158FA50;
      long long v8 = 0uLL;
    }
    *(_OWORD *)&v9.a = v7;
    *(_OWORD *)&v9.c = v6;
    *(_OWORD *)&v9.tx = v8;
    objc_msgSend(v5, sel_setTransform_, &v9);
  }
}

void sub_1C0AF5314()
{
  sub_1C0AF5230(v0);
}

void (*IssueCoverViewButton.isHighlighted.modify(objc_super **a1))(objc_super **a1, char a2)
{
  uint64_t v3 = (objc_super *)malloc(0x70uLL);
  *a1 = v3;
  v3[6].receiver = v1;
  uint64_t ObjectType = swift_getObjectType();
  v3[6].super_class = (Class)ObjectType;
  v3[3].receiver = v1;
  v3[3].super_class = (Class)ObjectType;
  LOBYTE(v3->receiver) = objc_msgSendSuper2(v3 + 3, sel_isHighlighted);
  return sub_1C0AF53A0;
}

void sub_1C0AF53A0(objc_super **a1, char a2)
{
  objc_super v2 = *a1;
  uint64_t receiver_low = LOBYTE((*a1)->receiver);
  id receiver = (*a1)[6].receiver;
  super_class = (*a1)[6].super_class;
  long long v6 = *a1;
  if (a2)
  {
    v6[4].id receiver = receiver;
    v6[4].super_class = super_class;
    objc_msgSendSuper2(v6 + 4, sel_setHighlighted_, receiver_low);
  }
  else
  {
    v6[5].id receiver = receiver;
    v2[5].super_class = super_class;
    objc_msgSendSuper2(v6 + 5, sel_setHighlighted_, receiver_low);
    long long v7 = self;
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v2[2].id receiver = sub_1C0AF5314;
    v2[2].super_class = (Class)v8;
    v2->id receiver = (id)MEMORY[0x1E4F143A8];
    v2->super_class = (Class)1107296256;
    v2[1].id receiver = sub_1BFC9FC68;
    v2[1].super_class = (Class)&block_descriptor_5;
    CGAffineTransform v9 = _Block_copy(v2);
    swift_release();
    objc_msgSend(v7, sel_animateWithDuration_animations_, v9, 0.2);
    _Block_release(v9);
  }
  free(v2);
}

id IssueCoverViewButton.frame.getter()
{
  v2.id receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_frame);
}

id IssueCoverViewButton.frame.setter(double a1, double a2, double a3, double a4)
{
  v11.id receiver = v4;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, sel_setFrame_, a1, a2, a3, a4);
  CGAffineTransform v9 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed20IssueCoverViewButton_coverView];
  objc_msgSend(v4, sel_bounds);
  return objc_msgSend(v9, sel_setFrame_);
}

void (*IssueCoverViewButton.frame.modify(objc_super **a1))(double **a1, char a2)
{
  uint64_t v3 = (objc_super *)malloc(0x60uLL);
  *a1 = v3;
  v3[5].id receiver = v1;
  uint64_t ObjectType = swift_getObjectType();
  v3[5].super_class = (Class)ObjectType;
  v3[2].id receiver = v1;
  v3[2].super_class = (Class)ObjectType;
  objc_msgSendSuper2(v3 + 2, sel_frame);
  v3->id receiver = v5;
  v3->super_class = v6;
  v3[1].id receiver = v7;
  v3[1].super_class = v8;
  return sub_1C0AF5724;
}

void sub_1C0AF5724(double **a1, char a2)
{
  objc_super v2 = *a1;
  double v3 = **a1;
  double v4 = (*a1)[1];
  double v5 = (*a1)[2];
  double v6 = (*a1)[3];
  uint64_t v8 = (char *)*((void *)*a1 + 10);
  long long v7 = (objc_class *)*((void *)*a1 + 11);
  CGAffineTransform v9 = (objc_super *)*a1;
  if (a2)
  {
    v9[3].id receiver = v8;
    v9[3].super_class = v7;
    objc_msgSendSuper2(v9 + 3, sel_setFrame_, v3, v4, v5, v6);
  }
  else
  {
    v9[4].id receiver = v8;
    v9[4].super_class = v7;
    objc_msgSendSuper2(v9 + 4, sel_setFrame_, v3, v4, v5, v6);
    objc_super v10 = *(void **)&v8[OBJC_IVAR____TtC8NewsFeed20IssueCoverViewButton_coverView];
    objc_msgSend(v8, sel_bounds);
    objc_msgSend(v10, sel_setFrame_);
  }
  free(v2);
}

char *IssueCoverViewButton.__allocating_init(coverView:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return IssueCoverViewButton.init(coverView:)(a1);
}

char *IssueCoverViewButton.init(coverView:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed20IssueCoverViewButton_onTap;
  sub_1BFD22278();
  id v6 = objc_allocWithZone(v5);
  long long v7 = v1;
  *(void *)&v1[v4] = objc_msgSend(v6, sel_init);
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed20IssueCoverViewButton_coverView] = a1;
  id v8 = a1;

  objc_msgSend(v8, sel_frame);
  sub_1C151F72C();
  v15.id receiver = v7;
  v15.super_class = ObjectType;
  CGAffineTransform v9 = (char *)objc_msgSendSuper2(&v15, sel_initWithFrame_);
  objc_msgSend(v8, sel_setUserInteractionEnabled_, 0);
  id v10 = v8;
  objc_msgSend(v10, sel_setClipsToBounds_, objc_msgSend(v9, sel_clipsToBounds));

  objc_msgSend(v9, sel_addSubview_, v10);
  objc_super v11 = *(void **)&v9[OBJC_IVAR____TtC8NewsFeed20IssueCoverViewButton_onTap];
  uint64_t v12 = v9;
  id v13 = v11;
  sub_1C151C87C();

  return v12;
}

id IssueCoverViewButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void IssueCoverViewButton.init(frame:)()
{
}

id IssueCoverViewButton.__deallocating_deinit()
{
  v2.id receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall IssueCoverViewButton.prepareForReuse()()
{
  uint64_t v0 = (void *)sub_1C151C84C();
}

void sub_1C0AF5B98()
{
  uint64_t v0 = (void *)sub_1C151C84C();
}

void sub_1C0AF5BD8()
{
  sub_1C0AF5CB4(&qword_1EA1A3838);
  JUMPOUT(0x1C18C4650);
}

uint64_t sub_1C0AF5C30()
{
  return sub_1C0AF5CB4(&qword_1EA1A3830);
}

uint64_t type metadata accessor for IssueCoverViewButton()
{
  return self;
}

uint64_t method lookup function for IssueCoverViewButton(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IssueCoverViewButton);
}

uint64_t dispatch thunk of IssueCoverViewButton.__allocating_init(coverView:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C0AF5CB4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for IssueCoverViewButton();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0AF5D04@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4 = a1[2];
  unint64_t v5 = v4 >> 60;
  if (v4 >> 60 == 1 || v5 == 5)
  {
    uint64_t v7 = *a1;
    uint64_t v8 = a1[1];
    uint64_t v19 = a1[2];
    swift_bridgeObjectRetain();
    sub_1BFF6A064(v20);
    sub_1C042F9B0(v7, v8, (uint64_t)v20, a2);
  }
  else
  {
    if (v5 == 8)
    {
      uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      v20[0] = v9;
      swift_retain();
      swift_retain();
      swift_retain();
      FormatOptionValue.type.getter((char *)&v19);
      if (FormatOptionType.rawValue.getter() == 0x676E69727473 && v10 == 0xE600000000000000) {
        goto LABEL_10;
      }
      char v11 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      if (v11) {
        goto LABEL_15;
      }
      v20[0] = v9;
      FormatOptionValue.type.getter((char *)&v19);
      if (FormatOptionType.rawValue.getter() == 1836412517 && v12 == 0xE400000000000000)
      {
LABEL_10:
        swift_bridgeObjectRelease();
LABEL_15:
        uint64_t v14 = *a1;
        uint64_t v15 = a1[1];
        uint64_t v19 = v4;
        swift_bridgeObjectRetain();
        sub_1BFF6A064(v20);
        sub_1C042F9B0(v14, v15, (uint64_t)v20, a2);
        swift_release();
        swift_release();
        sub_1C0B02B98((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatOption);
        return swift_release();
      }
      char v13 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_15;
      }
      swift_release();
      swift_release();
      swift_release();
    }
    uint64_t v17 = *a1;
    uint64_t v18 = a1[1];
    uint64_t v19 = v4;
    swift_bridgeObjectRetain();
    sub_1BFF6A064(v20);
    sub_1C042FB5C(v17, v18, (uint64_t)v20, a2);
  }
  return sub_1C0B02B98((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatOption);
}

uint64_t sub_1C0AF5F74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C131B4D4(a2);
  int64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1C05F7A70(0, v4, 0);
    uint64_t v6 = 64;
    uint64_t v7 = v16;
    do
    {
      uint64_t v8 = *(void *)(v3 + v6);
      unint64_t v10 = *(void *)(v16 + 16);
      unint64_t v9 = *(void *)(v16 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1) {
        sub_1C05F7A70(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v16 + 16) = v10 + 1;
      *(void *)(v16 + 8 * v10 + 32) = v8;
      v6 += 40;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  uint64_t v11 = *(void *)(v7 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v11; ++i)
    {
      uint64_t v13 = swift_bridgeObjectRetain();
      sub_1C1047634(v13);
    }
    swift_bridgeObjectRelease_n();
    uint64_t v14 = v5;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  sub_1C1047634(v14);
  return a1;
}

uint64_t sub_1C0AF60E8(void *a1)
{
  uint64_t v1 = sub_1BFE4C2A0(a1);
  uint64_t v2 = 0x724F737961776C61;
  uint64_t v3 = 0x6E776F6E6B6E75;
  if (v1 == 2) {
    uint64_t v3 = 0x6554737961776C61;
  }
  if (v1 != 1) {
    uint64_t v2 = v3;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0x6974616D6F747561;
  }
}

uint64_t *sub_1C0AF61A8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        uint64_t v7 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 3u:
      case 0xFu:
        uint64_t v46 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v46;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 4u:
      case 0x16u:
      case 0x19u:
      case 0x1Bu:
      case 0x1Du:
      case 0x1Eu:
        *a1 = *(void *)a2;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 5u:
        uint64_t v10 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v10;
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 6u:
        uint64_t v11 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v11;
        long long v12 = *(_OWORD *)(a2 + 32);
        *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
        *((_OWORD *)a1 + 2) = v12;
        uint64_t v13 = *(void *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v13)
        {
          uint64_t v14 = *(void *)(a2 + 56);
          a1[6] = v13;
          a1[7] = v14;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
        }
        goto LABEL_216;
      case 7u:
        long long v15 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v15;
        *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
        *((unsigned char *)a1 + 48) = *(unsigned char *)(a2 + 48);
        *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 88);
        *((unsigned char *)a1 + 104) = *(unsigned char *)(a2 + 104);
        uint64_t v16 = *(void *)(a2 + 120);
        a1[14] = *(void *)(a2 + 112);
        a1[15] = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 8u:
        uint64_t v47 = *(void *)a2;
        sub_1BFF7B774(*(void *)a2);
        *a1 = v47;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 9u:
        uint64_t v48 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v48;
        uint64_t v49 = *(void *)(a2 + 16);
        uint64_t v50 = *(void *)(a2 + 24);
        uint64_t v51 = *(void *)(a2 + 32);
        uint64_t v52 = *(void *)(a2 + 40);
        uint64_t v478 = *(void *)(a2 + 48);
        uint64_t v53 = *(void *)(a2 + 64);
        __dstf = *(void **)(a2 + 56);
        uint64_t v481 = *(void *)(a2 + 72);
        char v54 = *(unsigned char *)(a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C03A98B4(v49, v50, v51, v52, v478, (uint64_t)__dstf, v53, v481, v54);
        a1[2] = v49;
        a1[3] = v50;
        a1[4] = v51;
        a1[5] = v52;
        a1[6] = v478;
        a1[7] = (uint64_t)__dstf;
        a1[8] = v53;
        a1[9] = v481;
        *((unsigned char *)a1 + 80) = v54;
        uint64_t v55 = *(void *)(a2 + 88);
        uint64_t v56 = *(void *)(a2 + 96);
        uint64_t v57 = *(void *)(a2 + 104);
        uint64_t v58 = *(void *)(a2 + 112);
        uint64_t v59 = *(void *)(a2 + 120);
        uint64_t v60 = *(void *)(a2 + 128);
        uint64_t v61 = *(void *)(a2 + 136);
        uint64_t v62 = *(void *)(a2 + 144);
        char v63 = *(unsigned char *)(a2 + 152);
        sub_1C03A98B4(v55, v56, v57, v58, v59, v60, v61, v62, v63);
        a1[11] = v55;
        a1[12] = v56;
        a1[13] = v57;
        a1[14] = v58;
        a1[15] = v59;
        a1[16] = v60;
        a1[17] = v61;
        a1[18] = v62;
        *((unsigned char *)a1 + 152) = v63;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xAu:
        uint64_t v17 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v17;
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xCu:
        uint64_t v18 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xDu:
        long long v19 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v19;
        uint64_t v20 = *(void *)(a2 + 40);
        a1[4] = *(void *)(a2 + 32);
        a1[5] = v20;
        *((unsigned char *)a1 + 48) = *(unsigned char *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xEu:
        uint64_t v21 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v21;
        a1[2] = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x10u:
        long long v64 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 3) = v64;
        (**(void (***)(uint64_t *, uint64_t))(v64 - 8))(a1, a2);
        uint64_t v65 = *(void *)(a2 + 48);
        a1[5] = *(void *)(a2 + 40);
        a1[6] = v65;
        uint64_t v66 = *(void *)(a2 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v66)
        {
          a1[7] = *(void *)(a2 + 56);
          a1[8] = v66;
          uint64_t v67 = *(void *)(a2 + 80);
          a1[9] = *(void *)(a2 + 72);
          a1[10] = v67;
          uint64_t v68 = *(void *)(a2 + 96);
          a1[11] = *(void *)(a2 + 88);
          a1[12] = v68;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v78 = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 56);
          *(_OWORD *)(a1 + 9) = v78;
          *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 88);
        }
        *((unsigned char *)a1 + 104) = *(unsigned char *)(a2 + 104);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x11u:
        type metadata accessor for FeedGroupItem();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            unint64_t v187 = *(void **)a2;
            uint64_t v188 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v188;
            a1[2] = *(void *)(a2 + 16);
            *((_WORD *)a1 + 12) = *(_WORD *)(a2 + 24);
            a1[4] = *(void *)(a2 + 32);
            *((unsigned char *)a1 + 40) = *(unsigned char *)(a2 + 40);
            unint64_t v189 = *(void **)(a2 + 56);
            a1[6] = *(void *)(a2 + 48);
            a1[7] = (uint64_t)v189;
            *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
            uint64_t v190 = *(void *)(a2 + 80);
            id v191 = v187;
            swift_bridgeObjectRetain();
            id v192 = v189;
            if (v190 == 1)
            {
              long long v193 = *(_OWORD *)(a2 + 88);
              *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 72);
              *(_OWORD *)(a1 + 11) = v193;
              *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 104);
            }
            else
            {
              a1[9] = *(void *)(a2 + 72);
              a1[10] = v190;
              uint64_t v258 = *(void *)(a2 + 96);
              a1[11] = *(void *)(a2 + 88);
              a1[12] = v258;
              uint64_t v260 = *(void **)(a2 + 104);
              uint64_t v259 = *(void *)(a2 + 112);
              a1[13] = (uint64_t)v260;
              a1[14] = v259;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v261 = v260;
            }
            uint64_t v262 = (uint64_t *)(a2 + 120);
            unint64_t v263 = *(void *)(a2 + 128);
            if (v263 >= 0x11)
            {
              a1[15] = *v262;
              a1[16] = v263;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 15) = *(_OWORD *)v262;
            }
            *((unsigned char *)a1 + 136) = *(unsigned char *)(a2 + 136);
            goto LABEL_215;
          case 2u:
            uint64_t v194 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v194;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_215;
          case 3u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v195 = *(void *)(a2 + 24);
            a1[2] = *(void *)(a2 + 16);
            a1[3] = v195;
            *((unsigned char *)a1 + 32) = *(unsigned char *)(a2 + 32);
            long long v196 = (int *)type metadata accessor for FeedWeather(0);
            uint64_t v197 = v196[7];
            long long v198 = (char *)a1 + v197;
            uint64_t v199 = a2 + v197;
            uint64_t v200 = sub_1C151E2BC();
            long long v201 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v200 - 8) + 16);
            swift_bridgeObjectRetain();
            v201(v198, v199, v200);
            *((unsigned char *)a1 + v196[8]) = *(unsigned char *)(a2 + v196[8]);
            uint64_t v202 = v196[9];
            unint64_t v203 = (char *)a1 + v202;
            uint64_t v204 = a2 + v202;
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
            uint64_t v206 = v205;
            long long v207 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v205 - 8) + 16);
            v207(v203, v204, v205);
            long long v208 = (int *)type metadata accessor for FeedWeather.Temperature(0);
            v207(&v203[v208[5]], v204 + v208[5], v206);
            v207(&v203[v208[6]], v204 + v208[6], v206);
            v207(&v203[v208[7]], v204 + v208[7], v206);
            uint64_t v209 = v196[10];
            long long v210 = (uint64_t *)((char *)a1 + v209);
            long long v211 = (void *)(a2 + v209);
            uint64_t v212 = v211[1];
            *long long v210 = *v211;
            v210[1] = v212;
            swift_bridgeObjectRetain();
            goto LABEL_215;
          case 4u:
            uint64_t v213 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v213;
            uint64_t v214 = *(void *)(a2 + 24);
            a1[2] = *(void *)(a2 + 16);
            a1[3] = v214;
            uint64_t v215 = *(void *)(a2 + 40);
            a1[4] = *(void *)(a2 + 32);
            a1[5] = v215;
            *((_WORD *)a1 + 24) = *(_WORD *)(a2 + 48);
            *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 56);
            uint64_t v216 = *(void *)(a2 + 80);
            a1[9] = *(void *)(a2 + 72);
            a1[10] = v216;
            uint64_t v217 = *(void *)(a2 + 96);
            a1[11] = *(void *)(a2 + 88);
            a1[12] = v217;
            a1[13] = *(void *)(a2 + 104);
            *((unsigned char *)a1 + 112) = *(unsigned char *)(a2 + 112);
            uint64_t v218 = *(void *)(a2 + 128);
            a1[15] = *(void *)(a2 + 120);
            a1[16] = v218;
            *((unsigned char *)a1 + 136) = *(unsigned char *)(a2 + 136);
            uint64_t v219 = *(void *)(a2 + 152);
            a1[18] = *(void *)(a2 + 144);
            a1[19] = v219;
            uint64_t v220 = *(void *)(a2 + 168);
            a1[20] = *(void *)(a2 + 160);
            a1[21] = v220;
            *((unsigned char *)a1 + 184) = *(unsigned char *)(a2 + 184);
            a1[22] = *(void *)(a2 + 176);
            uint64_t v221 = *(void *)(a2 + 200);
            a1[24] = *(void *)(a2 + 192);
            a1[25] = v221;
            *((unsigned char *)a1 + 224) = *(unsigned char *)(a2 + 224);
            uint64_t v222 = *(void *)(a2 + 216);
            a1[26] = *(void *)(a2 + 208);
            a1[27] = v222;
            __dstc = (uint64_t *)(a2 + 232);
            unint64_t v223 = *(void *)(a2 + 240);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v223 >= 0x11)
            {
              a1[29] = *__dstc;
              a1[30] = v223;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 29) = *(_OWORD *)__dstc;
            }
            goto LABEL_215;
          case 5u:
            uint64_t v224 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v224;
            a1[2] = *(void *)(a2 + 16);
            *((unsigned char *)a1 + 24) = *(unsigned char *)(a2 + 24);
            uint64_t v225 = *(void *)(a2 + 40);
            a1[4] = *(void *)(a2 + 32);
            a1[5] = v225;
            a1[6] = *(void *)(a2 + 48);
            *((unsigned char *)a1 + 56) = *(unsigned char *)(a2 + 56);
            v479 = (int *)type metadata accessor for FeedHeadline(0);
            uint64_t v226 = v479[10];
            uint64_t v227 = (char *)a1 + v226;
            uint64_t v228 = a2 + v226;
            *uint64_t v227 = *(unsigned char *)(a2 + v226);
            v227[1] = *(unsigned char *)(a2 + v226 + 1);
            __dstd = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v229 = __dstd[6];
            v466 = &v227[v229];
            int v230 = (char *)(v228 + v229);
            uint64_t v231 = (int *)type metadata accessor for SharedItem();
            uint64_t v461 = *((void *)v231 - 1);
            long long v232 = *(unsigned int (**)(char *, uint64_t, int *))(v461 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v232(v230, 1, v231))
            {
              uint64_t v233 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v466, v230, *(void *)(*(void *)(v233 - 8) + 64));
            }
            else
            {
              uint64_t v294 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v294 - 8) + 16))(v466, v230, v294);
              v466[v231[5]] = v230[v231[5]];
              uint64_t v295 = v231[6];
              v296 = *(void **)&v230[v295];
              *(void *)&v466[v295] = v296;
              uint64_t v297 = v231[7];
              v470 = &v466[v297];
              v459 = &v230[v297];
              uint64_t v298 = sub_1C1515FDC();
              char v299 = *(void (**)(char *, char *, uint64_t))(*(void *)(v298 - 8) + 16);
              id v300 = v296;
              v299(v470, v459, v298);
              (*(void (**)(char *, void, uint64_t, int *))(v461 + 56))(v466, 0, 1, v231);
            }
            v227[__dstd[7]] = *(unsigned char *)(v228 + __dstd[7]);
            v227[__dstd[8]] = *(unsigned char *)(v228 + __dstd[8]);
            v227[__dstd[9]] = *(unsigned char *)(v228 + __dstd[9]);
            v227[__dstd[10]] = *(unsigned char *)(v228 + __dstd[10]);
            uint64_t v301 = v479[11];
            long long v302 = (char *)a1 + v301;
            long long v303 = (const void *)(a2 + v301);
            uint64_t v304 = sub_1C151D2DC();
            uint64_t v305 = *(void *)(v304 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v305 + 48))(v303, 1, v304))
            {
              sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
              memcpy(v302, v303, *(void *)(*(void *)(v306 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, const void *, uint64_t))(v305 + 16))(v302, v303, v304);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v305 + 56))(v302, 0, 1, v304);
            }
            uint64_t v319 = v479[12];
            long long v320 = (uint64_t *)((char *)a1 + v319);
            long long v321 = (void *)(a2 + v319);
            unint64_t v322 = v321[1];
            if (v322 >= 0x11)
            {
              *long long v320 = *v321;
              v320[1] = v322;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)long long v320 = *(_OWORD *)v321;
            }
            uint64_t v323 = v479[13];
            unint64_t v324 = *(void *)(a2 + v323);
            if (v324 >= 2)
            {
              if (v324 == 2)
              {
                *(uint64_t *)((char *)a1 + v323) = 2;
              }
              else
              {
                *(uint64_t *)((char *)a1 + v323) = v324;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(uint64_t *)((char *)a1 + v323) = v324;
            }
            uint64_t v357 = v479[14];
            v358 = *(void **)(a2 + v357);
            *(uint64_t *)((char *)a1 + v357) = (uint64_t)v358;
            id v359 = v358;
            goto LABEL_215;
          case 6u:
            uint64_t v234 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v234;
            *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
            uint64_t v235 = (uint64_t *)(a2 + 24);
            unint64_t v236 = *(void *)(a2 + 32);
            if (v236 >= 0x11)
            {
              a1[3] = *v235;
              a1[4] = v236;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 3) = *(_OWORD *)v235;
            }
            uint64_t v264 = *(void *)(a2 + 48);
            a1[5] = *(void *)(a2 + 40);
            a1[6] = v264;
            uint64_t v265 = (int *)type metadata accessor for FeedWebEmbed();
            uint64_t v266 = v265[8];
            uint64_t v267 = (char *)a1 + v266;
            uint64_t v268 = a2 + v266;
            uint64_t v269 = sub_1C1515FDC();
            uint64_t v270 = *(void *)(v269 - 8);
            uint64_t v271 = *(void (**)(char *, uint64_t, void *))(v270 + 16);
            uint64_t v272 = (void *)v269;
            swift_bridgeObjectRetain();
            v271(v267, v268, v272);
            uint64_t v273 = v265[9];
            uint64_t v274 = (char *)a1 + v273;
            uint64_t v275 = (const void *)(a2 + v273);
            __dste = v272;
            v467 = (void (*)(char *, char *, void *))v271;
            if ((*(unsigned int (**)(uint64_t, uint64_t, void *))(v270 + 48))(a2 + v273, 1, v272))
            {
              sub_1C0AF9C38(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
              memcpy(v274, v275, *(void *)(*(void *)(v276 - 8) + 64));
            }
            else
            {
              v271(v274, (uint64_t)v275, v272);
              (*(void (**)(char *, void, uint64_t, void *))(v270 + 56))(v274, 0, 1, v272);
            }
            *(uint64_t *)((char *)a1 + v265[10]) = *(void *)(a2 + v265[10]);
            *(uint64_t *)((char *)a1 + v265[11]) = *(void *)(a2 + v265[11]);
            v480 = v265;
            uint64_t v307 = v265[12];
            long long v308 = (uint64_t *)((char *)a1 + v307);
            long long v309 = (void *)(a2 + v307);
            uint64_t v310 = type metadata accessor for FeedHeadline(0);
            uint64_t v311 = *(void *)(v310 - 8);
            long long v312 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v311 + 48);
            swift_retain();
            swift_retain();
            if (v312(v309, 1, v310))
            {
              sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
              memcpy(v308, v309, *(void *)(*(void *)(v313 - 8) + 64));
            }
            else
            {
              uint64_t v325 = v309[1];
              *long long v308 = *v309;
              v308[1] = v325;
              v308[2] = v309[2];
              *((unsigned char *)v308 + 24) = *((unsigned char *)v309 + 24);
              uint64_t v456 = v311;
              uint64_t v457 = v309[5];
              v308[4] = v309[4];
              v308[5] = v457;
              v308[6] = v309[6];
              *((unsigned char *)v308 + 56) = *((unsigned char *)v309 + 56);
              v462 = (int *)v310;
              uint64_t v326 = *(int *)(v310 + 40);
              v327 = (char *)v308 + v326;
              v328 = (char *)v309 + v326;
              unsigned char *v327 = *((unsigned char *)v309 + v326);
              v327[1] = *((unsigned char *)v309 + v326 + 1);
              v460 = (int *)type metadata accessor for FeedHeadline.State(0);
              uint64_t v329 = v460[6];
              v455 = &v327[v329];
              v330 = &v328[v329];
              v331 = (int *)type metadata accessor for SharedItem();
              uint64_t v454 = *((void *)v331 - 1);
              v332 = *(unsigned int (**)(char *, uint64_t, int *))(v454 + 48);
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              swift_unknownObjectRetain();
              if (v332(v330, 1, v331))
              {
                uint64_t v333 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(v455, v330, *(void *)(*(void *)(v333 - 8) + 64));
              }
              else
              {
                uint64_t v360 = sub_1C151631C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v360 - 8) + 16))(v455, v330, v360);
                v455[v331[5]] = v330[v331[5]];
                uint64_t v361 = v331[6];
                v362 = *(void **)&v330[v361];
                *(void *)&v455[v361] = v362;
                uint64_t v363 = v331[7];
                v364 = &v455[v363];
                v365 = &v330[v363];
                id v366 = v362;
                v467(v364, v365, __dste);
                (*(void (**)(char *, void, uint64_t, int *))(v454 + 56))(v455, 0, 1, v331);
              }
              v327[v460[7]] = v328[v460[7]];
              v327[v460[8]] = v328[v460[8]];
              v327[v460[9]] = v328[v460[9]];
              v327[v460[10]] = v328[v460[10]];
              uint64_t v367 = *(int *)(v310 + 44);
              v368 = (char *)v308 + v367;
              v369 = (char *)v309 + v367;
              uint64_t v370 = sub_1C151D2DC();
              uint64_t v371 = *(void *)(v370 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v371 + 48))(v369, 1, v370))
              {
                sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
                memcpy(v368, v369, *(void *)(*(void *)(v372 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v371 + 16))(v368, v369, v370);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v371 + 56))(v368, 0, 1, v370);
              }
              uint64_t v373 = v462[12];
              v374 = (void *)((char *)v308 + v373);
              v375 = (void *)((char *)v309 + v373);
              unint64_t v376 = v375[1];
              if (v376 >= 0x11)
              {
                void *v374 = *v375;
                v374[1] = v376;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)v374 = *(_OWORD *)v375;
              }
              uint64_t v377 = v462[13];
              unint64_t v378 = *(void *)((char *)v309 + v377);
              if (v378 >= 2)
              {
                if (v378 == 2)
                {
                  *(void *)((char *)v308 + v377) = 2;
                }
                else
                {
                  *(void *)((char *)v308 + v377) = v378;
                  swift_unknownObjectRetain();
                }
              }
              else
              {
                *(void *)((char *)v308 + v377) = v378;
              }
              uint64_t v396 = v462[14];
              v397 = *(void **)((char *)v309 + v396);
              *(void *)((char *)v308 + v396) = v397;
              v398 = *(void (**)(void *, void, uint64_t, int *))(v456 + 56);
              id v399 = v397;
              v398(v308, 0, 1, v462);
            }
            uint64_t v400 = v480[13];
            v401 = (uint64_t *)((char *)a1 + v400);
            v402 = (uint64_t *)(a2 + v400);
            uint64_t v403 = type metadata accessor for WebEmbedDataVisualization();
            uint64_t v404 = *(void *)(v403 - 8);
            if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v404 + 48))(v402, 1, v403))
            {
              sub_1C0AF9C38(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
              memcpy(v401, v402, *(void *)(*(void *)(v405 - 8) + 64));
              v406 = v480;
            }
            else
            {
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              uint64_t v408 = *v402;
              if (EnumCaseMultiPayload == 1)
              {
                uint64_t v409 = v402[1];
                void *v401 = v408;
                v401[1] = v409;
                uint64_t v410 = type metadata accessor for GenericDataVisualization();
                uint64_t v411 = *(int *)(v410 + 20);
                v412 = (char *)v401 + v411;
                v413 = (char *)v402 + v411;
                swift_bridgeObjectRetain();
                v467(v412, v413, __dste);
                *(void *)((char *)v401 + *(int *)(v410 + 24)) = *(uint64_t *)((char *)v402 + *(int *)(v410 + 24));
                swift_bridgeObjectRetain();
              }
              else
              {
                void *v401 = v408;
                swift_retain();
              }
              v406 = v480;
              swift_storeEnumTagMultiPayload();
              (*(void (**)(void *, void, uint64_t, uint64_t))(v404 + 56))(v401, 0, 1, v403);
            }
            *((unsigned char *)a1 + v406[14]) = *(unsigned char *)(a2 + v406[14]);
            swift_storeEnumTagMultiPayload();
            goto LABEL_216;
          case 7u:
            uint64_t v237 = *(void **)a2;
            *a1 = *(void *)a2;
            id v238 = v237;
            goto LABEL_215;
          case 8u:
            uint64_t v239 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v239;
            uint64_t v240 = *(void *)(a2 + 24);
            a1[2] = *(void *)(a2 + 16);
            a1[3] = v240;
            *((unsigned char *)a1 + 32) = *(unsigned char *)(a2 + 32);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            goto LABEL_215;
          case 9u:
            uint64_t v241 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v241;
            *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
            uint64_t v242 = (uint64_t *)(a2 + 24);
            unint64_t v243 = *(void *)(a2 + 32);
            if (v243 >= 0x11)
            {
              a1[3] = *v242;
              a1[4] = v243;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 3) = *(_OWORD *)v242;
            }
            uint64_t v277 = *(void *)(a2 + 48);
            a1[5] = *(void *)(a2 + 40);
            a1[6] = v277;
            uint64_t v278 = *(void **)(a2 + 64);
            a1[7] = *(void *)(a2 + 56);
            a1[8] = (uint64_t)v278;
            *((unsigned char *)a1 + 72) = *(unsigned char *)(a2 + 72);
            a1[10] = *(void *)(a2 + 80);
            uint64_t v279 = *(void *)(a2 + 112);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            id v280 = v278;
            swift_bridgeObjectRetain();
            if (v279)
            {
              uint64_t v281 = *(void *)(a2 + 120);
              a1[14] = v279;
              a1[15] = v281;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v279 - 8))((uint64_t)(a1 + 11), a2 + 88, v279);
            }
            else
            {
              long long v314 = *(_OWORD *)(a2 + 104);
              *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 88);
              *(_OWORD *)(a1 + 13) = v314;
              a1[15] = *(void *)(a2 + 120);
            }
            long long v315 = a1 + 16;
            long long v316 = (_OWORD *)(a2 + 128);
            uint64_t v317 = *(void *)(a2 + 152);
            if (v317)
            {
              uint64_t v318 = *(void *)(a2 + 160);
              a1[19] = v317;
              a1[20] = v318;
              (**(void (***)(_OWORD *, _OWORD *))(v317 - 8))(v315, v316);
            }
            else
            {
              long long v334 = *(_OWORD *)(a2 + 144);
              *long long v315 = *v316;
              *((_OWORD *)a1 + 9) = v334;
              a1[20] = *(void *)(a2 + 160);
            }
            v335 = a1 + 21;
            v336 = (_OWORD *)(a2 + 168);
            uint64_t v337 = *(void *)(a2 + 192);
            if (v337)
            {
              uint64_t v338 = *(void *)(a2 + 200);
              a1[24] = v337;
              a1[25] = v338;
              (**(void (***)(_OWORD *, _OWORD *))(v337 - 8))(v335, v336);
            }
            else
            {
              long long v339 = *(_OWORD *)(a2 + 184);
              _OWORD *v335 = *v336;
              *(_OWORD *)(a1 + 23) = v339;
              a1[25] = *(void *)(a2 + 200);
            }
            goto LABEL_215;
          case 0xAu:
            uint64_t v244 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v244;
            *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
            uint64_t v245 = (uint64_t *)(a2 + 24);
            unint64_t v246 = *(void *)(a2 + 32);
            if (v246 >= 0x11)
            {
              a1[3] = *v245;
              a1[4] = v246;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 3) = *(_OWORD *)v245;
            }
            uint64_t v282 = *(void *)(a2 + 48);
            a1[5] = *(void *)(a2 + 40);
            a1[6] = v282;
            a1[7] = *(void *)(a2 + 56);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            goto LABEL_215;
          case 0xBu:
            uint64_t v247 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v247;
            *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
            char v248 = (uint64_t *)(a2 + 24);
            unint64_t v249 = *(void *)(a2 + 32);
            if (v249 >= 0x11)
            {
              a1[3] = *v248;
              a1[4] = v249;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 3) = *(_OWORD *)v248;
            }
            break;
          case 0xCu:
            uint64_t v250 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v250;
            uint64_t v251 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
            uint64_t v252 = (char *)a1 + v251;
            uint64_t v253 = a2 + v251;
            uint64_t v254 = sub_1C151D6DC();
            uint64_t v255 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v254 - 8) + 16);
            swift_bridgeObjectRetain();
            v255(v252, v253, v254);
            goto LABEL_215;
          default:
            uint64_t v69 = *(void **)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = (uint64_t)v69;
            *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
            swift_unknownObjectRetain();
            id v70 = v69;
            goto LABEL_215;
        }
        break;
      case 0x12u:
        uint64_t v71 = *(void *)(a2 + 24);
        a1[3] = v71;
        (**(void (***)(uint64_t *, uint64_t))(v71 - 8))(a1, a2);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x13u:
        *a1 = *(void *)a2;
        uint64_t v22 = *(void *)(a2 + 8);
        swift_retain();
        if (v22 == 1)
        {
          long long v23 = *(_OWORD *)(a2 + 120);
          *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 15) = v23;
          *(_OWORD *)((char *)a1 + 129) = *(_OWORD *)(a2 + 129);
          long long v24 = *(_OWORD *)(a2 + 56);
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 40);
          *(_OWORD *)(a1 + 7) = v24;
          long long v25 = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 11) = v25;
          long long v26 = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
          *(_OWORD *)(a1 + 3) = v26;
        }
        else
        {
          uint64_t v73 = *(void *)(a2 + 16);
          uint64_t v74 = *(void *)(a2 + 24);
          a1[1] = v22;
          a1[2] = v73;
          uint64_t v75 = *(void *)(a2 + 32);
          a1[3] = v74;
          a1[4] = v75;
          *((unsigned char *)a1 + 40) = *(unsigned char *)(a2 + 40);
          uint64_t v76 = *(void *)(a2 + 56);
          a1[6] = *(void *)(a2 + 48);
          a1[7] = v76;
          int v77 = *(unsigned __int8 *)(a2 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v77 == 255)
          {
            *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
            *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
          }
          else
          {
            uint64_t v79 = *(void *)(a2 + 64);
            uint64_t v80 = *(void *)(a2 + 72);
            sub_1BFE94AB4(v79, v80, v77 & 1);
            a1[8] = v79;
            a1[9] = v80;
            *((unsigned char *)a1 + 80) = v77 & 1;
          }
          int v81 = *(unsigned __int8 *)(a2 + 120);
          if (v81 == 255)
          {
            long long v82 = *(_OWORD *)(a2 + 104);
            *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 13) = v82;
            *((unsigned char *)a1 + 120) = *(unsigned char *)(a2 + 120);
          }
          else
          {
            char v83 = v81 & 1;
            uint64_t v84 = *(void *)(a2 + 88);
            uint64_t v85 = *(void *)(a2 + 96);
            uint64_t v86 = *(void *)(a2 + 104);
            uint64_t v87 = *(void *)(a2 + 112);
            sub_1C00F65A8(v84, v85, v86, v87, v81 & 1);
            a1[11] = v84;
            a1[12] = v85;
            a1[13] = v86;
            a1[14] = v87;
            *((unsigned char *)a1 + 120) = v83;
          }
          int v88 = *(unsigned __int8 *)(a2 + 144);
          if (v88 == 255)
          {
            *((_OWORD *)a1 + 8) = *(_OWORD *)(a2 + 128);
            *((unsigned char *)a1 + 144) = *(unsigned char *)(a2 + 144);
          }
          else
          {
            char v89 = v88 & 1;
            uint64_t v90 = *(void *)(a2 + 128);
            uint64_t v91 = *(void *)(a2 + 136);
            sub_1BFE94AB4(v90, v91, v88 & 1);
            a1[16] = v90;
            a1[17] = v91;
            *((unsigned char *)a1 + 144) = v89;
          }
        }
        goto LABEL_216;
      case 0x14u:
        uint64_t v27 = *(void **)a2;
        uint64_t v28 = *(void **)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = (uint64_t)v28;
        id v29 = v27;
        id v30 = v28;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x17u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v31 = *(void *)(a2 + 16);
        a1[1] = *(void *)(a2 + 8);
        a1[2] = v31;
        uint64_t v32 = *(void *)(a2 + 32);
        a1[3] = *(void *)(a2 + 24);
        a1[4] = v32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x18u:
        type metadata accessor for FormatPropertyDefinition(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v92 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v92;
            uint64_t v93 = *(void *)(a2 + 24);
            a1[2] = *(void *)(a2 + 16);
            a1[3] = v93;
            uint64_t v94 = *(void *)(a2 + 40);
            a1[4] = *(void *)(a2 + 32);
            a1[5] = v94;
            uint64_t v95 = *(void *)(a2 + 48);
            uint64_t v96 = *(void *)(a2 + 56);
            *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
            uint64_t v97 = *(void *)(a2 + 72);
            a1[6] = v95;
            a1[7] = v96;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((~v97 & 0xF000000000000007) != 0) {
              swift_retain();
            }
            a1[9] = v97;
            *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
            a1[11] = *(void *)(a2 + 88);
            uint64_t v98 = &qword_1EB88E9B8;
            uint64_t v99 = sub_1C003F2E8;
            goto LABEL_75;
          case 2u:
            uint64_t v100 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v100;
            uint64_t v101 = *(void *)(a2 + 24);
            a1[2] = *(void *)(a2 + 16);
            a1[3] = v101;
            uint64_t v102 = *(void *)(a2 + 40);
            a1[4] = *(void *)(a2 + 32);
            a1[5] = v102;
            uint64_t v103 = *(void *)(a2 + 56);
            a1[6] = *(void *)(a2 + 48);
            a1[7] = v103;
            *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
            sub_1BFF71B30();
            uint64_t v105 = v104[13];
            v469 = (char *)a1 + v105;
            __dsta = v104;
            uint64_t v106 = (const void *)(a2 + v105);
            uint64_t v107 = sub_1C151631C();
            uint64_t v108 = *(void *)(v107 - 8);
            v463 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v108 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (!v463(v106, 1, v107)) {
              goto LABEL_96;
            }
            long long v109 = &qword_1EB871180;
            long long v110 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
            goto LABEL_62;
          case 3u:
            uint64_t v111 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v111;
            uint64_t v112 = *(void *)(a2 + 24);
            a1[2] = *(void *)(a2 + 16);
            a1[3] = v112;
            uint64_t v113 = *(void *)(a2 + 40);
            a1[4] = *(void *)(a2 + 32);
            a1[5] = v113;
            uint64_t v114 = *(void *)(a2 + 56);
            a1[6] = *(void *)(a2 + 48);
            a1[7] = v114;
            uint64_t v115 = *(void *)(a2 + 72);
            a1[8] = *(void *)(a2 + 64);
            a1[9] = v115;
            *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
            uint64_t v116 = *(void *)(a2 + 96);
            a1[11] = *(void *)(a2 + 88);
            a1[12] = v116;
            a1[13] = *(void *)(a2 + 104);
            *((unsigned char *)a1 + 112) = *(unsigned char *)(a2 + 112);
            a1[15] = *(void *)(a2 + 120);
            uint64_t v117 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
            __dstb = (char *)a1 + v117;
            long long v118 = (const void *)(a2 + v117);
            uint64_t v119 = sub_1C1518CDC();
            uint64_t v120 = *(void *)(v119 - 8);
            v458 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v120 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v458(v118, 1, v119))
            {
              sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
              size_t v122 = *(void *)(*(void *)(v121 - 8) + 64);
              long long v123 = __dstb;
              long long v124 = v118;
              goto LABEL_59;
            }
            (*(void (**)(char *, const void *, uint64_t))(v120 + 16))(__dstb, v118, v119);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(__dstb, 0, 1, v119);
            break;
          case 4u:
            uint64_t v125 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v125;
            uint64_t v126 = *(void *)(a2 + 24);
            a1[2] = *(void *)(a2 + 16);
            a1[3] = v126;
            uint64_t v127 = *(void *)(a2 + 40);
            a1[4] = *(void *)(a2 + 32);
            a1[5] = v127;
            uint64_t v128 = *(void *)(a2 + 56);
            a1[6] = *(void *)(a2 + 48);
            a1[7] = v128;
            *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
            uint64_t v129 = *(void *)(a2 + 72);
            *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
            a1[9] = v129;
            *((unsigned char *)a1 + 81) = *(unsigned char *)(a2 + 81);
            a1[11] = *(void *)(a2 + 88);
            sub_1C0AF9C9C(0, &qword_1EB88E990, (void (*)(void))sub_1C0092008);
            goto LABEL_55;
          case 5u:
            uint64_t v131 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v131;
            uint64_t v132 = *(void *)(a2 + 24);
            a1[2] = *(void *)(a2 + 16);
            a1[3] = v132;
            uint64_t v133 = *(void *)(a2 + 40);
            a1[4] = *(void *)(a2 + 32);
            a1[5] = v133;
            uint64_t v134 = *(void *)(a2 + 56);
            a1[6] = *(void *)(a2 + 48);
            a1[7] = v134;
            *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
            uint64_t v135 = *(void *)(a2 + 72);
            *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
            a1[9] = v135;
            *((unsigned char *)a1 + 81) = *(unsigned char *)(a2 + 81);
            a1[11] = *(void *)(a2 + 88);
            sub_1BFF71924(0, &qword_1EB88E9D0);
LABEL_55:
            uint64_t v136 = *(int *)(v130 + 64);
            __dst = (char *)a1 + v136;
            uint64_t v42 = (const void *)(a2 + v136);
            uint64_t v39 = sub_1C1518CDC();
            uint64_t v40 = *(void *)(v39 - 8);
            long long v137 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (!v137(v42, 1, v39)) {
              goto LABEL_56;
            }
            goto LABEL_58;
          case 6u:
            uint64_t v138 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v138;
            uint64_t v139 = *(void *)(a2 + 24);
            a1[2] = *(void *)(a2 + 16);
            a1[3] = v139;
            uint64_t v140 = *(void *)(a2 + 40);
            a1[4] = *(void *)(a2 + 32);
            a1[5] = v140;
            uint64_t v141 = *(void *)(a2 + 56);
            a1[6] = *(void *)(a2 + 48);
            a1[7] = v141;
            *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
            uint64_t v142 = *(void *)(a2 + 80);
            a1[9] = *(void *)(a2 + 72);
            a1[10] = v142;
            *((unsigned char *)a1 + 88) = *(unsigned char *)(a2 + 88);
            a1[12] = *(void *)(a2 + 96);
            sub_1BFF71924(0, &qword_1EB88E9C0);
            uint64_t v144 = *(int *)(v143 + 64);
            __dst = (char *)a1 + v144;
            uint64_t v42 = (const void *)(a2 + v144);
            uint64_t v145 = sub_1C1518CDC();
            uint64_t v146 = *(void *)(v145 - 8);
            v464 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v146 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v464(v42, 1, v145)) {
              goto LABEL_58;
            }
            (*(void (**)(char *, const void *, uint64_t))(v146 + 16))(__dst, v42, v145);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v146 + 56))(__dst, 0, 1, v145);
            break;
          case 7u:
            uint64_t v148 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v148;
            uint64_t v149 = *(void *)(a2 + 24);
            a1[2] = *(void *)(a2 + 16);
            a1[3] = v149;
            uint64_t v150 = *(void *)(a2 + 40);
            a1[4] = *(void *)(a2 + 32);
            a1[5] = v150;
            uint64_t v151 = *(void *)(a2 + 56);
            a1[6] = *(void *)(a2 + 48);
            a1[7] = v151;
            *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
            sub_1BFF719C0();
            uint64_t v153 = v152[13];
            v469 = (char *)a1 + v153;
            __dsta = v152;
            uint64_t v106 = (const void *)(a2 + v153);
            uint64_t v107 = sub_1C1515FDC();
            uint64_t v108 = *(void *)(v107 - 8);
            v465 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v108 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v465(v106, 1, v107))
            {
              long long v109 = &qword_1EB8948A0;
              long long v110 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
LABEL_62:
              sub_1C0AF9C38(0, (unint64_t *)v109, v110, MEMORY[0x1E4FBB718]);
              memcpy(v469, v106, *(void *)(*(void *)(v154 - 8) + 64));
            }
            else
            {
LABEL_96:
              (*(void (**)(char *, const void *, uint64_t))(v108 + 16))(v469, v106, v107);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v469, 0, 1, v107);
            }
            *((unsigned char *)a1 + __dsta[14]) = *(unsigned char *)(a2 + __dsta[14]);
            *(uint64_t *)((char *)a1 + __dsta[15]) = *(void *)(a2 + __dsta[15]);
            uint64_t v256 = __dsta[16];
            long long v181 = (char *)a1 + v256;
            long long v182 = (const void *)(a2 + v256);
            uint64_t v183 = sub_1C1518CDC();
            uint64_t v184 = *(void *)(v183 - 8);
            uint64_t v257 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v184 + 48);
            swift_bridgeObjectRetain();
            if (!v257(v182, 1, v183)) {
              goto LABEL_98;
            }
            goto LABEL_76;
          case 8u:
            uint64_t v155 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v155;
            uint64_t v156 = *(void *)(a2 + 24);
            a1[2] = *(void *)(a2 + 16);
            a1[3] = v156;
            uint64_t v157 = *(void *)(a2 + 40);
            a1[4] = *(void *)(a2 + 32);
            a1[5] = v157;
            uint64_t v158 = *(void *)(a2 + 48);
            uint64_t v159 = *(void *)(a2 + 56);
            *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
            uint64_t v160 = *(void *)(a2 + 72);
            a1[6] = v158;
            a1[7] = v159;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((~v160 & 0xF000000000000007) != 0) {
              swift_retain();
            }
            a1[9] = v160;
            *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
            a1[11] = *(void *)(a2 + 88);
            uint64_t v98 = &qword_1EB88E9A0;
            uint64_t v99 = sub_1C0036630;
            goto LABEL_75;
          case 9u:
            uint64_t v161 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v161;
            uint64_t v162 = *(void *)(a2 + 24);
            a1[2] = *(void *)(a2 + 16);
            a1[3] = v162;
            uint64_t v163 = *(void *)(a2 + 40);
            a1[4] = *(void *)(a2 + 32);
            a1[5] = v163;
            uint64_t v164 = *(void *)(a2 + 48);
            uint64_t v165 = *(void *)(a2 + 56);
            *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
            uint64_t v166 = *(void *)(a2 + 72);
            a1[6] = v164;
            a1[7] = v165;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((~v166 & 0xF000000000000007) != 0) {
              swift_retain();
            }
            a1[9] = v166;
            *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
            a1[11] = *(void *)(a2 + 88);
            uint64_t v98 = &qword_1EB88E998;
            uint64_t v99 = sub_1C00738F0;
            goto LABEL_75;
          case 0xAu:
            uint64_t v167 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v167;
            uint64_t v168 = *(void *)(a2 + 24);
            a1[2] = *(void *)(a2 + 16);
            a1[3] = v168;
            uint64_t v169 = *(void *)(a2 + 40);
            a1[4] = *(void *)(a2 + 32);
            a1[5] = v169;
            uint64_t v170 = *(void *)(a2 + 48);
            uint64_t v171 = *(void *)(a2 + 56);
            *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
            uint64_t v172 = *(void *)(a2 + 72);
            a1[6] = v170;
            a1[7] = v171;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((~v172 & 0xF000000000000007) != 0) {
              swift_retain();
            }
            a1[9] = v172;
            *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
            a1[11] = *(void *)(a2 + 88);
            uint64_t v98 = &qword_1EB88E9B0;
            uint64_t v99 = sub_1C0084C58;
            goto LABEL_75;
          case 0xBu:
            uint64_t v173 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v173;
            uint64_t v174 = *(void *)(a2 + 24);
            a1[2] = *(void *)(a2 + 16);
            a1[3] = v174;
            uint64_t v175 = *(void *)(a2 + 40);
            a1[4] = *(void *)(a2 + 32);
            a1[5] = v175;
            uint64_t v176 = *(void *)(a2 + 48);
            uint64_t v177 = *(void *)(a2 + 56);
            *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
            uint64_t v178 = *(void *)(a2 + 72);
            a1[6] = v176;
            a1[7] = v177;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((~v178 & 0xF000000000000007) != 0) {
              swift_retain();
            }
            a1[9] = v178;
            *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
            a1[11] = *(void *)(a2 + 88);
            uint64_t v98 = &qword_1EB88E9A8;
            uint64_t v99 = sub_1C006F9DC;
LABEL_75:
            sub_1C0AF9C9C(0, v98, (void (*)(void))v99);
            uint64_t v180 = *(int *)(v179 + 64);
            long long v181 = (char *)a1 + v180;
            long long v182 = (const void *)(a2 + v180);
            uint64_t v183 = sub_1C1518CDC();
            uint64_t v184 = *(void *)(v183 - 8);
            uint64_t v185 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v184 + 48);
            swift_bridgeObjectRetain();
            if (v185(v182, 1, v183))
            {
LABEL_76:
              sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
              memcpy(v181, v182, *(void *)(*(void *)(v186 - 8) + 64));
            }
            else
            {
LABEL_98:
              (*(void (**)(char *, const void *, uint64_t))(v184 + 16))(v181, v182, v183);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v184 + 56))(v181, 0, 1, v183);
            }
            break;
          default:
            uint64_t v33 = *(void *)(a2 + 8);
            *a1 = *(void *)a2;
            a1[1] = v33;
            uint64_t v34 = *(void *)(a2 + 24);
            a1[2] = *(void *)(a2 + 16);
            a1[3] = v34;
            uint64_t v35 = *(void *)(a2 + 40);
            a1[4] = *(void *)(a2 + 32);
            a1[5] = v35;
            uint64_t v36 = *(void *)(a2 + 56);
            a1[6] = *(void *)(a2 + 48);
            a1[7] = v36;
            *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
            *((unsigned char *)a1 + 65) = *(unsigned char *)(a2 + 65);
            *((unsigned char *)a1 + 66) = *(unsigned char *)(a2 + 66);
            a1[9] = *(void *)(a2 + 72);
            sub_1BFF71924(0, &qword_1EB88E9C8);
            uint64_t v38 = *(int *)(v37 + 64);
            v468 = (void *)(a2 + v38);
            __dst = (char *)a1 + v38;
            uint64_t v39 = sub_1C1518CDC();
            uint64_t v40 = *(void *)(v39 - 8);
            char v41 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v40 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v42 = v468;
            swift_bridgeObjectRetain();
            if (v41(v468, 1, v39))
            {
LABEL_58:
              sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
              size_t v122 = *(void *)(*(void *)(v147 - 8) + 64);
              long long v123 = __dst;
              long long v124 = v42;
LABEL_59:
              memcpy(v123, v124, v122);
            }
            else
            {
LABEL_56:
              (*(void (**)(char *, const void *, uint64_t))(v40 + 16))(__dst, v42, v39);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(__dst, 0, 1, v39);
            }
            break;
        }
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x1Au:
        uint64_t v43 = sub_1C151CA7C();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(a1, a2, v43);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x1Cu:
        uint64_t v72 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v72;
        *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x1Fu:
        uint64_t v44 = *(void *)a2;
        id v45 = *(id *)a2;
        *a1 = v44;
        swift_storeEnumTagMultiPayload();
        return a1;
      default:
        memcpy(a1, (const void *)a2, *(void *)(v6 + 64));
        return a1;
    }
    uint64_t v283 = *(void *)(a2 + 48);
    a1[5] = *(void *)(a2 + 40);
    a1[6] = v283;
    uint64_t v284 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v285 = (char *)a1 + v284;
    uint64_t v286 = a2 + v284;
    *(uint64_t *)((char *)a1 + v284) = *(void *)(a2 + v284);
    uint64_t v287 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    uint64_t v288 = &v285[v287];
    uint64_t v289 = (void *)(v286 + v287);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v344 = type metadata accessor for PuzzleStatisticValue(0);
        int v345 = swift_getEnumCaseMultiPayload();
        if (v345 == 5)
        {
          uint64_t v346 = type metadata accessor for PuzzleStreak();
          uint64_t v347 = *(void *)(v346 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v347 + 48))(v289, 1, v346))
          {
LABEL_187:
            sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v288, v289, *(void *)(*(void *)(v428 - 8) + 64));
            goto LABEL_195;
          }
        }
        else
        {
          if (v345 != 4)
          {
            memcpy(v288, v289, *(void *)(*(void *)(v344 - 8) + 64));
            goto LABEL_196;
          }
          uint64_t v346 = type metadata accessor for PuzzleStreak();
          uint64_t v347 = *(void *)(v346 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v347 + 48))(v289, 1, v346)) {
            goto LABEL_187;
          }
        }
        uint64_t v436 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v436 - 8) + 16))(v288, v289, v436);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v347 + 56))(v288, 0, 1, v346);
LABEL_195:
        swift_storeEnumTagMultiPayload();
LABEL_196:
        uint64_t v437 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v438 = *(int *)(v437 + 20);
        v439 = &v288[v438];
        v440 = (char *)v289 + v438;
        int v441 = swift_getEnumCaseMultiPayload();
        if (v441 == 5)
        {
          uint64_t v442 = type metadata accessor for PuzzleStreak();
          uint64_t v443 = *(void *)(v442 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v443 + 48))(v440, 1, v442))
          {
LABEL_201:
            sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v439, v440, *(void *)(*(void *)(v444 - 8) + 64));
            goto LABEL_204;
          }
        }
        else
        {
          if (v441 != 4)
          {
            memcpy(v439, v440, *(void *)(*(void *)(v344 - 8) + 64));
            goto LABEL_205;
          }
          uint64_t v442 = type metadata accessor for PuzzleStreak();
          uint64_t v443 = *(void *)(v442 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v443 + 48))(v440, 1, v442)) {
            goto LABEL_201;
          }
        }
        uint64_t v445 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v445 - 8) + 16))(v439, v440, v445);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v443 + 56))(v439, 0, 1, v442);
LABEL_204:
        swift_storeEnumTagMultiPayload();
LABEL_205:
        uint64_t v446 = *(int *)(v437 + 24);
        v447 = &v288[v446];
        v448 = (char *)v289 + v446;
        int v449 = swift_getEnumCaseMultiPayload();
        if (v449 == 5)
        {
          uint64_t v450 = type metadata accessor for PuzzleStreak();
          uint64_t v451 = *(void *)(v450 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v451 + 48))(v448, 1, v450))
          {
LABEL_210:
            sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v447, v448, *(void *)(*(void *)(v452 - 8) + 64));
            goto LABEL_213;
          }
        }
        else
        {
          if (v449 != 4)
          {
            memcpy(v447, v448, *(void *)(*(void *)(v344 - 8) + 64));
            goto LABEL_214;
          }
          uint64_t v450 = type metadata accessor for PuzzleStreak();
          uint64_t v451 = *(void *)(v450 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v451 + 48))(v448, 1, v450)) {
            goto LABEL_210;
          }
        }
        uint64_t v453 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v453 - 8) + 16))(v447, v448, v453);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v451 + 56))(v447, 0, 1, v450);
        goto LABEL_213;
      case 2u:
        v340 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v341 = *((void *)v340 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v341 + 48))(v289, 1, v340))
        {
          sub_1C0AF9C38(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          size_t v343 = *(void *)(*(void *)(v342 - 8) + 64);
          goto LABEL_185;
        }
        uint64_t v379 = sub_1C151631C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v379 - 8) + 16))(v288, v289, v379);
        v380 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v381 = v380[5];
        v382 = &v288[v381];
        v383 = (void *)((char *)v289 + v381);
        uint64_t v384 = v383[1];
        *(void *)v382 = *v383;
        *((void *)v382 + 1) = v384;
        uint64_t v385 = v380[6];
        v386 = &v288[v385];
        v387 = (void *)((char *)v289 + v385);
        uint64_t v388 = v387[1];
        *(void *)v386 = *v387;
        *((void *)v386 + 1) = v388;
        v389 = v387 + 2;
        unint64_t v390 = v387[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v390 >> 60 == 15)
        {
          *((_OWORD *)v386 + 1) = *(_OWORD *)v389;
        }
        else
        {
          uint64_t v429 = *v389;
          sub_1BFE95820(*v389, v390);
          *((void *)v386 + 2) = v429;
          *((void *)v386 + 3) = v390;
        }
        *(void *)&v288[v380[7]] = *(void *)((char *)v289 + v380[7]);
        *(void *)&v288[v380[8]] = *(void *)((char *)v289 + v380[8]);
        *(void *)&v288[v340[5]] = *(void *)((char *)v289 + v340[5]);
        *(void *)&v288[v340[6]] = *(void *)((char *)v289 + v340[6]);
        uint64_t v430 = v340[7];
        v431 = &v288[v430];
        v432 = (void *)((char *)v289 + v430);
        uint64_t v433 = v432[1];
        *(void *)v431 = *v432;
        *((void *)v431 + 1) = v433;
        v434 = *(void (**)(char *, void, uint64_t, int *))(v341 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v434(v288, 0, 1, v340);
        goto LABEL_214;
      case 3u:
        uint64_t v348 = v289[1];
        *(void *)uint64_t v288 = *v289;
        *((void *)v288 + 1) = v348;
        v288[16] = *((unsigned char *)v289 + 16);
        v349 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v350 = v349[6];
        v351 = &v288[v350];
        v352 = (char *)v289 + v350;
        uint64_t v353 = type metadata accessor for PuzzleStreak();
        uint64_t v354 = *(void *)(v353 - 8);
        v355 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v354 + 48);
        if (v355(v352, 1, v353))
        {
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v351, v352, *(void *)(*(void *)(v356 - 8) + 64));
        }
        else
        {
          uint64_t v391 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v391 - 8) + 16))(v351, v352, v391);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v354 + 56))(v351, 0, 1, v353);
        }
        uint64_t v392 = v349[7];
        v393 = &v288[v392];
        v394 = (char *)v289 + v392;
        if (v355((char *)v289 + v392, 1, v353))
        {
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v393, v394, *(void *)(*(void *)(v395 - 8) + 64));
        }
        else
        {
          uint64_t v414 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v414 - 8) + 16))(v393, v394, v414);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v354 + 56))(v393, 0, 1, v353);
        }
        uint64_t v415 = v349[8];
        v416 = &v288[v415];
        v417 = (_OWORD *)((char *)v289 + v415);
        long long v418 = v417[1];
        *(_OWORD *)v416 = *v417;
        *((_OWORD *)v416 + 1) = v418;
        *(_OWORD *)(v416 + 25) = *(_OWORD *)((char *)v417 + 25);
        uint64_t v419 = v349[9];
        v420 = &v288[v419];
        v421 = (_OWORD *)((char *)v289 + v419);
        *(_OWORD *)(v420 + 25) = *(_OWORD *)((char *)v421 + 25);
        long long v422 = v421[1];
        *(_OWORD *)v420 = *v421;
        *((_OWORD *)v420 + 1) = v422;
        uint64_t v423 = v349[10];
        v424 = &v288[v423];
        v425 = (_OWORD *)((char *)v289 + v423);
        long long v426 = v425[1];
        *(_OWORD *)v424 = *v425;
        *((_OWORD *)v424 + 1) = v426;
        *(_OWORD *)(v424 + 25) = *(_OWORD *)((char *)v425 + 25);
        goto LABEL_214;
      default:
        uint64_t v290 = type metadata accessor for PuzzleStatisticValue(0);
        int v291 = swift_getEnumCaseMultiPayload();
        if (v291 == 5)
        {
          uint64_t v292 = type metadata accessor for PuzzleStreak();
          uint64_t v293 = *(void *)(v292 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v293 + 48))(v289, 1, v292))
          {
LABEL_183:
            sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v288, v289, *(void *)(*(void *)(v427 - 8) + 64));
            goto LABEL_213;
          }
        }
        else
        {
          if (v291 != 4)
          {
            size_t v343 = *(void *)(*(void *)(v290 - 8) + 64);
LABEL_185:
            memcpy(v288, v289, v343);
            goto LABEL_214;
          }
          uint64_t v292 = type metadata accessor for PuzzleStreak();
          uint64_t v293 = *(void *)(v292 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v293 + 48))(v289, 1, v292)) {
            goto LABEL_183;
          }
        }
        uint64_t v435 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v435 - 8) + 16))(v288, v289, v435);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v293 + 56))(v288, 0, 1, v292);
LABEL_213:
        swift_storeEnumTagMultiPayload();
LABEL_214:
        swift_storeEnumTagMultiPayload();
LABEL_215:
        swift_storeEnumTagMultiPayload();
LABEL_216:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

void sub_1C0AF9C38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0AF9C9C(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = type metadata accessor for FormatPrimitivePropertyDefinition();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C0AF9CFC(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 0xDu:
    case 0x1Cu:
      goto LABEL_2;
    case 3u:
    case 4u:
    case 0xFu:
    case 0x16u:
    case 0x19u:
    case 0x1Bu:
    case 0x1Du:
    case 0x1Eu:
      goto LABEL_105;
    case 5u:
    case 0xAu:
      swift_release();
LABEL_105:
      swift_release();
      return;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 48)) {
        goto LABEL_143;
      }
      return;
    case 7u:
    case 0xEu:
    case 0x17u:
LABEL_143:
      swift_bridgeObjectRelease();
      goto LABEL_2;
    case 8u:
      id v2 = *(id *)a1;
      sub_1BFF7C0EC((uint64_t)v2);
      return;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C03596EC(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
      sub_1C03596EC(*(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(unsigned char *)(a1 + 152));
      return;
    case 0xCu:
      uint64_t v3 = sub_1C1515FDC();
      goto LABEL_35;
    case 0x10u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!*(void *)(a1 + 64)) {
        return;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_2:
      swift_bridgeObjectRelease();
      break;
    case 0x11u:
      type metadata accessor for FeedGroupItem();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_unknownObjectRelease();
          goto LABEL_28;
        case 1u:

          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 80) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          unint64_t v27 = *(void *)(a1 + 128);
          goto LABEL_77;
        case 2u:
          goto LABEL_143;
        case 3u:
          swift_bridgeObjectRelease();
          uint64_t v28 = type metadata accessor for FeedWeather(0);
          uint64_t v29 = a1 + *(int *)(v28 + 28);
          uint64_t v30 = sub_1C151E2BC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
          uint64_t v31 = a1 + *(int *)(v28 + 36);
          sub_1C0AF9C38(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
          uint64_t v33 = v32;
          uint64_t v34 = *(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8);
          v34(v31, v32);
          uint64_t v35 = (int *)type metadata accessor for FeedWeather.Temperature(0);
          v34(v31 + v35[5], v33);
          v34(v31 + v35[6], v33);
          v34(v31 + v35[7], v33);
          goto LABEL_2;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v27 = *(void *)(a1 + 240);
LABEL_77:
          if (v27 < 0x11) {
            return;
          }
          goto LABEL_2;
        case 5u:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          uint64_t v36 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v37 = a1 + v36[10];
          uint64_t v38 = v37 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
          uint64_t v39 = type metadata accessor for SharedItem();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v38, 1, v39))
          {
            uint64_t v40 = sub_1C151631C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v38, v40);

            uint64_t v41 = v38 + *(int *)(v39 + 28);
            uint64_t v42 = sub_1C1515FDC();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
          }
          uint64_t v43 = a1 + v36[11];
          uint64_t v44 = sub_1C151D2DC();
          uint64_t v45 = *(void *)(v44 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44)) {
            (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
          }
          if (*(void *)(a1 + v36[12] + 8) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          if (*(void *)(a1 + v36[13]) >= 3uLL) {
            swift_unknownObjectRelease();
          }
          id v9 = *(id *)(a1 + v36[14]);
          goto LABEL_29;
        case 6u:
          if (*(void *)(a1 + 32) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v46 = (int *)type metadata accessor for FeedWebEmbed();
          uint64_t v47 = a1 + v46[8];
          uint64_t v48 = sub_1C1515FDC();
          uint64_t v49 = *(void *)(v48 - 8);
          uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
          v50(v47, v48);
          uint64_t v51 = a1 + v46[9];
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v51, 1, v48)) {
            v50(v51, v48);
          }
          swift_release();
          swift_release();
          uint64_t v52 = a1 + v46[12];
          uint64_t v53 = (int *)type metadata accessor for FeedHeadline(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v53 - 1) + 48))(v52, 1, v53))
          {
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            uint64_t v54 = v53[10];
            uint64_t v55 = v52 + v54 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
            uint64_t v56 = type metadata accessor for SharedItem();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v55, 1, v56))
            {
              uint64_t v57 = sub_1C151631C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(v55, v57);

              v50(v55 + *(int *)(v56 + 28), v48);
            }
            uint64_t v58 = v52 + v53[11];
            uint64_t v59 = sub_1C151D2DC();
            uint64_t v60 = *(void *)(v59 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59)) {
              (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
            }
            if (*(void *)(v52 + v53[12] + 8) >= 0x11uLL) {
              swift_bridgeObjectRelease();
            }
            if (*(void *)(v52 + v53[13]) >= 3uLL) {
              swift_unknownObjectRelease();
            }
          }
          uint64_t v61 = a1 + v46[13];
          uint64_t v62 = type metadata accessor for WebEmbedDataVisualization();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48))(v61, 1, v62)) {
            return;
          }
          if (swift_getEnumCaseMultiPayload() != 1) {
            goto LABEL_105;
          }
          swift_bridgeObjectRelease();
          uint64_t v63 = type metadata accessor for GenericDataVisualization();
          v50(v61 + *(int *)(v63 + 20), v48);
          break;
        case 7u:
          id v9 = *(id *)a1;
          goto LABEL_29;
        case 8u:
          goto LABEL_119;
        case 9u:
          if (*(void *)(a1 + 32) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 112)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 88);
          }
          if (*(void *)(a1 + 152)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 128);
          }
          if (*(void *)(a1 + 192)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 168);
          }
          return;
        case 0xAu:
          if (*(void *)(a1 + 32) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
LABEL_119:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          return;
        case 0xBu:
          if (*(void *)(a1 + 32) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v64 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          swift_unknownObjectRelease();
          a1 = v64 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
          type metadata accessor for PuzzleStatisticCategory(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              type metadata accessor for PuzzleStatisticValue(0);
              goto LABEL_136;
            case 1u:
              type metadata accessor for PuzzleStatisticValue(0);
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
              {
                uint64_t v66 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 48))(a1, 1, v66))
                {
                  uint64_t v67 = sub_1C151555C();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8))(a1, v67);
                }
              }
              uint64_t v68 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
              uint64_t v69 = a1 + *(int *)(v68 + 20);
              int v70 = swift_getEnumCaseMultiPayload();
              if (v70 == 5 || v70 == 4)
              {
                uint64_t v71 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 48))(v69, 1, v71))
                {
                  uint64_t v72 = sub_1C151555C();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v72 - 8) + 8))(v69, v72);
                }
              }
              a1 += *(int *)(v68 + 24);
LABEL_136:
              int v73 = swift_getEnumCaseMultiPayload();
              if (v73 == 5 || v73 == 4)
              {
                uint64_t v74 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 48))(a1, 1, v74))goto LABEL_147; {
              }
                }
              return;
            case 2u:
              uint64_t v75 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 48))(a1, 1, v75))
              {
                return;
              }
              uint64_t v76 = sub_1C151631C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v76 - 8) + 8))(a1, v76);
              uint64_t v77 = type metadata accessor for PuzzleLeaderboardEntry();
              swift_bridgeObjectRelease();
              uint64_t v78 = a1 + *(int *)(v77 + 24);
              swift_bridgeObjectRelease();
              unint64_t v79 = *(void *)(v78 + 24);
              if (v79 >> 60 != 15) {
                sub_1BFE95664(*(void *)(v78 + 16), v79);
              }
              goto LABEL_143;
            case 3u:
              uint64_t v80 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
              uint64_t v81 = a1 + *(int *)(v80 + 24);
              uint64_t v82 = type metadata accessor for PuzzleStreak();
              char v83 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 48);
              if (!v83(v81, 1, v82))
              {
                uint64_t v84 = sub_1C151555C();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v84 - 8) + 8))(v81, v84);
              }
              a1 += *(int *)(v80 + 28);
              if (v83(a1, 1, v82)) {
                return;
              }
LABEL_147:
              uint64_t v3 = sub_1C151555C();
              break;
            default:
              return;
          }
          goto LABEL_35;
        case 0xCu:
          swift_bridgeObjectRelease();
          a1 += *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
          uint64_t v3 = sub_1C151D6DC();
          goto LABEL_35;
        default:
          return;
      }
      goto LABEL_2;
    case 0x12u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      return;
    case 0x13u:
      swift_release();
      if (*(void *)(a1 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v4 = *(unsigned __int8 *)(a1 + 80);
        if (v4 != 255) {
          sub_1BFE94AD4(*(void *)(a1 + 64), *(void *)(a1 + 72), v4 & 1);
        }
        int v5 = *(unsigned __int8 *)(a1 + 120);
        if (v5 != 255) {
          sub_1C00F670C(*(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), v5 & 1);
        }
        int v6 = *(unsigned __int8 *)(a1 + 144);
        if (v6 != 255)
        {
          uint64_t v7 = *(void *)(a1 + 128);
          uint64_t v8 = *(void *)(a1 + 136);
          sub_1BFE94AD4(v7, v8, v6 & 1);
        }
      }
      return;
    case 0x14u:

LABEL_28:
      id v9 = *(id *)(a1 + 8);
LABEL_29:
      goto LABEL_31;
    case 0x18u:
      type metadata accessor for FormatPropertyDefinition(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v10 = &qword_1EB88E9C8;
          goto LABEL_50;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(void *)(a1 + 72) & 0xF000000000000007) != 0) {
            swift_release();
          }
          swift_bridgeObjectRelease();
          uint64_t v14 = &qword_1EB88E9B8;
          long long v15 = sub_1C003F2E8;
          goto LABEL_67;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFF71B30();
          uint64_t v17 = v16;
          uint64_t v18 = a1 + *(int *)(v16 + 52);
          uint64_t v19 = sub_1C151631C();
          goto LABEL_52;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v20 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
          goto LABEL_69;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v14 = &qword_1EB88E990;
          long long v15 = sub_1C0092008;
          goto LABEL_67;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v10 = &qword_1EB88E9D0;
          goto LABEL_50;
        case 6u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v10 = &qword_1EB88E9C0;
LABEL_50:
          sub_1BFF71924(0, v10);
          goto LABEL_68;
        case 7u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFF719C0();
          uint64_t v17 = v22;
          uint64_t v18 = a1 + *(int *)(v22 + 52);
          uint64_t v19 = sub_1C1515FDC();
LABEL_52:
          uint64_t v23 = v19;
          uint64_t v24 = *(void *)(v19 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v18, 1, v19)) {
            (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v18, v23);
          }
          swift_bridgeObjectRelease();
          uint64_t v20 = *(int *)(v17 + 64);
          goto LABEL_69;
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(void *)(a1 + 72) & 0xF000000000000007) != 0) {
            swift_release();
          }
          swift_bridgeObjectRelease();
          uint64_t v14 = &qword_1EB88E9A0;
          long long v15 = sub_1C0036630;
          goto LABEL_67;
        case 9u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(void *)(a1 + 72) & 0xF000000000000007) != 0) {
            swift_release();
          }
          swift_bridgeObjectRelease();
          uint64_t v14 = &qword_1EB88E998;
          long long v15 = sub_1C00738F0;
          goto LABEL_67;
        case 0xAu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(void *)(a1 + 72) & 0xF000000000000007) != 0) {
            swift_release();
          }
          swift_bridgeObjectRelease();
          uint64_t v14 = &qword_1EB88E9B0;
          long long v15 = sub_1C0084C58;
          goto LABEL_67;
        case 0xBu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((~*(void *)(a1 + 72) & 0xF000000000000007) != 0) {
            swift_release();
          }
          swift_bridgeObjectRelease();
          uint64_t v14 = &qword_1EB88E9A8;
          long long v15 = sub_1C006F9DC;
LABEL_67:
          sub_1C0AF9C9C(0, v14, (void (*)(void))v15);
LABEL_68:
          uint64_t v20 = *(int *)(v21 + 64);
LABEL_69:
          uint64_t v25 = a1 + v20;
          uint64_t v26 = sub_1C1518CDC();
          uint64_t v85 = *(void *)(v26 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v25, 1, v26)) {
            return;
          }
          uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
          uint64_t v13 = v25;
          uint64_t v12 = v26;
          break;
        default:
          return;
      }
      goto LABEL_36;
    case 0x1Au:
      uint64_t v3 = sub_1C151CA7C();
LABEL_35:
      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t v12 = v3;
      uint64_t v13 = a1;
LABEL_36:
      v11(v13, v12);
      break;
    case 0x1Fu:
      id v9 = *(id *)a1;
LABEL_31:

      break;
    default:
      return;
  }
}

uint64_t *sub_1C0AFB2FC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
      uint64_t v6 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_216;
    case 3u:
    case 0xFu:
      uint64_t v43 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v43;
      swift_retain();
      goto LABEL_216;
    case 4u:
    case 0x16u:
    case 0x19u:
    case 0x1Bu:
    case 0x1Du:
    case 0x1Eu:
      *a1 = *(void *)a2;
      swift_retain();
      goto LABEL_216;
    case 5u:
      uint64_t v7 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v7;
      swift_retain();
      swift_retain();
      goto LABEL_216;
    case 6u:
      uint64_t v8 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v8;
      long long v9 = *(_OWORD *)(a2 + 32);
      *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
      *((_OWORD *)a1 + 2) = v9;
      uint64_t v10 = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10)
      {
        uint64_t v11 = *(void *)(a2 + 56);
        a1[6] = v10;
        a1[7] = v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
      }
      goto LABEL_216;
    case 7u:
      long long v12 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v12;
      *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
      *((unsigned char *)a1 + 48) = *(unsigned char *)(a2 + 48);
      *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 88);
      *((unsigned char *)a1 + 104) = *(unsigned char *)(a2 + 104);
      uint64_t v13 = *(void *)(a2 + 120);
      a1[14] = *(void *)(a2 + 112);
      a1[15] = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_216;
    case 8u:
      uint64_t v44 = *(void *)a2;
      sub_1BFF7B774(*(void *)a2);
      *a1 = v44;
      goto LABEL_216;
    case 9u:
      uint64_t v45 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v45;
      uint64_t v46 = *(void *)(a2 + 16);
      uint64_t v47 = *(void *)(a2 + 24);
      uint64_t v48 = *(void *)(a2 + 32);
      uint64_t v49 = *(void *)(a2 + 40);
      uint64_t v492 = *(void *)(a2 + 48);
      uint64_t v50 = *(void *)(a2 + 64);
      uint64_t v498 = *(void *)(a2 + 56);
      uint64_t v51 = *(void *)(a2 + 72);
      char v52 = *(unsigned char *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C03A98B4(v46, v47, v48, v49, v492, v498, v50, v51, v52);
      a1[2] = v46;
      a1[3] = v47;
      a1[4] = v48;
      a1[5] = v49;
      a1[6] = v492;
      a1[7] = v498;
      a1[8] = v50;
      a1[9] = v51;
      *((unsigned char *)a1 + 80) = v52;
      uint64_t v53 = *(void *)(a2 + 88);
      uint64_t v54 = *(void *)(a2 + 96);
      uint64_t v55 = *(void *)(a2 + 104);
      uint64_t v56 = *(void *)(a2 + 112);
      uint64_t v57 = *(void *)(a2 + 120);
      uint64_t v58 = *(void *)(a2 + 128);
      uint64_t v59 = *(void *)(a2 + 136);
      uint64_t v60 = *(void *)(a2 + 144);
      char v61 = *(unsigned char *)(a2 + 152);
      sub_1C03A98B4(v53, v54, v55, v56, v57, v58, v59, v60, v61);
      a1[11] = v53;
      a1[12] = v54;
      a1[13] = v55;
      a1[14] = v56;
      a1[15] = v57;
      a1[16] = v58;
      a1[17] = v59;
      a1[18] = v60;
      *((unsigned char *)a1 + 152) = v61;
      goto LABEL_216;
    case 0xAu:
      uint64_t v14 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v14;
      swift_retain();
      swift_retain();
      goto LABEL_216;
    case 0xCu:
      uint64_t v15 = sub_1C1515FDC();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
      goto LABEL_216;
    case 0xDu:
      long long v16 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v16;
      uint64_t v17 = *(void *)(a2 + 40);
      a1[4] = *(void *)(a2 + 32);
      a1[5] = v17;
      *((unsigned char *)a1 + 48) = *(unsigned char *)(a2 + 48);
      swift_bridgeObjectRetain();
      goto LABEL_216;
    case 0xEu:
      uint64_t v18 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v18;
      a1[2] = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_216;
    case 0x10u:
      long long v62 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 3) = v62;
      (**(void (***)(uint64_t *, uint64_t))(v62 - 8))(a1, a2);
      uint64_t v63 = *(void *)(a2 + 48);
      a1[5] = *(void *)(a2 + 40);
      a1[6] = v63;
      uint64_t v64 = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v64)
      {
        a1[7] = *(void *)(a2 + 56);
        a1[8] = v64;
        uint64_t v65 = *(void *)(a2 + 80);
        a1[9] = *(void *)(a2 + 72);
        a1[10] = v65;
        uint64_t v66 = *(void *)(a2 + 96);
        a1[11] = *(void *)(a2 + 88);
        a1[12] = v66;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v76 = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 9) = v76;
        *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 88);
      }
      *((unsigned char *)a1 + 104) = *(unsigned char *)(a2 + 104);
      goto LABEL_216;
    case 0x11u:
      type metadata accessor for FeedGroupItem();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v194 = *(void **)a2;
          uint64_t v195 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v195;
          a1[2] = *(void *)(a2 + 16);
          *((_WORD *)a1 + 12) = *(_WORD *)(a2 + 24);
          a1[4] = *(void *)(a2 + 32);
          *((unsigned char *)a1 + 40) = *(unsigned char *)(a2 + 40);
          long long v196 = *(void **)(a2 + 56);
          a1[6] = *(void *)(a2 + 48);
          a1[7] = (uint64_t)v196;
          *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
          uint64_t v197 = *(void *)(a2 + 80);
          id v198 = v194;
          swift_bridgeObjectRetain();
          id v199 = v196;
          if (v197 == 1)
          {
            long long v200 = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 72);
            *(_OWORD *)(a1 + 11) = v200;
            *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 104);
          }
          else
          {
            a1[9] = *(void *)(a2 + 72);
            a1[10] = v197;
            uint64_t v266 = *(void *)(a2 + 96);
            a1[11] = *(void *)(a2 + 88);
            a1[12] = v266;
            uint64_t v268 = *(void **)(a2 + 104);
            uint64_t v267 = *(void *)(a2 + 112);
            a1[13] = (uint64_t)v268;
            a1[14] = v267;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v269 = v268;
          }
          uint64_t v270 = (uint64_t *)(a2 + 120);
          unint64_t v271 = *(void *)(a2 + 128);
          if (v271 >= 0x11)
          {
            a1[15] = *v270;
            a1[16] = v271;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)v270;
          }
          *((unsigned char *)a1 + 136) = *(unsigned char *)(a2 + 136);
          goto LABEL_215;
        case 2u:
          uint64_t v201 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v201;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_215;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v202 = *(void *)(a2 + 24);
          a1[2] = *(void *)(a2 + 16);
          a1[3] = v202;
          *((unsigned char *)a1 + 32) = *(unsigned char *)(a2 + 32);
          unint64_t v203 = (int *)type metadata accessor for FeedWeather(0);
          uint64_t v204 = v203[7];
          uint64_t v205 = (char *)a1 + v204;
          uint64_t v206 = a2 + v204;
          uint64_t v207 = sub_1C151E2BC();
          long long v208 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v207 - 8) + 16);
          swift_bridgeObjectRetain();
          v208(v205, v206, v207);
          *((unsigned char *)a1 + v203[8]) = *(unsigned char *)(a2 + v203[8]);
          uint64_t v209 = v203[9];
          long long v210 = (char *)a1 + v209;
          uint64_t v211 = a2 + v209;
          sub_1C0AF9C38(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
          uint64_t v213 = v212;
          uint64_t v214 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v212 - 8) + 16);
          v214(v210, v211, v212);
          uint64_t v215 = (int *)type metadata accessor for FeedWeather.Temperature(0);
          v214(&v210[v215[5]], v211 + v215[5], v213);
          v214(&v210[v215[6]], v211 + v215[6], v213);
          v214(&v210[v215[7]], v211 + v215[7], v213);
          uint64_t v216 = v203[10];
          uint64_t v217 = (uint64_t *)((char *)a1 + v216);
          uint64_t v218 = (void *)(a2 + v216);
          uint64_t v219 = v218[1];
          *uint64_t v217 = *v218;
          v217[1] = v219;
          swift_bridgeObjectRetain();
          goto LABEL_215;
        case 4u:
          uint64_t v220 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v220;
          uint64_t v221 = *(void *)(a2 + 24);
          a1[2] = *(void *)(a2 + 16);
          a1[3] = v221;
          uint64_t v222 = *(void *)(a2 + 40);
          a1[4] = *(void *)(a2 + 32);
          a1[5] = v222;
          *((_WORD *)a1 + 24) = *(_WORD *)(a2 + 48);
          *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 56);
          uint64_t v223 = *(void *)(a2 + 80);
          a1[9] = *(void *)(a2 + 72);
          a1[10] = v223;
          uint64_t v224 = *(void *)(a2 + 96);
          a1[11] = *(void *)(a2 + 88);
          a1[12] = v224;
          a1[13] = *(void *)(a2 + 104);
          *((unsigned char *)a1 + 112) = *(unsigned char *)(a2 + 112);
          uint64_t v225 = *(void *)(a2 + 128);
          a1[15] = *(void *)(a2 + 120);
          a1[16] = v225;
          *((unsigned char *)a1 + 136) = *(unsigned char *)(a2 + 136);
          uint64_t v226 = *(void *)(a2 + 152);
          a1[18] = *(void *)(a2 + 144);
          a1[19] = v226;
          uint64_t v227 = *(void *)(a2 + 168);
          a1[20] = *(void *)(a2 + 160);
          a1[21] = v227;
          *((unsigned char *)a1 + 184) = *(unsigned char *)(a2 + 184);
          a1[22] = *(void *)(a2 + 176);
          uint64_t v228 = *(void *)(a2 + 200);
          a1[24] = *(void *)(a2 + 192);
          a1[25] = v228;
          *((unsigned char *)a1 + 224) = *(unsigned char *)(a2 + 224);
          uint64_t v229 = *(void *)(a2 + 216);
          a1[26] = *(void *)(a2 + 208);
          a1[27] = v229;
          v488 = (uint64_t *)(a2 + 232);
          unint64_t v230 = *(void *)(a2 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v230 >= 0x11)
          {
            a1[29] = *v488;
            a1[30] = v230;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 29) = *(_OWORD *)v488;
          }
          goto LABEL_215;
        case 5u:
          uint64_t v231 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v231;
          a1[2] = *(void *)(a2 + 16);
          *((unsigned char *)a1 + 24) = *(unsigned char *)(a2 + 24);
          uint64_t v232 = *(void *)(a2 + 40);
          a1[4] = *(void *)(a2 + 32);
          a1[5] = v232;
          a1[6] = *(void *)(a2 + 48);
          *((unsigned char *)a1 + 56) = *(unsigned char *)(a2 + 56);
          v489 = (int *)type metadata accessor for FeedHeadline(0);
          v494 = a1;
          uint64_t v233 = v489[10];
          uint64_t v234 = (char *)a1 + v233;
          uint64_t v235 = a2 + v233;
          *uint64_t v234 = *(unsigned char *)(a2 + v233);
          v234[1] = *(unsigned char *)(a2 + v233 + 1);
          unint64_t v236 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v237 = v236[6];
          v480 = &v234[v237];
          id v238 = (char *)(v235 + v237);
          uint64_t v239 = (int *)type metadata accessor for SharedItem();
          uint64_t v478 = *((void *)v239 - 1);
          uint64_t v240 = *(unsigned int (**)(char *, uint64_t, int *))(v478 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v240(v238, 1, v239))
          {
            uint64_t v241 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v480, v238, *(void *)(*(void *)(v241 - 8) + 64));
          }
          else
          {
            uint64_t v303 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v303 - 8) + 16))(v480, v238, v303);
            v480[v239[5]] = v238[v239[5]];
            uint64_t v304 = v239[6];
            uint64_t v305 = *(void **)&v238[v304];
            *(void *)&v480[v304] = v305;
            uint64_t v306 = v239[7];
            __dste = &v480[v306];
            v476 = &v238[v306];
            uint64_t v307 = sub_1C1515FDC();
            long long v308 = *(void (**)(char *, char *, uint64_t))(*(void *)(v307 - 8) + 16);
            id v309 = v305;
            v308(__dste, v476, v307);
            (*(void (**)(char *, void, uint64_t, int *))(v478 + 56))(v480, 0, 1, v239);
          }
          v234[v236[7]] = *(unsigned char *)(v235 + v236[7]);
          v234[v236[8]] = *(unsigned char *)(v235 + v236[8]);
          v234[v236[9]] = *(unsigned char *)(v235 + v236[9]);
          v234[v236[10]] = *(unsigned char *)(v235 + v236[10]);
          a1 = v494;
          uint64_t v310 = v489[11];
          uint64_t v311 = (char *)v494 + v310;
          long long v312 = (const void *)(a2 + v310);
          uint64_t v313 = sub_1C151D2DC();
          uint64_t v314 = *(void *)(v313 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v314 + 48))(v312, 1, v313))
          {
            sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
            memcpy(v311, v312, *(void *)(*(void *)(v315 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v314 + 16))(v311, v312, v313);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v314 + 56))(v311, 0, 1, v313);
          }
          uint64_t v328 = v489[12];
          uint64_t v329 = (uint64_t *)((char *)v494 + v328);
          v330 = (void *)(a2 + v328);
          unint64_t v331 = v330[1];
          if (v331 >= 0x11)
          {
            *uint64_t v329 = *v330;
            v329[1] = v331;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v329 = *(_OWORD *)v330;
          }
          uint64_t v332 = v489[13];
          unint64_t v333 = *(void *)(a2 + v332);
          if (v333 >= 2)
          {
            if (v333 == 2)
            {
              *(uint64_t *)((char *)v494 + v332) = 2;
            }
            else
            {
              *(uint64_t *)((char *)v494 + v332) = v333;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(uint64_t *)((char *)v494 + v332) = v333;
          }
          uint64_t v369 = v489[14];
          uint64_t v370 = *(void **)(a2 + v369);
          *(uint64_t *)((char *)v494 + v369) = (uint64_t)v370;
          id v371 = v370;
          goto LABEL_215;
        case 6u:
          uint64_t v242 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v242;
          *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
          unint64_t v243 = (uint64_t *)(a2 + 24);
          unint64_t v244 = *(void *)(a2 + 32);
          if (v244 >= 0x11)
          {
            a1[3] = *v243;
            a1[4] = v244;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 3) = *(_OWORD *)v243;
          }
          uint64_t v272 = *(void *)(a2 + 48);
          a1[5] = *(void *)(a2 + 40);
          a1[6] = v272;
          uint64_t v273 = (int *)type metadata accessor for FeedWebEmbed();
          uint64_t v274 = v273[8];
          uint64_t v275 = (char *)a1 + v274;
          v495 = (const void *)(a2 + v274);
          uint64_t v276 = sub_1C1515FDC();
          uint64_t v277 = *(void *)(v276 - 8);
          uint64_t v278 = *(void (**)(char *, const void *, void *))(v277 + 16);
          uint64_t v279 = (void *)v276;
          swift_bridgeObjectRetain();
          __dstd = v278;
          v278(v275, v495, v279);
          uint64_t v280 = v277;
          uint64_t v281 = v273[9];
          uint64_t v282 = (char *)a1 + v281;
          uint64_t v283 = (const void *)(a2 + v281);
          uint64_t v481 = v279;
          if ((*(unsigned int (**)(uint64_t, uint64_t, void *))(v280 + 48))(a2 + v281, 1, v279))
          {
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
            memcpy(v282, v283, *(void *)(*(void *)(v284 - 8) + 64));
          }
          else
          {
            __dstd(v282, v283, v279);
            (*(void (**)(char *, void, uint64_t, void *))(v280 + 56))(v282, 0, 1, v279);
          }
          *(uint64_t *)((char *)a1 + v273[10]) = *(void *)(a2 + v273[10]);
          *(uint64_t *)((char *)a1 + v273[11]) = *(void *)(a2 + v273[11]);
          v490 = v273;
          uint64_t v316 = v273[12];
          uint64_t v317 = (uint64_t *)((char *)a1 + v316);
          uint64_t v318 = (void *)(a2 + v316);
          uint64_t v319 = type metadata accessor for FeedHeadline(0);
          uint64_t v320 = *(void *)(v319 - 8);
          long long v321 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v320 + 48);
          swift_retain();
          swift_retain();
          if (v321(v318, 1, v319))
          {
            sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
            memcpy(v317, v318, *(void *)(*(void *)(v322 - 8) + 64));
          }
          else
          {
            uint64_t v473 = v320;
            v474 = (int *)v319;
            v496 = a1;
            uint64_t v334 = v318[1];
            *uint64_t v317 = *v318;
            v317[1] = v334;
            v317[2] = v318[2];
            *((unsigned char *)v317 + 24) = *((unsigned char *)v318 + 24);
            uint64_t v335 = v318[5];
            v317[4] = v318[4];
            v317[5] = v335;
            v317[6] = v318[6];
            *((unsigned char *)v317 + 56) = *((unsigned char *)v318 + 56);
            uint64_t v336 = *(int *)(v319 + 40);
            v477 = v317;
            uint64_t v337 = (char *)v317 + v336;
            uint64_t v338 = (char *)v318 + v336;
            *uint64_t v337 = *((unsigned char *)v318 + v336);
            v337[1] = *((unsigned char *)v318 + v336 + 1);
            v472 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v339 = v472[6];
            v340 = &v337[v339];
            uint64_t v341 = &v338[v339];
            uint64_t v342 = (int *)type metadata accessor for SharedItem();
            uint64_t v471 = *((void *)v342 - 1);
            size_t v343 = *(unsigned int (**)(char *, uint64_t, int *))(v471 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v343(v341, 1, v342))
            {
              uint64_t v344 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v340, v341, *(void *)(*(void *)(v344 - 8) + 64));
            }
            else
            {
              uint64_t v372 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v372 - 8) + 16))(v340, v341, v372);
              v340[v342[5]] = v341[v342[5]];
              uint64_t v373 = v342[6];
              v374 = *(void **)&v341[v373];
              *(void *)&v340[v373] = v374;
              uint64_t v375 = v342[7];
              unint64_t v376 = &v340[v375];
              uint64_t v377 = &v341[v375];
              id v378 = v374;
              __dstd(v376, v377, v481);
              (*(void (**)(char *, void, uint64_t, int *))(v471 + 56))(v340, 0, 1, v342);
            }
            uint64_t v273 = v490;
            v337[v472[7]] = v338[v472[7]];
            v337[v472[8]] = v338[v472[8]];
            v337[v472[9]] = v338[v472[9]];
            v337[v472[10]] = v338[v472[10]];
            uint64_t v379 = v474[11];
            v380 = (char *)v477 + v379;
            uint64_t v381 = v318;
            v382 = (char *)v318 + v379;
            uint64_t v383 = sub_1C151D2DC();
            uint64_t v384 = *(void *)(v383 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v384 + 48))(v382, 1, v383))
            {
              sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
              memcpy(v380, v382, *(void *)(*(void *)(v385 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v384 + 16))(v380, v382, v383);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v384 + 56))(v380, 0, 1, v383);
            }
            a1 = v496;
            uint64_t v386 = v474[12];
            v387 = (void *)((char *)v477 + v386);
            uint64_t v388 = (void *)((char *)v381 + v386);
            unint64_t v389 = v388[1];
            if (v389 >= 0x11)
            {
              void *v387 = *v388;
              v387[1] = v389;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)v387 = *(_OWORD *)v388;
            }
            uint64_t v390 = v474[13];
            unint64_t v391 = *(void *)((char *)v381 + v390);
            if (v391 >= 2)
            {
              if (v391 == 2)
              {
                *(void *)((char *)v477 + v390) = 2;
              }
              else
              {
                *(void *)((char *)v477 + v390) = v391;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(void *)((char *)v477 + v390) = v391;
            }
            uint64_t v409 = v474[14];
            uint64_t v410 = *(void **)((char *)v381 + v409);
            *(void *)((char *)v477 + v409) = v410;
            uint64_t v411 = *(void (**)(void *, void, uint64_t, int *))(v473 + 56);
            id v412 = v410;
            v411(v477, 0, 1, v474);
          }
          uint64_t v413 = v273[13];
          uint64_t v414 = (uint64_t *)((char *)a1 + v413);
          uint64_t v415 = (uint64_t *)(a2 + v413);
          uint64_t v416 = type metadata accessor for WebEmbedDataVisualization();
          uint64_t v417 = *(void *)(v416 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v417 + 48))(v415, 1, v416))
          {
            sub_1C0AF9C38(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
            memcpy(v414, v415, *(void *)(*(void *)(v418 - 8) + 64));
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v420 = *v415;
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v421 = v415[1];
              *uint64_t v414 = v420;
              v414[1] = v421;
              uint64_t v422 = type metadata accessor for GenericDataVisualization();
              uint64_t v423 = *(int *)(v422 + 20);
              v424 = (char *)v414 + v423;
              v425 = (char *)v415 + v423;
              swift_bridgeObjectRetain();
              long long v426 = v424;
              uint64_t v273 = v490;
              __dstd(v426, v425, v481);
              *(void *)((char *)v414 + *(int *)(v422 + 24)) = *(uint64_t *)((char *)v415 + *(int *)(v422 + 24));
              swift_bridgeObjectRetain();
            }
            else
            {
              *uint64_t v414 = v420;
              swift_retain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v417 + 56))(v414, 0, 1, v416);
          }
          *((unsigned char *)a1 + v273[14]) = *(unsigned char *)(a2 + v273[14]);
          swift_storeEnumTagMultiPayload();
          goto LABEL_216;
        case 7u:
          uint64_t v245 = *(void **)a2;
          *a1 = *(void *)a2;
          id v246 = v245;
          goto LABEL_215;
        case 8u:
          uint64_t v247 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v247;
          uint64_t v248 = *(void *)(a2 + 24);
          a1[2] = *(void *)(a2 + 16);
          a1[3] = v248;
          *((unsigned char *)a1 + 32) = *(unsigned char *)(a2 + 32);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_215;
        case 9u:
          uint64_t v249 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v249;
          *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v250 = (uint64_t *)(a2 + 24);
          unint64_t v251 = *(void *)(a2 + 32);
          if (v251 >= 0x11)
          {
            a1[3] = *v250;
            a1[4] = v251;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 3) = *(_OWORD *)v250;
          }
          uint64_t v285 = *(void *)(a2 + 48);
          a1[5] = *(void *)(a2 + 40);
          a1[6] = v285;
          uint64_t v286 = *(void **)(a2 + 64);
          a1[7] = *(void *)(a2 + 56);
          a1[8] = (uint64_t)v286;
          *((unsigned char *)a1 + 72) = *(unsigned char *)(a2 + 72);
          a1[10] = *(void *)(a2 + 80);
          uint64_t v287 = *(void *)(a2 + 112);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          id v288 = v286;
          swift_bridgeObjectRetain();
          if (v287)
          {
            uint64_t v289 = *(void *)(a2 + 120);
            a1[14] = v287;
            a1[15] = v289;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v287 - 8))((uint64_t)(a1 + 11), a2 + 88, v287);
          }
          else
          {
            long long v323 = *(_OWORD *)(a2 + 104);
            *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 13) = v323;
            a1[15] = *(void *)(a2 + 120);
          }
          unint64_t v324 = a1 + 16;
          uint64_t v325 = (_OWORD *)(a2 + 128);
          uint64_t v326 = *(void *)(a2 + 152);
          if (v326)
          {
            uint64_t v327 = *(void *)(a2 + 160);
            a1[19] = v326;
            a1[20] = v327;
            (**(void (***)(_OWORD *, _OWORD *))(v326 - 8))(v324, v325);
          }
          else
          {
            long long v345 = *(_OWORD *)(a2 + 144);
            *unint64_t v324 = *v325;
            *((_OWORD *)a1 + 9) = v345;
            a1[20] = *(void *)(a2 + 160);
          }
          uint64_t v346 = a1 + 21;
          uint64_t v347 = (_OWORD *)(a2 + 168);
          uint64_t v348 = *(void *)(a2 + 192);
          if (v348)
          {
            uint64_t v349 = *(void *)(a2 + 200);
            a1[24] = v348;
            a1[25] = v349;
            (**(void (***)(_OWORD *, _OWORD *))(v348 - 8))(v346, v347);
          }
          else
          {
            long long v350 = *(_OWORD *)(a2 + 184);
            *uint64_t v346 = *v347;
            *(_OWORD *)(a1 + 23) = v350;
            a1[25] = *(void *)(a2 + 200);
          }
          goto LABEL_215;
        case 0xAu:
          uint64_t v252 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v252;
          *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v253 = (uint64_t *)(a2 + 24);
          unint64_t v254 = *(void *)(a2 + 32);
          if (v254 >= 0x11)
          {
            a1[3] = *v253;
            a1[4] = v254;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 3) = *(_OWORD *)v253;
          }
          uint64_t v290 = *(void *)(a2 + 48);
          a1[5] = *(void *)(a2 + 40);
          a1[6] = v290;
          a1[7] = *(void *)(a2 + 56);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_215;
        case 0xBu:
          uint64_t v255 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v255;
          *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v256 = (uint64_t *)(a2 + 24);
          unint64_t v257 = *(void *)(a2 + 32);
          if (v257 >= 0x11)
          {
            a1[3] = *v256;
            a1[4] = v257;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 3) = *(_OWORD *)v256;
          }
          break;
        case 0xCu:
          uint64_t v258 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v258;
          uint64_t v259 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
          uint64_t v260 = (char *)a1 + v259;
          uint64_t v261 = a2 + v259;
          uint64_t v262 = sub_1C151D6DC();
          unint64_t v263 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v262 - 8) + 16);
          swift_bridgeObjectRetain();
          v263(v260, v261, v262);
          goto LABEL_215;
        default:
          uint64_t v67 = *(void **)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = (uint64_t)v67;
          *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
          swift_unknownObjectRetain();
          id v68 = v67;
          goto LABEL_215;
      }
      break;
    case 0x12u:
      uint64_t v69 = *(void *)(a2 + 24);
      a1[3] = v69;
      (**(void (***)(uint64_t *, uint64_t))(v69 - 8))(a1, a2);
      goto LABEL_216;
    case 0x13u:
      *a1 = *(void *)a2;
      uint64_t v19 = *(void *)(a2 + 8);
      swift_retain();
      if (v19 == 1)
      {
        long long v20 = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 15) = v20;
        *(_OWORD *)((char *)a1 + 129) = *(_OWORD *)(a2 + 129);
        long long v21 = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 7) = v21;
        long long v22 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 11) = v22;
        long long v23 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 3) = v23;
      }
      else
      {
        uint64_t v71 = *(void *)(a2 + 16);
        uint64_t v72 = *(void *)(a2 + 24);
        a1[1] = v19;
        a1[2] = v71;
        uint64_t v73 = *(void *)(a2 + 32);
        a1[3] = v72;
        a1[4] = v73;
        *((unsigned char *)a1 + 40) = *(unsigned char *)(a2 + 40);
        uint64_t v74 = *(void *)(a2 + 56);
        a1[6] = *(void *)(a2 + 48);
        a1[7] = v74;
        int v75 = *(unsigned __int8 *)(a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v75 == 255)
        {
          *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
          *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
        }
        else
        {
          uint64_t v77 = *(void *)(a2 + 64);
          uint64_t v78 = *(void *)(a2 + 72);
          sub_1BFE94AB4(v77, v78, v75 & 1);
          a1[8] = v77;
          a1[9] = v78;
          *((unsigned char *)a1 + 80) = v75 & 1;
        }
        int v79 = *(unsigned __int8 *)(a2 + 120);
        if (v79 == 255)
        {
          long long v80 = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 13) = v80;
          *((unsigned char *)a1 + 120) = *(unsigned char *)(a2 + 120);
        }
        else
        {
          char v81 = v79 & 1;
          uint64_t v82 = *(void *)(a2 + 88);
          uint64_t v83 = *(void *)(a2 + 96);
          uint64_t v84 = *(void *)(a2 + 104);
          uint64_t v85 = *(void *)(a2 + 112);
          sub_1C00F65A8(v82, v83, v84, v85, v79 & 1);
          a1[11] = v82;
          a1[12] = v83;
          a1[13] = v84;
          a1[14] = v85;
          *((unsigned char *)a1 + 120) = v81;
        }
        int v86 = *(unsigned __int8 *)(a2 + 144);
        if (v86 == 255)
        {
          *((_OWORD *)a1 + 8) = *(_OWORD *)(a2 + 128);
          *((unsigned char *)a1 + 144) = *(unsigned char *)(a2 + 144);
        }
        else
        {
          char v87 = v86 & 1;
          uint64_t v88 = *(void *)(a2 + 128);
          uint64_t v89 = *(void *)(a2 + 136);
          sub_1BFE94AB4(v88, v89, v86 & 1);
          a1[16] = v88;
          a1[17] = v89;
          *((unsigned char *)a1 + 144) = v87;
        }
      }
      goto LABEL_216;
    case 0x14u:
      uint64_t v24 = *(void **)a2;
      uint64_t v25 = *(void **)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = (uint64_t)v25;
      id v26 = v24;
      id v27 = v25;
      goto LABEL_216;
    case 0x17u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v28 = *(void *)(a2 + 16);
      a1[1] = *(void *)(a2 + 8);
      a1[2] = v28;
      uint64_t v29 = *(void *)(a2 + 32);
      a1[3] = *(void *)(a2 + 24);
      a1[4] = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_216;
    case 0x18u:
      type metadata accessor for FormatPropertyDefinition(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v90 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v90;
          uint64_t v91 = *(void *)(a2 + 24);
          a1[2] = *(void *)(a2 + 16);
          a1[3] = v91;
          uint64_t v92 = *(void *)(a2 + 40);
          a1[4] = *(void *)(a2 + 32);
          a1[5] = v92;
          uint64_t v93 = *(void *)(a2 + 48);
          uint64_t v94 = *(void *)(a2 + 56);
          *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
          uint64_t v95 = *(void *)(a2 + 72);
          a1[6] = v93;
          a1[7] = v94;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((~v95 & 0xF000000000000007) != 0) {
            swift_retain();
          }
          a1[9] = v95;
          *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
          a1[11] = *(void *)(a2 + 88);
          uint64_t v96 = &qword_1EB88E9B8;
          uint64_t v97 = sub_1C003F2E8;
          goto LABEL_73;
        case 2u:
          uint64_t v98 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v98;
          uint64_t v99 = *(void *)(a2 + 24);
          a1[2] = *(void *)(a2 + 16);
          a1[3] = v99;
          uint64_t v100 = a1;
          uint64_t v101 = *(void *)(a2 + 40);
          v100[4] = *(void *)(a2 + 32);
          v100[5] = v101;
          uint64_t v102 = *(void *)(a2 + 56);
          v100[6] = *(void *)(a2 + 48);
          v100[7] = v102;
          *((unsigned char *)v100 + 64) = *(unsigned char *)(a2 + 64);
          sub_1BFF71B30();
          uint64_t v104 = v103[13];
          v493 = v100;
          v479 = v103;
          __dsta = (char *)v100 + v104;
          uint64_t v105 = (const void *)(a2 + v104);
          uint64_t v106 = sub_1C151631C();
          uint64_t v107 = *(void *)(v106 - 8);
          uint64_t v108 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v107 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (!v108(v105, 1, v106)) {
            goto LABEL_94;
          }
          long long v109 = &qword_1EB871180;
          long long v110 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
          goto LABEL_60;
        case 3u:
          uint64_t v111 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v111;
          uint64_t v112 = *(void *)(a2 + 24);
          a1[2] = *(void *)(a2 + 16);
          a1[3] = v112;
          uint64_t v113 = *(void *)(a2 + 40);
          a1[4] = *(void *)(a2 + 32);
          a1[5] = v113;
          uint64_t v114 = *(void *)(a2 + 56);
          a1[6] = *(void *)(a2 + 48);
          a1[7] = v114;
          uint64_t v115 = *(void *)(a2 + 72);
          a1[8] = *(void *)(a2 + 64);
          a1[9] = v115;
          *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
          uint64_t v116 = a1;
          uint64_t v117 = *(void *)(a2 + 96);
          v116[11] = *(void *)(a2 + 88);
          v116[12] = v117;
          v116[13] = *(void *)(a2 + 104);
          *((unsigned char *)v116 + 112) = *(unsigned char *)(a2 + 112);
          v116[15] = *(void *)(a2 + 120);
          uint64_t v118 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
          v491 = v116;
          __dstb = (char *)v116 + v118;
          uint64_t v119 = (const void *)(a2 + v118);
          uint64_t v120 = sub_1C1518CDC();
          uint64_t v121 = *(void *)(v120 - 8);
          v475 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v121 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v475(v119, 1, v120))
          {
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
            size_t v123 = *(void *)(*(void *)(v122 - 8) + 64);
            long long v124 = __dstb;
            uint64_t v125 = v119;
            goto LABEL_56;
          }
          (*(void (**)(char *, const void *, uint64_t))(v121 + 16))(__dstb, v119, v120);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v121 + 56))(__dstb, 0, 1, v120);
          break;
        case 4u:
          uint64_t v126 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v126;
          uint64_t v127 = *(void *)(a2 + 24);
          a1[2] = *(void *)(a2 + 16);
          a1[3] = v127;
          uint64_t v128 = *(void *)(a2 + 40);
          a1[4] = *(void *)(a2 + 32);
          a1[5] = v128;
          uint64_t v129 = *(void *)(a2 + 56);
          a1[6] = *(void *)(a2 + 48);
          a1[7] = v129;
          *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
          uint64_t v130 = *(void *)(a2 + 72);
          *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
          a1[9] = v130;
          *((unsigned char *)a1 + 81) = *(unsigned char *)(a2 + 81);
          a1[11] = *(void *)(a2 + 88);
          sub_1C0AF9C9C(0, &qword_1EB88E990, (void (*)(void))sub_1C0092008);
          goto LABEL_52;
        case 5u:
          uint64_t v132 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v132;
          uint64_t v133 = *(void *)(a2 + 24);
          a1[2] = *(void *)(a2 + 16);
          a1[3] = v133;
          uint64_t v134 = *(void *)(a2 + 40);
          a1[4] = *(void *)(a2 + 32);
          a1[5] = v134;
          uint64_t v135 = *(void *)(a2 + 56);
          a1[6] = *(void *)(a2 + 48);
          a1[7] = v135;
          *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
          uint64_t v136 = *(void *)(a2 + 72);
          *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
          a1[9] = v136;
          *((unsigned char *)a1 + 81) = *(unsigned char *)(a2 + 81);
          a1[11] = *(void *)(a2 + 88);
          sub_1BFF71924(0, &qword_1EB88E9D0);
LABEL_52:
          uint64_t v137 = *(int *)(v131 + 64);
          v491 = a1;
          __dst = (char *)a1 + v137;
          uint64_t v36 = (const void *)(a2 + v137);
          uint64_t v138 = sub_1C1518CDC();
          uint64_t v139 = *(void *)(v138 - 8);
          uint64_t v140 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v139 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v140(v36, 1, v138)) {
            goto LABEL_53;
          }
          (*(void (**)(char *, const void *, uint64_t))(v139 + 16))(__dst, v36, v138);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v139 + 56))(__dst, 0, 1, v138);
          break;
        case 6u:
          uint64_t v142 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v142;
          uint64_t v143 = *(void *)(a2 + 24);
          a1[2] = *(void *)(a2 + 16);
          a1[3] = v143;
          uint64_t v144 = *(void *)(a2 + 40);
          a1[4] = *(void *)(a2 + 32);
          a1[5] = v144;
          uint64_t v145 = *(void *)(a2 + 56);
          a1[6] = *(void *)(a2 + 48);
          a1[7] = v145;
          *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
          uint64_t v146 = *(void *)(a2 + 80);
          a1[9] = *(void *)(a2 + 72);
          a1[10] = v146;
          *((unsigned char *)a1 + 88) = *(unsigned char *)(a2 + 88);
          a1[12] = *(void *)(a2 + 96);
          sub_1BFF71924(0, &qword_1EB88E9C0);
          uint64_t v148 = *(int *)(v147 + 64);
          v491 = a1;
          __dstc = (char *)a1 + v148;
          uint64_t v149 = (const void *)(a2 + v148);
          uint64_t v150 = sub_1C1518CDC();
          uint64_t v151 = *(void *)(v150 - 8);
          long long v152 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v151 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v152(v149, 1, v150))
          {
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
            size_t v123 = *(void *)(*(void *)(v153 - 8) + 64);
            long long v124 = __dstc;
            uint64_t v125 = v149;
            goto LABEL_56;
          }
          (*(void (**)(char *, const void *, uint64_t))(v151 + 16))(__dstc, v149, v150);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v151 + 56))(__dstc, 0, 1, v150);
          break;
        case 7u:
          uint64_t v154 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v154;
          uint64_t v155 = *(void *)(a2 + 24);
          a1[2] = *(void *)(a2 + 16);
          a1[3] = v155;
          uint64_t v156 = *(void *)(a2 + 40);
          a1[4] = *(void *)(a2 + 32);
          a1[5] = v156;
          uint64_t v157 = *(void *)(a2 + 56);
          a1[6] = *(void *)(a2 + 48);
          a1[7] = v157;
          *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
          sub_1BFF719C0();
          uint64_t v159 = v158[13];
          v493 = a1;
          v479 = v158;
          __dsta = (char *)a1 + v159;
          uint64_t v105 = (const void *)(a2 + v159);
          uint64_t v106 = sub_1C1515FDC();
          uint64_t v107 = *(void *)(v106 - 8);
          uint64_t v160 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v107 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v160(v105, 1, v106))
          {
            long long v109 = &qword_1EB8948A0;
            long long v110 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
LABEL_60:
            sub_1C0AF9C38(0, (unint64_t *)v109, v110, MEMORY[0x1E4FBB718]);
            memcpy(__dsta, v105, *(void *)(*(void *)(v161 - 8) + 64));
          }
          else
          {
LABEL_94:
            (*(void (**)(char *, const void *, uint64_t))(v107 + 16))(__dsta, v105, v106);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(__dsta, 0, 1, v106);
          }
          a1 = v493;
          *((unsigned char *)v493 + v479[14]) = *(unsigned char *)(a2 + v479[14]);
          *(uint64_t *)((char *)v493 + v479[15]) = *(void *)(a2 + v479[15]);
          uint64_t v264 = v479[16];
          uint64_t v188 = (char *)v493 + v264;
          unint64_t v189 = (const void *)(a2 + v264);
          uint64_t v190 = sub_1C1518CDC();
          uint64_t v191 = *(void *)(v190 - 8);
          uint64_t v265 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v191 + 48);
          swift_bridgeObjectRetain();
          if (!v265(v189, 1, v190)) {
            goto LABEL_96;
          }
          goto LABEL_74;
        case 8u:
          uint64_t v162 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v162;
          uint64_t v163 = *(void *)(a2 + 24);
          a1[2] = *(void *)(a2 + 16);
          a1[3] = v163;
          uint64_t v164 = *(void *)(a2 + 40);
          a1[4] = *(void *)(a2 + 32);
          a1[5] = v164;
          uint64_t v165 = *(void *)(a2 + 48);
          uint64_t v166 = *(void *)(a2 + 56);
          *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
          uint64_t v167 = *(void *)(a2 + 72);
          a1[6] = v165;
          a1[7] = v166;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((~v167 & 0xF000000000000007) != 0) {
            swift_retain();
          }
          a1[9] = v167;
          *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
          a1[11] = *(void *)(a2 + 88);
          uint64_t v96 = &qword_1EB88E9A0;
          uint64_t v97 = sub_1C0036630;
          goto LABEL_73;
        case 9u:
          uint64_t v168 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v168;
          uint64_t v169 = *(void *)(a2 + 24);
          a1[2] = *(void *)(a2 + 16);
          a1[3] = v169;
          uint64_t v170 = *(void *)(a2 + 40);
          a1[4] = *(void *)(a2 + 32);
          a1[5] = v170;
          uint64_t v171 = *(void *)(a2 + 48);
          uint64_t v172 = *(void *)(a2 + 56);
          *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
          uint64_t v173 = *(void *)(a2 + 72);
          a1[6] = v171;
          a1[7] = v172;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((~v173 & 0xF000000000000007) != 0) {
            swift_retain();
          }
          a1[9] = v173;
          *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
          a1[11] = *(void *)(a2 + 88);
          uint64_t v96 = &qword_1EB88E998;
          uint64_t v97 = sub_1C00738F0;
          goto LABEL_73;
        case 0xAu:
          uint64_t v174 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v174;
          uint64_t v175 = *(void *)(a2 + 24);
          a1[2] = *(void *)(a2 + 16);
          a1[3] = v175;
          uint64_t v176 = *(void *)(a2 + 40);
          a1[4] = *(void *)(a2 + 32);
          a1[5] = v176;
          uint64_t v177 = *(void *)(a2 + 48);
          uint64_t v178 = *(void *)(a2 + 56);
          *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
          uint64_t v179 = *(void *)(a2 + 72);
          a1[6] = v177;
          a1[7] = v178;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((~v179 & 0xF000000000000007) != 0) {
            swift_retain();
          }
          a1[9] = v179;
          *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
          a1[11] = *(void *)(a2 + 88);
          uint64_t v96 = &qword_1EB88E9B0;
          uint64_t v97 = sub_1C0084C58;
          goto LABEL_73;
        case 0xBu:
          uint64_t v180 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v180;
          uint64_t v181 = *(void *)(a2 + 24);
          a1[2] = *(void *)(a2 + 16);
          a1[3] = v181;
          uint64_t v182 = *(void *)(a2 + 40);
          a1[4] = *(void *)(a2 + 32);
          a1[5] = v182;
          uint64_t v183 = *(void *)(a2 + 48);
          uint64_t v184 = *(void *)(a2 + 56);
          *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
          uint64_t v185 = *(void *)(a2 + 72);
          a1[6] = v183;
          a1[7] = v184;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((~v185 & 0xF000000000000007) != 0) {
            swift_retain();
          }
          a1[9] = v185;
          *((unsigned char *)a1 + 80) = *(unsigned char *)(a2 + 80);
          a1[11] = *(void *)(a2 + 88);
          uint64_t v96 = &qword_1EB88E9A8;
          uint64_t v97 = sub_1C006F9DC;
LABEL_73:
          sub_1C0AF9C9C(0, v96, (void (*)(void))v97);
          uint64_t v187 = *(int *)(v186 + 64);
          uint64_t v188 = (char *)a1 + v187;
          unint64_t v189 = (const void *)(a2 + v187);
          uint64_t v190 = sub_1C1518CDC();
          uint64_t v191 = *(void *)(v190 - 8);
          id v192 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v191 + 48);
          swift_bridgeObjectRetain();
          if (v192(v189, 1, v190))
          {
LABEL_74:
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
            memcpy(v188, v189, *(void *)(*(void *)(v193 - 8) + 64));
          }
          else
          {
LABEL_96:
            (*(void (**)(char *, const void *, uint64_t))(v191 + 16))(v188, v189, v190);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v191 + 56))(v188, 0, 1, v190);
          }
          goto LABEL_215;
        default:
          uint64_t v30 = *(void *)(a2 + 8);
          *a1 = *(void *)a2;
          a1[1] = v30;
          uint64_t v31 = *(void *)(a2 + 24);
          a1[2] = *(void *)(a2 + 16);
          a1[3] = v31;
          uint64_t v32 = *(void *)(a2 + 40);
          a1[4] = *(void *)(a2 + 32);
          a1[5] = v32;
          uint64_t v33 = *(void *)(a2 + 56);
          a1[6] = *(void *)(a2 + 48);
          a1[7] = v33;
          *((unsigned char *)a1 + 64) = *(unsigned char *)(a2 + 64);
          *((unsigned char *)a1 + 65) = *(unsigned char *)(a2 + 65);
          *((unsigned char *)a1 + 66) = *(unsigned char *)(a2 + 66);
          a1[9] = *(void *)(a2 + 72);
          sub_1BFF71924(0, &qword_1EB88E9C8);
          uint64_t v35 = *(int *)(v34 + 64);
          v491 = a1;
          __dst = (char *)a1 + v35;
          uint64_t v36 = (const void *)(a2 + v35);
          uint64_t v37 = sub_1C1518CDC();
          uint64_t v38 = *(void *)(v37 - 8);
          uint64_t v39 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v39(v36, 1, v37))
          {
LABEL_53:
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
            size_t v123 = *(void *)(*(void *)(v141 - 8) + 64);
            long long v124 = __dst;
            uint64_t v125 = v36;
LABEL_56:
            memcpy(v124, v125, v123);
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v38 + 16))(__dst, v36, v37);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v37);
          }
          break;
      }
      a1 = v491;
      goto LABEL_215;
    case 0x1Au:
      uint64_t v40 = sub_1C151CA7C();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(a1, a2, v40);
      goto LABEL_216;
    case 0x1Cu:
      uint64_t v70 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v70;
      *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_216;
    case 0x1Fu:
      uint64_t v41 = *(void *)a2;
      id v42 = *(id *)a2;
      *a1 = v41;
      goto LABEL_216;
    default:
      memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
  uint64_t v291 = *(void *)(a2 + 48);
  a1[5] = *(void *)(a2 + 40);
  a1[6] = v291;
  uint64_t v292 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v293 = (char *)a1 + v292;
  uint64_t v294 = a2 + v292;
  *(uint64_t *)((char *)a1 + v292) = *(void *)(a2 + v292);
  uint64_t v295 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  v296 = &v293[v295];
  uint64_t v297 = (void *)(v294 + v295);
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v355 = type metadata accessor for PuzzleStatisticValue(0);
      int v356 = swift_getEnumCaseMultiPayload();
      if (v356 == 5)
      {
        uint64_t v440 = type metadata accessor for PuzzleStreak();
        uint64_t v441 = *(void *)(v440 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v441 + 48))(v297, 1, v440))
        {
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v296, v297, *(void *)(*(void *)(v442 - 8) + 64));
        }
        else
        {
          uint64_t v452 = sub_1C151555C();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v452 - 8) + 16))(v296, v297, v452);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v441 + 56))(v296, 0, 1, v440);
        }
        uint64_t v443 = a1;
      }
      else
      {
        if (v356 != 4)
        {
          uint64_t v443 = a1;
          memcpy(v296, v297, *(void *)(*(void *)(v355 - 8) + 64));
          goto LABEL_196;
        }
        uint64_t v357 = type metadata accessor for PuzzleStreak();
        uint64_t v358 = *(void *)(v357 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v358 + 48))(v297, 1, v357))
        {
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v296, v297, *(void *)(*(void *)(v359 - 8) + 64));
        }
        else
        {
          uint64_t v451 = sub_1C151555C();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v451 - 8) + 16))(v296, v297, v451);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v358 + 56))(v296, 0, 1, v357);
        }
        uint64_t v443 = a1;
      }
      swift_storeEnumTagMultiPayload();
LABEL_196:
      uint64_t v453 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v454 = *(int *)(v453 + 20);
      v455 = &v296[v454];
      uint64_t v456 = (char *)v297 + v454;
      int v457 = swift_getEnumCaseMultiPayload();
      if (v457 == 5)
      {
        uint64_t v458 = type metadata accessor for PuzzleStreak();
        uint64_t v459 = *(void *)(v458 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v459 + 48))(v456, 1, v458))
        {
LABEL_201:
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v455, v456, *(void *)(*(void *)(v460 - 8) + 64));
          goto LABEL_204;
        }
      }
      else
      {
        if (v457 != 4)
        {
          memcpy(v455, v456, *(void *)(*(void *)(v355 - 8) + 64));
          goto LABEL_205;
        }
        uint64_t v458 = type metadata accessor for PuzzleStreak();
        uint64_t v459 = *(void *)(v458 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v459 + 48))(v456, 1, v458)) {
          goto LABEL_201;
        }
      }
      uint64_t v461 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v461 - 8) + 16))(v455, v456, v461);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v459 + 56))(v455, 0, 1, v458);
LABEL_204:
      swift_storeEnumTagMultiPayload();
LABEL_205:
      uint64_t v462 = *(int *)(v453 + 24);
      v463 = &v296[v462];
      v464 = (char *)v297 + v462;
      int v465 = swift_getEnumCaseMultiPayload();
      a1 = v443;
      if (v465 == 5)
      {
        uint64_t v466 = type metadata accessor for PuzzleStreak();
        uint64_t v467 = *(void *)(v466 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v467 + 48))(v464, 1, v466))
        {
LABEL_210:
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v463, v464, *(void *)(*(void *)(v468 - 8) + 64));
          goto LABEL_213;
        }
      }
      else
      {
        if (v465 != 4)
        {
          memcpy(v463, v464, *(void *)(*(void *)(v355 - 8) + 64));
          goto LABEL_214;
        }
        uint64_t v466 = type metadata accessor for PuzzleStreak();
        uint64_t v467 = *(void *)(v466 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v467 + 48))(v464, 1, v466)) {
          goto LABEL_210;
        }
      }
      uint64_t v469 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v469 - 8) + 16))(v463, v464, v469);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v467 + 56))(v463, 0, 1, v466);
      goto LABEL_213;
    case 2u:
      v351 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v352 = *((void *)v351 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v352 + 48))(v297, 1, v351))
      {
        sub_1C0AF9C38(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
        size_t v354 = *(void *)(*(void *)(v353 - 8) + 64);
        goto LABEL_183;
      }
      uint64_t v392 = sub_1C151631C();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v392 - 8) + 16))(v296, v297, v392);
      v393 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
      uint64_t v394 = v393[5];
      uint64_t v395 = &v296[v394];
      uint64_t v396 = (void *)((char *)v297 + v394);
      uint64_t v397 = v396[1];
      *(void *)uint64_t v395 = *v396;
      *((void *)v395 + 1) = v397;
      uint64_t v398 = v393[6];
      id v399 = &v296[v398];
      uint64_t v400 = (void *)((char *)v297 + v398);
      uint64_t v401 = v400[1];
      *(void *)id v399 = *v400;
      *((void *)v399 + 1) = v401;
      v402 = v400 + 2;
      unint64_t v403 = v400[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v403 >> 60 == 15)
      {
        *((_OWORD *)v399 + 1) = *(_OWORD *)v402;
      }
      else
      {
        uint64_t v444 = *v402;
        sub_1BFE95820(*v402, v403);
        *((void *)v399 + 2) = v444;
        *((void *)v399 + 3) = v403;
      }
      *(void *)&v296[v393[7]] = *(void *)((char *)v297 + v393[7]);
      *(void *)&v296[v393[8]] = *(void *)((char *)v297 + v393[8]);
      *(void *)&v296[v351[5]] = *(void *)((char *)v297 + v351[5]);
      *(void *)&v296[v351[6]] = *(void *)((char *)v297 + v351[6]);
      uint64_t v445 = v351[7];
      uint64_t v446 = &v296[v445];
      v447 = (void *)((char *)v297 + v445);
      uint64_t v448 = v447[1];
      *(void *)uint64_t v446 = *v447;
      *((void *)v446 + 1) = v448;
      int v449 = *(void (**)(char *, void, uint64_t, int *))(v352 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v449(v296, 0, 1, v351);
      goto LABEL_214;
    case 3u:
      v497 = a1;
      uint64_t v360 = v297[1];
      *(void *)v296 = *v297;
      *((void *)v296 + 1) = v360;
      v296[16] = *((unsigned char *)v297 + 16);
      uint64_t v361 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v362 = v361[6];
      uint64_t v363 = &v296[v362];
      v364 = (char *)v297 + v362;
      uint64_t v365 = type metadata accessor for PuzzleStreak();
      uint64_t v366 = *(void *)(v365 - 8);
      uint64_t v367 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v366 + 48);
      if (v367(v364, 1, v365))
      {
        sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v363, v364, *(void *)(*(void *)(v368 - 8) + 64));
      }
      else
      {
        uint64_t v404 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v404 - 8) + 16))(v363, v364, v404);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v366 + 56))(v363, 0, 1, v365);
      }
      uint64_t v405 = v361[7];
      v406 = &v296[v405];
      v407 = (char *)v297 + v405;
      if (v367((char *)v297 + v405, 1, v365))
      {
        sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v406, v407, *(void *)(*(void *)(v408 - 8) + 64));
      }
      else
      {
        uint64_t v427 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v427 - 8) + 16))(v406, v407, v427);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v366 + 56))(v406, 0, 1, v365);
      }
      uint64_t v428 = v361[8];
      uint64_t v429 = &v296[v428];
      uint64_t v430 = (_OWORD *)((char *)v297 + v428);
      long long v431 = v430[1];
      *(_OWORD *)uint64_t v429 = *v430;
      *((_OWORD *)v429 + 1) = v431;
      *(_OWORD *)(v429 + 25) = *(_OWORD *)((char *)v430 + 25);
      uint64_t v432 = v361[9];
      uint64_t v433 = &v296[v432];
      v434 = (_OWORD *)((char *)v297 + v432);
      *(_OWORD *)(v433 + 25) = *(_OWORD *)((char *)v434 + 25);
      long long v435 = v434[1];
      *(_OWORD *)uint64_t v433 = *v434;
      *((_OWORD *)v433 + 1) = v435;
      uint64_t v436 = v361[10];
      uint64_t v437 = &v296[v436];
      uint64_t v438 = (_OWORD *)((char *)v297 + v436);
      long long v439 = v438[1];
      *(_OWORD *)uint64_t v437 = *v438;
      *((_OWORD *)v437 + 1) = v439;
      *(_OWORD *)(v437 + 25) = *(_OWORD *)((char *)v438 + 25);
      a1 = v497;
      goto LABEL_214;
    default:
      uint64_t v298 = type metadata accessor for PuzzleStatisticValue(0);
      int v299 = swift_getEnumCaseMultiPayload();
      if (v299 == 5)
      {
        uint64_t v300 = type metadata accessor for PuzzleStreak();
        uint64_t v301 = *(void *)(v300 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v301 + 48))(v297, 1, v300)) {
          goto LABEL_115;
        }
      }
      else
      {
        if (v299 != 4)
        {
          size_t v354 = *(void *)(*(void *)(v298 - 8) + 64);
LABEL_183:
          memcpy(v296, v297, v354);
          goto LABEL_214;
        }
        uint64_t v300 = type metadata accessor for PuzzleStreak();
        uint64_t v301 = *(void *)(v300 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v301 + 48))(v297, 1, v300))
        {
LABEL_115:
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v296, v297, *(void *)(*(void *)(v302 - 8) + 64));
          goto LABEL_213;
        }
      }
      uint64_t v450 = sub_1C151555C();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v450 - 8) + 16))(v296, v297, v450);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v301 + 56))(v296, 0, 1, v300);
LABEL_213:
      swift_storeEnumTagMultiPayload();
LABEL_214:
      swift_storeEnumTagMultiPayload();
LABEL_215:
      swift_storeEnumTagMultiPayload();
LABEL_216:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

uint64_t *sub_1C0AFED98(uint64_t *a1, long long *a2, uint64_t a3)
{
  if (a1 != (uint64_t *)a2)
  {
    sub_1C0B02B98((uint64_t)a1, type metadata accessor for FormatInspectionItem.Value);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        *a1 = *(void *)a2;
        a1[1] = *((void *)a2 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_211;
      case 3u:
      case 0xFu:
        uint64_t v36 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v36;
        swift_retain();
        goto LABEL_211;
      case 4u:
      case 0x16u:
      case 0x19u:
      case 0x1Bu:
      case 0x1Du:
      case 0x1Eu:
        *a1 = *(void *)a2;
        swift_retain();
        goto LABEL_211;
      case 5u:
      case 0xAu:
        *a1 = *(void *)a2;
        a1[1] = *((void *)a2 + 1);
        swift_retain();
        swift_retain();
        goto LABEL_211;
      case 6u:
        *a1 = *(void *)a2;
        a1[1] = *((void *)a2 + 1);
        long long v6 = a2[2];
        *((_OWORD *)a1 + 1) = a2[1];
        *((_OWORD *)a1 + 2) = v6;
        uint64_t v7 = *((void *)a2 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v7)
        {
          a1[6] = v7;
          a1[7] = *((void *)a2 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)a1 + 3) = a2[3];
        }
        goto LABEL_211;
      case 7u:
        long long v8 = *a2;
        long long v9 = a2[1];
        long long v10 = a2[2];
        *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
        *((_OWORD *)a1 + 1) = v9;
        *((_OWORD *)a1 + 2) = v10;
        *(_OWORD *)a1 = v8;
        long long v11 = *(long long *)((char *)a2 + 56);
        long long v12 = *(long long *)((char *)a2 + 72);
        long long v13 = *(long long *)((char *)a2 + 88);
        *((unsigned char *)a1 + 104) = *((unsigned char *)a2 + 104);
        *(_OWORD *)(a1 + 11) = v13;
        *(_OWORD *)(a1 + 9) = v12;
        *(_OWORD *)(a1 + 7) = v11;
        a1[14] = *((void *)a2 + 14);
        a1[15] = *((void *)a2 + 15);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_211;
      case 8u:
        uint64_t v37 = *(void *)a2;
        sub_1BFF7B774(*(void *)a2);
        *a1 = v37;
        goto LABEL_211;
      case 9u:
        *a1 = *(void *)a2;
        a1[1] = *((void *)a2 + 1);
        uint64_t v38 = *((void *)a2 + 2);
        uint64_t v39 = *((void *)a2 + 3);
        uint64_t v40 = *((void *)a2 + 4);
        uint64_t v41 = *((void *)a2 + 5);
        uint64_t v42 = *((void *)a2 + 6);
        uint64_t v376 = *((void *)a2 + 7);
        uint64_t v43 = *((void *)a2 + 8);
        uint64_t v379 = *((void *)a2 + 9);
        char v44 = *((unsigned char *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C03A98B4(v38, v39, v40, v41, v42, v376, v43, v379, v44);
        a1[2] = v38;
        a1[3] = v39;
        a1[4] = v40;
        a1[5] = v41;
        a1[6] = v42;
        a1[7] = v376;
        a1[8] = v43;
        a1[9] = v379;
        *((unsigned char *)a1 + 80) = v44;
        uint64_t v45 = *((void *)a2 + 11);
        uint64_t v46 = *((void *)a2 + 12);
        uint64_t v47 = *((void *)a2 + 13);
        uint64_t v48 = *((void *)a2 + 14);
        uint64_t v49 = *((void *)a2 + 15);
        uint64_t v50 = *((void *)a2 + 16);
        uint64_t v51 = *((void *)a2 + 17);
        uint64_t v52 = *((void *)a2 + 18);
        char v53 = *((unsigned char *)a2 + 152);
        sub_1C03A98B4(v45, v46, v47, v48, v49, v50, v51, v52, v53);
        a1[11] = v45;
        a1[12] = v46;
        a1[13] = v47;
        a1[14] = v48;
        a1[15] = v49;
        a1[16] = v50;
        a1[17] = v51;
        a1[18] = v52;
        *((unsigned char *)a1 + 152) = v53;
        goto LABEL_211;
      case 0xCu:
        uint64_t v14 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, long long *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        goto LABEL_211;
      case 0xDu:
        long long v15 = a2[1];
        *(_OWORD *)a1 = *a2;
        *((_OWORD *)a1 + 1) = v15;
        a1[4] = *((void *)a2 + 4);
        a1[5] = *((void *)a2 + 5);
        *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
        swift_bridgeObjectRetain();
        goto LABEL_211;
      case 0xEu:
        *a1 = *(void *)a2;
        a1[1] = *((void *)a2 + 1);
        a1[2] = *((void *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_211;
      case 0x10u:
        uint64_t v54 = *((void *)a2 + 3);
        a1[3] = v54;
        a1[4] = *((void *)a2 + 4);
        (**(void (***)(uint64_t *, long long *))(v54 - 8))(a1, a2);
        a1[5] = *((void *)a2 + 5);
        a1[6] = *((void *)a2 + 6);
        uint64_t v55 = *((void *)a2 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v55)
        {
          a1[7] = *((void *)a2 + 7);
          a1[8] = *((void *)a2 + 8);
          a1[9] = *((void *)a2 + 9);
          a1[10] = *((void *)a2 + 10);
          a1[11] = *((void *)a2 + 11);
          a1[12] = *((void *)a2 + 12);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v61 = *(long long *)((char *)a2 + 56);
          long long v62 = *(long long *)((char *)a2 + 88);
          *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 72);
          *(_OWORD *)(a1 + 11) = v62;
          *(_OWORD *)(a1 + 7) = v61;
        }
        *((unsigned char *)a1 + 104) = *((unsigned char *)a2 + 104);
        goto LABEL_211;
      case 0x11u:
        type metadata accessor for FeedGroupItem();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v121 = *(void **)a2;
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
            *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
            uint64_t v122 = *((void *)a2 + 4);
            *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
            a1[4] = v122;
            a1[6] = *((void *)a2 + 6);
            size_t v123 = (void *)*((void *)a2 + 7);
            a1[7] = (uint64_t)v123;
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            uint64_t v124 = *((void *)a2 + 10);
            id v125 = v121;
            swift_bridgeObjectRetain();
            id v126 = v123;
            if (v124 == 1)
            {
              long long v127 = *(long long *)((char *)a2 + 72);
              long long v128 = *(long long *)((char *)a2 + 104);
              *(_OWORD *)(a1 + 11) = *(long long *)((char *)a2 + 88);
              *(_OWORD *)(a1 + 13) = v128;
              *(_OWORD *)(a1 + 9) = v127;
            }
            else
            {
              a1[9] = *((void *)a2 + 9);
              a1[10] = *((void *)a2 + 10);
              a1[11] = *((void *)a2 + 11);
              a1[12] = *((void *)a2 + 12);
              uint64_t v170 = (void *)*((void *)a2 + 13);
              a1[13] = (uint64_t)v170;
              a1[14] = *((void *)a2 + 14);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v171 = v170;
            }
            if (*((void *)a2 + 16) >= 0x11uLL)
            {
              a1[15] = *((void *)a2 + 15);
              a1[16] = *((void *)a2 + 16);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 15) = *(long long *)((char *)a2 + 120);
            }
            *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
            goto LABEL_210;
          case 2u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_210;
          case 3u:
            *(_OWORD *)a1 = *a2;
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
            uint64_t v129 = (int *)type metadata accessor for FeedWeather(0);
            uint64_t v130 = v129[7];
            uint64_t v131 = (char *)a1 + v130;
            uint64_t v132 = (uint64_t)a2 + v130;
            uint64_t v133 = sub_1C151E2BC();
            uint64_t v134 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v133 - 8) + 16);
            swift_bridgeObjectRetain();
            v134(v131, v132, v133);
            *((unsigned char *)a1 + v129[8]) = *((unsigned char *)a2 + v129[8]);
            uint64_t v135 = v129[9];
            uint64_t v136 = (char *)a1 + v135;
            uint64_t v137 = (uint64_t)a2 + v135;
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
            uint64_t v139 = v138;
            uint64_t v140 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v138 - 8) + 16);
            v140(v136, v137, v138);
            uint64_t v141 = (int *)type metadata accessor for FeedWeather.Temperature(0);
            v140(&v136[v141[5]], v137 + v141[5], v139);
            v140(&v136[v141[6]], v137 + v141[6], v139);
            v140(&v136[v141[7]], v137 + v141[7], v139);
            uint64_t v142 = v129[10];
            uint64_t v143 = (uint64_t *)((char *)a1 + v142);
            uint64_t v144 = (void *)((char *)a2 + v142);
            void *v143 = *v144;
            v143[1] = v144[1];
            swift_bridgeObjectRetain();
            goto LABEL_210;
          case 4u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            a1[4] = *((void *)a2 + 4);
            a1[5] = *((void *)a2 + 5);
            *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
            *((unsigned char *)a1 + 49) = *((unsigned char *)a2 + 49);
            a1[7] = *((void *)a2 + 7);
            a1[8] = *((void *)a2 + 8);
            a1[9] = *((void *)a2 + 9);
            a1[10] = *((void *)a2 + 10);
            a1[11] = *((void *)a2 + 11);
            a1[12] = *((void *)a2 + 12);
            a1[13] = *((void *)a2 + 13);
            *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
            a1[15] = *((void *)a2 + 15);
            a1[16] = *((void *)a2 + 16);
            *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
            a1[18] = *((void *)a2 + 18);
            a1[19] = *((void *)a2 + 19);
            a1[20] = *((void *)a2 + 20);
            a1[21] = *((void *)a2 + 21);
            uint64_t v145 = *((void *)a2 + 22);
            *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
            a1[22] = v145;
            a1[24] = *((void *)a2 + 24);
            a1[25] = *((void *)a2 + 25);
            a1[26] = *((void *)a2 + 26);
            uint64_t v146 = *((void *)a2 + 27);
            *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
            a1[27] = v146;
            __dste = (void *)*((void *)a2 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((unint64_t)__dste >= 0x11)
            {
              a1[29] = *((void *)a2 + 29);
              a1[30] = *((void *)a2 + 30);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 29) = *(long long *)((char *)a2 + 232);
            }
            goto LABEL_210;
          case 5u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            uint64_t v147 = *((void *)a2 + 2);
            *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
            a1[2] = v147;
            a1[4] = *((void *)a2 + 4);
            a1[5] = *((void *)a2 + 5);
            a1[6] = *((void *)a2 + 6);
            *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
            uint64_t v377 = (int *)type metadata accessor for FeedHeadline(0);
            uint64_t v148 = v377[10];
            uint64_t v149 = (char *)a1 + v148;
            uint64_t v150 = (uint64_t)a2 + v148;
            *uint64_t v149 = *((unsigned char *)a2 + v148);
            v149[1] = *((unsigned char *)a2 + v148 + 1);
            __dstc = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v151 = __dstc[6];
            uint64_t v365 = &v149[v151];
            long long v152 = (char *)(v150 + v151);
            uint64_t v153 = (int *)type metadata accessor for SharedItem();
            uint64_t v360 = *((void *)v153 - 1);
            uint64_t v154 = *(unsigned int (**)(char *, uint64_t, int *))(v360 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v154(v152, 1, v153))
            {
              uint64_t v155 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v365, v152, *(void *)(*(void *)(v155 - 8) + 64));
            }
            else
            {
              uint64_t v198 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(v365, v152, v198);
              v365[v153[5]] = v152[v153[5]];
              uint64_t v199 = v153[6];
              long long v200 = *(void **)&v152[v199];
              *(void *)&v365[v199] = v200;
              uint64_t v201 = v153[7];
              uint64_t v369 = &v365[v201];
              uint64_t v358 = &v152[v201];
              uint64_t v202 = sub_1C1515FDC();
              unint64_t v203 = *(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16);
              id v204 = v200;
              v203(v369, v358, v202);
              (*(void (**)(char *, void, uint64_t, int *))(v360 + 56))(v365, 0, 1, v153);
            }
            v149[__dstc[7]] = *(unsigned char *)(v150 + __dstc[7]);
            v149[__dstc[8]] = *(unsigned char *)(v150 + __dstc[8]);
            v149[__dstc[9]] = *(unsigned char *)(v150 + __dstc[9]);
            v149[__dstc[10]] = *(unsigned char *)(v150 + __dstc[10]);
            uint64_t v205 = v377[11];
            uint64_t v206 = (char *)a1 + v205;
            uint64_t v207 = (char *)a2 + v205;
            uint64_t v208 = sub_1C151D2DC();
            uint64_t v209 = *(void *)(v208 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v209 + 48))(v207, 1, v208))
            {
              sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
              memcpy(v206, v207, *(void *)(*(void *)(v210 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v209 + 16))(v206, v207, v208);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v209 + 56))(v206, 0, 1, v208);
            }
            uint64_t v223 = v377[12];
            uint64_t v224 = (uint64_t *)((char *)a1 + v223);
            uint64_t v225 = (void *)((char *)a2 + v223);
            if (v225[1] >= 0x11uLL)
            {
              *uint64_t v224 = *v225;
              v224[1] = v225[1];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)uint64_t v224 = *(_OWORD *)v225;
            }
            uint64_t v226 = v377[13];
            unint64_t v227 = *(void *)((char *)a2 + v226);
            if (v227 >= 2)
            {
              if (v227 == 2)
              {
                *(uint64_t *)((char *)a1 + v226) = 2;
              }
              else
              {
                *(uint64_t *)((char *)a1 + v226) = v227;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(uint64_t *)((char *)a1 + v226) = v227;
            }
            uint64_t v261 = v377[14];
            uint64_t v262 = *(void **)((char *)a2 + v261);
            *(uint64_t *)((char *)a1 + v261) = (uint64_t)v262;
            id v263 = v262;
            goto LABEL_210;
          case 6u:
            *a1 = *(void *)a2;
            uint64_t v156 = *((void *)a2 + 1);
            *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
            a1[1] = v156;
            if (*((void *)a2 + 4) >= 0x11uLL)
            {
              a1[3] = *((void *)a2 + 3);
              a1[4] = *((void *)a2 + 4);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 3) = *(long long *)((char *)a2 + 24);
            }
            a1[5] = *((void *)a2 + 5);
            a1[6] = *((void *)a2 + 6);
            uint64_t v172 = (int *)type metadata accessor for FeedWebEmbed();
            uint64_t v173 = v172[8];
            uint64_t v174 = (char *)a1 + v173;
            uint64_t v175 = (uint64_t)a2 + v173;
            uint64_t v176 = sub_1C1515FDC();
            uint64_t v177 = *(void *)(v176 - 8);
            uint64_t v178 = *(void (**)(char *, uint64_t, void *))(v177 + 16);
            uint64_t v179 = (void *)v176;
            swift_bridgeObjectRetain();
            v178(v174, v175, v179);
            uint64_t v180 = v172[9];
            uint64_t v181 = (char *)a1 + v180;
            uint64_t v182 = (char *)a2 + v180;
            __dstd = v179;
            uint64_t v366 = (void (*)(char *, char *, void *))v178;
            if ((*(unsigned int (**)(uint64_t, uint64_t, void *))(v177 + 48))((uint64_t)a2 + v180, 1, v179))
            {
              sub_1C0AF9C38(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
              memcpy(v181, v182, *(void *)(*(void *)(v183 - 8) + 64));
            }
            else
            {
              v178(v181, (uint64_t)v182, v179);
              (*(void (**)(char *, void, uint64_t, void *))(v177 + 56))(v181, 0, 1, v179);
            }
            *(uint64_t *)((char *)a1 + v172[10]) = *(void *)((char *)a2 + v172[10]);
            *(uint64_t *)((char *)a1 + v172[11]) = *(void *)((char *)a2 + v172[11]);
            id v378 = v172;
            uint64_t v211 = v172[12];
            uint64_t v212 = (uint64_t *)((char *)a1 + v211);
            uint64_t v213 = (void *)((char *)a2 + v211);
            uint64_t v214 = type metadata accessor for FeedHeadline(0);
            uint64_t v215 = *(void *)(v214 - 8);
            uint64_t v216 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v215 + 48);
            swift_retain();
            swift_retain();
            if (v216(v213, 1, v214))
            {
              sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
              memcpy(v212, v213, *(void *)(*(void *)(v217 - 8) + 64));
            }
            else
            {
              *uint64_t v212 = *v213;
              v212[1] = v213[1];
              uint64_t v228 = v213[2];
              *((unsigned char *)v212 + 24) = *((unsigned char *)v213 + 24);
              v212[2] = v228;
              v212[4] = v213[4];
              uint64_t v356 = v215;
              v212[5] = v213[5];
              v212[6] = v213[6];
              *((unsigned char *)v212 + 56) = *((unsigned char *)v213 + 56);
              uint64_t v361 = (int *)v214;
              uint64_t v229 = *(int *)(v214 + 40);
              unint64_t v230 = (char *)v212 + v229;
              uint64_t v231 = (char *)v213 + v229;
              *unint64_t v230 = *((unsigned char *)v213 + v229);
              v230[1] = *((unsigned char *)v213 + v229 + 1);
              uint64_t v359 = (int *)type metadata accessor for FeedHeadline.State(0);
              uint64_t v232 = v359[6];
              uint64_t v355 = &v230[v232];
              uint64_t v233 = &v231[v232];
              uint64_t v234 = (int *)type metadata accessor for SharedItem();
              uint64_t v354 = *((void *)v234 - 1);
              uint64_t v235 = *(unsigned int (**)(char *, uint64_t, int *))(v354 + 48);
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              swift_unknownObjectRetain();
              if (v235(v233, 1, v234))
              {
                uint64_t v236 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(v355, v233, *(void *)(*(void *)(v236 - 8) + 64));
              }
              else
              {
                uint64_t v264 = sub_1C151631C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v264 - 8) + 16))(v355, v233, v264);
                v355[v234[5]] = v233[v234[5]];
                uint64_t v265 = v234[6];
                uint64_t v266 = *(void **)&v233[v265];
                *(void *)&v355[v265] = v266;
                uint64_t v267 = v234[7];
                uint64_t v268 = &v355[v267];
                id v269 = &v233[v267];
                id v270 = v266;
                v366(v268, v269, __dstd);
                (*(void (**)(char *, void, uint64_t, int *))(v354 + 56))(v355, 0, 1, v234);
              }
              v230[v359[7]] = v231[v359[7]];
              v230[v359[8]] = v231[v359[8]];
              v230[v359[9]] = v231[v359[9]];
              v230[v359[10]] = v231[v359[10]];
              uint64_t v271 = *(int *)(v214 + 44);
              uint64_t v272 = (char *)v212 + v271;
              uint64_t v273 = (char *)v213 + v271;
              uint64_t v274 = sub_1C151D2DC();
              uint64_t v275 = *(void *)(v274 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v275 + 48))(v273, 1, v274))
              {
                sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
                memcpy(v272, v273, *(void *)(*(void *)(v276 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v275 + 16))(v272, v273, v274);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v275 + 56))(v272, 0, 1, v274);
              }
              uint64_t v277 = v361[12];
              uint64_t v278 = (void *)((char *)v212 + v277);
              uint64_t v279 = (void *)((char *)v213 + v277);
              if (v279[1] >= 0x11uLL)
              {
                *uint64_t v278 = *v279;
                v278[1] = v279[1];
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)uint64_t v278 = *(_OWORD *)v279;
              }
              uint64_t v280 = v361[13];
              unint64_t v281 = *(void *)((char *)v213 + v280);
              if (v281 >= 2)
              {
                if (v281 == 2)
                {
                  *(void *)((char *)v212 + v280) = 2;
                }
                else
                {
                  *(void *)((char *)v212 + v280) = v281;
                  swift_unknownObjectRetain();
                }
              }
              else
              {
                *(void *)((char *)v212 + v280) = v281;
              }
              uint64_t v297 = v361[14];
              uint64_t v298 = *(void **)((char *)v213 + v297);
              *(void *)((char *)v212 + v297) = v298;
              int v299 = *(void (**)(void *, void, uint64_t, int *))(v356 + 56);
              id v300 = v298;
              v299(v212, 0, 1, v361);
            }
            uint64_t v301 = v378[13];
            uint64_t v302 = (uint64_t *)((char *)a1 + v301);
            uint64_t v303 = (void *)((char *)a2 + v301);
            uint64_t v304 = type metadata accessor for WebEmbedDataVisualization();
            uint64_t v305 = *(void *)(v304 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v305 + 48))(v303, 1, v304))
            {
              sub_1C0AF9C38(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
              memcpy(v302, v303, *(void *)(*(void *)(v306 - 8) + 64));
              uint64_t v307 = v378;
            }
            else
            {
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              *uint64_t v302 = *v303;
              if (EnumCaseMultiPayload == 1)
              {
                v302[1] = v303[1];
                uint64_t v309 = type metadata accessor for GenericDataVisualization();
                uint64_t v310 = *(int *)(v309 + 20);
                uint64_t v311 = (char *)v302 + v310;
                long long v312 = (char *)v303 + v310;
                swift_bridgeObjectRetain();
                v366(v311, v312, __dstd);
                *(void *)((char *)v302 + *(int *)(v309 + 24)) = *(void *)((char *)v303 + *(int *)(v309 + 24));
                swift_bridgeObjectRetain();
              }
              else
              {
                swift_retain();
              }
              uint64_t v307 = v378;
              swift_storeEnumTagMultiPayload();
              (*(void (**)(void *, void, uint64_t, uint64_t))(v305 + 56))(v302, 0, 1, v304);
            }
            *((unsigned char *)a1 + v307[14]) = *((unsigned char *)a2 + v307[14]);
            swift_storeEnumTagMultiPayload();
            goto LABEL_211;
          case 7u:
            uint64_t v157 = *(void **)a2;
            *a1 = *(void *)a2;
            id v158 = v157;
            goto LABEL_210;
          case 8u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            uint64_t v159 = *((void *)a2 + 3);
            *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
            a1[3] = v159;
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            goto LABEL_210;
          case 9u:
            *a1 = *(void *)a2;
            uint64_t v160 = *((void *)a2 + 1);
            *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
            a1[1] = v160;
            if (*((void *)a2 + 4) >= 0x11uLL)
            {
              a1[3] = *((void *)a2 + 3);
              a1[4] = *((void *)a2 + 4);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 3) = *(long long *)((char *)a2 + 24);
            }
            a1[5] = *((void *)a2 + 5);
            a1[6] = *((void *)a2 + 6);
            a1[7] = *((void *)a2 + 7);
            uint64_t v184 = (void *)*((void *)a2 + 8);
            a1[8] = (uint64_t)v184;
            *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
            a1[10] = *((void *)a2 + 10);
            uint64_t v185 = *((void *)a2 + 14);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            id v186 = v184;
            swift_bridgeObjectRetain();
            if (v185)
            {
              a1[14] = v185;
              a1[15] = *((void *)a2 + 15);
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v185 - 8))((uint64_t)(a1 + 11), (uint64_t)a2 + 88, v185);
            }
            else
            {
              long long v218 = *(long long *)((char *)a2 + 88);
              long long v219 = *(long long *)((char *)a2 + 104);
              a1[15] = *((void *)a2 + 15);
              *(_OWORD *)(a1 + 11) = v218;
              *(_OWORD *)(a1 + 13) = v219;
            }
            uint64_t v220 = a1 + 16;
            uint64_t v221 = a2 + 8;
            uint64_t v222 = *((void *)a2 + 19);
            if (v222)
            {
              a1[19] = v222;
              a1[20] = *((void *)a2 + 20);
              (**(void (***)(_OWORD *, long long *))(v222 - 8))(v220, v221);
            }
            else
            {
              long long v237 = *v221;
              long long v238 = a2[9];
              a1[20] = *((void *)a2 + 20);
              *uint64_t v220 = v237;
              *((_OWORD *)a1 + 9) = v238;
            }
            uint64_t v239 = a1 + 21;
            uint64_t v240 = (long long *)((char *)a2 + 168);
            uint64_t v241 = *((void *)a2 + 24);
            if (v241)
            {
              a1[24] = v241;
              a1[25] = *((void *)a2 + 25);
              (**(void (***)(_OWORD *, long long *))(v241 - 8))(v239, v240);
            }
            else
            {
              long long v242 = *v240;
              long long v243 = *(long long *)((char *)a2 + 184);
              a1[25] = *((void *)a2 + 25);
              *uint64_t v239 = v242;
              *(_OWORD *)(a1 + 23) = v243;
            }
            goto LABEL_210;
          case 0xAu:
            *a1 = *(void *)a2;
            uint64_t v161 = *((void *)a2 + 1);
            *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
            a1[1] = v161;
            if (*((void *)a2 + 4) >= 0x11uLL)
            {
              a1[3] = *((void *)a2 + 3);
              a1[4] = *((void *)a2 + 4);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 3) = *(long long *)((char *)a2 + 24);
            }
            a1[5] = *((void *)a2 + 5);
            a1[6] = *((void *)a2 + 6);
            a1[7] = *((void *)a2 + 7);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            goto LABEL_210;
          case 0xBu:
            *a1 = *(void *)a2;
            uint64_t v162 = *((void *)a2 + 1);
            *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
            a1[1] = v162;
            if (*((void *)a2 + 4) >= 0x11uLL)
            {
              a1[3] = *((void *)a2 + 3);
              a1[4] = *((void *)a2 + 4);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 3) = *(long long *)((char *)a2 + 24);
            }
            break;
          case 0xCu:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            uint64_t v163 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
            uint64_t v164 = (char *)a1 + v163;
            uint64_t v165 = (uint64_t)a2 + v163;
            uint64_t v166 = sub_1C151D6DC();
            uint64_t v167 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v166 - 8) + 16);
            swift_bridgeObjectRetain();
            v167(v164, v165, v166);
            goto LABEL_210;
          default:
            *a1 = *(void *)a2;
            uint64_t v56 = (void *)*((void *)a2 + 1);
            a1[1] = (uint64_t)v56;
            *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
            swift_unknownObjectRetain();
            id v57 = v56;
            goto LABEL_210;
        }
        break;
      case 0x12u:
        uint64_t v58 = *((void *)a2 + 3);
        a1[3] = v58;
        (**(void (***)(uint64_t *, long long *))(v58 - 8))(a1, a2);
        goto LABEL_211;
      case 0x13u:
        *a1 = *(void *)a2;
        uint64_t v16 = *((void *)a2 + 1);
        swift_retain();
        if (v16 == 1)
        {
          *(_OWORD *)(a1 + 1) = *(long long *)((char *)a2 + 8);
          long long v17 = *(long long *)((char *)a2 + 24);
          long long v18 = *(long long *)((char *)a2 + 40);
          long long v19 = *(long long *)((char *)a2 + 72);
          *(_OWORD *)(a1 + 7) = *(long long *)((char *)a2 + 56);
          *(_OWORD *)(a1 + 9) = v19;
          *(_OWORD *)(a1 + 3) = v17;
          *(_OWORD *)(a1 + 5) = v18;
          long long v20 = *(long long *)((char *)a2 + 88);
          long long v21 = *(long long *)((char *)a2 + 104);
          long long v22 = *(long long *)((char *)a2 + 120);
          *(_OWORD *)((char *)a1 + 129) = *(long long *)((char *)a2 + 129);
          *(_OWORD *)(a1 + 13) = v21;
          *(_OWORD *)(a1 + 15) = v22;
          *(_OWORD *)(a1 + 11) = v20;
        }
        else
        {
          a1[1] = v16;
          a1[2] = *((void *)a2 + 2);
          a1[3] = *((void *)a2 + 3);
          a1[4] = *((void *)a2 + 4);
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          a1[6] = *((void *)a2 + 6);
          a1[7] = *((void *)a2 + 7);
          int v59 = *((unsigned __int8 *)a2 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v59 == 255)
          {
            long long v60 = a2[4];
            *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
            *((_OWORD *)a1 + 4) = v60;
          }
          else
          {
            uint64_t v63 = *((void *)a2 + 8);
            uint64_t v64 = *((void *)a2 + 9);
            sub_1BFE94AB4(v63, v64, v59 & 1);
            a1[8] = v63;
            a1[9] = v64;
            *((unsigned char *)a1 + 80) = v59 & 1;
          }
          int v65 = *((unsigned __int8 *)a2 + 120);
          if (v65 == 255)
          {
            long long v66 = *(long long *)((char *)a2 + 88);
            long long v67 = *(long long *)((char *)a2 + 104);
            *((unsigned char *)a1 + 120) = *((unsigned char *)a2 + 120);
            *(_OWORD *)(a1 + 11) = v66;
            *(_OWORD *)(a1 + 13) = v67;
          }
          else
          {
            char v68 = v65 & 1;
            uint64_t v69 = *((void *)a2 + 11);
            uint64_t v70 = *((void *)a2 + 12);
            uint64_t v71 = *((void *)a2 + 13);
            uint64_t v72 = *((void *)a2 + 14);
            sub_1C00F65A8(v69, v70, v71, v72, v65 & 1);
            a1[11] = v69;
            a1[12] = v70;
            a1[13] = v71;
            a1[14] = v72;
            *((unsigned char *)a1 + 120) = v68;
          }
          int v73 = *((unsigned __int8 *)a2 + 144);
          if (v73 == 255)
          {
            long long v74 = a2[8];
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
            *((_OWORD *)a1 + 8) = v74;
          }
          else
          {
            char v75 = v73 & 1;
            uint64_t v76 = *((void *)a2 + 16);
            uint64_t v77 = *((void *)a2 + 17);
            sub_1BFE94AB4(v76, v77, v73 & 1);
            a1[16] = v76;
            a1[17] = v77;
            *((unsigned char *)a1 + 144) = v75;
          }
        }
        goto LABEL_211;
      case 0x14u:
        long long v23 = *(void **)a2;
        *a1 = *(void *)a2;
        uint64_t v24 = (void *)*((void *)a2 + 1);
        a1[1] = (uint64_t)v24;
        id v25 = v23;
        id v26 = v24;
        goto LABEL_211;
      case 0x17u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = *((void *)a2 + 1);
        a1[2] = *((void *)a2 + 2);
        a1[3] = *((void *)a2 + 3);
        a1[4] = *((void *)a2 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_211;
      case 0x18u:
        type metadata accessor for FormatPropertyDefinition(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            a1[4] = *((void *)a2 + 4);
            a1[5] = *((void *)a2 + 5);
            a1[6] = *((void *)a2 + 6);
            a1[7] = *((void *)a2 + 7);
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            uint64_t v78 = *((void *)a2 + 9);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((~v78 & 0xF000000000000007) != 0) {
              swift_retain();
            }
            a1[9] = v78;
            *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
            a1[11] = *((void *)a2 + 11);
            int v79 = &qword_1EB88E9B8;
            long long v80 = sub_1C003F2E8;
            goto LABEL_72;
          case 2u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            a1[4] = *((void *)a2 + 4);
            a1[5] = *((void *)a2 + 5);
            a1[6] = *((void *)a2 + 6);
            a1[7] = *((void *)a2 + 7);
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            sub_1BFF71B30();
            uint64_t v82 = v81[13];
            uint64_t v368 = (char *)a1 + v82;
            __dsta = v81;
            uint64_t v83 = (char *)a2 + v82;
            uint64_t v84 = sub_1C151631C();
            uint64_t v85 = *(void *)(v84 - 8);
            uint64_t v362 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (!v362(v83, 1, v84)) {
              goto LABEL_93;
            }
            int v86 = &qword_1EB871180;
            char v87 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
            goto LABEL_59;
          case 3u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            a1[4] = *((void *)a2 + 4);
            a1[5] = *((void *)a2 + 5);
            a1[6] = *((void *)a2 + 6);
            a1[7] = *((void *)a2 + 7);
            a1[8] = *((void *)a2 + 8);
            a1[9] = *((void *)a2 + 9);
            *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
            a1[11] = *((void *)a2 + 11);
            a1[12] = *((void *)a2 + 12);
            a1[13] = *((void *)a2 + 13);
            *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
            a1[15] = *((void *)a2 + 15);
            uint64_t v88 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
            __dstb = (char *)a1 + v88;
            uint64_t v89 = (char *)a2 + v88;
            uint64_t v90 = sub_1C1518CDC();
            uint64_t v91 = *(void *)(v90 - 8);
            uint64_t v357 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v357(v89, 1, v90))
            {
              sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
              size_t v93 = *(void *)(*(void *)(v92 - 8) + 64);
              uint64_t v94 = __dstb;
              uint64_t v95 = v89;
              goto LABEL_56;
            }
            (*(void (**)(char *, char *, uint64_t))(v91 + 16))(__dstb, v89, v90);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(__dstb, 0, 1, v90);
            break;
          case 4u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            a1[4] = *((void *)a2 + 4);
            a1[5] = *((void *)a2 + 5);
            a1[6] = *((void *)a2 + 6);
            a1[7] = *((void *)a2 + 7);
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            uint64_t v96 = *((void *)a2 + 9);
            *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
            a1[9] = v96;
            *((unsigned char *)a1 + 81) = *((unsigned char *)a2 + 81);
            a1[11] = *((void *)a2 + 11);
            sub_1C0AF9C9C(0, &qword_1EB88E990, (void (*)(void))sub_1C0092008);
            goto LABEL_52;
          case 5u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            a1[4] = *((void *)a2 + 4);
            a1[5] = *((void *)a2 + 5);
            a1[6] = *((void *)a2 + 6);
            a1[7] = *((void *)a2 + 7);
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            uint64_t v98 = *((void *)a2 + 9);
            *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
            a1[9] = v98;
            *((unsigned char *)a1 + 81) = *((unsigned char *)a2 + 81);
            a1[11] = *((void *)a2 + 11);
            sub_1BFF71924(0, &qword_1EB88E9D0);
LABEL_52:
            uint64_t v99 = *(int *)(v97 + 64);
            __dst = (char *)a1 + v99;
            uint64_t v32 = (char *)a2 + v99;
            uint64_t v29 = sub_1C1518CDC();
            uint64_t v30 = *(void *)(v29 - 8);
            uint64_t v100 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (!v100(v32, 1, v29)) {
              goto LABEL_53;
            }
            goto LABEL_55;
          case 6u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            a1[4] = *((void *)a2 + 4);
            a1[5] = *((void *)a2 + 5);
            a1[6] = *((void *)a2 + 6);
            a1[7] = *((void *)a2 + 7);
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            a1[9] = *((void *)a2 + 9);
            a1[10] = *((void *)a2 + 10);
            *((unsigned char *)a1 + 88) = *((unsigned char *)a2 + 88);
            a1[12] = *((void *)a2 + 12);
            sub_1BFF71924(0, &qword_1EB88E9C0);
            uint64_t v102 = *(int *)(v101 + 64);
            __dst = (char *)a1 + v102;
            uint64_t v32 = (char *)a2 + v102;
            uint64_t v103 = sub_1C1518CDC();
            uint64_t v104 = *(void *)(v103 - 8);
            uint64_t v363 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v363(v32, 1, v103)) {
              goto LABEL_55;
            }
            (*(void (**)(char *, char *, uint64_t))(v104 + 16))(__dst, v32, v103);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(__dst, 0, 1, v103);
            goto LABEL_210;
          case 7u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            a1[4] = *((void *)a2 + 4);
            a1[5] = *((void *)a2 + 5);
            a1[6] = *((void *)a2 + 6);
            a1[7] = *((void *)a2 + 7);
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            sub_1BFF719C0();
            uint64_t v107 = v106[13];
            uint64_t v368 = (char *)a1 + v107;
            __dsta = v106;
            uint64_t v83 = (char *)a2 + v107;
            uint64_t v84 = sub_1C1515FDC();
            uint64_t v85 = *(void *)(v84 - 8);
            v364 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v364(v83, 1, v84))
            {
              int v86 = &qword_1EB8948A0;
              char v87 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
LABEL_59:
              sub_1C0AF9C38(0, (unint64_t *)v86, v87, MEMORY[0x1E4FBB718]);
              memcpy(v368, v83, *(void *)(*(void *)(v108 - 8) + 64));
            }
            else
            {
LABEL_93:
              (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v368, v83, v84);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v368, 0, 1, v84);
            }
            *((unsigned char *)a1 + __dsta[14]) = *((unsigned char *)a2 + __dsta[14]);
            *(uint64_t *)((char *)a1 + __dsta[15]) = *(void *)((char *)a2 + __dsta[15]);
            uint64_t v168 = __dsta[16];
            uint64_t v115 = (char *)a1 + v168;
            uint64_t v116 = (char *)a2 + v168;
            uint64_t v117 = sub_1C1518CDC();
            uint64_t v118 = *(void *)(v117 - 8);
            uint64_t v169 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48);
            swift_bridgeObjectRetain();
            if (!v169(v116, 1, v117)) {
              goto LABEL_95;
            }
            goto LABEL_73;
          case 8u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            a1[4] = *((void *)a2 + 4);
            a1[5] = *((void *)a2 + 5);
            a1[6] = *((void *)a2 + 6);
            a1[7] = *((void *)a2 + 7);
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            uint64_t v109 = *((void *)a2 + 9);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((~v109 & 0xF000000000000007) != 0) {
              swift_retain();
            }
            a1[9] = v109;
            *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
            a1[11] = *((void *)a2 + 11);
            int v79 = &qword_1EB88E9A0;
            long long v80 = sub_1C0036630;
            goto LABEL_72;
          case 9u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            a1[4] = *((void *)a2 + 4);
            a1[5] = *((void *)a2 + 5);
            a1[6] = *((void *)a2 + 6);
            a1[7] = *((void *)a2 + 7);
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            uint64_t v110 = *((void *)a2 + 9);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((~v110 & 0xF000000000000007) != 0) {
              swift_retain();
            }
            a1[9] = v110;
            *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
            a1[11] = *((void *)a2 + 11);
            int v79 = &qword_1EB88E998;
            long long v80 = sub_1C00738F0;
            goto LABEL_72;
          case 0xAu:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            a1[4] = *((void *)a2 + 4);
            a1[5] = *((void *)a2 + 5);
            a1[6] = *((void *)a2 + 6);
            a1[7] = *((void *)a2 + 7);
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            uint64_t v111 = *((void *)a2 + 9);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((~v111 & 0xF000000000000007) != 0) {
              swift_retain();
            }
            a1[9] = v111;
            *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
            a1[11] = *((void *)a2 + 11);
            int v79 = &qword_1EB88E9B0;
            long long v80 = sub_1C0084C58;
            goto LABEL_72;
          case 0xBu:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            a1[4] = *((void *)a2 + 4);
            a1[5] = *((void *)a2 + 5);
            a1[6] = *((void *)a2 + 6);
            a1[7] = *((void *)a2 + 7);
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            uint64_t v112 = *((void *)a2 + 9);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((~v112 & 0xF000000000000007) != 0) {
              swift_retain();
            }
            a1[9] = v112;
            *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
            a1[11] = *((void *)a2 + 11);
            int v79 = &qword_1EB88E9A8;
            long long v80 = sub_1C006F9DC;
LABEL_72:
            sub_1C0AF9C9C(0, v79, (void (*)(void))v80);
            uint64_t v114 = *(int *)(v113 + 64);
            uint64_t v115 = (char *)a1 + v114;
            uint64_t v116 = (char *)a2 + v114;
            uint64_t v117 = sub_1C1518CDC();
            uint64_t v118 = *(void *)(v117 - 8);
            uint64_t v119 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48);
            swift_bridgeObjectRetain();
            if (v119(v116, 1, v117))
            {
LABEL_73:
              sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
              memcpy(v115, v116, *(void *)(*(void *)(v120 - 8) + 64));
            }
            else
            {
LABEL_95:
              (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v115, v116, v117);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
            }
            goto LABEL_210;
          default:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            a1[4] = *((void *)a2 + 4);
            a1[5] = *((void *)a2 + 5);
            a1[6] = *((void *)a2 + 6);
            a1[7] = *((void *)a2 + 7);
            *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
            *((unsigned char *)a1 + 65) = *((unsigned char *)a2 + 65);
            *((unsigned char *)a1 + 66) = *((unsigned char *)a2 + 66);
            a1[9] = *((void *)a2 + 9);
            sub_1BFF71924(0, &qword_1EB88E9C8);
            uint64_t v28 = *(int *)(v27 + 64);
            uint64_t v367 = (char *)a2 + v28;
            __dst = (char *)a1 + v28;
            uint64_t v29 = sub_1C1518CDC();
            uint64_t v30 = *(void *)(v29 - 8);
            uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v32 = v367;
            swift_bridgeObjectRetain();
            if (v31(v367, 1, v29))
            {
LABEL_55:
              sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
              size_t v93 = *(void *)(*(void *)(v105 - 8) + 64);
              uint64_t v94 = __dst;
              uint64_t v95 = v32;
LABEL_56:
              memcpy(v94, v95, v93);
            }
            else
            {
LABEL_53:
              (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v32, v29);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
            }
            break;
        }
        goto LABEL_210;
      case 0x1Au:
        uint64_t v33 = sub_1C151CA7C();
        (*(void (**)(uint64_t *, long long *, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
        goto LABEL_211;
      case 0x1Cu:
        *a1 = *(void *)a2;
        a1[1] = *((void *)a2 + 1);
        a1[2] = *((void *)a2 + 2);
        a1[3] = *((void *)a2 + 3);
        swift_bridgeObjectRetain();
        goto LABEL_211;
      case 0x1Fu:
        uint64_t v34 = *(void *)a2;
        id v35 = *(id *)a2;
        *a1 = v34;
        goto LABEL_211;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
    a1[5] = *((void *)a2 + 5);
    a1[6] = *((void *)a2 + 6);
    uint64_t v187 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v188 = (char *)a1 + v187;
    uint64_t v189 = (uint64_t)a2 + v187;
    *(uint64_t *)((char *)a1 + v187) = *(void *)((char *)a2 + v187);
    uint64_t v190 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    uint64_t v191 = &v188[v190];
    id v192 = (void *)(v189 + v190);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v247 = type metadata accessor for PuzzleStatisticValue(0);
        int v248 = swift_getEnumCaseMultiPayload();
        if (v248 == 5)
        {
          uint64_t v249 = type metadata accessor for PuzzleStreak();
          uint64_t v250 = *(void *)(v249 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v250 + 48))(v192, 1, v249))
          {
LABEL_147:
            sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v191, v192, *(void *)(*(void *)(v251 - 8) + 64));
            goto LABEL_190;
          }
        }
        else
        {
          if (v248 != 4)
          {
            memcpy(v191, v192, *(void *)(*(void *)(v247 - 8) + 64));
            goto LABEL_191;
          }
          uint64_t v249 = type metadata accessor for PuzzleStreak();
          uint64_t v250 = *(void *)(v249 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v250 + 48))(v192, 1, v249)) {
            goto LABEL_147;
          }
        }
        uint64_t v335 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v335 - 8) + 16))(v191, v192, v335);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v250 + 56))(v191, 0, 1, v249);
LABEL_190:
        swift_storeEnumTagMultiPayload();
LABEL_191:
        uint64_t v336 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v337 = *(int *)(v336 + 20);
        uint64_t v338 = &v191[v337];
        uint64_t v339 = (char *)v192 + v337;
        int v340 = swift_getEnumCaseMultiPayload();
        if (v340 == 5)
        {
          uint64_t v341 = type metadata accessor for PuzzleStreak();
          uint64_t v342 = *(void *)(v341 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v342 + 48))(v339, 1, v341))
          {
LABEL_196:
            sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v338, v339, *(void *)(*(void *)(v343 - 8) + 64));
            goto LABEL_199;
          }
        }
        else
        {
          if (v340 != 4)
          {
            memcpy(v338, v339, *(void *)(*(void *)(v247 - 8) + 64));
            goto LABEL_200;
          }
          uint64_t v341 = type metadata accessor for PuzzleStreak();
          uint64_t v342 = *(void *)(v341 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v342 + 48))(v339, 1, v341)) {
            goto LABEL_196;
          }
        }
        uint64_t v344 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v344 - 8) + 16))(v338, v339, v344);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v342 + 56))(v338, 0, 1, v341);
LABEL_199:
        swift_storeEnumTagMultiPayload();
LABEL_200:
        uint64_t v345 = *(int *)(v336 + 24);
        uint64_t v346 = &v191[v345];
        uint64_t v347 = (char *)v192 + v345;
        int v348 = swift_getEnumCaseMultiPayload();
        if (v348 == 5)
        {
          uint64_t v349 = type metadata accessor for PuzzleStreak();
          uint64_t v350 = *(void *)(v349 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v350 + 48))(v347, 1, v349))
          {
LABEL_205:
            sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v346, v347, *(void *)(*(void *)(v351 - 8) + 64));
            goto LABEL_208;
          }
        }
        else
        {
          if (v348 != 4)
          {
            memcpy(v346, v347, *(void *)(*(void *)(v247 - 8) + 64));
            goto LABEL_209;
          }
          uint64_t v349 = type metadata accessor for PuzzleStreak();
          uint64_t v350 = *(void *)(v349 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v350 + 48))(v347, 1, v349)) {
            goto LABEL_205;
          }
        }
        uint64_t v352 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v352 - 8) + 16))(v346, v347, v352);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v350 + 56))(v346, 0, 1, v349);
        goto LABEL_208;
      case 2u:
        unint64_t v244 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v245 = *((void *)v244 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v245 + 48))(v192, 1, v244))
        {
          sub_1C0AF9C38(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          memcpy(v191, v192, *(void *)(*(void *)(v246 - 8) + 64));
        }
        else
        {
          uint64_t v282 = sub_1C151631C();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v282 - 8) + 16))(v191, v192, v282);
          uint64_t v283 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          uint64_t v284 = v283[5];
          uint64_t v285 = &v191[v284];
          uint64_t v286 = (void *)((char *)v192 + v284);
          *(void *)uint64_t v285 = *v286;
          *((void *)v285 + 1) = v286[1];
          uint64_t v287 = v283[6];
          id v288 = &v191[v287];
          uint64_t v289 = (void *)((char *)v192 + v287);
          *(void *)id v288 = *v289;
          *((void *)v288 + 1) = v289[1];
          uint64_t v290 = v289 + 2;
          unint64_t v291 = v289[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v291 >> 60 == 15)
          {
            *((_OWORD *)v288 + 1) = *(_OWORD *)v290;
          }
          else
          {
            uint64_t v329 = *v290;
            sub_1BFE95820(*v290, v291);
            *((void *)v288 + 2) = v329;
            *((void *)v288 + 3) = v291;
          }
          *(void *)&v191[v283[7]] = *(void *)((char *)v192 + v283[7]);
          *(void *)&v191[v283[8]] = *(void *)((char *)v192 + v283[8]);
          *(void *)&v191[v244[5]] = *(void *)((char *)v192 + v244[5]);
          *(void *)&v191[v244[6]] = *(void *)((char *)v192 + v244[6]);
          uint64_t v330 = v244[7];
          unint64_t v331 = &v191[v330];
          uint64_t v332 = (void *)((char *)v192 + v330);
          *(void *)unint64_t v331 = *v332;
          *((void *)v331 + 1) = v332[1];
          unint64_t v333 = *(void (**)(char *, void, uint64_t, int *))(v245 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v333(v191, 0, 1, v244);
        }
        goto LABEL_209;
      case 3u:
        *(void *)uint64_t v191 = *v192;
        uint64_t v252 = v192[1];
        v191[16] = *((unsigned char *)v192 + 16);
        *((void *)v191 + 1) = v252;
        uint64_t v253 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v254 = v253[6];
        uint64_t v255 = &v191[v254];
        uint64_t v256 = (char *)v192 + v254;
        uint64_t v257 = type metadata accessor for PuzzleStreak();
        uint64_t v258 = *(void *)(v257 - 8);
        uint64_t v259 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v258 + 48);
        if (v259(v256, 1, v257))
        {
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v255, v256, *(void *)(*(void *)(v260 - 8) + 64));
        }
        else
        {
          uint64_t v292 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v292 - 8) + 16))(v255, v256, v292);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v258 + 56))(v255, 0, 1, v257);
        }
        uint64_t v293 = v253[7];
        uint64_t v294 = &v191[v293];
        uint64_t v295 = (char *)v192 + v293;
        if (v259((char *)v192 + v293, 1, v257))
        {
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v294, v295, *(void *)(*(void *)(v296 - 8) + 64));
        }
        else
        {
          uint64_t v313 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v313 - 8) + 16))(v294, v295, v313);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v258 + 56))(v294, 0, 1, v257);
        }
        uint64_t v314 = v253[8];
        uint64_t v315 = &v191[v314];
        uint64_t v316 = (long long *)((char *)v192 + v314);
        long long v317 = *v316;
        long long v318 = v316[1];
        *(_OWORD *)(v315 + 25) = *(long long *)((char *)v316 + 25);
        *(_OWORD *)uint64_t v315 = v317;
        *((_OWORD *)v315 + 1) = v318;
        uint64_t v319 = v253[9];
        uint64_t v320 = &v191[v319];
        long long v321 = (long long *)((char *)v192 + v319);
        long long v322 = *v321;
        long long v323 = v321[1];
        *(_OWORD *)(v320 + 25) = *(long long *)((char *)v321 + 25);
        *(_OWORD *)uint64_t v320 = v322;
        *((_OWORD *)v320 + 1) = v323;
        uint64_t v324 = v253[10];
        uint64_t v325 = &v191[v324];
        uint64_t v326 = (long long *)((char *)v192 + v324);
        long long v327 = *v326;
        long long v328 = v326[1];
        *(_OWORD *)(v325 + 25) = *(long long *)((char *)v326 + 25);
        *(_OWORD *)uint64_t v325 = v327;
        *((_OWORD *)v325 + 1) = v328;
        goto LABEL_209;
      default:
        uint64_t v193 = type metadata accessor for PuzzleStatisticValue(0);
        int v194 = swift_getEnumCaseMultiPayload();
        if (v194 == 5)
        {
          uint64_t v195 = type metadata accessor for PuzzleStreak();
          uint64_t v196 = *(void *)(v195 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v196 + 48))(v192, 1, v195)) {
            goto LABEL_113;
          }
        }
        else
        {
          if (v194 != 4)
          {
            memcpy(v191, v192, *(void *)(*(void *)(v193 - 8) + 64));
            goto LABEL_209;
          }
          uint64_t v195 = type metadata accessor for PuzzleStreak();
          uint64_t v196 = *(void *)(v195 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v196 + 48))(v192, 1, v195))
          {
LABEL_113:
            sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v191, v192, *(void *)(*(void *)(v197 - 8) + 64));
            goto LABEL_208;
          }
        }
        uint64_t v334 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v334 - 8) + 16))(v191, v192, v334);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v196 + 56))(v191, 0, 1, v195);
LABEL_208:
        swift_storeEnumTagMultiPayload();
LABEL_209:
        swift_storeEnumTagMultiPayload();
LABEL_210:
        swift_storeEnumTagMultiPayload();
LABEL_211:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t sub_1C0B02B98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for FormatInspectionItem.Value(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA1A3840);
}

uint64_t sub_1C0B02C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0xCu:
      uint64_t v6 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_114;
    case 0x11u:
      uint64_t v7 = type metadata accessor for FeedGroupItem();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
          long long v8 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v8;
          *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
          long long v9 = (int *)type metadata accessor for FeedWeather(0);
          uint64_t v10 = v9[7];
          uint64_t v11 = a1 + v10;
          uint64_t v12 = a2 + v10;
          uint64_t v13 = sub_1C151E2BC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
          *(unsigned char *)(a1 + v9[8]) = *(unsigned char *)(a2 + v9[8]);
          uint64_t v14 = v9[9];
          uint64_t v15 = a1 + v14;
          uint64_t v16 = a2 + v14;
          sub_1C0AF9C38(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
          uint64_t v18 = v17;
          long long v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32);
          v19(v15, v16, v17);
          long long v20 = (int *)type metadata accessor for FeedWeather.Temperature(0);
          v19(v15 + v20[5], v16 + v20[5], v18);
          v19(v15 + v20[6], v16 + v20[6], v18);
          v19(v15 + v20[7], v16 + v20[7], v18);
          *(_OWORD *)(a1 + v9[10]) = *(_OWORD *)(a2 + v9[10]);
          goto LABEL_113;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
          id v25 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v26 = v25[10];
          uint64_t v27 = (unsigned char *)(a1 + v26);
          uint64_t v28 = a2 + v26;
          *uint64_t v27 = *(unsigned char *)(a2 + v26);
          v27[1] = *(unsigned char *)(a2 + v26 + 1);
          uint64_t v29 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v30 = v29[6];
          uint64_t v31 = &v27[v30];
          uint64_t v32 = (char *)(v28 + v30);
          uint64_t v33 = (int *)type metadata accessor for SharedItem();
          uint64_t v34 = *((void *)v33 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v34 + 48))(v32, 1, v33))
          {
            uint64_t v35 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
          }
          else
          {
            uint64_t v107 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v31, v32, v107);
            v31[v33[5]] = v32[v33[5]];
            *(void *)&v31[v33[6]] = *(void *)&v32[v33[6]];
            uint64_t v108 = v33[7];
            uint64_t v221 = &v31[v108];
            uint64_t v109 = &v32[v108];
            uint64_t v110 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(v221, v109, v110);
            (*(void (**)(char *, void, uint64_t, int *))(v34 + 56))(v31, 0, 1, v33);
          }
          v27[v29[7]] = *(unsigned char *)(v28 + v29[7]);
          v27[v29[8]] = *(unsigned char *)(v28 + v29[8]);
          v27[v29[9]] = *(unsigned char *)(v28 + v29[9]);
          v27[v29[10]] = *(unsigned char *)(v28 + v29[10]);
          uint64_t v111 = v25[11];
          uint64_t v112 = (void *)(a1 + v111);
          uint64_t v113 = (const void *)(a2 + v111);
          uint64_t v114 = sub_1C151D2DC();
          uint64_t v115 = *(void *)(v114 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v115 + 48))(v113, 1, v114))
          {
            sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
            memcpy(v112, v113, *(void *)(*(void *)(v116 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v115 + 32))(v112, v113, v114);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
          }
          *(_OWORD *)(a1 + v25[12]) = *(_OWORD *)(a2 + v25[12]);
          uint64_t v124 = v25[13];
          uint64_t v125 = *(void *)(a2 + v124);
          if (v125 == 2) {
            uint64_t v125 = 2;
          }
          *(void *)(a1 + v124) = v125;
          *(void *)(a1 + v25[14]) = *(void *)(a2 + v25[14]);
          goto LABEL_113;
        case 6u:
          uint64_t v36 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v36;
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          uint64_t v37 = (int *)type metadata accessor for FeedWebEmbed();
          uint64_t v38 = v37[8];
          uint64_t v39 = a1 + v38;
          uint64_t v40 = a2 + v38;
          uint64_t v41 = sub_1C1515FDC();
          uint64_t v42 = *(void *)(v41 - 8);
          uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32);
          v43(v39, v40, v41);
          uint64_t v44 = v37[9];
          uint64_t v45 = (void *)(a1 + v44);
          uint64_t v46 = (const void *)(a2 + v44);
          uint64_t v220 = v41;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(a2 + v44, 1, v41))
          {
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
            memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
          }
          else
          {
            v43((uint64_t)v45, (uint64_t)v46, v41);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v45, 0, 1, v41);
          }
          uint64_t v117 = (void (*)(char *, char *, uint64_t))v43;
          *(void *)(a1 + v37[10]) = *(void *)(a2 + v37[10]);
          *(void *)(a1 + v37[11]) = *(void *)(a2 + v37[11]);
          uint64_t v222 = v37;
          uint64_t v118 = v37[12];
          uint64_t v119 = (_OWORD *)(a1 + v118);
          uint64_t v120 = (_OWORD *)(a2 + v118);
          uint64_t v121 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v122 = *((void *)v121 - 1);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v122 + 48))(v120, 1, v121))
          {
            sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
            memcpy(v119, v120, *(void *)(*(void *)(v123 - 8) + 64));
          }
          else
          {
            uint64_t v216 = v122;
            uint64_t v217 = (void (*)(char *, char *, uint64_t))v43;
            *uint64_t v119 = *v120;
            *((void *)v119 + 2) = *((void *)v120 + 2);
            *((unsigned char *)v119 + 24) = *((unsigned char *)v120 + 24);
            *((void *)v119 + 4) = *((void *)v120 + 4);
            *(_OWORD *)((char *)v119 + 40) = *(_OWORD *)((char *)v120 + 40);
            *((unsigned char *)v119 + 56) = *((unsigned char *)v120 + 56);
            uint64_t v126 = v121[10];
            long long v127 = (char *)v119 + v126;
            long long v128 = (char *)v120 + v126;
            unsigned char *v127 = *((unsigned char *)v120 + v126);
            v127[1] = *((unsigned char *)v120 + v126 + 1);
            uint64_t v129 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v130 = v129[6];
            __dst = &v127[v130];
            uint64_t v131 = &v128[v130];
            uint64_t v132 = (int *)type metadata accessor for SharedItem();
            uint64_t v215 = *((void *)v132 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v215 + 48))(v131, 1, v132))
            {
              uint64_t v133 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(__dst, v131, *(void *)(*(void *)(v133 - 8) + 64));
            }
            else
            {
              uint64_t v152 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32))(__dst, v131, v152);
              __dst[v132[5]] = v131[v132[5]];
              *(void *)&__dst[v132[6]] = *(void *)&v131[v132[6]];
              v217(&__dst[v132[7]], &v131[v132[7]], v220);
              (*(void (**)(char *, void, uint64_t, int *))(v215 + 56))(__dst, 0, 1, v132);
            }
            v127[v129[7]] = v128[v129[7]];
            v127[v129[8]] = v128[v129[8]];
            v127[v129[9]] = v128[v129[9]];
            v127[v129[10]] = v128[v129[10]];
            uint64_t v153 = v121[11];
            uint64_t v154 = (char *)v119 + v153;
            uint64_t v155 = (char *)v120 + v153;
            uint64_t v156 = sub_1C151D2DC();
            uint64_t v157 = *(void *)(v156 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v155, 1, v156))
            {
              sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
              memcpy(v154, v155, *(void *)(*(void *)(v158 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v157 + 32))(v154, v155, v156);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v154, 0, 1, v156);
            }
            *(_OWORD *)((char *)v119 + v121[12]) = *(_OWORD *)((char *)v120 + v121[12]);
            uint64_t v159 = v121[13];
            uint64_t v160 = *(void *)((char *)v120 + v159);
            uint64_t v117 = v217;
            if (v160 == 2) {
              uint64_t v160 = 2;
            }
            *(void *)((char *)v119 + v159) = v160;
            *(void *)((char *)v119 + v121[14]) = *(void *)((char *)v120 + v121[14]);
            (*(void (**)(_OWORD *, void, uint64_t, int *))(v216 + 56))(v119, 0, 1, v121);
          }
          uint64_t v161 = v222[13];
          uint64_t v162 = (_OWORD *)(a1 + v161);
          uint64_t v163 = (_OWORD *)(a2 + v161);
          uint64_t v164 = type metadata accessor for WebEmbedDataVisualization();
          uint64_t v165 = *(void *)(v164 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v165 + 48))(v163, 1, v164))
          {
            sub_1C0AF9C38(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
            memcpy(v162, v163, *(void *)(*(void *)(v166 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              _OWORD *v162 = *v163;
              uint64_t v167 = type metadata accessor for GenericDataVisualization();
              uint64_t v168 = v117;
              uint64_t v169 = v167;
              v168((char *)v162 + *(int *)(v167 + 20), (char *)v163 + *(int *)(v167 + 20), v220);
              *(void *)((char *)v162 + *(int *)(v169 + 24)) = *(void *)((char *)v163 + *(int *)(v169 + 24));
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v162, v163, *(void *)(v165 + 64));
            }
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v165 + 56))(v162, 0, 1, v164);
          }
          *(unsigned char *)(a1 + v222[14]) = *(unsigned char *)(a2 + v222[14]);
          goto LABEL_113;
        case 0xBu:
          uint64_t v48 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v48;
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          uint64_t v49 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          uint64_t v50 = a1 + v49;
          uint64_t v51 = (void *)(a2 + v49);
          *(void *)(a1 + v49) = *v51;
          uint64_t v52 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
          char v53 = (void *)(v50 + v52);
          uint64_t v54 = (void *)((char *)v51 + v52);
          type metadata accessor for PuzzleStatisticCategory(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v138 = type metadata accessor for PuzzleStatisticValue(0);
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 5)
              {
                uint64_t v140 = type metadata accessor for PuzzleStreak();
                uint64_t v141 = *(void *)(v140 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v141 + 48))(v54, 1, v140))
                {
LABEL_59:
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v53, v54, *(void *)(*(void *)(v142 - 8) + 64));
                  goto LABEL_93;
                }
              }
              else
              {
                if (EnumCaseMultiPayload != 4)
                {
                  memcpy(v53, v54, *(void *)(*(void *)(v138 - 8) + 64));
                  goto LABEL_94;
                }
                uint64_t v140 = type metadata accessor for PuzzleStreak();
                uint64_t v141 = *(void *)(v140 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v141 + 48))(v54, 1, v140)) {
                  goto LABEL_59;
                }
              }
              uint64_t v195 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v195 - 8) + 32))(v53, v54, v195);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v141 + 56))(v53, 0, 1, v140);
LABEL_93:
              swift_storeEnumTagMultiPayload();
LABEL_94:
              uint64_t v196 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
              uint64_t v197 = *(int *)(v196 + 20);
              uint64_t v198 = v53;
              uint64_t v199 = (char *)v53 + v197;
              long long v200 = (char *)v54 + v197;
              int v201 = swift_getEnumCaseMultiPayload();
              if (v201 == 5)
              {
                uint64_t v202 = type metadata accessor for PuzzleStreak();
                uint64_t v203 = *(void *)(v202 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v203 + 48))(v200, 1, v202))
                {
LABEL_99:
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v199, v200, *(void *)(*(void *)(v204 - 8) + 64));
                  goto LABEL_102;
                }
              }
              else
              {
                if (v201 != 4)
                {
                  memcpy(v199, v200, *(void *)(*(void *)(v138 - 8) + 64));
                  goto LABEL_103;
                }
                uint64_t v202 = type metadata accessor for PuzzleStreak();
                uint64_t v203 = *(void *)(v202 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v203 + 48))(v200, 1, v202)) {
                  goto LABEL_99;
                }
              }
              uint64_t v205 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 32))(v199, v200, v205);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v203 + 56))(v199, 0, 1, v202);
LABEL_102:
              swift_storeEnumTagMultiPayload();
LABEL_103:
              uint64_t v206 = *(int *)(v196 + 24);
              uint64_t v207 = (char *)v198 + v206;
              uint64_t v208 = (char *)v54 + v206;
              int v209 = swift_getEnumCaseMultiPayload();
              if (v209 == 5)
              {
                uint64_t v210 = type metadata accessor for PuzzleStreak();
                uint64_t v211 = *(void *)(v210 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v211 + 48))(v208, 1, v210))
                {
LABEL_108:
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v207, v208, *(void *)(*(void *)(v212 - 8) + 64));
                  goto LABEL_111;
                }
              }
              else
              {
                if (v209 != 4)
                {
                  memcpy(v207, v208, *(void *)(*(void *)(v138 - 8) + 64));
                  goto LABEL_112;
                }
                uint64_t v210 = type metadata accessor for PuzzleStreak();
                uint64_t v211 = *(void *)(v210 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v211 + 48))(v208, 1, v210)) {
                  goto LABEL_108;
                }
              }
              uint64_t v213 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 32))(v207, v208, v213);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v211 + 56))(v207, 0, 1, v210);
              goto LABEL_111;
            case 2u:
              uint64_t v134 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
              uint64_t v135 = *((void *)v134 - 1);
              if ((*(unsigned int (**)(void *, uint64_t, int *))(v135 + 48))(v54, 1, v134))
              {
                sub_1C0AF9C38(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
                size_t v137 = *(void *)(*(void *)(v136 - 8) + 64);
                goto LABEL_85;
              }
              uint64_t v170 = sub_1C151631C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v170 - 8) + 32))(v53, v54, v170);
              id v171 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
              *(_OWORD *)((char *)v53 + v171[5]) = *(_OWORD *)((char *)v54 + v171[5]);
              uint64_t v172 = v171[6];
              uint64_t v173 = (_OWORD *)((char *)v53 + v172);
              uint64_t v174 = (_OWORD *)((char *)v54 + v172);
              long long v175 = v174[1];
              *uint64_t v173 = *v174;
              v173[1] = v175;
              *(void *)((char *)v53 + v171[7]) = *(void *)((char *)v54 + v171[7]);
              *(void *)((char *)v53 + v171[8]) = *(void *)((char *)v54 + v171[8]);
              *(void *)((char *)v53 + v134[5]) = *(void *)((char *)v54 + v134[5]);
              *(void *)((char *)v53 + v134[6]) = *(void *)((char *)v54 + v134[6]);
              *(_OWORD *)((char *)v53 + v134[7]) = *(_OWORD *)((char *)v54 + v134[7]);
              (*(void (**)(void *, void, uint64_t, int *))(v135 + 56))(v53, 0, 1, v134);
              goto LABEL_112;
            case 3u:
              uint64_t v143 = v54[1];
              *char v53 = *v54;
              v53[1] = v143;
              *((unsigned char *)v53 + 16) = *((unsigned char *)v54 + 16);
              uint64_t v144 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
              uint64_t v145 = v144[6];
              long long v219 = v53;
              uint64_t v146 = (char *)v53 + v145;
              uint64_t v147 = (char *)v54 + v145;
              uint64_t v148 = type metadata accessor for PuzzleStreak();
              uint64_t v149 = *(void *)(v148 - 8);
              uint64_t v150 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48);
              if (v150(v147, 1, v148))
              {
                sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v146, v147, *(void *)(*(void *)(v151 - 8) + 64));
              }
              else
              {
                uint64_t v176 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 32))(v146, v147, v176);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v146, 0, 1, v148);
              }
              uint64_t v177 = v144[7];
              uint64_t v178 = (char *)v219 + v177;
              uint64_t v179 = (char *)v54 + v177;
              if (v150((char *)v54 + v177, 1, v148))
              {
                sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v178, v179, *(void *)(*(void *)(v180 - 8) + 64));
              }
              else
              {
                uint64_t v181 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 32))(v178, v179, v181);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v178, 0, 1, v148);
              }
              uint64_t v182 = v144[8];
              uint64_t v183 = (_OWORD *)((char *)v219 + v182);
              uint64_t v184 = (_OWORD *)((char *)v54 + v182);
              long long v185 = v184[1];
              *uint64_t v183 = *v184;
              v183[1] = v185;
              *(_OWORD *)((char *)v183 + 25) = *(_OWORD *)((char *)v184 + 25);
              uint64_t v186 = v144[9];
              uint64_t v187 = (_OWORD *)((char *)v219 + v186);
              uint64_t v188 = (_OWORD *)((char *)v54 + v186);
              *(_OWORD *)((char *)v187 + 25) = *(_OWORD *)((char *)v188 + 25);
              long long v189 = v188[1];
              *uint64_t v187 = *v188;
              v187[1] = v189;
              uint64_t v190 = v144[10];
              uint64_t v191 = (_OWORD *)((char *)v219 + v190);
              id v192 = (_OWORD *)((char *)v54 + v190);
              long long v193 = v192[1];
              *uint64_t v191 = *v192;
              v191[1] = v193;
              *(_OWORD *)((char *)v191 + 25) = *(_OWORD *)((char *)v192 + 25);
              goto LABEL_112;
            default:
              uint64_t v55 = type metadata accessor for PuzzleStatisticValue(0);
              int v56 = swift_getEnumCaseMultiPayload();
              if (v56 == 5)
              {
                uint64_t v57 = type metadata accessor for PuzzleStreak();
                uint64_t v58 = *(void *)(v57 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v58 + 48))(v54, 1, v57)) {
                  goto LABEL_18;
                }
              }
              else
              {
                if (v56 != 4)
                {
                  size_t v137 = *(void *)(*(void *)(v55 - 8) + 64);
LABEL_85:
                  memcpy(v53, v54, v137);
                  goto LABEL_112;
                }
                uint64_t v57 = type metadata accessor for PuzzleStreak();
                uint64_t v58 = *(void *)(v57 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v58 + 48))(v54, 1, v57))
                {
LABEL_18:
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v53, v54, *(void *)(*(void *)(v59 - 8) + 64));
                  goto LABEL_111;
                }
              }
              uint64_t v194 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v194 - 8) + 32))(v53, v54, v194);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v53, 0, 1, v57);
LABEL_111:
              swift_storeEnumTagMultiPayload();
LABEL_112:
              swift_storeEnumTagMultiPayload();
LABEL_113:
              swift_storeEnumTagMultiPayload();
LABEL_114:
              swift_storeEnumTagMultiPayload();
              return a1;
          }
        case 0xCu:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v60 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
          uint64_t v61 = a1 + v60;
          uint64_t v62 = a2 + v60;
          uint64_t v63 = sub_1C151D6DC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
          goto LABEL_113;
        default:
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
          goto LABEL_114;
      }
    case 0x18u:
      type metadata accessor for FormatPropertyDefinition(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          long long v64 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v64;
          long long v65 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v65;
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          long long v66 = &qword_1EB88E9B8;
          long long v67 = sub_1C003F2E8;
          goto LABEL_35;
        case 2u:
          long long v68 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v68;
          long long v69 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v69;
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          sub_1BFF71B30();
          uint64_t v71 = v70;
          uint64_t v72 = v70[13];
          int v73 = (void *)(a1 + v72);
          long long v74 = (const void *)(a2 + v72);
          uint64_t v75 = sub_1C151631C();
          uint64_t v76 = *(void *)(v75 - 8);
          if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75)) {
            goto LABEL_46;
          }
          uint64_t v77 = &qword_1EB871180;
          uint64_t v78 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
          goto LABEL_30;
        case 3u:
          long long v79 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v79;
          long long v80 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v80;
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
          *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
          *(void *)(a1 + 104) = *(void *)(a2 + 104);
          *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          uint64_t v81 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
          goto LABEL_37;
        case 4u:
          long long v82 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v82;
          long long v83 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v83;
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          long long v66 = &qword_1EB88E990;
          long long v67 = sub_1C0092008;
          goto LABEL_35;
        case 5u:
          long long v84 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v84;
          long long v85 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v85;
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          long long v23 = &qword_1EB88E9D0;
          goto LABEL_27;
        case 6u:
          long long v86 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v86;
          long long v87 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v87;
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
          *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          long long v23 = &qword_1EB88E9C0;
          goto LABEL_27;
        case 7u:
          long long v89 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v89;
          long long v90 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v90;
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          sub_1BFF719C0();
          uint64_t v71 = v91;
          uint64_t v92 = v91[13];
          int v73 = (void *)(a1 + v92);
          long long v74 = (const void *)(a2 + v92);
          uint64_t v75 = sub_1C1515FDC();
          uint64_t v76 = *(void *)(v75 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
          {
            uint64_t v77 = &qword_1EB8948A0;
            uint64_t v78 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
LABEL_30:
            sub_1C0AF9C38(0, (unint64_t *)v77, v78, MEMORY[0x1E4FBB718]);
            memcpy(v73, v74, *(void *)(*(void *)(v93 - 8) + 64));
          }
          else
          {
LABEL_46:
            (*(void (**)(void *, const void *, uint64_t))(v76 + 32))(v73, v74, v75);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
          }
          *(unsigned char *)(a1 + v71[14]) = *(unsigned char *)(a2 + v71[14]);
          *(void *)(a1 + v71[15]) = *(void *)(a2 + v71[15]);
          uint64_t v81 = v71[16];
          goto LABEL_37;
        case 8u:
          long long v94 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v94;
          long long v95 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v95;
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          long long v66 = &qword_1EB88E9A0;
          long long v67 = sub_1C0036630;
          goto LABEL_35;
        case 9u:
          long long v96 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v96;
          long long v97 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v97;
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          long long v66 = &qword_1EB88E998;
          long long v67 = sub_1C00738F0;
          goto LABEL_35;
        case 0xAu:
          long long v98 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v98;
          long long v99 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v99;
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          long long v66 = &qword_1EB88E9B0;
          long long v67 = sub_1C0084C58;
          goto LABEL_35;
        case 0xBu:
          long long v100 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v100;
          long long v101 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v101;
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          long long v66 = &qword_1EB88E9A8;
          long long v67 = sub_1C006F9DC;
LABEL_35:
          sub_1C0AF9C9C(0, v66, (void (*)(void))v67);
          goto LABEL_36;
        default:
          long long v21 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v21;
          long long v22 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v22;
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          long long v23 = &qword_1EB88E9C8;
LABEL_27:
          sub_1BFF71924(0, v23);
LABEL_36:
          uint64_t v81 = *(int *)(v88 + 64);
LABEL_37:
          uint64_t v102 = (void *)(a1 + v81);
          uint64_t v103 = (const void *)(a2 + v81);
          uint64_t v104 = sub_1C1518CDC();
          uint64_t v105 = *(void *)(v104 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
          {
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
            memcpy(v102, v103, *(void *)(*(void *)(v106 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v105 + 32))(v102, v103, v104);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
          }
          break;
      }
      goto LABEL_113;
    case 0x1Au:
      uint64_t v24 = sub_1C151CA7C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
      goto LABEL_114;
    default:
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

uint64_t sub_1C0B05138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0B02B98(a1, type metadata accessor for FormatInspectionItem.Value);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0xCu:
        uint64_t v6 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_115;
      case 0x11u:
        uint64_t v7 = type metadata accessor for FeedGroupItem();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
            long long v8 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v8;
            *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
            long long v9 = (int *)type metadata accessor for FeedWeather(0);
            uint64_t v10 = v9[7];
            uint64_t v11 = a1 + v10;
            uint64_t v12 = a2 + v10;
            uint64_t v13 = sub_1C151E2BC();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
            *(unsigned char *)(a1 + v9[8]) = *(unsigned char *)(a2 + v9[8]);
            uint64_t v14 = v9[9];
            uint64_t v15 = a1 + v14;
            uint64_t v16 = a2 + v14;
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
            uint64_t v18 = v17;
            long long v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32);
            v19(v15, v16, v17);
            long long v20 = (int *)type metadata accessor for FeedWeather.Temperature(0);
            v19(v15 + v20[5], v16 + v20[5], v18);
            v19(v15 + v20[6], v16 + v20[6], v18);
            v19(v15 + v20[7], v16 + v20[7], v18);
            *(_OWORD *)(a1 + v9[10]) = *(_OWORD *)(a2 + v9[10]);
            goto LABEL_114;
          case 5u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
            long long v219 = (int *)type metadata accessor for FeedHeadline(0);
            uint64_t v25 = v219[10];
            uint64_t v26 = (unsigned char *)(a1 + v25);
            uint64_t v27 = a2 + v25;
            *uint64_t v26 = *(unsigned char *)(a2 + v25);
            v26[1] = *(unsigned char *)(a2 + v25 + 1);
            uint64_t v28 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v29 = v28[6];
            uint64_t v30 = &v26[v29];
            uint64_t v31 = (char *)(v27 + v29);
            uint64_t v32 = (int *)type metadata accessor for SharedItem();
            uint64_t v33 = *((void *)v32 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
            {
              uint64_t v34 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
            }
            else
            {
              uint64_t v106 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 32))(v30, v31, v106);
              v30[v32[5]] = v31[v32[5]];
              *(void *)&v30[v32[6]] = *(void *)&v31[v32[6]];
              uint64_t v107 = v32[7];
              long long v218 = &v30[v107];
              uint64_t v108 = &v31[v107];
              uint64_t v109 = sub_1C1515FDC();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 32))(v218, v108, v109);
              (*(void (**)(char *, void, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
            }
            v26[v28[7]] = *(unsigned char *)(v27 + v28[7]);
            v26[v28[8]] = *(unsigned char *)(v27 + v28[8]);
            v26[v28[9]] = *(unsigned char *)(v27 + v28[9]);
            v26[v28[10]] = *(unsigned char *)(v27 + v28[10]);
            uint64_t v110 = v219[11];
            uint64_t v111 = (void *)(a1 + v110);
            uint64_t v112 = (const void *)(a2 + v110);
            uint64_t v113 = sub_1C151D2DC();
            uint64_t v114 = *(void *)(v113 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113))
            {
              sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
              memcpy(v111, v112, *(void *)(*(void *)(v115 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v114 + 32))(v111, v112, v113);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v114 + 56))(v111, 0, 1, v113);
            }
            *(_OWORD *)(a1 + v219[12]) = *(_OWORD *)(a2 + v219[12]);
            uint64_t v123 = v219[13];
            uint64_t v124 = *(void *)(a2 + v123);
            if (v124 == 2) {
              uint64_t v124 = 2;
            }
            *(void *)(a1 + v123) = v124;
            *(void *)(a1 + v219[14]) = *(void *)(a2 + v219[14]);
            goto LABEL_114;
          case 6u:
            uint64_t v35 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v35;
            *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
            *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            uint64_t v36 = (int *)type metadata accessor for FeedWebEmbed();
            uint64_t v37 = v36[8];
            uint64_t v38 = a1 + v37;
            uint64_t v39 = a2 + v37;
            uint64_t v40 = sub_1C1515FDC();
            uint64_t v41 = *(void *)(v40 - 8);
            uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32);
            v42(v38, v39, v40);
            uint64_t v43 = v36[9];
            uint64_t v44 = (void *)(a1 + v43);
            uint64_t v45 = (const void *)(a2 + v43);
            uint64_t v217 = v40;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(a2 + v43, 1, v40))
            {
              sub_1C0AF9C38(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
              memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
            }
            else
            {
              v42((uint64_t)v44, (uint64_t)v45, v40);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v44, 0, 1, v40);
            }
            uint64_t v116 = (void (*)(char *, char *, uint64_t))v42;
            *(void *)(a1 + v36[10]) = *(void *)(a2 + v36[10]);
            *(void *)(a1 + v36[11]) = *(void *)(a2 + v36[11]);
            uint64_t v220 = v36;
            uint64_t v117 = v36[12];
            uint64_t v118 = (_OWORD *)(a1 + v117);
            uint64_t v119 = (_OWORD *)(a2 + v117);
            uint64_t v120 = (int *)type metadata accessor for FeedHeadline(0);
            uint64_t v121 = *((void *)v120 - 1);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v121 + 48))(v119, 1, v120))
            {
              sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
              memcpy(v118, v119, *(void *)(*(void *)(v122 - 8) + 64));
            }
            else
            {
              uint64_t v214 = v121;
              uint64_t v215 = (void (*)(char *, char *, uint64_t))v42;
              *uint64_t v118 = *v119;
              *((void *)v118 + 2) = *((void *)v119 + 2);
              *((unsigned char *)v118 + 24) = *((unsigned char *)v119 + 24);
              *((void *)v118 + 4) = *((void *)v119 + 4);
              *(_OWORD *)((char *)v118 + 40) = *(_OWORD *)((char *)v119 + 40);
              *((unsigned char *)v118 + 56) = *((unsigned char *)v119 + 56);
              uint64_t v125 = v120[10];
              uint64_t v126 = (char *)v118 + v125;
              long long v127 = (char *)v119 + v125;
              *uint64_t v126 = *((unsigned char *)v119 + v125);
              v126[1] = *((unsigned char *)v119 + v125 + 1);
              uint64_t v213 = (int *)type metadata accessor for FeedHeadline.State(0);
              uint64_t v128 = v213[6];
              __dst = &v126[v128];
              uint64_t v129 = &v127[v128];
              uint64_t v130 = (int *)type metadata accessor for SharedItem();
              uint64_t v212 = *((void *)v130 - 1);
              if ((*(unsigned int (**)(char *, uint64_t, int *))(v212 + 48))(v129, 1, v130))
              {
                uint64_t v131 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(__dst, v129, *(void *)(*(void *)(v131 - 8) + 64));
              }
              else
              {
                uint64_t v150 = sub_1C151631C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 32))(__dst, v129, v150);
                __dst[v130[5]] = v129[v130[5]];
                *(void *)&__dst[v130[6]] = *(void *)&v129[v130[6]];
                v215(&__dst[v130[7]], &v129[v130[7]], v217);
                (*(void (**)(char *, void, uint64_t, int *))(v212 + 56))(__dst, 0, 1, v130);
              }
              v126[v213[7]] = v127[v213[7]];
              v126[v213[8]] = v127[v213[8]];
              v126[v213[9]] = v127[v213[9]];
              v126[v213[10]] = v127[v213[10]];
              uint64_t v151 = v120[11];
              uint64_t v152 = (char *)v118 + v151;
              uint64_t v153 = (char *)v119 + v151;
              uint64_t v154 = sub_1C151D2DC();
              uint64_t v155 = *(void *)(v154 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 48))(v153, 1, v154))
              {
                sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
                memcpy(v152, v153, *(void *)(*(void *)(v156 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v155 + 32))(v152, v153, v154);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v155 + 56))(v152, 0, 1, v154);
              }
              *(_OWORD *)((char *)v118 + v120[12]) = *(_OWORD *)((char *)v119 + v120[12]);
              uint64_t v157 = v120[13];
              uint64_t v158 = *(void *)((char *)v119 + v157);
              uint64_t v116 = v215;
              if (v158 == 2) {
                uint64_t v158 = 2;
              }
              *(void *)((char *)v118 + v157) = v158;
              *(void *)((char *)v118 + v120[14]) = *(void *)((char *)v119 + v120[14]);
              (*(void (**)(_OWORD *, void, uint64_t, int *))(v214 + 56))(v118, 0, 1, v120);
            }
            uint64_t v159 = v220[13];
            uint64_t v160 = (_OWORD *)(a1 + v159);
            uint64_t v161 = (_OWORD *)(a2 + v159);
            uint64_t v162 = type metadata accessor for WebEmbedDataVisualization();
            uint64_t v163 = *(void *)(v162 - 8);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v163 + 48))(v161, 1, v162))
            {
              sub_1C0AF9C38(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
              memcpy(v160, v161, *(void *)(*(void *)(v164 - 8) + 64));
            }
            else
            {
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                *uint64_t v160 = *v161;
                uint64_t v165 = type metadata accessor for GenericDataVisualization();
                uint64_t v166 = v116;
                uint64_t v167 = v165;
                v166((char *)v160 + *(int *)(v165 + 20), (char *)v161 + *(int *)(v165 + 20), v217);
                *(void *)((char *)v160 + *(int *)(v167 + 24)) = *(void *)((char *)v161 + *(int *)(v167 + 24));
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v160, v161, *(void *)(v163 + 64));
              }
              (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v163 + 56))(v160, 0, 1, v162);
            }
            *(unsigned char *)(a1 + v220[14]) = *(unsigned char *)(a2 + v220[14]);
            goto LABEL_114;
          case 0xBu:
            uint64_t v47 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v47;
            *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
            *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            uint64_t v48 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
            uint64_t v49 = a1 + v48;
            uint64_t v50 = (void *)(a2 + v48);
            *(void *)(a1 + v48) = *v50;
            uint64_t v51 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
            uint64_t v52 = (void *)(v49 + v51);
            char v53 = (void *)((char *)v50 + v51);
            type metadata accessor for PuzzleStatisticCategory(0);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t v136 = type metadata accessor for PuzzleStatisticValue(0);
                int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                if (EnumCaseMultiPayload == 5)
                {
                  uint64_t v138 = type metadata accessor for PuzzleStreak();
                  uint64_t v139 = *(void *)(v138 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v139 + 48))(v53, 1, v138))
                  {
LABEL_60:
                    sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                    memcpy(v52, v53, *(void *)(*(void *)(v140 - 8) + 64));
                    goto LABEL_94;
                  }
                }
                else
                {
                  if (EnumCaseMultiPayload != 4)
                  {
                    memcpy(v52, v53, *(void *)(*(void *)(v136 - 8) + 64));
                    goto LABEL_95;
                  }
                  uint64_t v138 = type metadata accessor for PuzzleStreak();
                  uint64_t v139 = *(void *)(v138 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v139 + 48))(v53, 1, v138)) {
                    goto LABEL_60;
                  }
                }
                uint64_t v193 = sub_1C151555C();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v193 - 8) + 32))(v52, v53, v193);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v139 + 56))(v52, 0, 1, v138);
LABEL_94:
                swift_storeEnumTagMultiPayload();
LABEL_95:
                uint64_t v194 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
                uint64_t v195 = *(int *)(v194 + 20);
                uint64_t v222 = v52;
                uint64_t v196 = (char *)v52 + v195;
                uint64_t v197 = (char *)v53 + v195;
                int v198 = swift_getEnumCaseMultiPayload();
                if (v198 == 5)
                {
                  uint64_t v199 = type metadata accessor for PuzzleStreak();
                  uint64_t v200 = *(void *)(v199 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v200 + 48))(v197, 1, v199))
                  {
LABEL_100:
                    sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                    memcpy(v196, v197, *(void *)(*(void *)(v201 - 8) + 64));
                    goto LABEL_103;
                  }
                }
                else
                {
                  if (v198 != 4)
                  {
                    memcpy(v196, v197, *(void *)(*(void *)(v136 - 8) + 64));
                    goto LABEL_104;
                  }
                  uint64_t v199 = type metadata accessor for PuzzleStreak();
                  uint64_t v200 = *(void *)(v199 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v200 + 48))(v197, 1, v199)) {
                    goto LABEL_100;
                  }
                }
                uint64_t v202 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 32))(v196, v197, v202);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v200 + 56))(v196, 0, 1, v199);
LABEL_103:
                swift_storeEnumTagMultiPayload();
LABEL_104:
                uint64_t v203 = *(int *)(v194 + 24);
                uint64_t v204 = (char *)v222 + v203;
                uint64_t v205 = (char *)v53 + v203;
                int v206 = swift_getEnumCaseMultiPayload();
                if (v206 == 5)
                {
                  uint64_t v207 = type metadata accessor for PuzzleStreak();
                  uint64_t v208 = *(void *)(v207 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v208 + 48))(v205, 1, v207))
                  {
LABEL_109:
                    sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                    memcpy(v204, v205, *(void *)(*(void *)(v209 - 8) + 64));
                    goto LABEL_112;
                  }
                }
                else
                {
                  if (v206 != 4)
                  {
                    memcpy(v204, v205, *(void *)(*(void *)(v136 - 8) + 64));
                    goto LABEL_113;
                  }
                  uint64_t v207 = type metadata accessor for PuzzleStreak();
                  uint64_t v208 = *(void *)(v207 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v208 + 48))(v205, 1, v207)) {
                    goto LABEL_109;
                  }
                }
                uint64_t v210 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 32))(v204, v205, v210);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v208 + 56))(v204, 0, 1, v207);
                goto LABEL_112;
              case 2u:
                uint64_t v132 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
                uint64_t v133 = *((void *)v132 - 1);
                if ((*(unsigned int (**)(void *, uint64_t, int *))(v133 + 48))(v53, 1, v132))
                {
                  sub_1C0AF9C38(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
                  size_t v135 = *(void *)(*(void *)(v134 - 8) + 64);
                  goto LABEL_86;
                }
                uint64_t v168 = sub_1C151631C();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v168 - 8) + 32))(v52, v53, v168);
                uint64_t v169 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
                *(_OWORD *)((char *)v52 + v169[5]) = *(_OWORD *)((char *)v53 + v169[5]);
                uint64_t v170 = v169[6];
                id v171 = (_OWORD *)((char *)v52 + v170);
                uint64_t v172 = (_OWORD *)((char *)v53 + v170);
                long long v173 = v172[1];
                *id v171 = *v172;
                v171[1] = v173;
                *(void *)((char *)v52 + v169[7]) = *(void *)((char *)v53 + v169[7]);
                *(void *)((char *)v52 + v169[8]) = *(void *)((char *)v53 + v169[8]);
                *(void *)((char *)v52 + v132[5]) = *(void *)((char *)v53 + v132[5]);
                *(void *)((char *)v52 + v132[6]) = *(void *)((char *)v53 + v132[6]);
                *(_OWORD *)((char *)v52 + v132[7]) = *(_OWORD *)((char *)v53 + v132[7]);
                (*(void (**)(void *, void, uint64_t, int *))(v133 + 56))(v52, 0, 1, v132);
                goto LABEL_113;
              case 3u:
                uint64_t v141 = v53[1];
                *uint64_t v52 = *v53;
                v52[1] = v141;
                *((unsigned char *)v52 + 16) = *((unsigned char *)v53 + 16);
                uint64_t v142 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
                uint64_t v143 = v142[6];
                uint64_t v221 = v52;
                uint64_t v144 = (char *)v52 + v143;
                uint64_t v145 = (char *)v53 + v143;
                uint64_t v146 = type metadata accessor for PuzzleStreak();
                uint64_t v147 = *(void *)(v146 - 8);
                uint64_t v148 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v147 + 48);
                if (v148(v145, 1, v146))
                {
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v144, v145, *(void *)(*(void *)(v149 - 8) + 64));
                }
                else
                {
                  uint64_t v174 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 32))(v144, v145, v174);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v144, 0, 1, v146);
                }
                uint64_t v175 = v142[7];
                uint64_t v176 = (char *)v221 + v175;
                uint64_t v177 = (char *)v53 + v175;
                if (v148((char *)v53 + v175, 1, v146))
                {
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v176, v177, *(void *)(*(void *)(v178 - 8) + 64));
                }
                else
                {
                  uint64_t v179 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 32))(v176, v177, v179);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v176, 0, 1, v146);
                }
                uint64_t v180 = v142[8];
                uint64_t v181 = (_OWORD *)((char *)v221 + v180);
                uint64_t v182 = (_OWORD *)((char *)v53 + v180);
                long long v183 = v182[1];
                *uint64_t v181 = *v182;
                v181[1] = v183;
                *(_OWORD *)((char *)v181 + 25) = *(_OWORD *)((char *)v182 + 25);
                uint64_t v184 = v142[9];
                long long v185 = (_OWORD *)((char *)v221 + v184);
                uint64_t v186 = (_OWORD *)((char *)v53 + v184);
                *(_OWORD *)((char *)v185 + 25) = *(_OWORD *)((char *)v186 + 25);
                long long v187 = v186[1];
                *long long v185 = *v186;
                v185[1] = v187;
                uint64_t v188 = v142[10];
                long long v189 = (_OWORD *)((char *)v221 + v188);
                uint64_t v190 = (_OWORD *)((char *)v53 + v188);
                long long v191 = v190[1];
                *long long v189 = *v190;
                v189[1] = v191;
                *(_OWORD *)((char *)v189 + 25) = *(_OWORD *)((char *)v190 + 25);
                goto LABEL_113;
              default:
                uint64_t v54 = type metadata accessor for PuzzleStatisticValue(0);
                int v55 = swift_getEnumCaseMultiPayload();
                if (v55 == 5)
                {
                  uint64_t v56 = type metadata accessor for PuzzleStreak();
                  uint64_t v57 = *(void *)(v56 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v57 + 48))(v53, 1, v56)) {
                    goto LABEL_19;
                  }
                }
                else
                {
                  if (v55 != 4)
                  {
                    size_t v135 = *(void *)(*(void *)(v54 - 8) + 64);
LABEL_86:
                    memcpy(v52, v53, v135);
                    goto LABEL_113;
                  }
                  uint64_t v56 = type metadata accessor for PuzzleStreak();
                  uint64_t v57 = *(void *)(v56 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v57 + 48))(v53, 1, v56))
                  {
LABEL_19:
                    sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                    memcpy(v52, v53, *(void *)(*(void *)(v58 - 8) + 64));
                    goto LABEL_112;
                  }
                }
                uint64_t v192 = sub_1C151555C();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v192 - 8) + 32))(v52, v53, v192);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v52, 0, 1, v56);
LABEL_112:
                swift_storeEnumTagMultiPayload();
LABEL_113:
                swift_storeEnumTagMultiPayload();
LABEL_114:
                swift_storeEnumTagMultiPayload();
LABEL_115:
                swift_storeEnumTagMultiPayload();
                break;
            }
            break;
          case 0xCu:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v59 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
            uint64_t v60 = a1 + v59;
            uint64_t v61 = a2 + v59;
            uint64_t v62 = sub_1C151D6DC();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
            goto LABEL_114;
          default:
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
            goto LABEL_115;
        }
        break;
      case 0x18u:
        type metadata accessor for FormatPropertyDefinition(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            long long v63 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v63;
            long long v64 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v64;
            *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
            *(void *)(a1 + 72) = *(void *)(a2 + 72);
            *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
            *(void *)(a1 + 88) = *(void *)(a2 + 88);
            long long v65 = &qword_1EB88E9B8;
            long long v66 = sub_1C003F2E8;
            goto LABEL_36;
          case 2u:
            long long v67 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v67;
            long long v68 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v68;
            *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
            sub_1BFF71B30();
            uint64_t v70 = v69;
            uint64_t v71 = v69[13];
            uint64_t v72 = (void *)(a1 + v71);
            int v73 = (const void *)(a2 + v71);
            uint64_t v74 = sub_1C151631C();
            uint64_t v75 = *(void *)(v74 - 8);
            if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74)) {
              goto LABEL_47;
            }
            uint64_t v76 = &qword_1EB871180;
            uint64_t v77 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
            goto LABEL_31;
          case 3u:
            long long v78 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v78;
            long long v79 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v79;
            *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
            *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
            *(void *)(a1 + 104) = *(void *)(a2 + 104);
            *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
            *(void *)(a1 + 120) = *(void *)(a2 + 120);
            uint64_t v80 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
            goto LABEL_38;
          case 4u:
            long long v81 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v81;
            long long v82 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v82;
            *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
            *(void *)(a1 + 72) = *(void *)(a2 + 72);
            *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
            *(void *)(a1 + 88) = *(void *)(a2 + 88);
            long long v65 = &qword_1EB88E990;
            long long v66 = sub_1C0092008;
            goto LABEL_36;
          case 5u:
            long long v83 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v83;
            long long v84 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v84;
            *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
            *(void *)(a1 + 72) = *(void *)(a2 + 72);
            *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
            *(void *)(a1 + 88) = *(void *)(a2 + 88);
            long long v23 = &qword_1EB88E9D0;
            goto LABEL_28;
          case 6u:
            long long v85 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v85;
            long long v86 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v86;
            *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
            *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
            *(void *)(a1 + 96) = *(void *)(a2 + 96);
            long long v23 = &qword_1EB88E9C0;
            goto LABEL_28;
          case 7u:
            long long v88 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v88;
            long long v89 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v89;
            *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
            sub_1BFF719C0();
            uint64_t v70 = v90;
            uint64_t v91 = v90[13];
            uint64_t v72 = (void *)(a1 + v91);
            int v73 = (const void *)(a2 + v91);
            uint64_t v74 = sub_1C1515FDC();
            uint64_t v75 = *(void *)(v74 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
            {
              uint64_t v76 = &qword_1EB8948A0;
              uint64_t v77 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
LABEL_31:
              sub_1C0AF9C38(0, (unint64_t *)v76, v77, MEMORY[0x1E4FBB718]);
              memcpy(v72, v73, *(void *)(*(void *)(v92 - 8) + 64));
            }
            else
            {
LABEL_47:
              (*(void (**)(void *, const void *, uint64_t))(v75 + 32))(v72, v73, v74);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
            }
            *(unsigned char *)(a1 + v70[14]) = *(unsigned char *)(a2 + v70[14]);
            *(void *)(a1 + v70[15]) = *(void *)(a2 + v70[15]);
            uint64_t v80 = v70[16];
            goto LABEL_38;
          case 8u:
            long long v93 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v93;
            long long v94 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v94;
            *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
            *(void *)(a1 + 72) = *(void *)(a2 + 72);
            *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
            *(void *)(a1 + 88) = *(void *)(a2 + 88);
            long long v65 = &qword_1EB88E9A0;
            long long v66 = sub_1C0036630;
            goto LABEL_36;
          case 9u:
            long long v95 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v95;
            long long v96 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v96;
            *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
            *(void *)(a1 + 72) = *(void *)(a2 + 72);
            *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
            *(void *)(a1 + 88) = *(void *)(a2 + 88);
            long long v65 = &qword_1EB88E998;
            long long v66 = sub_1C00738F0;
            goto LABEL_36;
          case 0xAu:
            long long v97 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v97;
            long long v98 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v98;
            *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
            *(void *)(a1 + 72) = *(void *)(a2 + 72);
            *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
            *(void *)(a1 + 88) = *(void *)(a2 + 88);
            long long v65 = &qword_1EB88E9B0;
            long long v66 = sub_1C0084C58;
            goto LABEL_36;
          case 0xBu:
            long long v99 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v99;
            long long v100 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v100;
            *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
            *(void *)(a1 + 72) = *(void *)(a2 + 72);
            *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
            *(void *)(a1 + 88) = *(void *)(a2 + 88);
            long long v65 = &qword_1EB88E9A8;
            long long v66 = sub_1C006F9DC;
LABEL_36:
            sub_1C0AF9C9C(0, v65, (void (*)(void))v66);
            goto LABEL_37;
          default:
            long long v21 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v21;
            long long v22 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v22;
            *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
            *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
            *(void *)(a1 + 72) = *(void *)(a2 + 72);
            long long v23 = &qword_1EB88E9C8;
LABEL_28:
            sub_1BFF71924(0, v23);
LABEL_37:
            uint64_t v80 = *(int *)(v87 + 64);
LABEL_38:
            long long v101 = (void *)(a1 + v80);
            uint64_t v102 = (const void *)(a2 + v80);
            uint64_t v103 = sub_1C1518CDC();
            uint64_t v104 = *(void *)(v103 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v104 + 48))(v102, 1, v103))
            {
              sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
              memcpy(v101, v102, *(void *)(*(void *)(v105 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v104 + 32))(v101, v102, v103);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v103);
            }
            break;
        }
        goto LABEL_114;
      case 0x1Au:
        uint64_t v24 = sub_1C151CA7C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
        goto LABEL_115;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_1C0B0765C()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FeedGroupItem();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for FormatPropertyDefinition(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = sub_1C151CA7C();
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1C0B07888(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  long long v9 = (uint64_t *)((char *)a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for FormatInspectionItem.Value(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v13(v10, 1, v11))
  {
    uint64_t v525 = v12;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        uint64_t v17 = *((void *)v10 + 1);
        *long long v9 = *(void *)v10;
        v9[1] = v17;
        swift_bridgeObjectRetain();
        goto LABEL_41;
      case 3u:
      case 0xFu:
        uint64_t v55 = *((void *)v10 + 1);
        *long long v9 = *(void *)v10;
        v9[1] = v55;
        swift_retain();
        goto LABEL_41;
      case 4u:
      case 0x16u:
      case 0x19u:
      case 0x1Bu:
      case 0x1Du:
      case 0x1Eu:
        *long long v9 = *(void *)v10;
        swift_retain();
        goto LABEL_41;
      case 5u:
        uint64_t v18 = *((void *)v10 + 1);
        *long long v9 = *(void *)v10;
        v9[1] = v18;
        swift_retain();
        swift_retain();
        goto LABEL_41;
      case 6u:
        uint64_t v19 = *((void *)v10 + 1);
        *long long v9 = *(void *)v10;
        v9[1] = v19;
        long long v20 = *((_OWORD *)v10 + 2);
        *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
        *((_OWORD *)v9 + 2) = v20;
        uint64_t v21 = *((void *)v10 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v21)
        {
          uint64_t v22 = *((void *)v10 + 7);
          v9[6] = v21;
          v9[7] = v22;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)v9 + 3) = *((_OWORD *)v10 + 3);
        }
        uint64_t v15 = a3;
        swift_storeEnumTagMultiPayload();
        goto LABEL_43;
      case 7u:
        long long v23 = *((_OWORD *)v10 + 1);
        *(_OWORD *)long long v9 = *(_OWORD *)v10;
        *((_OWORD *)v9 + 1) = v23;
        *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
        *((unsigned char *)v9 + 48) = v10[48];
        *(_OWORD *)(v9 + 7) = *(_OWORD *)(v10 + 56);
        *(_OWORD *)(v9 + 9) = *(_OWORD *)(v10 + 72);
        *(_OWORD *)(v9 + 11) = *(_OWORD *)(v10 + 88);
        *((unsigned char *)v9 + 104) = v10[104];
        uint64_t v24 = *((void *)v10 + 15);
        v9[14] = *((void *)v10 + 14);
        v9[15] = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_41;
      case 8u:
        uint64_t v56 = *(void *)v10;
        sub_1BFF7B774(*(void *)v10);
        *long long v9 = v56;
        goto LABEL_41;
      case 9u:
        uint64_t v57 = *((void *)v10 + 1);
        *long long v9 = *(void *)v10;
        v9[1] = v57;
        uint64_t v58 = *((void *)v10 + 3);
        v496 = (void *)*((void *)v10 + 2);
        uint64_t v517 = v11;
        uint64_t v59 = *((void *)v10 + 4);
        uint64_t v60 = *((void *)v10 + 6);
        uint64_t v506 = *((void *)v10 + 5);
        uint64_t v508 = *((void *)v10 + 7);
        uint64_t v61 = *((void *)v10 + 8);
        __dstc = (void *)*((void *)v10 + 9);
        char v62 = v10[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C03A98B4((uint64_t)v496, v58, v59, v506, v60, v508, v61, (uint64_t)__dstc, v62);
        v9[2] = (uint64_t)v496;
        v9[3] = v58;
        v9[4] = v59;
        v9[5] = v506;
        v9[6] = v60;
        v9[7] = v508;
        v9[8] = v61;
        v9[9] = (uint64_t)__dstc;
        *((unsigned char *)v9 + 80) = v62;
        uint64_t v63 = *((void *)v10 + 11);
        uint64_t v64 = *((void *)v10 + 12);
        uint64_t v66 = *((void *)v10 + 13);
        uint64_t v65 = *((void *)v10 + 14);
        uint64_t v67 = *((void *)v10 + 15);
        uint64_t v68 = *((void *)v10 + 16);
        uint64_t v69 = *((void *)v10 + 18);
        uint64_t v507 = v69;
        uint64_t v509 = *((void *)v10 + 17);
        char v70 = v10[152];
        sub_1C03A98B4(v63, v64, v66, v65, v67, v68, v509, v69, v70);
        v9[11] = v63;
        v9[12] = v64;
        v9[13] = v66;
        v9[14] = v65;
        uint64_t v11 = v517;
        v9[15] = v67;
        unsigned char v9[16] = v68;
        v9[17] = v509;
        v9[18] = v507;
        *((unsigned char *)v9 + 152) = v70;
        goto LABEL_41;
      case 0xAu:
        uint64_t v25 = *((void *)v10 + 1);
        *long long v9 = *(void *)v10;
        v9[1] = v25;
        swift_retain();
        swift_retain();
        goto LABEL_41;
      case 0xCu:
        uint64_t v26 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v9, v10, v26);
        goto LABEL_41;
      case 0xDu:
        long long v27 = *((_OWORD *)v10 + 1);
        *(_OWORD *)long long v9 = *(_OWORD *)v10;
        *((_OWORD *)v9 + 1) = v27;
        uint64_t v28 = *((void *)v10 + 5);
        v9[4] = *((void *)v10 + 4);
        v9[5] = v28;
        *((unsigned char *)v9 + 48) = v10[48];
        swift_bridgeObjectRetain();
        goto LABEL_41;
      case 0xEu:
        uint64_t v29 = *((void *)v10 + 1);
        *long long v9 = *(void *)v10;
        v9[1] = v29;
        v9[2] = *((void *)v10 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_41;
      case 0x10u:
        long long v71 = *(_OWORD *)(v10 + 24);
        *(_OWORD *)(v9 + 3) = v71;
        (**(void (***)(uint64_t *, char *))(v71 - 8))(v9, v10);
        uint64_t v72 = *((void *)v10 + 6);
        v9[5] = *((void *)v10 + 5);
        v9[6] = v72;
        uint64_t v73 = *((void *)v10 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v73)
        {
          v9[7] = *((void *)v10 + 7);
          v9[8] = v73;
          uint64_t v74 = *((void *)v10 + 10);
          v9[9] = *((void *)v10 + 9);
          v9[10] = v74;
          uint64_t v75 = *((void *)v10 + 12);
          v9[11] = *((void *)v10 + 11);
          v9[12] = v75;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v85 = *(_OWORD *)(v10 + 72);
          *(_OWORD *)(v9 + 7) = *(_OWORD *)(v10 + 56);
          *(_OWORD *)(v9 + 9) = v85;
          *(_OWORD *)(v9 + 11) = *(_OWORD *)(v10 + 88);
        }
        *((unsigned char *)v9 + 104) = v10[104];
        goto LABEL_41;
      case 0x11u:
        type metadata accessor for FeedGroupItem();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v203 = *(void **)v10;
            uint64_t v204 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v204;
            v9[2] = *((void *)v10 + 2);
            *((_WORD *)v9 + 12) = *((_WORD *)v10 + 12);
            v9[4] = *((void *)v10 + 4);
            *((unsigned char *)v9 + 40) = v10[40];
            uint64_t v205 = (void *)*((void *)v10 + 7);
            v9[6] = *((void *)v10 + 6);
            v9[7] = (uint64_t)v205;
            *((unsigned char *)v9 + 64) = v10[64];
            uint64_t v206 = *((void *)v10 + 10);
            id v207 = v203;
            swift_bridgeObjectRetain();
            id v208 = v205;
            if (v206 == 1)
            {
              long long v209 = *(_OWORD *)(v10 + 88);
              *(_OWORD *)(v9 + 9) = *(_OWORD *)(v10 + 72);
              *(_OWORD *)(v9 + 11) = v209;
              *(_OWORD *)(v9 + 13) = *(_OWORD *)(v10 + 104);
            }
            else
            {
              v9[9] = *((void *)v10 + 9);
              v9[10] = v206;
              uint64_t v277 = *((void *)v10 + 12);
              v9[11] = *((void *)v10 + 11);
              v9[12] = v277;
              uint64_t v279 = (void *)*((void *)v10 + 13);
              uint64_t v278 = *((void *)v10 + 14);
              v9[13] = (uint64_t)v279;
              v9[14] = v278;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v280 = v279;
            }
            unint64_t v281 = (uint64_t *)(v10 + 120);
            unint64_t v282 = *((void *)v10 + 16);
            if (v282 >= 0x11)
            {
              v9[15] = *v281;
              unsigned char v9[16] = v282;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v9 + 15) = *(_OWORD *)v281;
            }
            *((unsigned char *)v9 + 136) = v10[136];
            goto LABEL_105;
          case 2u:
            uint64_t v210 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v210;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_104;
          case 3u:
            *(_OWORD *)long long v9 = *(_OWORD *)v10;
            uint64_t v211 = *((void *)v10 + 3);
            v9[2] = *((void *)v10 + 2);
            v9[3] = v211;
            *((unsigned char *)v9 + 32) = v10[32];
            uint64_t v212 = (int *)type metadata accessor for FeedWeather(0);
            uint64_t v213 = v212[7];
            uint64_t v214 = (char *)v9 + v213;
            uint64_t v215 = &v10[v213];
            v511 = v9;
            uint64_t v519 = v11;
            uint64_t v216 = sub_1C151E2BC();
            uint64_t v217 = *(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16);
            swift_bridgeObjectRetain();
            v217(v214, v215, v216);
            v499 = v212;
            *((unsigned char *)v511 + v212[8]) = v10[v212[8]];
            uint64_t v218 = v212[9];
            long long v219 = (char *)v511 + v218;
            uint64_t v220 = &v10[v218];
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
            uint64_t v222 = v221;
            uint64_t v223 = *(void (**)(char *, char *, uint64_t))(*(void *)(v221 - 8) + 16);
            v223(v219, v220, v221);
            uint64_t v224 = (int *)type metadata accessor for FeedWeather.Temperature(0);
            v223(&v219[v224[5]], &v220[v224[5]], v222);
            v223(&v219[v224[6]], &v220[v224[6]], v222);
            uint64_t v225 = v224[7];
            uint64_t v11 = v519;
            v223(&v219[v225], &v220[v225], v222);
            long long v9 = v511;
            uint64_t v226 = v499[10];
            unint64_t v227 = (uint64_t *)((char *)v511 + v226);
            uint64_t v228 = &v10[v226];
            uint64_t v229 = *((void *)v228 + 1);
            *unint64_t v227 = *(void *)v228;
            v227[1] = v229;
            swift_bridgeObjectRetain();
            goto LABEL_104;
          case 4u:
            uint64_t v520 = v11;
            uint64_t v230 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v230;
            uint64_t v231 = *((void *)v10 + 3);
            v9[2] = *((void *)v10 + 2);
            v9[3] = v231;
            uint64_t v232 = *((void *)v10 + 5);
            v9[4] = *((void *)v10 + 4);
            v9[5] = v232;
            *((_WORD *)v9 + 24) = *((_WORD *)v10 + 24);
            *(_OWORD *)(v9 + 7) = *(_OWORD *)(v10 + 56);
            uint64_t v233 = *((void *)v10 + 10);
            v9[9] = *((void *)v10 + 9);
            v9[10] = v233;
            uint64_t v234 = *((void *)v10 + 12);
            v9[11] = *((void *)v10 + 11);
            v9[12] = v234;
            v9[13] = *((void *)v10 + 13);
            *((unsigned char *)v9 + 112) = v10[112];
            uint64_t v235 = *((void *)v10 + 16);
            v9[15] = *((void *)v10 + 15);
            unsigned char v9[16] = v235;
            *((unsigned char *)v9 + 136) = v10[136];
            uint64_t v236 = *((void *)v10 + 19);
            v9[18] = *((void *)v10 + 18);
            v9[19] = v236;
            uint64_t v237 = *((void *)v10 + 21);
            v9[20] = *((void *)v10 + 20);
            v9[21] = v237;
            *((unsigned char *)v9 + 184) = v10[184];
            v9[22] = *((void *)v10 + 22);
            uint64_t v238 = *((void *)v10 + 25);
            v9[24] = *((void *)v10 + 24);
            v9[25] = v238;
            *((unsigned char *)v9 + 224) = v10[224];
            uint64_t v239 = *((void *)v10 + 27);
            v9[26] = *((void *)v10 + 26);
            v9[27] = v239;
            v477 = (uint64_t *)(v10 + 232);
            unint64_t v240 = *((void *)v10 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v240 >= 0x11)
            {
              v9[29] = *v477;
              v9[30] = v240;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v9 + 29) = *(_OWORD *)v477;
            }
            uint64_t v11 = v520;
            goto LABEL_195;
          case 5u:
            uint64_t v521 = v11;
            uint64_t v241 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v241;
            v9[2] = *((void *)v10 + 2);
            *((unsigned char *)v9 + 24) = v10[24];
            uint64_t v242 = *((void *)v10 + 5);
            v9[4] = *((void *)v10 + 4);
            v9[5] = v242;
            v9[6] = *((void *)v10 + 6);
            *((unsigned char *)v9 + 56) = v10[56];
            v500 = (int *)type metadata accessor for FeedHeadline(0);
            uint64_t v243 = v500[10];
            v512 = v9;
            unint64_t v244 = (char *)v9 + v243;
            uint64_t v245 = &v10[v243];
            *unint64_t v244 = v10[v243];
            v244[1] = v10[v243 + 1];
            __dsta = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v246 = __dsta[6];
            uint64_t v478 = &v244[v246];
            uint64_t v247 = &v245[v246];
            int v248 = (int *)type metadata accessor for SharedItem();
            uint64_t v475 = *((void *)v248 - 1);
            uint64_t v249 = *(unsigned int (**)(char *, uint64_t, int *))(v475 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v249(v247, 1, v248))
            {
              uint64_t v250 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v478, v247, *(void *)(*(void *)(v250 - 8) + 64));
            }
            else
            {
              uint64_t v311 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v311 - 8) + 16))(v478, v247, v311);
              v478[v248[5]] = v247[v248[5]];
              uint64_t v312 = v248[6];
              uint64_t v313 = *(void **)&v247[v312];
              *(void *)&v478[v312] = v313;
              uint64_t v314 = v248[7];
              uint64_t v315 = &v478[v314];
              v489 = &v247[v314];
              uint64_t v316 = sub_1C1515FDC();
              v486 = *(void (**)(char *, char *, uint64_t))(*(void *)(v316 - 8) + 16);
              id v317 = v313;
              v486(v315, v489, v316);
              (*(void (**)(char *, void, uint64_t, int *))(v475 + 56))(v478, 0, 1, v248);
            }
            v244[__dsta[7]] = v245[__dsta[7]];
            v244[__dsta[8]] = v245[__dsta[8]];
            v244[__dsta[9]] = v245[__dsta[9]];
            v244[__dsta[10]] = v245[__dsta[10]];
            uint64_t v318 = v500[11];
            long long v9 = v512;
            uint64_t v319 = (char *)v512 + v318;
            uint64_t v320 = &v10[v318];
            uint64_t v321 = sub_1C151D2DC();
            uint64_t v322 = *(void *)(v321 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v322 + 48))(v320, 1, v321))
            {
              sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
              memcpy(v319, v320, *(void *)(*(void *)(v323 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v322 + 16))(v319, v320, v321);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v322 + 56))(v319, 0, 1, v321);
            }
            uint64_t v11 = v521;
            uint64_t v12 = v525;
            uint64_t v335 = v500[12];
            uint64_t v336 = (uint64_t *)((char *)v512 + v335);
            uint64_t v337 = &v10[v335];
            unint64_t v338 = *((void *)v337 + 1);
            if (v338 >= 0x11)
            {
              void *v336 = *(void *)v337;
              v336[1] = v338;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)uint64_t v336 = *(_OWORD *)v337;
            }
            uint64_t v339 = v500[13];
            unint64_t v340 = *(void *)&v10[v339];
            if (v340 >= 2)
            {
              if (v340 == 2)
              {
                *(uint64_t *)((char *)v512 + v339) = 2;
              }
              else
              {
                *(uint64_t *)((char *)v512 + v339) = v340;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(uint64_t *)((char *)v512 + v339) = v340;
            }
            uint64_t v372 = v500[14];
            uint64_t v373 = *(void **)&v10[v372];
            *(uint64_t *)((char *)v512 + v372) = (uint64_t)v373;
            id v374 = v373;
            goto LABEL_105;
          case 6u:
            uint64_t v251 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v251;
            *((unsigned char *)v9 + 16) = v10[16];
            uint64_t v252 = (uint64_t *)(v10 + 24);
            unint64_t v253 = *((void *)v10 + 4);
            uint64_t v522 = v11;
            if (v253 >= 0x11)
            {
              v9[3] = *v252;
              v9[4] = v253;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v9 + 3) = *(_OWORD *)v252;
            }
            uint64_t v283 = *((void *)v10 + 6);
            v9[5] = *((void *)v10 + 5);
            v9[6] = v283;
            uint64_t v284 = type metadata accessor for FeedWebEmbed();
            uint64_t v285 = *(int *)(v284 + 32);
            __dstd = &v10[v285];
            v502 = (char *)v9 + v285;
            uint64_t v286 = sub_1C1515FDC();
            uint64_t v287 = *(void *)(v286 - 8);
            id v288 = *(void (**)(char *, char *, void *))(v287 + 16);
            swift_bridgeObjectRetain();
            v485 = v288;
            v288(v502, __dstd, (void *)v286);
            __dstb = (void *)v286;
            v503 = (int *)v284;
            uint64_t v289 = *(int *)(v284 + 36);
            uint64_t v290 = (char *)v9 + v289;
            unint64_t v291 = &v10[v289];
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v287 + 48))(&v10[v289], 1, v286))
            {
              sub_1C0AF9C38(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
              memcpy(v290, v291, *(void *)(*(void *)(v292 - 8) + 64));
            }
            else
            {
              v288(v290, v291, (void *)v286);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v287 + 56))(v290, 0, 1, v286);
            }
            *(uint64_t *)((char *)v9 + v503[10]) = *(void *)&v10[v503[10]];
            *(uint64_t *)((char *)v9 + v503[11]) = *(void *)&v10[v503[11]];
            uint64_t v324 = v503[12];
            v513 = v9;
            uint64_t v325 = (uint64_t *)((char *)v9 + v324);
            uint64_t v326 = &v10[v324];
            uint64_t v327 = type metadata accessor for FeedHeadline(0);
            uint64_t v481 = *(void *)(v327 - 8);
            long long v328 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v481 + 48);
            swift_retain();
            swift_retain();
            if (v328(v326, 1, v327))
            {
              sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
              memcpy(v325, v326, *(void *)(*(void *)(v329 - 8) + 64));
            }
            else
            {
              uint64_t v341 = *((void *)v326 + 1);
              *uint64_t v325 = *(void *)v326;
              v325[1] = v341;
              v325[2] = *((void *)v326 + 2);
              *((unsigned char *)v325 + 24) = v326[24];
              uint64_t v342 = *((void *)v326 + 5);
              v325[4] = *((void *)v326 + 4);
              v325[5] = v342;
              v325[6] = *((void *)v326 + 6);
              *((unsigned char *)v325 + 56) = v326[56];
              uint64_t v473 = (int *)v327;
              v476 = v325;
              uint64_t v343 = *(int *)(v327 + 40);
              uint64_t v344 = (char *)v325 + v343;
              uint64_t v345 = &v326[v343];
              *uint64_t v344 = v326[v343];
              v344[1] = v326[v343 + 1];
              v472 = (int *)type metadata accessor for FeedHeadline.State(0);
              uint64_t v346 = v472[6];
              uint64_t v471 = &v344[v346];
              uint64_t v347 = &v345[v346];
              int v348 = (int *)type metadata accessor for SharedItem();
              uint64_t v470 = *((void *)v348 - 1);
              uint64_t v349 = *(unsigned int (**)(char *, uint64_t, int *))(v470 + 48);
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              swift_unknownObjectRetain();
              v479 = v326;
              if (v349(v347, 1, v348))
              {
                uint64_t v350 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(v471, v347, *(void *)(*(void *)(v350 - 8) + 64));
              }
              else
              {
                uint64_t v375 = sub_1C151631C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v375 - 8) + 16))(v471, v347, v375);
                v471[v348[5]] = v347[v348[5]];
                uint64_t v376 = v348[6];
                uint64_t v377 = *(void **)&v347[v376];
                *(void *)&v471[v376] = v377;
                uint64_t v378 = v348[7];
                uint64_t v379 = &v471[v378];
                v380 = &v347[v378];
                id v381 = v377;
                v485(v379, v380, __dstb);
                (*(void (**)(char *, void, uint64_t, int *))(v470 + 56))(v471, 0, 1, v348);
              }
              v344[v472[7]] = v345[v472[7]];
              v344[v472[8]] = v345[v472[8]];
              v344[v472[9]] = v345[v472[9]];
              v344[v472[10]] = v345[v472[10]];
              uint64_t v382 = v473[11];
              uint64_t v383 = (char *)v476 + v382;
              uint64_t v384 = &v479[v382];
              uint64_t v385 = sub_1C151D2DC();
              uint64_t v386 = *(void *)(v385 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v386 + 48))(v384, 1, v385))
              {
                sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
                memcpy(v383, v384, *(void *)(*(void *)(v387 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v386 + 16))(v383, v384, v385);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v386 + 56))(v383, 0, 1, v385);
              }
              uint64_t v388 = v473[12];
              unint64_t v389 = (void *)((char *)v476 + v388);
              uint64_t v390 = &v479[v388];
              unint64_t v391 = *((void *)v390 + 1);
              if (v391 >= 0x11)
              {
                void *v389 = *(void *)v390;
                v389[1] = v391;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)unint64_t v389 = *(_OWORD *)v390;
              }
              uint64_t v392 = v473[13];
              unint64_t v393 = *(void *)&v479[v392];
              if (v393 >= 2)
              {
                if (v393 == 2)
                {
                  *(void *)((char *)v476 + v392) = 2;
                }
                else
                {
                  *(void *)((char *)v476 + v392) = v393;
                  swift_unknownObjectRetain();
                }
              }
              else
              {
                *(void *)((char *)v476 + v392) = v393;
              }
              uint64_t v411 = v473[14];
              id v412 = *(void **)&v479[v411];
              *(void *)((char *)v476 + v411) = v412;
              uint64_t v413 = *(void (**)(void *, void, uint64_t, int *))(v481 + 56);
              id v414 = v412;
              v413(v476, 0, 1, v473);
            }
            uint64_t v415 = v503[13];
            uint64_t v416 = (uint64_t *)((char *)v513 + v415);
            uint64_t v417 = &v10[v415];
            uint64_t v418 = type metadata accessor for WebEmbedDataVisualization();
            uint64_t v419 = *(void *)(v418 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v419 + 48))(v417, 1, v418))
            {
              sub_1C0AF9C38(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
              memcpy(v416, v417, *(void *)(*(void *)(v420 - 8) + 64));
            }
            else
            {
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              uint64_t v422 = *(void *)v417;
              if (EnumCaseMultiPayload == 1)
              {
                uint64_t v423 = *((void *)v417 + 1);
                void *v416 = v422;
                v416[1] = v423;
                uint64_t v424 = type metadata accessor for GenericDataVisualization();
                uint64_t v425 = *(int *)(v424 + 20);
                long long v426 = (char *)v416 + v425;
                v482 = &v417[v425];
                swift_bridgeObjectRetain();
                v485(v426, v482, __dstb);
                *(void *)((char *)v416 + *(int *)(v424 + 24)) = *(void *)&v417[*(int *)(v424 + 24)];
                swift_bridgeObjectRetain();
              }
              else
              {
                void *v416 = v422;
                swift_retain();
              }
              swift_storeEnumTagMultiPayload();
              (*(void (**)(void *, void, uint64_t, uint64_t))(v419 + 56))(v416, 0, 1, v418);
            }
            long long v9 = v513;
            uint64_t v11 = v522;
            *((unsigned char *)v513 + v503[14]) = v10[v503[14]];
LABEL_195:
            uint64_t v12 = v525;
            uint64_t v15 = a3;
            goto LABEL_106;
          case 7u:
            uint64_t v254 = *(void **)v10;
            *long long v9 = *(void *)v10;
            id v255 = v254;
            goto LABEL_104;
          case 8u:
            uint64_t v256 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v256;
            uint64_t v257 = *((void *)v10 + 3);
            v9[2] = *((void *)v10 + 2);
            v9[3] = v257;
            *((unsigned char *)v9 + 32) = v10[32];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            goto LABEL_104;
          case 9u:
            uint64_t v258 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v258;
            *((unsigned char *)v9 + 16) = v10[16];
            uint64_t v259 = (uint64_t *)(v10 + 24);
            unint64_t v260 = *((void *)v10 + 4);
            uint64_t v523 = v11;
            if (v260 >= 0x11)
            {
              v9[3] = *v259;
              v9[4] = v260;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v9 + 3) = *(_OWORD *)v259;
            }
            uint64_t v293 = *((void *)v10 + 6);
            v9[5] = *((void *)v10 + 5);
            v9[6] = v293;
            uint64_t v294 = (void *)*((void *)v10 + 8);
            v9[7] = *((void *)v10 + 7);
            v9[8] = (uint64_t)v294;
            *((unsigned char *)v9 + 72) = v10[72];
            v9[10] = *((void *)v10 + 10);
            v504 = v9 + 11;
            uint64_t v295 = *((void *)v10 + 14);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            id v296 = v294;
            swift_bridgeObjectRetain();
            if (v295)
            {
              uint64_t v297 = *((void *)v10 + 15);
              v9[14] = v295;
              v9[15] = v297;
              (**(void (***)(_OWORD *, uint64_t, uint64_t))(v295 - 8))(v504, (uint64_t)(v10 + 88), v295);
            }
            else
            {
              long long v330 = *(_OWORD *)(v10 + 104);
              _OWORD *v504 = *(_OWORD *)(v10 + 88);
              *(_OWORD *)(v9 + 13) = v330;
              v9[15] = *((void *)v10 + 15);
            }
            unint64_t v331 = v9 + 16;
            uint64_t v332 = v10 + 128;
            uint64_t v333 = *((void *)v10 + 19);
            uint64_t v11 = v523;
            if (v333)
            {
              uint64_t v334 = *((void *)v10 + 20);
              v9[19] = v333;
              v9[20] = v334;
              (**(void (***)(_OWORD *, _OWORD *))(v333 - 8))(v331, v332);
            }
            else
            {
              long long v351 = *((_OWORD *)v10 + 9);
              _OWORD *v331 = *v332;
              *((_OWORD *)v9 + 9) = v351;
              v9[20] = *((void *)v10 + 20);
            }
            uint64_t v352 = v9 + 21;
            uint64_t v353 = v10 + 168;
            uint64_t v354 = *((void *)v10 + 24);
            if (v354)
            {
              uint64_t v355 = *((void *)v10 + 25);
              v9[24] = v354;
              v9[25] = v355;
              (**(void (***)(_OWORD *, _OWORD *))(v354 - 8))(v352, v353);
            }
            else
            {
              long long v356 = *(_OWORD *)(v10 + 184);
              _OWORD *v352 = *v353;
              *(_OWORD *)(v9 + 23) = v356;
              v9[25] = *((void *)v10 + 25);
            }
            goto LABEL_105;
          case 0xAu:
            uint64_t v261 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v261;
            *((unsigned char *)v9 + 16) = v10[16];
            uint64_t v262 = (uint64_t *)(v10 + 24);
            unint64_t v263 = *((void *)v10 + 4);
            if (v263 >= 0x11)
            {
              v9[3] = *v262;
              v9[4] = v263;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v9 + 3) = *(_OWORD *)v262;
            }
            uint64_t v298 = *((void *)v10 + 6);
            v9[5] = *((void *)v10 + 5);
            v9[6] = v298;
            v9[7] = *((void *)v10 + 7);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            goto LABEL_105;
          case 0xBu:
            uint64_t v264 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v264;
            *((unsigned char *)v9 + 16) = v10[16];
            uint64_t v265 = (uint64_t *)(v10 + 24);
            unint64_t v266 = *((void *)v10 + 4);
            uint64_t v524 = v11;
            if (v266 >= 0x11)
            {
              v9[3] = *v265;
              v9[4] = v266;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v9 + 3) = *(_OWORD *)v265;
            }
            break;
          case 0xCu:
            uint64_t v267 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v267;
            uint64_t v268 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
            id v269 = (char *)v9 + v268;
            v501 = &v10[v268];
            uint64_t v270 = sub_1C151D6DC();
            uint64_t v271 = *(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 16);
            swift_bridgeObjectRetain();
            v271(v269, v501, v270);
            goto LABEL_104;
          default:
            uint64_t v76 = (void *)*((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = (uint64_t)v76;
            *((unsigned char *)v9 + 16) = v10[16];
            swift_unknownObjectRetain();
            id v77 = v76;
LABEL_104:
            uint64_t v12 = v525;
LABEL_105:
            uint64_t v15 = a3;
            goto LABEL_106;
        }
        break;
      case 0x12u:
        uint64_t v78 = *((void *)v10 + 3);
        v9[3] = v78;
        (**(void (***)(uint64_t *, char *))(v78 - 8))(v9, v10);
        goto LABEL_41;
      case 0x13u:
        *long long v9 = *(void *)v10;
        uint64_t v30 = *((void *)v10 + 1);
        swift_retain();
        if (v30 == 1)
        {
          long long v31 = *(_OWORD *)(v10 + 120);
          *(_OWORD *)(v9 + 13) = *(_OWORD *)(v10 + 104);
          *(_OWORD *)(v9 + 15) = v31;
          *(_OWORD *)((char *)v9 + 129) = *(_OWORD *)(v10 + 129);
          long long v32 = *(_OWORD *)(v10 + 56);
          *(_OWORD *)(v9 + 5) = *(_OWORD *)(v10 + 40);
          *(_OWORD *)(v9 + 7) = v32;
          long long v33 = *(_OWORD *)(v10 + 88);
          *(_OWORD *)(v9 + 9) = *(_OWORD *)(v10 + 72);
          *(_OWORD *)(v9 + 11) = v33;
          long long v34 = *(_OWORD *)(v10 + 24);
          *(_OWORD *)(v9 + 1) = *(_OWORD *)(v10 + 8);
          *(_OWORD *)(v9 + 3) = v34;
        }
        else
        {
          uint64_t v518 = v11;
          uint64_t v80 = *((void *)v10 + 2);
          uint64_t v81 = *((void *)v10 + 3);
          v9[1] = v30;
          v9[2] = v80;
          uint64_t v82 = *((void *)v10 + 4);
          v9[3] = v81;
          v9[4] = v82;
          *((unsigned char *)v9 + 40) = v10[40];
          uint64_t v83 = *((void *)v10 + 7);
          v9[6] = *((void *)v10 + 6);
          v9[7] = v83;
          int v84 = v10[80];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v84 == 255)
          {
            *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
            *((unsigned char *)v9 + 80) = v10[80];
          }
          else
          {
            uint64_t v94 = *((void *)v10 + 8);
            uint64_t v95 = *((void *)v10 + 9);
            sub_1BFE94AB4(v94, v95, v84 & 1);
            v9[8] = v94;
            v9[9] = v95;
            *((unsigned char *)v9 + 80) = v84 & 1;
          }
          int v96 = v10[120];
          if (v96 == 255)
          {
            long long v97 = *(_OWORD *)(v10 + 104);
            *(_OWORD *)(v9 + 11) = *(_OWORD *)(v10 + 88);
            *(_OWORD *)(v9 + 13) = v97;
            *((unsigned char *)v9 + 120) = v10[120];
          }
          else
          {
            char v98 = v96 & 1;
            uint64_t v99 = *((void *)v10 + 11);
            uint64_t v100 = *((void *)v10 + 12);
            uint64_t v101 = *((void *)v10 + 13);
            uint64_t v102 = *((void *)v10 + 14);
            sub_1C00F65A8(v99, v100, v101, v102, v96 & 1);
            v9[11] = v99;
            v9[12] = v100;
            v9[13] = v101;
            v9[14] = v102;
            *((unsigned char *)v9 + 120) = v98;
          }
          uint64_t v11 = v518;
          uint64_t v12 = v525;
          int v103 = v10[144];
          if (v103 == 255)
          {
            *((_OWORD *)v9 + 8) = *((_OWORD *)v10 + 8);
            *((unsigned char *)v9 + 144) = v10[144];
          }
          else
          {
            char v104 = v103 & 1;
            uint64_t v105 = *((void *)v10 + 16);
            uint64_t v106 = *((void *)v10 + 17);
            sub_1BFE94AB4(v105, v106, v103 & 1);
            unsigned char v9[16] = v105;
            v9[17] = v106;
            *((unsigned char *)v9 + 144) = v104;
          }
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_42;
      case 0x14u:
        uint64_t v35 = *(void **)v10;
        uint64_t v36 = (void *)*((void *)v10 + 1);
        *long long v9 = *(void *)v10;
        v9[1] = (uint64_t)v36;
        id v37 = v35;
        id v38 = v36;
        goto LABEL_41;
      case 0x17u:
        *(unsigned char *)long long v9 = *v10;
        uint64_t v39 = *((void *)v10 + 2);
        v9[1] = *((void *)v10 + 1);
        v9[2] = v39;
        uint64_t v40 = *((void *)v10 + 4);
        v9[3] = *((void *)v10 + 3);
        v9[4] = v40;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_41;
      case 0x18u:
        type metadata accessor for FormatPropertyDefinition(0);
        v510 = v9;
        uint64_t v516 = v11;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v107 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v107;
            uint64_t v108 = *((void *)v10 + 3);
            v9[2] = *((void *)v10 + 2);
            v9[3] = v108;
            uint64_t v109 = *((void *)v10 + 5);
            v9[4] = *((void *)v10 + 4);
            v9[5] = v109;
            uint64_t v110 = *((void *)v10 + 6);
            uint64_t v111 = *((void *)v10 + 7);
            *((unsigned char *)v9 + 64) = v10[64];
            uint64_t v112 = *((void *)v10 + 9);
            v9[6] = v110;
            v9[7] = v111;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((~v112 & 0xF000000000000007) != 0) {
              swift_retain();
            }
            v9[9] = v112;
            *((unsigned char *)v9 + 80) = v10[80];
            v9[11] = *((void *)v10 + 11);
            uint64_t v113 = &qword_1EB88E9B8;
            uint64_t v114 = sub_1C003F2E8;
            goto LABEL_84;
          case 2u:
            uint64_t v115 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v115;
            uint64_t v116 = *((void *)v10 + 3);
            v9[2] = *((void *)v10 + 2);
            v9[3] = v116;
            uint64_t v117 = v9;
            uint64_t v118 = *((void *)v10 + 5);
            v117[4] = *((void *)v10 + 4);
            v117[5] = v118;
            uint64_t v119 = *((void *)v10 + 7);
            v117[6] = *((void *)v10 + 6);
            v117[7] = v119;
            *((unsigned char *)v117 + 64) = v10[64];
            sub_1BFF71B30();
            uint64_t v121 = v120[13];
            __dst = (char *)v117 + v121;
            v497 = v120;
            uint64_t v122 = &v10[v121];
            uint64_t v123 = sub_1C151631C();
            uint64_t v124 = *(void *)(v123 - 8);
            v483 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v125 = v122;
            swift_bridgeObjectRetain();
            if (!v483(v122, 1, v123)) {
              goto LABEL_107;
            }
            uint64_t v126 = &qword_1EB871180;
            long long v127 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
            goto LABEL_71;
          case 3u:
            uint64_t v128 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v128;
            uint64_t v129 = *((void *)v10 + 3);
            v9[2] = *((void *)v10 + 2);
            v9[3] = v129;
            uint64_t v130 = *((void *)v10 + 5);
            v9[4] = *((void *)v10 + 4);
            v9[5] = v130;
            uint64_t v131 = *((void *)v10 + 7);
            v9[6] = *((void *)v10 + 6);
            v9[7] = v131;
            uint64_t v132 = *((void *)v10 + 9);
            v9[8] = *((void *)v10 + 8);
            v9[9] = v132;
            *((unsigned char *)v9 + 80) = v10[80];
            uint64_t v133 = *((void *)v10 + 12);
            v9[11] = *((void *)v10 + 11);
            v9[12] = v133;
            v9[13] = *((void *)v10 + 13);
            *((unsigned char *)v9 + 112) = v10[112];
            v9[15] = *((void *)v10 + 15);
            uint64_t v134 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
            uint64_t v498 = (char *)v9 + v134;
            size_t v135 = &v10[v134];
            uint64_t v136 = sub_1C1518CDC();
            uint64_t v137 = *(void *)(v136 - 8);
            v474 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v137 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v474(v135, 1, v136))
            {
              sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
              size_t v139 = *(void *)(*(void *)(v138 - 8) + 64);
              uint64_t v140 = v498;
              uint64_t v141 = v135;
              goto LABEL_111;
            }
            (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v498, v135, v136);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v137 + 56))(v498, 0, 1, v136);
            break;
          case 4u:
            uint64_t v142 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v142;
            uint64_t v143 = *((void *)v10 + 3);
            v9[2] = *((void *)v10 + 2);
            v9[3] = v143;
            uint64_t v144 = *((void *)v10 + 5);
            v9[4] = *((void *)v10 + 4);
            v9[5] = v144;
            uint64_t v145 = v9;
            uint64_t v146 = *((void *)v10 + 7);
            v145[6] = *((void *)v10 + 6);
            v145[7] = v146;
            *((unsigned char *)v145 + 64) = v10[64];
            uint64_t v147 = *((void *)v10 + 9);
            *((unsigned char *)v145 + 80) = v10[80];
            v145[9] = v147;
            *((unsigned char *)v145 + 81) = v10[81];
            v145[11] = *((void *)v10 + 11);
            sub_1C0AF9C9C(0, &qword_1EB88E990, (void (*)(void))sub_1C0092008);
            goto LABEL_65;
          case 5u:
            uint64_t v149 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v149;
            uint64_t v150 = *((void *)v10 + 3);
            v9[2] = *((void *)v10 + 2);
            v9[3] = v150;
            uint64_t v151 = *((void *)v10 + 5);
            v9[4] = *((void *)v10 + 4);
            v9[5] = v151;
            uint64_t v145 = v9;
            uint64_t v152 = *((void *)v10 + 7);
            v145[6] = *((void *)v10 + 6);
            v145[7] = v152;
            *((unsigned char *)v145 + 64) = v10[64];
            uint64_t v153 = *((void *)v10 + 9);
            *((unsigned char *)v145 + 80) = v10[80];
            v145[9] = v153;
            *((unsigned char *)v145 + 81) = v10[81];
            v145[11] = *((void *)v10 + 11);
            sub_1BFF71924(0, &qword_1EB88E9D0);
LABEL_65:
            uint64_t v154 = *(int *)(v148 + 64);
            v495 = (char *)v145 + v154;
            uint64_t v48 = &v10[v154];
            uint64_t v49 = sub_1C1518CDC();
            uint64_t v50 = *(void *)(v49 - 8);
            uint64_t v155 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (!v155(v48, 1, v49)) {
              goto LABEL_66;
            }
            goto LABEL_68;
          case 6u:
            uint64_t v156 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v156;
            uint64_t v157 = *((void *)v10 + 3);
            v9[2] = *((void *)v10 + 2);
            v9[3] = v157;
            uint64_t v158 = *((void *)v10 + 5);
            v9[4] = *((void *)v10 + 4);
            v9[5] = v158;
            uint64_t v159 = v9;
            uint64_t v160 = *((void *)v10 + 7);
            v159[6] = *((void *)v10 + 6);
            v159[7] = v160;
            *((unsigned char *)v159 + 64) = v10[64];
            uint64_t v161 = *((void *)v10 + 10);
            v159[9] = *((void *)v10 + 9);
            v159[10] = v161;
            *((unsigned char *)v159 + 88) = v10[88];
            v159[12] = *((void *)v10 + 12);
            sub_1BFF71924(0, &qword_1EB88E9C0);
            uint64_t v163 = *(int *)(v162 + 64);
            v495 = (char *)v159 + v163;
            uint64_t v48 = &v10[v163];
            uint64_t v164 = sub_1C1518CDC();
            uint64_t v165 = *(void *)(v164 - 8);
            v480 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v480(v48, 1, v164)) {
              goto LABEL_68;
            }
            (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v495, v48, v164);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v165 + 56))(v495, 0, 1, v164);
            break;
          case 7u:
            uint64_t v167 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v167;
            uint64_t v168 = *((void *)v10 + 3);
            v9[2] = *((void *)v10 + 2);
            v9[3] = v168;
            uint64_t v169 = v9;
            uint64_t v170 = *((void *)v10 + 5);
            v169[4] = *((void *)v10 + 4);
            v169[5] = v170;
            uint64_t v171 = *((void *)v10 + 7);
            v169[6] = *((void *)v10 + 6);
            v169[7] = v171;
            *((unsigned char *)v169 + 64) = v10[64];
            sub_1BFF719C0();
            uint64_t v173 = v172[13];
            __dst = (char *)v169 + v173;
            v497 = v172;
            uint64_t v174 = &v10[v173];
            uint64_t v123 = sub_1C1515FDC();
            uint64_t v124 = *(void *)(v123 - 8);
            v484 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v125 = v174;
            swift_bridgeObjectRetain();
            if (v484(v174, 1, v123))
            {
              uint64_t v126 = &qword_1EB8948A0;
              long long v127 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
LABEL_71:
              sub_1C0AF9C38(0, (unint64_t *)v126, v127, MEMORY[0x1E4FBB718]);
              memcpy(__dst, v125, *(void *)(*(void *)(v175 - 8) + 64));
            }
            else
            {
LABEL_107:
              (*(void (**)(char *, char *, uint64_t))(v124 + 16))(__dst, v125, v123);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(__dst, 0, 1, v123);
            }
            *((unsigned char *)v510 + v497[14]) = v10[v497[14]];
            *(uint64_t *)((char *)v510 + v497[15]) = *(void *)&v10[v497[15]];
            uint64_t v201 = v497[16];
            uint64_t v202 = (char *)v510 + v201;
            goto LABEL_109;
          case 8u:
            uint64_t v176 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v176;
            uint64_t v177 = *((void *)v10 + 3);
            v9[2] = *((void *)v10 + 2);
            v9[3] = v177;
            uint64_t v178 = *((void *)v10 + 5);
            v9[4] = *((void *)v10 + 4);
            v9[5] = v178;
            uint64_t v179 = *((void *)v10 + 6);
            uint64_t v180 = *((void *)v10 + 7);
            *((unsigned char *)v9 + 64) = v10[64];
            uint64_t v181 = *((void *)v10 + 9);
            v9[6] = v179;
            v9[7] = v180;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((~v181 & 0xF000000000000007) != 0) {
              swift_retain();
            }
            v9[9] = v181;
            *((unsigned char *)v9 + 80) = v10[80];
            v9[11] = *((void *)v10 + 11);
            uint64_t v113 = &qword_1EB88E9A0;
            uint64_t v114 = sub_1C0036630;
            goto LABEL_84;
          case 9u:
            uint64_t v182 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v182;
            uint64_t v183 = *((void *)v10 + 3);
            v9[2] = *((void *)v10 + 2);
            v9[3] = v183;
            uint64_t v184 = *((void *)v10 + 5);
            v9[4] = *((void *)v10 + 4);
            v9[5] = v184;
            uint64_t v185 = *((void *)v10 + 6);
            uint64_t v186 = *((void *)v10 + 7);
            *((unsigned char *)v9 + 64) = v10[64];
            uint64_t v187 = *((void *)v10 + 9);
            v9[6] = v185;
            v9[7] = v186;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((~v187 & 0xF000000000000007) != 0) {
              swift_retain();
            }
            v9[9] = v187;
            *((unsigned char *)v9 + 80) = v10[80];
            v9[11] = *((void *)v10 + 11);
            uint64_t v113 = &qword_1EB88E998;
            uint64_t v114 = sub_1C00738F0;
            goto LABEL_84;
          case 0xAu:
            uint64_t v188 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v188;
            uint64_t v189 = *((void *)v10 + 3);
            v9[2] = *((void *)v10 + 2);
            v9[3] = v189;
            uint64_t v190 = *((void *)v10 + 5);
            v9[4] = *((void *)v10 + 4);
            v9[5] = v190;
            uint64_t v191 = *((void *)v10 + 6);
            uint64_t v192 = *((void *)v10 + 7);
            *((unsigned char *)v9 + 64) = v10[64];
            uint64_t v193 = *((void *)v10 + 9);
            v9[6] = v191;
            v9[7] = v192;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((~v193 & 0xF000000000000007) != 0) {
              swift_retain();
            }
            v9[9] = v193;
            *((unsigned char *)v9 + 80) = v10[80];
            v9[11] = *((void *)v10 + 11);
            uint64_t v113 = &qword_1EB88E9B0;
            uint64_t v114 = sub_1C0084C58;
            goto LABEL_84;
          case 0xBu:
            uint64_t v194 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v194;
            uint64_t v195 = *((void *)v10 + 3);
            v9[2] = *((void *)v10 + 2);
            v9[3] = v195;
            uint64_t v196 = *((void *)v10 + 5);
            v9[4] = *((void *)v10 + 4);
            v9[5] = v196;
            uint64_t v197 = *((void *)v10 + 6);
            uint64_t v198 = *((void *)v10 + 7);
            *((unsigned char *)v9 + 64) = v10[64];
            uint64_t v199 = *((void *)v10 + 9);
            v9[6] = v197;
            v9[7] = v198;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((~v199 & 0xF000000000000007) != 0) {
              swift_retain();
            }
            v9[9] = v199;
            *((unsigned char *)v9 + 80) = v10[80];
            v9[11] = *((void *)v10 + 11);
            uint64_t v113 = &qword_1EB88E9A8;
            uint64_t v114 = sub_1C006F9DC;
LABEL_84:
            sub_1C0AF9C9C(0, v113, (void (*)(void))v114);
            uint64_t v201 = *(int *)(v200 + 64);
            uint64_t v202 = (char *)v9 + v201;
LABEL_109:
            uint64_t v272 = &v10[v201];
            uint64_t v273 = sub_1C1518CDC();
            uint64_t v274 = *(void *)(v273 - 8);
            uint64_t v275 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v274 + 48);
            swift_bridgeObjectRetain();
            if (v275(v272, 1, v273))
            {
              sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
              size_t v139 = *(void *)(*(void *)(v276 - 8) + 64);
              uint64_t v140 = v202;
              uint64_t v141 = v272;
              goto LABEL_111;
            }
            (*(void (**)(char *, char *, uint64_t))(v274 + 16))(v202, v272, v273);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v274 + 56))(v202, 0, 1, v273);
            break;
          default:
            uint64_t v41 = *((void *)v10 + 1);
            *long long v9 = *(void *)v10;
            v9[1] = v41;
            uint64_t v42 = *((void *)v10 + 3);
            v9[2] = *((void *)v10 + 2);
            v9[3] = v42;
            uint64_t v43 = *((void *)v10 + 5);
            v9[4] = *((void *)v10 + 4);
            v9[5] = v43;
            uint64_t v44 = v9;
            uint64_t v45 = *((void *)v10 + 7);
            v44[6] = *((void *)v10 + 6);
            v44[7] = v45;
            *((unsigned char *)v44 + 64) = v10[64];
            *((unsigned char *)v44 + 65) = v10[65];
            *((unsigned char *)v44 + 66) = v10[66];
            v44[9] = *((void *)v10 + 9);
            sub_1BFF71924(0, &qword_1EB88E9C8);
            uint64_t v47 = *(int *)(v46 + 64);
            v495 = (char *)v44 + v47;
            uint64_t v48 = &v10[v47];
            uint64_t v49 = sub_1C1518CDC();
            uint64_t v50 = *(void *)(v49 - 8);
            uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v51(v48, 1, v49))
            {
LABEL_68:
              sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
              size_t v139 = *(void *)(*(void *)(v166 - 8) + 64);
              uint64_t v140 = v495;
              uint64_t v141 = v48;
LABEL_111:
              memcpy(v140, v141, v139);
            }
            else
            {
LABEL_66:
              (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v495, v48, v49);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v495, 0, 1, v49);
            }
            break;
        }
        uint64_t v11 = v516;
        uint64_t v12 = v525;
        uint64_t v15 = a3;
        long long v9 = v510;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        goto LABEL_43;
      case 0x1Au:
        uint64_t v52 = sub_1C151CA7C();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v9, v10, v52);
        goto LABEL_41;
      case 0x1Cu:
        uint64_t v79 = *((void *)v10 + 1);
        *long long v9 = *(void *)v10;
        v9[1] = v79;
        *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_41;
      case 0x1Fu:
        uint64_t v53 = *(void *)v10;
        id v54 = *(id *)v10;
        *long long v9 = v53;
LABEL_41:
        swift_storeEnumTagMultiPayload();
        uint64_t v12 = v525;
        goto LABEL_42;
      default:
        memcpy(v9, v10, *(void *)(v12 + 64));
LABEL_42:
        uint64_t v15 = a3;
        goto LABEL_43;
    }
    uint64_t v299 = *((void *)v10 + 6);
    v9[5] = *((void *)v10 + 5);
    v9[6] = v299;
    uint64_t v300 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v301 = (char *)v9 + v300;
    uint64_t v302 = &v10[v300];
    *(uint64_t *)((char *)v9 + v300) = *(void *)&v10[v300];
    uint64_t v303 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    uint64_t v304 = &v301[v303];
    uint64_t v305 = &v302[v303];
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v505 = v304;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v514 = v9;
        uint64_t v359 = type metadata accessor for PuzzleStatisticValue(0);
        int v360 = swift_getEnumCaseMultiPayload();
        if (v360 == 5)
        {
          uint64_t v440 = type metadata accessor for PuzzleStreak();
          uint64_t v441 = *(void *)(v440 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v441 + 48))(v305, 1, v440))
          {
            sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v505, v305, *(void *)(*(void *)(v442 - 8) + 64));
          }
          else
          {
            uint64_t v452 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v452 - 8) + 16))(v505, v305, v452);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v441 + 56))(v505, 0, 1, v440);
          }
          uint64_t v443 = v505;
        }
        else
        {
          if (v360 != 4)
          {
            uint64_t v443 = v505;
            memcpy(v505, v305, *(void *)(*(void *)(v359 - 8) + 64));
            goto LABEL_216;
          }
          uint64_t v361 = type metadata accessor for PuzzleStreak();
          uint64_t v362 = *(void *)(v361 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v362 + 48))(v305, 1, v361))
          {
            sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v505, v305, *(void *)(*(void *)(v363 - 8) + 64));
          }
          else
          {
            uint64_t v451 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v451 - 8) + 16))(v505, v305, v451);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v362 + 56))(v505, 0, 1, v361);
          }
          uint64_t v443 = v505;
        }
        swift_storeEnumTagMultiPayload();
LABEL_216:
        uint64_t v453 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v454 = *(int *)(v453 + 20);
        v455 = &v443[v454];
        uint64_t v456 = &v305[v454];
        int v457 = swift_getEnumCaseMultiPayload();
        if (v457 == 5)
        {
          uint64_t v458 = type metadata accessor for PuzzleStreak();
          uint64_t v459 = *(void *)(v458 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v459 + 48))(v456, 1, v458))
          {
LABEL_221:
            sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v455, v456, *(void *)(*(void *)(v460 - 8) + 64));
            goto LABEL_224;
          }
        }
        else
        {
          if (v457 != 4)
          {
            memcpy(v455, v456, *(void *)(*(void *)(v359 - 8) + 64));
            goto LABEL_225;
          }
          uint64_t v458 = type metadata accessor for PuzzleStreak();
          uint64_t v459 = *(void *)(v458 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v459 + 48))(v456, 1, v458)) {
            goto LABEL_221;
          }
        }
        uint64_t v461 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v461 - 8) + 16))(v455, v456, v461);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v459 + 56))(v455, 0, 1, v458);
LABEL_224:
        swift_storeEnumTagMultiPayload();
LABEL_225:
        uint64_t v462 = *(int *)(v453 + 24);
        v463 = &v505[v462];
        v464 = &v305[v462];
        int v465 = swift_getEnumCaseMultiPayload();
        if (v465 == 5)
        {
          uint64_t v466 = type metadata accessor for PuzzleStreak();
          uint64_t v467 = *(void *)(v466 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v467 + 48))(v464, 1, v466))
          {
LABEL_230:
            sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v463, v464, *(void *)(*(void *)(v468 - 8) + 64));
LABEL_233:
            swift_storeEnumTagMultiPayload();
            goto LABEL_234;
          }
        }
        else
        {
          if (v465 != 4)
          {
            memcpy(v463, v464, *(void *)(*(void *)(v359 - 8) + 64));
LABEL_234:
            long long v9 = v514;
            uint64_t v11 = v524;
            uint64_t v15 = a3;
LABEL_235:
            swift_storeEnumTagMultiPayload();
LABEL_106:
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
LABEL_43:
            (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
            goto LABEL_44;
          }
          uint64_t v466 = type metadata accessor for PuzzleStreak();
          uint64_t v467 = *(void *)(v466 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v467 + 48))(v464, 1, v466)) {
            goto LABEL_230;
          }
        }
        uint64_t v469 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v469 - 8) + 16))(v463, v464, v469);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v467 + 56))(v463, 0, 1, v466);
        goto LABEL_233;
      case 2u:
        uint64_t v357 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v487 = *((void *)v357 - 1);
        if (!(*(unsigned int (**)(char *, uint64_t, int *))(v487 + 48))(v305, 1, v357))
        {
          v515 = v9;
          uint64_t v394 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v394 - 8) + 16))(v304, v305, v394);
          uint64_t v395 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          uint64_t v396 = v395[5];
          uint64_t v397 = &v304[v396];
          uint64_t v398 = &v305[v396];
          uint64_t v399 = *((void *)v398 + 1);
          *(void *)uint64_t v397 = *(void *)v398;
          *((void *)v397 + 1) = v399;
          uint64_t v400 = v395[6];
          uint64_t v401 = &v304[v400];
          v402 = &v305[v400];
          uint64_t v403 = *((void *)v402 + 1);
          *(void *)uint64_t v401 = *(void *)v402;
          *((void *)v401 + 1) = v403;
          uint64_t v404 = (uint64_t *)(v402 + 16);
          unint64_t v405 = *((void *)v402 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v405 >> 60 == 15)
          {
            *((_OWORD *)v401 + 1) = *(_OWORD *)v404;
          }
          else
          {
            uint64_t v444 = *v404;
            sub_1BFE95820(*v404, v405);
            *((void *)v401 + 2) = v444;
            *((void *)v401 + 3) = v405;
          }
          *(void *)&v505[v395[7]] = *(void *)&v305[v395[7]];
          *(void *)&v505[v395[8]] = *(void *)&v305[v395[8]];
          *(void *)&v505[v357[5]] = *(void *)&v305[v357[5]];
          *(void *)&v505[v357[6]] = *(void *)&v305[v357[6]];
          uint64_t v445 = v357[7];
          uint64_t v446 = &v505[v445];
          v447 = &v305[v445];
          uint64_t v448 = *((void *)v447 + 1);
          *(void *)uint64_t v446 = *(void *)v447;
          *((void *)v446 + 1) = v448;
          int v449 = *(void (**)(char *, void, uint64_t, int *))(v487 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v449(v505, 0, 1, v357);
          goto LABEL_206;
        }
        sub_1C0AF9C38(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
        memcpy(v304, v305, *(void *)(*(void *)(v358 - 8) + 64));
        uint64_t v11 = v524;
        uint64_t v15 = a3;
        goto LABEL_235;
      case 3u:
        v515 = v9;
        uint64_t v364 = *((void *)v305 + 1);
        *(void *)uint64_t v304 = *(void *)v305;
        *((void *)v304 + 1) = v364;
        v304[16] = v305[16];
        uint64_t v365 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v366 = v365[6];
        uint64_t v367 = &v304[v366];
        uint64_t v368 = &v305[v366];
        uint64_t v369 = type metadata accessor for PuzzleStreak();
        uint64_t v488 = *(void *)(v369 - 8);
        uint64_t v370 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v488 + 48);
        if (v370(v368, 1, v369))
        {
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v367, v368, *(void *)(*(void *)(v371 - 8) + 64));
        }
        else
        {
          uint64_t v406 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v406 - 8) + 16))(v367, v368, v406);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v488 + 56))(v367, 0, 1, v369);
        }
        uint64_t v407 = v365[7];
        uint64_t v408 = &v505[v407];
        uint64_t v409 = &v305[v407];
        if (v370(&v305[v407], 1, v369))
        {
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v408, v409, *(void *)(*(void *)(v410 - 8) + 64));
        }
        else
        {
          uint64_t v427 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v427 - 8) + 16))(v408, v409, v427);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v488 + 56))(v408, 0, 1, v369);
        }
        uint64_t v428 = v365[8];
        uint64_t v429 = &v505[v428];
        uint64_t v430 = &v305[v428];
        long long v431 = *((_OWORD *)v430 + 1);
        *(_OWORD *)uint64_t v429 = *(_OWORD *)v430;
        *((_OWORD *)v429 + 1) = v431;
        *(_OWORD *)(v429 + 25) = *(_OWORD *)(v430 + 25);
        uint64_t v432 = v365[9];
        uint64_t v433 = &v505[v432];
        v434 = &v305[v432];
        *(_OWORD *)(v433 + 25) = *(_OWORD *)(v434 + 25);
        long long v435 = *((_OWORD *)v434 + 1);
        *(_OWORD *)uint64_t v433 = *(_OWORD *)v434;
        *((_OWORD *)v433 + 1) = v435;
        uint64_t v436 = v365[10];
        uint64_t v437 = &v505[v436];
        uint64_t v438 = &v305[v436];
        long long v439 = *((_OWORD *)v438 + 1);
        *(_OWORD *)uint64_t v437 = *(_OWORD *)v438;
        *((_OWORD *)v437 + 1) = v439;
        *(_OWORD *)(v437 + 25) = *(_OWORD *)(v438 + 25);
LABEL_206:
        long long v9 = v515;
        goto LABEL_207;
      default:
        uint64_t v306 = type metadata accessor for PuzzleStatisticValue(0);
        int v307 = swift_getEnumCaseMultiPayload();
        if (v307 == 5)
        {
          uint64_t v308 = type metadata accessor for PuzzleStreak();
          uint64_t v309 = *(void *)(v308 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v309 + 48))(v305, 1, v308))
          {
LABEL_132:
            sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v304, v305, *(void *)(*(void *)(v310 - 8) + 64));
            goto LABEL_209;
          }
        }
        else
        {
          if (v307 != 4)
          {
            memcpy(v304, v305, *(void *)(*(void *)(v306 - 8) + 64));
            goto LABEL_207;
          }
          uint64_t v308 = type metadata accessor for PuzzleStreak();
          uint64_t v309 = *(void *)(v308 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v309 + 48))(v305, 1, v308)) {
            goto LABEL_132;
          }
        }
        uint64_t v450 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v450 - 8) + 16))(v304, v305, v450);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v309 + 56))(v304, 0, 1, v308);
LABEL_209:
        swift_storeEnumTagMultiPayload();
LABEL_207:
        uint64_t v11 = v524;
        uint64_t v15 = a3;
        goto LABEL_235;
    }
  }
  sub_1C0AF9C38(0, &qword_1EA1A1FC0, type metadata accessor for FormatInspectionItem.Value, MEMORY[0x1E4FBB718]);
  memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  uint64_t v15 = a3;
LABEL_44:
  uint64_t v86 = *(int *)(v15 + 28);
  uint64_t v87 = (char *)v4 + v86;
  long long v88 = (char *)a2 + v86;
  int v89 = v88[16];
  if (v89 == 255)
  {
    *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
    v87[16] = v88[16];
  }
  else
  {
    char v90 = v89 & 1;
    uint64_t v91 = *(void *)v88;
    uint64_t v92 = *((void *)v88 + 1);
    sub_1C09C8BD8();
    *(void *)uint64_t v87 = v91;
    *((void *)v87 + 1) = v92;
    v87[16] = v90;
  }
  return v4;
}

void sub_1C0B0B470(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for FormatInspectionItem.Value(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 0xDu:
      case 0x1Cu:
LABEL_68:
        swift_bridgeObjectRelease();
        break;
      case 3u:
      case 4u:
      case 0xFu:
      case 0x16u:
      case 0x19u:
      case 0x1Bu:
      case 0x1Du:
      case 0x1Eu:
        goto LABEL_12;
      case 5u:
      case 0xAu:
        swift_release();
LABEL_12:
        swift_release();
        break;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v4 + 48)) {
          goto LABEL_8;
        }
        break;
      case 7u:
      case 0xEu:
      case 0x17u:
LABEL_8:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 8u:
        sub_1BFF7C0EC(*(void *)v4);
        break;
      case 9u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C03596EC(*(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72), *(unsigned char *)(v4 + 80));
        sub_1C03596EC(*(void *)(v4 + 88), *(void *)(v4 + 96), *(void *)(v4 + 104), *(void *)(v4 + 112), *(void *)(v4 + 120), *(void *)(v4 + 128), *(void *)(v4 + 136), *(void *)(v4 + 144), *(unsigned char *)(v4 + 152));
        break;
      case 0xCu:
        uint64_t v6 = sub_1C1515FDC();
        goto LABEL_31;
      case 0x10u:
        __swift_destroy_boxed_opaque_existential_1(v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v4 + 64))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      case 0x11u:
        type metadata accessor for FeedGroupItem();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            swift_unknownObjectRelease();
            goto LABEL_27;
          case 1u:

            swift_bridgeObjectRelease();
            if (*(void *)(v4 + 80) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (*(void *)(v4 + 128) >= 0x11uLL) {
              goto LABEL_68;
            }
            goto LABEL_2;
          case 2u:
LABEL_128:
            swift_bridgeObjectRelease();
            goto LABEL_68;
          case 3u:
            swift_bridgeObjectRelease();
            uint64_t v25 = type metadata accessor for FeedWeather(0);
            uint64_t v26 = v4 + *(int *)(v25 + 28);
            uint64_t v27 = sub_1C151E2BC();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
            uint64_t v28 = v4 + *(int *)(v25 + 36);
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
            uint64_t v30 = v29;
            long long v31 = *(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8);
            v31(v28, v29);
            long long v32 = (int *)type metadata accessor for FeedWeather.Temperature(0);
            v31(v28 + v32[5], v30);
            v31(v28 + v32[6], v30);
            v31(v28 + v32[7], v30);
            goto LABEL_68;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v4 + 240) >= 0x11uLL) {
              goto LABEL_68;
            }
            goto LABEL_2;
          case 5u:
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            long long v33 = (int *)type metadata accessor for FeedHeadline(0);
            uint64_t v34 = v4 + v33[10];
            uint64_t v35 = v34 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
            uint64_t v36 = type metadata accessor for SharedItem();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v35, 1, v36))
            {
              uint64_t v37 = sub_1C151631C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v35, v37);

              uint64_t v38 = v35 + *(int *)(v36 + 28);
              uint64_t v39 = sub_1C1515FDC();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
            }
            uint64_t v40 = v4 + v33[11];
            uint64_t v41 = sub_1C151D2DC();
            uint64_t v42 = *(void *)(v41 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41)) {
              (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
            }
            if (*(void *)(v4 + v33[12] + 8) >= 0x11uLL) {
              swift_bridgeObjectRelease();
            }
            if (*(void *)(v4 + v33[13]) >= 3uLL) {
              swift_unknownObjectRelease();
            }

            goto LABEL_2;
          case 6u:
            if (*(void *)(v4 + 32) >= 0x11uLL) {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            uint64_t v43 = (int *)type metadata accessor for FeedWebEmbed();
            uint64_t v44 = v4 + v43[8];
            uint64_t v45 = sub_1C1515FDC();
            uint64_t v46 = *(void *)(v45 - 8);
            uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
            v47(v44, v45);
            uint64_t v48 = v4 + v43[9];
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v48, 1, v45)) {
              v47(v48, v45);
            }
            swift_release();
            swift_release();
            uint64_t v49 = v4 + v43[12];
            uint64_t v50 = (int *)type metadata accessor for FeedHeadline(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v50 - 1) + 48))(v49, 1, v50))
            {
              uint64_t v83 = v47;
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              uint64_t v51 = v50[10];
              uint64_t v52 = v49 + v51 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
              uint64_t v53 = type metadata accessor for SharedItem();
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v52, 1, v53))
              {
                uint64_t v54 = sub_1C151631C();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v52, v54);

                v83(v52 + *(int *)(v53 + 28), v45);
              }
              uint64_t v82 = v45;
              uint64_t v55 = v49 + v50[11];
              uint64_t v56 = sub_1C151D2DC();
              uint64_t v57 = *(void *)(v56 - 8);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56)) {
                (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v55, v56);
              }
              if (*(void *)(v49 + v50[12] + 8) >= 0x11uLL) {
                swift_bridgeObjectRelease();
              }
              uint64_t v45 = v82;
              uint64_t v47 = v83;
              if (*(void *)(v49 + v50[13]) >= 3uLL) {
                swift_unknownObjectRelease();
              }
            }
            uint64_t v58 = v4 + v43[13];
            uint64_t v59 = type metadata accessor for WebEmbedDataVisualization();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48))(v58, 1, v59))
            {
              goto LABEL_2;
            }
            if (swift_getEnumCaseMultiPayload() != 1) {
              goto LABEL_12;
            }
            swift_bridgeObjectRelease();
            uint64_t v60 = type metadata accessor for GenericDataVisualization();
            v47(v58 + *(int *)(v60 + 20), v45);
            swift_bridgeObjectRelease();
            break;
          case 7u:
            goto LABEL_32;
          case 8u:
            goto LABEL_106;
          case 9u:
            if (*(void *)(v4 + 32) >= 0x11uLL) {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();

            swift_bridgeObjectRelease();
            if (*(void *)(v4 + 112)) {
              __swift_destroy_boxed_opaque_existential_1(v4 + 88);
            }
            if (*(void *)(v4 + 152)) {
              __swift_destroy_boxed_opaque_existential_1(v4 + 128);
            }
            if (*(void *)(v4 + 192)) {
              __swift_destroy_boxed_opaque_existential_1(v4 + 168);
            }
            goto LABEL_2;
          case 0xAu:
            if (*(void *)(v4 + 32) >= 0x11uLL) {
              swift_bridgeObjectRelease();
            }
LABEL_106:
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            goto LABEL_2;
          case 0xBu:
            if (*(void *)(v4 + 32) >= 0x11uLL) {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            uint64_t v61 = v4 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
            swift_unknownObjectRelease();
            uint64_t v4 = v61 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
            type metadata accessor for PuzzleStatisticCategory(0);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                type metadata accessor for PuzzleStatisticValue(0);
                goto LABEL_121;
              case 1u:
                type metadata accessor for PuzzleStatisticValue(0);
                int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
                {
                  uint64_t v63 = type metadata accessor for PuzzleStreak();
                  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48))(v4, 1, v63))
                  {
                    uint64_t v64 = sub_1C151555C();
                    (*(void (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 8))(v4, v64);
                  }
                }
                uint64_t v65 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
                uint64_t v66 = v4 + *(int *)(v65 + 20);
                int v67 = swift_getEnumCaseMultiPayload();
                if (v67 == 5 || v67 == 4)
                {
                  uint64_t v68 = type metadata accessor for PuzzleStreak();
                  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 48))(v66, 1, v68))
                  {
                    uint64_t v69 = sub_1C151555C();
                    (*(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8))(v66, v69);
                  }
                }
                v4 += *(int *)(v65 + 24);
LABEL_121:
                int v70 = swift_getEnumCaseMultiPayload();
                if (v70 == 5 || v70 == 4)
                {
                  uint64_t v71 = type metadata accessor for PuzzleStreak();
                  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 48))(v4, 1, v71))goto LABEL_132; {
                }
                  }
                goto LABEL_2;
              case 2u:
                uint64_t v72 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 48))(v4, 1, v72))
                {
                  goto LABEL_2;
                }
                uint64_t v73 = sub_1C151631C();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v73 - 8) + 8))(v4, v73);
                uint64_t v74 = type metadata accessor for PuzzleLeaderboardEntry();
                swift_bridgeObjectRelease();
                uint64_t v75 = v4 + *(int *)(v74 + 24);
                swift_bridgeObjectRelease();
                unint64_t v76 = *(void *)(v75 + 24);
                if (v76 >> 60 != 15) {
                  sub_1BFE95664(*(void *)(v75 + 16), v76);
                }
                goto LABEL_128;
              case 3u:
                uint64_t v77 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
                uint64_t v78 = v4 + *(int *)(v77 + 24);
                uint64_t v79 = type metadata accessor for PuzzleStreak();
                uint64_t v80 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 48);
                if (!v80(v78, 1, v79))
                {
                  uint64_t v81 = sub_1C151555C();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v78, v81);
                }
                v4 += *(int *)(v77 + 28);
                if (v80(v4, 1, v79)) {
                  goto LABEL_2;
                }
LABEL_132:
                uint64_t v6 = sub_1C151555C();
                break;
              default:
                goto LABEL_2;
            }
            goto LABEL_31;
          case 0xCu:
            swift_bridgeObjectRelease();
            v4 += *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
            uint64_t v6 = sub_1C151D6DC();
            goto LABEL_31;
          default:
            goto LABEL_2;
        }
        break;
      case 0x12u:
        __swift_destroy_boxed_opaque_existential_1(v4);
        break;
      case 0x13u:
        swift_release();
        if (*(void *)(v4 + 8) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int v7 = *(unsigned __int8 *)(v4 + 80);
          if (v7 != 255) {
            sub_1BFE94AD4(*(void *)(v4 + 64), *(void *)(v4 + 72), v7 & 1);
          }
          int v8 = *(unsigned __int8 *)(v4 + 120);
          if (v8 != 255) {
            sub_1C00F670C(*(void *)(v4 + 88), *(void *)(v4 + 96), *(void *)(v4 + 104), *(void *)(v4 + 112), v8 & 1);
          }
          int v9 = *(unsigned __int8 *)(v4 + 144);
          if (v9 != 255) {
            sub_1BFE94AD4(*(void *)(v4 + 128), *(void *)(v4 + 136), v9 & 1);
          }
        }
        break;
      case 0x14u:

LABEL_27:
        break;
      case 0x18u:
        type metadata accessor for FormatPropertyDefinition(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v10 = &qword_1EB88E9C8;
            goto LABEL_41;
          case 1u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((~*(void *)(v4 + 72) & 0xF000000000000007) != 0) {
              swift_release();
            }
            swift_bridgeObjectRelease();
            uint64_t v11 = &qword_1EB88E9B8;
            uint64_t v12 = sub_1C003F2E8;
            goto LABEL_58;
          case 2u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BFF71B30();
            uint64_t v14 = v13;
            uint64_t v15 = v4 + *(int *)(v13 + 52);
            uint64_t v16 = sub_1C151631C();
            goto LABEL_43;
          case 3u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v17 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
            goto LABEL_60;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v11 = &qword_1EB88E990;
            uint64_t v12 = sub_1C0092008;
            goto LABEL_58;
          case 5u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v10 = &qword_1EB88E9D0;
            goto LABEL_41;
          case 6u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v10 = &qword_1EB88E9C0;
LABEL_41:
            sub_1BFF71924(0, v10);
            goto LABEL_59;
          case 7u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BFF719C0();
            uint64_t v14 = v19;
            uint64_t v15 = v4 + *(int *)(v19 + 52);
            uint64_t v16 = sub_1C1515FDC();
LABEL_43:
            uint64_t v20 = v16;
            uint64_t v21 = *(void *)(v16 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v15, 1, v16)) {
              (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v15, v20);
            }
            swift_bridgeObjectRelease();
            uint64_t v17 = *(int *)(v14 + 64);
            goto LABEL_60;
          case 8u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((~*(void *)(v4 + 72) & 0xF000000000000007) != 0) {
              swift_release();
            }
            swift_bridgeObjectRelease();
            uint64_t v11 = &qword_1EB88E9A0;
            uint64_t v12 = sub_1C0036630;
            goto LABEL_58;
          case 9u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((~*(void *)(v4 + 72) & 0xF000000000000007) != 0) {
              swift_release();
            }
            swift_bridgeObjectRelease();
            uint64_t v11 = &qword_1EB88E998;
            uint64_t v12 = sub_1C00738F0;
            goto LABEL_58;
          case 0xAu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((~*(void *)(v4 + 72) & 0xF000000000000007) != 0) {
              swift_release();
            }
            swift_bridgeObjectRelease();
            uint64_t v11 = &qword_1EB88E9B0;
            uint64_t v12 = sub_1C0084C58;
            goto LABEL_58;
          case 0xBu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((~*(void *)(v4 + 72) & 0xF000000000000007) != 0) {
              swift_release();
            }
            swift_bridgeObjectRelease();
            uint64_t v11 = &qword_1EB88E9A8;
            uint64_t v12 = sub_1C006F9DC;
LABEL_58:
            sub_1C0AF9C9C(0, v11, (void (*)(void))v12);
LABEL_59:
            uint64_t v17 = *(int *)(v18 + 64);
LABEL_60:
            uint64_t v22 = v4 + v17;
            uint64_t v23 = sub_1C1518CDC();
            uint64_t v24 = *(void *)(v23 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23)) {
              (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
            }
            break;
          default:
            goto LABEL_2;
        }
        break;
      case 0x1Au:
        uint64_t v6 = sub_1C151CA7C();
LABEL_31:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
        break;
      case 0x1Fu:
LABEL_32:

        break;
      default:
        break;
    }
  }
LABEL_2:
  if (*(unsigned __int8 *)(a1 + *(int *)(a2 + 28) + 16) != 255)
  {
    sub_1C02F6038();
  }
}

void *sub_1C0B0CA44(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  int v8 = (void *)((char *)a1 + v7);
  int v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for FormatInspectionItem.Value(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1C0AF9C38(0, &qword_1EA1A1FC0, type metadata accessor for FormatInspectionItem.Value, MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    uint64_t v14 = a3;
    goto LABEL_41;
  }
  uint64_t v530 = v11;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
      uint64_t v15 = v9[1];
      *int v8 = *v9;
      v8[1] = v15;
      swift_bridgeObjectRetain();
      goto LABEL_38;
    case 3u:
    case 0xFu:
      uint64_t v52 = v9[1];
      *int v8 = *v9;
      v8[1] = v52;
      swift_retain();
      goto LABEL_38;
    case 4u:
    case 0x16u:
    case 0x19u:
    case 0x1Bu:
    case 0x1Du:
    case 0x1Eu:
      *int v8 = *v9;
      swift_retain();
      goto LABEL_38;
    case 5u:
      uint64_t v16 = v9[1];
      *int v8 = *v9;
      v8[1] = v16;
      swift_retain();
      swift_retain();
      goto LABEL_38;
    case 6u:
      uint64_t v17 = v9[1];
      *int v8 = *v9;
      v8[1] = v17;
      long long v18 = *((_OWORD *)v9 + 2);
      *((_OWORD *)v8 + 1) = *((_OWORD *)v9 + 1);
      *((_OWORD *)v8 + 2) = v18;
      uint64_t v19 = v9[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v19)
      {
        uint64_t v20 = v9[7];
        v8[6] = v19;
        v8[7] = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)v8 + 3) = *((_OWORD *)v9 + 3);
      }
      goto LABEL_38;
    case 7u:
      long long v21 = *((_OWORD *)v9 + 1);
      *(_OWORD *)int v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v21;
      *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
      *((unsigned char *)v8 + 48) = *((unsigned char *)v9 + 48);
      *(_OWORD *)(v8 + 7) = *(_OWORD *)(v9 + 7);
      *(_OWORD *)(v8 + 9) = *(_OWORD *)(v9 + 9);
      *(_OWORD *)(v8 + 11) = *(_OWORD *)(v9 + 11);
      *((unsigned char *)v8 + 104) = *((unsigned char *)v9 + 104);
      uint64_t v22 = v9[15];
      v8[14] = v9[14];
      v8[15] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    case 8u:
      uint64_t v53 = *v9;
      sub_1BFF7B774(*v9);
      *int v8 = v53;
      goto LABEL_38;
    case 9u:
      uint64_t v54 = v9[1];
      *int v8 = *v9;
      v8[1] = v54;
      uint64_t v56 = v9[2];
      uint64_t v55 = v9[3];
      uint64_t v521 = v10;
      uint64_t v57 = v9[5];
      uint64_t v58 = v9[7];
      __dstf = (void *)v9[6];
      uint64_t v510 = v9[4];
      uint64_t v512 = v9[8];
      v495 = (void *)v9[9];
      char v59 = *((unsigned char *)v9 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C03A98B4(v56, v55, v510, v57, (uint64_t)__dstf, v58, v512, (uint64_t)v495, v59);
      v8[2] = v56;
      v8[3] = v55;
      v8[4] = v510;
      v8[5] = v57;
      v8[6] = __dstf;
      v8[7] = v58;
      v8[8] = v512;
      v8[9] = v495;
      *((unsigned char *)v8 + 80) = v59;
      uint64_t v60 = v9[11];
      uint64_t v61 = v9[12];
      uint64_t v62 = v9[13];
      uint64_t v64 = v9[15];
      uint64_t v63 = v9[16];
      uint64_t v66 = v9[17];
      uint64_t v65 = v9[18];
      uint64_t v511 = v65;
      uint64_t v513 = v9[14];
      char v67 = *((unsigned char *)v9 + 152);
      sub_1C03A98B4(v60, v61, v62, v513, v64, v63, v66, v65, v67);
      v8[11] = v60;
      v8[12] = v61;
      v8[13] = v62;
      v8[14] = v513;
      v8[15] = v64;
      v8[16] = v63;
      uint64_t v14 = a3;
      v8[17] = v66;
      uint64_t v10 = v521;
      v8[18] = v511;
      *((unsigned char *)v8 + 152) = v67;
      swift_storeEnumTagMultiPayload();
      uint64_t v24 = v530;
      goto LABEL_40;
    case 0xAu:
      uint64_t v23 = v9[1];
      *int v8 = *v9;
      v8[1] = v23;
      swift_retain();
      swift_retain();
      goto LABEL_38;
    case 0xCu:
      uint64_t v25 = sub_1C1515FDC();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v8, v9, v25);
      goto LABEL_38;
    case 0xDu:
      long long v26 = *((_OWORD *)v9 + 1);
      *(_OWORD *)int v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v26;
      uint64_t v27 = v9[5];
      v8[4] = v9[4];
      v8[5] = v27;
      *((unsigned char *)v8 + 48) = *((unsigned char *)v9 + 48);
      swift_bridgeObjectRetain();
      goto LABEL_38;
    case 0xEu:
      uint64_t v28 = v9[1];
      *int v8 = *v9;
      v8[1] = v28;
      v8[2] = v9[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    case 0x10u:
      long long v68 = *(_OWORD *)(v9 + 3);
      *(_OWORD *)(v8 + 3) = v68;
      (**(void (***)(void *, void *))(v68 - 8))(v8, v9);
      uint64_t v69 = v9[6];
      v8[5] = v9[5];
      v8[6] = v69;
      uint64_t v70 = v9[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v70)
      {
        v8[7] = v9[7];
        v8[8] = v70;
        uint64_t v71 = v9[10];
        v8[9] = v9[9];
        v8[10] = v71;
        uint64_t v72 = v10;
        uint64_t v73 = v9[12];
        v8[11] = v9[11];
        v8[12] = v73;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v10 = v72;
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v82 = *(_OWORD *)(v9 + 9);
        *(_OWORD *)(v8 + 7) = *(_OWORD *)(v9 + 7);
        *(_OWORD *)(v8 + 9) = v82;
        *(_OWORD *)(v8 + 11) = *(_OWORD *)(v9 + 11);
      }
      *((unsigned char *)v8 + 104) = *((unsigned char *)v9 + 104);
      goto LABEL_38;
    case 0x11u:
      type metadata accessor for FeedGroupItem();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v200 = (void *)*v9;
          uint64_t v201 = v9[1];
          *int v8 = *v9;
          v8[1] = v201;
          v8[2] = v9[2];
          *((_WORD *)v8 + 12) = *((_WORD *)v9 + 12);
          v8[4] = v9[4];
          *((unsigned char *)v8 + 40) = *((unsigned char *)v9 + 40);
          uint64_t v202 = (void *)v9[7];
          v8[6] = v9[6];
          v8[7] = v202;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          uint64_t v203 = v9[10];
          id v204 = v200;
          swift_bridgeObjectRetain();
          id v205 = v202;
          if (v203 == 1)
          {
            long long v206 = *(_OWORD *)(v9 + 11);
            *(_OWORD *)(v8 + 9) = *(_OWORD *)(v9 + 9);
            *(_OWORD *)(v8 + 11) = v206;
            *(_OWORD *)(v8 + 13) = *(_OWORD *)(v9 + 13);
          }
          else
          {
            v8[9] = v9[9];
            v8[10] = v203;
            uint64_t v272 = v9[12];
            v8[11] = v9[11];
            v8[12] = v272;
            uint64_t v274 = (void *)v9[13];
            uint64_t v273 = v9[14];
            v8[13] = v274;
            v8[14] = v273;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v275 = v274;
          }
          uint64_t v24 = v11;
          uint64_t v276 = v9 + 15;
          unint64_t v277 = v9[16];
          if (v277 >= 0x11)
          {
            v8[15] = *v276;
            v8[16] = v277;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v8 + 15) = *(_OWORD *)v276;
          }
          *((unsigned char *)v8 + 136) = *((unsigned char *)v9 + 136);
          goto LABEL_232;
        case 2u:
          uint64_t v207 = v9[1];
          *int v8 = *v9;
          v8[1] = v207;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_231;
        case 3u:
          *(_OWORD *)int v8 = *(_OWORD *)v9;
          uint64_t v208 = v9[3];
          v8[2] = v9[2];
          v8[3] = v208;
          *((unsigned char *)v8 + 32) = *((unsigned char *)v9 + 32);
          long long v209 = (int *)type metadata accessor for FeedWeather(0);
          uint64_t v210 = v209[7];
          uint64_t v211 = (char *)v8 + v210;
          uint64_t v523 = v10;
          uint64_t v212 = (char *)v9 + v210;
          uint64_t v213 = sub_1C151E2BC();
          uint64_t v516 = v8;
          uint64_t v214 = *(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 16);
          swift_bridgeObjectRetain();
          v214(v211, v212, v213);
          *((unsigned char *)v516 + v209[8]) = *((unsigned char *)v9 + v209[8]);
          uint64_t v215 = v209[9];
          uint64_t v216 = (char *)v516 + v215;
          uint64_t v217 = (char *)v9 + v215;
          sub_1C0AF9C38(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
          uint64_t v219 = v218;
          uint64_t v220 = *(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 16);
          v220(v216, v217, v218);
          uint64_t v221 = (int *)type metadata accessor for FeedWeather.Temperature(0);
          v220(&v216[v221[5]], &v217[v221[5]], v219);
          v220(&v216[v221[6]], &v217[v221[6]], v219);
          uint64_t v222 = v219;
          uint64_t v10 = v523;
          v220(&v216[v221[7]], &v217[v221[7]], v222);
          int v8 = v516;
          uint64_t v223 = v209[10];
          uint64_t v224 = (void *)((char *)v516 + v223);
          uint64_t v225 = (void *)((char *)v9 + v223);
          uint64_t v226 = v225[1];
          *uint64_t v224 = *v225;
          v224[1] = v226;
          swift_bridgeObjectRetain();
          goto LABEL_231;
        case 4u:
          uint64_t v524 = v10;
          uint64_t v227 = v9[1];
          *int v8 = *v9;
          v8[1] = v227;
          uint64_t v228 = v9[3];
          v8[2] = v9[2];
          v8[3] = v228;
          uint64_t v229 = v9[5];
          v8[4] = v9[4];
          v8[5] = v229;
          *((_WORD *)v8 + 24) = *((_WORD *)v9 + 24);
          *(_OWORD *)(v8 + 7) = *(_OWORD *)(v9 + 7);
          uint64_t v230 = v9[10];
          v8[9] = v9[9];
          v8[10] = v230;
          uint64_t v231 = v9[12];
          v8[11] = v9[11];
          v8[12] = v231;
          v8[13] = v9[13];
          *((unsigned char *)v8 + 112) = *((unsigned char *)v9 + 112);
          uint64_t v232 = v9[16];
          v8[15] = v9[15];
          v8[16] = v232;
          *((unsigned char *)v8 + 136) = *((unsigned char *)v9 + 136);
          uint64_t v233 = v9[19];
          v8[18] = v9[18];
          v8[19] = v233;
          uint64_t v234 = v9[21];
          v8[20] = v9[20];
          v8[21] = v234;
          *((unsigned char *)v8 + 184) = *((unsigned char *)v9 + 184);
          v8[22] = v9[22];
          uint64_t v235 = v9[25];
          v8[24] = v9[24];
          v8[25] = v235;
          *((unsigned char *)v8 + 224) = *((unsigned char *)v9 + 224);
          uint64_t v236 = v9[27];
          v8[26] = v9[26];
          v8[27] = v236;
          uint64_t v481 = v9 + 29;
          unint64_t v237 = v9[30];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v237 >= 0x11)
          {
            v8[29] = *v481;
            v8[30] = v237;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v8 + 29) = *(_OWORD *)v481;
          }
          uint64_t v10 = v524;
          uint64_t v24 = v530;
          goto LABEL_232;
        case 5u:
          uint64_t v525 = v10;
          uint64_t v238 = v9[1];
          *int v8 = *v9;
          v8[1] = v238;
          v8[2] = v9[2];
          *((unsigned char *)v8 + 24) = *((unsigned char *)v9 + 24);
          uint64_t v239 = v9[5];
          v8[4] = v9[4];
          v8[5] = v239;
          v8[6] = v9[6];
          *((unsigned char *)v8 + 56) = *((unsigned char *)v9 + 56);
          __dstc = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v240 = __dstc[10];
          uint64_t v517 = v8;
          uint64_t v241 = (char *)v8 + v240;
          uint64_t v242 = (char *)v9 + v240;
          *uint64_t v241 = *((unsigned char *)v9 + v240);
          v241[1] = *((unsigned char *)v9 + v240 + 1);
          v497 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v243 = v497[6];
          v482 = &v241[v243];
          unint64_t v244 = &v242[v243];
          uint64_t v245 = (int *)type metadata accessor for SharedItem();
          uint64_t v479 = *((void *)v245 - 1);
          uint64_t v246 = *(unsigned int (**)(char *, uint64_t, int *))(v479 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v246(v244, 1, v245))
          {
            uint64_t v247 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v482, v244, *(void *)(*(void *)(v247 - 8) + 64));
          }
          else
          {
            uint64_t v306 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v306 - 8) + 16))(v482, v244, v306);
            v482[v245[5]] = v244[v245[5]];
            uint64_t v307 = v245[6];
            uint64_t v308 = *(void **)&v244[v307];
            *(void *)&v482[v307] = v308;
            uint64_t v309 = v245[7];
            uint64_t v487 = &v244[v309];
            uint64_t v492 = &v482[v309];
            uint64_t v310 = sub_1C1515FDC();
            v476 = *(void (**)(char *, char *, uint64_t))(*(void *)(v310 - 8) + 16);
            id v311 = v308;
            v476(v492, v487, v310);
            (*(void (**)(char *, void, uint64_t, int *))(v479 + 56))(v482, 0, 1, v245);
          }
          v241[v497[7]] = v242[v497[7]];
          v241[v497[8]] = v242[v497[8]];
          v241[v497[9]] = v242[v497[9]];
          v241[v497[10]] = v242[v497[10]];
          uint64_t v312 = __dstc[11];
          uint64_t v313 = (char *)v517 + v312;
          uint64_t v314 = (char *)v9 + v312;
          uint64_t v315 = sub_1C151D2DC();
          uint64_t v316 = *(void *)(v315 - 8);
          uint64_t v10 = v525;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v316 + 48))(v314, 1, v315))
          {
            sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
            memcpy(v313, v314, *(void *)(*(void *)(v317 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v316 + 16))(v313, v314, v315);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v316 + 56))(v313, 0, 1, v315);
          }
          uint64_t v329 = __dstc[12];
          int v8 = v517;
          long long v330 = (void *)((char *)v517 + v329);
          unint64_t v331 = (void *)((char *)v9 + v329);
          unint64_t v332 = v331[1];
          uint64_t v24 = v530;
          if (v332 >= 0x11)
          {
            void *v330 = *v331;
            v330[1] = v332;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)long long v330 = *(_OWORD *)v331;
          }
          uint64_t v333 = __dstc[13];
          unint64_t v334 = *(void *)((char *)v9 + v333);
          if (v334 >= 2)
          {
            if (v334 == 2)
            {
              *(void *)((char *)v517 + v333) = 2;
            }
            else
            {
              *(void *)((char *)v517 + v333) = v334;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)v517 + v333) = v334;
          }
          uint64_t v369 = __dstc[14];
          uint64_t v370 = *(void **)((char *)v9 + v369);
          *(void *)((char *)v517 + v369) = v370;
          id v371 = v370;
          goto LABEL_232;
        case 6u:
          uint64_t v248 = v9[1];
          *int v8 = *v9;
          v8[1] = v248;
          *((unsigned char *)v8 + 16) = *((unsigned char *)v9 + 16);
          uint64_t v249 = v9 + 3;
          unint64_t v250 = v9[4];
          uint64_t v526 = v10;
          if (v250 >= 0x11)
          {
            v8[3] = *v249;
            v8[4] = v250;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v8 + 3) = *(_OWORD *)v249;
          }
          uint64_t v278 = v9[6];
          v8[5] = v9[5];
          v8[6] = v278;
          uint64_t v279 = type metadata accessor for FeedWebEmbed();
          uint64_t v280 = *(int *)(v279 + 32);
          uint64_t v498 = (char *)v9 + v280;
          __dsth = (char *)v8 + v280;
          uint64_t v281 = sub_1C1515FDC();
          uint64_t v282 = *(void *)(v281 - 8);
          uint64_t v283 = *(void (**)(char *, char *, uint64_t))(v282 + 16);
          swift_bridgeObjectRetain();
          v483 = v283;
          v283(__dsth, v498, v281);
          __dstd = (int *)v279;
          uint64_t v284 = *(int *)(v279 + 36);
          uint64_t v518 = v8;
          uint64_t v285 = (char *)v8 + v284;
          uint64_t v286 = (char *)v9 + v284;
          uint64_t v491 = v281;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v282 + 48))((char *)v9 + v284, 1, v281))
          {
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
            memcpy(v285, v286, *(void *)(*(void *)(v287 - 8) + 64));
          }
          else
          {
            v283(v285, v286, v281);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v282 + 56))(v285, 0, 1, v281);
          }
          *(void *)((char *)v8 + __dstd[10]) = *(void *)((char *)v9 + __dstd[10]);
          *(void *)((char *)v8 + __dstd[11]) = *(void *)((char *)v9 + __dstd[11]);
          uint64_t v318 = __dstd[12];
          uint64_t v319 = (void *)((char *)v8 + v318);
          v499 = (void *)((char *)v9 + v318);
          uint64_t v320 = type metadata accessor for FeedHeadline(0);
          uint64_t v321 = *(void *)(v320 - 8);
          uint64_t v322 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v321 + 48);
          swift_retain();
          swift_retain();
          if (v322(v499, 1, v320))
          {
            sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
            memcpy(v319, v499, *(void *)(*(void *)(v323 - 8) + 64));
          }
          else
          {
            uint64_t v335 = v499[1];
            *uint64_t v319 = *v499;
            v319[1] = v335;
            v319[2] = v499[2];
            *((unsigned char *)v319 + 24) = *((unsigned char *)v499 + 24);
            uint64_t v473 = v321;
            uint64_t v474 = v499[5];
            v319[4] = v499[4];
            v319[5] = v474;
            v319[6] = v499[6];
            *((unsigned char *)v319 + 56) = *((unsigned char *)v499 + 56);
            v477 = v319;
            v480 = (int *)v320;
            uint64_t v336 = *(int *)(v320 + 40);
            uint64_t v337 = (char *)v319 + v336;
            unint64_t v338 = (char *)v499 + v336;
            *uint64_t v337 = *((unsigned char *)v499 + v336);
            v337[1] = *((unsigned char *)v499 + v336 + 1);
            uint64_t v475 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v339 = v475[6];
            unint64_t v340 = &v337[v339];
            uint64_t v341 = &v338[v339];
            uint64_t v342 = (int *)type metadata accessor for SharedItem();
            uint64_t v472 = *((void *)v342 - 1);
            uint64_t v343 = *(unsigned int (**)(char *, uint64_t, int *))(v472 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v343(v341, 1, v342))
            {
              uint64_t v344 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v340, v341, *(void *)(*(void *)(v344 - 8) + 64));
            }
            else
            {
              uint64_t v372 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v372 - 8) + 16))(v340, v341, v372);
              v340[v342[5]] = v341[v342[5]];
              uint64_t v373 = v342[6];
              id v374 = *(void **)&v341[v373];
              *(void *)&v340[v373] = v374;
              uint64_t v375 = v342[7];
              uint64_t v376 = &v340[v375];
              uint64_t v377 = &v341[v375];
              id v378 = v374;
              v483(v376, v377, v491);
              (*(void (**)(char *, void, uint64_t, int *))(v472 + 56))(v340, 0, 1, v342);
            }
            v337[v475[7]] = v338[v475[7]];
            v337[v475[8]] = v338[v475[8]];
            v337[v475[9]] = v338[v475[9]];
            v337[v475[10]] = v338[v475[10]];
            uint64_t v379 = v480[11];
            v380 = (char *)v477 + v379;
            id v381 = (char *)v499 + v379;
            uint64_t v382 = sub_1C151D2DC();
            uint64_t v383 = *(void *)(v382 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v383 + 48))(v381, 1, v382))
            {
              sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
              memcpy(v380, v381, *(void *)(*(void *)(v384 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v383 + 16))(v380, v381, v382);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v383 + 56))(v380, 0, 1, v382);
            }
            uint64_t v385 = v480[12];
            uint64_t v386 = (void *)((char *)v477 + v385);
            uint64_t v387 = (void *)((char *)v499 + v385);
            unint64_t v388 = v387[1];
            if (v388 >= 0x11)
            {
              void *v386 = *v387;
              v386[1] = v388;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)uint64_t v386 = *(_OWORD *)v387;
            }
            uint64_t v389 = v480[13];
            unint64_t v390 = *(void *)((char *)v499 + v389);
            if (v390 >= 2)
            {
              if (v390 == 2)
              {
                *(void *)((char *)v477 + v389) = 2;
              }
              else
              {
                *(void *)((char *)v477 + v389) = v390;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(void *)((char *)v477 + v389) = v390;
            }
            uint64_t v408 = v480[14];
            uint64_t v409 = *(void **)((char *)v499 + v408);
            *(void *)((char *)v477 + v408) = v409;
            uint64_t v410 = *(void (**)(void *, void, uint64_t, int *))(v473 + 56);
            id v411 = v409;
            v410(v477, 0, 1, v480);
          }
          uint64_t v412 = __dstd[13];
          uint64_t v413 = (void *)((char *)v518 + v412);
          id v414 = (void *)((char *)v9 + v412);
          uint64_t v415 = type metadata accessor for WebEmbedDataVisualization();
          uint64_t v416 = *(void *)(v415 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v416 + 48))(v414, 1, v415))
          {
            sub_1C0AF9C38(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
            memcpy(v413, v414, *(void *)(*(void *)(v417 - 8) + 64));
            int v8 = v518;
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v419 = *v414;
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v420 = v414[1];
              void *v413 = v419;
              v413[1] = v420;
              uint64_t v421 = type metadata accessor for GenericDataVisualization();
              uint64_t v422 = *(int *)(v421 + 20);
              v500 = (char *)v413 + v422;
              uint64_t v423 = (char *)v414 + v422;
              swift_bridgeObjectRetain();
              v483(v500, v423, v491);
              *(void *)((char *)v413 + *(int *)(v421 + 24)) = *(uint64_t *)((char *)v414 + *(int *)(v421 + 24));
              swift_bridgeObjectRetain();
            }
            else
            {
              void *v413 = v419;
              swift_retain();
            }
            int v8 = v518;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v416 + 56))(v413, 0, 1, v415);
          }
          *((unsigned char *)v8 + __dstd[14]) = *((unsigned char *)v9 + __dstd[14]);
          uint64_t v10 = v526;
          uint64_t v24 = v530;
          goto LABEL_232;
        case 7u:
          uint64_t v251 = (void *)*v9;
          *int v8 = *v9;
          id v252 = v251;
          goto LABEL_231;
        case 8u:
          uint64_t v253 = v9[1];
          *int v8 = *v9;
          v8[1] = v253;
          uint64_t v254 = v9[3];
          v8[2] = v9[2];
          v8[3] = v254;
          *((unsigned char *)v8 + 32) = *((unsigned char *)v9 + 32);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_231;
        case 9u:
          uint64_t v255 = v9[1];
          *int v8 = *v9;
          v8[1] = v255;
          *((unsigned char *)v8 + 16) = *((unsigned char *)v9 + 16);
          uint64_t v256 = v9 + 3;
          unint64_t v257 = v9[4];
          uint64_t v527 = v10;
          if (v257 >= 0x11)
          {
            v8[3] = *v256;
            v8[4] = v257;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v8 + 3) = *(_OWORD *)v256;
          }
          uint64_t v288 = v9[6];
          v8[5] = v9[5];
          v8[6] = v288;
          uint64_t v289 = (void *)v9[8];
          v8[7] = v9[7];
          v8[8] = v289;
          *((unsigned char *)v8 + 72) = *((unsigned char *)v9 + 72);
          v8[10] = v9[10];
          __dste = v8 + 11;
          uint64_t v290 = v8;
          uint64_t v291 = v9[14];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          id v292 = v289;
          swift_bridgeObjectRetain();
          if (v291)
          {
            uint64_t v293 = v9[15];
            v290[14] = v291;
            v290[15] = v293;
            (**(void (***)(void *, uint64_t, uint64_t))(v291 - 8))(__dste, (uint64_t)(v9 + 11), v291);
          }
          else
          {
            long long v324 = *(_OWORD *)(v9 + 13);
            _OWORD *__dste = *(_OWORD *)(v9 + 11);
            __dste[1] = v324;
            *((void *)__dste + 4) = v9[15];
          }
          uint64_t v325 = v290 + 16;
          uint64_t v326 = v9 + 16;
          uint64_t v327 = v9[19];
          int v8 = v290;
          uint64_t v10 = v527;
          if (v327)
          {
            uint64_t v328 = v9[20];
            v290[19] = v327;
            v290[20] = v328;
            (**(void (***)(_OWORD *, _OWORD *))(v327 - 8))(v325, v326);
          }
          else
          {
            long long v345 = *((_OWORD *)v9 + 9);
            *uint64_t v325 = *v326;
            *((_OWORD *)v290 + 9) = v345;
            v290[20] = v9[20];
          }
          uint64_t v24 = v11;
          uint64_t v346 = v8 + 21;
          uint64_t v347 = v9 + 21;
          uint64_t v348 = v9[24];
          if (v348)
          {
            uint64_t v349 = v9[25];
            v8[24] = v348;
            v8[25] = v349;
            (**(void (***)(_OWORD *, _OWORD *))(v348 - 8))(v346, v347);
          }
          else
          {
            long long v350 = *(_OWORD *)(v9 + 23);
            *uint64_t v346 = *v347;
            *(_OWORD *)(v8 + 23) = v350;
            v8[25] = v9[25];
          }
          goto LABEL_232;
        case 0xAu:
          uint64_t v258 = v9[1];
          *int v8 = *v9;
          v8[1] = v258;
          *((unsigned char *)v8 + 16) = *((unsigned char *)v9 + 16);
          uint64_t v259 = v9 + 3;
          unint64_t v260 = v9[4];
          if (v260 >= 0x11)
          {
            v8[3] = *v259;
            v8[4] = v260;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v8 + 3) = *(_OWORD *)v259;
          }
          uint64_t v24 = v11;
          uint64_t v294 = v9[6];
          v8[5] = v9[5];
          v8[6] = v294;
          v8[7] = v9[7];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_232;
        case 0xBu:
          uint64_t v261 = v9[1];
          *int v8 = *v9;
          v8[1] = v261;
          *((unsigned char *)v8 + 16) = *((unsigned char *)v9 + 16);
          uint64_t v262 = v9 + 3;
          unint64_t v263 = v9[4];
          uint64_t v528 = v10;
          if (v263 >= 0x11)
          {
            v8[3] = *v262;
            v8[4] = v263;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v8 + 3) = *(_OWORD *)v262;
          }
          break;
        case 0xCu:
          uint64_t v264 = v9[1];
          *int v8 = *v9;
          v8[1] = v264;
          uint64_t v265 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
          __dstg = (char *)v8 + v265;
          uint64_t v529 = v10;
          unint64_t v266 = (char *)v9 + v265;
          uint64_t v267 = sub_1C151D6DC();
          uint64_t v268 = *(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 16);
          swift_bridgeObjectRetain();
          id v269 = v266;
          uint64_t v10 = v529;
          v268(__dstg, v269, v267);
          goto LABEL_231;
        default:
          uint64_t v74 = (void *)v9[1];
          *int v8 = *v9;
          v8[1] = v74;
          *((unsigned char *)v8 + 16) = *((unsigned char *)v9 + 16);
          swift_unknownObjectRetain();
          id v75 = v74;
          goto LABEL_231;
      }
      break;
    case 0x12u:
      uint64_t v76 = v9[3];
      v8[3] = v76;
      (**(void (***)(void *, void *))(v76 - 8))(v8, v9);
      goto LABEL_38;
    case 0x13u:
      *int v8 = *v9;
      uint64_t v29 = v9[1];
      swift_retain();
      if (v29 == 1)
      {
        long long v30 = *(_OWORD *)(v9 + 15);
        *(_OWORD *)(v8 + 13) = *(_OWORD *)(v9 + 13);
        *(_OWORD *)(v8 + 15) = v30;
        *(_OWORD *)((char *)v8 + 129) = *(_OWORD *)((char *)v9 + 129);
        long long v31 = *(_OWORD *)(v9 + 7);
        *(_OWORD *)(v8 + 5) = *(_OWORD *)(v9 + 5);
        *(_OWORD *)(v8 + 7) = v31;
        long long v32 = *(_OWORD *)(v9 + 11);
        *(_OWORD *)(v8 + 9) = *(_OWORD *)(v9 + 9);
        *(_OWORD *)(v8 + 11) = v32;
        long long v33 = *(_OWORD *)(v9 + 3);
        *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
        *(_OWORD *)(v8 + 3) = v33;
        uint64_t v24 = v11;
        uint64_t v14 = a3;
      }
      else
      {
        uint64_t v522 = v10;
        uint64_t v78 = v9[2];
        uint64_t v79 = v9[3];
        v8[1] = v29;
        v8[2] = v78;
        uint64_t v80 = v9[4];
        v8[3] = v79;
        v8[4] = v80;
        *((unsigned char *)v8 + 40) = *((unsigned char *)v9 + 40);
        uint64_t v81 = v9[7];
        v8[6] = v9[6];
        v8[7] = v81;
        int v514 = *((unsigned __int8 *)v9 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v514 == 255)
        {
          *((_OWORD *)v8 + 4) = *((_OWORD *)v9 + 4);
          *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
        }
        else
        {
          uint64_t v91 = v9[8];
          uint64_t v92 = v9[9];
          sub_1BFE94AB4(v91, v92, v514 & 1);
          v8[8] = v91;
          v8[9] = v92;
          *((unsigned char *)v8 + 80) = v514 & 1;
        }
        int v93 = *((unsigned __int8 *)v9 + 120);
        uint64_t v14 = a3;
        if (v93 == 255)
        {
          long long v94 = *(_OWORD *)(v9 + 13);
          *(_OWORD *)(v8 + 11) = *(_OWORD *)(v9 + 11);
          *(_OWORD *)(v8 + 13) = v94;
          *((unsigned char *)v8 + 120) = *((unsigned char *)v9 + 120);
        }
        else
        {
          char v95 = v93 & 1;
          uint64_t v96 = v9[11];
          uint64_t v97 = v9[12];
          uint64_t v98 = v9[13];
          uint64_t v99 = v9[14];
          sub_1C00F65A8(v96, v97, v98, v99, v93 & 1);
          v8[11] = v96;
          v8[12] = v97;
          v8[13] = v98;
          v8[14] = v99;
          *((unsigned char *)v8 + 120) = v95;
        }
        uint64_t v24 = v530;
        int v100 = *((unsigned __int8 *)v9 + 144);
        if (v100 == 255)
        {
          *((_OWORD *)v8 + 8) = *((_OWORD *)v9 + 8);
          *((unsigned char *)v8 + 144) = *((unsigned char *)v9 + 144);
        }
        else
        {
          char v101 = v100 & 1;
          uint64_t v102 = v9[16];
          uint64_t v103 = v9[17];
          sub_1BFE94AB4(v102, v103, v100 & 1);
          v8[16] = v102;
          v8[17] = v103;
          *((unsigned char *)v8 + 144) = v101;
        }
        uint64_t v10 = v522;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_40;
    case 0x14u:
      uint64_t v34 = (void *)*v9;
      uint64_t v35 = (void *)v9[1];
      *int v8 = *v9;
      v8[1] = v35;
      id v36 = v34;
      id v37 = v35;
      goto LABEL_38;
    case 0x17u:
      *(unsigned char *)int v8 = *(unsigned char *)v9;
      uint64_t v38 = v9[2];
      v8[1] = v9[1];
      v8[2] = v38;
      uint64_t v39 = v9[4];
      v8[3] = v9[3];
      v8[4] = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    case 0x18u:
      type metadata accessor for FormatPropertyDefinition(0);
      v515 = v8;
      uint64_t v520 = v10;
      uint64_t v14 = a3;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v104 = v9[1];
          *int v8 = *v9;
          v8[1] = v104;
          uint64_t v105 = v9[3];
          v8[2] = v9[2];
          v8[3] = v105;
          uint64_t v106 = v9[5];
          v8[4] = v9[4];
          v8[5] = v106;
          uint64_t v107 = v9[6];
          uint64_t v108 = v9[7];
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          uint64_t v109 = v9[9];
          v8[6] = v107;
          v8[7] = v108;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((~v109 & 0xF000000000000007) != 0) {
            swift_retain();
          }
          v8[9] = v109;
          *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
          v8[11] = v9[11];
          uint64_t v110 = &qword_1EB88E9B8;
          uint64_t v111 = sub_1C003F2E8;
          goto LABEL_84;
        case 2u:
          uint64_t v112 = v9[1];
          *int v8 = *v9;
          v8[1] = v112;
          uint64_t v113 = v9[3];
          v8[2] = v9[2];
          v8[3] = v113;
          uint64_t v114 = v9[5];
          v8[4] = v9[4];
          v8[5] = v114;
          uint64_t v115 = v9[7];
          v8[6] = v9[6];
          v8[7] = v115;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          sub_1BFF71B30();
          uint64_t v117 = v116[13];
          v496 = (char *)v8 + v117;
          __dsta = v116;
          v484 = (char *)v9 + v117;
          uint64_t v118 = sub_1C151631C();
          uint64_t v119 = *(void *)(v118 - 8);
          v489 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48);
          swift_bridgeObjectRetain();
          uint64_t v120 = v484;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (!v489(v484, 1, v118)) {
            goto LABEL_105;
          }
          uint64_t v121 = &qword_1EB871180;
          uint64_t v122 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
          goto LABEL_71;
        case 3u:
          uint64_t v123 = v9[1];
          *int v8 = *v9;
          v8[1] = v123;
          uint64_t v124 = v9[3];
          v8[2] = v9[2];
          v8[3] = v124;
          uint64_t v125 = v9[5];
          v8[4] = v9[4];
          v8[5] = v125;
          uint64_t v126 = v9[7];
          v8[6] = v9[6];
          v8[7] = v126;
          uint64_t v127 = v9[9];
          v8[8] = v9[8];
          v8[9] = v127;
          *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
          uint64_t v128 = v8;
          uint64_t v129 = v9[12];
          v128[11] = v9[11];
          v128[12] = v129;
          v128[13] = v9[13];
          *((unsigned char *)v128 + 112) = *((unsigned char *)v9 + 112);
          v128[15] = v9[15];
          uint64_t v130 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
          __dstb = (char *)v128 + v130;
          uint64_t v131 = (char *)v9 + v130;
          uint64_t v132 = sub_1C1518CDC();
          uint64_t v133 = *(void *)(v132 - 8);
          uint64_t v478 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v478(v131, 1, v132)) {
            goto LABEL_66;
          }
          (*(void (**)(char *, char *, uint64_t))(v133 + 16))(__dstb, v131, v132);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(__dstb, 0, 1, v132);
          break;
        case 4u:
          uint64_t v134 = v9[1];
          *int v8 = *v9;
          v8[1] = v134;
          uint64_t v135 = v9[3];
          v8[2] = v9[2];
          v8[3] = v135;
          uint64_t v136 = v9[5];
          v8[4] = v9[4];
          v8[5] = v136;
          uint64_t v137 = v9[7];
          v8[6] = v9[6];
          v8[7] = v137;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          uint64_t v138 = v9[9];
          *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
          v8[9] = v138;
          *((unsigned char *)v8 + 81) = *((unsigned char *)v9 + 81);
          v8[11] = v9[11];
          sub_1C0AF9C9C(0, &qword_1EB88E990, (void (*)(void))sub_1C0092008);
          goto LABEL_63;
        case 5u:
          uint64_t v140 = v9[1];
          *int v8 = *v9;
          v8[1] = v140;
          uint64_t v141 = v9[3];
          v8[2] = v9[2];
          v8[3] = v141;
          uint64_t v142 = v9[5];
          v8[4] = v9[4];
          v8[5] = v142;
          uint64_t v143 = v9[7];
          v8[6] = v9[6];
          v8[7] = v143;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          uint64_t v144 = v9[9];
          *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
          v8[9] = v144;
          *((unsigned char *)v8 + 81) = *((unsigned char *)v9 + 81);
          v8[11] = v9[11];
          sub_1BFF71924(0, &qword_1EB88E9D0);
LABEL_63:
          uint64_t v145 = *(int *)(v139 + 64);
          __dst = (char *)v8 + v145;
          uint64_t v46 = (char *)v9 + v145;
          uint64_t v47 = sub_1C1518CDC();
          uint64_t v48 = *(void *)(v47 - 8);
          uint64_t v146 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v146(v46, 1, v47)) {
            goto LABEL_64;
          }
          goto LABEL_20;
        case 6u:
          uint64_t v151 = v9[1];
          *int v8 = *v9;
          v8[1] = v151;
          uint64_t v152 = v9[3];
          v8[2] = v9[2];
          v8[3] = v152;
          uint64_t v153 = v9[5];
          v8[4] = v9[4];
          v8[5] = v153;
          uint64_t v154 = v9[7];
          v8[6] = v9[6];
          v8[7] = v154;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          uint64_t v155 = v9[10];
          v8[9] = v9[9];
          v8[10] = v155;
          *((unsigned char *)v8 + 88) = *((unsigned char *)v9 + 88);
          v8[12] = v9[12];
          sub_1BFF71924(0, &qword_1EB88E9C0);
          uint64_t v157 = *(int *)(v156 + 64);
          __dstb = (char *)v8 + v157;
          uint64_t v131 = (char *)v9 + v157;
          uint64_t v158 = sub_1C1518CDC();
          uint64_t v159 = *(void *)(v158 - 8);
          v485 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v159 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v485(v131, 1, v158))
          {
LABEL_66:
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
            size_t v148 = *(void *)(*(void *)(v160 - 8) + 64);
            uint64_t v149 = __dstb;
            uint64_t v150 = v131;
            goto LABEL_67;
          }
          (*(void (**)(char *, char *, uint64_t))(v159 + 16))(__dstb, v131, v158);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v159 + 56))(__dstb, 0, 1, v158);
          break;
        case 7u:
          uint64_t v161 = v9[1];
          *int v8 = *v9;
          v8[1] = v161;
          uint64_t v162 = v9[3];
          v8[2] = v9[2];
          v8[3] = v162;
          uint64_t v163 = v9[5];
          v8[4] = v9[4];
          v8[5] = v163;
          uint64_t v164 = v9[7];
          v8[6] = v9[6];
          v8[7] = v164;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          sub_1BFF719C0();
          uint64_t v166 = v165[13];
          v496 = (char *)v8 + v166;
          __dsta = v165;
          v486 = (char *)v9 + v166;
          uint64_t v118 = sub_1C1515FDC();
          uint64_t v119 = *(void *)(v118 - 8);
          v490 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48);
          swift_bridgeObjectRetain();
          uint64_t v120 = v486;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v490(v486, 1, v118))
          {
            uint64_t v121 = &qword_1EB8948A0;
            uint64_t v122 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
LABEL_71:
            sub_1C0AF9C38(0, (unint64_t *)v121, v122, MEMORY[0x1E4FBB718]);
            memcpy(v496, v120, *(void *)(*(void *)(v167 - 8) + 64));
          }
          else
          {
LABEL_105:
            (*(void (**)(char *, const void *, uint64_t))(v119 + 16))(v496, v120, v118);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v496, 0, 1, v118);
          }
          *((unsigned char *)v515 + __dsta[14]) = *((unsigned char *)v9 + __dsta[14]);
          *(void *)((char *)v515 + __dsta[15]) = *(void *)((char *)v9 + __dsta[15]);
          uint64_t v270 = __dsta[16];
          uint64_t v194 = (char *)v515 + v270;
          uint64_t v195 = (char *)v9 + v270;
          uint64_t v196 = sub_1C1518CDC();
          uint64_t v197 = *(void *)(v196 - 8);
          uint64_t v271 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48);
          swift_bridgeObjectRetain();
          uint64_t v14 = a3;
          if (!v271(v195, 1, v196)) {
            goto LABEL_107;
          }
          goto LABEL_85;
        case 8u:
          uint64_t v168 = v9[1];
          *int v8 = *v9;
          v8[1] = v168;
          uint64_t v169 = v9[3];
          v8[2] = v9[2];
          v8[3] = v169;
          uint64_t v170 = v9[5];
          v8[4] = v9[4];
          v8[5] = v170;
          uint64_t v171 = v9[6];
          uint64_t v172 = v9[7];
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          uint64_t v173 = v9[9];
          v8[6] = v171;
          v8[7] = v172;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((~v173 & 0xF000000000000007) != 0) {
            swift_retain();
          }
          v8[9] = v173;
          *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
          v8[11] = v9[11];
          uint64_t v110 = &qword_1EB88E9A0;
          uint64_t v111 = sub_1C0036630;
          goto LABEL_84;
        case 9u:
          uint64_t v174 = v9[1];
          *int v8 = *v9;
          v8[1] = v174;
          uint64_t v175 = v9[3];
          v8[2] = v9[2];
          v8[3] = v175;
          uint64_t v176 = v9[5];
          v8[4] = v9[4];
          v8[5] = v176;
          uint64_t v177 = v9[6];
          uint64_t v178 = v9[7];
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          uint64_t v179 = v9[9];
          v8[6] = v177;
          v8[7] = v178;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((~v179 & 0xF000000000000007) != 0) {
            swift_retain();
          }
          v8[9] = v179;
          *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
          v8[11] = v9[11];
          uint64_t v110 = &qword_1EB88E998;
          uint64_t v111 = sub_1C00738F0;
          goto LABEL_84;
        case 0xAu:
          uint64_t v180 = v9[1];
          *int v8 = *v9;
          v8[1] = v180;
          uint64_t v181 = v9[3];
          v8[2] = v9[2];
          v8[3] = v181;
          uint64_t v182 = v9[5];
          v8[4] = v9[4];
          v8[5] = v182;
          uint64_t v183 = v9[6];
          uint64_t v184 = v9[7];
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          uint64_t v185 = v9[9];
          v8[6] = v183;
          v8[7] = v184;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((~v185 & 0xF000000000000007) != 0) {
            swift_retain();
          }
          v8[9] = v185;
          *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
          v8[11] = v9[11];
          uint64_t v110 = &qword_1EB88E9B0;
          uint64_t v111 = sub_1C0084C58;
          goto LABEL_84;
        case 0xBu:
          uint64_t v186 = v9[1];
          *int v8 = *v9;
          v8[1] = v186;
          uint64_t v187 = v9[3];
          v8[2] = v9[2];
          v8[3] = v187;
          uint64_t v188 = v9[5];
          v8[4] = v9[4];
          v8[5] = v188;
          uint64_t v189 = v9[6];
          uint64_t v190 = v9[7];
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          uint64_t v191 = v9[9];
          v8[6] = v189;
          v8[7] = v190;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((~v191 & 0xF000000000000007) != 0) {
            swift_retain();
          }
          v8[9] = v191;
          *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
          v8[11] = v9[11];
          uint64_t v110 = &qword_1EB88E9A8;
          uint64_t v111 = sub_1C006F9DC;
LABEL_84:
          sub_1C0AF9C9C(0, v110, (void (*)(void))v111);
          uint64_t v193 = *(int *)(v192 + 64);
          uint64_t v194 = (char *)v8 + v193;
          uint64_t v195 = (char *)v9 + v193;
          uint64_t v196 = sub_1C1518CDC();
          uint64_t v197 = *(void *)(v196 - 8);
          uint64_t v198 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48);
          swift_bridgeObjectRetain();
          if (v198(v195, 1, v196))
          {
LABEL_85:
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
            memcpy(v194, v195, *(void *)(*(void *)(v199 - 8) + 64));
          }
          else
          {
LABEL_107:
            (*(void (**)(char *, char *, uint64_t))(v197 + 16))(v194, v195, v196);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v197 + 56))(v194, 0, 1, v196);
          }
          goto LABEL_108;
        default:
          uint64_t v40 = v9[1];
          *int v8 = *v9;
          v8[1] = v40;
          uint64_t v41 = v9[3];
          v8[2] = v9[2];
          v8[3] = v41;
          uint64_t v42 = v9[5];
          v8[4] = v9[4];
          v8[5] = v42;
          uint64_t v43 = v9[7];
          v8[6] = v9[6];
          v8[7] = v43;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          *((unsigned char *)v8 + 65) = *((unsigned char *)v9 + 65);
          *((unsigned char *)v8 + 66) = *((unsigned char *)v9 + 66);
          v8[9] = v9[9];
          sub_1BFF71924(0, &qword_1EB88E9C8);
          uint64_t v45 = *(int *)(v44 + 64);
          __dst = (char *)v8 + v45;
          uint64_t v46 = (char *)v9 + v45;
          uint64_t v47 = sub_1C1518CDC();
          uint64_t v48 = *(void *)(v47 - 8);
          uint64_t v488 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v488(v46, 1, v47))
          {
LABEL_64:
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
            size_t v148 = *(void *)(*(void *)(v147 - 8) + 64);
            uint64_t v149 = __dst;
            uint64_t v150 = v46;
LABEL_67:
            memcpy(v149, v150, v148);
          }
          else
          {
LABEL_20:
            (*(void (**)(char *, char *, uint64_t))(v48 + 16))(__dst, v46, v47);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v47);
          }
          break;
      }
      uint64_t v14 = a3;
LABEL_108:
      uint64_t v10 = v520;
      uint64_t v24 = v530;
      int v8 = v515;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      goto LABEL_40;
    case 0x1Au:
      uint64_t v49 = sub_1C151CA7C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(v8, v9, v49);
      goto LABEL_38;
    case 0x1Cu:
      uint64_t v77 = v9[1];
      *int v8 = *v9;
      v8[1] = v77;
      *((_OWORD *)v8 + 1) = *((_OWORD *)v9 + 1);
      swift_bridgeObjectRetain();
      goto LABEL_38;
    case 0x1Fu:
      uint64_t v50 = *v9;
      id v51 = (id)*v9;
      *int v8 = v50;
LABEL_38:
      swift_storeEnumTagMultiPayload();
      uint64_t v24 = v11;
      goto LABEL_39;
    default:
      uint64_t v24 = v11;
      memcpy(v8, v9, *(void *)(v11 + 64));
      goto LABEL_39;
  }
  uint64_t v295 = v9[6];
  v8[5] = v9[5];
  v8[6] = v295;
  uint64_t v296 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v519 = v8;
  uint64_t v297 = (char *)v8 + v296;
  uint64_t v298 = (char *)v9 + v296;
  *(void *)((char *)v8 + v296) = *(void *)((char *)v9 + v296);
  uint64_t v299 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  uint64_t v300 = &v297[v299];
  uint64_t v301 = &v298[v299];
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v355 = type metadata accessor for PuzzleStatisticValue(0);
      int v356 = swift_getEnumCaseMultiPayload();
      if (v356 == 5)
      {
        uint64_t v438 = type metadata accessor for PuzzleStreak();
        uint64_t v439 = *(void *)(v438 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v439 + 48))(v301, 1, v438))
        {
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v300, v301, *(void *)(*(void *)(v440 - 8) + 64));
        }
        else
        {
          uint64_t v450 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v450 - 8) + 16))(v300, v301, v450);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v439 + 56))(v300, 0, 1, v438);
        }
        uint64_t v441 = v355;
      }
      else
      {
        if (v356 != 4)
        {
          uint64_t v441 = v355;
          memcpy(v300, v301, *(void *)(*(void *)(v355 - 8) + 64));
          goto LABEL_208;
        }
        uint64_t v357 = type metadata accessor for PuzzleStreak();
        uint64_t v358 = *(void *)(v357 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v358 + 48))(v301, 1, v357))
        {
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v300, v301, *(void *)(*(void *)(v359 - 8) + 64));
        }
        else
        {
          uint64_t v448 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v448 - 8) + 16))(v300, v301, v448);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v358 + 56))(v300, 0, 1, v357);
        }
        uint64_t v441 = v355;
      }
      swift_storeEnumTagMultiPayload();
LABEL_208:
      uint64_t v451 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v452 = *(int *)(v451 + 20);
      uint64_t v453 = &v300[v452];
      uint64_t v454 = &v301[v452];
      int v455 = swift_getEnumCaseMultiPayload();
      if (v455 == 5)
      {
        uint64_t v459 = type metadata accessor for PuzzleStreak();
        uint64_t v460 = *(void *)(v459 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v460 + 48))(v454, 1, v459))
        {
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v453, v454, *(void *)(*(void *)(v461 - 8) + 64));
        }
        else
        {
          uint64_t v463 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v463 - 8) + 16))(v453, v454, v463);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v460 + 56))(v453, 0, 1, v459);
        }
        uint64_t v441 = v355;
      }
      else
      {
        if (v455 != 4)
        {
          memcpy(v453, v454, *(void *)(*(void *)(v441 - 8) + 64));
          goto LABEL_220;
        }
        uint64_t v456 = type metadata accessor for PuzzleStreak();
        uint64_t v457 = *(void *)(v456 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v457 + 48))(v454, 1, v456))
        {
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v453, v454, *(void *)(*(void *)(v458 - 8) + 64));
        }
        else
        {
          uint64_t v462 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v462 - 8) + 16))(v453, v454, v462);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v457 + 56))(v453, 0, 1, v456);
        }
        uint64_t v441 = v355;
      }
      swift_storeEnumTagMultiPayload();
LABEL_220:
      uint64_t v464 = *(int *)(v451 + 24);
      int v465 = &v300[v464];
      uint64_t v466 = &v301[v464];
      int v467 = swift_getEnumCaseMultiPayload();
      if (v467 == 5)
      {
        uint64_t v468 = type metadata accessor for PuzzleStreak();
        uint64_t v469 = *(void *)(v468 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v469 + 48))(v466, 1, v468))
        {
LABEL_225:
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v465, v466, *(void *)(*(void *)(v470 - 8) + 64));
LABEL_228:
          swift_storeEnumTagMultiPayload();
          goto LABEL_229;
        }
      }
      else
      {
        if (v467 != 4)
        {
          memcpy(v465, v466, *(void *)(*(void *)(v441 - 8) + 64));
          goto LABEL_229;
        }
        uint64_t v468 = type metadata accessor for PuzzleStreak();
        uint64_t v469 = *(void *)(v468 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v469 + 48))(v466, 1, v468)) {
          goto LABEL_225;
        }
      }
      uint64_t v471 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v471 - 8) + 16))(v465, v466, v471);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v469 + 56))(v465, 0, 1, v468);
      goto LABEL_228;
    case 2u:
      long long v351 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v352 = *((void *)v351 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v352 + 48))(v301, 1, v351))
      {
        sub_1C0AF9C38(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
        size_t v354 = *(void *)(*(void *)(v353 - 8) + 64);
        goto LABEL_194;
      }
      uint64_t v391 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v391 - 8) + 16))(v300, v301, v391);
      uint64_t v392 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
      uint64_t v393 = v392[5];
      uint64_t v394 = &v300[v393];
      uint64_t v395 = &v301[v393];
      uint64_t v396 = *((void *)v395 + 1);
      *(void *)uint64_t v394 = *(void *)v395;
      *((void *)v394 + 1) = v396;
      uint64_t v397 = v392[6];
      v494 = v300;
      uint64_t v398 = &v300[v397];
      uint64_t v399 = &v301[v397];
      uint64_t v400 = *((void *)v399 + 1);
      *(void *)uint64_t v398 = *(void *)v399;
      *((void *)v398 + 1) = v400;
      uint64_t v401 = (uint64_t *)(v399 + 16);
      unint64_t v402 = *((void *)v399 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v402 >> 60 == 15)
      {
        *((_OWORD *)v398 + 1) = *(_OWORD *)v401;
      }
      else
      {
        uint64_t v442 = *v401;
        sub_1BFE95820(*v401, v402);
        *((void *)v398 + 2) = v442;
        *((void *)v398 + 3) = v402;
      }
      *(void *)((char *)v494 + v392[7]) = *(void *)&v301[v392[7]];
      *(void *)((char *)v494 + v392[8]) = *(void *)&v301[v392[8]];
      *(void *)((char *)v494 + v351[5]) = *(void *)&v301[v351[5]];
      *(void *)((char *)v494 + v351[6]) = *(void *)&v301[v351[6]];
      uint64_t v443 = v351[7];
      uint64_t v444 = (void *)((char *)v494 + v443);
      uint64_t v445 = &v301[v443];
      uint64_t v446 = *((void *)v445 + 1);
      *uint64_t v444 = *(void *)v445;
      v444[1] = v446;
      v447 = *(void (**)(void *, void, uint64_t, int *))(v352 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v447(v494, 0, 1, v351);
LABEL_229:
      int v8 = v519;
      uint64_t v10 = v528;
      goto LABEL_230;
    case 3u:
      uint64_t v360 = *((void *)v301 + 1);
      *(void *)uint64_t v300 = *(void *)v301;
      *((void *)v300 + 1) = v360;
      v300[16] = v301[16];
      uint64_t v361 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v362 = v361[6];
      v493 = v300;
      uint64_t v363 = &v300[v362];
      uint64_t v364 = &v301[v362];
      uint64_t v365 = type metadata accessor for PuzzleStreak();
      uint64_t v366 = *(void *)(v365 - 8);
      uint64_t v367 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v366 + 48);
      if (v367(v364, 1, v365))
      {
        sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v363, v364, *(void *)(*(void *)(v368 - 8) + 64));
      }
      else
      {
        uint64_t v403 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v403 - 8) + 16))(v363, v364, v403);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v366 + 56))(v363, 0, 1, v365);
      }
      uint64_t v404 = v361[7];
      unint64_t v405 = (char *)v493 + v404;
      uint64_t v406 = &v301[v404];
      if (v367(&v301[v404], 1, v365))
      {
        sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v405, v406, *(void *)(*(void *)(v407 - 8) + 64));
      }
      else
      {
        uint64_t v424 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v424 - 8) + 16))(v405, v406, v424);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v366 + 56))(v405, 0, 1, v365);
      }
      uint64_t v10 = v528;
      uint64_t v425 = v361[8];
      long long v426 = (_OWORD *)((char *)v493 + v425);
      uint64_t v427 = &v301[v425];
      long long v428 = *((_OWORD *)v427 + 1);
      *long long v426 = *(_OWORD *)v427;
      v426[1] = v428;
      *(_OWORD *)((char *)v426 + 25) = *(_OWORD *)(v427 + 25);
      uint64_t v429 = v361[9];
      uint64_t v430 = (_OWORD *)((char *)v493 + v429);
      long long v431 = &v301[v429];
      *(_OWORD *)((char *)v430 + 25) = *(_OWORD *)(v431 + 25);
      long long v432 = *((_OWORD *)v431 + 1);
      *uint64_t v430 = *(_OWORD *)v431;
      v430[1] = v432;
      uint64_t v433 = v361[10];
      v434 = (_OWORD *)((char *)v493 + v433);
      long long v435 = &v301[v433];
      long long v436 = *((_OWORD *)v435 + 1);
      _OWORD *v434 = *(_OWORD *)v435;
      v434[1] = v436;
      *(_OWORD *)((char *)v434 + 25) = *(_OWORD *)(v435 + 25);
      int v8 = v519;
      goto LABEL_230;
    default:
      uint64_t v302 = type metadata accessor for PuzzleStatisticValue(0);
      int v303 = swift_getEnumCaseMultiPayload();
      if (v303 == 5)
      {
        uint64_t v304 = type metadata accessor for PuzzleStreak();
        uint64_t v305 = *(void *)(v304 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v305 + 48))(v301, 1, v304))
        {
LABEL_192:
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v300, v301, *(void *)(*(void *)(v437 - 8) + 64));
LABEL_204:
          swift_storeEnumTagMultiPayload();
          int v8 = v519;
          uint64_t v10 = v528;
          goto LABEL_230;
        }
LABEL_203:
        uint64_t v449 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v449 - 8) + 16))(v300, v301, v449);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v305 + 56))(v300, 0, 1, v304);
        goto LABEL_204;
      }
      if (v303 == 4)
      {
        uint64_t v304 = type metadata accessor for PuzzleStreak();
        uint64_t v305 = *(void *)(v304 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v305 + 48))(v301, 1, v304)) {
          goto LABEL_192;
        }
        goto LABEL_203;
      }
      size_t v354 = *(void *)(*(void *)(v302 - 8) + 64);
LABEL_194:
      memcpy(v300, v301, v354);
      int v8 = v519;
      uint64_t v10 = v528;
LABEL_230:
      swift_storeEnumTagMultiPayload();
LABEL_231:
      uint64_t v24 = v530;
LABEL_232:
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
LABEL_39:
      uint64_t v14 = a3;
LABEL_40:
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v8, 0, 1, v10);
LABEL_41:
      uint64_t v83 = *(int *)(v14 + 28);
      int v84 = (char *)a1 + v83;
      long long v85 = (char *)a2 + v83;
      int v86 = v85[16];
      if (v86 == 255)
      {
        *(_OWORD *)int v84 = *(_OWORD *)v85;
        v84[16] = v85[16];
      }
      else
      {
        char v87 = v86 & 1;
        uint64_t v88 = *(void *)v85;
        uint64_t v89 = *((void *)v85 + 1);
        sub_1C09C8BD8();
        *(void *)int v84 = v88;
        *((void *)v84 + 1) = v89;
        v84[16] = v87;
      }
      return a1;
  }
}

void *sub_1C0B10654(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = v4[2];
  a1[3] = v4[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (uint64_t)a1 + v6;
  int v8 = (char *)v4 + v6;
  uint64_t v9 = type metadata accessor for FormatInspectionItem.Value(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          swift_bridgeObjectRetain();
          goto LABEL_409;
        case 3u:
        case 0xFu:
          uint64_t v16 = *((void *)v8 + 1);
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = v16;
          swift_retain();
          goto LABEL_409;
        case 4u:
        case 0x16u:
        case 0x19u:
        case 0x1Bu:
        case 0x1Du:
        case 0x1Eu:
          *(void *)uint64_t v7 = *(void *)v8;
          swift_retain();
          goto LABEL_409;
        case 5u:
        case 0xAu:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          swift_retain();
          swift_retain();
          goto LABEL_409;
        case 6u:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          long long v17 = *((_OWORD *)v8 + 2);
          *(_OWORD *)(v7 + 16) = *((_OWORD *)v8 + 1);
          *(_OWORD *)(v7 + 32) = v17;
          uint64_t v18 = *((void *)v8 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v18)
          {
            *(void *)(v7 + 48) = v18;
            *(void *)(v7 + 56) = *((void *)v8 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v7 + 48) = *((_OWORD *)v8 + 3);
          }
          goto LABEL_409;
        case 7u:
          long long v19 = *(_OWORD *)v8;
          long long v20 = *((_OWORD *)v8 + 1);
          long long v21 = *((_OWORD *)v8 + 2);
          *(unsigned char *)(v7 + 48) = v8[48];
          *(_OWORD *)(v7 + 16) = v20;
          *(_OWORD *)(v7 + 32) = v21;
          *(_OWORD *)uint64_t v7 = v19;
          long long v22 = *(_OWORD *)(v8 + 56);
          long long v23 = *(_OWORD *)(v8 + 72);
          long long v24 = *(_OWORD *)(v8 + 88);
          *(unsigned char *)(v7 + 104) = v8[104];
          *(_OWORD *)(v7 + 88) = v24;
          *(_OWORD *)(v7 + 72) = v23;
          *(_OWORD *)(v7 + 56) = v22;
          *(void *)(v7 + 112) = *((void *)v8 + 14);
          *(void *)(v7 + 120) = *((void *)v8 + 15);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_409;
        case 8u:
          uint64_t v25 = *(void *)v8;
          sub_1BFF7B774(v25);
          *(void *)uint64_t v7 = v25;
          goto LABEL_409;
        case 9u:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          uint64_t v784 = v10;
          uint64_t v26 = *((void *)v8 + 3);
          v737 = (void *)*((void *)v8 + 2);
          uint64_t v795 = a3;
          uint64_t v811 = v9;
          uint64_t v27 = *((void *)v8 + 4);
          uint64_t v28 = *((void *)v8 + 5);
          uint64_t v29 = *((void *)v8 + 7);
          __dstuint64_t j = (void *)*((void *)v8 + 6);
          v761 = (void *)*((void *)v8 + 8);
          v766 = v4;
          uint64_t v30 = *((void *)v8 + 9);
          char v31 = v8[80];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C03A98B4((uint64_t)v737, v26, v27, v28, (uint64_t)__dstj, v29, (uint64_t)v761, v30, v31);
          *(void *)(v7 + 16) = v737;
          *(void *)(v7 + 24) = v26;
          *(void *)(v7 + 32) = v27;
          *(void *)(v7 + 40) = v28;
          *(void *)(v7 + 48) = __dstj;
          *(void *)(v7 + 56) = v29;
          *(void *)(v7 + 64) = v761;
          *(void *)(v7 + 72) = v30;
          uint64_t v4 = v766;
          *(unsigned char *)(v7 + 80) = v31;
          uint64_t v32 = *((void *)v8 + 11);
          uint64_t v33 = *((void *)v8 + 12);
          uint64_t v34 = *((void *)v8 + 13);
          uint64_t v36 = *((void *)v8 + 15);
          uint64_t v35 = *((void *)v8 + 16);
          uint64_t v38 = *((void *)v8 + 17);
          uint64_t v37 = *((void *)v8 + 18);
          __dstk = (void *)v37;
          v762 = (void *)*((void *)v8 + 14);
          char v39 = v8[152];
          sub_1C03A98B4(v32, v33, v34, (uint64_t)v762, v36, v35, v38, v37, v39);
          *(void *)(v7 + 88) = v32;
          *(void *)(v7 + 96) = v33;
          *(void *)(v7 + 104) = v34;
          *(void *)(v7 + 112) = v762;
          *(void *)(v7 + 120) = v36;
          uint64_t v10 = v784;
          a3 = v795;
          *(void *)(v7 + 128) = v35;
          *(void *)(v7 + 136) = v38;
          uint64_t v9 = v811;
          *(void *)(v7 + 144) = __dstk;
          *(unsigned char *)(v7 + 152) = v39;
          goto LABEL_409;
        case 0xCu:
          uint64_t v40 = sub_1C1515FDC();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v7, v8, v40);
          goto LABEL_409;
        case 0xDu:
          long long v41 = *((_OWORD *)v8 + 1);
          *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
          *(_OWORD *)(v7 + 16) = v41;
          *(void *)(v7 + 32) = *((void *)v8 + 4);
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(unsigned char *)(v7 + 48) = v8[48];
          swift_bridgeObjectRetain();
          goto LABEL_409;
        case 0xEu:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_409;
        case 0x10u:
          uint64_t v42 = *((void *)v8 + 3);
          *(void *)(v7 + 24) = v42;
          *(void *)(v7 + 32) = *((void *)v8 + 4);
          (**(void (***)(uint64_t, char *))(v42 - 8))(v7, v8);
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          uint64_t v43 = *((void *)v8 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v43)
          {
            *(void *)(v7 + 56) = *((void *)v8 + 7);
            *(void *)(v7 + 64) = *((void *)v8 + 8);
            *(void *)(v7 + 72) = *((void *)v8 + 9);
            *(void *)(v7 + 80) = *((void *)v8 + 10);
            *(void *)(v7 + 88) = *((void *)v8 + 11);
            *(void *)(v7 + 96) = *((void *)v8 + 12);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v111 = *(_OWORD *)(v8 + 56);
            long long v112 = *(_OWORD *)(v8 + 88);
            *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
            *(_OWORD *)(v7 + 88) = v112;
            *(_OWORD *)(v7 + 56) = v111;
          }
          *(unsigned char *)(v7 + 104) = v8[104];
          goto LABEL_409;
        case 0x11u:
          type metadata accessor for FeedGroupItem();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v187 = v9;
              uint64_t v188 = *(void **)v8;
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              *(void *)(v7 + 16) = *((void *)v8 + 2);
              *(unsigned char *)(v7 + 24) = v8[24];
              *(unsigned char *)(v7 + 25) = v8[25];
              uint64_t v189 = *((void *)v8 + 4);
              *(unsigned char *)(v7 + 40) = v8[40];
              *(void *)(v7 + 32) = v189;
              *(void *)(v7 + 48) = *((void *)v8 + 6);
              uint64_t v190 = (void *)*((void *)v8 + 7);
              *(void *)(v7 + 56) = v190;
              *(unsigned char *)(v7 + 64) = v8[64];
              uint64_t v191 = *((void *)v8 + 10);
              id v192 = v188;
              swift_bridgeObjectRetain();
              id v193 = v190;
              if (v191 == 1)
              {
                long long v194 = *(_OWORD *)(v8 + 72);
                long long v195 = *(_OWORD *)(v8 + 104);
                *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
                *(_OWORD *)(v7 + 104) = v195;
                *(_OWORD *)(v7 + 72) = v194;
              }
              else
              {
                *(void *)(v7 + 72) = *((void *)v8 + 9);
                *(void *)(v7 + 80) = *((void *)v8 + 10);
                *(void *)(v7 + 88) = *((void *)v8 + 11);
                *(void *)(v7 + 96) = *((void *)v8 + 12);
                uint64_t v242 = (void *)*((void *)v8 + 13);
                *(void *)(v7 + 104) = v242;
                *(void *)(v7 + 112) = *((void *)v8 + 14);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v243 = v242;
              }
              uint64_t v9 = v187;
              if (*((void *)v8 + 16) >= 0x11uLL)
              {
                *(void *)(v7 + 120) = *((void *)v8 + 15);
                *(void *)(v7 + 128) = *((void *)v8 + 16);
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v7 + 120) = *(_OWORD *)(v8 + 120);
              }
              *(unsigned char *)(v7 + 136) = v8[136];
              goto LABEL_408;
            case 2u:
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_408;
            case 3u:
              *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
              *(void *)(v7 + 16) = *((void *)v8 + 2);
              *(void *)(v7 + 24) = *((void *)v8 + 3);
              *(unsigned char *)(v7 + 32) = v8[32];
              uint64_t v196 = (int *)type metadata accessor for FeedWeather(0);
              uint64_t v197 = v196[7];
              uint64_t v198 = v7 + v197;
              uint64_t v814 = v9;
              uint64_t v199 = &v8[v197];
              uint64_t v777 = v7;
              uint64_t v789 = v10;
              uint64_t v200 = sub_1C151E2BC();
              uint64_t v201 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v200 - 8) + 16);
              swift_bridgeObjectRetain();
              v201(v198, v199, v200);
              *(unsigned char *)(v777 + v196[8]) = v8[v196[8]];
              uint64_t v202 = v196[9];
              uint64_t v203 = v777 + v202;
              id v204 = &v8[v202];
              sub_1C0AF9C38(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
              uint64_t v206 = v205;
              uint64_t v207 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v205 - 8) + 16);
              v207(v203, v204, v205);
              uint64_t v208 = (int *)type metadata accessor for FeedWeather.Temperature(0);
              v207(v203 + v208[5], &v204[v208[5]], v206);
              v207(v203 + v208[6], &v204[v208[6]], v206);
              uint64_t v209 = v208[7];
              uint64_t v10 = v789;
              uint64_t v210 = v206;
              uint64_t v9 = v814;
              v207(v203 + v209, &v204[v209], v210);
              uint64_t v7 = v777;
              uint64_t v211 = v196[10];
              uint64_t v212 = (void *)(v777 + v211);
              uint64_t v213 = &v8[v211];
              *uint64_t v212 = *(void *)v213;
              v212[1] = *((void *)v213 + 1);
              swift_bridgeObjectRetain();
              goto LABEL_408;
            case 4u:
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              *(void *)(v7 + 16) = *((void *)v8 + 2);
              *(void *)(v7 + 24) = *((void *)v8 + 3);
              *(void *)(v7 + 32) = *((void *)v8 + 4);
              *(void *)(v7 + 40) = *((void *)v8 + 5);
              *(unsigned char *)(v7 + 48) = v8[48];
              *(unsigned char *)(v7 + 49) = v8[49];
              *(void *)(v7 + 56) = *((void *)v8 + 7);
              *(void *)(v7 + 64) = *((void *)v8 + 8);
              *(void *)(v7 + 72) = *((void *)v8 + 9);
              *(void *)(v7 + 80) = *((void *)v8 + 10);
              *(void *)(v7 + 88) = *((void *)v8 + 11);
              *(void *)(v7 + 96) = *((void *)v8 + 12);
              *(void *)(v7 + 104) = *((void *)v8 + 13);
              *(unsigned char *)(v7 + 112) = v8[112];
              *(void *)(v7 + 120) = *((void *)v8 + 15);
              *(void *)(v7 + 128) = *((void *)v8 + 16);
              *(unsigned char *)(v7 + 136) = v8[136];
              *(void *)(v7 + 144) = *((void *)v8 + 18);
              *(void *)(v7 + 152) = *((void *)v8 + 19);
              *(void *)(v7 + 160) = *((void *)v8 + 20);
              *(void *)(v7 + 168) = *((void *)v8 + 21);
              uint64_t v214 = *((void *)v8 + 22);
              *(unsigned char *)(v7 + 184) = v8[184];
              *(void *)(v7 + 176) = v214;
              *(void *)(v7 + 192) = *((void *)v8 + 24);
              *(void *)(v7 + 200) = *((void *)v8 + 25);
              *(void *)(v7 + 208) = *((void *)v8 + 26);
              uint64_t v215 = *((void *)v8 + 27);
              *(unsigned char *)(v7 + 224) = v8[224];
              *(void *)(v7 + 216) = v215;
              v723 = (void *)*((void *)v8 + 30);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((unint64_t)v723 >= 0x11)
              {
                *(void *)(v7 + 232) = *((void *)v8 + 29);
                *(void *)(v7 + 240) = *((void *)v8 + 30);
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v7 + 232) = *(_OWORD *)(v8 + 232);
              }
              goto LABEL_408;
            case 5u:
              uint64_t v790 = v10;
              uint64_t v801 = a3;
              uint64_t v815 = v9;
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              uint64_t v216 = *((void *)v8 + 2);
              *(unsigned char *)(v7 + 24) = v8[24];
              *(void *)(v7 + 16) = v216;
              *(void *)(v7 + 32) = *((void *)v8 + 4);
              *(void *)(v7 + 40) = *((void *)v8 + 5);
              *(void *)(v7 + 48) = *((void *)v8 + 6);
              *(unsigned char *)(v7 + 56) = v8[56];
              __dstc = (int *)type metadata accessor for FeedHeadline(0);
              uint64_t v217 = __dstc[10];
              uint64_t v778 = v7;
              uint64_t v218 = (unsigned char *)(v7 + v217);
              uint64_t v219 = &v8[v217];
              *uint64_t v218 = v8[v217];
              v218[1] = v8[v217 + 1];
              v740 = (int *)type metadata accessor for FeedHeadline.State(0);
              uint64_t v220 = v740[6];
              v715 = &v218[v220];
              uint64_t v221 = &v219[v220];
              uint64_t v222 = (int *)type metadata accessor for SharedItem();
              uint64_t v710 = *((void *)v222 - 1);
              uint64_t v223 = *(unsigned int (**)(char *, uint64_t, int *))(v710 + 48);
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              swift_unknownObjectRetain();
              if (v223(v221, 1, v222))
              {
                uint64_t v224 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(v715, v221, *(void *)(*(void *)(v224 - 8) + 64));
              }
              else
              {
                uint64_t v352 = sub_1C151631C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v352 - 8) + 16))(v715, v221, v352);
                v715[v222[5]] = v221[v222[5]];
                uint64_t v353 = v222[6];
                size_t v354 = *(void **)&v221[v353];
                *(void *)&v715[v353] = v354;
                uint64_t v355 = v222[7];
                v725 = &v221[v355];
                v735 = &v715[v355];
                uint64_t v356 = sub_1C1515FDC();
                __srca = *(void (**)(char *, char *, uint64_t))(*(void *)(v356 - 8) + 16);
                id v357 = v354;
                __srca(v735, v725, v356);
                (*(void (**)(char *, void, uint64_t, int *))(v710 + 56))(v715, 0, 1, v222);
              }
              v218[v740[7]] = v219[v740[7]];
              v218[v740[8]] = v219[v740[8]];
              v218[v740[9]] = v219[v740[9]];
              v218[v740[10]] = v219[v740[10]];
              uint64_t v358 = __dstc[11];
              uint64_t v359 = (void *)(v778 + v358);
              uint64_t v360 = &v8[v358];
              uint64_t v361 = sub_1C151D2DC();
              uint64_t v362 = *(void *)(v361 - 8);
              a3 = v801;
              uint64_t v9 = v815;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v362 + 48))(v360, 1, v361))
              {
                sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
                memcpy(v359, v360, *(void *)(*(void *)(v363 - 8) + 64));
              }
              else
              {
                (*(void (**)(void *, char *, uint64_t))(v362 + 16))(v359, v360, v361);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v362 + 56))(v359, 0, 1, v361);
              }
              uint64_t v375 = __dstc[12];
              uint64_t v7 = v778;
              uint64_t v10 = v790;
              uint64_t v376 = (void *)(v778 + v375);
              uint64_t v377 = &v8[v375];
              if (*((void *)v377 + 1) >= 0x11uLL)
              {
                *uint64_t v376 = *(void *)v377;
                v376[1] = *((void *)v377 + 1);
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)uint64_t v376 = *(_OWORD *)v377;
              }
              uint64_t v378 = __dstc[13];
              unint64_t v379 = *(void *)&v8[v378];
              if (v379 >= 2)
              {
                if (v379 == 2)
                {
                  *(void *)(v778 + v378) = 2;
                }
                else
                {
                  *(void *)(v778 + v378) = v379;
                  swift_unknownObjectRetain();
                }
              }
              else
              {
                *(void *)(v778 + v378) = v379;
              }
              uint64_t v419 = __dstc[14];
              uint64_t v420 = *(void **)&v8[v419];
              *(void *)(v778 + v419) = v420;
              id v421 = v420;
              goto LABEL_408;
            case 6u:
              *(void *)uint64_t v7 = *(void *)v8;
              uint64_t v225 = *((void *)v8 + 1);
              *(unsigned char *)(v7 + 16) = v8[16];
              *(void *)(v7 + 8) = v225;
              uint64_t v816 = v9;
              uint64_t v791 = v10;
              if (*((void *)v8 + 4) >= 0x11uLL)
              {
                *(void *)(v7 + 24) = *((void *)v8 + 3);
                *(void *)(v7 + 32) = *((void *)v8 + 4);
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
              }
              *(void *)(v7 + 40) = *((void *)v8 + 5);
              *(void *)(v7 + 48) = *((void *)v8 + 6);
              uint64_t v244 = type metadata accessor for FeedWebEmbed();
              uint64_t v245 = *(int *)(v244 + 32);
              v731 = &v8[v245];
              v741 = (char *)(v7 + v245);
              uint64_t v246 = sub_1C1515FDC();
              uint64_t v247 = *(void *)(v246 - 8);
              uint64_t v248 = *(void (**)(char *, char *, uint64_t))(v247 + 16);
              swift_bridgeObjectRetain();
              v716 = v248;
              v248(v741, v731, v246);
              __dstd = (int *)v244;
              uint64_t v249 = *(int *)(v244 + 36);
              uint64_t v779 = v7;
              unint64_t v250 = (void *)(v7 + v249);
              uint64_t v251 = &v8[v249];
              uint64_t v732 = v246;
              uint64_t v802 = a3;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v247 + 48))(&v8[v249], 1, v246))
              {
                sub_1C0AF9C38(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
                memcpy(v250, v251, *(void *)(*(void *)(v252 - 8) + 64));
              }
              else
              {
                v248((char *)v250, v251, v246);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v247 + 56))(v250, 0, 1, v246);
              }
              *(void *)(v7 + __dstd[10]) = *(void *)&v8[__dstd[10]];
              *(void *)(v7 + __dstd[11]) = *(void *)&v8[__dstd[11]];
              uint64_t v364 = __dstd[12];
              uint64_t v365 = (void *)(v7 + v364);
              v742 = &v8[v364];
              uint64_t v366 = type metadata accessor for FeedHeadline(0);
              uint64_t v367 = *(void *)(v366 - 8);
              uint64_t v368 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v367 + 48);
              swift_retain();
              swift_retain();
              if (v368(v742, 1, v366))
              {
                sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
                memcpy(v365, v742, *(void *)(*(void *)(v369 - 8) + 64));
              }
              else
              {
                void *v365 = *(void *)v742;
                v365[1] = *((void *)v742 + 1);
                uint64_t v380 = *((void *)v742 + 2);
                *((unsigned char *)v365 + 24) = v742[24];
                v365[2] = v380;
                v365[4] = *((void *)v742 + 4);
                uint64_t v701 = v367;
                v365[5] = *((void *)v742 + 5);
                v365[6] = *((void *)v742 + 6);
                *((unsigned char *)v365 + 56) = v742[56];
                __src = (char *)v365;
                v711 = (int *)v366;
                uint64_t v381 = *(int *)(v366 + 40);
                uint64_t v382 = (char *)v365 + v381;
                uint64_t v383 = &v742[v381];
                unsigned char *v382 = v742[v381];
                v382[1] = v742[v381 + 1];
                v706 = (int *)type metadata accessor for FeedHeadline.State(0);
                uint64_t v384 = v706[6];
                uint64_t v385 = &v382[v384];
                uint64_t v386 = &v383[v384];
                uint64_t v387 = (int *)type metadata accessor for SharedItem();
                uint64_t v700 = *((void *)v387 - 1);
                unint64_t v388 = *(unsigned int (**)(char *, uint64_t, int *))(v700 + 48);
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain();
                swift_unknownObjectRetain();
                if (v388(v386, 1, v387))
                {
                  uint64_t v389 = type metadata accessor for FeedItem.SharedState(0);
                  memcpy(v385, v386, *(void *)(*(void *)(v389 - 8) + 64));
                }
                else
                {
                  uint64_t v461 = sub_1C151631C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v461 - 8) + 16))(v385, v386, v461);
                  v385[v387[5]] = v386[v387[5]];
                  uint64_t v462 = v387[6];
                  uint64_t v463 = *(void **)&v386[v462];
                  *(void *)&v385[v462] = v463;
                  uint64_t v464 = v387[7];
                  int v465 = &v385[v464];
                  uint64_t v466 = &v386[v464];
                  id v467 = v463;
                  v716(v465, v466, v732);
                  (*(void (**)(char *, void, uint64_t, int *))(v700 + 56))(v385, 0, 1, v387);
                }
                v382[v706[7]] = v383[v706[7]];
                v382[v706[8]] = v383[v706[8]];
                v382[v706[9]] = v383[v706[9]];
                v382[v706[10]] = v383[v706[10]];
                uint64_t v468 = v711[11];
                uint64_t v469 = &__src[v468];
                uint64_t v470 = &v742[v468];
                uint64_t v471 = sub_1C151D2DC();
                uint64_t v472 = *(void *)(v471 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v472 + 48))(v470, 1, v471))
                {
                  sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
                  memcpy(v469, v470, *(void *)(*(void *)(v473 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v472 + 16))(v469, v470, v471);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v472 + 56))(v469, 0, 1, v471);
                }
                uint64_t v491 = v711[12];
                uint64_t v492 = &__src[v491];
                v493 = &v742[v491];
                if (*((void *)v493 + 1) >= 0x11uLL)
                {
                  *(void *)uint64_t v492 = *(void *)v493;
                  *((void *)v492 + 1) = *((void *)v493 + 1);
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)uint64_t v492 = *(_OWORD *)v493;
                }
                uint64_t v494 = v711[13];
                unint64_t v495 = *(void *)&v742[v494];
                if (v495 >= 2)
                {
                  if (v495 == 2)
                  {
                    *(void *)&__src[v494] = 2;
                  }
                  else
                  {
                    *(void *)&__src[v494] = v495;
                    swift_unknownObjectRetain();
                  }
                }
                else
                {
                  *(void *)&__src[v494] = v495;
                }
                uint64_t v547 = v711[14];
                v548 = *(void **)&v742[v547];
                *(void *)&__src[v547] = v548;
                v549 = *(void (**)(char *, void, uint64_t, int *))(v701 + 56);
                id v550 = v548;
                v549(__src, 0, 1, v711);
              }
              uint64_t v551 = __dstd[13];
              v552 = (void *)(v779 + v551);
              v553 = &v8[v551];
              uint64_t v554 = type metadata accessor for WebEmbedDataVisualization();
              uint64_t v555 = *(void *)(v554 - 8);
              a3 = v802;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v555 + 48))(v553, 1, v554))
              {
                sub_1C0AF9C38(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
                memcpy(v552, v553, *(void *)(*(void *)(v556 - 8) + 64));
                uint64_t v7 = v779;
              }
              else
              {
                int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                void *v552 = *(void *)v553;
                if (EnumCaseMultiPayload == 1)
                {
                  v552[1] = *((void *)v553 + 1);
                  uint64_t v558 = type metadata accessor for GenericDataVisualization();
                  uint64_t v559 = *(int *)(v558 + 20);
                  v746 = (char *)v552 + v559;
                  v560 = &v553[v559];
                  swift_bridgeObjectRetain();
                  v716(v746, v560, v732);
                  *(void *)((char *)v552 + *(int *)(v558 + 24)) = *(void *)&v553[*(int *)(v558 + 24)];
                  swift_bridgeObjectRetain();
                }
                else
                {
                  swift_retain();
                }
                swift_storeEnumTagMultiPayload();
                (*(void (**)(void *, void, uint64_t, uint64_t))(v555 + 56))(v552, 0, 1, v554);
                a3 = v802;
                uint64_t v7 = v779;
              }
              *(unsigned char *)(v7 + __dstd[14]) = v8[__dstd[14]];
              uint64_t v9 = v816;
              uint64_t v10 = v791;
              goto LABEL_408;
            case 7u:
              uint64_t v226 = *(void **)v8;
              *(void *)uint64_t v7 = *(void *)v8;
              id v227 = v226;
              goto LABEL_408;
            case 8u:
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              *(void *)(v7 + 16) = *((void *)v8 + 2);
              uint64_t v228 = *((void *)v8 + 3);
              *(unsigned char *)(v7 + 32) = v8[32];
              *(void *)(v7 + 24) = v228;
              goto LABEL_160;
            case 9u:
              *(void *)uint64_t v7 = *(void *)v8;
              uint64_t v229 = *((void *)v8 + 1);
              *(unsigned char *)(v7 + 16) = v8[16];
              *(void *)(v7 + 8) = v229;
              uint64_t v817 = v9;
              if (*((void *)v8 + 4) >= 0x11uLL)
              {
                *(void *)(v7 + 24) = *((void *)v8 + 3);
                *(void *)(v7 + 32) = *((void *)v8 + 4);
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
              }
              *(void *)(v7 + 40) = *((void *)v8 + 5);
              *(void *)(v7 + 48) = *((void *)v8 + 6);
              *(void *)(v7 + 56) = *((void *)v8 + 7);
              uint64_t v253 = (void *)*((void *)v8 + 8);
              *(void *)(v7 + 64) = v253;
              *(unsigned char *)(v7 + 72) = v8[72];
              *(void *)(v7 + 80) = *((void *)v8 + 10);
              __dste = (_OWORD *)(v7 + 88);
              uint64_t v254 = v7;
              uint64_t v255 = *((void *)v8 + 14);
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              id v256 = v253;
              swift_bridgeObjectRetain();
              if (v255)
              {
                *(void *)(v254 + 112) = v255;
                *(void *)(v254 + 120) = *((void *)v8 + 15);
                (**(void (***)(void *, uint64_t, uint64_t))(v255 - 8))(__dste, (uint64_t)(v8 + 88), v255);
              }
              else
              {
                long long v370 = *(_OWORD *)(v8 + 88);
                long long v371 = *(_OWORD *)(v8 + 104);
                *((void *)__dste + 4) = *((void *)v8 + 15);
                _OWORD *__dste = v370;
                __dste[1] = v371;
              }
              uint64_t v372 = (_OWORD *)(v254 + 128);
              uint64_t v373 = (long long *)(v8 + 128);
              uint64_t v374 = *((void *)v8 + 19);
              uint64_t v7 = v254;
              uint64_t v9 = v817;
              if (v374)
              {
                *(void *)(v254 + 152) = v374;
                *(void *)(v254 + 160) = *((void *)v8 + 20);
                (**(void (***)(_OWORD *, long long *))(v374 - 8))(v372, v373);
              }
              else
              {
                long long v390 = *v373;
                long long v391 = *((_OWORD *)v8 + 9);
                *(void *)(v254 + 160) = *((void *)v8 + 20);
                *uint64_t v372 = v390;
                *(_OWORD *)(v254 + 144) = v391;
              }
              uint64_t v392 = (_OWORD *)(v254 + 168);
              uint64_t v393 = (long long *)(v8 + 168);
              uint64_t v394 = *((void *)v8 + 24);
              if (v394)
              {
                *(void *)(v254 + 192) = v394;
                *(void *)(v254 + 200) = *((void *)v8 + 25);
                (**(void (***)(_OWORD *, long long *))(v394 - 8))(v392, v393);
              }
              else
              {
                long long v395 = *v393;
                long long v396 = *(_OWORD *)(v8 + 184);
                *(void *)(v254 + 200) = *((void *)v8 + 25);
                *uint64_t v392 = v395;
                *(_OWORD *)(v254 + 184) = v396;
              }
              goto LABEL_408;
            case 0xAu:
              *(void *)uint64_t v7 = *(void *)v8;
              uint64_t v230 = *((void *)v8 + 1);
              *(unsigned char *)(v7 + 16) = v8[16];
              *(void *)(v7 + 8) = v230;
              if (*((void *)v8 + 4) >= 0x11uLL)
              {
                *(void *)(v7 + 24) = *((void *)v8 + 3);
                *(void *)(v7 + 32) = *((void *)v8 + 4);
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
              }
              *(void *)(v7 + 40) = *((void *)v8 + 5);
              *(void *)(v7 + 48) = *((void *)v8 + 6);
              *(void *)(v7 + 56) = *((void *)v8 + 7);
LABEL_160:
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              goto LABEL_408;
            case 0xBu:
              *(void *)uint64_t v7 = *(void *)v8;
              uint64_t v231 = *((void *)v8 + 1);
              *(unsigned char *)(v7 + 16) = v8[16];
              *(void *)(v7 + 8) = v231;
              uint64_t v818 = v9;
              if (*((void *)v8 + 4) >= 0x11uLL)
              {
                *(void *)(v7 + 24) = *((void *)v8 + 3);
                *(void *)(v7 + 32) = *((void *)v8 + 4);
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
              }
              break;
            case 0xCu:
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              uint64_t v232 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
              __dstm = (void *)(v7 + v232);
              uint64_t v819 = v9;
              uint64_t v233 = &v8[v232];
              uint64_t v234 = sub_1C151D6DC();
              uint64_t v235 = *(void (**)(void *, char *, uint64_t))(*(void *)(v234 - 8) + 16);
              swift_bridgeObjectRetain();
              uint64_t v236 = v233;
              uint64_t v9 = v819;
              v235(__dstm, v236, v234);
              goto LABEL_408;
            default:
              *(void *)uint64_t v7 = *(void *)v8;
              uint64_t v44 = (void *)*((void *)v8 + 1);
              *(void *)(v7 + 8) = v44;
              *(unsigned char *)(v7 + 16) = v8[16];
              swift_unknownObjectRetain();
              id v45 = v44;
              goto LABEL_408;
          }
          break;
        case 0x12u:
          uint64_t v46 = *((void *)v8 + 3);
          *(void *)(v7 + 24) = v46;
          (**(void (***)(uint64_t, char *))(v46 - 8))(v7, v8);
          goto LABEL_409;
        case 0x13u:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v47 = *((void *)v8 + 1);
          swift_retain();
          if (v47 == 1)
          {
            *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
            long long v48 = *(_OWORD *)(v8 + 24);
            long long v49 = *(_OWORD *)(v8 + 40);
            long long v50 = *(_OWORD *)(v8 + 72);
            *(_OWORD *)(v7 + 56) = *(_OWORD *)(v8 + 56);
            *(_OWORD *)(v7 + 72) = v50;
            *(_OWORD *)(v7 + 24) = v48;
            *(_OWORD *)(v7 + 40) = v49;
            long long v51 = *(_OWORD *)(v8 + 88);
            long long v52 = *(_OWORD *)(v8 + 104);
            long long v53 = *(_OWORD *)(v8 + 120);
            *(_OWORD *)(v7 + 129) = *(_OWORD *)(v8 + 129);
            *(_OWORD *)(v7 + 104) = v52;
            *(_OWORD *)(v7 + 120) = v53;
            *(_OWORD *)(v7 + 88) = v51;
          }
          else
          {
            uint64_t v786 = v10;
            uint64_t v813 = v9;
            *(void *)(v7 + 8) = v47;
            *(void *)(v7 + 16) = *((void *)v8 + 2);
            *(void *)(v7 + 24) = *((void *)v8 + 3);
            *(void *)(v7 + 32) = *((void *)v8 + 4);
            *(unsigned char *)(v7 + 40) = v8[40];
            *(void *)(v7 + 48) = *((void *)v8 + 6);
            *(void *)(v7 + 56) = *((void *)v8 + 7);
            int v767 = v8[80];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v767 == 255)
            {
              long long v66 = *((_OWORD *)v8 + 4);
              *(unsigned char *)(v7 + 80) = v8[80];
              *(_OWORD *)(v7 + 64) = v66;
            }
            else
            {
              uint64_t v113 = *((void *)v8 + 8);
              uint64_t v114 = *((void *)v8 + 9);
              sub_1BFE94AB4(v113, v114, v767 & 1);
              *(void *)(v7 + 64) = v113;
              *(void *)(v7 + 72) = v114;
              *(unsigned char *)(v7 + 80) = v767 & 1;
            }
            int v115 = v8[120];
            if (v115 == 255)
            {
              long long v116 = *(_OWORD *)(v8 + 88);
              long long v117 = *(_OWORD *)(v8 + 104);
              *(unsigned char *)(v7 + 120) = v8[120];
              *(_OWORD *)(v7 + 88) = v116;
              *(_OWORD *)(v7 + 104) = v117;
            }
            else
            {
              char v118 = v115 & 1;
              uint64_t v119 = *((void *)v8 + 11);
              uint64_t v120 = *((void *)v8 + 12);
              uint64_t v121 = *((void *)v8 + 13);
              uint64_t v122 = *((void *)v8 + 14);
              sub_1C00F65A8(v119, v120, v121, v122, v115 & 1);
              *(void *)(v7 + 88) = v119;
              *(void *)(v7 + 96) = v120;
              *(void *)(v7 + 104) = v121;
              *(void *)(v7 + 112) = v122;
              *(unsigned char *)(v7 + 120) = v118;
            }
            uint64_t v10 = v786;
            int v123 = v8[144];
            if (v123 == 255)
            {
              long long v124 = *((_OWORD *)v8 + 8);
              *(unsigned char *)(v7 + 144) = v8[144];
              *(_OWORD *)(v7 + 128) = v124;
            }
            else
            {
              char v125 = v123 & 1;
              uint64_t v126 = *((void *)v8 + 16);
              uint64_t v127 = *((void *)v8 + 17);
              sub_1BFE94AB4(v126, v127, v123 & 1);
              *(void *)(v7 + 128) = v126;
              *(void *)(v7 + 136) = v127;
              *(unsigned char *)(v7 + 144) = v125;
            }
            uint64_t v9 = v813;
          }
          goto LABEL_409;
        case 0x14u:
          uint64_t v54 = *(void **)v8;
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v55 = (void *)*((void *)v8 + 1);
          *(void *)(v7 + 8) = v55;
          id v56 = v54;
          id v57 = v55;
          goto LABEL_409;
        case 0x17u:
          *(unsigned char *)uint64_t v7 = *v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          *(void *)(v7 + 24) = *((void *)v8 + 3);
          *(void *)(v7 + 32) = *((void *)v8 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_409;
        case 0x18u:
          type metadata accessor for FormatPropertyDefinition(0);
          uint64_t v776 = v7;
          uint64_t v785 = v10;
          uint64_t v812 = v9;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              *(void *)(v7 + 16) = *((void *)v8 + 2);
              *(void *)(v7 + 24) = *((void *)v8 + 3);
              *(void *)(v7 + 32) = *((void *)v8 + 4);
              *(void *)(v7 + 40) = *((void *)v8 + 5);
              *(void *)(v7 + 48) = *((void *)v8 + 6);
              *(void *)(v7 + 56) = *((void *)v8 + 7);
              *(unsigned char *)(v7 + 64) = v8[64];
              uint64_t v149 = *((void *)v8 + 9);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((~v149 & 0xF000000000000007) != 0) {
                swift_retain();
              }
              *(void *)(v7 + 72) = v149;
              *(unsigned char *)(v7 + 80) = v8[80];
              *(void *)(v7 + 88) = *((void *)v8 + 11);
              uint64_t v150 = &qword_1EB88E9B8;
              uint64_t v151 = sub_1C003F2E8;
              goto LABEL_121;
            case 2u:
              uint64_t v800 = a3;
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              *(void *)(v7 + 16) = *((void *)v8 + 2);
              *(void *)(v7 + 24) = *((void *)v8 + 3);
              *(void *)(v7 + 32) = *((void *)v8 + 4);
              *(void *)(v7 + 40) = *((void *)v8 + 5);
              *(void *)(v7 + 48) = *((void *)v8 + 6);
              *(void *)(v7 + 56) = *((void *)v8 + 7);
              *(unsigned char *)(v7 + 64) = v8[64];
              sub_1BFF71B30();
              uint64_t v153 = v152[13];
              v739 = (void *)(v7 + v153);
              __dsta = v152;
              v720 = &v8[v153];
              uint64_t v154 = sub_1C151631C();
              uint64_t v155 = *(void *)(v154 - 8);
              v729 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 48);
              swift_bridgeObjectRetain();
              uint64_t v156 = v720;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (!v729(v720, 1, v154)) {
                goto LABEL_141;
              }
              uint64_t v157 = &qword_1EB871180;
              uint64_t v158 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
              goto LABEL_108;
            case 3u:
              uint64_t v796 = a3;
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              *(void *)(v7 + 16) = *((void *)v8 + 2);
              *(void *)(v7 + 24) = *((void *)v8 + 3);
              *(void *)(v7 + 32) = *((void *)v8 + 4);
              *(void *)(v7 + 40) = *((void *)v8 + 5);
              *(void *)(v7 + 48) = *((void *)v8 + 6);
              *(void *)(v7 + 56) = *((void *)v8 + 7);
              *(void *)(v7 + 64) = *((void *)v8 + 8);
              *(void *)(v7 + 72) = *((void *)v8 + 9);
              *(unsigned char *)(v7 + 80) = v8[80];
              *(void *)(v7 + 88) = *((void *)v8 + 11);
              *(void *)(v7 + 96) = *((void *)v8 + 12);
              *(void *)(v7 + 104) = *((void *)v8 + 13);
              *(unsigned char *)(v7 + 112) = v8[112];
              *(void *)(v7 + 120) = *((void *)v8 + 15);
              uint64_t v159 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
              __dstb = (void *)(v7 + v159);
              uint64_t v160 = &v8[v159];
              uint64_t v161 = sub_1C1518CDC();
              uint64_t v162 = *(void *)(v161 - 8);
              v709 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v709(v160, 1, v161)) {
                goto LABEL_103;
              }
              (*(void (**)(void *, char *, uint64_t))(v162 + 16))(__dstb, v160, v161);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v162 + 56))(__dstb, 0, 1, v161);
              break;
            case 4u:
              uint64_t v796 = a3;
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              *(void *)(v7 + 16) = *((void *)v8 + 2);
              *(void *)(v7 + 24) = *((void *)v8 + 3);
              *(void *)(v7 + 32) = *((void *)v8 + 4);
              *(void *)(v7 + 40) = *((void *)v8 + 5);
              *(void *)(v7 + 48) = *((void *)v8 + 6);
              *(void *)(v7 + 56) = *((void *)v8 + 7);
              *(unsigned char *)(v7 + 64) = v8[64];
              uint64_t v163 = *((void *)v8 + 9);
              *(unsigned char *)(v7 + 80) = v8[80];
              *(void *)(v7 + 72) = v163;
              *(unsigned char *)(v7 + 81) = v8[81];
              *(void *)(v7 + 88) = *((void *)v8 + 11);
              sub_1C0AF9C9C(0, &qword_1EB88E990, (void (*)(void))sub_1C0092008);
              goto LABEL_100;
            case 5u:
              uint64_t v796 = a3;
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              *(void *)(v7 + 16) = *((void *)v8 + 2);
              *(void *)(v7 + 24) = *((void *)v8 + 3);
              *(void *)(v7 + 32) = *((void *)v8 + 4);
              *(void *)(v7 + 40) = *((void *)v8 + 5);
              *(void *)(v7 + 48) = *((void *)v8 + 6);
              *(void *)(v7 + 56) = *((void *)v8 + 7);
              *(unsigned char *)(v7 + 64) = v8[64];
              uint64_t v165 = *((void *)v8 + 9);
              *(unsigned char *)(v7 + 80) = v8[80];
              *(void *)(v7 + 72) = v165;
              *(unsigned char *)(v7 + 81) = v8[81];
              *(void *)(v7 + 88) = *((void *)v8 + 11);
              sub_1BFF71924(0, &qword_1EB88E9D0);
LABEL_100:
              uint64_t v166 = *(int *)(v164 + 64);
              __dst = (void *)(v7 + v166);
              uint64_t v60 = &v8[v166];
              uint64_t v61 = sub_1C1518CDC();
              uint64_t v62 = *(void *)(v61 - 8);
              uint64_t v167 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v167(v60, 1, v61)) {
                goto LABEL_101;
              }
              goto LABEL_34;
            case 6u:
              uint64_t v796 = a3;
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              *(void *)(v7 + 16) = *((void *)v8 + 2);
              *(void *)(v7 + 24) = *((void *)v8 + 3);
              *(void *)(v7 + 32) = *((void *)v8 + 4);
              *(void *)(v7 + 40) = *((void *)v8 + 5);
              *(void *)(v7 + 48) = *((void *)v8 + 6);
              *(void *)(v7 + 56) = *((void *)v8 + 7);
              *(unsigned char *)(v7 + 64) = v8[64];
              *(void *)(v7 + 72) = *((void *)v8 + 9);
              *(void *)(v7 + 80) = *((void *)v8 + 10);
              *(unsigned char *)(v7 + 88) = v8[88];
              *(void *)(v7 + 96) = *((void *)v8 + 12);
              sub_1BFF71924(0, &qword_1EB88E9C0);
              uint64_t v173 = *(int *)(v172 + 64);
              __dstb = (void *)(v7 + v173);
              uint64_t v160 = &v8[v173];
              uint64_t v174 = sub_1C1518CDC();
              uint64_t v175 = *(void *)(v174 - 8);
              v721 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v175 + 48);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v721(v160, 1, v174))
              {
LABEL_103:
                sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
                size_t v169 = *(void *)(*(void *)(v176 - 8) + 64);
                uint64_t v170 = __dstb;
                uint64_t v171 = v160;
                goto LABEL_104;
              }
              (*(void (**)(void *, char *, uint64_t))(v175 + 16))(__dstb, v160, v174);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v175 + 56))(__dstb, 0, 1, v174);
              break;
            case 7u:
              uint64_t v800 = a3;
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              *(void *)(v7 + 16) = *((void *)v8 + 2);
              *(void *)(v7 + 24) = *((void *)v8 + 3);
              *(void *)(v7 + 32) = *((void *)v8 + 4);
              *(void *)(v7 + 40) = *((void *)v8 + 5);
              *(void *)(v7 + 48) = *((void *)v8 + 6);
              *(void *)(v7 + 56) = *((void *)v8 + 7);
              *(unsigned char *)(v7 + 64) = v8[64];
              sub_1BFF719C0();
              uint64_t v178 = v177[13];
              v739 = (void *)(v7 + v178);
              __dsta = v177;
              v722 = &v8[v178];
              uint64_t v154 = sub_1C1515FDC();
              uint64_t v155 = *(void *)(v154 - 8);
              v730 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 48);
              swift_bridgeObjectRetain();
              uint64_t v156 = v722;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v730(v722, 1, v154))
              {
                uint64_t v157 = &qword_1EB8948A0;
                uint64_t v158 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
LABEL_108:
                sub_1C0AF9C38(0, (unint64_t *)v157, v158, MEMORY[0x1E4FBB718]);
                memcpy(v739, v156, *(void *)(*(void *)(v179 - 8) + 64));
              }
              else
              {
LABEL_141:
                (*(void (**)(void *, char *, uint64_t))(v155 + 16))(v739, v156, v154);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v155 + 56))(v739, 0, 1, v154);
              }
              a3 = v800;
              *(unsigned char *)(v776 + __dsta[14]) = v8[__dsta[14]];
              *(void *)(v776 + __dsta[15]) = *(void *)&v8[__dsta[15]];
              uint64_t v185 = __dsta[16];
              uint64_t v186 = (void *)(v776 + v185);
              goto LABEL_143;
            case 8u:
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              *(void *)(v7 + 16) = *((void *)v8 + 2);
              *(void *)(v7 + 24) = *((void *)v8 + 3);
              *(void *)(v7 + 32) = *((void *)v8 + 4);
              *(void *)(v7 + 40) = *((void *)v8 + 5);
              *(void *)(v7 + 48) = *((void *)v8 + 6);
              *(void *)(v7 + 56) = *((void *)v8 + 7);
              *(unsigned char *)(v7 + 64) = v8[64];
              uint64_t v180 = *((void *)v8 + 9);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((~v180 & 0xF000000000000007) != 0) {
                swift_retain();
              }
              *(void *)(v7 + 72) = v180;
              *(unsigned char *)(v7 + 80) = v8[80];
              *(void *)(v7 + 88) = *((void *)v8 + 11);
              uint64_t v150 = &qword_1EB88E9A0;
              uint64_t v151 = sub_1C0036630;
              goto LABEL_121;
            case 9u:
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              *(void *)(v7 + 16) = *((void *)v8 + 2);
              *(void *)(v7 + 24) = *((void *)v8 + 3);
              *(void *)(v7 + 32) = *((void *)v8 + 4);
              *(void *)(v7 + 40) = *((void *)v8 + 5);
              *(void *)(v7 + 48) = *((void *)v8 + 6);
              *(void *)(v7 + 56) = *((void *)v8 + 7);
              *(unsigned char *)(v7 + 64) = v8[64];
              uint64_t v181 = *((void *)v8 + 9);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((~v181 & 0xF000000000000007) != 0) {
                swift_retain();
              }
              *(void *)(v7 + 72) = v181;
              *(unsigned char *)(v7 + 80) = v8[80];
              *(void *)(v7 + 88) = *((void *)v8 + 11);
              uint64_t v150 = &qword_1EB88E998;
              uint64_t v151 = sub_1C00738F0;
              goto LABEL_121;
            case 0xAu:
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              *(void *)(v7 + 16) = *((void *)v8 + 2);
              *(void *)(v7 + 24) = *((void *)v8 + 3);
              *(void *)(v7 + 32) = *((void *)v8 + 4);
              *(void *)(v7 + 40) = *((void *)v8 + 5);
              *(void *)(v7 + 48) = *((void *)v8 + 6);
              *(void *)(v7 + 56) = *((void *)v8 + 7);
              *(unsigned char *)(v7 + 64) = v8[64];
              uint64_t v182 = *((void *)v8 + 9);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((~v182 & 0xF000000000000007) != 0) {
                swift_retain();
              }
              *(void *)(v7 + 72) = v182;
              *(unsigned char *)(v7 + 80) = v8[80];
              *(void *)(v7 + 88) = *((void *)v8 + 11);
              uint64_t v150 = &qword_1EB88E9B0;
              uint64_t v151 = sub_1C0084C58;
              goto LABEL_121;
            case 0xBu:
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              *(void *)(v7 + 16) = *((void *)v8 + 2);
              *(void *)(v7 + 24) = *((void *)v8 + 3);
              *(void *)(v7 + 32) = *((void *)v8 + 4);
              *(void *)(v7 + 40) = *((void *)v8 + 5);
              *(void *)(v7 + 48) = *((void *)v8 + 6);
              *(void *)(v7 + 56) = *((void *)v8 + 7);
              *(unsigned char *)(v7 + 64) = v8[64];
              uint64_t v183 = *((void *)v8 + 9);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((~v183 & 0xF000000000000007) != 0) {
                swift_retain();
              }
              *(void *)(v7 + 72) = v183;
              *(unsigned char *)(v7 + 80) = v8[80];
              *(void *)(v7 + 88) = *((void *)v8 + 11);
              uint64_t v150 = &qword_1EB88E9A8;
              uint64_t v151 = sub_1C006F9DC;
LABEL_121:
              sub_1C0AF9C9C(0, v150, (void (*)(void))v151);
              uint64_t v185 = *(int *)(v184 + 64);
              uint64_t v186 = (void *)(v7 + v185);
LABEL_143:
              unint64_t v237 = &v8[v185];
              uint64_t v238 = sub_1C1518CDC();
              uint64_t v239 = *(void *)(v238 - 8);
              uint64_t v240 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v239 + 48);
              swift_bridgeObjectRetain();
              if (v240(v237, 1, v238))
              {
                sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
                memcpy(v186, v237, *(void *)(*(void *)(v241 - 8) + 64));
              }
              else
              {
                (*(void (**)(void *, char *, uint64_t))(v239 + 16))(v186, v237, v238);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v239 + 56))(v186, 0, 1, v238);
              }
              goto LABEL_146;
            default:
              uint64_t v796 = a3;
              *(void *)uint64_t v7 = *(void *)v8;
              *(void *)(v7 + 8) = *((void *)v8 + 1);
              *(void *)(v7 + 16) = *((void *)v8 + 2);
              *(void *)(v7 + 24) = *((void *)v8 + 3);
              *(void *)(v7 + 32) = *((void *)v8 + 4);
              *(void *)(v7 + 40) = *((void *)v8 + 5);
              *(void *)(v7 + 48) = *((void *)v8 + 6);
              *(void *)(v7 + 56) = *((void *)v8 + 7);
              *(unsigned char *)(v7 + 64) = v8[64];
              *(unsigned char *)(v7 + 65) = v8[65];
              *(unsigned char *)(v7 + 66) = v8[66];
              *(void *)(v7 + 72) = *((void *)v8 + 9);
              sub_1BFF71924(0, &qword_1EB88E9C8);
              uint64_t v59 = *(int *)(v58 + 64);
              __dst = (void *)(v7 + v59);
              uint64_t v60 = &v8[v59];
              uint64_t v61 = sub_1C1518CDC();
              uint64_t v62 = *(void *)(v61 - 8);
              v728 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v728(v60, 1, v61))
              {
LABEL_101:
                sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
                size_t v169 = *(void *)(*(void *)(v168 - 8) + 64);
                uint64_t v170 = __dst;
                uint64_t v171 = v60;
LABEL_104:
                memcpy(v170, v171, v169);
              }
              else
              {
LABEL_34:
                (*(void (**)(void *, char *, uint64_t))(v62 + 16))(__dst, v60, v61);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(__dst, 0, 1, v61);
              }
              break;
          }
          a3 = v796;
LABEL_146:
          uint64_t v9 = v812;
          uint64_t v7 = v776;
          uint64_t v10 = v785;
          swift_storeEnumTagMultiPayload();
          goto LABEL_409;
        case 0x1Au:
          uint64_t v63 = sub_1C151CA7C();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v7, v8, v63);
          goto LABEL_409;
        case 0x1Cu:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          *(void *)(v7 + 24) = *((void *)v8 + 3);
          swift_bridgeObjectRetain();
          goto LABEL_409;
        case 0x1Fu:
          uint64_t v64 = *(void *)v8;
          id v65 = *(id *)v8;
          *(void *)uint64_t v7 = v64;
          goto LABEL_409;
        default:
          memcpy((void *)v7, v8, *(void *)(v10 + 64));
          goto LABEL_410;
      }
      *(void *)(v7 + 40) = *((void *)v8 + 5);
      *(void *)(v7 + 48) = *((void *)v8 + 6);
      uint64_t v257 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      uint64_t v780 = v7;
      uint64_t v258 = v7 + v257;
      uint64_t v259 = &v8[v257];
      *(void *)(v7 + v257) = *(void *)v259;
      uint64_t v260 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v261 = (char *)(v258 + v260);
      uint64_t v262 = &v259[v260];
      type metadata accessor for PuzzleStatisticCategory(0);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      __dstf = v261;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v402 = type metadata accessor for PuzzleStatisticValue(0);
          int v403 = swift_getEnumCaseMultiPayload();
          uint64_t v792 = v10;
          uint64_t v806 = a3;
          if (v403 == 5)
          {
            uint64_t v404 = type metadata accessor for PuzzleStreak();
            uint64_t v405 = *(void *)(v404 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v405 + 48))(v262, 1, v404))
            {
LABEL_254:
              sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v261, v262, *(void *)(*(void *)(v406 - 8) + 64));
LABEL_387:
              swift_storeEnumTagMultiPayload();
LABEL_388:
              uint64_t v645 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
              uint64_t v646 = *(int *)(v645 + 20);
              v647 = &v261[v646];
              v648 = &v262[v646];
              int v649 = swift_getEnumCaseMultiPayload();
              if (v649 == 5)
              {
                uint64_t v650 = type metadata accessor for PuzzleStreak();
                uint64_t v651 = *(void *)(v650 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v651 + 48))(v648, 1, v650))
                {
LABEL_393:
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v647, v648, *(void *)(*(void *)(v652 - 8) + 64));
LABEL_396:
                  swift_storeEnumTagMultiPayload();
LABEL_397:
                  uint64_t v654 = *(int *)(v645 + 24);
                  v655 = &v261[v654];
                  v656 = &v262[v654];
                  int v657 = swift_getEnumCaseMultiPayload();
                  if (v657 == 5)
                  {
                    uint64_t v658 = type metadata accessor for PuzzleStreak();
                    uint64_t v659 = *(void *)(v658 - 8);
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v659 + 48))(v656, 1, v658))
                    {
LABEL_402:
                      sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                      memcpy(v655, v656, *(void *)(*(void *)(v660 - 8) + 64));
LABEL_405:
                      swift_storeEnumTagMultiPayload();
                      goto LABEL_406;
                    }
                  }
                  else
                  {
                    if (v657 != 4)
                    {
                      memcpy(v655, v656, *(void *)(*(void *)(v402 - 8) + 64));
LABEL_406:
                      a3 = v806;
                      uint64_t v9 = v818;
                      uint64_t v7 = v780;
                      uint64_t v10 = v792;
                      goto LABEL_407;
                    }
                    uint64_t v658 = type metadata accessor for PuzzleStreak();
                    uint64_t v659 = *(void *)(v658 - 8);
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v659 + 48))(v656, 1, v658)) {
                      goto LABEL_402;
                    }
                  }
                  uint64_t v661 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v661 - 8) + 16))(v655, v656, v661);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v659 + 56))(v655, 0, 1, v658);
                  goto LABEL_405;
                }
              }
              else
              {
                if (v649 != 4)
                {
                  memcpy(v647, v648, *(void *)(*(void *)(v402 - 8) + 64));
                  goto LABEL_397;
                }
                uint64_t v650 = type metadata accessor for PuzzleStreak();
                uint64_t v651 = *(void *)(v650 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v651 + 48))(v648, 1, v650)) {
                  goto LABEL_393;
                }
              }
              uint64_t v653 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v653 - 8) + 16))(v647, v648, v653);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v651 + 56))(v647, 0, 1, v650);
              goto LABEL_396;
            }
          }
          else
          {
            if (v403 != 4)
            {
              memcpy(v261, v262, *(void *)(*(void *)(v402 - 8) + 64));
              goto LABEL_388;
            }
            uint64_t v404 = type metadata accessor for PuzzleStreak();
            uint64_t v405 = *(void *)(v404 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v405 + 48))(v262, 1, v404)) {
              goto LABEL_254;
            }
          }
          uint64_t v644 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v644 - 8) + 16))(v261, v262, v644);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v405 + 56))(v261, 0, 1, v404);
          goto LABEL_387;
        case 2u:
          uint64_t v407 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v408 = (unsigned int (**)(void *, uint64_t, int *))*((void *)v407 - 1);
          if (((unsigned int (**)(char *, uint64_t, int *))v408)[6](v262, 1, v407))
          {
            sub_1C0AF9C38(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
            memcpy(v261, v262, *(void *)(*(void *)(v409 - 8) + 64));
            uint64_t v7 = v780;
            uint64_t v9 = v818;
          }
          else
          {
            v727 = v408;
            uint64_t v794 = v10;
            uint64_t v809 = a3;
            uint64_t v511 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v511 - 8) + 16))(v261, v262, v511);
            uint64_t v512 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
            uint64_t v513 = v512[5];
            int v514 = &v261[v513];
            v515 = &v262[v513];
            *(void *)int v514 = *(void *)v515;
            *((void *)v514 + 1) = *((void *)v515 + 1);
            uint64_t v516 = v512[6];
            uint64_t v517 = &v261[v516];
            uint64_t v518 = &v262[v516];
            *(void *)uint64_t v517 = *(void *)v518;
            *((void *)v517 + 1) = *((void *)v518 + 1);
            uint64_t v519 = (uint64_t *)(v518 + 16);
            unint64_t v520 = *((void *)v518 + 3);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v520 >> 60 == 15)
            {
              *((_OWORD *)v517 + 1) = *(_OWORD *)v519;
            }
            else
            {
              uint64_t v594 = *v519;
              sub_1BFE95820(*v519, v520);
              *((void *)v517 + 2) = v594;
              *((void *)v517 + 3) = v520;
            }
            *(void *)&__dstf[v512[7]] = *(void *)&v262[v512[7]];
            *(void *)&__dstf[v512[8]] = *(void *)&v262[v512[8]];
            *(void *)&__dstf[v407[5]] = *(void *)&v262[v407[5]];
            *(void *)&__dstf[v407[6]] = *(void *)&v262[v407[6]];
            uint64_t v595 = v407[7];
            v596 = &__dstf[v595];
            v597 = &v262[v595];
            *(void *)v596 = *(void *)v597;
            *((void *)v596 + 1) = *((void *)v597 + 1);
            v598 = (void (*)(char *, void, uint64_t, int *))v727[7];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v598(__dstf, 0, 1, v407);
            a3 = v809;
            uint64_t v9 = v818;
            uint64_t v7 = v780;
            uint64_t v10 = v794;
          }
          goto LABEL_407;
        case 3u:
          uint64_t v793 = v10;
          uint64_t v807 = a3;
          *(void *)uint64_t v261 = *(void *)v262;
          uint64_t v410 = *((void *)v262 + 1);
          v261[16] = v262[16];
          *((void *)v261 + 1) = v410;
          id v411 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v412 = v411[6];
          uint64_t v413 = &v261[v412];
          id v414 = &v262[v412];
          uint64_t v415 = type metadata accessor for PuzzleStreak();
          uint64_t v416 = *(void *)(v415 - 8);
          uint64_t v417 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v416 + 48);
          if (v417(v414, 1, v415))
          {
            sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v413, v414, *(void *)(*(void *)(v418 - 8) + 64));
          }
          else
          {
            uint64_t v524 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v524 - 8) + 16))(v413, v414, v524);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v416 + 56))(v413, 0, 1, v415);
          }
          uint64_t v525 = v411[7];
          uint64_t v526 = &__dstf[v525];
          uint64_t v527 = &v262[v525];
          if (v417(&v262[v525], 1, v415))
          {
            sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v526, v527, *(void *)(*(void *)(v528 - 8) + 64));
          }
          else
          {
            uint64_t v561 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v561 - 8) + 16))(v526, v527, v561);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v416 + 56))(v526, 0, 1, v415);
          }
          uint64_t v9 = v818;
          uint64_t v562 = v411[8];
          v563 = &__dstf[v562];
          v564 = (long long *)&v262[v562];
          long long v565 = *v564;
          long long v566 = v564[1];
          *(_OWORD *)(v563 + 25) = *(long long *)((char *)v564 + 25);
          *(_OWORD *)v563 = v565;
          *((_OWORD *)v563 + 1) = v566;
          uint64_t v567 = v411[9];
          v568 = &__dstf[v567];
          v569 = (long long *)&v262[v567];
          long long v570 = *v569;
          long long v571 = v569[1];
          *(_OWORD *)(v568 + 25) = *(long long *)((char *)v569 + 25);
          *(_OWORD *)v568 = v570;
          *((_OWORD *)v568 + 1) = v571;
          uint64_t v572 = v411[10];
          v573 = &__dstf[v572];
          v574 = (long long *)&v262[v572];
          long long v575 = *v574;
          long long v576 = v574[1];
          *(_OWORD *)(v573 + 25) = *(long long *)((char *)v574 + 25);
          *(_OWORD *)v573 = v575;
          *((_OWORD *)v573 + 1) = v576;
          uint64_t v10 = v793;
          a3 = v807;
          uint64_t v7 = v780;
          goto LABEL_407;
        default:
          uint64_t v263 = type metadata accessor for PuzzleStatisticValue(0);
          int v264 = swift_getEnumCaseMultiPayload();
          if (v264 == 5)
          {
            uint64_t v265 = type metadata accessor for PuzzleStreak();
            uint64_t v266 = *(void *)(v265 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v266 + 48))(v262, 1, v265))
            {
LABEL_166:
              sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v261, v262, *(void *)(*(void *)(v267 - 8) + 64));
LABEL_384:
              swift_storeEnumTagMultiPayload();
              uint64_t v7 = v780;
              goto LABEL_385;
            }
          }
          else
          {
            if (v264 != 4)
            {
              memcpy(v261, v262, *(void *)(*(void *)(v263 - 8) + 64));
              uint64_t v7 = v780;
LABEL_385:
              uint64_t v9 = v818;
LABEL_407:
              swift_storeEnumTagMultiPayload();
LABEL_408:
              swift_storeEnumTagMultiPayload();
LABEL_409:
              swift_storeEnumTagMultiPayload();
LABEL_410:
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
              goto LABEL_411;
            }
            uint64_t v265 = type metadata accessor for PuzzleStreak();
            uint64_t v266 = *(void *)(v265 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v266 + 48))(v262, 1, v265)) {
              goto LABEL_166;
            }
          }
          uint64_t v643 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v643 - 8) + 16))(v261, v262, v643);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v266 + 56))(v261, 0, 1, v265);
          goto LABEL_384;
      }
    }
    goto LABEL_7;
  }
  if (v13)
  {
    sub_1C0B02B98(v7, type metadata accessor for FormatInspectionItem.Value);
LABEL_7:
    sub_1C0AF9C38(0, &qword_1EA1A1FC0, type metadata accessor for FormatInspectionItem.Value, MEMORY[0x1E4FBB718]);
    size_t v15 = *(void *)(*(void *)(v14 - 8) + 64);
LABEL_8:
    memcpy((void *)v7, v8, v15);
    goto LABEL_411;
  }
  if (a1 == v4) {
    goto LABEL_411;
  }
  sub_1C0B02B98(v7, type metadata accessor for FormatInspectionItem.Value);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = *((void *)v8 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    case 3u:
    case 0xFu:
      uint64_t v93 = *((void *)v8 + 1);
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = v93;
      swift_retain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    case 4u:
    case 0x16u:
    case 0x19u:
    case 0x1Bu:
    case 0x1Du:
    case 0x1Eu:
      *(void *)uint64_t v7 = *(void *)v8;
      swift_retain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    case 5u:
    case 0xAu:
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = *((void *)v8 + 1);
      swift_retain();
      swift_retain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    case 6u:
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = *((void *)v8 + 1);
      long long v67 = *((_OWORD *)v8 + 2);
      *(_OWORD *)(v7 + 16) = *((_OWORD *)v8 + 1);
      *(_OWORD *)(v7 + 32) = v67;
      uint64_t v68 = *((void *)v8 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v68)
      {
        *(void *)(v7 + 48) = v68;
        *(void *)(v7 + 56) = *((void *)v8 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v7 + 48) = *((_OWORD *)v8 + 3);
      }
      goto LABEL_81;
    case 7u:
      long long v69 = *(_OWORD *)v8;
      long long v70 = *((_OWORD *)v8 + 1);
      long long v71 = *((_OWORD *)v8 + 2);
      *(unsigned char *)(v7 + 48) = v8[48];
      *(_OWORD *)(v7 + 16) = v70;
      *(_OWORD *)(v7 + 32) = v71;
      *(_OWORD *)uint64_t v7 = v69;
      long long v72 = *(_OWORD *)(v8 + 56);
      long long v73 = *(_OWORD *)(v8 + 72);
      long long v74 = *(_OWORD *)(v8 + 88);
      *(unsigned char *)(v7 + 104) = v8[104];
      *(_OWORD *)(v7 + 88) = v74;
      *(_OWORD *)(v7 + 72) = v73;
      *(_OWORD *)(v7 + 56) = v72;
      *(void *)(v7 + 112) = *((void *)v8 + 14);
      *(void *)(v7 + 120) = *((void *)v8 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    case 8u:
      uint64_t v94 = *(void *)v8;
      sub_1BFF7B774(v94);
      *(void *)uint64_t v7 = v94;
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    case 9u:
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = *((void *)v8 + 1);
      v763 = (void *)*((void *)v8 + 2);
      uint64_t v95 = v7;
      uint64_t v96 = *((void *)v8 + 4);
      __dstl = (void *)*((void *)v8 + 3);
      uint64_t v798 = a3;
      uint64_t v97 = *((void *)v8 + 6);
      v768 = (void *)*((void *)v8 + 5);
      uint64_t v98 = *((void *)v8 + 8);
      uint64_t v787 = *((void *)v8 + 7);
      v738 = (void *)*((void *)v8 + 9);
      char v99 = v8[80];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C03A98B4((uint64_t)v763, (uint64_t)__dstl, v96, (uint64_t)v768, v97, v787, v98, (uint64_t)v738, v99);
      *(void *)(v95 + 16) = v763;
      *(void *)(v95 + 24) = __dstl;
      *(void *)(v95 + 32) = v96;
      *(void *)(v95 + 40) = v768;
      *(void *)(v95 + 48) = v97;
      *(void *)(v95 + 56) = v787;
      *(void *)(v95 + 64) = v98;
      *(void *)(v95 + 72) = v738;
      *(unsigned char *)(v95 + 80) = v99;
      uint64_t v100 = *((void *)v8 + 11);
      uint64_t v101 = *((void *)v8 + 12);
      uint64_t v102 = *((void *)v8 + 13);
      uint64_t v103 = *((void *)v8 + 14);
      uint64_t v104 = *((void *)v8 + 15);
      uint64_t v788 = *((void *)v8 + 17);
      v769 = (void *)*((void *)v8 + 18);
      LOBYTE(v96) = v8[152];
      uint64_t v105 = *((void *)v8 + 16);
      sub_1C03A98B4(v100, v101, v102, v103, v104, v105, v788, (uint64_t)v769, v96);
      *(void *)(v95 + 88) = v100;
      *(void *)(v95 + 96) = v101;
      *(void *)(v95 + 104) = v102;
      *(void *)(v95 + 112) = v103;
      a3 = v798;
      *(void *)(v95 + 120) = v104;
      *(void *)(v95 + 128) = v105;
      *(void *)(v95 + 136) = v788;
      *(void *)(v95 + 144) = v769;
      *(unsigned char *)(v95 + 152) = v96;
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    case 0xCu:
      uint64_t v75 = sub_1C1515FDC();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v7, v8, v75);
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    case 0xDu:
      long long v76 = *((_OWORD *)v8 + 1);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *(_OWORD *)(v7 + 16) = v76;
      *(void *)(v7 + 32) = *((void *)v8 + 4);
      *(void *)(v7 + 40) = *((void *)v8 + 5);
      *(unsigned char *)(v7 + 48) = v8[48];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    case 0xEu:
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = *((void *)v8 + 1);
      *(void *)(v7 + 16) = *((void *)v8 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    case 0x10u:
      uint64_t v106 = *((void *)v8 + 3);
      *(void *)(v7 + 24) = v106;
      *(void *)(v7 + 32) = *((void *)v8 + 4);
      (**(void (***)(uint64_t, char *))(v106 - 8))(v7, v8);
      *(void *)(v7 + 40) = *((void *)v8 + 5);
      *(void *)(v7 + 48) = *((void *)v8 + 6);
      uint64_t v107 = *((void *)v8 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v107)
      {
        *(void *)(v7 + 56) = *((void *)v8 + 7);
        *(void *)(v7 + 64) = *((void *)v8 + 8);
        *(void *)(v7 + 72) = *((void *)v8 + 9);
        *(void *)(v7 + 80) = *((void *)v8 + 10);
        *(void *)(v7 + 88) = *((void *)v8 + 11);
        *(void *)(v7 + 96) = *((void *)v8 + 12);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v131 = *(_OWORD *)(v8 + 56);
        long long v132 = *(_OWORD *)(v8 + 88);
        *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
        *(_OWORD *)(v7 + 88) = v132;
        *(_OWORD *)(v7 + 56) = v131;
      }
      *(unsigned char *)(v7 + 104) = v8[104];
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    case 0x11u:
      type metadata accessor for FeedGroupItem();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          id v304 = *(id *)v8;
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          *(unsigned char *)(v7 + 24) = v8[24];
          *(unsigned char *)(v7 + 25) = v8[25];
          uint64_t v305 = *((void *)v8 + 4);
          *(unsigned char *)(v7 + 40) = v8[40];
          *(void *)(v7 + 32) = v305;
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          uint64_t v306 = (void *)*((void *)v8 + 7);
          *(void *)(v7 + 56) = v306;
          *(unsigned char *)(v7 + 64) = v8[64];
          uint64_t v307 = *((void *)v8 + 10);
          id v308 = v304;
          swift_bridgeObjectRetain();
          id v309 = v306;
          if (v307 == 1)
          {
            long long v310 = *(_OWORD *)(v8 + 72);
            long long v311 = *(_OWORD *)(v8 + 104);
            *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
            *(_OWORD *)(v7 + 104) = v311;
            *(_OWORD *)(v7 + 72) = v310;
          }
          else
          {
            *(void *)(v7 + 72) = *((void *)v8 + 9);
            *(void *)(v7 + 80) = *((void *)v8 + 10);
            *(void *)(v7 + 88) = *((void *)v8 + 11);
            *(void *)(v7 + 96) = *((void *)v8 + 12);
            uint64_t v422 = (void *)*((void *)v8 + 13);
            *(void *)(v7 + 104) = v422;
            *(void *)(v7 + 112) = *((void *)v8 + 14);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v423 = v422;
          }
          if (*((void *)v8 + 16) >= 0x11uLL)
          {
            *(void *)(v7 + 120) = *((void *)v8 + 15);
            *(void *)(v7 + 128) = *((void *)v8 + 16);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v7 + 120) = *(_OWORD *)(v8 + 120);
          }
          *(unsigned char *)(v7 + 136) = v8[136];
          goto LABEL_250;
        case 2u:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_250;
        case 3u:
          *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          *(void *)(v7 + 24) = *((void *)v8 + 3);
          *(unsigned char *)(v7 + 32) = v8[32];
          uint64_t v312 = (int *)type metadata accessor for FeedWeather(0);
          uint64_t v313 = v312[7];
          uint64_t v804 = a3;
          uint64_t v781 = v7;
          uint64_t v314 = v7 + v313;
          uint64_t v315 = &v8[v313];
          uint64_t v316 = sub_1C151E2BC();
          uint64_t v317 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v316 - 8) + 16);
          swift_bridgeObjectRetain();
          v317(v314, v315, v316);
          v770 = v312;
          *(unsigned char *)(v781 + v312[8]) = v8[v312[8]];
          uint64_t v318 = v312[9];
          uint64_t v319 = v781 + v318;
          uint64_t v320 = &v8[v318];
          sub_1C0AF9C38(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
          uint64_t v322 = v321;
          uint64_t v323 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v321 - 8) + 16);
          v323(v319, v320, v321);
          long long v324 = (int *)type metadata accessor for FeedWeather.Temperature(0);
          v323(v319 + v324[5], &v320[v324[5]], v322);
          v323(v319 + v324[6], &v320[v324[6]], v322);
          uint64_t v325 = v324[7];
          a3 = v804;
          v323(v319 + v325, &v320[v325], v322);
          uint64_t v326 = v770[10];
          uint64_t v327 = (void *)(v781 + v326);
          uint64_t v328 = &v8[v326];
          void *v327 = *(void *)v328;
          v327[1] = *((void *)v328 + 1);
          swift_bridgeObjectRetain();
          goto LABEL_250;
        case 4u:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          *(void *)(v7 + 24) = *((void *)v8 + 3);
          *(void *)(v7 + 32) = *((void *)v8 + 4);
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(unsigned char *)(v7 + 48) = v8[48];
          *(unsigned char *)(v7 + 49) = v8[49];
          *(void *)(v7 + 56) = *((void *)v8 + 7);
          *(void *)(v7 + 64) = *((void *)v8 + 8);
          *(void *)(v7 + 72) = *((void *)v8 + 9);
          *(void *)(v7 + 80) = *((void *)v8 + 10);
          *(void *)(v7 + 88) = *((void *)v8 + 11);
          *(void *)(v7 + 96) = *((void *)v8 + 12);
          *(void *)(v7 + 104) = *((void *)v8 + 13);
          *(unsigned char *)(v7 + 112) = v8[112];
          *(void *)(v7 + 120) = *((void *)v8 + 15);
          *(void *)(v7 + 128) = *((void *)v8 + 16);
          *(unsigned char *)(v7 + 136) = v8[136];
          *(void *)(v7 + 144) = *((void *)v8 + 18);
          *(void *)(v7 + 152) = *((void *)v8 + 19);
          *(void *)(v7 + 160) = *((void *)v8 + 20);
          *(void *)(v7 + 168) = *((void *)v8 + 21);
          uint64_t v329 = *((void *)v8 + 22);
          *(unsigned char *)(v7 + 184) = v8[184];
          *(void *)(v7 + 176) = v329;
          *(void *)(v7 + 192) = *((void *)v8 + 24);
          *(void *)(v7 + 200) = *((void *)v8 + 25);
          *(void *)(v7 + 208) = *((void *)v8 + 26);
          uint64_t v330 = *((void *)v8 + 27);
          *(unsigned char *)(v7 + 224) = v8[224];
          *(void *)(v7 + 216) = v330;
          unint64_t v331 = *((void *)v8 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v331 >= 0x11)
          {
            *(void *)(v7 + 232) = *((void *)v8 + 29);
            *(void *)(v7 + 240) = *((void *)v8 + 30);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v7 + 232) = *(_OWORD *)(v8 + 232);
          }
          goto LABEL_250;
        case 5u:
          uint64_t v805 = a3;
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          uint64_t v332 = *((void *)v8 + 2);
          *(unsigned char *)(v7 + 24) = v8[24];
          *(void *)(v7 + 16) = v332;
          *(void *)(v7 + 32) = *((void *)v8 + 4);
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          *(unsigned char *)(v7 + 56) = v8[56];
          v771 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v333 = v771[10];
          uint64_t v782 = v7;
          unint64_t v334 = (unsigned char *)(v7 + v333);
          uint64_t v335 = &v8[v333];
          *unint64_t v334 = v8[v333];
          v334[1] = v8[v333 + 1];
          __dsth = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v336 = __dsth[6];
          v724 = &v334[v336];
          uint64_t v337 = &v335[v336];
          unint64_t v338 = (int *)type metadata accessor for SharedItem();
          v717 = (void *)*((void *)v338 - 1);
          uint64_t v339 = (unsigned int (*)(char *, uint64_t, int *))v717[6];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v339(v337, 1, v338))
          {
            uint64_t v340 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v724, v337, *(void *)(*(void *)(v340 - 8) + 64));
          }
          else
          {
            uint64_t v449 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v449 - 8) + 16))(v724, v337, v449);
            v724[v338[5]] = v337[v338[5]];
            uint64_t v450 = v338[6];
            uint64_t v451 = *(void **)&v337[v450];
            *(void *)&v724[v450] = v451;
            uint64_t v452 = v338[7];
            v736 = &v337[v452];
            v745 = &v724[v452];
            uint64_t v453 = sub_1C1515FDC();
            v712 = *(void (**)(char *, char *, uint64_t))(*(void *)(v453 - 8) + 16);
            id v454 = v451;
            v712(v745, v736, v453);
            ((void (*)(char *, void, uint64_t, int *))v717[7])(v724, 0, 1, v338);
          }
          v334[__dsth[7]] = v335[__dsth[7]];
          v334[__dsth[8]] = v335[__dsth[8]];
          v334[__dsth[9]] = v335[__dsth[9]];
          v334[__dsth[10]] = v335[__dsth[10]];
          uint64_t v455 = v771[11];
          uint64_t v456 = (void *)(v782 + v455);
          uint64_t v457 = &v8[v455];
          uint64_t v458 = sub_1C151D2DC();
          uint64_t v459 = *(void *)(v458 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v459 + 48))(v457, 1, v458))
          {
            sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
            memcpy(v456, v457, *(void *)(*(void *)(v460 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v459 + 16))(v456, v457, v458);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v459 + 56))(v456, 0, 1, v458);
          }
          uint64_t v486 = v771[12];
          uint64_t v487 = (void *)(v782 + v486);
          uint64_t v488 = &v8[v486];
          if (*((void *)v488 + 1) >= 0x11uLL)
          {
            *uint64_t v487 = *(void *)v488;
            v487[1] = *((void *)v488 + 1);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v487 = *(_OWORD *)v488;
          }
          uint64_t v489 = v771[13];
          unint64_t v490 = *(void *)&v8[v489];
          if (v490 >= 2)
          {
            if (v490 == 2)
            {
              *(void *)(v782 + v489) = 2;
            }
            else
            {
              *(void *)(v782 + v489) = v490;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)(v782 + v489) = v490;
          }
          a3 = v805;
          uint64_t v544 = v771[14];
          v545 = *(void **)&v8[v544];
          *(void *)(v782 + v544) = v545;
          id v546 = v545;
          goto LABEL_250;
        case 6u:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v341 = *((void *)v8 + 1);
          *(unsigned char *)(v7 + 16) = v8[16];
          *(void *)(v7 + 8) = v341;
          if (*((void *)v8 + 4) >= 0x11uLL)
          {
            *(void *)(v7 + 24) = *((void *)v8 + 3);
            *(void *)(v7 + 32) = *((void *)v8 + 4);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
          }
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          __dstuint64_t i = (int *)type metadata accessor for FeedWebEmbed();
          uint64_t v424 = __dsti[8];
          v773 = (void *)(v7 + v424);
          uint64_t v783 = v7;
          v743 = &v8[v424];
          uint64_t v425 = sub_1C1515FDC();
          uint64_t v426 = *(void *)(v425 - 8);
          uint64_t v427 = *(void (**)(void *, char *, uint64_t))(v426 + 16);
          swift_bridgeObjectRetain();
          v726 = v427;
          v427(v773, v743, v425);
          uint64_t v428 = v426;
          uint64_t v429 = __dsti[9];
          uint64_t v430 = (void *)(v783 + v429);
          long long v431 = &v8[v429];
          v744 = (void *)v425;
          uint64_t v808 = a3;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v428 + 48))(&v8[v429], 1, v425))
          {
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
            memcpy(v430, v431, *(void *)(*(void *)(v432 - 8) + 64));
          }
          else
          {
            v726(v430, v431, v425);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v428 + 56))(v430, 0, 1, v425);
          }
          *(void *)(v783 + __dsti[10]) = *(void *)&v8[__dsti[10]];
          *(void *)(v783 + __dsti[11]) = *(void *)&v8[__dsti[11]];
          uint64_t v474 = __dsti[12];
          uint64_t v475 = (void *)(v783 + v474);
          v476 = &v8[v474];
          uint64_t v477 = type metadata accessor for FeedHeadline(0);
          v718 = *(void **)(v477 - 8);
          uint64_t v478 = (unsigned int (*)(char *, uint64_t, int *))v718[6];
          uint64_t v479 = (int *)v477;
          swift_retain();
          swift_retain();
          if (v478(v476, 1, v479))
          {
            sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
            memcpy(v475, v476, *(void *)(*(void *)(v480 - 8) + 64));
          }
          else
          {
            *uint64_t v475 = *(void *)v476;
            v475[1] = *((void *)v476 + 1);
            uint64_t v496 = *((void *)v476 + 2);
            *((unsigned char *)v475 + 24) = v476[24];
            v475[2] = v496;
            v475[4] = *((void *)v476 + 4);
            v475[5] = *((void *)v476 + 5);
            v475[6] = *((void *)v476 + 6);
            *((unsigned char *)v475 + 56) = v476[56];
            v775 = v479;
            uint64_t v497 = v479[10];
            uint64_t v498 = (char *)v475 + v497;
            v499 = &v476[v497];
            *uint64_t v498 = v476[v497];
            v498[1] = v476[v497 + 1];
            v713 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v500 = v713[6];
            v703 = &v498[v500];
            v501 = &v499[v500];
            v502 = (int *)type metadata accessor for SharedItem();
            uint64_t v702 = *((void *)v502 - 1);
            v704 = *(unsigned int (**)(char *, uint64_t, int *))(v702 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v704(v501, 1, v502))
            {
              uint64_t v503 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v703, v501, *(void *)(*(void *)(v503 - 8) + 64));
            }
            else
            {
              uint64_t v577 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v577 - 8) + 16))(v703, v501, v577);
              v703[v502[5]] = v501[v502[5]];
              uint64_t v578 = v502[6];
              v579 = *(void **)&v501[v578];
              *(void *)&v703[v578] = v579;
              uint64_t v580 = v502[7];
              v705 = &v703[v580];
              v581 = &v501[v580];
              id v582 = v579;
              v726(v705, v581, (uint64_t)v744);
              (*(void (**)(char *, void, uint64_t, int *))(v702 + 56))(v703, 0, 1, v502);
            }
            v498[v713[7]] = v499[v713[7]];
            v498[v713[8]] = v499[v713[8]];
            v498[v713[9]] = v499[v713[9]];
            v498[v713[10]] = v499[v713[10]];
            uint64_t v583 = v775[11];
            v584 = (char *)v475 + v583;
            v585 = &v476[v583];
            uint64_t v586 = sub_1C151D2DC();
            uint64_t v587 = *(void *)(v586 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v587 + 48))(v585, 1, v586))
            {
              sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
              memcpy(v584, v585, *(void *)(*(void *)(v588 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v587 + 16))(v584, v585, v586);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v587 + 56))(v584, 0, 1, v586);
            }
            uint64_t v589 = v775[12];
            v590 = (void *)((char *)v475 + v589);
            v591 = &v476[v589];
            if (*((void *)v591 + 1) >= 0x11uLL)
            {
              void *v590 = *(void *)v591;
              v590[1] = *((void *)v591 + 1);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)v590 = *(_OWORD *)v591;
            }
            uint64_t v592 = v775[13];
            unint64_t v593 = *(void *)&v476[v592];
            if (v593 >= 2)
            {
              if (v593 == 2)
              {
                *(void *)((char *)v475 + v592) = 2;
              }
              else
              {
                *(void *)((char *)v475 + v592) = v593;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(void *)((char *)v475 + v592) = v593;
            }
            uint64_t v614 = v775[14];
            v615 = *(void **)&v476[v614];
            *(void *)((char *)v475 + v614) = v615;
            v616 = (void (*)(void *, void, uint64_t, int *))v718[7];
            id v617 = v615;
            v616(v475, 0, 1, v775);
          }
          uint64_t v618 = __dsti[13];
          v619 = (void *)(v783 + v618);
          v620 = &v8[v618];
          uint64_t v621 = type metadata accessor for WebEmbedDataVisualization();
          uint64_t v622 = *(void *)(v621 - 8);
          a3 = v808;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v622 + 48))(v620, 1, v621))
          {
            sub_1C0AF9C38(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
            memcpy(v619, v620, *(void *)(*(void *)(v623 - 8) + 64));
          }
          else
          {
            int v624 = swift_getEnumCaseMultiPayload();
            void *v619 = *(void *)v620;
            if (v624 == 1)
            {
              v619[1] = *((void *)v620 + 1);
              uint64_t v625 = type metadata accessor for GenericDataVisualization();
              uint64_t v626 = *(int *)(v625 + 20);
              v714 = &v620[v626];
              v719 = (char *)v619 + v626;
              swift_bridgeObjectRetain();
              v726(v719, v714, (uint64_t)v744);
              *(void *)((char *)v619 + *(int *)(v625 + 24)) = *(void *)&v620[*(int *)(v625 + 24)];
              swift_bridgeObjectRetain();
            }
            else
            {
              swift_retain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v622 + 56))(v619, 0, 1, v621);
          }
          *(unsigned char *)(v783 + __dsti[14]) = v8[__dsti[14]];
          goto LABEL_250;
        case 7u:
          id v342 = *(id *)v8;
          *(void *)uint64_t v7 = *(void *)v8;
          id v343 = v342;
          goto LABEL_250;
        case 8u:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          uint64_t v344 = *((void *)v8 + 3);
          *(unsigned char *)(v7 + 32) = v8[32];
          *(void *)(v7 + 24) = v344;
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_250;
        case 9u:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v345 = *((void *)v8 + 1);
          *(unsigned char *)(v7 + 16) = v8[16];
          *(void *)(v7 + 8) = v345;
          if (*((void *)v8 + 4) >= 0x11uLL)
          {
            *(void *)(v7 + 24) = *((void *)v8 + 3);
            *(void *)(v7 + 32) = *((void *)v8 + 4);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
          }
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          *(void *)(v7 + 56) = *((void *)v8 + 7);
          uint64_t v433 = (void *)*((void *)v8 + 8);
          *(void *)(v7 + 64) = v433;
          *(unsigned char *)(v7 + 72) = v8[72];
          *(void *)(v7 + 80) = *((void *)v8 + 10);
          uint64_t v434 = v7 + 88;
          uint64_t v435 = v7;
          uint64_t v436 = *((void *)v8 + 14);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          id v437 = v433;
          swift_bridgeObjectRetain();
          if (v436)
          {
            *(void *)(v435 + 112) = v436;
            *(void *)(v435 + 120) = *((void *)v8 + 15);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v436 - 8))(v434, (uint64_t)(v8 + 88), v436);
          }
          else
          {
            long long v481 = *(_OWORD *)(v8 + 88);
            long long v482 = *(_OWORD *)(v8 + 104);
            *(void *)(v434 + 32) = *((void *)v8 + 15);
            *(_OWORD *)uint64_t v434 = v481;
            *(_OWORD *)(v434 + 16) = v482;
          }
          v483 = (_OWORD *)(v435 + 128);
          v484 = (long long *)(v8 + 128);
          uint64_t v485 = *((void *)v8 + 19);
          if (v485)
          {
            *(void *)(v435 + 152) = v485;
            *(void *)(v435 + 160) = *((void *)v8 + 20);
            (**(void (***)(_OWORD *, long long *))(v485 - 8))(v483, v484);
          }
          else
          {
            long long v504 = *v484;
            long long v505 = *((_OWORD *)v8 + 9);
            *(void *)(v435 + 160) = *((void *)v8 + 20);
            _OWORD *v483 = v504;
            *(_OWORD *)(v435 + 144) = v505;
          }
          uint64_t v506 = (_OWORD *)(v435 + 168);
          uint64_t v507 = (long long *)(v8 + 168);
          uint64_t v508 = *((void *)v8 + 24);
          if (v508)
          {
            *(void *)(v435 + 192) = v508;
            *(void *)(v435 + 200) = *((void *)v8 + 25);
            (**(void (***)(_OWORD *, long long *))(v508 - 8))(v506, v507);
          }
          else
          {
            long long v509 = *v507;
            long long v510 = *(_OWORD *)(v8 + 184);
            *(void *)(v435 + 200) = *((void *)v8 + 25);
            *uint64_t v506 = v509;
            *(_OWORD *)(v435 + 184) = v510;
          }
          goto LABEL_250;
        case 0xAu:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v346 = *((void *)v8 + 1);
          *(unsigned char *)(v7 + 16) = v8[16];
          *(void *)(v7 + 8) = v346;
          if (*((void *)v8 + 4) >= 0x11uLL)
          {
            *(void *)(v7 + 24) = *((void *)v8 + 3);
            *(void *)(v7 + 32) = *((void *)v8 + 4);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
          }
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          *(void *)(v7 + 56) = *((void *)v8 + 7);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_250;
        case 0xBu:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v347 = *((void *)v8 + 1);
          *(unsigned char *)(v7 + 16) = v8[16];
          *(void *)(v7 + 8) = v347;
          if (*((void *)v8 + 4) >= 0x11uLL)
          {
            *(void *)(v7 + 24) = *((void *)v8 + 3);
            *(void *)(v7 + 32) = *((void *)v8 + 4);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
          }
          break;
        case 0xCu:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          uint64_t v348 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
          uint64_t v349 = v7 + v348;
          v772 = &v8[v348];
          uint64_t v350 = sub_1C151D6DC();
          long long v351 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v350 - 8) + 16);
          swift_bridgeObjectRetain();
          v351(v349, v772, v350);
          goto LABEL_250;
        default:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v108 = (void *)*((void *)v8 + 1);
          *(void *)(v7 + 8) = v108;
          *(unsigned char *)(v7 + 16) = v8[16];
          swift_unknownObjectRetain();
          id v109 = v108;
          goto LABEL_250;
      }
      break;
    case 0x12u:
      uint64_t v110 = *((void *)v8 + 3);
      *(void *)(v7 + 24) = v110;
      (**(void (***)(uint64_t, char *))(v110 - 8))(v7, v8);
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    case 0x13u:
      *(void *)uint64_t v7 = *(void *)v8;
      uint64_t v77 = *((void *)v8 + 1);
      swift_retain();
      if (v77 == 1)
      {
        *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
        long long v78 = *(_OWORD *)(v8 + 24);
        long long v79 = *(_OWORD *)(v8 + 40);
        long long v80 = *(_OWORD *)(v8 + 72);
        *(_OWORD *)(v7 + 56) = *(_OWORD *)(v8 + 56);
        *(_OWORD *)(v7 + 72) = v80;
        *(_OWORD *)(v7 + 24) = v78;
        *(_OWORD *)(v7 + 40) = v79;
        long long v81 = *(_OWORD *)(v8 + 88);
        long long v82 = *(_OWORD *)(v8 + 104);
        long long v83 = *(_OWORD *)(v8 + 120);
        *(_OWORD *)(v7 + 129) = *(_OWORD *)(v8 + 129);
        *(_OWORD *)(v7 + 104) = v82;
        *(_OWORD *)(v7 + 120) = v83;
        *(_OWORD *)(v7 + 88) = v81;
      }
      else
      {
        uint64_t v799 = a3;
        *(void *)(v7 + 8) = v77;
        *(void *)(v7 + 16) = *((void *)v8 + 2);
        uint64_t v128 = v7;
        *(void *)(v7 + 24) = *((void *)v8 + 3);
        *(void *)(v7 + 32) = *((void *)v8 + 4);
        *(unsigned char *)(v7 + 40) = v8[40];
        *(void *)(v7 + 48) = *((void *)v8 + 6);
        *(void *)(v7 + 56) = *((void *)v8 + 7);
        int v129 = v8[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v129 == 255)
        {
          long long v130 = *((_OWORD *)v8 + 4);
          *(unsigned char *)(v7 + 80) = v8[80];
          *(_OWORD *)(v7 + 64) = v130;
        }
        else
        {
          uint64_t v133 = *((void *)v8 + 8);
          uint64_t v134 = *((void *)v8 + 9);
          sub_1BFE94AB4(v133, v134, v129 & 1);
          *(void *)(v128 + 64) = v133;
          *(void *)(v128 + 72) = v134;
          *(unsigned char *)(v128 + 80) = v129 & 1;
        }
        uint64_t v135 = v128;
        int v136 = v8[120];
        if (v136 == 255)
        {
          long long v137 = *(_OWORD *)(v8 + 88);
          long long v138 = *(_OWORD *)(v8 + 104);
          *(unsigned char *)(v128 + 120) = v8[120];
          *(_OWORD *)(v128 + 88) = v137;
          *(_OWORD *)(v128 + 104) = v138;
        }
        else
        {
          char v139 = v136 & 1;
          uint64_t v140 = *((void *)v8 + 11);
          uint64_t v141 = *((void *)v8 + 12);
          uint64_t v143 = *((void *)v8 + 13);
          uint64_t v142 = *((void *)v8 + 14);
          sub_1C00F65A8(v140, v141, v143, v142, v136 & 1);
          *(void *)(v128 + 88) = v140;
          *(void *)(v128 + 96) = v141;
          uint64_t v135 = v128;
          *(void *)(v128 + 104) = v143;
          *(void *)(v128 + 112) = v142;
          *(unsigned char *)(v128 + 120) = v139;
        }
        a3 = v799;
        int v144 = v8[144];
        if (v144 == 255)
        {
          long long v145 = *((_OWORD *)v8 + 8);
          *(unsigned char *)(v135 + 144) = v8[144];
          *(_OWORD *)(v135 + 128) = v145;
        }
        else
        {
          char v146 = v144 & 1;
          uint64_t v148 = *((void *)v8 + 16);
          uint64_t v147 = *((void *)v8 + 17);
          sub_1BFE94AB4(v148, v147, v144 & 1);
          *(void *)(v135 + 128) = v148;
          *(void *)(v135 + 136) = v147;
          *(unsigned char *)(v135 + 144) = v146;
        }
      }
LABEL_81:
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    case 0x14u:
      id v84 = *(id *)v8;
      *(void *)uint64_t v7 = *(void *)v8;
      long long v85 = (void *)*((void *)v8 + 1);
      *(void *)(v7 + 8) = v85;
      id v86 = v84;
      id v87 = v85;
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    case 0x17u:
      *(unsigned char *)uint64_t v7 = *v8;
      *(void *)(v7 + 8) = *((void *)v8 + 1);
      *(void *)(v7 + 16) = *((void *)v8 + 2);
      *(void *)(v7 + 24) = *((void *)v8 + 3);
      *(void *)(v7 + 32) = *((void *)v8 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    case 0x18u:
      type metadata accessor for FormatPropertyDefinition(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          *(void *)(v7 + 24) = *((void *)v8 + 3);
          *(void *)(v7 + 32) = *((void *)v8 + 4);
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          *(void *)(v7 + 56) = *((void *)v8 + 7);
          *(unsigned char *)(v7 + 64) = v8[64];
          uint64_t v268 = *((void *)v8 + 9);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((~v268 & 0xF000000000000007) != 0) {
            swift_retain();
          }
          uint64_t v269 = v7;
          *(void *)(v7 + 72) = v268;
          *(unsigned char *)(v7 + 80) = v8[80];
          *(void *)(v7 + 88) = *((void *)v8 + 11);
          uint64_t v270 = &qword_1EB88E9B8;
          uint64_t v271 = sub_1C003F2E8;
          goto LABEL_200;
        case 2u:
          uint64_t v803 = a3;
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          *(void *)(v7 + 24) = *((void *)v8 + 3);
          *(void *)(v7 + 32) = *((void *)v8 + 4);
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          *(void *)(v7 + 56) = *((void *)v8 + 7);
          *(unsigned char *)(v7 + 64) = v8[64];
          sub_1BFF71B30();
          uint64_t v273 = v272[13];
          __dstg = (void *)(v7 + v273);
          v764 = v272;
          uint64_t v274 = &v8[v273];
          uint64_t v275 = sub_1C151631C();
          uint64_t v276 = *(void *)(v275 - 8);
          v733 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v276 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (!v733(v274, 1, v275)) {
            goto LABEL_245;
          }
          unint64_t v277 = &qword_1EB871180;
          uint64_t v278 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
          goto LABEL_187;
        case 3u:
          uint64_t v797 = a3;
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          *(void *)(v7 + 24) = *((void *)v8 + 3);
          *(void *)(v7 + 32) = *((void *)v8 + 4);
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          *(void *)(v7 + 56) = *((void *)v8 + 7);
          *(void *)(v7 + 64) = *((void *)v8 + 8);
          *(void *)(v7 + 72) = *((void *)v8 + 9);
          *(unsigned char *)(v7 + 80) = v8[80];
          *(void *)(v7 + 88) = *((void *)v8 + 11);
          *(void *)(v7 + 96) = *((void *)v8 + 12);
          *(void *)(v7 + 104) = *((void *)v8 + 13);
          *(unsigned char *)(v7 + 112) = v8[112];
          *(void *)(v7 + 120) = *((void *)v8 + 15);
          uint64_t v279 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
          v765 = (void *)(v7 + v279);
          uint64_t v280 = &v8[v279];
          uint64_t v281 = sub_1C1518CDC();
          uint64_t v282 = *(void *)(v281 - 8);
          uint64_t v283 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v282 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v283(v280, 1, v281)) {
            goto LABEL_182;
          }
          (*(void (**)(void *, char *, uint64_t))(v282 + 16))(v765, v280, v281);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v282 + 56))(v765, 0, 1, v281);
          goto LABEL_184;
        case 4u:
          uint64_t v797 = a3;
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          *(void *)(v7 + 24) = *((void *)v8 + 3);
          *(void *)(v7 + 32) = *((void *)v8 + 4);
          uint64_t v88 = v7;
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          *(void *)(v7 + 56) = *((void *)v8 + 7);
          *(unsigned char *)(v7 + 64) = v8[64];
          uint64_t v284 = *((void *)v8 + 9);
          *(unsigned char *)(v7 + 80) = v8[80];
          *(void *)(v7 + 72) = v284;
          *(unsigned char *)(v7 + 81) = v8[81];
          *(void *)(v7 + 88) = *((void *)v8 + 11);
          sub_1C0AF9C9C(0, &qword_1EB88E990, (void (*)(void))sub_1C0092008);
          goto LABEL_179;
        case 5u:
          uint64_t v797 = a3;
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          *(void *)(v7 + 24) = *((void *)v8 + 3);
          *(void *)(v7 + 32) = *((void *)v8 + 4);
          uint64_t v88 = v7;
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          *(void *)(v7 + 56) = *((void *)v8 + 7);
          *(unsigned char *)(v7 + 64) = v8[64];
          uint64_t v286 = *((void *)v8 + 9);
          *(unsigned char *)(v7 + 80) = v8[80];
          *(void *)(v7 + 72) = v286;
          *(unsigned char *)(v7 + 81) = v8[81];
          *(void *)(v7 + 88) = *((void *)v8 + 11);
          uint64_t v89 = &qword_1EB88E9D0;
          goto LABEL_178;
        case 6u:
          uint64_t v797 = a3;
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          *(void *)(v7 + 24) = *((void *)v8 + 3);
          *(void *)(v7 + 32) = *((void *)v8 + 4);
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          *(void *)(v7 + 56) = *((void *)v8 + 7);
          *(unsigned char *)(v7 + 64) = v8[64];
          *(void *)(v7 + 72) = *((void *)v8 + 9);
          *(void *)(v7 + 80) = *((void *)v8 + 10);
          *(unsigned char *)(v7 + 88) = v8[88];
          *(void *)(v7 + 96) = *((void *)v8 + 12);
          sub_1BFF71924(0, &qword_1EB88E9C0);
          uint64_t v292 = *(int *)(v291 + 64);
          v765 = (void *)(v7 + v292);
          uint64_t v280 = &v8[v292];
          uint64_t v288 = sub_1C1518CDC();
          uint64_t v289 = *(void *)(v288 - 8);
          uint64_t v290 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v289 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_181;
        case 7u:
          uint64_t v803 = a3;
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          *(void *)(v7 + 24) = *((void *)v8 + 3);
          *(void *)(v7 + 32) = *((void *)v8 + 4);
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          *(void *)(v7 + 56) = *((void *)v8 + 7);
          *(unsigned char *)(v7 + 64) = v8[64];
          sub_1BFF719C0();
          uint64_t v295 = v294[13];
          __dstg = (void *)(v7 + v295);
          v764 = v294;
          uint64_t v274 = &v8[v295];
          uint64_t v275 = sub_1C1515FDC();
          uint64_t v276 = *(void *)(v275 - 8);
          v734 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v276 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v734(v274, 1, v275))
          {
            unint64_t v277 = &qword_1EB8948A0;
            uint64_t v278 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
LABEL_187:
            sub_1C0AF9C38(0, (unint64_t *)v277, v278, MEMORY[0x1E4FBB718]);
            memcpy(__dstg, v274, *(void *)(*(void *)(v296 - 8) + 64));
          }
          else
          {
LABEL_245:
            (*(void (**)(void *, char *, uint64_t))(v276 + 16))(__dstg, v274, v275);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v276 + 56))(__dstg, 0, 1, v275);
          }
          a3 = v803;
          *(unsigned char *)(v7 + v764[14]) = v8[v764[14]];
          *(void *)(v7 + v764[15]) = *(void *)&v8[v764[15]];
          uint64_t v302 = v764[16];
          int v303 = (void *)(v7 + v302);
          goto LABEL_247;
        case 8u:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          *(void *)(v7 + 24) = *((void *)v8 + 3);
          *(void *)(v7 + 32) = *((void *)v8 + 4);
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          *(void *)(v7 + 56) = *((void *)v8 + 7);
          *(unsigned char *)(v7 + 64) = v8[64];
          uint64_t v297 = *((void *)v8 + 9);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((~v297 & 0xF000000000000007) != 0) {
            swift_retain();
          }
          uint64_t v269 = v7;
          *(void *)(v7 + 72) = v297;
          *(unsigned char *)(v7 + 80) = v8[80];
          *(void *)(v7 + 88) = *((void *)v8 + 11);
          uint64_t v270 = &qword_1EB88E9A0;
          uint64_t v271 = sub_1C0036630;
          goto LABEL_200;
        case 9u:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          *(void *)(v7 + 24) = *((void *)v8 + 3);
          *(void *)(v7 + 32) = *((void *)v8 + 4);
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          *(void *)(v7 + 56) = *((void *)v8 + 7);
          *(unsigned char *)(v7 + 64) = v8[64];
          uint64_t v298 = *((void *)v8 + 9);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((~v298 & 0xF000000000000007) != 0) {
            swift_retain();
          }
          uint64_t v269 = v7;
          *(void *)(v7 + 72) = v298;
          *(unsigned char *)(v7 + 80) = v8[80];
          *(void *)(v7 + 88) = *((void *)v8 + 11);
          uint64_t v270 = &qword_1EB88E998;
          uint64_t v271 = sub_1C00738F0;
          goto LABEL_200;
        case 0xAu:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          *(void *)(v7 + 24) = *((void *)v8 + 3);
          *(void *)(v7 + 32) = *((void *)v8 + 4);
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          *(void *)(v7 + 56) = *((void *)v8 + 7);
          *(unsigned char *)(v7 + 64) = v8[64];
          uint64_t v299 = *((void *)v8 + 9);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((~v299 & 0xF000000000000007) != 0) {
            swift_retain();
          }
          uint64_t v269 = v7;
          *(void *)(v7 + 72) = v299;
          *(unsigned char *)(v7 + 80) = v8[80];
          *(void *)(v7 + 88) = *((void *)v8 + 11);
          uint64_t v270 = &qword_1EB88E9B0;
          uint64_t v271 = sub_1C0084C58;
          goto LABEL_200;
        case 0xBu:
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          *(void *)(v7 + 24) = *((void *)v8 + 3);
          *(void *)(v7 + 32) = *((void *)v8 + 4);
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          *(void *)(v7 + 56) = *((void *)v8 + 7);
          *(unsigned char *)(v7 + 64) = v8[64];
          uint64_t v300 = *((void *)v8 + 9);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((~v300 & 0xF000000000000007) != 0) {
            swift_retain();
          }
          uint64_t v269 = v7;
          *(void *)(v7 + 72) = v300;
          *(unsigned char *)(v7 + 80) = v8[80];
          *(void *)(v7 + 88) = *((void *)v8 + 11);
          uint64_t v270 = &qword_1EB88E9A8;
          uint64_t v271 = sub_1C006F9DC;
LABEL_200:
          sub_1C0AF9C9C(0, v270, (void (*)(void))v271);
          uint64_t v302 = *(int *)(v301 + 64);
          int v303 = (void *)(v269 + v302);
LABEL_247:
          uint64_t v397 = &v8[v302];
          uint64_t v398 = sub_1C1518CDC();
          uint64_t v399 = *(void *)(v398 - 8);
          uint64_t v400 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v399 + 48);
          swift_bridgeObjectRetain();
          if (v400(v397, 1, v398))
          {
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
            memcpy(v303, v397, *(void *)(*(void *)(v401 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v399 + 16))(v303, v397, v398);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v399 + 56))(v303, 0, 1, v398);
          }
          break;
        default:
          uint64_t v797 = a3;
          *(void *)uint64_t v7 = *(void *)v8;
          *(void *)(v7 + 8) = *((void *)v8 + 1);
          *(void *)(v7 + 16) = *((void *)v8 + 2);
          *(void *)(v7 + 24) = *((void *)v8 + 3);
          *(void *)(v7 + 32) = *((void *)v8 + 4);
          uint64_t v88 = v7;
          *(void *)(v7 + 40) = *((void *)v8 + 5);
          *(void *)(v7 + 48) = *((void *)v8 + 6);
          *(void *)(v7 + 56) = *((void *)v8 + 7);
          *(unsigned char *)(v7 + 64) = v8[64];
          *(unsigned char *)(v7 + 65) = v8[65];
          *(unsigned char *)(v7 + 66) = v8[66];
          *(void *)(v7 + 72) = *((void *)v8 + 9);
          uint64_t v89 = &qword_1EB88E9C8;
LABEL_178:
          sub_1BFF71924(0, v89);
LABEL_179:
          uint64_t v287 = *(int *)(v285 + 64);
          v765 = (void *)(v88 + v287);
          uint64_t v280 = &v8[v287];
          uint64_t v288 = sub_1C1518CDC();
          uint64_t v289 = *(void *)(v288 - 8);
          uint64_t v290 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v289 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_181:
          swift_bridgeObjectRetain();
          if (v290(v280, 1, v288))
          {
LABEL_182:
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
            memcpy(v765, v280, *(void *)(*(void *)(v293 - 8) + 64));
            a3 = v797;
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v289 + 16))(v765, v280, v288);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v289 + 56))(v765, 0, 1, v288);
LABEL_184:
            a3 = v797;
          }
          break;
      }
      goto LABEL_250;
    case 0x1Au:
      uint64_t v90 = sub_1C151CA7C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v7, v8, v90);
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    case 0x1Cu:
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = *((void *)v8 + 1);
      *(void *)(v7 + 16) = *((void *)v8 + 2);
      *(void *)(v7 + 24) = *((void *)v8 + 3);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    case 0x1Fu:
      id v91 = *(id *)v8;
      id v92 = v91;
      *(void *)uint64_t v7 = v91;
      swift_storeEnumTagMultiPayload();
      goto LABEL_411;
    default:
      size_t v15 = *(void *)(v10 + 64);
      goto LABEL_8;
  }
  *(void *)(v7 + 40) = *((void *)v8 + 5);
  *(void *)(v7 + 48) = *((void *)v8 + 6);
  uint64_t v438 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v439 = v7 + v438;
  uint64_t v440 = &v8[v438];
  *(void *)(v7 + v438) = *(void *)&v8[v438];
  uint64_t v441 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  uint64_t v442 = (char *)(v439 + v441);
  uint64_t v443 = &v440[v441];
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v774 = v442;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v529 = a3;
      uint64_t v530 = type metadata accessor for PuzzleStatisticValue(0);
      int v531 = swift_getEnumCaseMultiPayload();
      if (v531 == 5)
      {
        uint64_t v532 = type metadata accessor for PuzzleStreak();
        uint64_t v533 = *(void *)(v532 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v533 + 48))(v443, 1, v532))
        {
LABEL_326:
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v774, v443, *(void *)(*(void *)(v534 - 8) + 64));
          goto LABEL_427;
        }
      }
      else
      {
        if (v531 != 4)
        {
          memcpy(v442, v443, *(void *)(*(void *)(v530 - 8) + 64));
          goto LABEL_428;
        }
        uint64_t v532 = type metadata accessor for PuzzleStreak();
        uint64_t v533 = *(void *)(v532 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v533 + 48))(v443, 1, v532)) {
          goto LABEL_326;
        }
      }
      uint64_t v682 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v682 - 8) + 16))(v774, v443, v682);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v533 + 56))(v774, 0, 1, v532);
LABEL_427:
      swift_storeEnumTagMultiPayload();
LABEL_428:
      uint64_t v683 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v684 = *(int *)(v683 + 20);
      v685 = &v774[v684];
      v686 = &v443[v684];
      int v687 = swift_getEnumCaseMultiPayload();
      if (v687 == 5)
      {
        uint64_t v688 = type metadata accessor for PuzzleStreak();
        uint64_t v689 = *(void *)(v688 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v689 + 48))(v686, 1, v688))
        {
LABEL_433:
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v685, v686, *(void *)(*(void *)(v690 - 8) + 64));
          goto LABEL_436;
        }
      }
      else
      {
        if (v687 != 4)
        {
          memcpy(v685, v686, *(void *)(*(void *)(v530 - 8) + 64));
          goto LABEL_437;
        }
        uint64_t v688 = type metadata accessor for PuzzleStreak();
        uint64_t v689 = *(void *)(v688 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v689 + 48))(v686, 1, v688)) {
          goto LABEL_433;
        }
      }
      uint64_t v691 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v691 - 8) + 16))(v685, v686, v691);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v689 + 56))(v685, 0, 1, v688);
LABEL_436:
      swift_storeEnumTagMultiPayload();
LABEL_437:
      uint64_t v692 = *(int *)(v683 + 24);
      v693 = &v774[v692];
      v694 = &v443[v692];
      int v695 = swift_getEnumCaseMultiPayload();
      if (v695 == 5)
      {
        uint64_t v696 = type metadata accessor for PuzzleStreak();
        uint64_t v697 = *(void *)(v696 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v697 + 48))(v694, 1, v696))
        {
LABEL_442:
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v693, v694, *(void *)(*(void *)(v698 - 8) + 64));
          goto LABEL_445;
        }
      }
      else
      {
        if (v695 != 4)
        {
          memcpy(v693, v694, *(void *)(*(void *)(v530 - 8) + 64));
          goto LABEL_446;
        }
        uint64_t v696 = type metadata accessor for PuzzleStreak();
        uint64_t v697 = *(void *)(v696 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v697 + 48))(v694, 1, v696)) {
          goto LABEL_442;
        }
      }
      uint64_t v699 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v699 - 8) + 16))(v693, v694, v699);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v697 + 56))(v693, 0, 1, v696);
LABEL_445:
      swift_storeEnumTagMultiPayload();
LABEL_446:
      a3 = v529;
      goto LABEL_447;
    case 2u:
      uint64_t v810 = a3;
      uint64_t v521 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v522 = *((void *)v521 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v522 + 48))(v443, 1, v521))
      {
        sub_1C0AF9C38(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
        memcpy(v774, v443, *(void *)(*(void *)(v523 - 8) + 64));
      }
      else
      {
        uint64_t v599 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v599 - 8) + 16))(v774, v443, v599);
        v600 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v601 = v600[5];
        v602 = &v774[v601];
        v603 = &v443[v601];
        *(void *)v602 = *(void *)v603;
        *((void *)v602 + 1) = *((void *)v603 + 1);
        uint64_t v604 = v600[6];
        v605 = &v774[v604];
        v606 = &v443[v604];
        *(void *)v605 = *(void *)v606;
        *((void *)v605 + 1) = *((void *)v606 + 1);
        v607 = (uint64_t *)(v606 + 16);
        unint64_t v608 = *((void *)v606 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v608 >> 60 == 15)
        {
          *((_OWORD *)v605 + 1) = *(_OWORD *)v607;
        }
        else
        {
          uint64_t v676 = *v607;
          sub_1BFE95820(*v607, v608);
          *((void *)v605 + 2) = v676;
          *((void *)v605 + 3) = v608;
        }
        *(void *)&v774[v600[7]] = *(void *)&v443[v600[7]];
        *(void *)&v774[v600[8]] = *(void *)&v443[v600[8]];
        *(void *)&v774[v521[5]] = *(void *)&v443[v521[5]];
        *(void *)&v774[v521[6]] = *(void *)&v443[v521[6]];
        uint64_t v677 = v521[7];
        v678 = &v774[v677];
        v679 = &v443[v677];
        *(void *)v678 = *(void *)v679;
        *((void *)v678 + 1) = *((void *)v679 + 1);
        v680 = *(void (**)(char *, void, uint64_t, int *))(v522 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v680(v774, 0, 1, v521);
      }
      goto LABEL_421;
    case 3u:
      uint64_t v810 = a3;
      *(void *)uint64_t v442 = *(void *)v443;
      uint64_t v535 = *((void *)v443 + 1);
      v442[16] = v443[16];
      *((void *)v442 + 1) = v535;
      v536 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v537 = v536[6];
      v538 = &v442[v537];
      v539 = &v443[v537];
      uint64_t v540 = type metadata accessor for PuzzleStreak();
      uint64_t v541 = *(void *)(v540 - 8);
      v542 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v541 + 48);
      if (v542(v539, 1, v540))
      {
        sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v538, v539, *(void *)(*(void *)(v543 - 8) + 64));
      }
      else
      {
        uint64_t v609 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v609 - 8) + 16))(v538, v539, v609);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v541 + 56))(v538, 0, 1, v540);
      }
      uint64_t v610 = v536[7];
      v611 = &v774[v610];
      v612 = &v443[v610];
      if (v542(&v443[v610], 1, v540))
      {
        sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v611, v612, *(void *)(*(void *)(v613 - 8) + 64));
      }
      else
      {
        uint64_t v627 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v627 - 8) + 16))(v611, v612, v627);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v541 + 56))(v611, 0, 1, v540);
      }
      uint64_t v628 = v536[8];
      v629 = &v774[v628];
      v630 = (long long *)&v443[v628];
      long long v631 = *v630;
      long long v632 = v630[1];
      *(_OWORD *)(v629 + 25) = *(long long *)((char *)v630 + 25);
      *(_OWORD *)v629 = v631;
      *((_OWORD *)v629 + 1) = v632;
      uint64_t v633 = v536[9];
      v634 = &v774[v633];
      v635 = (long long *)&v443[v633];
      long long v636 = *v635;
      long long v637 = v635[1];
      *(_OWORD *)(v634 + 25) = *(long long *)((char *)v635 + 25);
      *(_OWORD *)v634 = v636;
      *((_OWORD *)v634 + 1) = v637;
      uint64_t v638 = v536[10];
      v639 = &v774[v638];
      v640 = (long long *)&v443[v638];
      long long v641 = *v640;
      long long v642 = v640[1];
      *(_OWORD *)(v639 + 25) = *(long long *)((char *)v640 + 25);
      *(_OWORD *)v639 = v641;
      *((_OWORD *)v639 + 1) = v642;
LABEL_421:
      a3 = v810;
      goto LABEL_447;
    default:
      uint64_t v444 = type metadata accessor for PuzzleStatisticValue(0);
      int v445 = swift_getEnumCaseMultiPayload();
      if (v445 == 5)
      {
        uint64_t v446 = type metadata accessor for PuzzleStreak();
        uint64_t v447 = *(void *)(v446 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v447 + 48))(v443, 1, v446))
        {
LABEL_277:
          sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v774, v443, *(void *)(*(void *)(v448 - 8) + 64));
          goto LABEL_423;
        }
      }
      else
      {
        if (v445 != 4)
        {
          memcpy(v442, v443, *(void *)(*(void *)(v444 - 8) + 64));
          goto LABEL_447;
        }
        uint64_t v446 = type metadata accessor for PuzzleStreak();
        uint64_t v447 = *(void *)(v446 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v447 + 48))(v443, 1, v446)) {
          goto LABEL_277;
        }
      }
      uint64_t v681 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v681 - 8) + 16))(v774, v443, v681);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v447 + 56))(v774, 0, 1, v446);
LABEL_423:
      swift_storeEnumTagMultiPayload();
LABEL_447:
      swift_storeEnumTagMultiPayload();
LABEL_250:
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
LABEL_411:
      uint64_t v662 = *(int *)(a3 + 28);
      uint64_t v663 = (uint64_t)a1 + v662;
      v664 = (char *)v4 + v662;
      int v665 = *((unsigned __int8 *)a1 + v662 + 16);
      int v666 = *((unsigned __int8 *)v4 + v662 + 16);
      if (v665 == 255)
      {
        if (v666 == 255)
        {
          long long v668 = *(_OWORD *)v664;
          *(unsigned char *)(v663 + 16) = v664[16];
          *(_OWORD *)uint64_t v663 = v668;
        }
        else
        {
          char v672 = v666 & 1;
          uint64_t v673 = *(void *)v664;
          uint64_t v674 = *((void *)v664 + 1);
          sub_1C09C8BD8();
          *(void *)uint64_t v663 = v673;
          *(void *)(v663 + 8) = v674;
          *(unsigned char *)(v663 + 16) = v672;
        }
      }
      else if (v666 == 255)
      {
        sub_1C0B184B0(v663);
        char v667 = v664[16];
        *(_OWORD *)uint64_t v663 = *(_OWORD *)v664;
        *(unsigned char *)(v663 + 16) = v667;
      }
      else
      {
        char v669 = v666 & 1;
        uint64_t v670 = *(void *)v664;
        uint64_t v671 = *((void *)v664 + 1);
        sub_1C09C8BD8();
        *(void *)uint64_t v663 = v670;
        *(void *)(v663 + 8) = v671;
        *(unsigned char *)(v663 + 16) = v669;
        sub_1C02F6038();
      }
      return a1;
  }
}

uint64_t sub_1C0B184B0(uint64_t a1)
{
  return a1;
}

_OWORD *sub_1C0B184E4(_OWORD *a1, _OWORD *a2, int *a3)
{
  unint64_t v3 = a3;
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  int v8 = (_OWORD *)((char *)a1 + v7);
  uint64_t v9 = (_OWORD *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for FormatInspectionItem.Value(0);
  uint64_t v262 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v262 + 48))(v9, 1, v10))
  {
    sub_1C0AF9C38(0, &qword_1EA1A1FC0, type metadata accessor for FormatInspectionItem.Value, MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_129;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0xCu:
      uint64_t v12 = sub_1C1515FDC();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
      goto LABEL_127;
    case 0x11u:
      uint64_t v13 = type metadata accessor for FeedGroupItem();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
          long long v14 = v9[1];
          *int v8 = *v9;
          v8[1] = v14;
          *((unsigned char *)v8 + 32) = *((unsigned char *)v9 + 32);
          size_t v15 = (int *)type metadata accessor for FeedWeather(0);
          uint64_t v16 = v15[7];
          long long v17 = (char *)v8 + v16;
          uint64_t v18 = (char *)v9 + v16;
          uint64_t v19 = sub_1C151E2BC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
          uint64_t v258 = v15;
          *((unsigned char *)v8 + v15[8]) = *((unsigned char *)v9 + v15[8]);
          uint64_t v20 = v15[9];
          long long v21 = (char *)v8 + v20;
          __dstd = (char *)v8 + v20;
          long long v22 = (char *)v9 + v20;
          sub_1C0AF9C38(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
          uint64_t v251 = v3;
          uint64_t v24 = v23;
          uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
          v25(v21, v22, v23);
          uint64_t v26 = (int *)type metadata accessor for FeedWeather.Temperature(0);
          v25(&__dstd[v26[5]], &v22[v26[5]], v24);
          v25(&__dstd[v26[6]], &v22[v26[6]], v24);
          uint64_t v27 = v24;
          unint64_t v3 = v251;
          v25(&__dstd[v26[7]], &v22[v26[7]], v27);
          *(_OWORD *)((char *)v8 + v258[10]) = *(_OWORD *)((char *)v9 + v258[10]);
          goto LABEL_126;
        case 5u:
          uint64_t v252 = v3;
          *int v8 = *v9;
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((unsigned char *)v8 + 24) = *((unsigned char *)v9 + 24);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
          *((unsigned char *)v8 + 56) = *((unsigned char *)v9 + 56);
          uint64_t v259 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v32 = v259[10];
          uint64_t v33 = (char *)v8 + v32;
          uint64_t v34 = (char *)v9 + v32;
          *uint64_t v33 = *((unsigned char *)v9 + v32);
          v33[1] = *((unsigned char *)v9 + v32 + 1);
          uint64_t v35 = type metadata accessor for FeedHeadline.State(0);
          uint64_t v36 = *(int *)(v35 + 24);
          __dst = &v33[v36];
          uint64_t v248 = (int *)v35;
          uint64_t v37 = &v34[v36];
          uint64_t v38 = (int *)type metadata accessor for SharedItem();
          uint64_t v239 = *((void *)v38 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v239 + 48))(v37, 1, v38))
          {
            uint64_t v39 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v37, *(void *)(*(void *)(v39 - 8) + 64));
          }
          else
          {
            uint64_t v115 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 32))(__dst, v37, v115);
            __dst[v38[5]] = v37[v38[5]];
            *(void *)&__dst[v38[6]] = *(void *)&v37[v38[6]];
            uint64_t v116 = v38[7];
            uint64_t v238 = &__dst[v116];
            long long v117 = &v37[v116];
            uint64_t v118 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v238, v117, v118);
            (*(void (**)(char *, void, uint64_t, int *))(v239 + 56))(__dst, 0, 1, v38);
          }
          v33[v248[7]] = v34[v248[7]];
          v33[v248[8]] = v34[v248[8]];
          v33[v248[9]] = v34[v248[9]];
          v33[v248[10]] = v34[v248[10]];
          uint64_t v119 = v259[11];
          uint64_t v120 = (char *)v8 + v119;
          uint64_t v121 = (char *)v9 + v119;
          uint64_t v122 = sub_1C151D2DC();
          uint64_t v123 = *(void *)(v122 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v121, 1, v122))
          {
            sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
            memcpy(v120, v121, *(void *)(*(void *)(v124 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v120, v121, v122);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
          }
          unint64_t v3 = v252;
          *(_OWORD *)((char *)v8 + v259[12]) = *(_OWORD *)((char *)v9 + v259[12]);
          uint64_t v132 = v259[13];
          uint64_t v133 = *(void *)((char *)v9 + v132);
          if (v133 == 2) {
            uint64_t v133 = 2;
          }
          *(void *)((char *)v8 + v132) = v133;
          *(void *)((char *)v8 + v259[14]) = *(void *)((char *)v9 + v259[14]);
          goto LABEL_126;
        case 6u:
          uint64_t v40 = *((void *)v9 + 1);
          *(void *)int v8 = *(void *)v9;
          *((void *)v8 + 1) = v40;
          *((unsigned char *)v8 + 16) = *((unsigned char *)v9 + 16);
          *(_OWORD *)((char *)v8 + 24) = *(_OWORD *)((char *)v9 + 24);
          *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
          uint64_t v41 = type metadata accessor for FeedWebEmbed();
          uint64_t v42 = *(int *)(v41 + 32);
          uint64_t v253 = (char *)v9 + v42;
          uint64_t v260 = (char *)v8 + v42;
          uint64_t v43 = sub_1C1515FDC();
          uint64_t v44 = *(void *)(v43 - 8);
          __dsta = *(void (**)(char *, char *, uint64_t))(v44 + 32);
          __dsta(v260, v253, v43);
          uint64_t v45 = *(int *)(v41 + 36);
          uint64_t v254 = (char *)v8 + v45;
          uint64_t v261 = (int *)v41;
          uint64_t v46 = (char *)v9 + v45;
          uint64_t v249 = (void *)v43;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))((char *)v9 + v45, 1, v43))
          {
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
            memcpy(v254, v46, *(void *)(*(void *)(v47 - 8) + 64));
          }
          else
          {
            __dsta(v254, v46, v43);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v254, 0, 1, v43);
          }
          uint64_t v257 = v3;
          *(void *)((char *)v8 + v261[10]) = *(void *)((char *)v9 + v261[10]);
          *(void *)((char *)v8 + v261[11]) = *(void *)((char *)v9 + v261[11]);
          uint64_t v125 = v261[12];
          uint64_t v126 = (_OWORD *)((char *)v8 + v125);
          uint64_t v127 = (_OWORD *)((char *)v9 + v125);
          uint64_t v128 = type metadata accessor for FeedHeadline(0);
          uint64_t v129 = *(void *)(v128 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v129 + 48))(v127, 1, v128))
          {
            sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
            memcpy(v126, v127, *(void *)(*(void *)(v130 - 8) + 64));
          }
          else
          {
            uint64_t v234 = v129;
            uint64_t v235 = v126;
            *uint64_t v126 = *v127;
            *((void *)v126 + 2) = *((void *)v127 + 2);
            *((unsigned char *)v126 + 24) = *((unsigned char *)v127 + 24);
            *((void *)v126 + 4) = *((void *)v127 + 4);
            *(_OWORD *)((char *)v126 + 40) = *(_OWORD *)((char *)v127 + 40);
            *((unsigned char *)v126 + 56) = *((unsigned char *)v127 + 56);
            uint64_t v240 = (int *)v128;
            uint64_t v134 = *(int *)(v128 + 40);
            uint64_t v135 = (char *)v126 + v134;
            int v136 = (char *)v127 + v134;
            *uint64_t v135 = *((unsigned char *)v127 + v134);
            v135[1] = *((unsigned char *)v127 + v134 + 1);
            uint64_t v137 = type metadata accessor for FeedHeadline.State(0);
            uint64_t v138 = *(int *)(v137 + 24);
            uint64_t v231 = &v135[v138];
            uint64_t v232 = (int *)v137;
            char v139 = &v136[v138];
            uint64_t v140 = type metadata accessor for SharedItem();
            uint64_t v229 = *(void *)(v140 - 8);
            uint64_t v230 = (int *)v140;
            uint64_t v236 = v127;
            if ((*(unsigned int (**)(char *, uint64_t))(v229 + 48))(v139, 1))
            {
              uint64_t v141 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v231, v139, *(void *)(*(void *)(v141 - 8) + 64));
            }
            else
            {
              uint64_t v158 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v231, v139, v158);
              v231[v230[5]] = v139[v230[5]];
              *(void *)&v231[v230[6]] = *(void *)&v139[v230[6]];
              __dsta(&v231[v230[7]], &v139[v230[7]], (uint64_t)v249);
              (*(void (**)(char *, void, uint64_t, int *))(v229 + 56))(v231, 0, 1, v230);
            }
            v135[v232[7]] = v136[v232[7]];
            v135[v232[8]] = v136[v232[8]];
            v135[v232[9]] = v136[v232[9]];
            v135[v232[10]] = v136[v232[10]];
            uint64_t v159 = v240[11];
            uint64_t v233 = (char *)v235 + v159;
            uint64_t v160 = (char *)v127 + v159;
            uint64_t v161 = sub_1C151D2DC();
            uint64_t v162 = *(void *)(v161 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48))(v160, 1, v161))
            {
              sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
              memcpy(v233, v160, *(void *)(*(void *)(v163 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v233, v160, v161);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v162 + 56))(v233, 0, 1, v161);
            }
            *(_OWORD *)((char *)v235 + v240[12]) = *(_OWORD *)((char *)v236 + v240[12]);
            uint64_t v164 = v240[13];
            uint64_t v165 = *(void *)((char *)v236 + v164);
            if (v165 == 2) {
              uint64_t v165 = 2;
            }
            *(void *)((char *)v235 + v164) = v165;
            *(void *)((char *)v235 + v240[14]) = *(void *)((char *)v236 + v240[14]);
            (*(void (**)(_OWORD *, void, uint64_t))(v234 + 56))(v235, 0, 1);
          }
          uint64_t v166 = v261[13];
          uint64_t v167 = (_OWORD *)((char *)v8 + v166);
          uint64_t v168 = (_OWORD *)((char *)v9 + v166);
          uint64_t v169 = type metadata accessor for WebEmbedDataVisualization();
          uint64_t v170 = *(void *)(v169 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v170 + 48))(v168, 1, v169))
          {
            sub_1C0AF9C38(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
            memcpy(v167, v168, *(void *)(*(void *)(v171 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              _OWORD *v167 = *v168;
              uint64_t v172 = type metadata accessor for GenericDataVisualization();
              __dsta((char *)v167 + *(int *)(v172 + 20), (char *)v168 + *(int *)(v172 + 20), (uint64_t)v249);
              *(void *)((char *)v167 + *(int *)(v172 + 24)) = *(void *)((char *)v168 + *(int *)(v172 + 24));
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v167, v168, *(void *)(v170 + 64));
            }
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v170 + 56))(v167, 0, 1, v169);
          }
          *((unsigned char *)v8 + v261[14]) = *((unsigned char *)v9 + v261[14]);
          swift_storeEnumTagMultiPayload();
          unint64_t v3 = v257;
          goto LABEL_127;
        case 0xBu:
          uint64_t v255 = v3;
          uint64_t v48 = *((void *)v9 + 1);
          *(void *)int v8 = *(void *)v9;
          *((void *)v8 + 1) = v48;
          *((unsigned char *)v8 + 16) = *((unsigned char *)v9 + 16);
          *(_OWORD *)((char *)v8 + 24) = *(_OWORD *)((char *)v9 + 24);
          *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
          uint64_t v49 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          long long v50 = (char *)v8 + v49;
          long long v51 = (void *)((char *)v9 + v49);
          *(void *)((char *)v8 + v49) = *v51;
          uint64_t v52 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
          long long v53 = &v50[v52];
          uint64_t v54 = (void *)((char *)v51 + v52);
          type metadata accessor for PuzzleStatisticCategory(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v146 = type metadata accessor for PuzzleStatisticValue(0);
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              uint64_t v241 = v146;
              if (EnumCaseMultiPayload == 5)
              {
                uint64_t v198 = type metadata accessor for PuzzleStreak();
                uint64_t v199 = *(void *)(v198 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v199 + 48))(v54, 1, v198))
                {
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v53, v54, *(void *)(*(void *)(v200 - 8) + 64));
                }
                else
                {
                  uint64_t v203 = sub_1C151555C();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v203 - 8) + 32))(v53, v54, v203);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v199 + 56))(v53, 0, 1, v198);
                }
                uint64_t v146 = v241;
              }
              else
              {
                if (EnumCaseMultiPayload != 4)
                {
                  memcpy(v53, v54, *(void *)(*(void *)(v146 - 8) + 64));
                  goto LABEL_104;
                }
                uint64_t v148 = type metadata accessor for PuzzleStreak();
                uint64_t v149 = *(void *)(v148 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v149 + 48))(v54, 1, v148))
                {
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v53, v54, *(void *)(*(void *)(v150 - 8) + 64));
                }
                else
                {
                  uint64_t v201 = sub_1C151555C();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v201 - 8) + 32))(v53, v54, v201);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v53, 0, 1, v148);
                }
                uint64_t v146 = v241;
              }
              swift_storeEnumTagMultiPayload();
LABEL_104:
              uint64_t v204 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
              uint64_t v205 = *(int *)(v204 + 20);
              __dstc = v53;
              uint64_t v206 = &v53[v205];
              uint64_t v207 = (char *)v54 + v205;
              int v208 = swift_getEnumCaseMultiPayload();
              if (v208 == 5)
              {
                uint64_t v212 = type metadata accessor for PuzzleStreak();
                uint64_t v213 = *(void *)(v212 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v213 + 48))(v207, 1, v212))
                {
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v206, v207, *(void *)(*(void *)(v214 - 8) + 64));
                }
                else
                {
                  uint64_t v216 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 32))(v206, v207, v216);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v213 + 56))(v206, 0, 1, v212);
                }
                uint64_t v146 = v241;
              }
              else
              {
                if (v208 != 4)
                {
                  memcpy(v206, v207, *(void *)(*(void *)(v146 - 8) + 64));
                  goto LABEL_116;
                }
                uint64_t v209 = type metadata accessor for PuzzleStreak();
                uint64_t v210 = *(void *)(v209 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v210 + 48))(v207, 1, v209))
                {
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v206, v207, *(void *)(*(void *)(v211 - 8) + 64));
                }
                else
                {
                  uint64_t v215 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 32))(v206, v207, v215);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v210 + 56))(v206, 0, 1, v209);
                }
                uint64_t v146 = v241;
              }
              swift_storeEnumTagMultiPayload();
LABEL_116:
              uint64_t v217 = *(int *)(v204 + 24);
              uint64_t v218 = &__dstc[v217];
              uint64_t v219 = (char *)v54 + v217;
              int v220 = swift_getEnumCaseMultiPayload();
              if (v220 == 5)
              {
                uint64_t v221 = type metadata accessor for PuzzleStreak();
                uint64_t v222 = *(void *)(v221 - 8);
                unint64_t v3 = v255;
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v222 + 48))(v219, 1, v221))
                {
LABEL_119:
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v218, v219, *(void *)(*(void *)(v223 - 8) + 64));
                  goto LABEL_124;
                }
              }
              else
              {
                unint64_t v3 = v255;
                if (v220 != 4)
                {
                  memcpy(v218, v219, *(void *)(*(void *)(v146 - 8) + 64));
                  goto LABEL_125;
                }
                uint64_t v221 = type metadata accessor for PuzzleStreak();
                uint64_t v222 = *(void *)(v221 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v222 + 48))(v219, 1, v221)) {
                  goto LABEL_119;
                }
              }
              uint64_t v224 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v218, v219, v224);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v222 + 56))(v218, 0, 1, v221);
LABEL_124:
              swift_storeEnumTagMultiPayload();
              goto LABEL_125;
            case 2u:
              uint64_t v142 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
              uint64_t v143 = *((void *)v142 - 1);
              if ((*(unsigned int (**)(void *, uint64_t, int *))(v143 + 48))(v54, 1, v142))
              {
                sub_1C0AF9C38(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
                size_t v145 = *(void *)(*(void *)(v144 - 8) + 64);
                goto LABEL_91;
              }
              uint64_t v173 = sub_1C151631C();
              (*(void (**)(char *, void *, uint64_t))(*(void *)(v173 - 8) + 32))(v53, v54, v173);
              uint64_t v174 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
              *(_OWORD *)&v53[v174[5]] = *(_OWORD *)((char *)v54 + v174[5]);
              uint64_t v175 = v174[6];
              uint64_t v176 = &v53[v175];
              uint64_t v177 = (_OWORD *)((char *)v54 + v175);
              long long v178 = v177[1];
              *(_OWORD *)uint64_t v176 = *v177;
              *((_OWORD *)v176 + 1) = v178;
              *(void *)&v53[v174[7]] = *(void *)((char *)v54 + v174[7]);
              *(void *)&v53[v174[8]] = *(void *)((char *)v54 + v174[8]);
              *(void *)&v53[v142[5]] = *(void *)((char *)v54 + v142[5]);
              *(void *)&v53[v142[6]] = *(void *)((char *)v54 + v142[6]);
              *(_OWORD *)&v53[v142[7]] = *(_OWORD *)((char *)v54 + v142[7]);
              (*(void (**)(char *, void, uint64_t, int *))(v143 + 56))(v53, 0, 1, v142);
              goto LABEL_100;
            case 3u:
              uint64_t v151 = v54[1];
              *(void *)long long v53 = *v54;
              *((void *)v53 + 1) = v151;
              v53[16] = *((unsigned char *)v54 + 16);
              uint64_t v242 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
              __dstb = v53;
              uint64_t v152 = v242[6];
              uint64_t v153 = &v53[v152];
              uint64_t v154 = (char *)v54 + v152;
              uint64_t v155 = type metadata accessor for PuzzleStreak();
              uint64_t v156 = *(void *)(v155 - 8);
              unint64_t v237 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v156 + 48);
              if (v237(v154, 1, v155))
              {
                sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v153, v154, *(void *)(*(void *)(v157 - 8) + 64));
              }
              else
              {
                uint64_t v179 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 32))(v153, v154, v179);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v153, 0, 1, v155);
              }
              uint64_t v180 = v242[7];
              uint64_t v181 = &__dstb[v180];
              uint64_t v182 = (char *)v54 + v180;
              if (v237((char *)v54 + v180, 1, v155))
              {
                sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v181, v182, *(void *)(*(void *)(v183 - 8) + 64));
              }
              else
              {
                uint64_t v184 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 32))(v181, v182, v184);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v181, 0, 1, v155);
              }
              uint64_t v185 = v242[8];
              uint64_t v186 = &__dstb[v185];
              uint64_t v187 = (_OWORD *)((char *)v54 + v185);
              long long v188 = v187[1];
              *(_OWORD *)uint64_t v186 = *v187;
              *((_OWORD *)v186 + 1) = v188;
              *(_OWORD *)(v186 + 25) = *(_OWORD *)((char *)v187 + 25);
              uint64_t v189 = v242[9];
              uint64_t v190 = &__dstb[v189];
              uint64_t v191 = (_OWORD *)((char *)v54 + v189);
              *(_OWORD *)(v190 + 25) = *(_OWORD *)((char *)v191 + 25);
              long long v192 = v191[1];
              *(_OWORD *)uint64_t v190 = *v191;
              *((_OWORD *)v190 + 1) = v192;
              uint64_t v193 = v242[10];
              long long v194 = &__dstb[v193];
              long long v195 = (_OWORD *)((char *)v54 + v193);
              long long v196 = v195[1];
              *(_OWORD *)long long v194 = *v195;
              *((_OWORD *)v194 + 1) = v196;
              *(_OWORD *)(v194 + 25) = *(_OWORD *)((char *)v195 + 25);
              unint64_t v3 = v255;
              goto LABEL_125;
            default:
              uint64_t v55 = type metadata accessor for PuzzleStatisticValue(0);
              int v56 = swift_getEnumCaseMultiPayload();
              if (v56 == 5)
              {
                uint64_t v57 = type metadata accessor for PuzzleStreak();
                uint64_t v58 = *(void *)(v57 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v58 + 48))(v54, 1, v57))
                {
LABEL_89:
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v53, v54, *(void *)(*(void *)(v197 - 8) + 64));
LABEL_99:
                  swift_storeEnumTagMultiPayload();
                  goto LABEL_100;
                }
LABEL_98:
                uint64_t v202 = sub_1C151555C();
                (*(void (**)(char *, void *, uint64_t))(*(void *)(v202 - 8) + 32))(v53, v54, v202);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v53, 0, 1, v57);
                goto LABEL_99;
              }
              if (v56 == 4)
              {
                uint64_t v57 = type metadata accessor for PuzzleStreak();
                uint64_t v58 = *(void *)(v57 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v58 + 48))(v54, 1, v57)) {
                  goto LABEL_89;
                }
                goto LABEL_98;
              }
              size_t v145 = *(void *)(*(void *)(v55 - 8) + 64);
LABEL_91:
              memcpy(v53, v54, v145);
LABEL_100:
              unint64_t v3 = v255;
LABEL_125:
              swift_storeEnumTagMultiPayload();
LABEL_126:
              swift_storeEnumTagMultiPayload();
LABEL_127:
              swift_storeEnumTagMultiPayload();
LABEL_128:
              (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v262 + 56))(v8, 0, 1, v10);
LABEL_129:
              uint64_t v225 = v3[7];
              uint64_t v226 = (char *)a1 + v225;
              id v227 = (char *)a2 + v225;
              *(_OWORD *)uint64_t v226 = *(_OWORD *)v227;
              v226[16] = v227[16];
              return a1;
          }
        case 0xCu:
          *int v8 = *v9;
          uint64_t v59 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
          uint64_t v60 = (char *)v8 + v59;
          uint64_t v61 = (char *)v9 + v59;
          uint64_t v62 = sub_1C151D6DC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
          goto LABEL_126;
        default:
          memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
          goto LABEL_127;
      }
    case 0x18u:
      type metadata accessor for FormatPropertyDefinition(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          long long v63 = v9[1];
          *int v8 = *v9;
          v8[1] = v63;
          long long v64 = v9[3];
          v8[2] = v9[2];
          v8[3] = v64;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
          *((void *)v8 + 11) = *((void *)v9 + 11);
          sub_1C0AF9C9C(0, &qword_1EB88E9B8, (void (*)(void))sub_1C003F2E8);
          goto LABEL_23;
        case 2u:
          id v256 = v3;
          long long v74 = v9[1];
          *int v8 = *v9;
          v8[1] = v74;
          long long v75 = v9[3];
          v8[2] = v9[2];
          v8[3] = v75;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          sub_1BFF71B30();
          uint64_t v77 = v76;
          uint64_t v78 = v76[13];
          unint64_t v250 = (char *)v8 + v78;
          long long v79 = (char *)v9 + v78;
          uint64_t v80 = sub_1C151631C();
          uint64_t v81 = *(void *)(v80 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80)) {
            goto LABEL_51;
          }
          long long v82 = &qword_1EB871180;
          long long v83 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
          goto LABEL_34;
        case 3u:
          long long v84 = v9[1];
          *int v8 = *v9;
          v8[1] = v84;
          long long v85 = v9[3];
          v8[2] = v9[2];
          v8[3] = v85;
          v8[4] = v9[4];
          *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
          *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
          *((void *)v8 + 13) = *((void *)v9 + 13);
          *((unsigned char *)v8 + 112) = *((unsigned char *)v9 + 112);
          *((void *)v8 + 15) = *((void *)v9 + 15);
          uint64_t v86 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
          goto LABEL_41;
        case 4u:
          long long v87 = v9[1];
          *int v8 = *v9;
          v8[1] = v87;
          long long v88 = v9[3];
          v8[2] = v9[2];
          v8[3] = v88;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((_WORD *)v8 + 40) = *((_WORD *)v9 + 40);
          *((void *)v8 + 11) = *((void *)v9 + 11);
          uint64_t v89 = &qword_1EB88E990;
          uint64_t v90 = sub_1C0092008;
          goto LABEL_39;
        case 5u:
          long long v91 = v9[1];
          *int v8 = *v9;
          v8[1] = v91;
          long long v92 = v9[3];
          v8[2] = v9[2];
          v8[3] = v92;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((_WORD *)v8 + 40) = *((_WORD *)v9 + 40);
          *((void *)v8 + 11) = *((void *)v9 + 11);
          uint64_t v93 = &qword_1EB88E9D0;
          goto LABEL_31;
        case 6u:
          long long v94 = v9[1];
          *int v8 = *v9;
          v8[1] = v94;
          long long v95 = v9[3];
          v8[2] = v9[2];
          v8[3] = v95;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
          *((unsigned char *)v8 + 88) = *((unsigned char *)v9 + 88);
          *((void *)v8 + 12) = *((void *)v9 + 12);
          uint64_t v93 = &qword_1EB88E9C0;
LABEL_31:
          sub_1BFF71924(0, v93);
          goto LABEL_40;
        case 7u:
          id v256 = v3;
          long long v97 = v9[1];
          *int v8 = *v9;
          v8[1] = v97;
          long long v98 = v9[3];
          v8[2] = v9[2];
          v8[3] = v98;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          sub_1BFF719C0();
          uint64_t v77 = v99;
          uint64_t v100 = v99[13];
          unint64_t v250 = (char *)v8 + v100;
          long long v79 = (char *)v9 + v100;
          uint64_t v80 = sub_1C1515FDC();
          uint64_t v81 = *(void *)(v80 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
          {
            long long v82 = &qword_1EB8948A0;
            long long v83 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
LABEL_34:
            sub_1C0AF9C38(0, (unint64_t *)v82, v83, MEMORY[0x1E4FBB718]);
            memcpy(v250, v79, *(void *)(*(void *)(v101 - 8) + 64));
          }
          else
          {
LABEL_51:
            (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v250, v79, v80);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v250, 0, 1, v80);
          }
          *((unsigned char *)v8 + v77[14]) = *((unsigned char *)v9 + v77[14]);
          *(void *)((char *)v8 + v77[15]) = *(void *)((char *)v9 + v77[15]);
          uint64_t v131 = v77[16];
          long long v66 = (char *)v8 + v131;
          long long v67 = (char *)v9 + v131;
          uint64_t v68 = sub_1C1518CDC();
          uint64_t v69 = *(void *)(v68 - 8);
          unint64_t v3 = v256;
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68)) {
            goto LABEL_53;
          }
          goto LABEL_24;
        case 8u:
          long long v102 = v9[1];
          *int v8 = *v9;
          v8[1] = v102;
          long long v103 = v9[3];
          v8[2] = v9[2];
          v8[3] = v103;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
          *((void *)v8 + 11) = *((void *)v9 + 11);
          uint64_t v89 = &qword_1EB88E9A0;
          uint64_t v90 = sub_1C0036630;
          goto LABEL_39;
        case 9u:
          long long v104 = v9[1];
          *int v8 = *v9;
          v8[1] = v104;
          long long v105 = v9[3];
          v8[2] = v9[2];
          v8[3] = v105;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
          *((void *)v8 + 11) = *((void *)v9 + 11);
          uint64_t v89 = &qword_1EB88E998;
          uint64_t v90 = sub_1C00738F0;
          goto LABEL_39;
        case 0xAu:
          long long v106 = v9[1];
          *int v8 = *v9;
          v8[1] = v106;
          long long v107 = v9[3];
          v8[2] = v9[2];
          v8[3] = v107;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
          *((void *)v8 + 11) = *((void *)v9 + 11);
          uint64_t v89 = &qword_1EB88E9B0;
          uint64_t v90 = sub_1C0084C58;
          goto LABEL_39;
        case 0xBu:
          long long v108 = v9[1];
          *int v8 = *v9;
          v8[1] = v108;
          long long v109 = v9[3];
          v8[2] = v9[2];
          v8[3] = v109;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
          *((void *)v8 + 11) = *((void *)v9 + 11);
          uint64_t v89 = &qword_1EB88E9A8;
          uint64_t v90 = sub_1C006F9DC;
LABEL_39:
          sub_1C0AF9C9C(0, v89, (void (*)(void))v90);
LABEL_40:
          uint64_t v86 = *(int *)(v96 + 64);
LABEL_41:
          uint64_t v110 = (char *)v8 + v86;
          long long v111 = (char *)v9 + v86;
          uint64_t v112 = sub_1C1518CDC();
          uint64_t v113 = *(void *)(v112 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v111, 1, v112))
          {
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
            size_t v71 = *(void *)(*(void *)(v114 - 8) + 64);
            long long v72 = v110;
            long long v73 = v111;
            goto LABEL_43;
          }
          (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v110, v111, v112);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v110, 0, 1, v112);
          break;
        default:
          long long v28 = v9[1];
          *int v8 = *v9;
          v8[1] = v28;
          long long v29 = v9[3];
          v8[2] = v9[2];
          v8[3] = v29;
          *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
          *(_WORD *)((char *)v8 + 65) = *(_WORD *)((char *)v9 + 65);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          sub_1BFF71924(0, &qword_1EB88E9C8);
LABEL_23:
          uint64_t v65 = *(int *)(v30 + 64);
          long long v66 = (char *)v8 + v65;
          long long v67 = (char *)v9 + v65;
          uint64_t v68 = sub_1C1518CDC();
          uint64_t v69 = *(void *)(v68 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
          {
LABEL_24:
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
            size_t v71 = *(void *)(*(void *)(v70 - 8) + 64);
            long long v72 = v66;
            long long v73 = v67;
LABEL_43:
            memcpy(v72, v73, v71);
          }
          else
          {
LABEL_53:
            (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v66, v67, v68);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
          }
          break;
      }
      goto LABEL_126;
    case 0x1Au:
      uint64_t v31 = sub_1C151CA7C();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v31 - 8) + 32))(v8, v9, v31);
      goto LABEL_127;
    default:
      memcpy(v8, v9, *(void *)(v262 + 64));
      goto LABEL_128;
  }
}

void *sub_1C0B1ACF8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (_OWORD *)((char *)a1 + v8);
  uint64_t v10 = (_OWORD *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for FormatInspectionItem.Value(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_1C0B02B98((uint64_t)v9, type metadata accessor for FormatInspectionItem.Value);
LABEL_7:
      sub_1C0AF9C38(0, &qword_1EA1A1FC0, type metadata accessor for FormatInspectionItem.Value, MEMORY[0x1E4FBB718]);
      size_t v18 = *(void *)(*(void *)(v17 - 8) + 64);
LABEL_8:
      memcpy(v9, v10, v18);
      goto LABEL_219;
    }
    if (a1 == a2) {
      goto LABEL_219;
    }
    sub_1C0B02B98((uint64_t)v9, type metadata accessor for FormatInspectionItem.Value);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0xCu:
        uint64_t v19 = sub_1C1515FDC();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v19 - 8) + 32))(v9, v10, v19);
        swift_storeEnumTagMultiPayload();
        goto LABEL_219;
      case 0x11u:
        uint64_t v38 = type metadata accessor for FeedGroupItem();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
            long long v39 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v39;
            *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
            uint64_t v40 = (int *)type metadata accessor for FeedWeather(0);
            uint64_t v41 = v40[7];
            uint64_t v42 = (char *)v9 + v41;
            uint64_t v43 = (char *)v10 + v41;
            uint64_t v44 = sub_1C151E2BC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
            *((unsigned char *)v9 + v40[8]) = *((unsigned char *)v10 + v40[8]);
            uint64_t v45 = v40[9];
            uint64_t v46 = (char *)v9 + v45;
            __dstf = (char *)v9 + v45;
            uint64_t v47 = (char *)v10 + v45;
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
            uint64_t v488 = a3;
            uint64_t v49 = v48;
            long long v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32);
            v50(v46, v47, v48);
            long long v51 = (int *)type metadata accessor for FeedWeather.Temperature(0);
            v50(&__dstf[v51[5]], &v47[v51[5]], v49);
            v50(&__dstf[v51[6]], &v47[v51[6]], v49);
            uint64_t v52 = v49;
            a3 = v488;
            v50(&__dstf[v51[7]], &v47[v51[7]], v52);
            *(_OWORD *)((char *)v9 + v40[10]) = *(_OWORD *)((char *)v10 + v40[10]);
            goto LABEL_255;
          case 5u:
            uint64_t v492 = a3;
            *uint64_t v9 = *v10;
            *((void *)v9 + 2) = *((void *)v10 + 2);
            *((unsigned char *)v9 + 24) = *((unsigned char *)v10 + 24);
            *((void *)v9 + 4) = *((void *)v10 + 4);
            *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
            *((unsigned char *)v9 + 56) = *((unsigned char *)v10 + 56);
            uint64_t v485 = (int *)type metadata accessor for FeedHeadline(0);
            uint64_t v132 = v485[10];
            uint64_t v133 = (char *)v9 + v132;
            uint64_t v134 = (char *)v10 + v132;
            *uint64_t v133 = *((unsigned char *)v10 + v132);
            v133[1] = *((unsigned char *)v10 + v132 + 1);
            uint64_t v135 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v136 = v135[6];
            __dstc = &v133[v136];
            uint64_t v137 = &v134[v136];
            uint64_t v138 = (int *)type metadata accessor for SharedItem();
            uint64_t v465 = *((void *)v138 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v465 + 48))(v137, 1, v138))
            {
              uint64_t v139 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(__dstc, v137, *(void *)(*(void *)(v139 - 8) + 64));
            }
            else
            {
              uint64_t v249 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v249 - 8) + 32))(__dstc, v137, v249);
              __dstc[v138[5]] = v137[v138[5]];
              *(void *)&__dstc[v138[6]] = *(void *)&v137[v138[6]];
              uint64_t v250 = v138[7];
              uint64_t v458 = &__dstc[v250];
              uint64_t v251 = &v137[v250];
              uint64_t v252 = sub_1C1515FDC();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v252 - 8) + 32))(v458, v251, v252);
              (*(void (**)(char *, void, uint64_t, int *))(v465 + 56))(__dstc, 0, 1, v138);
            }
            v133[v135[7]] = v134[v135[7]];
            v133[v135[8]] = v134[v135[8]];
            v133[v135[9]] = v134[v135[9]];
            v133[v135[10]] = v134[v135[10]];
            uint64_t v253 = v485[11];
            uint64_t v254 = (char *)v9 + v253;
            uint64_t v255 = (char *)v10 + v253;
            uint64_t v256 = sub_1C151D2DC();
            uint64_t v257 = *(void *)(v256 - 8);
            a3 = v492;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v257 + 48))(v255, 1, v256))
            {
              sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
              memcpy(v254, v255, *(void *)(*(void *)(v258 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v257 + 32))(v254, v255, v256);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v257 + 56))(v254, 0, 1, v256);
            }
            *(_OWORD *)((char *)v9 + v485[12]) = *(_OWORD *)((char *)v10 + v485[12]);
            uint64_t v273 = v485[13];
            uint64_t v274 = *(void *)((char *)v10 + v273);
            if (v274 == 2) {
              uint64_t v274 = 2;
            }
            *(void *)((char *)v9 + v273) = v274;
            *(void *)((char *)v9 + v485[14]) = *(void *)((char *)v10 + v485[14]);
            goto LABEL_255;
          case 6u:
            uint64_t v140 = *((void *)v10 + 1);
            *(void *)uint64_t v9 = *(void *)v10;
            *((void *)v9 + 1) = v140;
            *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
            *(_OWORD *)((char *)v9 + 24) = *(_OWORD *)((char *)v10 + 24);
            *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
            uint64_t v141 = type metadata accessor for FeedWebEmbed();
            uint64_t v142 = *(int *)(v141 + 32);
            uint64_t v466 = (char *)v10 + v142;
            __dsth = (char *)v9 + v142;
            uint64_t v143 = sub_1C1515FDC();
            uint64_t v144 = *(void *)(v143 - 8);
            size_t v145 = v466;
            id v467 = *(void (**)(char *, char *, uint64_t))(v144 + 32);
            v467(__dsth, v145, v143);
            uint64_t v146 = *(int *)(v141 + 36);
            __dstd = (char *)v9 + v146;
            uint64_t v486 = (int *)v141;
            uint64_t v147 = (char *)v10 + v146;
            uint64_t v493 = a3;
            uint64_t v455 = v143;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v144 + 48))((char *)v10 + v146, 1, v143))
            {
              sub_1C0AF9C38(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
              memcpy(__dstd, v147, *(void *)(*(void *)(v148 - 8) + 64));
            }
            else
            {
              v467(__dstd, v147, v143);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(__dstd, 0, 1, v143);
            }
            uint64_t v259 = v486;
            *(void *)((char *)v9 + v486[10]) = *(void *)((char *)v10 + v486[10]);
            *(void *)((char *)v9 + v486[11]) = *(void *)((char *)v10 + v486[11]);
            uint64_t v260 = v486[12];
            uint64_t v261 = (_OWORD *)((char *)v9 + v260);
            uint64_t v262 = (_OWORD *)((char *)v10 + v260);
            uint64_t v263 = type metadata accessor for FeedHeadline(0);
            uint64_t v264 = *(void *)(v263 - 8);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v264 + 48))(v262, 1, v263))
            {
              sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
              memcpy(v261, v262, *(void *)(*(void *)(v265 - 8) + 64));
            }
            else
            {
              uint64_t v440 = v264;
              uint64_t v442 = v262;
              *uint64_t v261 = *v262;
              *((void *)v261 + 2) = *((void *)v262 + 2);
              *((unsigned char *)v261 + 24) = *((unsigned char *)v262 + 24);
              *((void *)v261 + 4) = *((void *)v262 + 4);
              *(_OWORD *)((char *)v261 + 40) = *(_OWORD *)((char *)v262 + 40);
              *((unsigned char *)v261 + 56) = *((unsigned char *)v262 + 56);
              int v445 = (int *)v263;
              uint64_t v275 = *(int *)(v263 + 40);
              uint64_t v276 = (char *)v261 + v275;
              unint64_t v277 = (char *)v262 + v275;
              *uint64_t v276 = *v277;
              v276[1] = v277[1];
              uint64_t v278 = type metadata accessor for FeedHeadline.State(0);
              uint64_t v279 = *(int *)(v278 + 24);
              uint64_t v434 = &v276[v279];
              id v437 = (int *)v278;
              uint64_t v280 = &v277[v279];
              uint64_t v281 = (int *)type metadata accessor for SharedItem();
              uint64_t v432 = *((void *)v281 - 1);
              if ((*(unsigned int (**)(char *, uint64_t, int *))(v432 + 48))(v280, 1, v281))
              {
                uint64_t v282 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(v434, v280, *(void *)(*(void *)(v282 - 8) + 64));
              }
              else
              {
                uint64_t v336 = sub_1C151631C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v336 - 8) + 32))(v434, v280, v336);
                v434[v281[5]] = v280[v281[5]];
                *(void *)&v434[v281[6]] = *(void *)&v280[v281[6]];
                v467(&v434[v281[7]], &v280[v281[7]], v455);
                (*(void (**)(char *, void, uint64_t, int *))(v432 + 56))(v434, 0, 1, v281);
              }
              v276[v437[7]] = v277[v437[7]];
              v276[v437[8]] = v277[v437[8]];
              v276[v437[9]] = v277[v437[9]];
              v276[v437[10]] = v277[v437[10]];
              uint64_t v337 = v445[11];
              uint64_t v438 = (char *)v261 + v337;
              unint64_t v338 = (char *)v442 + v337;
              uint64_t v339 = sub_1C151D2DC();
              uint64_t v340 = *(void *)(v339 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v340 + 48))(v338, 1, v339))
              {
                sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
                memcpy(v438, v338, *(void *)(*(void *)(v341 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v340 + 32))(v438, v338, v339);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v340 + 56))(v438, 0, 1, v339);
              }
              uint64_t v259 = v486;
              *(_OWORD *)((char *)v261 + v445[12]) = *(_OWORD *)((char *)v442 + v445[12]);
              uint64_t v342 = v445[13];
              uint64_t v343 = *(void *)((char *)v442 + v342);
              if (v343 == 2) {
                uint64_t v343 = 2;
              }
              *(void *)((char *)v261 + v342) = v343;
              *(void *)((char *)v261 + v445[14]) = *(void *)((char *)v442 + v445[14]);
              (*(void (**)(void))(v440 + 56))();
            }
            uint64_t v344 = v259[13];
            uint64_t v345 = (_OWORD *)((char *)v9 + v344);
            uint64_t v346 = (_OWORD *)((char *)v10 + v344);
            uint64_t v347 = type metadata accessor for WebEmbedDataVisualization();
            uint64_t v348 = *(void *)(v347 - 8);
            a3 = v493;
            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v348 + 48))(v346, 1, v347))
            {
              sub_1C0AF9C38(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
              memcpy(v345, v346, *(void *)(*(void *)(v349 - 8) + 64));
            }
            else
            {
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                *uint64_t v345 = *v346;
                uint64_t v350 = type metadata accessor for GenericDataVisualization();
                v467((char *)v345 + *(int *)(v350 + 20), (char *)v346 + *(int *)(v350 + 20), v455);
                uint64_t v351 = *(int *)(v350 + 24);
                a3 = v493;
                *(void *)((char *)v345 + v351) = *(void *)((char *)v346 + v351);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v345, v346, *(void *)(v348 + 64));
              }
              (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v348 + 56))(v345, 0, 1, v347);
            }
            *((unsigned char *)v9 + v486[14]) = *((unsigned char *)v10 + v486[14]);
            goto LABEL_255;
          case 0xBu:
            uint64_t v495 = a3;
            uint64_t v175 = *((void *)v10 + 1);
            *(void *)uint64_t v9 = *(void *)v10;
            *((void *)v9 + 1) = v175;
            *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
            *(_OWORD *)((char *)v9 + 24) = *(_OWORD *)((char *)v10 + 24);
            *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
            uint64_t v176 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
            uint64_t v177 = (char *)v9 + v176;
            long long v178 = (void *)((char *)v10 + v176);
            *(void *)((char *)v9 + v176) = *v178;
            uint64_t v179 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
            uint64_t v180 = &v177[v179];
            uint64_t v181 = (void *)((char *)v178 + v179);
            type metadata accessor for PuzzleStatisticCategory(0);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t v301 = type metadata accessor for PuzzleStatisticValue(0);
                int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                uint64_t v459 = v301;
                if (EnumCaseMultiPayload == 5)
                {
                  uint64_t v377 = type metadata accessor for PuzzleStreak();
                  uint64_t v378 = *(void *)(v377 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v378 + 48))(v181, 1, v377))
                  {
                    sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                    memcpy(v180, v181, *(void *)(*(void *)(v379 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v408 = sub_1C151555C();
                    (*(void (**)(char *, void *, uint64_t))(*(void *)(v408 - 8) + 32))(v180, v181, v408);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v378 + 56))(v180, 0, 1, v377);
                  }
                  uint64_t v301 = v459;
                }
                else
                {
                  if (EnumCaseMultiPayload != 4)
                  {
                    memcpy(v180, v181, *(void *)(*(void *)(v301 - 8) + 64));
                    goto LABEL_233;
                  }
                  uint64_t v303 = type metadata accessor for PuzzleStreak();
                  uint64_t v304 = *(void *)(v303 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v304 + 48))(v181, 1, v303))
                  {
                    sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                    memcpy(v180, v181, *(void *)(*(void *)(v305 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v406 = sub_1C151555C();
                    (*(void (**)(char *, void *, uint64_t))(*(void *)(v406 - 8) + 32))(v180, v181, v406);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v304 + 56))(v180, 0, 1, v303);
                  }
                  uint64_t v301 = v459;
                }
                swift_storeEnumTagMultiPayload();
LABEL_233:
                uint64_t v409 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
                uint64_t v410 = *(int *)(v409 + 20);
                uint64_t v471 = v180;
                id v411 = &v180[v410];
                uint64_t v412 = (char *)v181 + v410;
                int v413 = swift_getEnumCaseMultiPayload();
                if (v413 == 5)
                {
                  uint64_t v417 = type metadata accessor for PuzzleStreak();
                  uint64_t v418 = *(void *)(v417 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v418 + 48))(v412, 1, v417))
                  {
                    sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                    memcpy(v411, v412, *(void *)(*(void *)(v419 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v421 = sub_1C151555C();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v421 - 8) + 32))(v411, v412, v421);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v418 + 56))(v411, 0, 1, v417);
                  }
                  uint64_t v301 = v459;
                }
                else
                {
                  if (v413 != 4)
                  {
                    memcpy(v411, v412, *(void *)(*(void *)(v301 - 8) + 64));
                    goto LABEL_245;
                  }
                  uint64_t v414 = type metadata accessor for PuzzleStreak();
                  uint64_t v415 = *(void *)(v414 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v415 + 48))(v412, 1, v414))
                  {
                    sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                    memcpy(v411, v412, *(void *)(*(void *)(v416 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v420 = sub_1C151555C();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v420 - 8) + 32))(v411, v412, v420);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v415 + 56))(v411, 0, 1, v414);
                  }
                  uint64_t v301 = v459;
                }
                swift_storeEnumTagMultiPayload();
LABEL_245:
                uint64_t v422 = *(int *)(v409 + 24);
                id v423 = (char *)v471 + v422;
                uint64_t v424 = (char *)v181 + v422;
                int v425 = swift_getEnumCaseMultiPayload();
                if (v425 == 5)
                {
                  uint64_t v426 = type metadata accessor for PuzzleStreak();
                  uint64_t v427 = *(void *)(v426 - 8);
                  a3 = v495;
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v427 + 48))(v424, 1, v426))
                  {
LABEL_248:
                    sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                    memcpy(v423, v424, *(void *)(*(void *)(v428 - 8) + 64));
                    goto LABEL_253;
                  }
                }
                else
                {
                  a3 = v495;
                  if (v425 != 4)
                  {
                    memcpy(v423, v424, *(void *)(*(void *)(v301 - 8) + 64));
                    goto LABEL_254;
                  }
                  uint64_t v426 = type metadata accessor for PuzzleStreak();
                  uint64_t v427 = *(void *)(v426 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v427 + 48))(v424, 1, v426)) {
                    goto LABEL_248;
                  }
                }
                uint64_t v429 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v429 - 8) + 32))(v423, v424, v429);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v427 + 56))(v423, 0, 1, v426);
LABEL_253:
                swift_storeEnumTagMultiPayload();
                goto LABEL_254;
              case 2u:
                uint64_t v291 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
                uint64_t v292 = *((void *)v291 - 1);
                if ((*(unsigned int (**)(void *, uint64_t, int *))(v292 + 48))(v181, 1, v291))
                {
                  sub_1C0AF9C38(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
                  size_t v294 = *(void *)(*(void *)(v293 - 8) + 64);
                  goto LABEL_182;
                }
                uint64_t v352 = sub_1C151631C();
                (*(void (**)(char *, void *, uint64_t))(*(void *)(v352 - 8) + 32))(v180, v181, v352);
                uint64_t v353 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
                *(_OWORD *)&v180[v353[5]] = *(_OWORD *)((char *)v181 + v353[5]);
                uint64_t v354 = v353[6];
                uint64_t v355 = &v180[v354];
                uint64_t v356 = (_OWORD *)((char *)v181 + v354);
                long long v357 = v356[1];
                *(_OWORD *)uint64_t v355 = *v356;
                *((_OWORD *)v355 + 1) = v357;
                *(void *)&v180[v353[7]] = *(void *)((char *)v181 + v353[7]);
                *(void *)&v180[v353[8]] = *(void *)((char *)v181 + v353[8]);
                *(void *)&v180[v291[5]] = *(void *)((char *)v181 + v291[5]);
                *(void *)&v180[v291[6]] = *(void *)((char *)v181 + v291[6]);
                *(_OWORD *)&v180[v291[7]] = *(_OWORD *)((char *)v181 + v291[7]);
                (*(void (**)(char *, void, uint64_t, int *))(v292 + 56))(v180, 0, 1, v291);
                a3 = v495;
                goto LABEL_254;
              case 3u:
                uint64_t v306 = v181[1];
                *(void *)uint64_t v180 = *v181;
                *((void *)v180 + 1) = v306;
                v180[16] = *((unsigned char *)v181 + 16);
                uint64_t v307 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
                uint64_t v308 = v307[6];
                uint64_t v469 = v180;
                id v309 = &v180[v308];
                long long v310 = (char *)v181 + v308;
                uint64_t v311 = type metadata accessor for PuzzleStreak();
                uint64_t v449 = *(void *)(v311 - 8);
                uint64_t v460 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v449 + 48);
                if (v460(v310, 1, v311))
                {
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v309, v310, *(void *)(*(void *)(v312 - 8) + 64));
                }
                else
                {
                  uint64_t v358 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v358 - 8) + 32))(v309, v310, v358);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v449 + 56))(v309, 0, 1, v311);
                }
                uint64_t v359 = v307[7];
                uint64_t v360 = (char *)v469 + v359;
                uint64_t v361 = (char *)v181 + v359;
                if (v460((char *)v181 + v359, 1, v311))
                {
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v360, v361, *(void *)(*(void *)(v362 - 8) + 64));
                }
                else
                {
                  uint64_t v363 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v363 - 8) + 32))(v360, v361, v363);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v449 + 56))(v360, 0, 1, v311);
                }
                uint64_t v364 = v307[8];
                uint64_t v365 = (_OWORD *)((char *)v469 + v364);
                uint64_t v366 = (_OWORD *)((char *)v181 + v364);
                long long v367 = v366[1];
                _OWORD *v365 = *v366;
                v365[1] = v367;
                *(_OWORD *)((char *)v365 + 25) = *(_OWORD *)((char *)v366 + 25);
                uint64_t v368 = v307[9];
                uint64_t v369 = (_OWORD *)((char *)v469 + v368);
                long long v370 = (_OWORD *)((char *)v181 + v368);
                *(_OWORD *)((char *)v369 + 25) = *(_OWORD *)((char *)v370 + 25);
                long long v371 = v370[1];
                _OWORD *v369 = *v370;
                v369[1] = v371;
                uint64_t v372 = v307[10];
                uint64_t v373 = (_OWORD *)((char *)v469 + v372);
                uint64_t v374 = (_OWORD *)((char *)v181 + v372);
                long long v375 = v374[1];
                *uint64_t v373 = *v374;
                v373[1] = v375;
                *(_OWORD *)((char *)v373 + 25) = *(_OWORD *)((char *)v374 + 25);
                a3 = v495;
                goto LABEL_254;
              default:
                uint64_t v182 = type metadata accessor for PuzzleStatisticValue(0);
                int v183 = swift_getEnumCaseMultiPayload();
                if (v183 == 5)
                {
                  uint64_t v184 = type metadata accessor for PuzzleStreak();
                  uint64_t v185 = *(void *)(v184 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v185 + 48))(v181, 1, v184))
                  {
LABEL_78:
                    sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                    memcpy(v180, v181, *(void *)(*(void *)(v186 - 8) + 64));
LABEL_229:
                    swift_storeEnumTagMultiPayload();
                    a3 = v495;
                    goto LABEL_254;
                  }
                }
                else
                {
                  if (v183 != 4)
                  {
                    size_t v294 = *(void *)(*(void *)(v182 - 8) + 64);
LABEL_182:
                    memcpy(v180, v181, v294);
                    a3 = v495;
LABEL_254:
                    swift_storeEnumTagMultiPayload();
LABEL_255:
                    swift_storeEnumTagMultiPayload();
LABEL_256:
                    swift_storeEnumTagMultiPayload();
                    goto LABEL_219;
                  }
                  uint64_t v184 = type metadata accessor for PuzzleStreak();
                  uint64_t v185 = *(void *)(v184 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v185 + 48))(v181, 1, v184)) {
                    goto LABEL_78;
                  }
                }
                uint64_t v407 = sub_1C151555C();
                (*(void (**)(char *, void *, uint64_t))(*(void *)(v407 - 8) + 32))(v180, v181, v407);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v185 + 56))(v180, 0, 1, v184);
                goto LABEL_229;
            }
          case 0xCu:
            *uint64_t v9 = *v10;
            uint64_t v187 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
            long long v188 = (char *)v9 + v187;
            uint64_t v189 = (char *)v10 + v187;
            uint64_t v190 = sub_1C151D6DC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 32))(v188, v189, v190);
            goto LABEL_255;
          default:
            memcpy(v9, v10, *(void *)(*(void *)(v38 - 8) + 64));
            goto LABEL_256;
        }
      case 0x18u:
        type metadata accessor for FormatPropertyDefinition(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            long long v206 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v206;
            long long v207 = v10[3];
            v9[2] = v10[2];
            v9[3] = v207;
            *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
            *((void *)v9 + 9) = *((void *)v10 + 9);
            *((unsigned char *)v9 + 80) = *((unsigned char *)v10 + 80);
            *((void *)v9 + 11) = *((void *)v10 + 11);
            int v208 = &qword_1EB88E9B8;
            uint64_t v209 = sub_1C003F2E8;
            goto LABEL_103;
          case 2u:
            uint64_t v496 = a3;
            long long v210 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v210;
            long long v211 = v10[3];
            v9[2] = v10[2];
            v9[3] = v211;
            *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
            sub_1BFF71B30();
            uint64_t v213 = v212;
            uint64_t v214 = v212[13];
            uint64_t v215 = (char *)v9 + v214;
            uint64_t v216 = (char *)v10 + v214;
            uint64_t v217 = sub_1C151631C();
            uint64_t v218 = *(void *)(v217 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v218 + 48))(v216, 1, v217)) {
              goto LABEL_116;
            }
            uint64_t v219 = &qword_1EB871180;
            int v220 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
            goto LABEL_98;
          case 3u:
            long long v221 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v221;
            long long v222 = v10[3];
            v9[2] = v10[2];
            v9[3] = v222;
            v9[4] = v10[4];
            *((unsigned char *)v9 + 80) = *((unsigned char *)v10 + 80);
            *(_OWORD *)((char *)v9 + 88) = *(_OWORD *)((char *)v10 + 88);
            *((void *)v9 + 13) = *((void *)v10 + 13);
            *((unsigned char *)v9 + 112) = *((unsigned char *)v10 + 112);
            *((void *)v9 + 15) = *((void *)v10 + 15);
            uint64_t v223 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
            goto LABEL_105;
          case 4u:
            long long v224 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v224;
            long long v225 = v10[3];
            v9[2] = v10[2];
            v9[3] = v225;
            *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
            *((void *)v9 + 9) = *((void *)v10 + 9);
            *((_WORD *)v9 + 40) = *((_WORD *)v10 + 40);
            *((void *)v9 + 11) = *((void *)v10 + 11);
            int v208 = &qword_1EB88E990;
            uint64_t v209 = sub_1C0092008;
            goto LABEL_103;
          case 5u:
            long long v226 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v226;
            long long v227 = v10[3];
            v9[2] = v10[2];
            v9[3] = v227;
            *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
            *((void *)v9 + 9) = *((void *)v10 + 9);
            *((_WORD *)v9 + 40) = *((_WORD *)v10 + 40);
            *((void *)v9 + 11) = *((void *)v10 + 11);
            uint64_t v55 = &qword_1EB88E9D0;
            goto LABEL_95;
          case 6u:
            long long v228 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v228;
            long long v229 = v10[3];
            v9[2] = v10[2];
            v9[3] = v229;
            *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
            *(_OWORD *)((char *)v9 + 72) = *(_OWORD *)((char *)v10 + 72);
            *((unsigned char *)v9 + 88) = *((unsigned char *)v10 + 88);
            *((void *)v9 + 12) = *((void *)v10 + 12);
            uint64_t v55 = &qword_1EB88E9C0;
            goto LABEL_95;
          case 7u:
            uint64_t v496 = a3;
            long long v231 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v231;
            long long v232 = v10[3];
            v9[2] = v10[2];
            v9[3] = v232;
            *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
            sub_1BFF719C0();
            uint64_t v213 = v233;
            uint64_t v234 = v233[13];
            uint64_t v215 = (char *)v9 + v234;
            uint64_t v216 = (char *)v10 + v234;
            uint64_t v217 = sub_1C1515FDC();
            uint64_t v218 = *(void *)(v217 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v218 + 48))(v216, 1, v217))
            {
              uint64_t v219 = &qword_1EB8948A0;
              int v220 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
LABEL_98:
              sub_1C0AF9C38(0, (unint64_t *)v219, v220, MEMORY[0x1E4FBB718]);
              memcpy(v215, v216, *(void *)(*(void *)(v235 - 8) + 64));
            }
            else
            {
LABEL_116:
              (*(void (**)(char *, char *, uint64_t))(v218 + 32))(v215, v216, v217);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v218 + 56))(v215, 0, 1, v217);
            }
            *((unsigned char *)v9 + v213[14]) = *((unsigned char *)v10 + v213[14]);
            *(void *)((char *)v9 + v213[15]) = *(void *)((char *)v10 + v213[15]);
            uint64_t v272 = v213[16];
            uint64_t v244 = (char *)v9 + v272;
            uint64_t v245 = (char *)v10 + v272;
            uint64_t v246 = sub_1C1518CDC();
            uint64_t v247 = *(void *)(v246 - 8);
            a3 = v496;
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v247 + 48))(v245, 1, v246)) {
              goto LABEL_118;
            }
            goto LABEL_106;
          case 8u:
            long long v236 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v236;
            long long v237 = v10[3];
            v9[2] = v10[2];
            v9[3] = v237;
            *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
            *((void *)v9 + 9) = *((void *)v10 + 9);
            *((unsigned char *)v9 + 80) = *((unsigned char *)v10 + 80);
            *((void *)v9 + 11) = *((void *)v10 + 11);
            int v208 = &qword_1EB88E9A0;
            uint64_t v209 = sub_1C0036630;
            goto LABEL_103;
          case 9u:
            long long v238 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v238;
            long long v239 = v10[3];
            v9[2] = v10[2];
            v9[3] = v239;
            *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
            *((void *)v9 + 9) = *((void *)v10 + 9);
            *((unsigned char *)v9 + 80) = *((unsigned char *)v10 + 80);
            *((void *)v9 + 11) = *((void *)v10 + 11);
            int v208 = &qword_1EB88E998;
            uint64_t v209 = sub_1C00738F0;
            goto LABEL_103;
          case 0xAu:
            long long v240 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v240;
            long long v241 = v10[3];
            v9[2] = v10[2];
            v9[3] = v241;
            *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
            *((void *)v9 + 9) = *((void *)v10 + 9);
            *((unsigned char *)v9 + 80) = *((unsigned char *)v10 + 80);
            *((void *)v9 + 11) = *((void *)v10 + 11);
            int v208 = &qword_1EB88E9B0;
            uint64_t v209 = sub_1C0084C58;
            goto LABEL_103;
          case 0xBu:
            long long v242 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v242;
            long long v243 = v10[3];
            v9[2] = v10[2];
            v9[3] = v243;
            *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
            *((void *)v9 + 9) = *((void *)v10 + 9);
            *((unsigned char *)v9 + 80) = *((unsigned char *)v10 + 80);
            *((void *)v9 + 11) = *((void *)v10 + 11);
            int v208 = &qword_1EB88E9A8;
            uint64_t v209 = sub_1C006F9DC;
LABEL_103:
            sub_1C0AF9C9C(0, v208, (void (*)(void))v209);
            goto LABEL_104;
          default:
            long long v53 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v53;
            long long v54 = v10[3];
            v9[2] = v10[2];
            v9[3] = v54;
            *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
            *(_WORD *)((char *)v9 + 65) = *(_WORD *)((char *)v10 + 65);
            *((void *)v9 + 9) = *((void *)v10 + 9);
            uint64_t v55 = &qword_1EB88E9C8;
LABEL_95:
            sub_1BFF71924(0, v55);
LABEL_104:
            uint64_t v223 = *(int *)(v230 + 64);
LABEL_105:
            uint64_t v244 = (char *)v9 + v223;
            uint64_t v245 = (char *)v10 + v223;
            uint64_t v246 = sub_1C1518CDC();
            uint64_t v247 = *(void *)(v246 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v247 + 48))(v245, 1, v246))
            {
LABEL_106:
              sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
              memcpy(v244, v245, *(void *)(*(void *)(v248 - 8) + 64));
            }
            else
            {
LABEL_118:
              (*(void (**)(char *, char *, uint64_t))(v247 + 32))(v244, v245, v246);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v247 + 56))(v244, 0, 1, v246);
            }
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
            break;
        }
        goto LABEL_219;
      case 0x1Au:
        uint64_t v56 = sub_1C151CA7C();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v56 - 8) + 32))(v9, v10, v56);
        swift_storeEnumTagMultiPayload();
        goto LABEL_219;
      default:
        size_t v18 = *(void *)(v12 + 64);
        goto LABEL_8;
    }
  }
  if (v15) {
    goto LABEL_7;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0xCu:
      uint64_t v16 = sub_1C1515FDC();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v16 - 8) + 32))(v9, v10, v16);
      goto LABEL_217;
    case 0x11u:
      uint64_t v20 = type metadata accessor for FeedGroupItem();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
          long long v21 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v21;
          *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
          long long v22 = (int *)type metadata accessor for FeedWeather(0);
          uint64_t v23 = v22[7];
          uint64_t v24 = (char *)v9 + v23;
          uint64_t v25 = (char *)v10 + v23;
          uint64_t v26 = sub_1C151E2BC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
          long long v482 = v22;
          *((unsigned char *)v9 + v22[8]) = *((unsigned char *)v10 + v22[8]);
          uint64_t v27 = v22[9];
          long long v28 = (char *)v9 + v27;
          uint64_t v443 = (char *)v9 + v27;
          uint64_t v452 = (char *)v10 + v27;
          sub_1C0AF9C38(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
          uint64_t v487 = a3;
          uint64_t v30 = v29;
          uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32);
          v31(v28, v452, v29);
          uint64_t v32 = (int *)type metadata accessor for FeedWeather.Temperature(0);
          v31(&v443[v32[5]], &v452[v32[5]], v30);
          v31(&v443[v32[6]], &v452[v32[6]], v30);
          uint64_t v33 = v30;
          a3 = v487;
          v31(&v443[v32[7]], &v452[v32[7]], v33);
          *(_OWORD *)((char *)v9 + v482[10]) = *(_OWORD *)((char *)v10 + v482[10]);
          goto LABEL_216;
        case 5u:
          uint64_t v489 = a3;
          *uint64_t v9 = *v10;
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((unsigned char *)v9 + 24) = *((unsigned char *)v10 + 24);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
          *((unsigned char *)v9 + 56) = *((unsigned char *)v10 + 56);
          v483 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v57 = v483[10];
          uint64_t v58 = (char *)v9 + v57;
          uint64_t v59 = (char *)v10 + v57;
          *uint64_t v58 = *((unsigned char *)v10 + v57);
          v58[1] = *((unsigned char *)v10 + v57 + 1);
          uint64_t v60 = type metadata accessor for FeedHeadline.State(0);
          uint64_t v61 = *(int *)(v60 + 24);
          uint64_t v461 = (int *)v60;
          __dst = &v58[v61];
          uint64_t v62 = &v59[v61];
          long long v63 = (int *)type metadata accessor for SharedItem();
          uint64_t v453 = *((void *)v63 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v453 + 48))(v62, 1, v63))
          {
            uint64_t v64 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v62, *(void *)(*(void *)(v64 - 8) + 64));
          }
          else
          {
            uint64_t v149 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 32))(__dst, v62, v149);
            __dst[v63[5]] = v62[v63[5]];
            *(void *)&__dst[v63[6]] = *(void *)&v62[v63[6]];
            uint64_t v150 = v63[7];
            uint64_t v447 = &__dst[v150];
            uint64_t v151 = &v62[v150];
            uint64_t v152 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32))(v447, v151, v152);
            (*(void (**)(char *, void, uint64_t, int *))(v453 + 56))(__dst, 0, 1, v63);
          }
          v58[v461[7]] = v59[v461[7]];
          v58[v461[8]] = v59[v461[8]];
          v58[v461[9]] = v59[v461[9]];
          v58[v461[10]] = v59[v461[10]];
          uint64_t v153 = v483[11];
          uint64_t v154 = (char *)v9 + v153;
          uint64_t v155 = (char *)v10 + v153;
          uint64_t v156 = sub_1C151D2DC();
          uint64_t v157 = *(void *)(v156 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v155, 1, v156))
          {
            sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
            memcpy(v154, v155, *(void *)(*(void *)(v158 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v157 + 32))(v154, v155, v156);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v154, 0, 1, v156);
          }
          a3 = v489;
          *(_OWORD *)((char *)v9 + v483[12]) = *(_OWORD *)((char *)v10 + v483[12]);
          uint64_t v165 = v483[13];
          uint64_t v166 = *(void *)((char *)v10 + v165);
          if (v166 == 2) {
            uint64_t v166 = 2;
          }
          *(void *)((char *)v9 + v165) = v166;
          *(void *)((char *)v9 + v483[14]) = *(void *)((char *)v10 + v483[14]);
          goto LABEL_216;
        case 6u:
          uint64_t v65 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v65;
          *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
          *(_OWORD *)((char *)v9 + 24) = *(_OWORD *)((char *)v10 + 24);
          *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
          uint64_t v66 = type metadata accessor for FeedWebEmbed();
          uint64_t v67 = *(int *)(v66 + 32);
          __dstg = (char *)v9 + v67;
          v484 = (int *)v66;
          uint64_t v462 = (char *)v10 + v67;
          uint64_t v68 = sub_1C1515FDC();
          uint64_t v69 = *(void *)(v68 - 8);
          uint64_t v70 = v462;
          uint64_t v463 = *(void (**)(char *, char *, uint64_t))(v69 + 32);
          v463(__dstg, v70, v68);
          uint64_t v71 = v484[9];
          __dsta = (char *)v9 + v71;
          long long v72 = (char *)v10 + v71;
          uint64_t v446 = v69;
          uint64_t v454 = v68;
          uint64_t v73 = v69;
          long long v74 = v72;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v72, 1, v68))
          {
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
            memcpy(__dsta, v74, *(void *)(*(void *)(v75 - 8) + 64));
          }
          else
          {
            v463(__dsta, v74, v68);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v446 + 56))(__dsta, 0, 1, v68);
          }
          uint64_t v494 = a3;
          *(void *)((char *)v9 + v484[10]) = *(void *)((char *)v10 + v484[10]);
          *(void *)((char *)v9 + v484[11]) = *(void *)((char *)v10 + v484[11]);
          uint64_t v159 = v484[12];
          uint64_t v160 = (_OWORD *)((char *)v9 + v159);
          uint64_t v161 = (_OWORD *)((char *)v10 + v159);
          uint64_t v162 = type metadata accessor for FeedHeadline(0);
          uint64_t v163 = *(void *)(v162 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v163 + 48))(v161, 1, v162))
          {
            sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
            memcpy(v160, v161, *(void *)(*(void *)(v164 - 8) + 64));
          }
          else
          {
            uint64_t v439 = v163;
            uint64_t v441 = v160;
            *uint64_t v160 = *v161;
            *((void *)v160 + 2) = *((void *)v161 + 2);
            *((unsigned char *)v160 + 24) = *((unsigned char *)v161 + 24);
            *((void *)v160 + 4) = *((void *)v161 + 4);
            *(_OWORD *)((char *)v160 + 40) = *(_OWORD *)((char *)v161 + 40);
            *((unsigned char *)v160 + 56) = *((unsigned char *)v161 + 56);
            __dste = (int *)v162;
            uint64_t v167 = *(int *)(v162 + 40);
            uint64_t v168 = (char *)v160 + v167;
            uint64_t v169 = (char *)v161 + v167;
            unsigned char *v168 = *((unsigned char *)v161 + v167);
            v168[1] = *((unsigned char *)v161 + v167 + 1);
            uint64_t v170 = type metadata accessor for FeedHeadline.State(0);
            uint64_t v171 = *(int *)(v170 + 24);
            uint64_t v433 = &v168[v171];
            uint64_t v435 = (int *)v170;
            uint64_t v172 = &v169[v171];
            uint64_t v173 = type metadata accessor for SharedItem();
            uint64_t v430 = *(void *)(v173 - 8);
            long long v431 = (int *)v173;
            uint64_t v448 = v161;
            if ((*(unsigned int (**)(char *, uint64_t))(v430 + 48))(v172, 1))
            {
              uint64_t v174 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v433, v172, *(void *)(*(void *)(v174 - 8) + 64));
            }
            else
            {
              uint64_t v266 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v266 - 8) + 32))(v433, v172, v266);
              v433[v431[5]] = v172[v431[5]];
              *(void *)&v433[v431[6]] = *(void *)&v172[v431[6]];
              v463(&v433[v431[7]], &v172[v431[7]], v454);
              (*(void (**)(char *, void, uint64_t, int *))(v430 + 56))(v433, 0, 1, v431);
            }
            v168[v435[7]] = v169[v435[7]];
            v168[v435[8]] = v169[v435[8]];
            v168[v435[9]] = v169[v435[9]];
            v168[v435[10]] = v169[v435[10]];
            uint64_t v267 = __dste[11];
            uint64_t v436 = (char *)v441 + v267;
            uint64_t v268 = (char *)v161 + v267;
            uint64_t v269 = sub_1C151D2DC();
            uint64_t v270 = *(void *)(v269 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v270 + 48))(v268, 1, v269))
            {
              sub_1C0AF9C38(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
              memcpy(v436, v268, *(void *)(*(void *)(v271 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v270 + 32))(v436, v268, v269);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v270 + 56))(v436, 0, 1, v269);
            }
            *(_OWORD *)((char *)v441 + __dste[12]) = *(_OWORD *)((char *)v448 + __dste[12]);
            uint64_t v283 = __dste[13];
            uint64_t v284 = *(void *)((char *)v448 + v283);
            if (v284 == 2) {
              uint64_t v284 = 2;
            }
            *(void *)((char *)v441 + v283) = v284;
            *(void *)((char *)v441 + __dste[14]) = *(void *)((char *)v448 + __dste[14]);
            (*(void (**)(_OWORD *, void, uint64_t))(v439 + 56))(v441, 0, 1);
          }
          uint64_t v285 = v484[13];
          uint64_t v286 = (_OWORD *)((char *)v9 + v285);
          uint64_t v287 = (_OWORD *)((char *)v10 + v285);
          uint64_t v288 = type metadata accessor for WebEmbedDataVisualization();
          uint64_t v289 = *(void *)(v288 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v289 + 48))(v287, 1, v288))
          {
            sub_1C0AF9C38(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
            memcpy(v286, v287, *(void *)(*(void *)(v290 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *uint64_t v286 = *v287;
              __dstuint64_t i = (int *)type metadata accessor for GenericDataVisualization();
              v463((char *)v286 + __dsti[5], (char *)v287 + __dsti[5], v454);
              *(void *)((char *)v286 + __dsti[6]) = *(void *)((char *)v287 + __dsti[6]);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v286, v287, *(void *)(v289 + 64));
            }
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v289 + 56))(v286, 0, 1, v288);
          }
          *((unsigned char *)v9 + v484[14]) = *((unsigned char *)v10 + v484[14]);
          swift_storeEnumTagMultiPayload();
          a3 = v494;
          goto LABEL_217;
        case 0xBu:
          uint64_t v490 = a3;
          uint64_t v76 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v76;
          *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
          *(_OWORD *)((char *)v9 + 24) = *(_OWORD *)((char *)v10 + 24);
          *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
          uint64_t v77 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          uint64_t v78 = (char *)v9 + v77;
          long long v79 = (void *)((char *)v10 + v77);
          *(void *)((char *)v9 + v77) = *v79;
          uint64_t v80 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
          uint64_t v81 = &v78[v80];
          long long v82 = (void *)((char *)v79 + v80);
          type metadata accessor for PuzzleStatisticCategory(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v456 = type metadata accessor for PuzzleStatisticValue(0);
              int v191 = swift_getEnumCaseMultiPayload();
              if (v191 == 5)
              {
                uint64_t v332 = type metadata accessor for PuzzleStreak();
                uint64_t v333 = *(void *)(v332 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v333 + 48))(v82, 1, v332))
                {
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v81, v82, *(void *)(*(void *)(v334 - 8) + 64));
                }
                else
                {
                  uint64_t v381 = sub_1C151555C();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v381 - 8) + 32))(v81, v82, v381);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v333 + 56))(v81, 0, 1, v332);
                }
                uint64_t v335 = v456;
              }
              else
              {
                if (v191 != 4)
                {
                  uint64_t v335 = v456;
                  memcpy(v81, v82, *(void *)(*(void *)(v456 - 8) + 64));
                  goto LABEL_194;
                }
                uint64_t v192 = type metadata accessor for PuzzleStreak();
                uint64_t v193 = *(void *)(v192 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v193 + 48))(v82, 1, v192))
                {
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v81, v82, *(void *)(*(void *)(v194 - 8) + 64));
                }
                else
                {
                  uint64_t v376 = sub_1C151555C();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v376 - 8) + 32))(v81, v82, v376);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v193 + 56))(v81, 0, 1, v192);
                }
                uint64_t v335 = v456;
              }
              swift_storeEnumTagMultiPayload();
LABEL_194:
              uint64_t v382 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
              uint64_t v383 = *(int *)(v382 + 20);
              uint64_t v470 = v81;
              uint64_t v384 = &v81[v383];
              uint64_t v385 = (char *)v82 + v383;
              int v386 = swift_getEnumCaseMultiPayload();
              if (v386 == 5)
              {
                uint64_t v389 = type metadata accessor for PuzzleStreak();
                uint64_t v451 = *(void *)(v389 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v451 + 48))(v385, 1, v389))
                {
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v384, v385, *(void *)(*(void *)(v390 - 8) + 64));
                }
                else
                {
                  uint64_t v392 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v392 - 8) + 32))(v384, v385, v392);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v451 + 56))(v384, 0, 1, v389);
                }
                uint64_t v335 = v456;
              }
              else
              {
                if (v386 != 4)
                {
                  memcpy(v384, v385, *(void *)(*(void *)(v335 - 8) + 64));
                  goto LABEL_206;
                }
                uint64_t v387 = type metadata accessor for PuzzleStreak();
                uint64_t v450 = *(void *)(v387 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v450 + 48))(v385, 1, v387))
                {
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v384, v385, *(void *)(*(void *)(v388 - 8) + 64));
                }
                else
                {
                  uint64_t v391 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v391 - 8) + 32))(v384, v385, v391);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v450 + 56))(v384, 0, 1, v387);
                }
                uint64_t v335 = v456;
              }
              swift_storeEnumTagMultiPayload();
LABEL_206:
              uint64_t v393 = *(int *)(v382 + 24);
              uint64_t v394 = (char *)v470 + v393;
              long long v395 = (char *)v82 + v393;
              int v396 = swift_getEnumCaseMultiPayload();
              if (v396 == 5)
              {
                uint64_t v397 = type metadata accessor for PuzzleStreak();
                uint64_t v398 = *(void *)(v397 - 8);
                a3 = v490;
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v398 + 48))(v395, 1, v397))
                {
LABEL_209:
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v394, v395, *(void *)(*(void *)(v399 - 8) + 64));
                  goto LABEL_214;
                }
              }
              else
              {
                a3 = v490;
                if (v396 != 4)
                {
                  memcpy(v394, v395, *(void *)(*(void *)(v335 - 8) + 64));
                  goto LABEL_215;
                }
                uint64_t v397 = type metadata accessor for PuzzleStreak();
                uint64_t v398 = *(void *)(v397 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v398 + 48))(v395, 1, v397)) {
                  goto LABEL_209;
                }
              }
              uint64_t v400 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v400 - 8) + 32))(v394, v395, v400);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v398 + 56))(v394, 0, 1, v397);
LABEL_214:
              swift_storeEnumTagMultiPayload();
              goto LABEL_215;
            case 2u:
              long long v195 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
              uint64_t v196 = *((void *)v195 - 1);
              if ((*(unsigned int (**)(void *, uint64_t, int *))(v196 + 48))(v82, 1, v195))
              {
                sub_1C0AF9C38(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
                size_t v198 = *(void *)(*(void *)(v197 - 8) + 64);
                goto LABEL_154;
              }
              uint64_t v295 = sub_1C151631C();
              (*(void (**)(char *, void *, uint64_t))(*(void *)(v295 - 8) + 32))(v81, v82, v295);
              uint64_t v296 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
              *(_OWORD *)&v81[v296[5]] = *(_OWORD *)((char *)v82 + v296[5]);
              uint64_t v297 = v296[6];
              uint64_t v298 = &v81[v297];
              uint64_t v299 = (_OWORD *)((char *)v82 + v297);
              long long v300 = v299[1];
              *(_OWORD *)uint64_t v298 = *v299;
              *((_OWORD *)v298 + 1) = v300;
              *(void *)&v81[v296[7]] = *(void *)((char *)v82 + v296[7]);
              *(void *)&v81[v296[8]] = *(void *)((char *)v82 + v296[8]);
              *(void *)&v81[v195[5]] = *(void *)((char *)v82 + v195[5]);
              *(void *)&v81[v195[6]] = *(void *)((char *)v82 + v195[6]);
              *(_OWORD *)&v81[v195[7]] = *(_OWORD *)((char *)v82 + v195[7]);
              (*(void (**)(char *, void, uint64_t, int *))(v196 + 56))(v81, 0, 1, v195);
              goto LABEL_190;
            case 3u:
              uint64_t v199 = v82[1];
              *(void *)uint64_t v81 = *v82;
              *((void *)v81 + 1) = v199;
              v81[16] = *((unsigned char *)v82 + 16);
              uint64_t v457 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
              uint64_t v468 = v81;
              uint64_t v200 = v457[6];
              uint64_t v201 = &v81[v200];
              uint64_t v202 = (char *)v82 + v200;
              uint64_t v203 = type metadata accessor for PuzzleStreak();
              uint64_t v204 = *(void *)(v203 - 8);
              uint64_t v444 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v204 + 48);
              if (v444(v202, 1, v203))
              {
                sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v201, v202, *(void *)(*(void *)(v205 - 8) + 64));
              }
              else
              {
                uint64_t v313 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v313 - 8) + 32))(v201, v202, v313);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v204 + 56))(v201, 0, 1, v203);
              }
              uint64_t v314 = v457[7];
              uint64_t v315 = (char *)v468 + v314;
              uint64_t v316 = (char *)v82 + v314;
              if (v444((char *)v82 + v314, 1, v203))
              {
                sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v315, v316, *(void *)(*(void *)(v317 - 8) + 64));
              }
              else
              {
                uint64_t v318 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v318 - 8) + 32))(v315, v316, v318);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v204 + 56))(v315, 0, 1, v203);
              }
              uint64_t v319 = v457[8];
              uint64_t v320 = (_OWORD *)((char *)v468 + v319);
              uint64_t v321 = (_OWORD *)((char *)v82 + v319);
              long long v322 = v321[1];
              *uint64_t v320 = *v321;
              v320[1] = v322;
              *(_OWORD *)((char *)v320 + 25) = *(_OWORD *)((char *)v321 + 25);
              uint64_t v323 = v457[9];
              long long v324 = (_OWORD *)((char *)v468 + v323);
              uint64_t v325 = (_OWORD *)((char *)v82 + v323);
              *(_OWORD *)((char *)v324 + 25) = *(_OWORD *)((char *)v325 + 25);
              long long v326 = v325[1];
              *long long v324 = *v325;
              v324[1] = v326;
              uint64_t v327 = v457[10];
              uint64_t v328 = (_OWORD *)((char *)v468 + v327);
              uint64_t v329 = (_OWORD *)((char *)v82 + v327);
              long long v330 = v329[1];
              _OWORD *v328 = *v329;
              v328[1] = v330;
              *(_OWORD *)((char *)v328 + 25) = *(_OWORD *)((char *)v329 + 25);
              a3 = v490;
              goto LABEL_215;
            default:
              uint64_t v83 = type metadata accessor for PuzzleStatisticValue(0);
              int v84 = swift_getEnumCaseMultiPayload();
              if (v84 == 5)
              {
                uint64_t v85 = type metadata accessor for PuzzleStreak();
                uint64_t v464 = *(void *)(v85 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v464 + 48))(v82, 1, v85))
                {
LABEL_152:
                  sub_1C0AF9C38(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                  memcpy(v81, v82, *(void *)(*(void *)(v331 - 8) + 64));
LABEL_189:
                  swift_storeEnumTagMultiPayload();
                  goto LABEL_190;
                }
LABEL_188:
                uint64_t v380 = sub_1C151555C();
                (*(void (**)(char *, void *, uint64_t))(*(void *)(v380 - 8) + 32))(v81, v82, v380);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v464 + 56))(v81, 0, 1, v85);
                goto LABEL_189;
              }
              if (v84 == 4)
              {
                uint64_t v85 = type metadata accessor for PuzzleStreak();
                uint64_t v464 = *(void *)(v85 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v464 + 48))(v82, 1, v85)) {
                  goto LABEL_152;
                }
                goto LABEL_188;
              }
              size_t v198 = *(void *)(*(void *)(v83 - 8) + 64);
LABEL_154:
              memcpy(v81, v82, v198);
LABEL_190:
              a3 = v490;
LABEL_215:
              swift_storeEnumTagMultiPayload();
LABEL_216:
              swift_storeEnumTagMultiPayload();
LABEL_217:
              swift_storeEnumTagMultiPayload();
LABEL_218:
              (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
              break;
          }
          break;
        case 0xCu:
          *uint64_t v9 = *v10;
          uint64_t v86 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
          long long v87 = (char *)v9 + v86;
          long long v88 = (char *)v10 + v86;
          uint64_t v89 = sub_1C151D6DC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v87, v88, v89);
          goto LABEL_216;
        default:
          memcpy(v9, v10, *(void *)(*(void *)(v20 - 8) + 64));
          goto LABEL_217;
      }
      break;
    case 0x18u:
      type metadata accessor for FormatPropertyDefinition(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          long long v90 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v90;
          long long v91 = v10[3];
          v9[2] = v10[2];
          v9[3] = v91;
          *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
          *((void *)v9 + 9) = *((void *)v10 + 9);
          *((unsigned char *)v9 + 80) = *((unsigned char *)v10 + 80);
          *((void *)v9 + 11) = *((void *)v10 + 11);
          long long v92 = &qword_1EB88E9B8;
          uint64_t v93 = sub_1C003F2E8;
          goto LABEL_50;
        case 2u:
          uint64_t v491 = a3;
          long long v94 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v94;
          long long v95 = v10[3];
          v9[2] = v10[2];
          v9[3] = v95;
          *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
          sub_1BFF71B30();
          long long v97 = v96;
          uint64_t v98 = v96[13];
          __dstb = (char *)v9 + v98;
          char v99 = (char *)v10 + v98;
          uint64_t v100 = sub_1C151631C();
          uint64_t v101 = *(void *)(v100 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100)) {
            goto LABEL_66;
          }
          long long v102 = &qword_1EB871180;
          long long v103 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
          goto LABEL_45;
        case 3u:
          long long v104 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v104;
          long long v105 = v10[3];
          v9[2] = v10[2];
          v9[3] = v105;
          v9[4] = v10[4];
          *((unsigned char *)v9 + 80) = *((unsigned char *)v10 + 80);
          *(_OWORD *)((char *)v9 + 88) = *(_OWORD *)((char *)v10 + 88);
          *((void *)v9 + 13) = *((void *)v10 + 13);
          *((unsigned char *)v9 + 112) = *((unsigned char *)v10 + 112);
          *((void *)v9 + 15) = *((void *)v10 + 15);
          uint64_t v106 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
          goto LABEL_52;
        case 4u:
          long long v107 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v107;
          long long v108 = v10[3];
          v9[2] = v10[2];
          v9[3] = v108;
          *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
          *((void *)v9 + 9) = *((void *)v10 + 9);
          *((_WORD *)v9 + 40) = *((_WORD *)v10 + 40);
          *((void *)v9 + 11) = *((void *)v10 + 11);
          long long v92 = &qword_1EB88E990;
          uint64_t v93 = sub_1C0092008;
          goto LABEL_50;
        case 5u:
          long long v109 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v109;
          long long v110 = v10[3];
          v9[2] = v10[2];
          v9[3] = v110;
          *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
          *((void *)v9 + 9) = *((void *)v10 + 9);
          *((_WORD *)v9 + 40) = *((_WORD *)v10 + 40);
          *((void *)v9 + 11) = *((void *)v10 + 11);
          uint64_t v36 = &qword_1EB88E9D0;
          goto LABEL_42;
        case 6u:
          long long v111 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v111;
          long long v112 = v10[3];
          v9[2] = v10[2];
          v9[3] = v112;
          *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
          *(_OWORD *)((char *)v9 + 72) = *(_OWORD *)((char *)v10 + 72);
          *((unsigned char *)v9 + 88) = *((unsigned char *)v10 + 88);
          *((void *)v9 + 12) = *((void *)v10 + 12);
          uint64_t v36 = &qword_1EB88E9C0;
          goto LABEL_42;
        case 7u:
          uint64_t v491 = a3;
          long long v114 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v114;
          long long v115 = v10[3];
          v9[2] = v10[2];
          v9[3] = v115;
          *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
          sub_1BFF719C0();
          long long v97 = v116;
          uint64_t v117 = v116[13];
          __dstb = (char *)v9 + v117;
          char v99 = (char *)v10 + v117;
          uint64_t v100 = sub_1C1515FDC();
          uint64_t v101 = *(void *)(v100 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
          {
            long long v102 = &qword_1EB8948A0;
            long long v103 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
LABEL_45:
            sub_1C0AF9C38(0, (unint64_t *)v102, v103, MEMORY[0x1E4FBB718]);
            memcpy(__dstb, v99, *(void *)(*(void *)(v118 - 8) + 64));
          }
          else
          {
LABEL_66:
            (*(void (**)(char *, char *, uint64_t))(v101 + 32))(__dstb, v99, v100);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(__dstb, 0, 1, v100);
          }
          a3 = v491;
          *((unsigned char *)v9 + v97[14]) = *((unsigned char *)v10 + v97[14]);
          *(void *)((char *)v9 + v97[15]) = *(void *)((char *)v10 + v97[15]);
          uint64_t v106 = v97[16];
          goto LABEL_52;
        case 8u:
          long long v119 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v119;
          long long v120 = v10[3];
          v9[2] = v10[2];
          v9[3] = v120;
          *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
          *((void *)v9 + 9) = *((void *)v10 + 9);
          *((unsigned char *)v9 + 80) = *((unsigned char *)v10 + 80);
          *((void *)v9 + 11) = *((void *)v10 + 11);
          long long v92 = &qword_1EB88E9A0;
          uint64_t v93 = sub_1C0036630;
          goto LABEL_50;
        case 9u:
          long long v121 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v121;
          long long v122 = v10[3];
          v9[2] = v10[2];
          v9[3] = v122;
          *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
          *((void *)v9 + 9) = *((void *)v10 + 9);
          *((unsigned char *)v9 + 80) = *((unsigned char *)v10 + 80);
          *((void *)v9 + 11) = *((void *)v10 + 11);
          long long v92 = &qword_1EB88E998;
          uint64_t v93 = sub_1C00738F0;
          goto LABEL_50;
        case 0xAu:
          long long v123 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v123;
          long long v124 = v10[3];
          v9[2] = v10[2];
          v9[3] = v124;
          *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
          *((void *)v9 + 9) = *((void *)v10 + 9);
          *((unsigned char *)v9 + 80) = *((unsigned char *)v10 + 80);
          *((void *)v9 + 11) = *((void *)v10 + 11);
          long long v92 = &qword_1EB88E9B0;
          uint64_t v93 = sub_1C0084C58;
          goto LABEL_50;
        case 0xBu:
          long long v125 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v125;
          long long v126 = v10[3];
          v9[2] = v10[2];
          v9[3] = v126;
          *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
          *((void *)v9 + 9) = *((void *)v10 + 9);
          *((unsigned char *)v9 + 80) = *((unsigned char *)v10 + 80);
          *((void *)v9 + 11) = *((void *)v10 + 11);
          long long v92 = &qword_1EB88E9A8;
          uint64_t v93 = sub_1C006F9DC;
LABEL_50:
          sub_1C0AF9C9C(0, v92, (void (*)(void))v93);
          goto LABEL_51;
        default:
          long long v34 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v34;
          long long v35 = v10[3];
          v9[2] = v10[2];
          v9[3] = v35;
          *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
          *(_WORD *)((char *)v9 + 65) = *(_WORD *)((char *)v10 + 65);
          *((void *)v9 + 9) = *((void *)v10 + 9);
          uint64_t v36 = &qword_1EB88E9C8;
LABEL_42:
          sub_1BFF71924(0, v36);
LABEL_51:
          uint64_t v106 = *(int *)(v113 + 64);
LABEL_52:
          uint64_t v127 = (char *)v9 + v106;
          uint64_t v128 = (char *)v10 + v106;
          uint64_t v129 = sub_1C1518CDC();
          uint64_t v130 = *(void *)(v129 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v128, 1, v129))
          {
            sub_1C0AF9C38(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
            memcpy(v127, v128, *(void *)(*(void *)(v131 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v127, v128, v129);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
          }
          break;
      }
      goto LABEL_216;
    case 0x1Au:
      uint64_t v37 = sub_1C151CA7C();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v37 - 8) + 32))(v9, v10, v37);
      goto LABEL_217;
    default:
      memcpy(v9, v10, *(void *)(v12 + 64));
      goto LABEL_218;
  }
LABEL_219:
  uint64_t v401 = *(int *)(a3 + 28);
  uint64_t v402 = (uint64_t)a1 + v401;
  int v403 = (char *)a2 + v401;
  if (*((unsigned __int8 *)a1 + v401 + 16) != 255)
  {
    int v404 = v403[16];
    if (v404 != 255)
    {
      *(_OWORD *)uint64_t v402 = *(_OWORD *)v403;
      *(unsigned char *)(v402 + 16) = v404 & 1;
      sub_1C02F6038();
      return a1;
    }
    sub_1C0B184B0(v402);
  }
  *(_OWORD *)uint64_t v402 = *(_OWORD *)v403;
  *(unsigned char *)(v402 + 16) = v403[16];
  return a1;
}

uint64_t sub_1C0B1FA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0B1FA24);
}

uint64_t sub_1C0B1FA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_1C0AF9C38(0, &qword_1EA1A1FC0, type metadata accessor for FormatInspectionItem.Value, MEMORY[0x1E4FBB718]);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1C0B1FB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0B1FB24);
}

uint64_t sub_1C0B1FB24(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    sub_1C0AF9C38(0, &qword_1EA1A1FC0, type metadata accessor for FormatInspectionItem.Value, MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for FormatInspectionItem(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA1A3850);
}

void sub_1C0B1FC1C()
{
  sub_1C0AF9C38(319, &qword_1EA1A1FC0, type metadata accessor for FormatInspectionItem.Value, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for FormatInspectionItemWatching()
{
  return &type metadata for FormatInspectionItemWatching;
}

char *sub_1C0B1FCFC(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v7 = *a2;
        id v8 = v7;
        *(void *)a1 = v7;
        goto LABEL_96;
      }
      type metadata accessor for FormatFile();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v140 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v140;
          uint64_t v141 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v141;
          uint64_t v142 = a2[5];
          *((void *)a1 + 4) = a2[4];
          *((void *)a1 + 5) = v142;
          uint64_t v143 = a2[7];
          *((void *)a1 + 6) = a2[6];
          *((void *)a1 + 7) = v143;
          uint64_t v144 = a2[8];
          a1[72] = *((unsigned char *)a2 + 72);
          *((void *)a1 + 8) = v144;
          size_t v145 = a2[11];
          *((void *)a1 + 10) = a2[10];
          *((void *)a1 + 11) = v145;
          __dstd = (char *)(a2 + 12);
          unsigned __int8 v146 = *((unsigned char *)a2 + 106);
          int v147 = *((unsigned __int16 *)a2 + 52);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v146 == 255)
          {
            *((void *)a1 + 12) = *(void *)__dstd;
            *(_DWORD *)(a1 + 103) = *(_DWORD *)(__dstd + 7);
          }
          else
          {
            uint64_t v225 = v147 & 0xFF00FFFF | (v146 << 16);
            uint64_t v226 = *(void *)__dstd;
            sub_1BFFA742C(*(void *)__dstd, v225, SBYTE2(v225), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
            *((void *)a1 + 12) = v226;
            *((_WORD *)a1 + 52) = v225;
            a1[106] = BYTE2(v225);
          }
          goto LABEL_95;
        case 2u:
          uint64_t v148 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v148;
          uint64_t v149 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v149;
          uint64_t v150 = a2[5];
          *((void *)a1 + 4) = a2[4];
          *((void *)a1 + 5) = v150;
          a1[48] = *((unsigned char *)a2 + 48);
          *((void *)a1 + 7) = a2[7];
          uint64_t v151 = a2 + 8;
          unint64_t v152 = (unint64_t)a2[9];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v152 <= 2)
          {
            *((_OWORD *)a1 + 4) = *v151;
          }
          else
          {
            a1[64] = *(unsigned char *)v151;
            *((void *)a1 + 9) = v152;
            swift_bridgeObjectRetain();
          }
          uint64_t v233 = a2[11];
          *((void *)a1 + 10) = a2[10];
          *((void *)a1 + 11) = v233;
          uint64_t v234 = a2[13];
          *((void *)a1 + 12) = a2[12];
          *((void *)a1 + 13) = v234;
          uint64_t v235 = a2[15];
          *((void *)a1 + 14) = a2[14];
          *((void *)a1 + 15) = v235;
          a1[128] = *((unsigned char *)a2 + 128);
          *((void *)a1 + 17) = a2[17];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_95;
        case 3u:
          uint64_t v153 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v153;
          uint64_t v154 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v154;
          uint64_t v155 = a2[5];
          *((void *)a1 + 4) = a2[4];
          *((void *)a1 + 5) = v155;
          uint64_t v156 = a2 + 6;
          unint64_t v157 = (unint64_t)a2[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v157 >= 0xF)
          {
            *((void *)a1 + 6) = *v156;
            *((void *)a1 + 7) = v157;
            swift_bridgeObjectRetain();
          }
          else
          {
            *((_OWORD *)a1 + 3) = *(_OWORD *)v156;
          }
          long long v227 = a2[9];
          *((void *)a1 + 8) = a2[8];
          *((void *)a1 + 9) = v227;
          long long v228 = a2[11];
          *((void *)a1 + 10) = a2[10];
          *((void *)a1 + 11) = v228;
          long long v229 = a2[13];
          *((void *)a1 + 12) = a2[12];
          *((void *)a1 + 13) = v229;
          *((void *)a1 + 14) = a2[14];
          a1[120] = *((unsigned char *)a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_95;
        case 4u:
          uint64_t v158 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v158;
          uint64_t v159 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v159;
          uint64_t v160 = a2[5];
          *((void *)a1 + 4) = a2[4];
          *((void *)a1 + 5) = v160;
          *((void *)a1 + 6) = a2[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_95;
        case 5u:
          long long v195 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v195;
          uint64_t v196 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v196;
          uint64_t v197 = a2[5];
          *((void *)a1 + 4) = a2[4];
          *((void *)a1 + 5) = v197;
          *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
          size_t v198 = a2[8];
          *((void *)a1 + 7) = a2[7];
          *((void *)a1 + 8) = v198;
          uint64_t v199 = a2[10];
          *((void *)a1 + 9) = a2[9];
          *((void *)a1 + 10) = v199;
          uint64_t v200 = a2[12];
          *((void *)a1 + 11) = a2[11];
          *((void *)a1 + 12) = v200;
          uint64_t v201 = a2[14];
          *((void *)a1 + 13) = a2[13];
          *((void *)a1 + 14) = v201;
          uint64_t v202 = a2[16];
          *((void *)a1 + 15) = a2[15];
          *((void *)a1 + 16) = v202;
          uint64_t v203 = a2[18];
          *((void *)a1 + 17) = a2[17];
          *((void *)a1 + 18) = v203;
          *((void *)a1 + 19) = a2[19];
          uint64_t v328 = (char *)(a2 + 20);
          unint64_t v310 = (unint64_t)a2[21];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v310 >= 2)
          {
            uint64_t v205 = a1 + 160;
            if (v310 != 2)
            {
              a1[160] = *v328;
              *((void *)a1 + 21) = v310;
              swift_bridgeObjectRetain();
              goto LABEL_83;
            }
            long long v204 = *(_OWORD *)v328;
          }
          else
          {
            long long v204 = *(_OWORD *)v328;
            uint64_t v205 = a1 + 160;
          }
          *uint64_t v205 = v204;
LABEL_83:
          uint64_t v320 = (int *)type metadata accessor for FormatPackage();
          uint64_t v270 = v320[23];
          uint64_t v271 = &a1[v270];
          uint64_t v272 = (uint64_t)a2 + v270;
          uint64_t v273 = *(uint64_t *)((char *)a2 + v270 + 8);
          *(void *)uint64_t v271 = *(char **)((char *)a2 + v270);
          *((void *)v271 + 1) = v273;
          uint64_t v312 = (int *)type metadata accessor for FormatCompilerOptions(0);
          uint64_t v274 = v312[6];
          uint64_t v275 = &v271[v274];
          uint64_t v276 = v272 + v274;
          uint64_t v277 = *(void *)(v272 + v274 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v277 == 1)
          {
            long long v278 = *(_OWORD *)(v276 + 16);
            *(_OWORD *)uint64_t v275 = *(_OWORD *)v276;
            *((_OWORD *)v275 + 1) = v278;
            *((_OWORD *)v275 + 2) = *(_OWORD *)(v276 + 32);
          }
          else
          {
            *(void *)uint64_t v275 = *(void *)v276;
            *((void *)v275 + 1) = v277;
            uint64_t v279 = *(void *)(v276 + 24);
            *((void *)v275 + 2) = *(void *)(v276 + 16);
            *((void *)v275 + 3) = v279;
            uint64_t v280 = *(void *)(v276 + 40);
            *((void *)v275 + 4) = *(void *)(v276 + 32);
            *((void *)v275 + 5) = v280;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          uint64_t v281 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          uint64_t v282 = &v275[v281];
          uint64_t v283 = (const void *)(v276 + v281);
          uint64_t v284 = sub_1C1518CDC();
          uint64_t v285 = *(void *)(v284 - 8);
          long long v330 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v285 + 48);
          if (v330(v283, 1, v284))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v282, v283, *(void *)(*(void *)(v286 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v285 + 16))(v282, v283, v284);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v285 + 56))(v282, 0, 1, v284);
          }
          uint64_t v287 = v312[7];
          uint64_t v288 = &v271[v287];
          uint64_t v289 = (const void *)(v272 + v287);
          if (v330((const void *)(v272 + v287), 1, v284))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v288, v289, *(void *)(*(void *)(v290 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v285 + 16))(v288, v289, v284);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v285 + 56))(v288, 0, 1, v284);
          }
          *(void *)&v271[v312[8]] = *(void *)(v272 + v312[8]);
          uint64_t v291 = v320[24];
          uint64_t v292 = &a1[v291];
          uint64_t v293 = (uint64_t)a2 + v291;
          uint64_t v294 = sub_1C151928C();
          uint64_t v295 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v294 - 8) + 16);
          swift_bridgeObjectRetain();
          v295(v292, v293, v294);
          uint64_t v296 = v320[25];
          uint64_t v297 = &a1[v296];
          uint64_t v298 = (char *)a2 + v296;
          if (v330(v298, 1, v284))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v297, v298, *(void *)(*(void *)(v299 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v285 + 16))(v297, v298, v284);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v285 + 56))(v297, 0, 1, v284);
          }
LABEL_95:
          swift_storeEnumTagMultiPayload();
          goto LABEL_96;
        case 6u:
          long long v206 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v206;
          *((void *)a1 + 2) = a2[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_95;
        case 7u:
          *(void *)a1 = *a2;
          swift_retain();
          goto LABEL_95;
        case 8u:
          long long v207 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v207;
          int v208 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v208;
          uint64_t v209 = a2[5];
          *((void *)a1 + 4) = a2[4];
          *((void *)a1 + 5) = v209;
          long long v210 = a2[7];
          *((void *)a1 + 6) = a2[6];
          *((void *)a1 + 7) = v210;
          *((void *)a1 + 8) = a2[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_95;
        case 9u:
          uint64_t v161 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v161;
          uint64_t v162 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v162;
          uint64_t v163 = a2[5];
          *((void *)a1 + 4) = a2[4];
          *((void *)a1 + 5) = v163;
          uint64_t v164 = a2[7];
          *((void *)a1 + 6) = a2[6];
          *((void *)a1 + 7) = v164;
          uint64_t v165 = a2[9];
          *((void *)a1 + 8) = a2[8];
          *((void *)a1 + 9) = v165;
          a1[80] = *((unsigned char *)a2 + 80);
          uint64_t v166 = a2[12];
          *((void *)a1 + 11) = a2[11];
          *((void *)a1 + 12) = v166;
          a1[104] = *((unsigned char *)a2 + 104);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_95;
        case 0xAu:
          long long v211 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v211;
          uint64_t v212 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v212;
          uint64_t v213 = (uint64_t)a2[4];
          uint64_t v214 = (uint64_t)a2[5];
          uint64_t v215 = (uint64_t)a2[6];
          uint64_t v216 = (uint64_t)a2[7];
          uint64_t v217 = (uint64_t)a2[8];
          uint64_t v218 = (uint64_t)a2[9];
          unsigned __int8 v219 = *((unsigned char *)a2 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF1DB64(v213, v214, v215, v216, v217, v218, v219);
          *((void *)a1 + 4) = v213;
          *((void *)a1 + 5) = v214;
          *((void *)a1 + 6) = v215;
          *((void *)a1 + 7) = v216;
          *((void *)a1 + 8) = v217;
          *((void *)a1 + 9) = v218;
          a1[80] = v219;
          goto LABEL_95;
        case 0xBu:
          uint64_t v167 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v167;
          uint64_t v168 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v168;
          uint64_t v169 = a2[5];
          *((void *)a1 + 4) = a2[4];
          *((void *)a1 + 5) = v169;
          uint64_t v170 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
          uint64_t v171 = &a1[v170];
          uint64_t v172 = (uint64_t)a2 + v170;
          uint64_t v173 = *(uint64_t *)((char *)a2 + v170 + 8);
          *(void *)uint64_t v171 = *(char **)((char *)a2 + v170);
          *((void *)v171 + 1) = v173;
          uint64_t v174 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v175 = v174[5];
          uint64_t v326 = v172 + v175;
          __dstg = &v171[v175];
          uint64_t v176 = sub_1C151631C();
          uint64_t v317 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v176 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v317(__dstg, v326, v176);
          uint64_t v177 = v174[6];
          long long v178 = &v171[v177];
          uint64_t v179 = (void *)(v172 + v177);
          uint64_t v327 = v179[1];
          *(void *)long long v178 = *v179;
          *((void *)v178 + 1) = v327;
          uint64_t v180 = v174[7];
          uint64_t v181 = &v171[v180];
          uint64_t v182 = (void *)(v172 + v180);
          uint64_t v183 = v182[1];
          *(void *)uint64_t v181 = *v182;
          *((void *)v181 + 1) = v183;
          uint64_t v184 = v174[8];
          uint64_t v185 = &v171[v184];
          uint64_t v186 = (void *)(v172 + v184);
          uint64_t v187 = v186[1];
          *(void *)uint64_t v185 = *v186;
          *((void *)v185 + 1) = v187;
          uint64_t v188 = v174[9];
          uint64_t v189 = &v171[v188];
          uint64_t v190 = (void *)(v172 + v188);
          uint64_t v191 = v190[1];
          *(void *)uint64_t v189 = *v190;
          *((void *)v189 + 1) = v191;
          uint64_t v192 = v174[10];
          __dste = &v171[v192];
          uint64_t v318 = (const void *)(v172 + v192);
          uint64_t v193 = sub_1C151D6DC();
          uint64_t v303 = *(void *)(v193 - 8);
          id v309 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v303 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v309(v318, 1, v193))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dste, v318, *(void *)(*(void *)(v194 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v303 + 16))(__dste, v318, v193);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v303 + 56))(__dste, 0, 1, v193);
          }
          *(void *)&v171[v174[11]] = *(void *)(v172 + v174[11]);
          *(void *)&v171[v174[12]] = *(void *)(v172 + v174[12]);
          *(void *)&v171[v174[13]] = *(void *)(v172 + v174[13]);
          *(void *)&v171[v174[14]] = *(void *)(v172 + v174[14]);
          *(void *)&v171[v174[15]] = *(void *)(v172 + v174[15]);
          *(void *)&v171[v174[16]] = *(void *)(v172 + v174[16]);
          *(void *)&v171[v174[17]] = *(void *)(v172 + v174[17]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_95;
        default:
          uint64_t v36 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v36;
          uint64_t v37 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v38 = v37[5];
          long long v39 = &a1[v38];
          uint64_t v40 = (uint64_t)a2 + v38;
          uint64_t v41 = sub_1C151631C();
          uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16);
          swift_bridgeObjectRetain();
          v42(v39, v40, v41);
          uint64_t v43 = v37[6];
          uint64_t v44 = &a1[v43];
          uint64_t v45 = (char **)((char *)a2 + v43);
          uint64_t v322 = v45[1];
          *(void *)uint64_t v44 = *v45;
          *((void *)v44 + 1) = v322;
          uint64_t v46 = v37[7];
          uint64_t v47 = &a1[v46];
          uint64_t v48 = (char **)((char *)a2 + v46);
          uint64_t v49 = v48[1];
          *(void *)uint64_t v47 = *v48;
          *((void *)v47 + 1) = v49;
          uint64_t v50 = v37[8];
          long long v51 = &a1[v50];
          uint64_t v52 = (char **)((char *)a2 + v50);
          uint64_t v53 = v52[1];
          *(void *)long long v51 = *v52;
          *((void *)v51 + 1) = v53;
          uint64_t v54 = v37[9];
          uint64_t v55 = &a1[v54];
          uint64_t v56 = (char **)((char *)a2 + v54);
          uint64_t v57 = v56[1];
          *(void *)uint64_t v55 = *v56;
          *((void *)v55 + 1) = v57;
          uint64_t v58 = v37[10];
          __dsta = &a1[v58];
          uint64_t v314 = (char *)a2 + v58;
          uint64_t v59 = sub_1C151D6DC();
          uint64_t v60 = *(void *)(v59 - 8);
          uint64_t v305 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v305(v314, 1, v59))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dsta, v314, *(void *)(*(void *)(v61 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v60 + 16))(__dsta, v314, v59);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(__dsta, 0, 1, v59);
          }
          *(void *)&a1[v37[11]] = *(char **)((char *)a2 + v37[11]);
          *(void *)&a1[v37[12]] = *(char **)((char *)a2 + v37[12]);
          *(void *)&a1[v37[13]] = *(char **)((char *)a2 + v37[13]);
          *(void *)&a1[v37[14]] = *(char **)((char *)a2 + v37[14]);
          *(void *)&a1[v37[15]] = *(char **)((char *)a2 + v37[15]);
          *(void *)&a1[v37[16]] = *(char **)((char *)a2 + v37[16]);
          *(void *)&a1[v37[17]] = *(char **)((char *)a2 + v37[17]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_95;
      }
    }
    type metadata accessor for FormatFile();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v62 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v62;
        long long v63 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v63;
        uint64_t v64 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v64;
        uint64_t v65 = a2[7];
        *((void *)a1 + 6) = a2[6];
        *((void *)a1 + 7) = v65;
        uint64_t v66 = a2[8];
        a1[72] = *((unsigned char *)a2 + 72);
        *((void *)a1 + 8) = v66;
        uint64_t v67 = a2[11];
        *((void *)a1 + 10) = a2[10];
        *((void *)a1 + 11) = v67;
        __dstb = (uint64_t *)(a2 + 12);
        unsigned __int8 v68 = *((unsigned char *)a2 + 106);
        int v69 = *((unsigned __int16 *)a2 + 52);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v68 == 255)
        {
          *((void *)a1 + 12) = *__dstb;
          *(_DWORD *)(a1 + 103) = *(_DWORD *)((char *)a2 + 103);
        }
        else
        {
          uint64_t v220 = v69 & 0xFF00FFFF | (v68 << 16);
          uint64_t v221 = *__dstb;
          sub_1BFFA742C(*__dstb, v220, SBYTE2(v220), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          *((void *)a1 + 12) = v221;
          *((_WORD *)a1 + 52) = v220;
          a1[106] = BYTE2(v220);
        }
        goto LABEL_82;
      case 2u:
        uint64_t v70 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v70;
        uint64_t v71 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v71;
        long long v72 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v72;
        a1[48] = *((unsigned char *)a2 + 48);
        *((void *)a1 + 7) = a2[7];
        uint64_t v73 = a2 + 8;
        unint64_t v74 = (unint64_t)a2[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v74 <= 2)
        {
          *((_OWORD *)a1 + 4) = *v73;
        }
        else
        {
          a1[64] = *(unsigned char *)v73;
          *((void *)a1 + 9) = v74;
          swift_bridgeObjectRetain();
        }
        uint64_t v230 = a2[11];
        *((void *)a1 + 10) = a2[10];
        *((void *)a1 + 11) = v230;
        long long v231 = a2[13];
        *((void *)a1 + 12) = a2[12];
        *((void *)a1 + 13) = v231;
        long long v232 = a2[15];
        *((void *)a1 + 14) = a2[14];
        *((void *)a1 + 15) = v232;
        a1[128] = *((unsigned char *)a2 + 128);
        *((void *)a1 + 17) = a2[17];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_82;
      case 3u:
        uint64_t v75 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v75;
        uint64_t v76 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v76;
        uint64_t v77 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v77;
        uint64_t v78 = a2 + 6;
        unint64_t v79 = (unint64_t)a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v79 >= 0xF)
        {
          *((void *)a1 + 6) = *v78;
          *((void *)a1 + 7) = v79;
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)a1 + 3) = *(_OWORD *)v78;
        }
        long long v222 = a2[9];
        *((void *)a1 + 8) = a2[8];
        *((void *)a1 + 9) = v222;
        uint64_t v223 = a2[11];
        *((void *)a1 + 10) = a2[10];
        *((void *)a1 + 11) = v223;
        long long v224 = a2[13];
        *((void *)a1 + 12) = a2[12];
        *((void *)a1 + 13) = v224;
        *((void *)a1 + 14) = a2[14];
        a1[120] = *((unsigned char *)a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_82;
      case 4u:
        uint64_t v80 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v80;
        uint64_t v81 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v81;
        long long v82 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v82;
        *((void *)a1 + 6) = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_82;
      case 5u:
        uint64_t v83 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v83;
        int v84 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v84;
        uint64_t v85 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v85;
        *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
        uint64_t v86 = a2[8];
        *((void *)a1 + 7) = a2[7];
        *((void *)a1 + 8) = v86;
        long long v87 = a2[10];
        *((void *)a1 + 9) = a2[9];
        *((void *)a1 + 10) = v87;
        long long v88 = a2[12];
        *((void *)a1 + 11) = a2[11];
        *((void *)a1 + 12) = v88;
        uint64_t v89 = a2[14];
        *((void *)a1 + 13) = a2[13];
        *((void *)a1 + 14) = v89;
        long long v90 = a2[16];
        *((void *)a1 + 15) = a2[15];
        *((void *)a1 + 16) = v90;
        long long v91 = a2[18];
        *((void *)a1 + 17) = a2[17];
        *((void *)a1 + 18) = v91;
        *((void *)a1 + 19) = a2[19];
        uint64_t v323 = (char *)(a2 + 20);
        unint64_t v306 = (unint64_t)a2[21];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v306 >= 2)
        {
          uint64_t v93 = a1 + 160;
          if (v306 != 2)
          {
            a1[160] = *v323;
            *((void *)a1 + 21) = v306;
            swift_bridgeObjectRetain();
            goto LABEL_70;
          }
          long long v92 = *(_OWORD *)v323;
        }
        else
        {
          long long v92 = *(_OWORD *)v323;
          uint64_t v93 = a1 + 160;
        }
        *uint64_t v93 = v92;
LABEL_70:
        uint64_t v319 = (int *)type metadata accessor for FormatPackage();
        uint64_t v236 = v319[23];
        long long v237 = &a1[v236];
        uint64_t v238 = (uint64_t)a2 + v236;
        uint64_t v239 = *(uint64_t *)((char *)a2 + v236 + 8);
        *(void *)long long v237 = *(char **)((char *)a2 + v236);
        *((void *)v237 + 1) = v239;
        uint64_t v311 = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v240 = v311[6];
        long long v241 = &v237[v240];
        uint64_t v242 = v238 + v240;
        uint64_t v243 = *(void *)(v238 + v240 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v243 == 1)
        {
          long long v244 = *(_OWORD *)(v242 + 16);
          *(_OWORD *)long long v241 = *(_OWORD *)v242;
          *((_OWORD *)v241 + 1) = v244;
          *((_OWORD *)v241 + 2) = *(_OWORD *)(v242 + 32);
        }
        else
        {
          *(void *)long long v241 = *(void *)v242;
          *((void *)v241 + 1) = v243;
          uint64_t v245 = *(void *)(v242 + 24);
          *((void *)v241 + 2) = *(void *)(v242 + 16);
          *((void *)v241 + 3) = v245;
          uint64_t v246 = *(void *)(v242 + 40);
          *((void *)v241 + 4) = *(void *)(v242 + 32);
          *((void *)v241 + 5) = v246;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v247 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v248 = &v241[v247];
        uint64_t v249 = (const void *)(v242 + v247);
        uint64_t v250 = sub_1C1518CDC();
        uint64_t v251 = *(void *)(v250 - 8);
        uint64_t v329 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v251 + 48);
        if (v329(v249, 1, v250))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v248, v249, *(void *)(*(void *)(v252 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v251 + 16))(v248, v249, v250);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v251 + 56))(v248, 0, 1, v250);
        }
        uint64_t v253 = v311[7];
        uint64_t v254 = &v237[v253];
        uint64_t v255 = (const void *)(v238 + v253);
        if (v329((const void *)(v238 + v253), 1, v250))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v254, v255, *(void *)(*(void *)(v256 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v251 + 16))(v254, v255, v250);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v251 + 56))(v254, 0, 1, v250);
        }
        *(void *)&v237[v311[8]] = *(void *)(v238 + v311[8]);
        uint64_t v257 = v319[24];
        uint64_t v258 = &a1[v257];
        uint64_t v259 = (uint64_t)a2 + v257;
        uint64_t v260 = sub_1C151928C();
        uint64_t v261 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v260 - 8) + 16);
        swift_bridgeObjectRetain();
        v261(v258, v259, v260);
        uint64_t v262 = v319[25];
        uint64_t v263 = &a1[v262];
        uint64_t v264 = (char *)a2 + v262;
        if (v329((char *)a2 + v262, 1, v250))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v263, v264, *(void *)(*(void *)(v265 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v251 + 16))(v263, v264, v250);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v251 + 56))(v263, 0, 1, v250);
        }
LABEL_82:
        swift_storeEnumTagMultiPayload();
        sub_1C0913D20();
        uint64_t v267 = *(int *)(v266 + 48);
        uint64_t v268 = *(char **)((char *)a2 + v267);
        id v269 = v268;
        *(void *)&a1[v267] = v268;
LABEL_96:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 6u:
        long long v94 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v94;
        *((void *)a1 + 2) = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_82;
      case 7u:
        *(void *)a1 = *a2;
        swift_retain();
        goto LABEL_82;
      case 8u:
        long long v95 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v95;
        uint64_t v96 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v96;
        long long v97 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v97;
        uint64_t v98 = a2[7];
        *((void *)a1 + 6) = a2[6];
        *((void *)a1 + 7) = v98;
        *((void *)a1 + 8) = a2[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_82;
      case 9u:
        char v99 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v99;
        uint64_t v100 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v100;
        uint64_t v101 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v101;
        long long v102 = a2[7];
        *((void *)a1 + 6) = a2[6];
        *((void *)a1 + 7) = v102;
        long long v103 = a2[9];
        *((void *)a1 + 8) = a2[8];
        *((void *)a1 + 9) = v103;
        a1[80] = *((unsigned char *)a2 + 80);
        long long v104 = a2[12];
        *((void *)a1 + 11) = a2[11];
        *((void *)a1 + 12) = v104;
        a1[104] = *((unsigned char *)a2 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_82;
      case 0xAu:
        long long v105 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v105;
        uint64_t v106 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v106;
        uint64_t v107 = (uint64_t)a2[4];
        uint64_t v108 = (uint64_t)a2[5];
        uint64_t v109 = (uint64_t)a2[6];
        uint64_t v110 = (uint64_t)a2[7];
        uint64_t v111 = (uint64_t)a2[8];
        uint64_t v112 = (uint64_t)a2[9];
        unsigned __int8 __dstf = *((unsigned char *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v107, v108, v109, v110, v111, v112, __dstf);
        *((void *)a1 + 4) = v107;
        *((void *)a1 + 5) = v108;
        *((void *)a1 + 6) = v109;
        *((void *)a1 + 7) = v110;
        *((void *)a1 + 8) = v111;
        *((void *)a1 + 9) = v112;
        a1[80] = __dstf;
        goto LABEL_82;
      case 0xBu:
        uint64_t v113 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v113;
        long long v114 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v114;
        long long v115 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v115;
        uint64_t v116 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v117 = &a1[v116];
        uint64_t v118 = (uint64_t)a2 + v116;
        uint64_t v119 = *(uint64_t *)((char *)a2 + v116 + 8);
        *(void *)uint64_t v117 = *(char **)((char *)a2 + v116);
        *((void *)v117 + 1) = v119;
        long long v120 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v121 = v120[5];
        uint64_t v315 = v118 + v121;
        long long v324 = &v117[v121];
        uint64_t v122 = sub_1C151631C();
        uint64_t v307 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v122 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v307(v324, v315, v122);
        uint64_t v123 = v120[6];
        long long v124 = &v117[v123];
        long long v125 = (void *)(v118 + v123);
        uint64_t v325 = v125[1];
        *(void *)long long v124 = *v125;
        *((void *)v124 + 1) = v325;
        uint64_t v126 = v120[7];
        uint64_t v127 = &v117[v126];
        uint64_t v128 = (void *)(v118 + v126);
        uint64_t v316 = v128[1];
        *(void *)uint64_t v127 = *v128;
        *((void *)v127 + 1) = v316;
        uint64_t v129 = v120[8];
        uint64_t v130 = &v117[v129];
        uint64_t v131 = (void *)(v118 + v129);
        uint64_t v132 = v131[1];
        *(void *)uint64_t v130 = *v131;
        *((void *)v130 + 1) = v132;
        uint64_t v133 = v120[9];
        uint64_t v134 = &v117[v133];
        uint64_t v135 = (void *)(v118 + v133);
        uint64_t v136 = v135[1];
        *(void *)uint64_t v134 = *v135;
        *((void *)v134 + 1) = v136;
        uint64_t v137 = v120[10];
        __dstc = &v117[v137];
        uint64_t v308 = (const void *)(v118 + v137);
        uint64_t v138 = sub_1C151D6DC();
        uint64_t v301 = *(void *)(v138 - 8);
        uint64_t v302 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v301 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v302(v308, 1, v138))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dstc, v308, *(void *)(*(void *)(v139 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v301 + 16))(__dstc, v308, v138);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v301 + 56))(__dstc, 0, 1, v138);
        }
        *(void *)&v117[v120[11]] = *(void *)(v118 + v120[11]);
        *(void *)&v117[v120[12]] = *(void *)(v118 + v120[12]);
        *(void *)&v117[v120[13]] = *(void *)(v118 + v120[13]);
        *(void *)&v117[v120[14]] = *(void *)(v118 + v120[14]);
        *(void *)&v117[v120[15]] = *(void *)(v118 + v120[15]);
        *(void *)&v117[v120[16]] = *(void *)(v118 + v120[16]);
        *(void *)&v117[v120[17]] = *(void *)(v118 + v120[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_82;
      default:
        uint64_t v10 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v10;
        uint64_t v11 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v12 = v11[5];
        uint64_t v13 = &a1[v12];
        uint64_t v14 = (uint64_t)a2 + v12;
        uint64_t v15 = sub_1C151631C();
        uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
        uint64_t v17 = v11[6];
        size_t v18 = &a1[v17];
        uint64_t v19 = (char **)((char *)a2 + v17);
        uint64_t v321 = v19[1];
        *(void *)size_t v18 = *v19;
        *((void *)v18 + 1) = v321;
        uint64_t v20 = v11[7];
        long long v21 = &a1[v20];
        long long v22 = (char **)((char *)a2 + v20);
        uint64_t v23 = v22[1];
        *(void *)long long v21 = *v22;
        *((void *)v21 + 1) = v23;
        uint64_t v24 = v11[8];
        uint64_t v25 = &a1[v24];
        uint64_t v26 = (char **)((char *)a2 + v24);
        uint64_t v27 = v26[1];
        *(void *)uint64_t v25 = *v26;
        *((void *)v25 + 1) = v27;
        uint64_t v28 = v11[9];
        uint64_t v29 = &a1[v28];
        uint64_t v30 = (char **)((char *)a2 + v28);
        uint64_t v31 = v30[1];
        *(void *)uint64_t v29 = *v30;
        *((void *)v29 + 1) = v31;
        uint64_t v32 = v11[10];
        __dst = &a1[v32];
        uint64_t v313 = (char *)a2 + v32;
        uint64_t v33 = sub_1C151D6DC();
        uint64_t v34 = *(void *)(v33 - 8);
        uint64_t v304 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v304(v313, 1, v33))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dst, v313, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v313, v33);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
        }
        *(void *)&a1[v11[11]] = *(char **)((char *)a2 + v11[11]);
        *(void *)&a1[v11[12]] = *(char **)((char *)a2 + v11[12]);
        *(void *)&a1[v11[13]] = *(char **)((char *)a2 + v11[13]);
        *(void *)&a1[v11[14]] = *(char **)((char *)a2 + v11[14]);
        *(void *)&a1[v11[15]] = *(char **)((char *)a2 + v11[15]);
        *(void *)&a1[v11[16]] = *(char **)((char *)a2 + v11[16]);
        *(void *)&a1[v11[17]] = *(char **)((char *)a2 + v11[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_82;
    }
  }
  uint64_t v9 = *a2;
  *(void *)a1 = *a2;
  a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
  swift_retain();
  return a1;
}

void sub_1C0B21CDC(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    type metadata accessor for FormatFile();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        uint64_t v9 = type metadata accessor for FormatContent(0);
        uint64_t v10 = a1 + *(int *)(v9 + 20);
        uint64_t v11 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = a1 + *(int *)(v9 + 40);
        uint64_t v13 = sub_1C151D6DC();
        uint64_t v14 = *(void *)(v13 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
          (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
        }
        goto LABEL_73;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(unsigned __int8 *)(a1 + 106) != 255)
        {
          uint64_t v42 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
          sub_1BFFA742C(*(void *)(a1 + 96), v42, SBYTE2(v42), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
        }
        break;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 72) >= 3uLL) {
          swift_bridgeObjectRelease();
        }
        goto LABEL_73;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 56) >= 0xFuLL) {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_74;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_74;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 168) >= 3uLL) {
          swift_bridgeObjectRelease();
        }
        uint64_t v43 = (int *)type metadata accessor for FormatPackage();
        uint64_t v44 = a1 + v43[23];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v45 = type metadata accessor for FormatCompilerOptions(0);
        uint64_t v46 = v44 + *(int *)(v45 + 24);
        if (*(void *)(v46 + 8) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v47 = v46 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v48 = sub_1C1518CDC();
        uint64_t v49 = *(void *)(v48 - 8);
        uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
        if (!v50(v47, 1, v48)) {
          (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
        }
        uint64_t v51 = v44 + *(int *)(v45 + 28);
        if (!v50(v51, 1, v48)) {
          (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v48);
        }
        swift_bridgeObjectRelease();
        uint64_t v52 = a1 + v43[24];
        uint64_t v53 = sub_1C151928C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);
        uint64_t v54 = a1 + v43[25];
        if (!v50(v54, 1, v48)) {
          (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v54, v48);
        }
        break;
      case 6u:
        swift_bridgeObjectRelease();
        goto LABEL_74;
      case 7u:
        swift_release();
        break;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_74;
      case 9u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_74;
      case 0xAu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEC28BC(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
        break;
      case 0xBu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v55 = a1 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
        swift_bridgeObjectRelease();
        uint64_t v56 = type metadata accessor for FormatContent(0);
        uint64_t v57 = v55 + *(int *)(v56 + 20);
        uint64_t v58 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v57, v58);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v59 = v55 + *(int *)(v56 + 40);
        uint64_t v60 = sub_1C151D6DC();
        uint64_t v61 = *(void *)(v60 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60)) {
          (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v59, v60);
        }
LABEL_73:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_74:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    sub_1C0913D20();
    uint64_t v15 = *(void **)(a1 + *(int *)(v62 + 48));
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (!EnumCaseMultiPayload)
      {
        type metadata accessor for FormatFile();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            swift_bridgeObjectRelease();
            uint64_t v3 = type metadata accessor for FormatContent(0);
            uint64_t v4 = a1 + *(int *)(v3 + 20);
            uint64_t v5 = sub_1C151631C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v6 = a1 + *(int *)(v3 + 40);
            uint64_t v7 = sub_1C151D6DC();
            uint64_t v8 = *(void *)(v7 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
              (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
            }
            goto LABEL_43;
          case 1u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(unsigned __int8 *)(a1 + 106) != 255)
            {
              uint64_t v16 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
              sub_1BFFA742C(*(void *)(a1 + 96), v16, SBYTE2(v16), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
            }
            return;
          case 2u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(a1 + 72) >= 3uLL) {
              swift_bridgeObjectRelease();
            }
            goto LABEL_43;
          case 3u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(a1 + 56) >= 0xFuLL) {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_44;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_44;
          case 5u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(a1 + 168) >= 3uLL) {
              swift_bridgeObjectRelease();
            }
            uint64_t v17 = (int *)type metadata accessor for FormatPackage();
            uint64_t v18 = a1 + v17[23];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v19 = type metadata accessor for FormatCompilerOptions(0);
            uint64_t v20 = v18 + *(int *)(v19 + 24);
            if (*(void *)(v20 + 8) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            uint64_t v21 = v20 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
            uint64_t v22 = sub_1C1518CDC();
            uint64_t v64 = *(void *)(v22 - 8);
            uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
            if (!v23(v21, 1, v22)) {
              (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v21, v22);
            }
            uint64_t v24 = v18 + *(int *)(v19 + 28);
            if (!v23(v24, 1, v22)) {
              (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v24, v22);
            }
            swift_bridgeObjectRelease();
            uint64_t v25 = a1 + v17[24];
            uint64_t v26 = sub_1C151928C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
            uint64_t v27 = a1 + v17[25];
            if (!v23(v27, 1, v22))
            {
              long long v63 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
              v63(v27, v22);
            }
            return;
          case 6u:
            swift_bridgeObjectRelease();
            goto LABEL_44;
          case 7u:
            swift_release();
            return;
          case 8u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_44;
          case 9u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_44;
          case 0xAu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v28 = *(void *)(a1 + 32);
            uint64_t v29 = *(void *)(a1 + 40);
            uint64_t v30 = *(void *)(a1 + 48);
            uint64_t v31 = *(void *)(a1 + 56);
            uint64_t v32 = *(void *)(a1 + 64);
            uint64_t v33 = *(void *)(a1 + 72);
            unsigned __int8 v34 = *(unsigned char *)(a1 + 80);
            sub_1BFEC28BC(v28, v29, v30, v31, v32, v33, v34);
            return;
          case 0xBu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v35 = a1 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
            swift_bridgeObjectRelease();
            uint64_t v36 = type metadata accessor for FormatContent(0);
            uint64_t v37 = v35 + *(int *)(v36 + 20);
            uint64_t v38 = sub_1C151631C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v39 = v35 + *(int *)(v36 + 40);
            uint64_t v40 = sub_1C151D6DC();
            uint64_t v41 = *(void *)(v40 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40)) {
              (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
            }
LABEL_43:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_44:
            swift_bridgeObjectRelease();
            break;
          default:
            return;
        }
      }
      return;
    }
    uint64_t v15 = *(void **)a1;
  }
}

uint64_t sub_1C0B22DC4(uint64_t a1, uint64_t *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    type metadata accessor for FormatFile();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v61 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v61;
        uint64_t v62 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v62;
        uint64_t v63 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v63;
        uint64_t v64 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v64;
        uint64_t v65 = a2[8];
        *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
        *(void *)(a1 + 64) = v65;
        uint64_t v66 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v66;
        __dstb = a2 + 12;
        unsigned __int8 v67 = *((unsigned char *)a2 + 106);
        int v68 = *((unsigned __int16 *)a2 + 52);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v67 == 255)
        {
          *(void *)(a1 + 96) = *__dstb;
          *(_DWORD *)(a1 + 103) = *(_DWORD *)((char *)a2 + 103);
        }
        else
        {
          uint64_t v216 = v68 & 0xFF00FFFF | (v67 << 16);
          uint64_t v217 = *__dstb;
          sub_1BFFA742C(*__dstb, v216, SBYTE2(v216), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          *(void *)(a1 + 96) = v217;
          *(_WORD *)(a1 + 104) = v216;
          *(unsigned char *)(a1 + 106) = BYTE2(v216);
        }
        goto LABEL_80;
      case 2u:
        uint64_t v69 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v69;
        uint64_t v70 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v70;
        uint64_t v71 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v71;
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        *(void *)(a1 + 56) = a2[7];
        long long v72 = a2 + 8;
        unint64_t v73 = a2[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v73 <= 2)
        {
          *(_OWORD *)(a1 + 64) = *v72;
        }
        else
        {
          *(unsigned char *)(a1 + 64) = *(unsigned char *)v72;
          *(void *)(a1 + 72) = v73;
          swift_bridgeObjectRetain();
        }
        uint64_t v226 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v226;
        uint64_t v227 = a2[13];
        *(void *)(a1 + 96) = a2[12];
        *(void *)(a1 + 104) = v227;
        uint64_t v228 = a2[15];
        *(void *)(a1 + 112) = a2[14];
        *(void *)(a1 + 120) = v228;
        *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
        *(void *)(a1 + 136) = a2[17];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_80;
      case 3u:
        uint64_t v74 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v74;
        uint64_t v75 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v75;
        uint64_t v76 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v76;
        uint64_t v77 = a2 + 6;
        unint64_t v78 = a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v78 >= 0xF)
        {
          *(void *)(a1 + 48) = *v77;
          *(void *)(a1 + 56) = v78;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 48) = *(_OWORD *)v77;
        }
        uint64_t v218 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v218;
        uint64_t v219 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v219;
        uint64_t v220 = a2[13];
        *(void *)(a1 + 96) = a2[12];
        *(void *)(a1 + 104) = v220;
        *(void *)(a1 + 112) = a2[14];
        *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_80;
      case 4u:
        uint64_t v79 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v79;
        uint64_t v80 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v80;
        uint64_t v81 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v81;
        *(void *)(a1 + 48) = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_80;
      case 5u:
        uint64_t v82 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v82;
        uint64_t v83 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v83;
        uint64_t v84 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v84;
        *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
        uint64_t v85 = a2[8];
        *(void *)(a1 + 56) = a2[7];
        *(void *)(a1 + 64) = v85;
        uint64_t v86 = a2[10];
        *(void *)(a1 + 72) = a2[9];
        *(void *)(a1 + 80) = v86;
        uint64_t v87 = a2[12];
        *(void *)(a1 + 88) = a2[11];
        *(void *)(a1 + 96) = v87;
        uint64_t v299 = a2[14];
        *(void *)(a1 + 104) = a2[13];
        *(void *)(a1 + 112) = v299;
        uint64_t v301 = a2[16];
        *(void *)(a1 + 120) = a2[15];
        *(void *)(a1 + 128) = v301;
        uint64_t v303 = a2[18];
        *(void *)(a1 + 136) = a2[17];
        *(void *)(a1 + 144) = v303;
        *(void *)(a1 + 152) = a2[19];
        uint64_t v318 = a2 + 20;
        unint64_t v306 = a2[21];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v306 >= 2)
        {
          uint64_t v89 = (_OWORD *)(a1 + 160);
          if (v306 != 2)
          {
            *(unsigned char *)(a1 + 160) = *v318;
            *(void *)(a1 + 168) = v306;
            swift_bridgeObjectRetain();
            goto LABEL_68;
          }
          long long v88 = *(_OWORD *)v318;
        }
        else
        {
          long long v88 = *(_OWORD *)v318;
          uint64_t v89 = (_OWORD *)(a1 + 160);
        }
        *uint64_t v89 = v88;
LABEL_68:
        long long v324 = (int *)type metadata accessor for FormatPackage();
        uint64_t v232 = v324[23];
        uint64_t v233 = (void *)(a1 + v232);
        uint64_t v234 = (uint64_t)a2 + v232;
        uint64_t v235 = *(uint64_t *)((char *)a2 + v232 + 8);
        *uint64_t v233 = *(uint64_t *)((char *)a2 + v232);
        v233[1] = v235;
        uint64_t v236 = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v237 = v236[6];
        uint64_t v238 = (char *)v233 + v237;
        uint64_t v239 = v234 + v237;
        uint64_t v240 = *(void *)(v234 + v237 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v240 == 1)
        {
          long long v241 = *(_OWORD *)(v239 + 16);
          *(_OWORD *)uint64_t v238 = *(_OWORD *)v239;
          *((_OWORD *)v238 + 1) = v241;
          *((_OWORD *)v238 + 2) = *(_OWORD *)(v239 + 32);
        }
        else
        {
          *(void *)uint64_t v238 = *(void *)v239;
          *((void *)v238 + 1) = v240;
          uint64_t v242 = *(void *)(v239 + 24);
          *((void *)v238 + 2) = *(void *)(v239 + 16);
          *((void *)v238 + 3) = v242;
          uint64_t v243 = *(void *)(v239 + 40);
          *((void *)v238 + 4) = *(void *)(v239 + 32);
          *((void *)v238 + 5) = v243;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v244 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v245 = &v238[v244];
        uint64_t v246 = (const void *)(v239 + v244);
        uint64_t v247 = sub_1C1518CDC();
        uint64_t v248 = *(void *)(v247 - 8);
        unsigned __int8 __dstf = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v248 + 48);
        if (__dstf(v246, 1, v247))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v245, v246, *(void *)(*(void *)(v249 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v248 + 16))(v245, v246, v247);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v248 + 56))(v245, 0, 1, v247);
        }
        uint64_t v250 = v236[7];
        uint64_t v251 = (char *)v233 + v250;
        uint64_t v252 = (const void *)(v234 + v250);
        if (__dstf((const void *)(v234 + v250), 1, v247))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v251, v252, *(void *)(*(void *)(v253 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v248 + 16))(v251, v252, v247);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v248 + 56))(v251, 0, 1, v247);
        }
        *(void *)((char *)v233 + v236[8]) = *(void *)(v234 + v236[8]);
        uint64_t v254 = v324[24];
        uint64_t v255 = a1 + v254;
        uint64_t v256 = (uint64_t)a2 + v254;
        uint64_t v257 = sub_1C151928C();
        uint64_t v258 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v257 - 8) + 16);
        swift_bridgeObjectRetain();
        v258(v255, v256, v257);
        uint64_t v259 = v324[25];
        uint64_t v260 = (void *)(a1 + v259);
        uint64_t v261 = (char *)a2 + v259;
        if (__dstf((char *)a2 + v259, 1, v247))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v260, v261, *(void *)(*(void *)(v262 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v248 + 16))(v260, v261, v247);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v248 + 56))(v260, 0, 1, v247);
        }
LABEL_80:
        swift_storeEnumTagMultiPayload();
LABEL_81:
        sub_1C0913D20();
        uint64_t v264 = *(int *)(v263 + 48);
        uint64_t v265 = *(void **)((char *)a2 + v264);
        id v266 = v265;
        *(void *)(a1 + v264) = v265;
        break;
      case 6u:
        uint64_t v90 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v90;
        *(void *)(a1 + 16) = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_80;
      case 7u:
        *(void *)a1 = *a2;
        swift_retain();
        goto LABEL_80;
      case 8u:
        uint64_t v91 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v91;
        uint64_t v92 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v92;
        uint64_t v93 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v93;
        uint64_t v94 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v94;
        *(void *)(a1 + 64) = a2[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_80;
      case 9u:
        uint64_t v95 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v95;
        uint64_t v96 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v96;
        uint64_t v97 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v97;
        uint64_t v98 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v98;
        uint64_t v99 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v99;
        *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
        uint64_t v100 = a2[12];
        *(void *)(a1 + 88) = a2[11];
        *(void *)(a1 + 96) = v100;
        *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_80;
      case 0xAu:
        uint64_t v101 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v101;
        uint64_t v102 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v102;
        uint64_t v103 = a2[4];
        uint64_t v104 = a2[5];
        uint64_t v105 = a2[6];
        uint64_t v106 = a2[7];
        uint64_t v107 = a2[8];
        uint64_t v108 = a2[9];
        unsigned __int8 v109 = *((unsigned char *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v103, v104, v105, v106, v107, v108, v109);
        *(void *)(a1 + 32) = v103;
        *(void *)(a1 + 40) = v104;
        *(void *)(a1 + 48) = v105;
        *(void *)(a1 + 56) = v106;
        *(void *)(a1 + 64) = v107;
        *(void *)(a1 + 72) = v108;
        *(unsigned char *)(a1 + 80) = v109;
        goto LABEL_80;
      case 0xBu:
        uint64_t v110 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v110;
        uint64_t v111 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v111;
        uint64_t v112 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v112;
        uint64_t v113 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        long long v114 = (void *)(a1 + v113);
        uint64_t v115 = (uint64_t)a2 + v113;
        uint64_t v116 = *(uint64_t *)((char *)a2 + v113 + 8);
        void *v114 = *(uint64_t *)((char *)a2 + v113);
        v114[1] = v116;
        uint64_t v117 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v118 = v117[5];
        uint64_t v319 = v115 + v118;
        __dsth = (char *)v114 + v118;
        uint64_t v119 = sub_1C151631C();
        uint64_t v312 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v119 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v312(__dsth, v319, v119);
        uint64_t v120 = v117[6];
        uint64_t v121 = (void *)((char *)v114 + v120);
        uint64_t v122 = (void *)(v115 + v120);
        uint64_t v320 = v122[1];
        *uint64_t v121 = *v122;
        v121[1] = v320;
        uint64_t v123 = v117[7];
        long long v124 = (void *)((char *)v114 + v123);
        long long v125 = (void *)(v115 + v123);
        uint64_t v126 = v125[1];
        *long long v124 = *v125;
        v124[1] = v126;
        uint64_t v127 = v117[8];
        uint64_t v128 = (void *)((char *)v114 + v127);
        uint64_t v129 = (void *)(v115 + v127);
        uint64_t v130 = v129[1];
        void *v128 = *v129;
        v128[1] = v130;
        uint64_t v131 = v117[9];
        uint64_t v132 = (void *)((char *)v114 + v131);
        uint64_t v133 = (void *)(v115 + v131);
        uint64_t v134 = v133[1];
        *uint64_t v132 = *v133;
        v132[1] = v134;
        uint64_t v135 = v117[10];
        __dstc = (char *)v114 + v135;
        uint64_t v307 = (const void *)(v115 + v135);
        uint64_t v136 = sub_1C151D6DC();
        uint64_t v304 = *(void *)(v136 - 8);
        uint64_t v313 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v304 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v313(v307, 1, v136))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dstc, v307, *(void *)(*(void *)(v137 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v304 + 16))(__dstc, v307, v136);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v304 + 56))(__dstc, 0, 1, v136);
        }
        *(void *)((char *)v114 + v117[11]) = *(void *)(v115 + v117[11]);
        *(void *)((char *)v114 + v117[12]) = *(void *)(v115 + v117[12]);
        *(void *)((char *)v114 + v117[13]) = *(void *)(v115 + v117[13]);
        *(void *)((char *)v114 + v117[14]) = *(void *)(v115 + v117[14]);
        *(void *)((char *)v114 + v117[15]) = *(void *)(v115 + v117[15]);
        *(void *)((char *)v114 + v117[16]) = *(void *)(v115 + v117[16]);
        *(void *)((char *)v114 + v117[17]) = *(void *)(v115 + v117[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_81;
      default:
        uint64_t v7 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v7;
        uint64_t v8 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v9 = v8[5];
        uint64_t v10 = a1 + v9;
        uint64_t v11 = (uint64_t)a2 + v9;
        uint64_t v12 = sub_1C151631C();
        uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        uint64_t v14 = v8[6];
        uint64_t v15 = (void *)(a1 + v14);
        uint64_t v16 = (uint64_t *)((char *)a2 + v14);
        uint64_t v17 = v16[1];
        void *v15 = *v16;
        v15[1] = v17;
        uint64_t v18 = v8[7];
        uint64_t v19 = (void *)(a1 + v18);
        uint64_t v20 = (uint64_t *)((char *)a2 + v18);
        uint64_t v21 = v20[1];
        *uint64_t v19 = *v20;
        v19[1] = v21;
        uint64_t v22 = v8[8];
        uint64_t v23 = (void *)(a1 + v22);
        uint64_t v24 = (uint64_t *)((char *)a2 + v22);
        uint64_t v25 = v24[1];
        *uint64_t v23 = *v24;
        v23[1] = v25;
        uint64_t v26 = v8[9];
        uint64_t v27 = (void *)(a1 + v26);
        uint64_t v28 = (uint64_t *)((char *)a2 + v26);
        uint64_t v29 = v28[1];
        *uint64_t v27 = *v28;
        v27[1] = v29;
        uint64_t v30 = v8[10];
        uint64_t v316 = (char *)a2 + v30;
        __dst = (void *)(a1 + v30);
        uint64_t v31 = sub_1C151D6DC();
        uint64_t v32 = *(void *)(v31 - 8);
        unint64_t v310 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v310(v316, 1, v31))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dst, v316, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v32 + 16))(__dst, v316, v31);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
        }
        *(void *)(a1 + v8[11]) = *(uint64_t *)((char *)a2 + v8[11]);
        *(void *)(a1 + v8[12]) = *(uint64_t *)((char *)a2 + v8[12]);
        *(void *)(a1 + v8[13]) = *(uint64_t *)((char *)a2 + v8[13]);
        *(void *)(a1 + v8[14]) = *(uint64_t *)((char *)a2 + v8[14]);
        *(void *)(a1 + v8[15]) = *(uint64_t *)((char *)a2 + v8[15]);
        *(void *)(a1 + v8[16]) = *(uint64_t *)((char *)a2 + v8[16]);
        *(void *)(a1 + v8[17]) = *(uint64_t *)((char *)a2 + v8[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_80;
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *a2;
    id v6 = (id)*a2;
    *(void *)a1 = v5;
  }
  else
  {
    type metadata accessor for FormatFile();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v138 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v138;
        uint64_t v139 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v139;
        uint64_t v140 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v140;
        uint64_t v141 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v141;
        uint64_t v142 = a2[8];
        *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
        *(void *)(a1 + 64) = v142;
        uint64_t v143 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v143;
        __dstd = (char *)(a2 + 12);
        unsigned __int8 v144 = *((unsigned char *)a2 + 106);
        int v145 = *((unsigned __int16 *)a2 + 52);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v144 == 255)
        {
          *(void *)(a1 + 96) = *(void *)__dstd;
          *(_DWORD *)(a1 + 103) = *(_DWORD *)(__dstd + 7);
        }
        else
        {
          uint64_t v221 = v145 & 0xFF00FFFF | (v144 << 16);
          uint64_t v222 = *(void *)__dstd;
          sub_1BFFA742C(*(void *)__dstd, v221, SBYTE2(v221), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          *(void *)(a1 + 96) = v222;
          *(_WORD *)(a1 + 104) = v221;
          *(unsigned char *)(a1 + 106) = BYTE2(v221);
        }
        goto LABEL_94;
      case 2u:
        uint64_t v146 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v146;
        uint64_t v147 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v147;
        uint64_t v148 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v148;
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        *(void *)(a1 + 56) = a2[7];
        uint64_t v149 = a2 + 8;
        unint64_t v150 = a2[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v150 <= 2)
        {
          *(_OWORD *)(a1 + 64) = *v149;
        }
        else
        {
          *(unsigned char *)(a1 + 64) = *(unsigned char *)v149;
          *(void *)(a1 + 72) = v150;
          swift_bridgeObjectRetain();
        }
        uint64_t v229 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v229;
        uint64_t v230 = a2[13];
        *(void *)(a1 + 96) = a2[12];
        *(void *)(a1 + 104) = v230;
        uint64_t v231 = a2[15];
        *(void *)(a1 + 112) = a2[14];
        *(void *)(a1 + 120) = v231;
        *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
        *(void *)(a1 + 136) = a2[17];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_94;
      case 3u:
        uint64_t v151 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v151;
        uint64_t v152 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v152;
        uint64_t v153 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v153;
        uint64_t v154 = a2 + 6;
        unint64_t v155 = a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v155 >= 0xF)
        {
          *(void *)(a1 + 48) = *v154;
          *(void *)(a1 + 56) = v155;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 48) = *(_OWORD *)v154;
        }
        uint64_t v223 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v223;
        uint64_t v224 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v224;
        uint64_t v225 = a2[13];
        *(void *)(a1 + 96) = a2[12];
        *(void *)(a1 + 104) = v225;
        *(void *)(a1 + 112) = a2[14];
        *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_94;
      case 4u:
        uint64_t v156 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v156;
        uint64_t v157 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v157;
        uint64_t v158 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v158;
        *(void *)(a1 + 48) = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_94;
      case 5u:
        uint64_t v159 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v159;
        uint64_t v160 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v160;
        uint64_t v161 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v161;
        *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
        uint64_t v162 = a2[8];
        *(void *)(a1 + 56) = a2[7];
        *(void *)(a1 + 64) = v162;
        uint64_t v163 = a2[10];
        *(void *)(a1 + 72) = a2[9];
        *(void *)(a1 + 80) = v163;
        uint64_t v164 = a2[12];
        *(void *)(a1 + 88) = a2[11];
        *(void *)(a1 + 96) = v164;
        uint64_t v300 = a2[14];
        *(void *)(a1 + 104) = a2[13];
        *(void *)(a1 + 112) = v300;
        uint64_t v302 = a2[16];
        *(void *)(a1 + 120) = a2[15];
        *(void *)(a1 + 128) = v302;
        uint64_t v305 = a2[18];
        *(void *)(a1 + 136) = a2[17];
        *(void *)(a1 + 144) = v305;
        *(void *)(a1 + 152) = a2[19];
        uint64_t v321 = a2 + 20;
        unint64_t v308 = a2[21];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v308 >= 2)
        {
          uint64_t v166 = (_OWORD *)(a1 + 160);
          if (v308 != 2)
          {
            *(unsigned char *)(a1 + 160) = *v321;
            *(void *)(a1 + 168) = v308;
            swift_bridgeObjectRetain();
            goto LABEL_82;
          }
          long long v165 = *(_OWORD *)v321;
        }
        else
        {
          long long v165 = *(_OWORD *)v321;
          uint64_t v166 = (_OWORD *)(a1 + 160);
        }
        _OWORD *v166 = v165;
LABEL_82:
        uint64_t v325 = (int *)type metadata accessor for FormatPackage();
        uint64_t v267 = v325[23];
        uint64_t v268 = (void *)(a1 + v267);
        uint64_t v269 = (uint64_t)a2 + v267;
        uint64_t v270 = *(uint64_t *)((char *)a2 + v267 + 8);
        *uint64_t v268 = *(uint64_t *)((char *)a2 + v267);
        v268[1] = v270;
        uint64_t v271 = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v272 = v271[6];
        uint64_t v273 = (char *)v268 + v272;
        uint64_t v274 = v269 + v272;
        uint64_t v275 = *(void *)(v269 + v272 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v275 == 1)
        {
          long long v276 = *(_OWORD *)(v274 + 16);
          *(_OWORD *)uint64_t v273 = *(_OWORD *)v274;
          *((_OWORD *)v273 + 1) = v276;
          *((_OWORD *)v273 + 2) = *(_OWORD *)(v274 + 32);
        }
        else
        {
          *(void *)uint64_t v273 = *(void *)v274;
          *((void *)v273 + 1) = v275;
          uint64_t v277 = *(void *)(v274 + 24);
          *((void *)v273 + 2) = *(void *)(v274 + 16);
          *((void *)v273 + 3) = v277;
          uint64_t v278 = *(void *)(v274 + 40);
          *((void *)v273 + 4) = *(void *)(v274 + 32);
          *((void *)v273 + 5) = v278;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v279 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v280 = &v273[v279];
        uint64_t v281 = (const void *)(v274 + v279);
        uint64_t v282 = sub_1C1518CDC();
        uint64_t v283 = *(void *)(v282 - 8);
        __dstg = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v283 + 48);
        if (__dstg(v281, 1, v282))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v280, v281, *(void *)(*(void *)(v284 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v283 + 16))(v280, v281, v282);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v283 + 56))(v280, 0, 1, v282);
        }
        uint64_t v285 = v271[7];
        uint64_t v286 = (char *)v268 + v285;
        uint64_t v287 = (const void *)(v269 + v285);
        if (__dstg((const void *)(v269 + v285), 1, v282))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v286, v287, *(void *)(*(void *)(v288 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v283 + 16))(v286, v287, v282);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v283 + 56))(v286, 0, 1, v282);
        }
        *(void *)((char *)v268 + v271[8]) = *(void *)(v269 + v271[8]);
        uint64_t v289 = v325[24];
        uint64_t v290 = a1 + v289;
        uint64_t v291 = (uint64_t)a2 + v289;
        uint64_t v292 = sub_1C151928C();
        uint64_t v293 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v292 - 8) + 16);
        swift_bridgeObjectRetain();
        v293(v290, v291, v292);
        uint64_t v294 = v325[25];
        uint64_t v295 = (void *)(a1 + v294);
        uint64_t v296 = (char *)a2 + v294;
        if (__dstg(v296, 1, v282))
        {
          sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v295, v296, *(void *)(*(void *)(v297 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v283 + 16))(v295, v296, v282);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v283 + 56))(v295, 0, 1, v282);
        }
LABEL_94:
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v202 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v202;
        *(void *)(a1 + 16) = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_94;
      case 7u:
        *(void *)a1 = *a2;
        swift_retain();
        goto LABEL_94;
      case 8u:
        uint64_t v203 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v203;
        uint64_t v204 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v204;
        uint64_t v205 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v205;
        uint64_t v206 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v206;
        *(void *)(a1 + 64) = a2[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_94;
      case 9u:
        uint64_t v167 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v167;
        uint64_t v168 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v168;
        uint64_t v169 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v169;
        uint64_t v170 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v170;
        uint64_t v171 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v171;
        *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
        uint64_t v172 = a2[12];
        *(void *)(a1 + 88) = a2[11];
        *(void *)(a1 + 96) = v172;
        *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_94;
      case 0xAu:
        uint64_t v207 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v207;
        uint64_t v208 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v208;
        uint64_t v209 = a2[4];
        uint64_t v210 = a2[5];
        uint64_t v211 = a2[6];
        uint64_t v212 = a2[7];
        uint64_t v213 = a2[8];
        uint64_t v214 = a2[9];
        unsigned __int8 v215 = *((unsigned char *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v209, v210, v211, v212, v213, v214, v215);
        *(void *)(a1 + 32) = v209;
        *(void *)(a1 + 40) = v210;
        *(void *)(a1 + 48) = v211;
        *(void *)(a1 + 56) = v212;
        *(void *)(a1 + 64) = v213;
        *(void *)(a1 + 72) = v214;
        *(unsigned char *)(a1 + 80) = v215;
        goto LABEL_94;
      case 0xBu:
        uint64_t v173 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v173;
        uint64_t v174 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v174;
        uint64_t v175 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v175;
        uint64_t v176 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v177 = (void *)(a1 + v176);
        uint64_t v178 = (uint64_t)a2 + v176;
        uint64_t v179 = *(uint64_t *)((char *)a2 + v176 + 8);
        *uint64_t v177 = *(uint64_t *)((char *)a2 + v176);
        v177[1] = v179;
        uint64_t v180 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v181 = v180[5];
        uint64_t v322 = v178 + v181;
        __dstuint64_t i = (char *)v177 + v181;
        uint64_t v182 = sub_1C151631C();
        uint64_t v314 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v182 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v314(__dsti, v322, v182);
        uint64_t v183 = v180[6];
        uint64_t v184 = (void *)((char *)v177 + v183);
        uint64_t v185 = (void *)(v178 + v183);
        uint64_t v323 = v185[1];
        *uint64_t v184 = *v185;
        v184[1] = v323;
        uint64_t v186 = v180[7];
        uint64_t v187 = (void *)((char *)v177 + v186);
        uint64_t v188 = (void *)(v178 + v186);
        uint64_t v189 = v188[1];
        *uint64_t v187 = *v188;
        v187[1] = v189;
        uint64_t v190 = v180[8];
        uint64_t v191 = (void *)((char *)v177 + v190);
        uint64_t v192 = (void *)(v178 + v190);
        uint64_t v193 = v192[1];
        *uint64_t v191 = *v192;
        v191[1] = v193;
        uint64_t v194 = v180[9];
        long long v195 = (void *)((char *)v177 + v194);
        uint64_t v196 = (void *)(v178 + v194);
        uint64_t v197 = v196[1];
        *long long v195 = *v196;
        v195[1] = v197;
        uint64_t v198 = v180[10];
        __dste = (char *)v177 + v198;
        uint64_t v315 = (const void *)(v178 + v198);
        uint64_t v199 = sub_1C151D6DC();
        uint64_t v200 = *(void *)(v199 - 8);
        id v309 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v200 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v309(v315, 1, v199))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dste, v315, *(void *)(*(void *)(v201 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v200 + 16))(__dste, v315, v199);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v200 + 56))(__dste, 0, 1, v199);
        }
        *(void *)((char *)v177 + v180[11]) = *(void *)(v178 + v180[11]);
        *(void *)((char *)v177 + v180[12]) = *(void *)(v178 + v180[12]);
        *(void *)((char *)v177 + v180[13]) = *(void *)(v178 + v180[13]);
        *(void *)((char *)v177 + v180[14]) = *(void *)(v178 + v180[14]);
        *(void *)((char *)v177 + v180[15]) = *(void *)(v178 + v180[15]);
        *(void *)((char *)v177 + v180[16]) = *(void *)(v178 + v180[16]);
        *(void *)((char *)v177 + v180[17]) = *(void *)(v178 + v180[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        uint64_t v34 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v34;
        uint64_t v35 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v36 = v35[5];
        uint64_t v37 = a1 + v36;
        uint64_t v38 = (uint64_t)a2 + v36;
        uint64_t v39 = sub_1C151631C();
        uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        v40(v37, v38, v39);
        uint64_t v41 = v35[6];
        uint64_t v42 = (void *)(a1 + v41);
        uint64_t v43 = (uint64_t *)((char *)a2 + v41);
        uint64_t v44 = v43[1];
        *uint64_t v42 = *v43;
        v42[1] = v44;
        uint64_t v45 = v35[7];
        uint64_t v46 = (void *)(a1 + v45);
        uint64_t v47 = (uint64_t *)((char *)a2 + v45);
        uint64_t v48 = v47[1];
        *uint64_t v46 = *v47;
        v46[1] = v48;
        uint64_t v49 = v35[8];
        uint64_t v50 = (void *)(a1 + v49);
        uint64_t v51 = (uint64_t *)((char *)a2 + v49);
        uint64_t v52 = v51[1];
        *uint64_t v50 = *v51;
        v50[1] = v52;
        uint64_t v53 = v35[9];
        uint64_t v54 = (void *)(a1 + v53);
        uint64_t v55 = (uint64_t *)((char *)a2 + v53);
        uint64_t v56 = v55[1];
        *uint64_t v54 = *v55;
        v54[1] = v56;
        uint64_t v57 = v35[10];
        uint64_t v317 = (char *)a2 + v57;
        __dsta = (void *)(a1 + v57);
        uint64_t v58 = sub_1C151D6DC();
        uint64_t v59 = *(void *)(v58 - 8);
        uint64_t v311 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v311(v317, 1, v58))
        {
          sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dsta, v317, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v59 + 16))(__dsta, v317, v58);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(__dsta, 0, 1, v58);
        }
        *(void *)(a1 + v35[11]) = *(uint64_t *)((char *)a2 + v35[11]);
        *(void *)(a1 + v35[12]) = *(uint64_t *)((char *)a2 + v35[12]);
        *(void *)(a1 + v35[13]) = *(uint64_t *)((char *)a2 + v35[13]);
        *(void *)(a1 + v35[14]) = *(uint64_t *)((char *)a2 + v35[14]);
        *(void *)(a1 + v35[15]) = *(uint64_t *)((char *)a2 + v35[15]);
        *(void *)(a1 + v35[16]) = *(uint64_t *)((char *)a2 + v35[16]);
        *(void *)(a1 + v35[17]) = *(uint64_t *)((char *)a2 + v35[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_94;
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C0B24D28(uint64_t a1, uint64_t *a2)
{
  if ((uint64_t *)a1 != a2)
  {
    sub_1C0B27084(a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      type metadata accessor for FormatFile();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          *(void *)(a1 + 48) = a2[6];
          *(void *)(a1 + 56) = a2[7];
          uint64_t v51 = a2[8];
          *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
          *(void *)(a1 + 64) = v51;
          *(void *)(a1 + 80) = a2[10];
          *(void *)(a1 + 88) = a2[11];
          __dstb = a2 + 12;
          unsigned __int8 v52 = *((unsigned char *)a2 + 106);
          int v53 = *((unsigned __int16 *)a2 + 52);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v52 == 255)
          {
            uint64_t v54 = *__dstb;
            *(_DWORD *)(a1 + 103) = *(_DWORD *)((char *)a2 + 103);
            *(void *)(a1 + 96) = v54;
          }
          else
          {
            uint64_t v124 = v53 & 0xFF00FFFF | (v52 << 16);
            uint64_t v125 = *__dstb;
            sub_1BFFA742C(*__dstb, v124, SBYTE2(v124), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
            *(void *)(a1 + 96) = v125;
            *(_WORD *)(a1 + 104) = v124;
            *(unsigned char *)(a1 + 106) = BYTE2(v124);
          }
          goto LABEL_81;
        case 2u:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
          *(void *)(a1 + 56) = a2[7];
          unint64_t v55 = a2[9];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v55 <= 2)
          {
            *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
          }
          else
          {
            *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
            *(void *)(a1 + 72) = a2[9];
            swift_bridgeObjectRetain();
          }
          *(void *)(a1 + 80) = a2[10];
          *(void *)(a1 + 88) = a2[11];
          *(void *)(a1 + 96) = a2[12];
          *(void *)(a1 + 104) = a2[13];
          *(void *)(a1 + 112) = a2[14];
          *(void *)(a1 + 120) = a2[15];
          *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
          *(void *)(a1 + 136) = a2[17];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_81;
        case 3u:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          unint64_t v56 = a2[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v56 >= 0xF)
          {
            *(void *)(a1 + 48) = a2[6];
            *(void *)(a1 + 56) = a2[7];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
          }
          *(void *)(a1 + 64) = a2[8];
          *(void *)(a1 + 72) = a2[9];
          *(void *)(a1 + 80) = a2[10];
          *(void *)(a1 + 88) = a2[11];
          *(void *)(a1 + 96) = a2[12];
          *(void *)(a1 + 104) = a2[13];
          *(void *)(a1 + 112) = a2[14];
          *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_81;
        case 4u:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          *(void *)(a1 + 48) = a2[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_81;
        case 5u:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
          *(unsigned char *)(a1 + 49) = *((unsigned char *)a2 + 49);
          *(void *)(a1 + 56) = a2[7];
          *(void *)(a1 + 64) = a2[8];
          *(void *)(a1 + 72) = a2[9];
          *(void *)(a1 + 80) = a2[10];
          *(void *)(a1 + 88) = a2[11];
          *(void *)(a1 + 96) = a2[12];
          *(void *)(a1 + 104) = a2[13];
          *(void *)(a1 + 112) = a2[14];
          *(void *)(a1 + 120) = a2[15];
          *(void *)(a1 + 128) = a2[16];
          *(void *)(a1 + 136) = a2[17];
          *(void *)(a1 + 144) = a2[18];
          *(void *)(a1 + 152) = a2[19];
          uint64_t v204 = (long long *)(a2 + 20);
          unint64_t v196 = a2[21];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v196 >= 2)
          {
            uint64_t v58 = (_OWORD *)(a1 + 160);
            if (v196 != 2)
            {
              *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
              *(void *)(a1 + 168) = a2[21];
              swift_bridgeObjectRetain();
              goto LABEL_69;
            }
            long long v57 = *v204;
          }
          else
          {
            long long v57 = *v204;
            uint64_t v58 = (_OWORD *)(a1 + 160);
          }
          *uint64_t v58 = v57;
LABEL_69:
          uint64_t v208 = (int *)type metadata accessor for FormatPackage();
          uint64_t v128 = v208[23];
          uint64_t v129 = (void *)(a1 + v128);
          uint64_t v130 = (uint64_t)a2 + v128;
          *uint64_t v129 = *(uint64_t *)((char *)a2 + v128);
          v129[1] = *(uint64_t *)((char *)a2 + v128 + 8);
          uint64_t v131 = (int *)type metadata accessor for FormatCompilerOptions(0);
          uint64_t v132 = v131[6];
          uint64_t v133 = (char *)v129 + v132;
          uint64_t v134 = (long long *)(v130 + v132);
          uint64_t v135 = *(void *)(v130 + v132 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v135 == 1)
          {
            long long v136 = *v134;
            long long v137 = v134[2];
            *((_OWORD *)v133 + 1) = v134[1];
            *((_OWORD *)v133 + 2) = v137;
            *(_OWORD *)uint64_t v133 = v136;
          }
          else
          {
            *(void *)uint64_t v133 = *(void *)v134;
            *((void *)v133 + 1) = *((void *)v134 + 1);
            *((void *)v133 + 2) = *((void *)v134 + 2);
            *((void *)v133 + 3) = *((void *)v134 + 3);
            *((void *)v133 + 4) = *((void *)v134 + 4);
            *((void *)v133 + 5) = *((void *)v134 + 5);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          uint64_t v138 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          uint64_t v139 = &v133[v138];
          uint64_t v140 = (char *)v134 + v138;
          uint64_t v141 = sub_1C1518CDC();
          uint64_t v142 = *(void *)(v141 - 8);
          unsigned __int8 __dstf = *(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48);
          if (__dstf(v140, 1, v141))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v139, v140, *(void *)(*(void *)(v143 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v139, v140, v141);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
          }
          uint64_t v144 = v131[7];
          int v145 = (char *)v129 + v144;
          uint64_t v146 = (const void *)(v130 + v144);
          if (__dstf((char *)(v130 + v144), 1, v141))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v145, v146, *(void *)(*(void *)(v147 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v142 + 16))(v145, v146, v141);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v145, 0, 1, v141);
          }
          *(void *)((char *)v129 + v131[8]) = *(void *)(v130 + v131[8]);
          uint64_t v148 = v208[24];
          uint64_t v149 = a1 + v148;
          uint64_t v150 = (uint64_t)a2 + v148;
          uint64_t v151 = sub_1C151928C();
          uint64_t v152 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 16);
          swift_bridgeObjectRetain();
          v152(v149, v150, v151);
          uint64_t v153 = v208[25];
          uint64_t v154 = (void *)(a1 + v153);
          unint64_t v155 = (char *)a2 + v153;
          if (__dstf((char *)a2 + v153, 1, v141))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v154, v155, *(void *)(*(void *)(v156 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v142 + 16))(v154, v155, v141);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v142 + 56))(v154, 0, 1, v141);
          }
LABEL_81:
          swift_storeEnumTagMultiPayload();
LABEL_82:
          sub_1C0913D20();
          uint64_t v158 = *(int *)(v157 + 48);
          uint64_t v159 = *(void **)((char *)a2 + v158);
          id v160 = v159;
          *(void *)(a1 + v158) = v159;
          break;
        case 6u:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_81;
        case 7u:
          *(void *)a1 = *a2;
          swift_retain();
          goto LABEL_81;
        case 8u:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          *(void *)(a1 + 48) = a2[6];
          *(void *)(a1 + 56) = a2[7];
          *(void *)(a1 + 64) = a2[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_81;
        case 9u:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          *(void *)(a1 + 48) = a2[6];
          *(void *)(a1 + 56) = a2[7];
          *(void *)(a1 + 64) = a2[8];
          *(void *)(a1 + 72) = a2[9];
          *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
          *(void *)(a1 + 88) = a2[11];
          *(void *)(a1 + 96) = a2[12];
          *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_81;
        case 0xAu:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          uint64_t v59 = a2[4];
          uint64_t v60 = a2[5];
          uint64_t v61 = a2[6];
          uint64_t v62 = a2[7];
          uint64_t v63 = a2[8];
          uint64_t v64 = a2[9];
          unsigned __int8 v65 = *((unsigned char *)a2 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF1DB64(v59, v60, v61, v62, v63, v64, v65);
          *(void *)(a1 + 32) = v59;
          *(void *)(a1 + 40) = v60;
          *(void *)(a1 + 48) = v61;
          *(void *)(a1 + 56) = v62;
          *(void *)(a1 + 64) = v63;
          *(void *)(a1 + 72) = v64;
          *(unsigned char *)(a1 + 80) = v65;
          goto LABEL_81;
        case 0xBu:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          uint64_t v66 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
          unsigned __int8 v67 = (void *)(a1 + v66);
          uint64_t v68 = (uint64_t)a2 + v66;
          *unsigned __int8 v67 = *(uint64_t *)((char *)a2 + v66);
          v67[1] = *(uint64_t *)((char *)a2 + v66 + 8);
          uint64_t v69 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v70 = v69[5];
          uint64_t v205 = v68 + v70;
          __dsth = (char *)v67 + v70;
          uint64_t v71 = sub_1C151631C();
          uint64_t v197 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v71 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v197(__dsth, v205, v71);
          uint64_t v72 = v69[6];
          unint64_t v73 = (void *)((char *)v67 + v72);
          uint64_t v74 = (void *)(v68 + v72);
          *unint64_t v73 = *v74;
          v73[1] = v74[1];
          uint64_t v75 = v69[7];
          uint64_t v76 = (void *)((char *)v67 + v75);
          uint64_t v77 = (void *)(v68 + v75);
          *uint64_t v76 = *v77;
          v76[1] = v77[1];
          uint64_t v78 = v69[8];
          uint64_t v79 = (void *)((char *)v67 + v78);
          uint64_t v80 = (void *)(v68 + v78);
          *uint64_t v79 = *v80;
          v79[1] = v80[1];
          uint64_t v81 = v69[9];
          uint64_t v82 = (void *)((char *)v67 + v81);
          uint64_t v83 = (void *)(v68 + v81);
          *uint64_t v82 = *v83;
          v82[1] = v83[1];
          uint64_t v84 = v69[10];
          __dstc = (char *)v67 + v84;
          uint64_t v192 = (const void *)(v68 + v84);
          uint64_t v85 = sub_1C151D6DC();
          uint64_t v191 = *(void *)(v85 - 8);
          uint64_t v198 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v191 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v198(v192, 1, v85))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dstc, v192, *(void *)(*(void *)(v86 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v191 + 16))(__dstc, v192, v85);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v191 + 56))(__dstc, 0, 1, v85);
          }
          *(void *)((char *)v67 + v69[11]) = *(void *)(v68 + v69[11]);
          *(void *)((char *)v67 + v69[12]) = *(void *)(v68 + v69[12]);
          *(void *)((char *)v67 + v69[13]) = *(void *)(v68 + v69[13]);
          *(void *)((char *)v67 + v69[14]) = *(void *)(v68 + v69[14]);
          *(void *)((char *)v67 + v69[15]) = *(void *)(v68 + v69[15]);
          *(void *)((char *)v67 + v69[16]) = *(void *)(v68 + v69[16]);
          *(void *)((char *)v67 + v69[17]) = *(void *)(v68 + v69[17]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          goto LABEL_82;
        default:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          uint64_t v7 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v8 = v7[5];
          uint64_t v9 = a1 + v8;
          uint64_t v10 = (uint64_t)a2 + v8;
          uint64_t v11 = sub_1C151631C();
          uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
          swift_bridgeObjectRetain();
          v12(v9, v10, v11);
          uint64_t v13 = v7[6];
          uint64_t v14 = (void *)(a1 + v13);
          uint64_t v15 = (uint64_t *)((char *)a2 + v13);
          *uint64_t v14 = *v15;
          v14[1] = v15[1];
          uint64_t v16 = v7[7];
          uint64_t v17 = (void *)(a1 + v16);
          uint64_t v18 = (uint64_t *)((char *)a2 + v16);
          *uint64_t v17 = *v18;
          v17[1] = v18[1];
          uint64_t v19 = v7[8];
          uint64_t v20 = (void *)(a1 + v19);
          uint64_t v21 = (uint64_t *)((char *)a2 + v19);
          *uint64_t v20 = *v21;
          v20[1] = v21[1];
          uint64_t v22 = v7[9];
          uint64_t v23 = (void *)(a1 + v22);
          uint64_t v24 = (uint64_t *)((char *)a2 + v22);
          *uint64_t v23 = *v24;
          v23[1] = v24[1];
          uint64_t v25 = v7[10];
          uint64_t v202 = (char *)a2 + v25;
          __dst = (void *)(a1 + v25);
          uint64_t v26 = sub_1C151D6DC();
          uint64_t v27 = *(void *)(v26 - 8);
          uint64_t v194 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v194(v202, 1, v26))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dst, v202, *(void *)(*(void *)(v28 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v27 + 16))(__dst, v202, v26);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
          }
          *(void *)(a1 + v7[11]) = *(uint64_t *)((char *)a2 + v7[11]);
          *(void *)(a1 + v7[12]) = *(uint64_t *)((char *)a2 + v7[12]);
          *(void *)(a1 + v7[13]) = *(uint64_t *)((char *)a2 + v7[13]);
          *(void *)(a1 + v7[14]) = *(uint64_t *)((char *)a2 + v7[14]);
          *(void *)(a1 + v7[15]) = *(uint64_t *)((char *)a2 + v7[15]);
          *(void *)(a1 + v7[16]) = *(uint64_t *)((char *)a2 + v7[16]);
          *(void *)(a1 + v7[17]) = *(uint64_t *)((char *)a2 + v7[17]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_81;
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = *a2;
      id v6 = (id)*a2;
      *(void *)a1 = v5;
    }
    else
    {
      type metadata accessor for FormatFile();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          *(void *)(a1 + 48) = a2[6];
          *(void *)(a1 + 56) = a2[7];
          uint64_t v87 = a2[8];
          *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
          *(void *)(a1 + 64) = v87;
          *(void *)(a1 + 80) = a2[10];
          *(void *)(a1 + 88) = a2[11];
          __dstd = (char *)(a2 + 12);
          unsigned __int16 v88 = *((unsigned __int8 *)a2 + 106);
          int v89 = *((unsigned __int16 *)a2 + 52);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v88 <= 0xFEu)
          {
            uint64_t v126 = v89 & 0xFF00FFFF | (v88 << 16);
            uint64_t v127 = *(void *)__dstd;
            sub_1BFFA742C(*(void *)__dstd, v126, SBYTE2(v126), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
            *(void *)(a1 + 96) = v127;
            *(_WORD *)(a1 + 104) = v126;
            *(unsigned char *)(a1 + 106) = BYTE2(v126);
          }
          else
          {
            uint64_t v90 = *(void *)__dstd;
            *(_DWORD *)(a1 + 103) = *(_DWORD *)(__dstd + 7);
            *(void *)(a1 + 96) = v90;
          }
          goto LABEL_95;
        case 2u:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
          *(void *)(a1 + 56) = a2[7];
          unint64_t v91 = a2[9];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v91 <= 2)
          {
            *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
          }
          else
          {
            *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
            *(void *)(a1 + 72) = a2[9];
            swift_bridgeObjectRetain();
          }
          *(void *)(a1 + 80) = a2[10];
          *(void *)(a1 + 88) = a2[11];
          *(void *)(a1 + 96) = a2[12];
          *(void *)(a1 + 104) = a2[13];
          *(void *)(a1 + 112) = a2[14];
          *(void *)(a1 + 120) = a2[15];
          *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
          *(void *)(a1 + 136) = a2[17];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_95;
        case 3u:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          unint64_t v92 = a2[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v92 >= 0xF)
          {
            *(void *)(a1 + 48) = a2[6];
            *(void *)(a1 + 56) = a2[7];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
          }
          *(void *)(a1 + 64) = a2[8];
          *(void *)(a1 + 72) = a2[9];
          *(void *)(a1 + 80) = a2[10];
          *(void *)(a1 + 88) = a2[11];
          *(void *)(a1 + 96) = a2[12];
          *(void *)(a1 + 104) = a2[13];
          *(void *)(a1 + 112) = a2[14];
          *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_95;
        case 4u:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          *(void *)(a1 + 48) = a2[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_95;
        case 5u:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
          *(unsigned char *)(a1 + 49) = *((unsigned char *)a2 + 49);
          *(void *)(a1 + 56) = a2[7];
          *(void *)(a1 + 64) = a2[8];
          *(void *)(a1 + 72) = a2[9];
          *(void *)(a1 + 80) = a2[10];
          *(void *)(a1 + 88) = a2[11];
          *(void *)(a1 + 96) = a2[12];
          *(void *)(a1 + 104) = a2[13];
          *(void *)(a1 + 112) = a2[14];
          *(void *)(a1 + 120) = a2[15];
          *(void *)(a1 + 128) = a2[16];
          *(void *)(a1 + 136) = a2[17];
          *(void *)(a1 + 144) = a2[18];
          *(void *)(a1 + 152) = a2[19];
          uint64_t v206 = (long long *)(a2 + 20);
          unint64_t v199 = a2[21];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v199 >= 2)
          {
            uint64_t v94 = (_OWORD *)(a1 + 160);
            if (v199 != 2)
            {
              *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
              *(void *)(a1 + 168) = a2[21];
              swift_bridgeObjectRetain();
              goto LABEL_83;
            }
            long long v93 = *v206;
          }
          else
          {
            long long v93 = *v206;
            uint64_t v94 = (_OWORD *)(a1 + 160);
          }
          *uint64_t v94 = v93;
LABEL_83:
          uint64_t v209 = (int *)type metadata accessor for FormatPackage();
          uint64_t v161 = v209[23];
          uint64_t v162 = (void *)(a1 + v161);
          uint64_t v163 = (uint64_t)a2 + v161;
          void *v162 = *(uint64_t *)((char *)a2 + v161);
          v162[1] = *(uint64_t *)((char *)a2 + v161 + 8);
          uint64_t v164 = (int *)type metadata accessor for FormatCompilerOptions(0);
          uint64_t v165 = v164[6];
          uint64_t v166 = (char *)v162 + v165;
          uint64_t v167 = (long long *)(v163 + v165);
          uint64_t v168 = *(void *)(v163 + v165 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v168 == 1)
          {
            long long v169 = *v167;
            long long v170 = v167[2];
            *((_OWORD *)v166 + 1) = v167[1];
            *((_OWORD *)v166 + 2) = v170;
            *(_OWORD *)uint64_t v166 = v169;
          }
          else
          {
            *(void *)uint64_t v166 = *(void *)v167;
            *((void *)v166 + 1) = *((void *)v167 + 1);
            *((void *)v166 + 2) = *((void *)v167 + 2);
            *((void *)v166 + 3) = *((void *)v167 + 3);
            *((void *)v166 + 4) = *((void *)v167 + 4);
            *((void *)v166 + 5) = *((void *)v167 + 5);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          uint64_t v171 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          uint64_t v172 = &v166[v171];
          uint64_t v173 = (char *)v167 + v171;
          uint64_t v174 = sub_1C1518CDC();
          uint64_t v175 = *(void *)(v174 - 8);
          __dstg = *(unsigned int (**)(char *, uint64_t, uint64_t))(v175 + 48);
          if (__dstg(v173, 1, v174))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v172, v173, *(void *)(*(void *)(v176 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v175 + 16))(v172, v173, v174);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v175 + 56))(v172, 0, 1, v174);
          }
          uint64_t v177 = v164[7];
          uint64_t v178 = (char *)v162 + v177;
          uint64_t v179 = (const void *)(v163 + v177);
          if (__dstg((char *)(v163 + v177), 1, v174))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v178, v179, *(void *)(*(void *)(v180 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v175 + 16))(v178, v179, v174);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v175 + 56))(v178, 0, 1, v174);
          }
          *(void *)((char *)v162 + v164[8]) = *(void *)(v163 + v164[8]);
          uint64_t v181 = v209[24];
          uint64_t v182 = a1 + v181;
          uint64_t v183 = (uint64_t)a2 + v181;
          uint64_t v184 = sub_1C151928C();
          uint64_t v185 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v184 - 8) + 16);
          swift_bridgeObjectRetain();
          v185(v182, v183, v184);
          uint64_t v186 = v209[25];
          uint64_t v187 = (void *)(a1 + v186);
          uint64_t v188 = (char *)a2 + v186;
          if (__dstg(v188, 1, v174))
          {
            sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            memcpy(v187, v188, *(void *)(*(void *)(v189 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v175 + 16))(v187, v188, v174);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v175 + 56))(v187, 0, 1, v174);
          }
LABEL_95:
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_95;
        case 7u:
          *(void *)a1 = *a2;
          swift_retain();
          goto LABEL_95;
        case 8u:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          *(void *)(a1 + 48) = a2[6];
          *(void *)(a1 + 56) = a2[7];
          *(void *)(a1 + 64) = a2[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_95;
        case 9u:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          *(void *)(a1 + 48) = a2[6];
          *(void *)(a1 + 56) = a2[7];
          *(void *)(a1 + 64) = a2[8];
          *(void *)(a1 + 72) = a2[9];
          *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
          *(void *)(a1 + 88) = a2[11];
          *(void *)(a1 + 96) = a2[12];
          *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_95;
        case 0xAu:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          uint64_t v117 = a2[4];
          uint64_t v118 = a2[5];
          uint64_t v119 = a2[6];
          uint64_t v120 = a2[7];
          uint64_t v121 = a2[8];
          uint64_t v122 = a2[9];
          unsigned __int8 v123 = *((unsigned char *)a2 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF1DB64(v117, v118, v119, v120, v121, v122, v123);
          *(void *)(a1 + 32) = v117;
          *(void *)(a1 + 40) = v118;
          *(void *)(a1 + 48) = v119;
          *(void *)(a1 + 56) = v120;
          *(void *)(a1 + 64) = v121;
          *(void *)(a1 + 72) = v122;
          *(unsigned char *)(a1 + 80) = v123;
          goto LABEL_95;
        case 0xBu:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = a2[5];
          uint64_t v95 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
          uint64_t v96 = (void *)(a1 + v95);
          uint64_t v97 = (uint64_t)a2 + v95;
          void *v96 = *(uint64_t *)((char *)a2 + v95);
          v96[1] = *(uint64_t *)((char *)a2 + v95 + 8);
          uint64_t v98 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v99 = v98[5];
          uint64_t v207 = v97 + v99;
          __dstuint64_t i = (char *)v96 + v99;
          uint64_t v100 = sub_1C151631C();
          uint64_t v200 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v100 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v200(__dsti, v207, v100);
          uint64_t v101 = v98[6];
          uint64_t v102 = (void *)((char *)v96 + v101);
          uint64_t v103 = (void *)(v97 + v101);
          *uint64_t v102 = *v103;
          v102[1] = v103[1];
          uint64_t v104 = v98[7];
          uint64_t v105 = (void *)((char *)v96 + v104);
          uint64_t v106 = (void *)(v97 + v104);
          *uint64_t v105 = *v106;
          v105[1] = v106[1];
          uint64_t v107 = v98[8];
          uint64_t v108 = (void *)((char *)v96 + v107);
          unsigned __int8 v109 = (void *)(v97 + v107);
          *uint64_t v108 = *v109;
          v108[1] = v109[1];
          uint64_t v110 = v98[9];
          uint64_t v111 = (void *)((char *)v96 + v110);
          uint64_t v112 = (void *)(v97 + v110);
          *uint64_t v111 = *v112;
          v111[1] = v112[1];
          uint64_t v113 = v98[10];
          __dste = (char *)v96 + v113;
          uint64_t v201 = (const void *)(v97 + v113);
          uint64_t v114 = sub_1C151D6DC();
          uint64_t v115 = *(void *)(v114 - 8);
          uint64_t v193 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v115 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v193(v201, 1, v114))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dste, v201, *(void *)(*(void *)(v116 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v115 + 16))(__dste, v201, v114);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(__dste, 0, 1, v114);
          }
          *(void *)((char *)v96 + v98[11]) = *(void *)(v97 + v98[11]);
          *(void *)((char *)v96 + v98[12]) = *(void *)(v97 + v98[12]);
          *(void *)((char *)v96 + v98[13]) = *(void *)(v97 + v98[13]);
          *(void *)((char *)v96 + v98[14]) = *(void *)(v97 + v98[14]);
          *(void *)((char *)v96 + v98[15]) = *(void *)(v97 + v98[15]);
          *(void *)((char *)v96 + v98[16]) = *(void *)(v97 + v98[16]);
          *(void *)((char *)v96 + v98[17]) = *(void *)(v97 + v98[17]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        default:
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          uint64_t v29 = (int *)type metadata accessor for FormatContent(0);
          uint64_t v30 = v29[5];
          uint64_t v31 = a1 + v30;
          uint64_t v32 = (uint64_t)a2 + v30;
          uint64_t v33 = sub_1C151631C();
          uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          v34(v31, v32, v33);
          uint64_t v35 = v29[6];
          uint64_t v36 = (void *)(a1 + v35);
          uint64_t v37 = (uint64_t *)((char *)a2 + v35);
          *uint64_t v36 = *v37;
          v36[1] = v37[1];
          uint64_t v38 = v29[7];
          uint64_t v39 = (void *)(a1 + v38);
          uint64_t v40 = (uint64_t *)((char *)a2 + v38);
          *uint64_t v39 = *v40;
          v39[1] = v40[1];
          uint64_t v41 = v29[8];
          uint64_t v42 = (void *)(a1 + v41);
          uint64_t v43 = (uint64_t *)((char *)a2 + v41);
          *uint64_t v42 = *v43;
          v42[1] = v43[1];
          uint64_t v44 = v29[9];
          uint64_t v45 = (void *)(a1 + v44);
          uint64_t v46 = (uint64_t *)((char *)a2 + v44);
          *uint64_t v45 = *v46;
          v45[1] = v46[1];
          uint64_t v47 = v29[10];
          uint64_t v203 = (char *)a2 + v47;
          __dsta = (void *)(a1 + v47);
          uint64_t v48 = sub_1C151D6DC();
          uint64_t v49 = *(void *)(v48 - 8);
          long long v195 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v195(v203, 1, v48))
          {
            sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
            memcpy(__dsta, v203, *(void *)(*(void *)(v50 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v49 + 16))(__dsta, v203, v48);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(__dsta, 0, 1, v48);
          }
          *(void *)(a1 + v29[11]) = *(uint64_t *)((char *)a2 + v29[11]);
          *(void *)(a1 + v29[12]) = *(uint64_t *)((char *)a2 + v29[12]);
          *(void *)(a1 + v29[13]) = *(uint64_t *)((char *)a2 + v29[13]);
          *(void *)(a1 + v29[14]) = *(uint64_t *)((char *)a2 + v29[14]);
          *(void *)(a1 + v29[15]) = *(uint64_t *)((char *)a2 + v29[15]);
          *(void *)(a1 + v29[16]) = *(uint64_t *)((char *)a2 + v29[16]);
          *(void *)(a1 + v29[17]) = *(uint64_t *)((char *)a2 + v29[17]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_95;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C0B27084(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatCompilerResultOutput();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugFormatCompilerResultOutput()
{
  uint64_t result = qword_1EA1A3860;
  if (!qword_1EA1A3860) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0B2712C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v20 = type metadata accessor for FormatFile();
    int v21 = swift_getEnumCaseMultiPayload();
    if (v21 == 11)
    {
      long long v62 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v62;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      uint64_t v63 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      uint64_t v64 = a1 + v63;
      uint64_t v65 = a2 + v63;
      *(_OWORD *)(a1 + v63) = *(_OWORD *)(a2 + v63);
      uint64_t v66 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v67 = v66[5];
      uint64_t v68 = v64 + v67;
      uint64_t v69 = v65 + v67;
      uint64_t v70 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
      *(_OWORD *)(v64 + v66[6]) = *(_OWORD *)(v65 + v66[6]);
      *(_OWORD *)(v64 + v66[7]) = *(_OWORD *)(v65 + v66[7]);
      *(_OWORD *)(v64 + v66[8]) = *(_OWORD *)(v65 + v66[8]);
      *(_OWORD *)(v64 + v66[9]) = *(_OWORD *)(v65 + v66[9]);
      uint64_t v71 = v66[10];
      uint64_t v72 = (void *)(v64 + v71);
      unint64_t v73 = (const void *)(v65 + v71);
      uint64_t v74 = sub_1C151D6DC();
      uint64_t v75 = *(void *)(v74 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v75 + 32))(v72, v73, v74);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
      }
      *(void *)(v64 + v66[11]) = *(void *)(v65 + v66[11]);
      *(void *)(v64 + v66[12]) = *(void *)(v65 + v66[12]);
      *(void *)(v64 + v66[13]) = *(void *)(v65 + v66[13]);
      *(void *)(v64 + v66[14]) = *(void *)(v65 + v66[14]);
      *(void *)(v64 + v66[15]) = *(void *)(v65 + v66[15]);
      *(void *)(v64 + v66[16]) = *(void *)(v65 + v66[16]);
      *(void *)(v64 + v66[17]) = *(void *)(v65 + v66[17]);
    }
    else if (v21 == 5)
    {
      long long v77 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v77;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      uint64_t v118 = (int *)type metadata accessor for FormatPackage();
      uint64_t v78 = v118[23];
      uint64_t v79 = a1 + v78;
      uint64_t v80 = a2 + v78;
      *(_OWORD *)(a1 + v78) = *(_OWORD *)(a2 + v78);
      uint64_t v121 = (int *)type metadata accessor for FormatCompilerOptions(0);
      uint64_t v81 = v121[6];
      uint64_t v82 = (_OWORD *)(v79 + v81);
      uint64_t v83 = v80 + v81;
      long long v84 = *(_OWORD *)(v80 + v81 + 16);
      *uint64_t v82 = *(_OWORD *)(v80 + v81);
      v82[1] = v84;
      v82[2] = *(_OWORD *)(v80 + v81 + 32);
      uint64_t v85 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v86 = (char *)v82 + v85;
      uint64_t v87 = (const void *)(v83 + v85);
      uint64_t v88 = sub_1C1518CDC();
      uint64_t v89 = *(void *)(v88 - 8);
      uint64_t v119 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v89 + 48);
      if (v119(v87, 1, v88))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v89 + 32))(v86, v87, v88);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
      }
      uint64_t v95 = v121[7];
      uint64_t v96 = (void *)(v79 + v95);
      uint64_t v97 = (const void *)(v80 + v95);
      if (v119((const void *)(v80 + v95), 1, v88))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v89 + 32))(v96, v97, v88);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v89 + 56))(v96, 0, 1, v88);
      }
      *(void *)(v79 + v121[8]) = *(void *)(v80 + v121[8]);
      uint64_t v107 = v118[24];
      uint64_t v108 = a1 + v107;
      uint64_t v109 = a2 + v107;
      uint64_t v110 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 32))(v108, v109, v110);
      uint64_t v111 = v118[25];
      uint64_t v112 = (void *)(a1 + v111);
      uint64_t v113 = (const void *)(a2 + v111);
      if (v119((const void *)(a2 + v111), 1, v88))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v89 + 32))(v112, v113, v88);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v89 + 56))(v112, 0, 1, v88);
      }
    }
    else
    {
      if (v21)
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_48:
        sub_1C0913D20();
        *(void *)(a1 + *(int *)(v115 + 48)) = *(void *)(a2 + *(int *)(v115 + 48));
        goto LABEL_49;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v22 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v23 = v22[5];
      uint64_t v24 = a1 + v23;
      uint64_t v25 = a2 + v23;
      uint64_t v26 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      *(_OWORD *)(a1 + v22[6]) = *(_OWORD *)(a2 + v22[6]);
      *(_OWORD *)(a1 + v22[7]) = *(_OWORD *)(a2 + v22[7]);
      *(_OWORD *)(a1 + v22[8]) = *(_OWORD *)(a2 + v22[8]);
      *(_OWORD *)(a1 + v22[9]) = *(_OWORD *)(a2 + v22[9]);
      uint64_t v27 = v22[10];
      uint64_t v28 = (void *)(a1 + v27);
      uint64_t v29 = (const void *)(a2 + v27);
      uint64_t v30 = sub_1C151D6DC();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v31 + 32))(v28, v29, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      *(void *)(a1 + v22[11]) = *(void *)(a2 + v22[11]);
      *(void *)(a1 + v22[12]) = *(void *)(a2 + v22[12]);
      *(void *)(a1 + v22[13]) = *(void *)(a2 + v22[13]);
      *(void *)(a1 + v22[14]) = *(void *)(a2 + v22[14]);
      *(void *)(a1 + v22[15]) = *(void *)(a2 + v22[15]);
      *(void *)(a1 + v22[16]) = *(void *)(a2 + v22[16]);
      *(void *)(a1 + v22[17]) = *(void *)(a2 + v22[17]);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_48;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for FormatFile();
    int v8 = swift_getEnumCaseMultiPayload();
    if (v8 == 11)
    {
      long long v33 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v33;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      uint64_t v34 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      uint64_t v35 = a1 + v34;
      uint64_t v36 = a2 + v34;
      *(_OWORD *)(a1 + v34) = *(_OWORD *)(a2 + v34);
      uint64_t v37 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v38 = v37[5];
      uint64_t v39 = v35 + v38;
      uint64_t v40 = v36 + v38;
      uint64_t v41 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
      *(_OWORD *)(v35 + v37[6]) = *(_OWORD *)(v36 + v37[6]);
      *(_OWORD *)(v35 + v37[7]) = *(_OWORD *)(v36 + v37[7]);
      *(_OWORD *)(v35 + v37[8]) = *(_OWORD *)(v36 + v37[8]);
      *(_OWORD *)(v35 + v37[9]) = *(_OWORD *)(v36 + v37[9]);
      uint64_t v42 = v37[10];
      uint64_t v43 = (void *)(v35 + v42);
      uint64_t v44 = (const void *)(v36 + v42);
      uint64_t v45 = sub_1C151D6DC();
      uint64_t v46 = *(void *)(v45 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v46 + 32))(v43, v44, v45);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      *(void *)(v35 + v37[11]) = *(void *)(v36 + v37[11]);
      *(void *)(v35 + v37[12]) = *(void *)(v36 + v37[12]);
      *(void *)(v35 + v37[13]) = *(void *)(v36 + v37[13]);
      *(void *)(v35 + v37[14]) = *(void *)(v36 + v37[14]);
      *(void *)(v35 + v37[15]) = *(void *)(v36 + v37[15]);
      *(void *)(v35 + v37[16]) = *(void *)(v36 + v37[16]);
      *(void *)(v35 + v37[17]) = *(void *)(v36 + v37[17]);
    }
    else if (v8 == 5)
    {
      long long v48 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v48;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      uint64_t v117 = (int *)type metadata accessor for FormatPackage();
      uint64_t v49 = v117[23];
      uint64_t v50 = a1 + v49;
      uint64_t v51 = a2 + v49;
      *(_OWORD *)(a1 + v49) = *(_OWORD *)(a2 + v49);
      uint64_t v122 = (int *)type metadata accessor for FormatCompilerOptions(0);
      uint64_t v52 = v122[6];
      int v53 = (_OWORD *)(v50 + v52);
      uint64_t v54 = v51 + v52;
      long long v55 = *(_OWORD *)(v51 + v52 + 16);
      *int v53 = *(_OWORD *)(v51 + v52);
      v53[1] = v55;
      v53[2] = *(_OWORD *)(v51 + v52 + 32);
      uint64_t v56 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      long long v57 = (char *)v53 + v56;
      uint64_t v58 = (const void *)(v54 + v56);
      uint64_t v59 = sub_1C1518CDC();
      uint64_t v60 = *(void *)(v59 - 8);
      uint64_t v120 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v60 + 48);
      if (v120(v58, 1, v59))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v60 + 32))(v57, v58, v59);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      uint64_t v91 = v122[7];
      unint64_t v92 = (void *)(v50 + v91);
      long long v93 = (const void *)(v51 + v91);
      if (v120((const void *)(v51 + v91), 1, v59))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v60 + 32))(v92, v93, v59);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v92, 0, 1, v59);
      }
      *(void *)(v50 + v122[8]) = *(void *)(v51 + v122[8]);
      uint64_t v99 = v117[24];
      uint64_t v100 = a1 + v99;
      uint64_t v101 = a2 + v99;
      uint64_t v102 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
      uint64_t v103 = v117[25];
      uint64_t v104 = (void *)(a1 + v103);
      uint64_t v105 = (const void *)(a2 + v103);
      if (v120(v105, 1, v59))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v60 + 32))(v104, v105, v59);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v104, 0, 1, v59);
      }
    }
    else
    {
      if (v8)
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_49:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v9 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      uint64_t v13 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      *(_OWORD *)(a1 + v9[6]) = *(_OWORD *)(a2 + v9[6]);
      *(_OWORD *)(a1 + v9[7]) = *(_OWORD *)(a2 + v9[7]);
      *(_OWORD *)(a1 + v9[8]) = *(_OWORD *)(a2 + v9[8]);
      *(_OWORD *)(a1 + v9[9]) = *(_OWORD *)(a2 + v9[9]);
      uint64_t v14 = v9[10];
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = (const void *)(a2 + v14);
      uint64_t v17 = sub_1C151D6DC();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      *(void *)(a1 + v9[11]) = *(void *)(a2 + v9[11]);
      *(void *)(a1 + v9[12]) = *(void *)(a2 + v9[12]);
      *(void *)(a1 + v9[13]) = *(void *)(a2 + v9[13]);
      *(void *)(a1 + v9[14]) = *(void *)(a2 + v9[14]);
      *(void *)(a1 + v9[15]) = *(void *)(a2 + v9[15]);
      *(void *)(a1 + v9[16]) = *(void *)(a2 + v9[16]);
      *(void *)(a1 + v9[17]) = *(void *)(a2 + v9[17]);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_49;
  }
  memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_1C0B28160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_1C0B27084(a1);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v20 = type metadata accessor for FormatFile();
    int v21 = swift_getEnumCaseMultiPayload();
    if (v21 == 11)
    {
      long long v62 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v62;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      uint64_t v63 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      uint64_t v64 = a1 + v63;
      uint64_t v65 = a2 + v63;
      *(_OWORD *)(a1 + v63) = *(_OWORD *)(a2 + v63);
      uint64_t v66 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v67 = v66[5];
      uint64_t v68 = v64 + v67;
      uint64_t v69 = v65 + v67;
      uint64_t v70 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
      *(_OWORD *)(v64 + v66[6]) = *(_OWORD *)(v65 + v66[6]);
      *(_OWORD *)(v64 + v66[7]) = *(_OWORD *)(v65 + v66[7]);
      *(_OWORD *)(v64 + v66[8]) = *(_OWORD *)(v65 + v66[8]);
      *(_OWORD *)(v64 + v66[9]) = *(_OWORD *)(v65 + v66[9]);
      uint64_t v71 = v66[10];
      uint64_t v72 = (void *)(v64 + v71);
      unint64_t v73 = (const void *)(v65 + v71);
      uint64_t v74 = sub_1C151D6DC();
      uint64_t v75 = *(void *)(v74 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v75 + 32))(v72, v73, v74);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
      }
      *(void *)(v64 + v66[11]) = *(void *)(v65 + v66[11]);
      *(void *)(v64 + v66[12]) = *(void *)(v65 + v66[12]);
      *(void *)(v64 + v66[13]) = *(void *)(v65 + v66[13]);
      *(void *)(v64 + v66[14]) = *(void *)(v65 + v66[14]);
      *(void *)(v64 + v66[15]) = *(void *)(v65 + v66[15]);
      *(void *)(v64 + v66[16]) = *(void *)(v65 + v66[16]);
      *(void *)(v64 + v66[17]) = *(void *)(v65 + v66[17]);
    }
    else if (v21 == 5)
    {
      long long v77 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v77;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      uint64_t v118 = (int *)type metadata accessor for FormatPackage();
      uint64_t v78 = v118[23];
      uint64_t v79 = a1 + v78;
      uint64_t v80 = a2 + v78;
      *(_OWORD *)(a1 + v78) = *(_OWORD *)(a2 + v78);
      uint64_t v121 = (int *)type metadata accessor for FormatCompilerOptions(0);
      uint64_t v81 = v121[6];
      uint64_t v82 = (_OWORD *)(v79 + v81);
      uint64_t v83 = v80 + v81;
      long long v84 = *(_OWORD *)(v80 + v81 + 16);
      *uint64_t v82 = *(_OWORD *)(v80 + v81);
      v82[1] = v84;
      v82[2] = *(_OWORD *)(v80 + v81 + 32);
      uint64_t v85 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v86 = (char *)v82 + v85;
      uint64_t v87 = (const void *)(v83 + v85);
      uint64_t v88 = sub_1C1518CDC();
      uint64_t v89 = *(void *)(v88 - 8);
      uint64_t v119 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v89 + 48);
      if (v119(v87, 1, v88))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v89 + 32))(v86, v87, v88);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
      }
      uint64_t v95 = v121[7];
      uint64_t v96 = (void *)(v79 + v95);
      uint64_t v97 = (const void *)(v80 + v95);
      if (v119((const void *)(v80 + v95), 1, v88))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v89 + 32))(v96, v97, v88);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v89 + 56))(v96, 0, 1, v88);
      }
      *(void *)(v79 + v121[8]) = *(void *)(v80 + v121[8]);
      uint64_t v107 = v118[24];
      uint64_t v108 = a1 + v107;
      uint64_t v109 = a2 + v107;
      uint64_t v110 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 32))(v108, v109, v110);
      uint64_t v111 = v118[25];
      uint64_t v112 = (void *)(a1 + v111);
      uint64_t v113 = (const void *)(a2 + v111);
      if (v119((const void *)(a2 + v111), 1, v88))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v89 + 32))(v112, v113, v88);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v89 + 56))(v112, 0, 1, v88);
      }
    }
    else
    {
      if (v21)
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_49:
        sub_1C0913D20();
        *(void *)(a1 + *(int *)(v115 + 48)) = *(void *)(a2 + *(int *)(v115 + 48));
        goto LABEL_50;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v22 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v23 = v22[5];
      uint64_t v24 = a1 + v23;
      uint64_t v25 = a2 + v23;
      uint64_t v26 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      *(_OWORD *)(a1 + v22[6]) = *(_OWORD *)(a2 + v22[6]);
      *(_OWORD *)(a1 + v22[7]) = *(_OWORD *)(a2 + v22[7]);
      *(_OWORD *)(a1 + v22[8]) = *(_OWORD *)(a2 + v22[8]);
      *(_OWORD *)(a1 + v22[9]) = *(_OWORD *)(a2 + v22[9]);
      uint64_t v27 = v22[10];
      uint64_t v28 = (void *)(a1 + v27);
      uint64_t v29 = (const void *)(a2 + v27);
      uint64_t v30 = sub_1C151D6DC();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v31 + 32))(v28, v29, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      *(void *)(a1 + v22[11]) = *(void *)(a2 + v22[11]);
      *(void *)(a1 + v22[12]) = *(void *)(a2 + v22[12]);
      *(void *)(a1 + v22[13]) = *(void *)(a2 + v22[13]);
      *(void *)(a1 + v22[14]) = *(void *)(a2 + v22[14]);
      *(void *)(a1 + v22[15]) = *(void *)(a2 + v22[15]);
      *(void *)(a1 + v22[16]) = *(void *)(a2 + v22[16]);
      *(void *)(a1 + v22[17]) = *(void *)(a2 + v22[17]);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_49;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for FormatFile();
    int v8 = swift_getEnumCaseMultiPayload();
    if (v8 == 11)
    {
      long long v33 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v33;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      uint64_t v34 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      uint64_t v35 = a1 + v34;
      uint64_t v36 = a2 + v34;
      *(_OWORD *)(a1 + v34) = *(_OWORD *)(a2 + v34);
      uint64_t v37 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v38 = v37[5];
      uint64_t v39 = v35 + v38;
      uint64_t v40 = v36 + v38;
      uint64_t v41 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
      *(_OWORD *)(v35 + v37[6]) = *(_OWORD *)(v36 + v37[6]);
      *(_OWORD *)(v35 + v37[7]) = *(_OWORD *)(v36 + v37[7]);
      *(_OWORD *)(v35 + v37[8]) = *(_OWORD *)(v36 + v37[8]);
      *(_OWORD *)(v35 + v37[9]) = *(_OWORD *)(v36 + v37[9]);
      uint64_t v42 = v37[10];
      uint64_t v43 = (void *)(v35 + v42);
      uint64_t v44 = (const void *)(v36 + v42);
      uint64_t v45 = sub_1C151D6DC();
      uint64_t v46 = *(void *)(v45 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v46 + 32))(v43, v44, v45);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      *(void *)(v35 + v37[11]) = *(void *)(v36 + v37[11]);
      *(void *)(v35 + v37[12]) = *(void *)(v36 + v37[12]);
      *(void *)(v35 + v37[13]) = *(void *)(v36 + v37[13]);
      *(void *)(v35 + v37[14]) = *(void *)(v36 + v37[14]);
      *(void *)(v35 + v37[15]) = *(void *)(v36 + v37[15]);
      *(void *)(v35 + v37[16]) = *(void *)(v36 + v37[16]);
      *(void *)(v35 + v37[17]) = *(void *)(v36 + v37[17]);
    }
    else if (v8 == 5)
    {
      long long v48 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v48;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      uint64_t v117 = (int *)type metadata accessor for FormatPackage();
      uint64_t v49 = v117[23];
      uint64_t v50 = a1 + v49;
      uint64_t v51 = a2 + v49;
      *(_OWORD *)(a1 + v49) = *(_OWORD *)(a2 + v49);
      uint64_t v122 = (int *)type metadata accessor for FormatCompilerOptions(0);
      uint64_t v52 = v122[6];
      int v53 = (_OWORD *)(v50 + v52);
      uint64_t v54 = v51 + v52;
      long long v55 = *(_OWORD *)(v51 + v52 + 16);
      *int v53 = *(_OWORD *)(v51 + v52);
      v53[1] = v55;
      v53[2] = *(_OWORD *)(v51 + v52 + 32);
      uint64_t v56 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      long long v57 = (char *)v53 + v56;
      uint64_t v58 = (const void *)(v54 + v56);
      uint64_t v59 = sub_1C1518CDC();
      uint64_t v60 = *(void *)(v59 - 8);
      uint64_t v120 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v60 + 48);
      if (v120(v58, 1, v59))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v60 + 32))(v57, v58, v59);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      uint64_t v91 = v122[7];
      unint64_t v92 = (void *)(v50 + v91);
      long long v93 = (const void *)(v51 + v91);
      if (v120((const void *)(v51 + v91), 1, v59))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v60 + 32))(v92, v93, v59);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v92, 0, 1, v59);
      }
      *(void *)(v50 + v122[8]) = *(void *)(v51 + v122[8]);
      uint64_t v99 = v117[24];
      uint64_t v100 = a1 + v99;
      uint64_t v101 = a2 + v99;
      uint64_t v102 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
      uint64_t v103 = v117[25];
      uint64_t v104 = (void *)(a1 + v103);
      uint64_t v105 = (const void *)(a2 + v103);
      if (v120(v105, 1, v59))
      {
        sub_1BFEC0B14(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v60 + 32))(v104, v105, v59);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v104, 0, 1, v59);
      }
    }
    else
    {
      if (v8)
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_50:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v9 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      uint64_t v13 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      *(_OWORD *)(a1 + v9[6]) = *(_OWORD *)(a2 + v9[6]);
      *(_OWORD *)(a1 + v9[7]) = *(_OWORD *)(a2 + v9[7]);
      *(_OWORD *)(a1 + v9[8]) = *(_OWORD *)(a2 + v9[8]);
      *(_OWORD *)(a1 + v9[9]) = *(_OWORD *)(a2 + v9[9]);
      uint64_t v14 = v9[10];
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = (const void *)(a2 + v14);
      uint64_t v17 = sub_1C151D6DC();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        sub_1BFEC0B14(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      *(void *)(a1 + v9[11]) = *(void *)(a2 + v9[11]);
      *(void *)(a1 + v9[12]) = *(void *)(a2 + v9[12]);
      *(void *)(a1 + v9[13]) = *(void *)(a2 + v9[13]);
      *(void *)(a1 + v9[14]) = *(void *)(a2 + v9[14]);
      *(void *)(a1 + v9[15]) = *(void *)(a2 + v9[15]);
      *(void *)(a1 + v9[16]) = *(void *)(a2 + v9[16]);
      *(void *)(a1 + v9[17]) = *(void *)(a2 + v9[17]);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_50;
  }
  memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_1C0B291A4()
{
  uint64_t result = type metadata accessor for FormatFile();
  if (v1 <= 0x3F)
  {
    uint64_t v3 = *(void *)(result - 8) + 64;
    uint64_t v4 = "\b";
    swift_getTupleTypeLayout2();
    uint64_t v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t FeedGroupRepresentable.feedGroupItems.getter()
{
  return MEMORY[0x1E4FBC870];
}

void sub_1C0B29250(unsigned char *a1@<X8>)
{
}

void FeedGroupRepresentable.layoutOrder.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

double sub_1C0B29270@<D0>(uint64_t a1@<X8>)
{
  return FeedGroupRepresentable.feedGroupDebug.getter(a1);
}

double FeedGroupRepresentable.feedGroupDebug.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t FeedGroupRepresentable.feedSelectors.getter()
{
  return MEMORY[0x1E4FBC870];
}

uint64_t dispatch thunk of FeedGroupRepresentable.feedItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedGroupRepresentable.feedGroupItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedGroupRepresentable.feedGroupKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedGroupRepresentable.layoutOrder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeedGroupRepresentable.feedGroupContextIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeedGroupRepresentable.feedSlots.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FeedGroupRepresentable.feedGroupBindingOptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of FeedGroupRepresentable.feedSelectors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of FeedGroupRepresentable.feedGroupIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t *sub_1C0B29358(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C065C470();
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      sub_1BFF81FF0();
      uint64_t v12 = v11;
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_retain();
      v13(v9, v10, v12);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C0B2948C(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C065C470();
    uint64_t v5 = a1 + *(int *)(v4 + 48);
    sub_1BFF81FF0();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  return result;
}

void *sub_1C0B29524(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C065C470();
    uint64_t v6 = *(int *)(v5 + 48);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1BFF81FF0();
    uint64_t v10 = v9;
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v11(v7, v8, v10);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1C0B29600(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C0B296EC((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C065C470();
      uint64_t v6 = *(int *)(v5 + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      sub_1BFF81FF0();
      uint64_t v10 = v9;
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      swift_retain();
      v11(v7, v8, v10);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C0B296EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1C0B29748(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    sub_1C065C470();
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1BFF81FF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1C0B2981C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0B296EC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_1C065C470();
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      sub_1BFF81FF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *sub_1C0B29900(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = a2[2];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (void *)(a1 + v5);
    uint64_t v7 = (uint64_t *)((char *)a2 + v5);
    type metadata accessor for FormatDebuggerCallStackFrameContext(0);
    swift_retain();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *uint64_t v6 = *v7;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C065C470();
      uint64_t v10 = *(int *)(v9 + 48);
      uint64_t v11 = (char *)v6 + v10;
      uint64_t v12 = (char *)v7 + v10;
      sub_1BFF81FF0();
      uint64_t v14 = v13;
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_retain();
      v15(v11, v12, v14);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_1C0B29A80(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  LODWORD(a1) = swift_getEnumCaseMultiPayload();
  uint64_t result = swift_release();
  if (a1 == 1)
  {
    sub_1C065C470();
    uint64_t v7 = v4 + *(int *)(v6 + 48);
    sub_1BFF81FF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  return result;
}

uint64_t sub_1C0B29B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (void *)(a2 + v4);
  type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  swift_retain();
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *uint64_t v5 = *v6;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C065C470();
    uint64_t v9 = *(int *)(v8 + 48);
    uint64_t v10 = (char *)v5 + v9;
    uint64_t v11 = (char *)v6 + v9;
    sub_1BFF81FF0();
    uint64_t v13 = v12;
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    v14(v10, v11, v13);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1C0B29C74(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1C0B296EC((uint64_t)a1 + v6);
    type metadata accessor for FormatDebuggerCallStackFrameContext(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    void *v7 = *v8;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C065C470();
      uint64_t v11 = *(int *)(v10 + 48);
      uint64_t v12 = (char *)v7 + v11;
      uint64_t v13 = (char *)v8 + v11;
      sub_1BFF81FF0();
      uint64_t v15 = v14;
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_retain();
      v16(v12, v13, v15);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C0B29DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v5 = *v6;
    sub_1C065C470();
    uint64_t v9 = *(int *)(v8 + 48);
    uint64_t v10 = (char *)v5 + v9;
    uint64_t v11 = (char *)v6 + v9;
    sub_1BFF81FF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1C0B29EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_1C0B296EC(a1 + v7);
    uint64_t v10 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v8 = *v9;
      sub_1C065C470();
      uint64_t v12 = *(int *)(v11 + 48);
      uint64_t v13 = (char *)v8 + v12;
      uint64_t v14 = (char *)v9 + v12;
      sub_1BFF81FF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C0B2A010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0B2A024);
}

uint64_t sub_1C0B2A024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0B2A0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0B2A0E8);
}

uint64_t sub_1C0B2A0E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0B2A190()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  MEMORY[0x1F4188790](v2);
  unint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C065C40C(v1, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C065C470();
    uint64_t v6 = &v4[*(int *)(v5 + 48)];
    sub_1C1517EFC();
    swift_release();
    uint64_t v7 = v11;
    sub_1BFF81FF0();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    sub_1C1517EFC();
    swift_release();
    return v11;
  }
  return v7;
}

uint64_t sub_1C0B2A2C0()
{
  uint64_t v1 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (uint64_t *)((char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C065C40C(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = *v3;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C065C470();
    uint64_t v7 = (char *)v3 + *(int *)(v6 + 48);
    uint64_t v8 = *(void *)(v5 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    sub_1BFF81FF0();
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    uint64_t v8 = *(void *)(v5 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v8;
}

__n128 FormatRadialGradientCircle.center.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  return result;
}

__n128 FormatRadialGradientCircle.radius.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 48);
  __n128 result = *(__n128 *)(v1 + 16);
  long long v4 = *(_OWORD *)(v1 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_1C0B2A428@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatRadialGradientCircle.init(from:)(a1, a2);
}

uint64_t sub_1C0B2A440(void *a1)
{
  return FormatRadialGradientCircle.encode(to:)(a1);
}

BOOL _s8NewsFeed26FormatRadialGradientCircleV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  double v4 = *(double *)(a1 + 16);
  double v5 = *(double *)(a2 + 16);
  if (*(unsigned char *)(a1 + 48))
  {
    if ((*(unsigned char *)(a2 + 48) & 1) == 0) {
      return 0;
    }
    BOOL v6 = v4 == v5 && *(double *)(a1 + 24) == *(double *)(a2 + 24);
    BOOL v7 = v6 && *(double *)(a1 + 32) == *(double *)(a2 + 32);
    return v7 && *(double *)(a1 + 40) == *(double *)(a2 + 40);
  }
  else
  {
    return (*(unsigned char *)(a2 + 48) & 1) == 0 && v4 == v5;
  }
}

unint64_t sub_1C0B2A4E0(uint64_t a1)
{
  unint64_t result = sub_1C0B2A508();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0B2A508()
{
  unint64_t result = qword_1EA1A3870;
  if (!qword_1EA1A3870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3870);
  }
  return result;
}

unint64_t sub_1C0B2A55C(void *a1)
{
  a1[1] = sub_1C08AB4C8();
  a1[2] = sub_1C08F1FB8();
  unint64_t result = sub_1C0B2A594();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0B2A594()
{
  unint64_t result = qword_1EA1A3878;
  if (!qword_1EA1A3878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3878);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatRadialGradientCircle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatRadialGradientCircle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatRadialGradientCircle()
{
  return &type metadata for FormatRadialGradientCircle;
}

void *sub_1C0B2A694(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v23 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  int v6 = *(unsigned __int8 *)(a1 + 48);
  BOOL v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E334(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  sub_1BFF9E334(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v7);
  sub_1C0181BEC(0);
  unint64_t v10 = (*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
  uint64_t v12 = (uint64_t *)(v11 + v10);
  if (v6 == 255) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = v2;
  }
  if (v6 == 255) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = v1;
  }
  sub_1C0438F80(0x7265746E6543, 0xE600000000000000, v13, v14, v6 == 255, v12);
  uint64_t v15 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 0, 1, v15);
  sub_1C09BCFA4(0x656C63726943, 0xE600000000000000, 0, 0, v11, v26);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v16 = swift_allocObject();
  *(void *)(inited + 32) = v16;
  *(void *)(v16 + 48) = v27;
  long long v17 = v26[1];
  *(_OWORD *)(v16 + 16) = v26[0];
  *(_OWORD *)(v16 + 32) = v17;
  if (v6 == 255)
  {
    uint64_t v18 = 0;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    char v19 = -1;
  }
  else
  {
    char v19 = v6 & 1;
    uint64_t v18 = v23;
  }
  v24[0] = v18;
  v24[1] = v3;
  v24[2] = v4;
  v24[3] = v5;
  char v25 = v19;
  uint64_t v20 = sub_1C04BDD5C((uint64_t)v24);
  *(void *)(inited + 96) = &type metadata for FormatInspection;
  *(void *)(inited + 104) = &off_1F1C29D30;
  *(void *)(inited + 72) = v20;
  int v21 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v21;
}

uint64_t sub_1C0B2A96C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t FormatProgressViewNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 32);
  *a1 = v3;
  return sub_1BFF35EA4(v3);
}

uint64_t FormatProgressViewNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressViewNode.kind.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 120);
  uint64_t v4 = *(void *)(v1 + 128);
  uint64_t v5 = *(void *)(v1 + 136);
  uint64_t v6 = *(void *)(v1 + 144);
  uint64_t v7 = *(void *)(v1 + 152);
  uint64_t v8 = *(void *)(v1 + 160);
  uint64_t v9 = *(void *)(v1 + 168);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  char v10 = *(unsigned char *)(v1 + 176);
  *(unsigned char *)(a1 + 56) = v10;
  return sub_1C08A7374(v3, v4, v5, v6, v7, v8, v9, v10);
}

unint64_t FormatProgressViewNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 184);
  *a1 = v3;
  return sub_1BFE6FA30(v3);
}

uint64_t FormatProgressViewNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatProgressViewNode.zIndex.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 104);
}

uint64_t FormatProgressViewNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressViewNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressViewNode.identifier.modify())()
{
  return j__swift_endAccess;
}

unint64_t FormatProgressViewNode.size.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 32);
  *(void *)(v1 + 32) = v2;
  return sub_1BFF322A8(v3);
}

uint64_t (*FormatProgressViewNode.size.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatProgressViewNode.resize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatProgressViewNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressViewNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatProgressViewNode.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  char v3 = *(unsigned char *)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 88);
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  __int16 v7 = *(_WORD *)(v1 + 96);
  *(_WORD *)(a1 + 40) = v7;
  sub_1C05DD058(v2, v3);
  return sub_1C00AB510(v4, v5, v6, v7);
}

uint64_t FormatProgressViewNode.zIndex.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 104) = a1;
  return result;
}

uint64_t (*FormatProgressViewNode.zIndex.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatProgressViewNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatProgressViewNode.style.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 112) = a1;
  return swift_release();
}

uint64_t (*FormatProgressViewNode.style.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C0B2AF60@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 120);
  uint64_t v5 = *(void *)(v3 + 128);
  uint64_t v6 = *(void *)(v3 + 136);
  uint64_t v7 = *(void *)(v3 + 144);
  uint64_t v8 = *(void *)(v3 + 152);
  uint64_t v9 = *(void *)(v3 + 160);
  uint64_t v10 = *(void *)(v3 + 168);
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v10;
  char v11 = *(unsigned char *)(v3 + 176);
  *(unsigned char *)(a2 + 56) = v11;
  return sub_1C08A7374(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1C0B2AFCC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *a2;
  char v10 = *(unsigned char *)(a1 + 56);
  swift_beginAccess();
  uint64_t v18 = *(void *)(v9 + 128);
  uint64_t v19 = *(void *)(v9 + 120);
  uint64_t v16 = *(void *)(v9 + 144);
  uint64_t v17 = *(void *)(v9 + 136);
  uint64_t v14 = *(void *)(v9 + 160);
  uint64_t v15 = *(void *)(v9 + 152);
  uint64_t v13 = *(void *)(v9 + 168);
  *(void *)(v9 + 120) = v2;
  *(void *)(v9 + 128) = v3;
  *(void *)(v9 + 136) = v4;
  *(void *)(v9 + 144) = v5;
  *(void *)(v9 + 152) = v6;
  *(void *)(v9 + 160) = v7;
  *(void *)(v9 + 168) = v8;
  char v11 = *(unsigned char *)(v9 + 176);
  *(unsigned char *)(v9 + 176) = v10;
  sub_1C08A7374(v2, v3, v4, v5, v6, v7, v8, v10);
  return sub_1C05DD070(v19, v18, v17, v16, v15, v14, v13, v11);
}

uint64_t FormatProgressViewNode.kind.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[3];
  long long v15 = *((_OWORD *)a1 + 2);
  long long v16 = *(_OWORD *)(a1 + 1);
  uint64_t v4 = a1[6];
  char v5 = *((unsigned char *)a1 + 56);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v1 + 120);
  uint64_t v7 = *(void *)(v1 + 128);
  uint64_t v8 = *(void *)(v1 + 136);
  uint64_t v9 = *(void *)(v1 + 144);
  uint64_t v10 = *(void *)(v1 + 152);
  uint64_t v11 = *(void *)(v1 + 160);
  uint64_t v12 = *(void *)(v1 + 168);
  *(void *)(v1 + 120) = v2;
  *(_OWORD *)(v1 + 128) = v16;
  *(void *)(v1 + 144) = v3;
  *(_OWORD *)(v1 + 152) = v15;
  *(void *)(v1 + 168) = v4;
  char v13 = *(unsigned char *)(v1 + 176);
  *(unsigned char *)(v1 + 176) = v5;
  return sub_1C05DD070(v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t (*FormatProgressViewNode.kind.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_1C0B2B1B4(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 184);
  *(void *)(v3 + 184) = v2;
  sub_1BFE6FA30(v2);
  return sub_1BFF0056C(v4);
}

unint64_t FormatProgressViewNode.visibility.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 184);
  *(void *)(v1 + 184) = v2;
  return sub_1BFF0056C(v3);
}

uint64_t (*FormatProgressViewNode.visibility.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C0B2B2B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 192) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatProgressViewNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 192) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressViewNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

void FormatProgressViewNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 208);
  *(void *)a1 = *(void *)(v1 + 200);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatProgressViewNode.name.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 216);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatProgressViewNode.name.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 216) = a1;
  *(void *)(v2 + 224) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressViewNode.name.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatProgressViewNode.__allocating_init(identifier:size:resize:adjustments:content:zIndex:style:kind:visibility:selectors:accessibilityRole:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, long long *a9, uint64_t *a10, uint64_t a11, uint64_t *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21 = swift_allocObject();
  FormatProgressViewNode.init(identifier:size:resize:adjustments:content:zIndex:style:kind:visibility:selectors:accessibilityRole:name:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  return v21;
}

uint64_t FormatProgressViewNode.init(identifier:size:resize:adjustments:content:zIndex:style:kind:visibility:selectors:accessibilityRole:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, long long *a9, uint64_t *a10, uint64_t a11, uint64_t *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v17 = *a3;
  uint64_t v18 = *a4;
  uint64_t v19 = *a6;
  char v20 = *((unsigned char *)a6 + 8);
  long long v23 = *((_OWORD *)a6 + 1);
  uint64_t v21 = a6[4];
  __int16 v24 = *((_WORD *)a6 + 20);
  long long v29 = a9[1];
  long long v30 = *a9;
  long long v28 = a9[2];
  uint64_t v27 = *((void *)a9 + 6);
  char v31 = *((unsigned char *)a9 + 56);
  uint64_t v33 = *a10;
  uint64_t v35 = *a12;
  *(void *)(v14 + 112) = 0;
  char v34 = *((unsigned char *)a12 + 8);
  *(void *)(v14 + 224) = 0;
  *(void *)(v14 + 216) = 0;
  swift_beginAccess();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  swift_beginAccess();
  *(void *)(v14 + 32) = v17;
  *(void *)(v14 + 40) = v18;
  swift_beginAccess();
  *(void *)(v14 + 48) = a5;
  *(void *)(v14 + 56) = v19;
  *(unsigned char *)(v14 + 64) = v20;
  *(_OWORD *)(v14 + 72) = v23;
  *(void *)(v14 + 88) = v21;
  *(_WORD *)(v14 + 96) = v24;
  swift_beginAccess();
  *(void *)(v14 + 104) = a7;
  swift_beginAccess();
  *(void *)(v14 + 112) = a8;
  swift_release();
  swift_beginAccess();
  *(_OWORD *)(v14 + 120) = v30;
  *(_OWORD *)(v14 + 136) = v29;
  *(_OWORD *)(v14 + 152) = v28;
  *(void *)(v14 + 168) = v27;
  *(unsigned char *)(v14 + 176) = v31;
  swift_beginAccess();
  *(void *)(v14 + 184) = v33;
  swift_beginAccess();
  *(void *)(v14 + 192) = a11;
  *(void *)(v14 + 200) = v35;
  *(unsigned char *)(v14 + 208) = v34;
  swift_beginAccess();
  *(void *)(v14 + 216) = a13;
  *(void *)(v14 + 224) = a14;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t FormatProgressViewNode.deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  __int16 v4 = *(_WORD *)(v0 + 96);
  sub_1C05DD064(*(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  sub_1C00AB5E0(v1, v2, v3, v4);
  swift_release();
  sub_1C05DD070(*(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(unsigned char *)(v0 + 176));
  sub_1BFF0056C(*(void *)(v0 + 184));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatProgressViewNode.__deallocating_deinit()
{
  FormatProgressViewNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0B2B89C(uint64_t a1)
{
  uint64_t result = sub_1C0B2BA30(&qword_1EA1A3880);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatProgressViewNode()
{
  return self;
}

uint64_t sub_1C0B2B904(void *a1)
{
  a1[1] = sub_1C0B2BA30(&qword_1EB867150);
  a1[2] = sub_1C0B2BA30(&qword_1EB867148);
  uint64_t result = sub_1C0B2BA30(&qword_1EA1A3888);
  a1[3] = result;
  return result;
}

void *sub_1C0B2B990@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C08A5E60(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C0B2B9BC(void *a1)
{
  return FormatProgressViewNode.encode(to:)(a1);
}

uint64_t sub_1C0B2B9E0(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed22FormatProgressViewNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C0B2B9EC(uint64_t a1)
{
  uint64_t result = sub_1C0B2BA30(&qword_1EA1A3890);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0B2BA30(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatProgressViewNode();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0B2BA70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t *a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>)
{
  uint64_t v18 = *(void *)(a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  uint64_t v20 = *(void *)(a4 + 16);
  uint64_t v19 = *(void *)(a4 + 24);
  uint64_t v21 = *(void *)(v18 + 40);
  if (!v21)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = v19;
    uint64_t v30 = v20;
    uint64_t v22 = *(void *)(a4 + 40);
    if (v22) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v23 = 0;
    goto LABEL_6;
  }
  v37[0] = *(void *)(v18 + 32);
  v37[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v29 = v21;
  uint64_t v30 = v37[0];
  uint64_t v20 = *(void *)(a4 + 16);
  uint64_t v19 = *(void *)(a4 + 24);
  uint64_t v22 = *(void *)(a4 + 40);
  if (!v22) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v23 = *(void *)(v22 + 16);
  swift_retain();
LABEL_6:
  uint64_t v24 = swift_allocObject();
  uint64_t v38 = v23;
  sub_1C0B2BF64(a6, (uint64_t)v37);
  swift_beginAccess();
  uint64_t v25 = *(void *)(a4 + 104);
  swift_beginAccess();
  unint64_t v36 = *(void *)(a4 + 184);
  swift_bridgeObjectRetain();
  sub_1BFE6FA30(v36);
  sub_1C1517EFC();
  uint64_t v26 = v34;
  char v27 = *(unsigned char *)(a4 + 208);
  uint64_t v34 = *(void *)(a4 + 200);
  char v35 = v27;
  type metadata accessor for FormatProgressViewLayoutAttributes();
  swift_allocObject();
  *(void *)(v24 + 16) = FormatProgressViewLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:kind:zIndex:visibility:contextLayoutOptions:accessibilityRole:)(a1, a2, v30, v29, v20, v19, a5, &v38, a8, a9, a10, a11, (uint64_t)v37, v25, (uint64_t *)&v36, v26, &v34);
  *a7 = v24 | 0x9000000000000000;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0B2BCBC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C0B2BD0C@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 32);
  *a2 = v4;
  return sub_1BFF35EA4(v4);
}

uint64_t sub_1C0B2BD5C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0B2BDAC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 104);
  return result;
}

uint64_t sub_1C0B2BDF4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 104) = v2;
  return result;
}

unint64_t sub_1C0B2BE40@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 184);
  *a2 = v4;
  return sub_1BFE6FA30(v4);
}

uint64_t sub_1C0B2BE90@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 192);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatProgressViewNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatProgressViewNode);
}

uint64_t dispatch thunk of FormatProgressViewNode.__allocating_init(identifier:size:resize:adjustments:content:zIndex:style:kind:visibility:selectors:accessibilityRole:name:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1C0B2BF2C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0B2BF64(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t dispatch thunk of FeedCursorEmbeddable.feedJournal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1C0B2BFD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  void (*v10)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  void v18[2];

  if (a2)
  {
    uint64_t v10 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 24);
    swift_bridgeObjectRetain();
    v10(v18, a3, a4);
    uint64_t v11 = v18[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C13ECAE0(a1, a2, v11, a5);
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 24))(v18, a3, a4);
    uint64_t v12 = v18[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v13 = *(void *)(v12 + 16);
    if (!v13)
    {
      uint64_t result = swift_bridgeObjectRelease();
      *a5 = 0;
      a5[1] = 0;
      a5[2] = 0;
      return result;
    }
    uint64_t v14 = (void *)(v12 + 24 * v13);
    long long v15 = v14[2];
    long long v16 = v14[3];
    *a5 = v14[1];
    a5[1] = v15;
    a5[2] = v16;
    swift_bridgeObjectRetain();
    sub_1BFE60260(v15);
  }
  return swift_bridgeObjectRelease();
}

BOOL static FormatJSONOptions.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatJSONOptions.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t sub_1C0B2C144(uint64_t a1)
{
  unint64_t v2 = sub_1C0B2C820();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0B2C180(uint64_t a1)
{
  unint64_t v2 = sub_1C0B2C820();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0B2C1BC()
{
  unint64_t v1 = 0x756F53776F6C6C61;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x726F74696465;
  }
}

uint64_t sub_1C0B2C224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0B2D4B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0B2C24C(uint64_t a1)
{
  unint64_t v2 = sub_1C0B2C8C8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0B2C288(uint64_t a1)
{
  unint64_t v2 = sub_1C0B2C8C8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0B2C2C4(uint64_t a1)
{
  unint64_t v2 = sub_1C0B2C874();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0B2C300(uint64_t a1)
{
  unint64_t v2 = sub_1C0B2C874();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0B2C33C(uint64_t a1)
{
  unint64_t v2 = sub_1C0B2C7CC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0B2C378(uint64_t a1)
{
  unint64_t v2 = sub_1C0B2C7CC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatJSONOptions.encode(to:)(void *a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C0B2CF98(0, &qword_1EA1A3898, (uint64_t (*)(void))sub_1C0B2C7CC, (uint64_t)&type metadata for FormatJSONOptions.ErrorOnUnknownKeysCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  MEMORY[0x1F4188790](v4);
  char v27 = (char *)&v22 - v5;
  sub_1C0B2CF98(0, &qword_1EA1A38A8, (uint64_t (*)(void))sub_1C0B2C820, (uint64_t)&type metadata for FormatJSONOptions.AllowSourceMapsCodingKeys, v3);
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v24 = (char *)&v22 - v7;
  sub_1C0B2CF98(0, &qword_1EA1A38B8, (uint64_t (*)(void))sub_1C0B2C874, (uint64_t)&type metadata for FormatJSONOptions.EditorCodingKeys, v3);
  uint64_t v22 = *(void *)(v8 - 8);
  uint64_t v23 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v22 - v9;
  sub_1C0B2CF98(0, &qword_1EA1A38C8, (uint64_t (*)(void))sub_1C0B2C8C8, (uint64_t)&type metadata for FormatJSONOptions.CodingKeys, v3);
  uint64_t v30 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v22 - v13;
  int v15 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B2C8C8();
  sub_1C1520F0C();
  if (v15)
  {
    if (v15 == 1)
    {
      char v32 = 1;
      sub_1C0B2C820();
      long long v16 = v24;
      uint64_t v17 = v30;
      sub_1C152073C();
      uint64_t v19 = v25;
      uint64_t v18 = v26;
    }
    else
    {
      char v33 = 2;
      sub_1C0B2C7CC();
      long long v16 = v27;
      uint64_t v17 = v30;
      sub_1C152073C();
      uint64_t v19 = v28;
      uint64_t v18 = v29;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v17);
  }
  else
  {
    char v31 = 0;
    sub_1C0B2C874();
    uint64_t v20 = v30;
    sub_1C152073C();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  }
}

unint64_t sub_1C0B2C7CC()
{
  unint64_t result = qword_1EA1A38A0;
  if (!qword_1EA1A38A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A38A0);
  }
  return result;
}

unint64_t sub_1C0B2C820()
{
  unint64_t result = qword_1EA1A38B0;
  if (!qword_1EA1A38B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A38B0);
  }
  return result;
}

unint64_t sub_1C0B2C874()
{
  unint64_t result = qword_1EA1A38C0;
  if (!qword_1EA1A38C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A38C0);
  }
  return result;
}

unint64_t sub_1C0B2C8C8()
{
  unint64_t result = qword_1EA1A38D0;
  if (!qword_1EA1A38D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A38D0);
  }
  return result;
}

uint64_t FormatJSONOptions.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t FormatJSONOptions.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C0B2CF98(0, &qword_1EA1A38D8, (uint64_t (*)(void))sub_1C0B2C7CC, (uint64_t)&type metadata for FormatJSONOptions.ErrorOnUnknownKeysCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v42 = v4;
  uint64_t v39 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v47 = (char *)&v37 - v5;
  sub_1C0B2CF98(0, &qword_1EA1A38E0, (uint64_t (*)(void))sub_1C0B2C820, (uint64_t)&type metadata for FormatJSONOptions.AllowSourceMapsCodingKeys, v3);
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v46 = (char *)&v37 - v7;
  sub_1C0B2CF98(0, &qword_1EA1A38E8, (uint64_t (*)(void))sub_1C0B2C874, (uint64_t)&type metadata for FormatJSONOptions.EditorCodingKeys, v3);
  uint64_t v9 = v8;
  uint64_t v45 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v37 - v10;
  sub_1C0B2CF98(0, &qword_1EA1A38F0, (uint64_t (*)(void))sub_1C0B2C8C8, (uint64_t)&type metadata for FormatJSONOptions.CodingKeys, v3);
  uint64_t v13 = v12;
  uint64_t v44 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  int v15 = (char *)&v37 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B2C8C8();
  long long v16 = v48;
  sub_1C1520EBC();
  if (v16) {
    goto LABEL_7;
  }
  uint64_t v37 = v9;
  uint64_t v38 = v13;
  uint64_t v17 = v45;
  uint64_t v18 = v46;
  uint64_t v19 = v47;
  long long v48 = a1;
  uint64_t v20 = v15;
  uint64_t v21 = sub_1C152070C();
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v27 = sub_1C15201EC();
    swift_allocError();
    uint64_t v29 = v28;
    sub_1C01AC8BC();
    *uint64_t v29 = &type metadata for FormatJSONOptions;
    uint64_t v30 = v38;
    sub_1C15205DC();
    sub_1C15201AC();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x1E4FBBA70], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v30);
    a1 = v48;
LABEL_7:
    uint64_t v31 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v31);
  }
  int v22 = *(unsigned __int8 *)(v21 + 32);
  if (*(unsigned char *)(v21 + 32))
  {
    if (v22 == 1)
    {
      char v50 = 1;
      sub_1C0B2C820();
      uint64_t v23 = v18;
      uint64_t v24 = v38;
      sub_1C15205CC();
      uint64_t v26 = v43;
      uint64_t v25 = v44;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v23, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v24);
    }
    else
    {
      char v51 = 2;
      sub_1C0B2C7CC();
      uint64_t v34 = v19;
      uint64_t v35 = v38;
      sub_1C15205CC();
      uint64_t v26 = v43;
      uint64_t v36 = v44;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v35);
    }
  }
  else
  {
    uint64_t v47 = (char *)v21;
    char v49 = 0;
    sub_1C0B2C874();
    uint64_t v33 = v38;
    sub_1C15205CC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v37);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v33);
    uint64_t v26 = v43;
  }
  *uint64_t v26 = v22;
  uint64_t v31 = (uint64_t)v48;
  return __swift_destroy_boxed_opaque_existential_1(v31);
}

uint64_t sub_1C0B2CF68@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatJSONOptions.init(from:)(a1, a2);
}

uint64_t sub_1C0B2CF80(void *a1)
{
  return FormatJSONOptions.encode(to:)(a1);
}

void sub_1C0B2CF98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C0B2D004()
{
  unint64_t result = qword_1EA1A38F8;
  if (!qword_1EA1A38F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A38F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatJSONOptions()
{
  return &type metadata for FormatJSONOptions;
}

unsigned char *_s8NewsFeed17FormatJSONOptionsOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0B2D138);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatJSONOptions.CodingKeys()
{
  return &type metadata for FormatJSONOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for FormatJSONOptions.EditorCodingKeys()
{
  return &type metadata for FormatJSONOptions.EditorCodingKeys;
}

ValueMetadata *type metadata accessor for FormatJSONOptions.AllowSourceMapsCodingKeys()
{
  return &type metadata for FormatJSONOptions.AllowSourceMapsCodingKeys;
}

ValueMetadata *type metadata accessor for FormatJSONOptions.ErrorOnUnknownKeysCodingKeys()
{
  return &type metadata for FormatJSONOptions.ErrorOnUnknownKeysCodingKeys;
}

unint64_t sub_1C0B2D1A4()
{
  unint64_t result = qword_1EA1A3900;
  if (!qword_1EA1A3900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3900);
  }
  return result;
}

unint64_t sub_1C0B2D1FC()
{
  unint64_t result = qword_1EA1A3908;
  if (!qword_1EA1A3908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3908);
  }
  return result;
}

unint64_t sub_1C0B2D254()
{
  unint64_t result = qword_1EA1A3910;
  if (!qword_1EA1A3910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3910);
  }
  return result;
}

unint64_t sub_1C0B2D2AC()
{
  unint64_t result = qword_1EA1A3918;
  if (!qword_1EA1A3918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3918);
  }
  return result;
}

unint64_t sub_1C0B2D304()
{
  unint64_t result = qword_1EA1A3920;
  if (!qword_1EA1A3920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3920);
  }
  return result;
}

unint64_t sub_1C0B2D35C()
{
  unint64_t result = qword_1EA1A3928;
  if (!qword_1EA1A3928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3928);
  }
  return result;
}

unint64_t sub_1C0B2D3B4()
{
  unint64_t result = qword_1EA1A3930;
  if (!qword_1EA1A3930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3930);
  }
  return result;
}

unint64_t sub_1C0B2D40C()
{
  unint64_t result = qword_1EA1A3938;
  if (!qword_1EA1A3938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3938);
  }
  return result;
}

unint64_t sub_1C0B2D464()
{
  unint64_t result = qword_1EA1A3940;
  if (!qword_1EA1A3940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3940);
  }
  return result;
}

uint64_t sub_1C0B2D4B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F74696465 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756F53776F6C6C61 && a2 == 0xEF7370614D656372 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C161C650)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C0B2D644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = *a6;
  uint64_t v12 = a6[1];
  uint64_t v13 = a6[2];
  uint64_t v15 = a6[5];
  uint64_t v14 = a6[6];
  long long v24 = *(_OWORD *)(a6 + 7);
  long long v25 = *(_OWORD *)(a6 + 3);
  uint64_t v16 = a6[9];
  char v17 = *((unsigned char *)a6 + 80);
  uint64_t v18 = *(void **)(v10 + 64);
  uint64_t v19 = (void *)sub_1C1515E9C();
  id v20 = objc_msgSend(v18, sel_assetHandleForURL_lifetimeHint_, v19, 0);

  *((void *)&v33 + 1) = sub_1BFF6C3A8();
  *(void *)&long long v34 = sub_1BFE6A330((unint64_t *)&qword_1EB890150, (void (*)(uint64_t))sub_1BFF6C3A8);
  *(void *)&long long v32 = v20;
  uint64_t v21 = swift_allocObject();
  sub_1BFC773DC(&v32, v21 + 16);
  memset(v41, 0, sizeof(v41));
  LOBYTE(v42) = 1;
  *((void *)&v42 + 1) = v11;
  *(void *)&long long v43 = v12;
  *((void *)&v43 + 1) = v13;
  long long v44 = v25;
  *(void *)&long long v45 = v15;
  *((void *)&v45 + 1) = v14;
  long long v46 = v24;
  *(void *)&long long v47 = v16;
  BYTE8(v47) = v17;
  *(void *)&long long v48 = sub_1C094FC44;
  *((void *)&v48 + 1) = v21;
  long long v38 = v24;
  long long v39 = v47;
  long long v40 = v48;
  long long v34 = v42;
  long long v35 = v43;
  long long v36 = v25;
  long long v37 = v45;
  long long v32 = 0u;
  long long v33 = 0u;
  swift_bridgeObjectRetain();
  id v22 = v20;
  sub_1BFE6AABC(a1, a2, (uint64_t)&v32, a4, a5, a7, a8, a9, a10);

  return sub_1C0494FF0((uint64_t)v41);
}

uint64_t FormatImageRenderer.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  swift_unknownObjectRelease();
  return v0;
}

uint64_t FormatImageRenderer.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatImageRenderer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatImageRenderer);
}

uint64_t sub_1C0B2D8C0(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3)
  {
    id v9 = objc_msgSend(a1, sel_setContentMode_, qword_1C15905A0[*(char *)(a3 + 88)]);
    if ((~*(void *)(a3 + 224) & 0xF000000000000007) != 0)
    {
      *(void *)&long long v45 = *(void *)(a3 + 224);
      Class v10 = FormatColor.color.getter((uint64_t)v9);
    }
    else
    {
      Class v10 = 0;
    }
    sub_1C151F92C();

    uint64_t v11 = *(void *)(a3 + 96);
    uint64_t v12 = *(void *)(a3 + 104);
    char v13 = *(unsigned char *)(a3 + 112);
    sub_1BFEF6828(v11, v12, v13);
  }
  else
  {
    objc_msgSend(a1, sel_setContentMode_, 4);
    sub_1C151F92C();
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    char v13 = -2;
  }
  id v14 = objc_msgSend(a1, sel_layer);
  objc_msgSend(a1, sel_bounds);
  *(void *)&long long v45 = v11;
  *((void *)&v45 + 1) = v12;
  LOBYTE(v46) = v13;
  sub_1BFE6A0C8(v14, (uint64_t)&v45, v15, v16, v17, v18);

  uint64_t v19 = *(void *)(a2 + 136);
  if (a3)
  {
    uint64_t v20 = *(void *)(a3 + 80);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v20 = 0;
  }
  id v21 = objc_msgSend(a1, sel_layer);
  *(void *)&long long v45 = v11;
  *((void *)&v45 + 1) = v12;
  LOBYTE(v46) = v13;
  sub_1BFE69BFC(v19, v21, a5, v20, (uint64_t *)&v45);

  swift_bridgeObjectRelease();
  sub_1BFEF68AC(v11, v12, v13);
  if (a3)
  {
    uint64_t v22 = *(void *)(a3 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v22 = 0;
  }
  *(void *)&long long v45 = v22;
  sub_1BFE69FD4(v19, a1, (uint64_t *)&v45, a4);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a2 + 96);
  if (!v24) {
    return sub_1C151F95C();
  }
  unint64_t v25 = *(void *)(v24 + 72);
  if ((~v25 & 0xF000000000000007) == 0) {
    return sub_1C151F95C();
  }
  switch(v25 >> 61)
  {
    case 1uLL:
      uint64_t v28 = *(void *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v29 = *(void *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      uint64_t v30 = *(void *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x48);
      *(void *)&long long v45 = *(void *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      *((void *)&v45 + 1) = v28;
      long long v31 = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      long long v46 = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      long long v47 = v31;
      *(void *)&long long v48 = v29;
      *((void *)&v48 + 1) = v30;
      sub_1BFEF683C(v25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFDB3920(v29);
      sub_1C14B83D8(a1, &v45, a4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFDB3960(v29);
      return sub_1BFEF68C0(v25);
    case 2uLL:
      long long v32 = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
      long long v49 = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
      long long v50 = v32;
      long long v33 = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
      long long v51 = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
      long long v52 = v33;
      long long v34 = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      long long v45 = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      long long v46 = v34;
      long long v35 = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      long long v47 = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      long long v48 = v35;
      long long v36 = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
      v44[4] = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
      v44[5] = v36;
      long long v37 = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
      v44[6] = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
      v44[7] = v37;
      long long v38 = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      v44[0] = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v44[1] = v38;
      long long v39 = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      v44[2] = *(_OWORD *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      v44[3] = v39;
      sub_1BFEF683C(v25);
      sub_1C0445004((uint64_t)&v45);
      sub_1C0C63168(a1, v44, a4);
      sub_1C0B2DECC((uint64_t)&v45);
      return sub_1BFEF68C0(v25);
    case 3uLL:
      uint64_t v40 = *(void *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v41 = self;
      sub_1BFEF683C(v25);
      sub_1BFF7B774(v40);
      id v42 = objc_msgSend(v41, sel_clearColor);
      sub_1C151F95C();

      sub_1BFF7C0EC(v40);
      goto LABEL_23;
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      return result;
    default:
      *(void *)&long long v45 = *(void *)(v25 + 16);
      sub_1BFEF683C(v25);
      uint64_t v26 = swift_retain();
      Class v27 = FormatColor.color.getter(v26);
      sub_1C151F95C();
      swift_release();

LABEL_23:
      uint64_t result = sub_1BFEF68C0(v25);
      break;
  }
  return result;
}

uint64_t sub_1C0B2DCCC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0B2DD04()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0B2DD3C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C0B2DE54()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0B2DE94()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1C0B2DECC(uint64_t a1)
{
  return a1;
}

void *FormatTag.__allocating_init(identifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  swift_beginAccess();
  v8[4] = a3;
  swift_beginAccess();
  v8[5] = a4;
  return v8;
}

uint64_t FormatTag.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatTag.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatTag.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTag.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatTag.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatTag.properties.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatTag.properties.modify())()
{
  return j__swift_endAccess;
}

void *FormatTag.init(identifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a2;
  swift_beginAccess();
  v4[4] = a3;
  swift_beginAccess();
  v4[5] = a4;
  return v4;
}

uint64_t sub_1C0B2E1E0()
{
  uint64_t v1 = 0x726F7463656C6573;
  if (*v0 != 1) {
    uint64_t v1 = 0x69747265706F7270;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1C0B2E244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0B2F10C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0B2E26C(uint64_t a1)
{
  unint64_t v2 = sub_1C0B2E62C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0B2E2A8(uint64_t a1)
{
  unint64_t v2 = sub_1C0B2E62C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatTag.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatTag.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatTag.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0B2EC90(0, &qword_1EB86BA00, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B2E62C();
  sub_1C1520F0C();
  char v16 = 0;
  sub_1C15207CC();
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v11 = *(void *)(v3 + 32);
    if (*(void *)(v11 + 16))
    {
      char v17 = 1;
      swift_bridgeObjectRetain_n();
      uint64_t v12 = sub_1BFE71F8C(v11);
      swift_bridgeObjectRelease();
      CGFloat v15 = v12;
      swift_retain();
      sub_1BFD8BB48((uint64_t *)&v15);
      swift_release();
      v14[1] = v15;
      sub_1C0B2EC1C();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
      sub_1BFD8BA00();
      sub_1C1520BAC();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    uint64_t v13 = *(void *)(v3 + 40);
    if (*(void *)(v13 + 16))
    {
      char v17 = 2;
      CGFloat v15 = (void *)v13;
      sub_1C0B2EC1C();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
      sub_1C00FCE94();
      sub_1C1520BAC();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0B2E62C()
{
  unint64_t result = qword_1EB860BA8;
  if (!qword_1EB860BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860BA8);
  }
  return result;
}

uint64_t FormatTag.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatTag.init(from:)(a1);
  return v2;
}

void *FormatTag.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v1;
  long long v37 = v2;
  uint64_t v38 = v5;
  sub_1C00FC8DC();
  uint64_t v35 = v6;
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v34 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE89214();
  uint64_t v9 = v8;
  uint64_t v33 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B2EC90(0, &qword_1EB860DC0, MEMORY[0x1E4FBBDC0]);
  uint64_t v13 = v12;
  uint64_t v36 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  CGFloat v15 = (char *)&v31 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B2E62C();
  char v16 = v37;
  sub_1C1520EBC();
  if (v16)
  {
    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v1;
  }
  else
  {
    char v17 = v11;
    uint64_t v18 = v36;
    long long v37 = a1;
    char v43 = 0;
    v1[2] = sub_1C152069C();
    v1[3] = v19;
    char v42 = 1;
    char v20 = sub_1C152071C();
    uint64_t v31 = v13;
    if (v20)
    {
      char v39 = 1;
      sub_1C0B2ECF4(&qword_1EB87C6E0, 255, (void (*)(uint64_t))sub_1BFE89214);
      sub_1C15206EC();
      id v21 = v15;
      uint64_t v22 = sub_1C1517E5C();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v9);
    }
    else
    {
      id v21 = v15;
      uint64_t v22 = MEMORY[0x1E4FBC870];
    }
    uint64_t v23 = v3;
    v3[4] = v22;
    char v41 = 2;
    uint64_t v24 = v21;
    if (sub_1C152071C())
    {
      char v40 = 2;
      sub_1C0B2ECF4(&qword_1EB85F2C8, 255, (void (*)(uint64_t))sub_1C00FC8DC);
      uint64_t v26 = v34;
      uint64_t v25 = v35;
      sub_1C15206EC();
      Class v27 = v24;
      uint64_t v29 = sub_1C1517E5C();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v25);
      uint64_t v30 = (uint64_t)v37;
    }
    else
    {
      uint64_t v29 = MEMORY[0x1E4FBC860];
      uint64_t v30 = (uint64_t)v37;
      Class v27 = v21;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v31);
    v23[5] = v29;
    __swift_destroy_boxed_opaque_existential_1(v30);
  }
  return v23;
}

void *sub_1C0B2EB94@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  unint64_t result = FormatTag.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0B2EBEC(void *a1)
{
  return FormatTag.encode(to:)(a1);
}

uint64_t sub_1C0B2EC10(void *a1, void *a2)
{
  return static FormatTag.== infix(_:_:)(*a1, *a2);
}

unint64_t sub_1C0B2EC1C()
{
  unint64_t result = qword_1EB86B9F8;
  if (!qword_1EB86B9F8)
  {
    sub_1C0B2EC90(255, &qword_1EB86BA00, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B9F8);
  }
  return result;
}

void sub_1C0B2EC90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0B2E62C();
    unint64_t v7 = a3(a1, &type metadata for FormatTag.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0B2ECF4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0B2ED3C(void *a1, uint64_t a2)
{
  a1[1] = sub_1C0B2ECF4((unint64_t *)&unk_1EB860BC8, a2, (void (*)(uint64_t))type metadata accessor for FormatTag);
  a1[2] = sub_1C0B2ECF4(&qword_1EB86AD98, v3, (void (*)(uint64_t))type metadata accessor for FormatTag);
  uint64_t result = sub_1C0B2ECF4(&qword_1EA1A3948, v4, (void (*)(uint64_t))type metadata accessor for FormatTag);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatTag()
{
  return self;
}

uint64_t sub_1C0B2EE0C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0B2EE5C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatTag(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatTag);
}

uint64_t dispatch thunk of FormatTag.__allocating_init(identifier:selectors:properties:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of FormatTag.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unsigned char *storeEnumTagSinglePayload for FormatTag.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0B2EFCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTag.CodingKeys()
{
  return &type metadata for FormatTag.CodingKeys;
}

unint64_t sub_1C0B2F008()
{
  unint64_t result = qword_1EA1A3950;
  if (!qword_1EA1A3950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3950);
  }
  return result;
}

unint64_t sub_1C0B2F060()
{
  unint64_t result = qword_1EB860BB8;
  if (!qword_1EB860BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860BB8);
  }
  return result;
}

unint64_t sub_1C0B2F0B8()
{
  unint64_t result = qword_1EB860BB0;
  if (!qword_1EB860BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860BB0);
  }
  return result;
}

uint64_t sub_1C0B2F10C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_1C0B2F280(uint64_t a1, unint64_t *a2)
{
  unint64_t v2 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
  {
    switch(v2 >> 61)
    {
      case 1uLL:
        uint64_t v34 = v2 & 0x1FFFFFFFFFFFFFFFLL;
        uint64_t v35 = *(void *)(v34 + 16);
        uint64_t v104 = *(void *)(v34 + 24);
        uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
        sub_1BFF9E460(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v36);
        sub_1C0181BEC(0);
        uint64_t v38 = *(void *)(*(void *)(v37 - 8) + 72);
        unint64_t v39 = (*(unsigned __int8 *)(*(void *)(v37 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v37 - 8) + 80);
        uint64_t v106 = 2 * v38;
        uint64_t v40 = swift_allocObject();
        *(_OWORD *)(v40 + 16) = xmmword_1C152C7F0;
        unint64_t v112 = v40 + v39;
        swift_retain();
        swift_retain();
        sub_1C0433600(1701869908, 0xE400000000000000, 29263, 0xE200000000000000, (void *)(v40 + v39));
        uint64_t v41 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v102 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
        v102(v40 + v39, 0, 1, v41);
        char v42 = (void *)(v40 + v39 + v38);
        sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v36);
        uint64_t v43 = swift_initStackObject();
        *(_OWORD *)(v43 + 16) = xmmword_1C1529AE0;
        *(void *)&long long v119 = v35;
        swift_retain();
        uint64_t v44 = sub_1C0B2F280(a1, &v119);
        swift_release();
        *(void *)(v43 + 56) = &type metadata for FormatInspection;
        *(void *)(v43 + 64) = &off_1F1C29D30;
        *(void *)(v43 + 32) = v44;
        uint64_t v45 = sub_1C0233FC8(v43);
        swift_setDeallocating();
        sub_1C01004D8();
        swift_arrayDestroy();
        long long v46 = sub_1C131B79C(v45);
        swift_bridgeObjectRelease();
        sub_1C042F458(0x707845207466654CLL, 0xEF6E6F6973736572, (uint64_t)v46, 0, 0, v42);
        v102((unint64_t)v42, 0, 1, v41);
        uint64_t v47 = swift_initStackObject();
        *(_OWORD *)(v47 + 16) = xmmword_1C1529AE0;
        *(void *)&long long v119 = v104;
        swift_retain();
        uint64_t v48 = sub_1C0B2F280(a1, &v119);
        swift_release();
        *(void *)(v47 + 56) = &type metadata for FormatInspection;
        *(void *)(v47 + 64) = &off_1F1C29D30;
        *(void *)(v47 + 32) = v48;
        uint64_t v49 = sub_1C0233FC8(v47);
        swift_setDeallocating();
        swift_arrayDestroy();
        long long v50 = sub_1C131B79C(v49);
        swift_bridgeObjectRelease();
        sub_1C042F458(0xD000000000000010, 0x80000001C161C6F0, (uint64_t)v50, 0, 0, (void *)(v112 + v106));
        v102(v112 + v106, 0, 1, v41);
        sub_1C09BCFA4(0x6973736572707845, 0xEA00000000006E6FLL, 0, 0, v40, &v119);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(inited + 64) = &off_1F1BDEC90;
        uint64_t v51 = swift_allocObject();
        *(void *)(inited + 32) = v51;
        *(void *)(v51 + 48) = v121;
        long long v52 = v120;
        *(_OWORD *)(v51 + 16) = v119;
        *(_OWORD *)(v51 + 32) = v52;
        uint64_t v12 = sub_1C131B79C(inited);
        swift_setDeallocating();
        sub_1C01004A4(0);
        swift_arrayDestroy();
        swift_release();
        swift_release();
        break;
      case 2uLL:
        uint64_t v53 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v55 = swift_initStackObject();
        *(_OWORD *)(v55 + 16) = xmmword_1C1529AE0;
        sub_1BFF9E460(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v54);
        sub_1C0181BEC(0);
        uint64_t v57 = *(void *)(*(void *)(v56 - 8) + 72);
        unint64_t v58 = (*(unsigned __int8 *)(*(void *)(v56 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v56 - 8) + 80);
        uint64_t v59 = swift_allocObject();
        *(_OWORD *)(v59 + 16) = xmmword_1C1527210;
        swift_retain();
        sub_1C0433600(1701869908, 0xE400000000000000, 7630670, 0xE300000000000000, (void *)(v59 + v58));
        uint64_t v60 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v111 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56);
        v111(v59 + v58, 0, 1, v60);
        uint64_t v61 = (void *)(v59 + v58 + v57);
        sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v54);
        uint64_t v62 = swift_initStackObject();
        *(_OWORD *)(v62 + 16) = xmmword_1C1529AE0;
        *(void *)&long long v119 = v53;
        swift_retain();
        uint64_t v63 = sub_1C0B2F280(a1, &v119);
        swift_release();
        *(void *)(v62 + 56) = &type metadata for FormatInspection;
        *(void *)(v62 + 64) = &off_1F1C29D30;
        *(void *)(v62 + 32) = v63;
        uint64_t v64 = sub_1C0233FC8(v62);
        swift_setDeallocating();
        sub_1C01004D8();
        swift_arrayDestroy();
        uint64_t v65 = sub_1C131B79C(v64);
        swift_bridgeObjectRelease();
        sub_1C042F458(0x6973736572707845, 0xEA00000000006E6FLL, (uint64_t)v65, 0, 0, v61);
        v111((unint64_t)v61, 0, 1, v60);
        sub_1C09BCFA4(0x6973736572707845, 0xEA00000000006E6FLL, 0, 0, v59, &v119);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(v55 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v55 + 64) = &off_1F1BDEC90;
        uint64_t v66 = swift_allocObject();
        *(void *)(v55 + 32) = v66;
        *(void *)(v66 + 48) = v121;
        long long v67 = v120;
        *(_OWORD *)(v66 + 16) = v119;
        *(_OWORD *)(v66 + 32) = v67;
        uint64_t v12 = sub_1C131B79C(v55);
        swift_setDeallocating();
        sub_1C01004A4(0);
        swift_arrayDestroy();
        swift_release();
        break;
      case 3uLL:
        uint64_t v68 = v2 & 0x1FFFFFFFFFFFFFFFLL;
        uint64_t v69 = *(char *)(v68 + 16);
        char v113 = *(unsigned char *)(v68 + 17);
        uint64_t v117 = *(void *)(v68 + 24);
        uint64_t v70 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v4 = swift_initStackObject();
        *(_OWORD *)(v4 + 16) = xmmword_1C1529AE0;
        sub_1BFF9E460(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v70);
        sub_1C0181BEC(0);
        uint64_t v72 = *(void *)(*(void *)(v71 - 8) + 72);
        unint64_t v73 = (*(unsigned __int8 *)(*(void *)(v71 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v71 - 8) + 80);
        uint64_t v74 = swift_allocObject();
        *(_OWORD *)(v74 + 16) = xmmword_1C152A660;
        unint64_t v75 = v74 + v73;
        sub_1C0433600(1701869908, 0xE400000000000000, 0x6E656E6F706D6F43, 0xE900000000000074, (void *)(v74 + v73));
        uint64_t v76 = type metadata accessor for FormatInspectionItem(0);
        long long v77 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56);
        v77(v75, 0, 1, v76);
        sub_1C0433600(0x6E656E6F706D6F43, 0xE900000000000074, qword_1C1590920[v69], qword_1C1590958[v69], (void *)(v75 + v72));
        v77(v75 + v72, 0, 1, v76);
        LOBYTE(v119) = v113;
        unint64_t v78 = FormatOperator.rawValue.getter();
        sub_1C0433600(0x726F74617265704FLL, 0xE800000000000000, v78, v79, (void *)(v75 + 2 * v72));
        v77(v75 + 2 * v72, 0, 1, v76);
        sub_1C042F1BC(0x65756C6156, 0xE500000000000000, v117, 0, (void *)(v75 + 3 * v72));
        v77(v75 + 3 * v72, 0, 1, v76);
        sub_1C09BCFA4(0x6973736572707845, 0xEA00000000006E6FLL, 0, 0, v74, &v119);
        swift_setDeallocating();
        swift_arrayDestroy();
        goto LABEL_3;
      case 4uLL:
        uint64_t v80 = v2 & 0x1FFFFFFFFFFFFFFFLL;
        uint64_t v81 = *(void *)(v80 + 16);
        uint64_t v82 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        uint64_t v107 = *(void *)(v80 + 24);
        uint64_t v109 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v83 = swift_initStackObject();
        *(_OWORD *)(v83 + 16) = xmmword_1C1529AE0;
        sub_1BFF9E460(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v82);
        sub_1C0181BEC(0);
        uint64_t v85 = *(void *)(*(void *)(v84 - 8) + 72);
        unint64_t v86 = (*(unsigned __int8 *)(*(void *)(v84 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v84 - 8) + 80);
        uint64_t v87 = 2 * v85;
        uint64_t v88 = swift_allocObject();
        *(_OWORD *)(v88 + 16) = xmmword_1C152C7F0;
        unint64_t v89 = v88 + v86;
        swift_retain();
        swift_retain();
        sub_1C0433600(1701869908, 0xE400000000000000, 0x726F6C6F43, 0xE500000000000000, (void *)(v88 + v86));
        uint64_t v90 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v91 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56);
        v91(v89, 0, 1, v90);
        unint64_t v92 = v89 + v85;
        long long v93 = (void *)(v89 + v85 + *(int *)(v90 + 24));
        *long long v93 = v81;
        uint64_t v94 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v93, 0, 1, v94);
        *(_OWORD *)unint64_t v92 = xmmword_1C1549090;
        *(void *)(v92 + 16) = 0;
        *(void *)(v92 + 24) = 0;
        unint64_t v95 = v92 + *(int *)(v90 + 28);
        *(void *)unint64_t v95 = 0;
        *(void *)(v95 + 8) = 0;
        *(unsigned char *)(v95 + 16) = -1;
        v91(v92, 0, 1, v90);
        sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v109);
        uint64_t v96 = swift_initStackObject();
        *(_OWORD *)(v96 + 16) = xmmword_1C1529AE0;
        *(void *)&long long v119 = v107;
        swift_retain();
        swift_retain();
        uint64_t v97 = sub_1C0B2F280(a1, &v119);
        swift_release();
        *(void *)(v96 + 56) = &type metadata for FormatInspection;
        *(void *)(v96 + 64) = &off_1F1C29D30;
        *(void *)(v96 + 32) = v97;
        uint64_t v98 = sub_1C0233FC8(v96);
        swift_setDeallocating();
        sub_1C01004D8();
        swift_arrayDestroy();
        uint64_t v99 = sub_1C131B79C(v98);
        swift_bridgeObjectRelease();
        sub_1C042F458(0x6973736572707845, 0xEA00000000006E6FLL, (uint64_t)v99, 0, 0, (void *)(v89 + v87));
        v91(v89 + v87, 0, 1, v90);
        sub_1C09BCFA4(0x6973736572707845, 0xEA00000000006E6FLL, 0, 0, v88, &v119);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(v83 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v83 + 64) = &off_1F1BDEC90;
        uint64_t v100 = swift_allocObject();
        *(void *)(v83 + 32) = v100;
        *(void *)(v100 + 48) = v121;
        long long v101 = v120;
        *(_OWORD *)(v100 + 16) = v119;
        *(_OWORD *)(v100 + 32) = v101;
        uint64_t v12 = sub_1C131B79C(v83);
        swift_setDeallocating();
        sub_1C01004A4(0);
        swift_arrayDestroy();
        swift_release();
        swift_release();
        break;
      default:
        uint64_t v14 = *(void *)(v2 + 16);
        uint64_t v105 = *(void *)(v2 + 24);
        CGFloat v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v110 = swift_initStackObject();
        *(_OWORD *)(v110 + 16) = xmmword_1C1529AE0;
        sub_1BFF9E460(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v15);
        sub_1C0181BEC(0);
        uint64_t v17 = *(void *)(*(void *)(v16 - 8) + 72);
        unint64_t v18 = (*(unsigned __int8 *)(*(void *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v16 - 8) + 80);
        uint64_t v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = xmmword_1C152C7F0;
        unint64_t v103 = v19 + v18;
        swift_retain();
        swift_retain();
        sub_1C0433600(1701869908, 0xE400000000000000, 6581825, 0xE300000000000000, (void *)(v19 + v18));
        uint64_t v20 = type metadata accessor for FormatInspectionItem(0);
        id v21 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
        v21(v19 + v18, 0, 1, v20);
        uint64_t v22 = (void *)(v19 + v18 + v17);
        sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v15);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = xmmword_1C1529AE0;
        *(void *)&long long v119 = v14;
        swift_retain();
        uint64_t v24 = sub_1C0B2F280(a1, &v119);
        swift_release();
        *(void *)(v23 + 56) = &type metadata for FormatInspection;
        *(void *)(v23 + 64) = &off_1F1C29D30;
        *(void *)(v23 + 32) = v24;
        uint64_t v25 = sub_1C0233FC8(v23);
        swift_setDeallocating();
        sub_1C01004D8();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v26 = sub_1C131B79C(v25);
        swift_bridgeObjectRelease();
        sub_1C042F458(0x707845207466654CLL, 0xEF6E6F6973736572, (uint64_t)v26, 0, 0, v22);
        v21((unint64_t)v22, 0, 1, v20);
        Class v27 = (void *)(v103 + 2 * v17);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_1C1529AE0;
        *(void *)&long long v119 = v105;
        swift_retain();
        uint64_t v29 = sub_1C0B2F280(a1, &v119);
        swift_release();
        *(void *)(v28 + 56) = &type metadata for FormatInspection;
        *(void *)(v28 + 64) = &off_1F1C29D30;
        *(void *)(v28 + 32) = v29;
        uint64_t v30 = sub_1C0233FC8(v28);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v31 = sub_1C131B79C(v30);
        swift_bridgeObjectRelease();
        sub_1C042F458(0xD000000000000010, 0x80000001C161C6F0, (uint64_t)v31, 0, 0, v27);
        v21((unint64_t)v27, 0, 1, v20);
        sub_1C09BCFA4(0x6973736572707845, 0xEA00000000006E6FLL, 0, 0, v19, &v119);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(v110 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v110 + 64) = &off_1F1BDEC90;
        uint64_t v32 = swift_allocObject();
        *(void *)(v110 + 32) = v32;
        *(void *)(v32 + 48) = v121;
        long long v33 = v120;
        *(_OWORD *)(v32 + 16) = v119;
        *(_OWORD *)(v32 + 32) = v33;
        uint64_t v12 = sub_1C131B79C(v110);
        swift_setDeallocating();
        sub_1C01004A4(0);
        swift_arrayDestroy();
        swift_release();
        swift_release();
        break;
    }
  }
  else
  {
    int v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFF9E460(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t v4 = swift_initStackObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C1529AE0;
    sub_1BFF9E460(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v3);
    sub_1C0181BEC(0);
    unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
    uint64_t v8 = (void *)(v7 + v6);
    sub_1C0433600(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v8);
    uint64_t v9 = type metadata accessor for FormatInspectionItem(0);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
    sub_1C09BCFA4(0x6973736572707845, 0xEA00000000006E6FLL, 0, 0, v7, &v119);
    swift_setDeallocating();
    swift_arrayDestroy();
LABEL_3:
    swift_deallocClassInstance();
    *(void *)(v4 + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(v4 + 64) = &off_1F1BDEC90;
    uint64_t v10 = swift_allocObject();
    *(void *)(v4 + 32) = v10;
    *(void *)(v10 + 48) = v121;
    long long v11 = v120;
    *(_OWORD *)(v10 + 16) = v119;
    *(_OWORD *)(v10 + 32) = v11;
    uint64_t v12 = sub_1C131B79C(v4);
    swift_setDeallocating();
    sub_1C01004A4(0);
    swift_arrayDestroy();
  }
  return v12;
}

uint64_t FormatColorExpression.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return FormatColorExpression.bindChildren(binder:context:)(a1, a2);
}

uint64_t static FormatColorExpression.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch((unint64_t)*a1 >> 61)
  {
    case 1uLL:
      if (v3 >> 61 != 1) {
        goto LABEL_17;
      }
      uint64_t v4 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v15 = v3 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v6 = *(void *)(v15 + 24);
      v20[0] = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v19[0] = v16;
      swift_retain();
      goto LABEL_14;
    case 2uLL:
      if (v3 >> 61 != 2) {
        goto LABEL_17;
      }
      uint64_t v7 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v20[0] = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v19[0] = v7;
      swift_retain();
      swift_retain();
      char v8 = static FormatColorExpression.== infix(_:_:)(v20, v19);
      goto LABEL_8;
    case 3uLL:
      if (v3 >> 61 != 3) {
        goto LABEL_17;
      }
      uint64_t v9 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      __int16 v10 = *(_WORD *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v11 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      LOWORD(v20[0]) = *(_WORD *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v20[1] = v9;
      LOWORD(v19[0]) = v10;
      v19[1] = v11;
      swift_retain();
      swift_retain();
      char v8 = _s8NewsFeed30FormatColorComponentExpressionV2eeoiySbAC_ACtFZ_0((uint64_t)v20, (uint64_t)v19);
LABEL_8:
      char v12 = v8;
      swift_release();
      swift_release();
      return v12 & 1;
    case 4uLL:
      if (v3 >> 61 != 4) {
        goto LABEL_17;
      }
      uint64_t v4 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v13 = v3 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v14 = *(void *)(v13 + 16);
      uint64_t v6 = *(void *)(v13 + 24);
      v20[0] = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v19[0] = v14;
      swift_retain();
      swift_retain();
      if ((static FormatColor.== infix(_:_:)(v20, v19) & 1) == 0) {
        goto LABEL_11;
      }
      goto LABEL_15;
    default:
      if (v3 >> 61) {
        goto LABEL_17;
      }
      uint64_t v4 = *(void *)(v2 + 24);
      uint64_t v5 = *(void *)(v3 + 16);
      uint64_t v6 = *(void *)(v3 + 24);
      v20[0] = *(void *)(v2 + 16);
      v19[0] = v5;
      swift_retain();
LABEL_14:
      swift_retain();
      if (static FormatColorExpression.== infix(_:_:)(v20, v19))
      {
LABEL_15:
        v20[0] = v4;
        v19[0] = v6;
        char v17 = static FormatColorExpression.== infix(_:_:)(v20, v19);
        swift_release();
        swift_release();
        if (v17)
        {
          char v12 = 1;
          return v12 & 1;
        }
      }
      else
      {
LABEL_11:
        swift_release();
        swift_release();
      }
LABEL_17:
      char v12 = 0;
      return v12 & 1;
  }
}

uint64_t sub_1C0B30B38(uint64_t a1, uint64_t a2)
{
  return FormatColorExpression.bindChildren(binder:context:)(a1, a2);
}

unint64_t sub_1C0B30B64(uint64_t a1)
{
  unint64_t result = sub_1C0B30B8C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0B30B8C()
{
  unint64_t result = qword_1EA1A3958;
  if (!qword_1EA1A3958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3958);
  }
  return result;
}

unint64_t sub_1C0B30BE0(void *a1)
{
  a1[1] = sub_1BFD460A0();
  a1[2] = sub_1BFD6F22C();
  unint64_t result = sub_1C0B30C18();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0B30C18()
{
  unint64_t result = qword_1EA1A3960;
  if (!qword_1EA1A3960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3960);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatColorExpression()
{
  return &type metadata for FormatColorExpression;
}

uint64_t sub_1C0B30C7C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0B30CC8()
{
  if (*v0) {
    return 0x73746E65746E6F63;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1C0B30D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0B323C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0B30D30(uint64_t a1)
{
  unint64_t v2 = sub_1C0B314AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0B30D6C(uint64_t a1)
{
  unint64_t v2 = sub_1C0B314AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatContentOverlaySubgroup.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0B317A4(0, &qword_1EA1A3968, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B314AC();
  sub_1C1520F0C();
  char v14 = 0;
  type metadata accessor for FormatRegex();
  sub_1C0B31690(&qword_1EB886F28, (void (*)(uint64_t))type metadata accessor for FormatRegex);
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v10 = *(void *)(v3 + *(int *)(type metadata accessor for FormatContentOverlaySubgroup() + 20));
    char v13 = 1;
    uint64_t v12 = v10;
    sub_1C0B3154C();
    sub_1C0B31AB8(0, &qword_1EA1A3980, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentOverlaySlot, MEMORY[0x1E4FBB320]);
    sub_1C0B315C0();
    sub_1C1520BAC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FormatContentOverlaySubgroup.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  sub_1C0B316D8();
  uint64_t v24 = v4;
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for FormatRegex();
  MEMORY[0x1F4188790](v25);
  uint64_t v26 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B317A4(0, &qword_1EA1A39A8, MEMORY[0x1E4FBBDC0]);
  uint64_t v27 = v8;
  uint64_t v23 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = type metadata accessor for FormatContentOverlaySubgroup();
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B314AC();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v20 = a1;
  uint64_t v14 = (uint64_t)v13;
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  char v29 = 0;
  sub_1C0B31690(&qword_1EB886F40, (void (*)(uint64_t))type metadata accessor for FormatRegex);
  uint64_t v17 = (uint64_t)v26;
  sub_1C15206EC();
  sub_1BFCC0818(v17, v14);
  char v28 = 1;
  sub_1C0B31690(&qword_1EA1A39B0, (void (*)(uint64_t))sub_1C0B316D8);
  sub_1C15206EC();
  uint64_t v18 = sub_1C1517E5C();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v16);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v27);
  *(void *)(v14 + *(int *)(v11 + 20)) = v18;
  sub_1C0B31808(v14, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return sub_1C0B3186C(v14, (uint64_t (*)(void))type metadata accessor for FormatContentOverlaySubgroup);
}

uint64_t sub_1C0B313D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatContentOverlaySubgroup.init(from:)(a1, a2);
}

uint64_t sub_1C0B313F0(void *a1)
{
  return FormatContentOverlaySubgroup.encode(to:)(a1);
}

uint64_t _s8NewsFeed28FormatContentOverlaySubgroupV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(type metadata accessor for FormatContentOverlaySubgroup() + 20);
  uint64_t v6 = *(void *)((char *)a1 + v5);
  uint64_t v7 = *(void *)((char *)a2 + v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v8 = sub_1C00DF460(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_1C0B314AC()
{
  unint64_t result = qword_1EA1A3970;
  if (!qword_1EA1A3970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3970);
  }
  return result;
}

uint64_t type metadata accessor for FormatContentOverlaySubgroup()
{
  uint64_t result = qword_1EA1A39C0;
  if (!qword_1EA1A39C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1C0B3154C()
{
  unint64_t result = qword_1EA1A3978;
  if (!qword_1EA1A3978)
  {
    sub_1C0B317A4(255, &qword_1EA1A3968, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3978);
  }
  return result;
}

unint64_t sub_1C0B315C0()
{
  unint64_t result = qword_1EA1A3988;
  if (!qword_1EA1A3988)
  {
    sub_1C0B31AB8(255, &qword_1EA1A3980, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentOverlaySlot, MEMORY[0x1E4FBB320]);
    sub_1C0B31690(&qword_1EA1A3990, (void (*)(uint64_t))type metadata accessor for FormatContentOverlaySlot);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3988);
  }
  return result;
}

uint64_t sub_1C0B31690(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0B316D8()
{
  if (!qword_1EA1A3998)
  {
    type metadata accessor for FormatContentOverlaySlot();
    sub_1C0B31690(&qword_1EA1A39A0, (void (*)(uint64_t))type metadata accessor for FormatContentOverlaySlot);
    sub_1C0B31690(&qword_1EA1A3990, (void (*)(uint64_t))type metadata accessor for FormatContentOverlaySlot);
    unint64_t v0 = sub_1C15181BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A3998);
    }
  }
}

void sub_1C0B317A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0B314AC();
    unint64_t v7 = a3(a1, &type metadata for FormatContentOverlaySubgroup.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0B31808(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContentOverlaySubgroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0B3186C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0B318CC(void *a1)
{
  a1[1] = sub_1C0B31690(&qword_1EA197B70, (void (*)(uint64_t))type metadata accessor for FormatContentOverlaySubgroup);
  a1[2] = sub_1C0B31690(&qword_1EA197B60, (void (*)(uint64_t))type metadata accessor for FormatContentOverlaySubgroup);
  uint64_t result = sub_1C0B31690(&qword_1EA1A39B8, (void (*)(uint64_t))type metadata accessor for FormatContentOverlaySubgroup);
  a1[3] = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatContentOverlaySubgroup(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(type metadata accessor for FormatRegex() + 20);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1C0B31AB8(0, (unint64_t *)&unk_1EB8850B0, MEMORY[0x1E4FBD2B0], MEMORY[0x1E4FBD2D0]);
    uint64_t v12 = v11;
    char v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v12);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return v4;
}

void sub_1C0B31AB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t destroy for FormatContentOverlaySubgroup(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for FormatRegex() + 20);
  sub_1C0B31AB8(0, (unint64_t *)&unk_1EB8850B0, MEMORY[0x1E4FBD2B0], MEMORY[0x1E4FBD2D0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FormatContentOverlaySubgroup(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(type metadata accessor for FormatRegex() + 20);
  unint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_1C0B31AB8(0, (unint64_t *)&unk_1EB8850B0, MEMORY[0x1E4FBD2B0], MEMORY[0x1E4FBD2D0]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v11);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatContentOverlaySubgroup(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(type metadata accessor for FormatRegex() + 20);
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  sub_1C0B31AB8(0, (unint64_t *)&unk_1EB8850B0, MEMORY[0x1E4FBD2B0], MEMORY[0x1E4FBD2D0]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FormatContentOverlaySubgroup(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for FormatRegex() + 20);
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  sub_1C0B31AB8(0, (unint64_t *)&unk_1EB8850B0, MEMORY[0x1E4FBD2B0], MEMORY[0x1E4FBD2D0]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for FormatContentOverlaySubgroup(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(type metadata accessor for FormatRegex() + 20);
  unint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_1C0B31AB8(0, (unint64_t *)&unk_1EB8850B0, MEMORY[0x1E4FBD2B0], MEMORY[0x1E4FBD2D0]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatContentOverlaySubgroup(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0B31F8C);
}

uint64_t sub_1C0B31F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatRegex();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for FormatContentOverlaySubgroup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0B32060);
}

uint64_t sub_1C0B32060(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FormatRegex();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C0B3211C()
{
  uint64_t result = type metadata accessor for FormatRegex();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatContentOverlaySubgroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0B32280);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentOverlaySubgroup.CodingKeys()
{
  return &type metadata for FormatContentOverlaySubgroup.CodingKeys;
}

unint64_t sub_1C0B322BC()
{
  unint64_t result = qword_1EA1A39D0;
  if (!qword_1EA1A39D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A39D0);
  }
  return result;
}

unint64_t sub_1C0B32314()
{
  unint64_t result = qword_1EA1A39D8;
  if (!qword_1EA1A39D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A39D8);
  }
  return result;
}

unint64_t sub_1C0B3236C()
{
  unint64_t result = qword_1EA1A39E0;
  if (!qword_1EA1A39E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A39E0);
  }
  return result;
}

uint64_t sub_1C0B323C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E65746E6F63 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C0B324C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  sub_1BFF2F0C4();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v44 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FormatAttributedStringAttachment();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v46 = v14;
  uint64_t v47 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v43 = (void **)((char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  uint64_t v45 = (void **)((char *)&v43 - v18);
  swift_getKeyPath();
  sub_1C0B32BBC();
  sub_1C1515D4C();
  swift_release();
  if (v50)
  {
    sub_1C1515F7C();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v24(v13, v9, v10);
      uint64_t v23 = v45;
      v24((char *)v45, v13, v10);
      uint64_t v22 = v46;
      goto LABEL_8;
    }
    sub_1BFF51230((uint64_t)v9, (uint64_t (*)(void))sub_1BFF00BEC);
  }
  swift_getKeyPath();
  sub_1C0B32C10();
  sub_1C1515D4C();
  swift_release();
  if (!v50)
  {
    uint64_t v21 = v5;
LABEL_11:
    swift_getKeyPath();
    sub_1C0B32C64();
    sub_1C1515D4C();
    swift_release();
    uint64_t v27 = v50;
    if (v50)
    {
      uint64_t v28 = v49;
      swift_getKeyPath();
      sub_1C0B32CB8();
      sub_1C1515D4C();
      swift_release();
      if (!v50) {
        goto LABEL_20;
      }
      if (qword_1EB8881F8 != -1) {
        swift_once();
      }
      id v29 = sub_1BFF9A0FC(v28, v27);
      swift_bridgeObjectRelease();
      if (v29)
      {
        id v30 = v29;
        uint64_t v31 = (void *)sub_1C151769C();
        uint64_t v32 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        id v33 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v32, v30, v31);

        if (v33)
        {
          uint64_t v34 = (uint64_t)v44;
          (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v44, a1, v4);
          uint64_t v35 = sub_1C0B32D0C(v34);
          if (v37 == -1)
          {
            id v42 = objc_msgSend(v33, sel_imageWithRenderingMode_, 2);

            swift_release();
            (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a1, v4);
            uint64_t v40 = (uint64_t)v43;
            *uint64_t v43 = v42;
          }
          else
          {
            id v38 = sub_1BFF9A2E8(v33, v35, v36, v37);
            id v39 = objc_msgSend(v38, sel_imageWithRenderingMode_, 2);

            swift_release();
            (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a1, v4);
            uint64_t v40 = (uint64_t)v43;
            *uint64_t v43 = v39;
          }
          uint64_t v22 = v46;
          swift_storeEnumTagMultiPayload();
          uint64_t v23 = v45;
          sub_1C0B32E48(v40, (uint64_t)v45);
          goto LABEL_9;
        }
        swift_release();
      }
      else
      {
LABEL_20:
        swift_release();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_release();
    }
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a1, v4);
    uint64_t v26 = 1;
    uint64_t v25 = v48;
    uint64_t v22 = v46;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v25, v26, 1, v22);
  }
  uint64_t v19 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(self, sel_systemImageNamed_, v19);

  uint64_t v21 = v5;
  if (!v20) {
    goto LABEL_11;
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  uint64_t v23 = v45;
  uint64_t v22 = v46;
  *uint64_t v45 = v20;
LABEL_8:
  swift_storeEnumTagMultiPayload();
LABEL_9:
  uint64_t v25 = v48;
  sub_1C0B32E48((uint64_t)v23, v48);
  uint64_t v26 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v25, v26, 1, v22);
}

unint64_t sub_1C0B32BBC()
{
  unint64_t result = qword_1EB862E80;
  if (!qword_1EB862E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862E80);
  }
  return result;
}

unint64_t sub_1C0B32C10()
{
  unint64_t result = qword_1EB862E78;
  if (!qword_1EB862E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862E78);
  }
  return result;
}

unint64_t sub_1C0B32C64()
{
  unint64_t result = qword_1EB862E98;
  if (!qword_1EB862E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862E98);
  }
  return result;
}

unint64_t sub_1C0B32CB8()
{
  unint64_t result = qword_1EB862E88;
  if (!qword_1EB862E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862E88);
  }
  return result;
}

uint64_t sub_1C0B32D0C(uint64_t a1)
{
  swift_getKeyPath();
  sub_1BFF2F0C4();
  uint64_t v3 = v2;
  sub_1C0B32EAC();
  sub_1C1515D4C();
  swift_release();
  swift_getKeyPath();
  sub_1C0B32F00();
  sub_1C1515D4C();
  swift_release();
  if (v8) {
    double v4 = 0.0;
  }
  else {
    double v4 = (double)v7;
  }
  if (v10) {
    double v5 = v4;
  }
  else {
    double v5 = (double)v9;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return *(void *)&v5;
}

uint64_t sub_1C0B32E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatAttributedStringAttachment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0B32EAC()
{
  unint64_t result = qword_1EB862E90;
  if (!qword_1EB862E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862E90);
  }
  return result;
}

unint64_t sub_1C0B32F00()
{
  unint64_t result = qword_1EB862EA0;
  if (!qword_1EB862EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862EA0);
  }
  return result;
}

char *sub_1C0B32F54(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = *a2;
      *(void *)a1 = *a2;
      char v8 = v7;
    }
    else
    {
      uint64_t v10 = sub_1C1515FDC();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1C0B33078(void **a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    int v5 = *a1;
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v3 = sub_1C1515FDC();
    uint64_t v4 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
    v4(a1, v3);
  }
}

void **sub_1C0B33120(void **a1, void **a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    int v5 = *a2;
    *a1 = *a2;
    id v6 = v5;
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_1C0B331F4(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_1BFF51230((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatAttributedStringAttachment);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      int v5 = *a2;
      *a1 = *a2;
      id v6 = v5;
    }
    else
    {
      uint64_t v7 = sub_1C1515FDC();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1C0B332EC(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1C1515FDC();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1C0B333A0(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFF51230((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatAttributedStringAttachment);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1C1515FDC();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t FormatImageNodeContext.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t method lookup function for FormatImageNodeContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatImageNodeContext);
}

uint64_t FormatFontWeight.rawValue.getter()
{
  uint64_t result = 0x6B63616C62;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1684828002;
      break;
    case 2:
      uint64_t result = 0x7976616568;
      break;
    case 3:
      uint64_t result = 0x746867696CLL;
      break;
    case 4:
      uint64_t result = 0x6D756964656DLL;
      break;
    case 5:
      uint64_t result = 0x72616C75676572;
      break;
    case 6:
      uint64_t result = 0x646C6F62696D6573;
      break;
    case 7:
      uint64_t result = 1852401780;
      break;
    case 8:
      uint64_t result = 0x67694C6172746C75;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0B335B4()
{
  unint64_t result = qword_1EA1A39E8;
  if (!qword_1EA1A39E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A39E8);
  }
  return result;
}

uint64_t sub_1C0B33608()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0B33650()
{
  return sub_1C044AF18();
}

uint64_t sub_1C0B33658()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0B3369C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatFontWeight.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1C0B336C4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0B336F4();
  unint64_t result = sub_1BFCEFDC4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0B336F4()
{
  unint64_t result = qword_1EA1A39F0;
  if (!qword_1EA1A39F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A39F0);
  }
  return result;
}

uint64_t sub_1C0B33748(unsigned __int8 *a1, char *a2)
{
  return sub_1C148E414(*a1, *a2);
}

unint64_t sub_1C0B33754(uint64_t a1)
{
  unint64_t result = sub_1C0B3377C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0B3377C()
{
  unint64_t result = qword_1EA1A39F8;
  if (!qword_1EA1A39F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A39F8);
  }
  return result;
}

unint64_t sub_1C0B337D0(void *a1)
{
  a1[1] = sub_1BFDEE414();
  a1[2] = sub_1BFE65314();
  unint64_t result = sub_1C0B335B4();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatFontWeight()
{
  return &type metadata for FormatFontWeight;
}

uint64_t FeedPluginManagerResult.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t method lookup function for FeedPluginManagerResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedPluginManagerResult);
}

id UIColor.limitedColor.getter()
{
  uint64_t v0 = sub_1C151F9EC();
  if (!v0) {
    return 0;
  }
  unint64_t v1 = (void *)v0;
  uint64_t v2 = sub_1C151F9EC();
  if (!v2)
  {

    return 0;
  }
  uint64_t v3 = (void *)v2;
  id v4 = objc_msgSend(self, sel_ts_dynamicColor_withDarkStyleVariant_, v1, v2);

  return v4;
}

id UIColor.extraLimitedColor.getter()
{
  uint64_t v0 = sub_1C151F9EC();
  if (!v0) {
    return 0;
  }
  unint64_t v1 = (void *)v0;
  uint64_t v2 = sub_1C151F9EC();
  if (!v2)
  {

    return 0;
  }
  uint64_t v3 = (void *)v2;
  id v4 = objc_msgSend(self, sel_ts_dynamicColor_withDarkStyleVariant_, v1, v2);

  return v4;
}

double UIColor.formatColor.getter@<D0>(uint64_t *a1@<X8>)
{
  sub_1C151F9DC();
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = swift_allocObject();
  *(double *)(v10 + 16) = v3 * 255.0;
  *(double *)(v10 + 24) = v5 * 255.0;
  double result = v7 * 255.0;
  *(double *)(v10 + 32) = v7 * 255.0;
  *(void *)(v10 + 40) = v9;
  *(unsigned char *)(v10 + 48) = 0;
  *a1 = v10 | 0x6000000000000000;
  return result;
}

void UIColor.dynamicFormatColor.getter(uint64_t *a1@<X8>)
{
  uint64_t v34 = sub_1C0B33FB4;
  uint64_t v35 = 0;
  uint64_t v30 = MEMORY[0x1E4F143A8];
  uint64_t v31 = 1107296256;
  uint64_t v32 = sub_1C0B3405C;
  id v33 = &block_descriptor_3;
  double v3 = _Block_copy(&v30);
  double v4 = self;
  id v5 = objc_msgSend(v4, sel_traitCollectionWithTraits_, v3);
  _Block_release(v3);
  swift_release();
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
  }
  else
  {
    id v6 = objc_msgSend(v1, sel_resolvedColorWithTraitCollection_, v5);

    uint64_t v34 = sub_1C0B33FBC;
    uint64_t v35 = 0;
    uint64_t v30 = MEMORY[0x1E4F143A8];
    uint64_t v31 = 1107296256;
    uint64_t v32 = sub_1C0B3405C;
    id v33 = &block_descriptor_6_2;
    double v7 = _Block_copy(&v30);
    id v8 = objc_msgSend(v4, sel_traitCollectionWithTraits_, v7);
    _Block_release(v7);
    swift_release();
    if ((swift_isEscapingClosureAtFileLocation() & 1) == 0)
    {
      id v9 = objc_msgSend(v1, sel_resolvedColorWithTraitCollection_, v8);

      uint64_t v10 = swift_allocObject();
      sub_1C151F9DC();
      double v12 = v11;
      double v14 = v13;
      double v16 = v15;
      uint64_t v18 = v17;
      uint64_t v19 = swift_allocObject();
      *(double *)(v19 + 16) = v12 * 255.0;
      *(double *)(v19 + 24) = v14 * 255.0;
      *(double *)(v19 + 32) = v16 * 255.0;
      *(void *)(v19 + 40) = v18;
      *(unsigned char *)(v19 + 48) = 0;
      uint64_t v20 = v19 | 0x6000000000000000;
      sub_1C151F9DC();
      double v22 = v21;
      double v24 = v23;
      double v26 = v25;
      uint64_t v28 = v27;
      uint64_t v29 = swift_allocObject();
      *(double *)(v29 + 16) = v22 * 255.0;
      *(double *)(v29 + 24) = v24 * 255.0;
      *(double *)(v29 + 32) = v26 * 255.0;
      *(void *)(v29 + 40) = v28;
      *(unsigned char *)(v29 + 48) = 0;

      *(void *)(v10 + 16) = v20;
      *(void *)(v10 + 24) = v29 | 0x6000000000000000;
      *a1 = v10 | 0x3000000000000000;
      return;
    }
  }
  __break(1u);
}

id static UIColor.feedBackground.getter()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_secondarySystemBackgroundColor);
  id v2 = objc_msgSend(v0, sel_systemBackgroundColor);
  id v3 = objc_msgSend(v0, sel_ts_dynamicColor_withDarkStyleVariant_, v1, v2);

  return v3;
}

uint64_t sub_1C0B33DE0()
{
  double v0 = sub_1C0B34170();
  double v2 = v1;
  double v4 = v3;
  double v6 = v5;
  sub_1BFEE7FE0(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C152A660;
  float v8 = v0 * 255.0;
  uint64_t v9 = lroundf(v8);
  uint64_t v10 = MEMORY[0x1E4FBB550];
  uint64_t v11 = MEMORY[0x1E4FBB5C8];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v7 + 64) = v11;
  *(void *)(v7 + 32) = v9;
  float v12 = v2 * 255.0;
  uint64_t v13 = lroundf(v12);
  *(void *)(v7 + 96) = v10;
  *(void *)(v7 + 104) = v11;
  *(void *)(v7 + 72) = v13;
  float v14 = v4 * 255.0;
  uint64_t v15 = lroundf(v14);
  *(void *)(v7 + 136) = v10;
  *(void *)(v7 + 144) = v11;
  *(void *)(v7 + 112) = v15;
  float v16 = v6 * 255.0;
  uint64_t v17 = lroundf(v16);
  *(void *)(v7 + 176) = v10;
  *(void *)(v7 + 184) = v11;
  *(void *)(v7 + 152) = v17;
  return sub_1C151E66C();
}

UIColor __swiftcall UIColor.resolvedColor(withOptional:)(UITraitCollection_optional withOptional)
{
  if (withOptional.value.super.isa)
  {
    id v2 = objc_msgSend(v1, sel_resolvedColorWithTraitCollection_, withOptional.value.super.isa);
    return (UIColor)v2;
  }
  else
  {
    return (UIColor)v1;
  }
}

UIColor static UIColor.likeStatusColor.getter()
{
  sub_1BFF6B690();
  v0._countAndFlagsBits = 0x433830434335;
  v0._object = (void *)0xE600000000000000;
  return UIColor.init(hex:)(v0);
}

id sub_1C0B33FB4(void *a1)
{
  return sub_1C0B33FC4(a1, 1);
}

id sub_1C0B33FBC(void *a1)
{
  return sub_1C0B33FC4(a1, 2);
}

id sub_1C0B33FC4(void *a1, uint64_t a2)
{
  id v4 = objc_msgSend(self, sel_currentTraitCollection);
  id v5 = objc_msgSend(v4, sel_userInterfaceLevel);

  objc_msgSend(a1, sel_setUserInterfaceLevel_, v5);
  return objc_msgSend(a1, sel_setUserInterfaceStyle_, a2);
}

uint64_t sub_1C0B3405C(uint64_t a1, uint64_t a2)
{
  double v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

UIColor __swiftcall UIColor.init(hex:)(Swift::Int hex)
{
  int v1 = hex;
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return (UIColor)objc_msgSend(v2, sel_initWithRed_green_blue_alpha_, (double)HIBYTE(v1) / 255.0, (double)BYTE2(v1) / 255.0, (double)BYTE1(v1) / 255.0, (double)v1 / 255.0);
}

id sub_1C0B34130()
{
  id v0 = objc_msgSend(self, sel_clearColor);
  return v0;
}

double sub_1C0B34170()
{
  v6[1] = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v3 = 0;
  unsigned int v1 = objc_msgSend(v0, sel_getRed_green_blue_alpha_, v6, &v5, &v4, &v3);
  double result = 0.0;
  if (v1) {
    return *(double *)v6;
  }
  return result;
}

id sub_1C0B34204(uint64_t a1, id a2)
{
  id v3 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  sub_1C151FA4C();
  sub_1C0B348C0((uint64_t)&v13, (uint64_t)v14);
  if ((v16 & 1) == 0 && v15 < 0.12)
  {
    uint64_t v4 = self;
    id v5 = objc_msgSend(v4, sel_secondarySystemBackgroundColor);
    id v6 = objc_msgSend(self, sel_traitCollectionWithUserInterfaceStyle_, 2);
    id v7 = objc_msgSend(v5, sel_resolvedColorWithTraitCollection_, v6);

    id v8 = objc_msgSend(v4, sel_systemBackgroundColor);
    id v9 = objc_msgSend(v8, sel_resolvedColorWithTraitCollection_, a1);

    sub_1BFF6B690();
    char v10 = sub_1C151FB6C();

    if (v10) {
      uint64_t v11 = v7;
    }
    else {
      uint64_t v11 = v3;
    }
    if ((v10 & 1) == 0) {
      id v3 = v7;
    }
  }
  return v3;
}

id UIColor.navigationBarColor.getter()
{
  id v1 = objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.82);
  return v1;
}

unsigned __int8 *sub_1C0B343BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C151E8DC();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    id v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1C0296D20();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    id v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    id v7 = (unsigned __int8 *)sub_1C152020C();
  }
LABEL_7:
  uint64_t v11 = sub_1C0B34644(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C0B344A4()
{
  return swift_deallocObject();
}

uint64_t sub_1C0B344B4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

unsigned __int8 *sub_1C0B344FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_1C0B345F0();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C151E8DC();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1C0296D20();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v9 = (unsigned __int8 *)sub_1C152020C();
  }
LABEL_7:
  uint64_t v13 = sub_1C0B34644(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unint64_t sub_1C0B345F0()
{
  unint64_t result = qword_1EA1A3A00;
  if (!qword_1EA1A3A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3A00);
  }
  return result;
}

unsigned __int8 *sub_1C0B34644(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1C0B348C0(uint64_t a1, uint64_t a2)
{
  sub_1BFEE7FE0(0, &qword_1EB85C858, sub_1C00920E8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0B3495C()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1C0B34984()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t static FormatCommandAction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t sub_1C0B349DC()
{
  return (*(uint64_t (**)(void))(v0 + 40))() & 1;
}

uint64_t FormatCommandAction.description.getter()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_1C0B34A30()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t method lookup function for FormatCommandAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatCommandAction);
}

uint64_t FormatGroupBindExpression.init(identifier:kinds:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t FormatGroupBindExpression.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroupBindExpression.kinds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupBindExpression.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *id v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FormatGroupBindExpression.identifier.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatGroupBindExpression.kinds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*FormatGroupBindExpression.kinds.modify())(void)
{
  return nullsub_1;
}

uint64_t _s8NewsFeed25FormatGroupBindExpressionV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v5 = sub_1C00AED14(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1C0B34C10(uint64_t a1)
{
  unint64_t result = sub_1C0B34C38();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0B34C38()
{
  unint64_t result = qword_1EA1A3A08;
  if (!qword_1EA1A3A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3A08);
  }
  return result;
}

unint64_t sub_1C0B34C8C(void *a1)
{
  a1[1] = sub_1BFE66474();
  a1[2] = sub_1BFE3FD2C();
  unint64_t result = sub_1C0B34CC4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0B34CC4()
{
  unint64_t result = qword_1EA1A3A10;
  if (!qword_1EA1A3A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3A10);
  }
  return result;
}

uint64_t sub_1C0B34D18@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0B34D24(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t sub_1C0B34D68@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0B34D74(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBindExpression()
{
  return &type metadata for FormatGroupBindExpression;
}

uint64_t sub_1C0B34DC8@<X0>(uint64_t a1@<X8>)
{
  v16[1] = a1;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unsigned __int8 v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unsigned int v11 = (char *)v16 - v10;
  id v12 = objc_msgSend(self, sel_sportsDataVisualizationBaseURLForConfiguration_, objc_msgSend(*(id *)(v1 + 16), sel_appConfiguration));
  swift_unknownObjectRelease();
  if (v12)
  {
    sub_1C1515F1C();

    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v13(v4, v8, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      v13(v11, v4, v5);
      sub_1C1515EDC();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  sub_1C002F608((uint64_t)v4);
  sub_1C0254A10();
  swift_allocError();
  unsigned char *v15 = 0;
  return swift_willThrow();
}

ValueMetadata *type metadata accessor for A12_V6()
{
  return &type metadata for A12_V6;
}

uint64_t sub_1C0B3507C(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0B38000(0, &qword_1EA1A3AC8, (uint64_t (*)(void))sub_1C0B37FAC, (uint64_t)&type metadata for A12_V6.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B37FAC();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0B38068(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0B352C4(uint64_t a1)
{
  unint64_t v2 = sub_1C0B37FAC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0B35300(uint64_t a1)
{
  unint64_t v2 = sub_1C0B37FAC();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0B3533C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0B37CFC(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0B35384(void *a1)
{
  return sub_1C0B3507C(a1);
}

uint64_t sub_1C0B3539C()
{
  sub_1C0B37998();
  return sub_1C151798C();
}

uint64_t sub_1C0B35418@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0B38000(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C0B354D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v46 = a3;
  uint64_t v49 = sub_1C151635C();
  uint64_t v6 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v56 = *(void *)(v9 - 8);
  uint64_t v57 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v53 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v46 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v51 = *(void *)(v14 - 8);
  uint64_t v52 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v50 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  unsigned __int8 v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v58 = a1;
  sub_1BFF1AFA4(a1, v50, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v54 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v48 = sub_1C151633C();
  uint64_t v47 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v49);
  long long v67 = &type metadata for A12_V6;
  unint64_t v20 = sub_1C0186728();
  unint64_t v68 = v20;
  LOBYTE(v65) = v16;
  *((void *)&v65 + 1) = v17;
  unsigned __int8 v66 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v59 = sub_1C1520FAC();
  uint64_t v60 = v22;
  uint64_t v63 = 95;
  unint64_t v64 = 0xE100000000000000;
  uint64_t v61 = 45;
  unint64_t v62 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v47;
  *uint64_t v26 = v48;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v65, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  uint64_t v29 = (uint64_t)v53;
  sub_1BFF2389C(v50, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v28, 0, 1, v52);
  uint64_t v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v30, 0, 1, v57);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
  sub_1BFFFC630(v17, v18);
  long long v67 = &type metadata for A12_V6;
  unint64_t v68 = v20;
  LOBYTE(v65) = v16;
  *((void *)&v65 + 1) = v17;
  unsigned __int8 v66 = v18;
  uint64_t v31 = v29;
  sub_1BFF1AFA4(v55, v29, (uint64_t (*)(void))v54);
  sub_1C00192A8(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = MEMORY[0x1E4FBC860];
  id v33 = (void *)(v32 + 16);
  swift_beginAccess();
  uint64_t v34 = *(void **)(v32 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v32 + 16) = v34;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v34 = sub_1BFFB83AC(0, v34[2] + 1, 1, v34);
    *id v33 = v34;
  }
  unint64_t v37 = v34[2];
  unint64_t v36 = v34[3];
  if (v37 >= v36 >> 1)
  {
    uint64_t v34 = sub_1BFFB83AC((void *)(v36 > 1), v37 + 1, 1, v34);
    *id v33 = v34;
  }
  v34[2] = v37 + 1;
  id v38 = &v34[2 * v37];
  v38[4] = sub_1C064667C;
  v38[5] = 0;
  swift_endAccess();
  uint64_t v39 = v69;
  uint64_t v40 = sub_1C001E608((uint64_t)&unk_1F1B83248, 0, 0, v32, 4, 0, 0, 0);
  if (v39)
  {
    swift_release();
    swift_release();
    sub_1BFF1F104(v31, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
  }
  else
  {
    uint64_t v42 = v40;
    swift_release();
    uint64_t v43 = type metadata accessor for A12_V6.Bound();
    uint64_t v44 = v46;
    v46[3] = v43;
    v44[4] = sub_1C0B38068(&qword_1EA1A3A28, (void (*)(uint64_t))type metadata accessor for A12_V6.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v44);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v65, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v31, (uint64_t)boxed_opaque_existential_0 + *(int *)(v43 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v43 + 28)) = v42;
  }
  return result;
}

uint64_t sub_1C0B35B48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v27 = a1;
  uint64_t v26 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  long long v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for A12_V6.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(void *)(*(void *)(v7 + *(int *)(v8 + 40)) + 16);
  double v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BFC66384(v9 + 16, (uint64_t)&v33);
  sub_1BFC66384(v9 + 56, (uint64_t)v32);
  double v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(&v33, inited + 16);
  sub_1BFC773DC(v32, inited + 56);
  *(double *)(inited + 96) = v11;
  v31[0] = 1;
  FeedLayoutStylerFactory.styler(withHeading:)(v31, v37);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  uint64_t v13 = *(void *)(v2 + *(int *)(v6 + 28));
  v29[2] = v2;
  v29[3] = v37;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C0182EAC((void (*)(uint64_t))sub_1C0B3791C, (uint64_t)v29, v13, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  uint64_t v15 = *MEMORY[0x1E4FAB6D8];
  uint64_t v16 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v5, v15, v16);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAB8F0], v26);
  uint64_t v28 = v14;
  sub_1C0B37A50(0, &qword_1EA1A3A48, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v26 = sub_1C1517BEC();
  uint64_t v17 = sub_1C1517BFC();
  long long v25 = v33;
  uint64_t v18 = v34;
  uint64_t v19 = v35;
  *(void *)&long long v33 = v14;
  *(void *)&v32[0] = v36;
  MEMORY[0x1F4188790](v17);
  sub_1C00192A8(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v33 = v20;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v21 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v22 = v27;
  *uint64_t v27 = 0;
  *(_OWORD *)(v22 + 8) = v25;
  *((void *)v22 + 3) = v18;
  *((void *)v22 + 4) = v19;
  uint64_t v23 = MEMORY[0x1E4FBC860];
  *((void *)v22 + 5) = v21;
  *((void *)v22 + 6) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
}

uint64_t sub_1C0B35FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C0B360B0(uint64_t a1, uint64_t a2)
{
  sub_1C0B38000(0, &qword_1EA1A3A60, (uint64_t (*)(void))sub_1C0B37944, (uint64_t)&type metadata for A12_V6.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)&v12[-v7];
  uint64_t v14 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 12;
  *uint64_t v8 = v9;
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FABA10], v5);
  uint64_t v13 = a2;
  double v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0B37A50(0, &qword_1EA1A3A68, MEMORY[0x1E4FAB6F0]);
  sub_1C0B37A0C(&qword_1EA1A3A70, &qword_1EA1A3A68, v10);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C0B3629C(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a2;
  uint64_t v22 = sub_1C0B37944;
  sub_1C0B38000(0, &qword_1EA1A3A60, (uint64_t (*)(void))sub_1C0B37944, (uint64_t)&type metadata for A12_V6.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (void *)((char *)v21 - v6);
  uint64_t v25 = a1;
  uint64_t v8 = sub_1C151729C();
  uint64_t v9 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v10, *MEMORY[0x1E4FAB4E8], v8);
  uint64_t *v7 = v9;
  double v11 = *(void (**)(uint64_t *, void, uint64_t))(v5 + 104);
  v11(v7, *MEMORY[0x1E4FAB940], v4);
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0B37A50(0, &qword_1EA1A3A78, MEMORY[0x1E4FAB4D0]);
  v21[1] = v13;
  sub_1C0B37A0C(&qword_1EA1A3A80, &qword_1EA1A3A78, v12);
  sub_1C151738C();
  uint64_t v14 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  v14(v7, v4);
  uint64_t v25 = a1;
  v11(v7, *MEMORY[0x1E4FABA28], v4);
  sub_1C0B37AD4();
  sub_1C0B38000(0, &qword_1EA1A3A90, (uint64_t (*)(void))v22, (uint64_t)&type metadata for A12_V6.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1529AE0;
  (*(void (**)(unint64_t, void, uint64_t))(v17 + 104))(v19 + v18, *MEMORY[0x1E4FAB638], v16);
  uint64_t v24 = v23;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v14)(v7, v4);
}

uint64_t sub_1C0B36608(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  sub_1C0B38000(0, &qword_1EA1A3A60, (uint64_t (*)(void))sub_1C0B37944, (uint64_t)&type metadata for A12_V6.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v16 - v7);
  uint64_t v20 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  *uint64_t v8 = v9;
  uint64_t v10 = *MEMORY[0x1E4FABA10];
  double v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  uint64_t v19 = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0B37A50(0, &qword_1EA1A3A78, MEMORY[0x1E4FAB4D0]);
  sub_1C0B37A0C(&qword_1EA1A3A80, &qword_1EA1A3A78, v12);
  sub_1C151734C();
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  uint64_t v20 = v17;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 6;
  *uint64_t v8 = v14;
  v11(v8, v10, v5);
  uint64_t v18 = v16;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1C0B368AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  double v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B38000(0, &qword_1EA1A3A60, (uint64_t (*)(void))sub_1C0B37944, (uint64_t)&type metadata for A12_V6.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *double v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 5;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0B37A50(0, &qword_1EA1A3A78, MEMORY[0x1E4FAB4D0]);
  sub_1C0B37A0C(&qword_1EA1A3A80, &qword_1EA1A3A78, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C0B36E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  double v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B38000(0, &qword_1EA1A3A60, (uint64_t (*)(void))sub_1C0B37944, (uint64_t)&type metadata for A12_V6.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ *(void *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *double v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 5;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0B37A50(0, &qword_1EA1A3A78, MEMORY[0x1E4FAB4D0]);
  sub_1C0B37A0C(&qword_1EA1A3A80, &qword_1EA1A3A78, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C0B37458@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A12_V6.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C0B37548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0B354D4(a1, a2, a3);
}

uint64_t sub_1C0B37560()
{
  return sub_1C12BC43C();
}

unint64_t sub_1C0B37570(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0B375A0();
  unint64_t result = sub_1C0B375F4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0B375A0()
{
  unint64_t result = qword_1EA1A3A18;
  if (!qword_1EA1A3A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3A18);
  }
  return result;
}

unint64_t sub_1C0B375F4()
{
  unint64_t result = qword_1EA1A3A20;
  if (!qword_1EA1A3A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3A20);
  }
  return result;
}

uint64_t type metadata accessor for A12_V6.Bound()
{
  uint64_t result = qword_1EA1A3A30;
  if (!qword_1EA1A3A30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0B37694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0B376A8);
}

uint64_t sub_1C0B376A8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0B37758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0B3776C);
}

void *sub_1C0B3776C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0B37814()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0B378C4(uint64_t a1)
{
  uint64_t result = sub_1C0B38068(&qword_1EA1A3A40, (void (*)(uint64_t))type metadata accessor for A12_V6.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0B3791C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C0B35FD8(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1C0B3793C(uint64_t a1)
{
  return sub_1C0B360B0(a1, *(void *)(v1 + 16));
}

unint64_t sub_1C0B37944()
{
  unint64_t result = qword_1EA1A3A50;
  if (!qword_1EA1A3A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3A50);
  }
  return result;
}

unint64_t sub_1C0B37998()
{
  unint64_t result = qword_1EA1A3A58;
  if (!qword_1EA1A3A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3A58);
  }
  return result;
}

uint64_t sub_1C0B379EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C0B37458(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C0B379F4()
{
  return swift_deallocObject();
}

uint64_t sub_1C0B37A04(uint64_t a1)
{
  return sub_1C0B3629C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0B37A0C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0B37A50(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0B37A50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V6.Layout;
    v8[1] = &type metadata for A12_V6.Layout.Attributes;
    v8[2] = sub_1C0B37944();
    v8[3] = sub_1C0B37998();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C0B37AD4()
{
  if (!qword_1EA1A3A88)
  {
    sub_1C0B38000(255, &qword_1EA1A3A90, (uint64_t (*)(void))sub_1C0B37944, (uint64_t)&type metadata for A12_V6.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A3A88);
    }
  }
}

uint64_t sub_1C0B37B64(uint64_t a1)
{
  return sub_1C0B36608(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0B37B6C(uint64_t a1)
{
  return sub_1C0B368AC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0B37B74(uint64_t a1)
{
  return sub_1C0B36E7C(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V6.Layout.Attributes()
{
  return &type metadata for A12_V6.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V6.Layout()
{
  return &type metadata for A12_V6.Layout;
}

unint64_t sub_1C0B37BA0()
{
  unint64_t result = qword_1EA1A3A98;
  if (!qword_1EA1A3A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3A98);
  }
  return result;
}

unint64_t sub_1C0B37BF8()
{
  unint64_t result = qword_1EA1A3AA0;
  if (!qword_1EA1A3AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3AA0);
  }
  return result;
}

unint64_t sub_1C0B37C50()
{
  unint64_t result = qword_1EA1A3AA8;
  if (!qword_1EA1A3AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3AA8);
  }
  return result;
}

unint64_t sub_1C0B37CA8()
{
  unint64_t result = qword_1EA1A3AB0;
  if (!qword_1EA1A3AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3AB0);
  }
  return result;
}

uint64_t sub_1C0B37CFC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C0B38000(0, &qword_1EA1A3AB8, (uint64_t (*)(void))sub_1C0B37FAC, (uint64_t)&type metadata for A12_V6.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B37FAC();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C0B38068(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C0B37FAC()
{
  unint64_t result = qword_1EA1A3AC0;
  if (!qword_1EA1A3AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3AC0);
  }
  return result;
}

void sub_1C0B38000(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0B38068(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A12_V6.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0B3817CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V6.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V6.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C0B381B8()
{
  unint64_t result = qword_1EA1A3AD0;
  if (!qword_1EA1A3AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3AD0);
  }
  return result;
}

unint64_t sub_1C0B38210()
{
  unint64_t result = qword_1EA1A3AD8;
  if (!qword_1EA1A3AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3AD8);
  }
  return result;
}

unint64_t sub_1C0B38268()
{
  unint64_t result = qword_1EA1A3AE0;
  if (!qword_1EA1A3AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3AE0);
  }
  return result;
}

uint64_t FeedChannelCluster.tag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FeedChannelCluster.scoredHeadlines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedChannelCluster.headlines.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 8) + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C152028C();
    uint64_t v3 = 32;
    do
    {
      swift_unknownObjectRetain();
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      v3 += 16;
      --v1;
    }
    while (v1);
    uint64_t v2 = v5;
    swift_bridgeObjectRelease();
  }
  return v2;
}

id FeedChannelCluster.clusteringRules.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t FeedChannelCluster.init(tag:scoredHeadlines:clusteringRules:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

id FeedChannelCluster.replacing(headlines:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v4 = (id)v2[2];
  *a2 = *v2;
  a2[1] = a1;
  a2[2] = v4;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return v4;
}

void destroy for FeedChannelCluster(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

void *_s8NewsFeed18FeedChannelClusterVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = (void *)a2[2];
  a1[2] = v4;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for FeedChannelCluster(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for FeedChannelCluster(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for FeedChannelCluster()
{
  return &type metadata for FeedChannelCluster;
}

uint64_t sub_1C0B38564(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1C05F7958(0, v1, 0);
  uint64_t v2 = v25;
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v5;
  uint64_t v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    char v24 = *(unsigned char *)(*(void *)(a1 + 48) + v6);
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    unint64_t v14 = *(void *)(v25 + 16);
    unint64_t v13 = *(void *)(v25 + 24);
    uint64_t result = swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1) {
      uint64_t result = sub_1C05F7958(v13 > 1, v14 + 1, 1);
    }
    *(void *)(v25 + 16) = v14 + 1;
    uint64_t v15 = v25 + 16 * v14;
    *(unsigned char *)(v15 + 32) = v24;
    *(void *)(v15 + 40) = v12;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v21;
    }
    else
    {
      unint64_t v18 = v11 + 1;
      unint64_t v19 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v21;
      if (v11 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              unint64_t v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t FormatOption.init(identifier:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = *a3;
  *a4 = a1;
  a4[1] = a2;
  a4[2] = v5;
  a4[3] = 1;
  uint64_t v6 = (char *)a4 + *(int *)(type metadata accessor for FormatOption() + 28);
  uint64_t v7 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  return v8(v6, 1, 1, v7);
}

uint64_t type metadata accessor for FormatOption()
{
  uint64_t result = qword_1EB890FC8;
  if (!qword_1EB890FC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FormatOption.type.getter@<X0>(char *a1@<X8>)
{
  return FormatOptionValue.type.getter(a1);
}

uint64_t FormatOption.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatOption.value.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_retain();
}

uint64_t sub_1C0B388C8(uint64_t a1)
{
  uint64_t v71 = type metadata accessor for FormatOption();
  uint64_t v68 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v87 = (void *)((char *)v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v3);
  unint64_t v86 = (char *)v66 - v4;
  uint64_t v93 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v5 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  uint64_t v85 = (char *)v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v84 = (void *)((char *)v66 - v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v83 = (uint64_t)v66 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v78 = (uint64_t)v66 - v12;
  sub_1C0B3AEC8(0, &qword_1EA1974F0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBB718]);
  uint64_t v89 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13 - 8);
  long long v67 = (char *)v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)v66 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v82 = (uint64_t)v66 - v19;
  uint64_t v95 = a1;
  sub_1C0B3AEC8(0, (unint64_t *)&unk_1EB879D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBB320]);
  sub_1C0B3ADC0();
  sub_1C007E638();
  uint64_t v20 = sub_1C151E93C();
  sub_1C0B38564(v20);
  swift_bridgeObjectRelease();
  sub_1C0606200(0);
  uint64_t v21 = sub_1C151EC4C();
  swift_bridgeObjectRelease();
  int64_t v22 = *(void *)(v21 + 16);
  if (!v22)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v95 = MEMORY[0x1E4FBC860];
  int64_t v70 = v22;
  sub_1C05F7928(0, v22, 0);
  uint64_t v23 = 0;
  v66[1] = v21;
  uint64_t v69 = v21 + 32;
  uint64_t v80 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v81 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56);
  uint64_t v79 = v17;
  uint64_t v77 = v5;
  char v24 = (uint64_t *)v86;
  uint64_t v25 = v93;
  do
  {
    uint64_t v26 = v23;
    uint64_t v27 = (unsigned __int8 *)(v69 + 16 * v23);
    uint64_t v76 = v26 + 1;
    uint64_t v28 = *v27;
    uint64_t v29 = *((void *)v27 + 1);
    unint64_t v30 = 0xE700000000000000;
    uint64_t v31 = 0x6E61656C6F6F62;
    switch(v28)
    {
      case 1:
        unint64_t v30 = 0xE400000000000000;
        uint64_t v31 = 1702125924;
        break;
      case 2:
        unint64_t v30 = 0xE400000000000000;
        uint64_t v31 = 1836412517;
        break;
      case 3:
        unint64_t v30 = 0xE500000000000000;
        uint64_t v31 = 0x74616F6C66;
        break;
      case 4:
        uint64_t v31 = 0x72656765746E69;
        break;
      case 5:
        unint64_t v30 = 0xE600000000000000;
        uint64_t v31 = 0x676E69727473;
        break;
      case 6:
        unint64_t v30 = 0xE300000000000000;
        uint64_t v31 = 7107189;
        break;
      case 7:
        unint64_t v30 = 0xE500000000000000;
        uint64_t v31 = 0x726F6C6F63;
        break;
      case 8:
        unint64_t v30 = 0xE500000000000000;
        uint64_t v31 = 0x6567616D69;
        break;
      case 9:
        unint64_t v30 = 0xE500000000000000;
        uint64_t v31 = 0x6F65646976;
        break;
      case 10:
        unint64_t v30 = 0xE400000000000000;
        uint64_t v31 = 1953394534;
        break;
      case 11:
        unint64_t v30 = 0xEB00000000726579;
        uint64_t v31 = 0x616C506F65646976;
        break;
      default:
        break;
    }
    uint64_t v74 = v31;
    unint64_t v75 = v30;
    swift_bridgeObjectRetain();
    uint64_t v73 = v29;
    uint64_t v32 = sub_1C151EC4C();
    int64_t v33 = *(void *)(v32 + 16);
    if (v33)
    {
      uint64_t v94 = MEMORY[0x1E4FBC860];
      sub_1C05F62D0(0, v33, 0);
      unint64_t v34 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
      uint64_t v72 = v32;
      uint64_t v35 = v32 + v34;
      uint64_t v88 = *(void *)(v68 + 72);
      uint64_t v36 = (uint64_t)v67;
      do
      {
        uint64_t v91 = v35;
        int64_t v92 = v33;
        sub_1C019FFF0(v35, (uint64_t)v24);
        uint64_t v37 = v87;
        sub_1C019FFF0((uint64_t)v24, (uint64_t)v87);
        uint64_t v38 = v84;
        sub_1C0AF5D04(v37, v84);
        uint64_t v39 = v24[1];
        uint64_t v90 = *v24;
        uint64_t v40 = *v38;
        uint64_t v41 = v38[1];
        uint64_t v43 = v38[2];
        uint64_t v42 = v38[3];
        uint64_t v44 = (uint64_t *)v85;
        sub_1C0B3AE48((uint64_t)v38 + *(int *)(v25 + 24), (uint64_t)&v85[*(int *)(v25 + 24)], &qword_1EA1A1FC0, type metadata accessor for FormatInspectionItem.Value);
        *uint64_t v44 = v40;
        v44[1] = v41;
        v44[2] = v43;
        v44[3] = v42;
        uint64_t v45 = (char *)v44 + *(int *)(v25 + 28);
        *(void *)uint64_t v45 = v90;
        *((void *)v45 + 1) = v39;
        v45[16] = 0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C0B3A394((uint64_t)v38, type metadata accessor for FormatInspectionItem);
        sub_1C0B3AF9C((uint64_t)v44, v36, type metadata accessor for FormatInspectionItem);
        (*v81)(v36, 0, 1, v25);
        sub_1C0B3A394((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v46 = v94;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F62D0(0, *(void *)(v46 + 16) + 1, 1);
          uint64_t v46 = v94;
        }
        unint64_t v48 = *(void *)(v46 + 16);
        unint64_t v47 = *(void *)(v46 + 24);
        int64_t v49 = v92;
        if (v48 >= v47 >> 1)
        {
          sub_1C05F62D0(v47 > 1, v48 + 1, 1);
          uint64_t v46 = v94;
        }
        *(void *)(v46 + 16) = v48 + 1;
        sub_1C0100634(v36, v46+ ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))+ *(void *)(v89 + 72) * v48);
        uint64_t v35 = v91 + v88;
        int64_t v33 = v49 - 1;
      }
      while (v33);
      swift_bridgeObjectRelease();
      unint64_t v17 = v79;
      uint64_t v50 = *(void *)(v46 + 16);
      if (!v50)
      {
LABEL_34:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v54 = MEMORY[0x1E4FBC860];
        goto LABEL_35;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v46 = MEMORY[0x1E4FBC860];
      uint64_t v50 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (!v50) {
        goto LABEL_34;
      }
    }
    uint64_t v51 = v89;
    uint64_t v52 = v46 + ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80));
    swift_bridgeObjectRetain();
    uint64_t v53 = *(void *)(v51 + 72);
    unint64_t v54 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v55 = v82;
      sub_1C0B3AE48(v52, v82, &qword_1EA1974F0, type metadata accessor for FormatInspectionItem);
      sub_1C0100634(v55, (uint64_t)v17);
      if ((*v80)(v17, 1, v93) == 1)
      {
        sub_1C0B3AF2C((uint64_t)v17, &qword_1EA1974F0, type metadata accessor for FormatInspectionItem);
      }
      else
      {
        uint64_t v56 = (uint64_t)v17;
        uint64_t v57 = v78;
        sub_1C0B3AF9C(v56, v78, type metadata accessor for FormatInspectionItem);
        sub_1C0B3AF9C(v57, v83, type metadata accessor for FormatInspectionItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v54 = sub_1C0EDFAD8(0, *(void *)(v54 + 16) + 1, 1, v54);
        }
        unint64_t v59 = *(void *)(v54 + 16);
        unint64_t v58 = *(void *)(v54 + 24);
        if (v59 >= v58 >> 1) {
          unint64_t v54 = sub_1C0EDFAD8(v58 > 1, v59 + 1, 1, v54);
        }
        *(void *)(v54 + 16) = v59 + 1;
        sub_1C0B3AF9C(v83, v54+ ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))+ *(void *)(v77 + 72) * v59, type metadata accessor for FormatInspectionItem);
        unint64_t v17 = v79;
      }
      v52 += v53;
      --v50;
    }
    while (v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
LABEL_35:
    uint64_t v60 = v95;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C05F7928(0, *(void *)(v60 + 16) + 1, 1);
      uint64_t v60 = v95;
    }
    uint64_t v23 = v76;
    unint64_t v62 = *(void *)(v60 + 16);
    unint64_t v61 = *(void *)(v60 + 24);
    if (v62 >= v61 >> 1)
    {
      sub_1C05F7928(v61 > 1, v62 + 1, 1);
      uint64_t v23 = v76;
      uint64_t v60 = v95;
    }
    *(void *)(v60 + 16) = v62 + 1;
    uint64_t v63 = (void *)(v60 + 40 * v62);
    unint64_t v64 = v75;
    v63[4] = v74;
    v63[5] = v64;
    v63[6] = 0;
    v63[7] = 0;
    v63[8] = v54;
  }
  while (v23 != v70);
  swift_bridgeObjectRelease();
  return v60;
}

uint64_t sub_1C0B39378@<X0>(char *a1@<X8>)
{
  return FormatOptionValue.type.getter(a1);
}

unsigned char *sub_1C0B393AC@<X0>(unsigned char *result@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E61656C6F6F62;
  switch(*result)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1702125924;
      goto LABEL_3;
    case 2:
      *a2 = 1836412517;
      a2[1] = 0xE400000000000000;
      break;
    case 3:
      *a2 = 0x74616F6C66;
      a2[1] = 0xE500000000000000;
      break;
    case 4:
      *a2 = 0x72656765746E69;
      a2[1] = 0xE700000000000000;
      break;
    case 5:
      *a2 = 0x676E69727473;
      a2[1] = 0xE600000000000000;
      break;
    case 6:
      *a2 = 7107189;
      a2[1] = 0xE300000000000000;
      break;
    case 7:
      *a2 = 0x726F6C6F63;
      a2[1] = 0xE500000000000000;
      break;
    case 8:
      *a2 = 0x6567616D69;
      a2[1] = 0xE500000000000000;
      break;
    case 9:
      *a2 = 0x6F65646976;
      a2[1] = 0xE500000000000000;
      break;
    case 0xA:
      *a2 = 1953394534;
      a2[1] = 0xE400000000000000;
      break;
    case 0xB:
      *a2 = 0x616C506F65646976;
      a2[1] = 0xEB00000000726579;
      break;
    default:
LABEL_3:
      *a2 = v3;
      a2[1] = v2;
      break;
  }
  return result;
}

BOOL _s8NewsFeed12FormatOptionV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0164B28();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0B3AEC8(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = &v32[-v16];
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = &v32[-v19];
  if (*a1 == *a2 && a1[1] == a2[1] || (v21 = sub_1C1520A9C(), BOOL result = 0, (v21 & 1) != 0))
  {
    uint64_t v23 = a1[2];
    unint64_t v36 = a2[2];
    uint64_t v37 = v23;
    if (static FormatOptionValue.== infix(_:_:)(&v37, &v36))
    {
      uint64_t v34 = v5;
      uint64_t v35 = v11;
      uint64_t v24 = a1[3];
      uint64_t v25 = a2[3];
      if (v24 == 1)
      {
        if (v25 != 1) {
          return 0;
        }
      }
      else
      {
        if (v25 == 1) {
          return 0;
        }
        if (v24)
        {
          if (!v25) {
            return 0;
          }
          sub_1BFEF95A8(a2[3]);
          sub_1BFEF95A8(v24);
          int v33 = sub_1BFEFAE14(v24, v25);
          sub_1BFEF9514(v25);
          sub_1BFEF9514(v24);
          if ((v33 & 1) == 0) {
            return 0;
          }
        }
        else if (v25)
        {
          return 0;
        }
      }
      uint64_t v26 = type metadata accessor for FormatOption();
      sub_1C0B3AE48((uint64_t)a1 + *(int *)(v26 + 28), (uint64_t)v20, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
      sub_1C0B3AE48((uint64_t)a2 + *(int *)(v26 + 28), (uint64_t)v17, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
      uint64_t v27 = *(int *)(v9 + 48);
      uint64_t v28 = (uint64_t)v35;
      uint64_t v29 = (uint64_t)&v35[v27];
      sub_1C0B3AE48((uint64_t)v20, (uint64_t)v35, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
      sub_1C0B3AE48((uint64_t)v17, v29, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
      unint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
      if (v30(v28, 1, v4) == 1)
      {
        sub_1C0B3AF2C((uint64_t)v17, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
        sub_1C0B3AF2C((uint64_t)v20, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
        if (v30(v29, 1, v4) == 1)
        {
          sub_1C0B3AF2C(v28, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
          return 1;
        }
      }
      else
      {
        sub_1C0B3AE48(v28, (uint64_t)v14, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
        if (v30(v29, 1, v4) != 1)
        {
          sub_1C0B3AF9C(v29, (uint64_t)v7, type metadata accessor for FormatVersionRequirement);
          char v31 = sub_1C02F0BB4((uint64_t)v14, (uint64_t)v7);
          sub_1C0B3A394((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
          sub_1C0B3AF2C((uint64_t)v17, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
          sub_1C0B3AF2C((uint64_t)v20, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
          sub_1C0B3A394((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
          sub_1C0B3AF2C(v28, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
          return (v31 & 1) != 0;
        }
        sub_1C0B3AF2C((uint64_t)v17, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
        sub_1C0B3AF2C((uint64_t)v20, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
        sub_1C0B3A394((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
      }
      sub_1C0B3A394(v28, (uint64_t (*)(void))sub_1C0164B28);
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C0B39A44(uint64_t a1)
{
  uint64_t result = sub_1C0B39B14(&qword_1EA1A3AE8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0B39A88(void *a1)
{
  a1[1] = sub_1C0B39B14(&qword_1EB874230);
  a1[2] = sub_1C0B39B14(&qword_1EB870AC0);
  uint64_t result = sub_1C0B39B14((unint64_t *)&unk_1EA1A3AF0);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0B39B14(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatOption();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatOption(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = a2[3];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  if (v8 != 1) {
    swift_bridgeObjectRetain();
  }
  a1[3] = v8;
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v20 = sub_1C151928C();
      char v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      v21(v10, v11, v20);
      sub_1BFF05D18();
      uint64_t v23 = v22;
      v21(&v10[*(int *)(v22 + 48)], &v11[*(int *)(v22 + 48)], v20);
      uint64_t v19 = *(int *)(v23 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v27 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v10, v11, v27);
        goto LABEL_13;
      }
      uint64_t v17 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v10, v11, v17);
      sub_1C015F8A0();
      uint64_t v19 = *(int *)(v18 + 48);
    }
    uint64_t v24 = &v10[v19];
    uint64_t v25 = &v11[v19];
    uint64_t v26 = *((void *)v25 + 1);
    *(void *)uint64_t v24 = *(void *)v25;
    *((void *)v24 + 1) = v26;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    return a1;
  }
  sub_1C0B3AEC8(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
  memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  return a1;
}

void *assignWithCopy for FormatOption(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  uint64_t v6 = a1 + 3;
  uint64_t v7 = a2[3];
  if (a1[3] == 1)
  {
    if (v7 == 1)
    {
      uint64_t v8 = 1;
LABEL_6:
      *uint64_t v6 = v8;
      goto LABEL_9;
    }
    *uint64_t v6 = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (v7 == 1)
    {
      sub_1C045B8D0((uint64_t)(a1 + 3));
      uint64_t v8 = a2[3];
      goto LABEL_6;
    }
    *uint64_t v6 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_9:
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v28 = sub_1C151928C();
        uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
        v29(v10, v11, v28);
        sub_1BFF05D18();
        uint64_t v31 = v30;
        v29(&v10[*(int *)(v30 + 48)], &v11[*(int *)(v30 + 48)], v28);
        uint64_t v20 = *(int *)(v31 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v34 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v10, v11, v34);
          goto LABEL_25;
        }
        uint64_t v18 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v10, v11, v18);
        sub_1C015F8A0();
        uint64_t v20 = *(int *)(v19 + 48);
      }
      uint64_t v32 = &v10[v20];
      int v33 = &v11[v20];
      *(void *)uint64_t v32 = *(void *)v33;
      *((void *)v32 + 1) = *((void *)v33 + 1);
      swift_bridgeObjectRetain();
LABEL_25:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      return a1;
    }
    goto LABEL_16;
  }
  if (v16)
  {
    sub_1C0B3A394((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
LABEL_16:
    sub_1C0B3AEC8(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
    memcpy(v10, v11, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  if (a1 != a2)
  {
    sub_1C0B3A394((uint64_t)v10, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    int v22 = swift_getEnumCaseMultiPayload();
    if (v22 == 2)
    {
      uint64_t v36 = sub_1C151928C();
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
      v37(v10, v11, v36);
      sub_1BFF05D18();
      uint64_t v39 = v38;
      v37(&v10[*(int *)(v38 + 48)], &v11[*(int *)(v38 + 48)], v36);
      uint64_t v40 = *(int *)(v39 + 64);
      uint64_t v41 = &v10[v40];
      uint64_t v42 = &v11[v40];
      *(void *)uint64_t v41 = *(void *)v42;
      *((void *)v41 + 1) = *((void *)v42 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v22 == 1)
      {
        uint64_t v23 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v10, v11, v23);
        sub_1C015F8A0();
        uint64_t v25 = *(int *)(v24 + 48);
        uint64_t v26 = &v10[v25];
        uint64_t v27 = &v11[v25];
        *(void *)uint64_t v26 = *(void *)v27;
        *((void *)v26 + 1) = *((void *)v27 + 1);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v43 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v10, v11, v43);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C0B3A394(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for FormatOption(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v15 = sub_1C151928C();
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
      v20(v6, v7, v15);
      sub_1BFF05D18();
      uint64_t v17 = v16;
      v20(&v6[*(int *)(v16 + 48)], &v7[*(int *)(v16 + 48)], v15);
      uint64_t v14 = *(int *)(v17 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v18 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v6, v7, v18);
        goto LABEL_9;
      }
      uint64_t v12 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v6, v7, v12);
      sub_1C015F8A0();
      uint64_t v14 = *(int *)(v13 + 48);
    }
    *(_OWORD *)&v6[v14] = *(_OWORD *)&v7[v14];
LABEL_9:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    return a1;
  }
  sub_1C0B3AEC8(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
  memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  return a1;
}

void *assignWithTake for FormatOption(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  uint64_t v7 = a1 + 3;
  uint64_t v8 = a2[3];
  if (a1[3] == 1) {
    goto LABEL_4;
  }
  if (v8 == 1)
  {
    sub_1C045B8D0((uint64_t)(a1 + 3));
    uint64_t v8 = 1;
LABEL_4:
    uint64_t *v7 = v8;
    goto LABEL_6;
  }
  uint64_t *v7 = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v25 = sub_1C151928C();
        uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32);
        v35(v10, v11, v25);
        sub_1BFF05D18();
        uint64_t v27 = v26;
        v35(&v10[*(int *)(v26 + 48)], &v11[*(int *)(v26 + 48)], v25);
        uint64_t v20 = *(int *)(v27 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v28 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v10, v11, v28);
          goto LABEL_22;
        }
        uint64_t v18 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v10, v11, v18);
        sub_1C015F8A0();
        uint64_t v20 = *(int *)(v19 + 48);
      }
      *(_OWORD *)&v10[v20] = *(_OWORD *)&v11[v20];
LABEL_22:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      return a1;
    }
    goto LABEL_13;
  }
  if (v16)
  {
    sub_1C0B3A394((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
LABEL_13:
    sub_1C0B3AEC8(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
    memcpy(v10, v11, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  if (a1 != a2)
  {
    sub_1C0B3A394((uint64_t)v10, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    int v22 = swift_getEnumCaseMultiPayload();
    if (v22 == 2)
    {
      uint64_t v30 = sub_1C151928C();
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32);
      v31(v10, v11, v30);
      sub_1BFF05D18();
      uint64_t v33 = v32;
      v31(&v10[*(int *)(v32 + 48)], &v11[*(int *)(v32 + 48)], v30);
      *(_OWORD *)&v10[*(int *)(v33 + 64)] = *(_OWORD *)&v11[*(int *)(v33 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v22 == 1)
      {
        uint64_t v23 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v10, v11, v23);
        sub_1C015F8A0();
        *(_OWORD *)&v10[*(int *)(v24 + 48)] = *(_OWORD *)&v11[*(int *)(v24 + 48)];
      }
      else
      {
        uint64_t v34 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v10, v11, v34);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C0B3AB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C0B3AEC8(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0B3AC0C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1C0B3AEC8(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C0B3ACE4()
{
  sub_1C0B3AEC8(319, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1C0B3ADC0()
{
  unint64_t result = qword_1EB85EF20;
  if (!qword_1EB85EF20)
  {
    sub_1C0B3AEC8(255, (unint64_t *)&unk_1EB879D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EF20);
  }
  return result;
}

uint64_t sub_1C0B3AE48(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C0B3AEC8(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1C0B3AEC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0B3AF2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C0B3AEC8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0B3AF9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0B3B004(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatOption();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall FormatBlueprintViewCellProvider.register(in:)(UICollectionView *in)
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(UICollectionView *, uint64_t, uint64_t))(v3 + 56))(in, ObjectType, v3);
}

id FormatBlueprintViewCellProvider.cell(for:with:in:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v14)(void *__return_ptr, uint64_t, uint64_t, char *, uint64_t *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  void v24[3];

  uint64_t v20 = a3;
  uint64_t v21 = a4;
  sub_1C00BE41C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v6);
  sub_1C0B3B328();
  sub_1C151B1BC();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v4 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v23 = 0;
  int v22 = v24[1];
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  uint64_t v14 = *(void (**)(void *__return_ptr, uint64_t, uint64_t, char *, uint64_t *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v10 + 72);
  swift_retain();
  v14(v24, v20, v21, &v23, &v22, sub_1C0B3B54C, v13, ObjectType, v10);
  swift_release();
  swift_release();
  swift_release();
  int v15 = (void *)(v24[0] & 0xFFFFFFFFFFFFFFFLL);
  int v16 = (id)sub_1C0CC91BC();

  return v16;
}

unint64_t sub_1C0B3B2D0()
{
  unint64_t result = qword_1EB8656D0;
  if (!qword_1EB8656D0)
  {
    type metadata accessor for FormatModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8656D0);
  }
  return result;
}

void sub_1C0B3B328()
{
  if (!qword_1EB864270)
  {
    sub_1C007D02C();
    unint64_t v0 = sub_1C151B1CC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864270);
    }
  }
}

uint64_t sub_1C0B3B384()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0B3B3BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    if (MEMORY[0x1C18C9C60](result + 16))
    {
      uint64_t v7 = *(void *)(v6 + 24);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v6, a1, a3, ObjectType, v7);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C0B3B480()
{
  sub_1C00BE41C();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1C0B3B54C(uint64_t a1)
{
  sub_1C00BE41C();
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  return sub_1C0B3B3BC(a1, v4, v5);
}

uint64_t FormatBlueprintViewCellProvider.deinit()
{
  sub_1C019B9B4(v0 + 16);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t FormatBlueprintViewCellProvider.__deallocating_deinit()
{
  sub_1C019B9B4(v0 + 16);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0B3B628(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*(void *)v1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 56))(v2, ObjectType, v3);
}

id sub_1C0B3B680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  id result = FormatBlueprintViewCellProvider.cell(for:with:in:at:)(a1, a2, *a3, a4);
  *a5 = result;
  return result;
}

uint64_t dispatch thunk of FormatBlueprintViewCellProviderDelegate.formatBlueprintViewCellProvider(_:handleAction:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for FormatBlueprintViewCellProvider()
{
  return self;
}

uint64_t method lookup function for FormatBlueprintViewCellProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatBlueprintViewCellProvider);
}

uint64_t sub_1C0B3B704(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v17 = a5;
  sub_1C0B4400C(0, qword_1EB870C88, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v16 - v9);
  uint64_t v11 = type metadata accessor for DebugGroupLayoutKey();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0D88764(v10);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_1C0B3CC1C((uint64_t)v10);
  }
  sub_1C0B43A68((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  sub_1C151CA1C();
  if (qword_1EB87B120 != -1) {
    swift_once();
  }
  if (sub_1C151C9EC())
  {
    sub_1C0B42500((uint64_t)v14, a4 + 8, a1, (uint64_t)a2);
  }
  else
  {
    if (qword_1EB87B118 != -1) {
      swift_once();
    }
    if (sub_1C151C9EC())
    {
      sub_1C0B3B9EC((uint64_t)v14, a4 + 8, a1, a2, v17);
    }
    else
    {
      if (qword_1EB87B108 != -1) {
        swift_once();
      }
      if (sub_1C151C9EC()) {
        sub_1C0B42A50((uint64_t)v14, a4 + 8, a1, (uint64_t)a2);
      }
    }
  }
  return sub_1BFF9C95C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
}

void sub_1C0B3B9EC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for DebugGroupLayoutKey();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v5 + 20, v5[23]);
  int v15 = (void *)sub_1C151AE2C();
  if (v15)
  {
    uint64_t v16 = v15;
    id v17 = objc_msgSend(v15, sel_rootViewController);

    if (v17)
    {
      uint64_t v45 = a5;
      unint64_t v47 = a4;
      id v46 = (id)sub_1C151F49C();

      sub_1BFF1B074(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
      __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
      sub_1BFCB6824(0, &qword_1EB8790E8);
      sub_1BFC66384(a2, (uint64_t)v55);
      uint64_t v18 = swift_allocObject();
      sub_1BFC773DC(v55, v18 + 16);
      sub_1C151817C();
      swift_release();
      if (v57)
      {
        uint64_t v19 = v6[7];
        sub_1BFC66384((uint64_t)(v6 + 25), (uint64_t)v55);
        __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
        sub_1BFCB6824(0, &qword_1EB8953F0);
        swift_retain();
        sub_1C151819C();
        if (v54)
        {
          __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
          type metadata accessor for FormatSystemFactory();
          uint64_t v20 = sub_1C151818C();
          if (v20)
          {
            uint64_t v21 = v20;
            __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
            sub_1BFCB6824(0, &qword_1EB894738);
            sub_1C151819C();
            if (v52)
            {
              __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
              type metadata accessor for FeedModelFactory();
              uint64_t v22 = sub_1C151818C();
              if (v22)
              {
                uint64_t v23 = v22;
                __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
                sub_1BFCB6824(0, &qword_1EB894DB0);
                sub_1C151819C();
                uint64_t v24 = v48[0];
                if (v48[0])
                {
                  uint64_t v25 = v48[1];
                  type metadata accessor for DebugFormatModelFactory();
                  uint64_t v26 = (void *)swift_allocObject();
                  _OWORD v26[2] = v23;
                  v26[3] = v24;
                  v26[4] = v25;
                  uint64_t v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v56, v57);
                  __n128 v28 = MEMORY[0x1F4188790](v27);
                  uint64_t v30 = (uint64_t *)((char *)&v44 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
                  (*(void (**)(uint64_t *, __n128))(v31 + 16))(v30, v28);
                  uint64_t v32 = *v30;
                  uint64_t v33 = type metadata accessor for DebugGroupLayoutViewFactory();
                  uint64_t v50 = &off_1F1C29940;
                  uint64_t v49 = v33;
                  v48[0] = v32;
                  uint64_t v34 = (char *)objc_allocWithZone((Class)type metadata accessor for DebugFormatMainViewController());
                  uint64_t v35 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v48, v49);
                  __n128 v36 = MEMORY[0x1F4188790](v35);
                  uint64_t v38 = (uint64_t *)((char *)&v44 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
                  (*(void (**)(uint64_t *, __n128))(v39 + 16))(v38, v36);
                  uint64_t v40 = *v38;
                  uint64_t v41 = v45;
                  swift_retain();
                  swift_unknownObjectRetain();
                  uint64_t v42 = sub_1C0B40E40((uint64_t)v14, v40, v19, a3, v47, v41, (uint64_t)v55, (uint64_t)v53, v21, (uint64_t)v51, (uint64_t)v26, v34);
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
                  objc_msgSend(v42, sel_setModalPresentationStyle_, 0);
                  id v43 = v46;
                  objc_msgSend(v46, sel_presentViewController_animated_completion_, v42, 1, 0);

                  return;
                }
LABEL_16:
                __break(1u);
                return;
              }
LABEL_15:
              __break(1u);
              goto LABEL_16;
            }
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
LABEL_13:
          __break(1u);
          goto LABEL_14;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_13;
    }
  }
}

uint64_t sub_1C0B3BF98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugGroupLayoutKey();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  sub_1C0B43DE8(0, &qword_1EA19D050, (uint64_t)&type metadata for GroupLayoutAttributes, MEMORY[0x1E4FAB088]);
  sub_1BFF1B074(a1, (uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_1C0B43A68((uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  *(void *)(v8 + ((v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  swift_retain();
  return sub_1C151902C();
}

uint64_t sub_1C0B3C11C(void *a1)
{
  type metadata accessor for GroupLayoutBindingContext();
  uint64_t v3 = swift_projectBox();
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v4);
  uint64_t v6 = (char *)a1 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 28);
  swift_beginAccess();
  (*(void (**)(void *__return_ptr, uint64_t, char *, uint64_t, uint64_t))(v5 + 48))(v10, v3, v6, v4, v5);
  uint64_t result = swift_endAccess();
  if (!v1)
  {
    uint64_t v8 = v11;
    uint64_t v9 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v8, v9);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  return result;
}

void sub_1C0B3C234(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v53 = a7;
  uint64_t v54 = a6;
  uint64_t v59 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1F4188790](v59);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DebugGroupLayoutKey();
  MEMORY[0x1F4188790](v13 - 8);
  int v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v56 = *(unsigned __int8 *)a1;
  uint64_t v16 = a1[1];
  uint64_t v17 = a1[2];
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  uint64_t v20 = a1[6];
  uint64_t v57 = a1[5];
  uint64_t v58 = v20;
  type metadata accessor for GroupLayoutBindingContext();
  uint64_t v55 = swift_projectBox();
  uint64_t v21 = (void *)a2[9];
  id v60 = (id)a2[8];
  uint64_t v52 = v15;
  sub_1BFF1B074(a3, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  uint64_t v22 = a2[5];
  uint64_t v70 = a2[6];
  __swift_project_boxed_opaque_existential_1(a2 + 2, v22);
  sub_1BFCB6824(0, &qword_1EB8790E8);
  sub_1BFC66384(a4, (uint64_t)v67);
  uint64_t v23 = swift_allocObject();
  sub_1BFC773DC(v67, v23 + 16);
  id v51 = v60;
  id v60 = v21;
  swift_unknownObjectRetain();
  sub_1C151817C();
  swift_release();
  if (!v69)
  {
    __break(1u);
    goto LABEL_11;
  }
  sub_1C066A1C4();
  uint64_t v25 = &v12[*(int *)(v24 + 48)];
  uint64_t v26 = v55;
  swift_beginAccess();
  sub_1BFF1B074(v26, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  char *v25 = v56;
  *((void *)v25 + 1) = v16;
  *((void *)v25 + 2) = v17;
  *((void *)v25 + 3) = v18;
  *((void *)v25 + 4) = v19;
  uint64_t v27 = v58;
  *((void *)v25 + 5) = v57;
  *((void *)v25 + 6) = v27;
  swift_storeEnumTagMultiPayload();
  __swift_project_boxed_opaque_existential_1(a2 + 2, a2[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C151819C();
  if (!*(void *)&v67[0])
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a2 + 2, a2[5]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB895408);
  sub_1C151819C();
  if (!v66[3])
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a2 + 2, a2[5]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB895310);
  sub_1C151819C();
  if (!v65[3])
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a2 + 2, a2[5]);
  sub_1BFCB6824(0, &qword_1EB88D6F0);
  sub_1C151819C();
  if (!v64[3])
  {
LABEL_14:
    __break(1u);
    return;
  }
  uint64_t v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v68, v69);
  __n128 v29 = MEMORY[0x1F4188790](v28);
  uint64_t v31 = (uint64_t *)((char *)&v50 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v32 + 16))(v31, v29);
  uint64_t v33 = *v31;
  uint64_t v62 = type metadata accessor for DebugGroupLayoutViewFactory();
  uint64_t v63 = &off_1F1C29940;
  v61[0] = v33;
  uint64_t v34 = (char *)objc_allocWithZone((Class)type metadata accessor for DebugInspectViewController());
  uint64_t v35 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v61, v62);
  __n128 v36 = MEMORY[0x1F4188790](v35);
  uint64_t v38 = (uint64_t *)((char *)&v50 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v39 + 16))(v38, v36);
  uint64_t v40 = *v38;
  uint64_t v41 = v54;
  swift_unknownObjectRetain();
  uint64_t v42 = v51;
  id v43 = sub_1C0B433CC(v51, (uint64_t)v60, (uint64_t)v52, v40, (uint64_t)v12, v41, v53, (uint64_t)v67, (uint64_t)v66, (uint64_t)v65, (uint64_t)v64, v34);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  id v44 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v43);

  id v45 = objc_msgSend(v44, sel_navigationBar);
  id v46 = objc_msgSend(self, sel_systemGrayColor);
  objc_msgSend(v45, sel_setTintColor_, v46);

  __swift_project_boxed_opaque_existential_1(a2 + 20, a2[23]);
  unint64_t v47 = (void *)sub_1C151AE2C();
  if (v47)
  {
    unint64_t v48 = v47;
    id v49 = objc_msgSend(v47, sel_rootViewController);

    if (v49)
    {
      objc_msgSend(v49, sel_presentViewController_animated_completion_, v44, 1, 0);

      id v44 = v49;
    }
  }
}

uint64_t sub_1C0B3C8E8()
{
  if (qword_1EB87B060 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C700;
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1529AE0;
  sub_1BFCB6824(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 64) = sub_1BFE9C558();
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0xE000000000000000;
  sub_1C15197BC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0B3CA24(void *a1)
{
  return sub_1C1517F6C();
}

uint64_t sub_1C0B3CA90()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0B3CB00(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C0B3B704(a1, a2, a3, a4, a5);
}

BOOL sub_1C0B3CB24()
{
  sub_1C0B4400C(0, qword_1EB870C88, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - v1;
  sub_1C0D88764((uint64_t *)((char *)&v6 - v1));
  uint64_t v3 = type metadata accessor for DebugGroupLayoutKey();
  BOOL v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) != 1;
  sub_1C0B3CC1C((uint64_t)v2);
  return v4;
}

uint64_t sub_1C0B3CC1C(uint64_t a1)
{
  sub_1C0B4400C(0, qword_1EB870C88, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0B3CCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v275 = a7;
  uint64_t v276 = a8;
  uint64_t v264 = a6;
  uint64_t v273 = a3;
  uint64_t v274 = a5;
  uint64_t v277 = a4;
  uint64_t v279 = a1;
  uint64_t v280 = *a11;
  uint64_t v12 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v271 = (char *)&v243 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v261 = (int *)type metadata accessor for DebugGroupLayoutKey();
  uint64_t v268 = *((void *)v261 - 1);
  MEMORY[0x1F4188790](v261);
  uint64_t v269 = v14;
  uint64_t v270 = (uint64_t)&v243 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v265 = type metadata accessor for FormatDerivedDataCompilerSettings();
  MEMORY[0x1F4188790](v265);
  uint64_t v266 = (uint64_t)&v243 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v267 = (uint64_t *)((char *)&v243 - v17);
  uint64_t v18 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v262 = (uint64_t)&v243 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v263 = (uint64_t)&v243 - v21;
  uint64_t v260 = (void *)sub_1C151F55C();
  uint64_t v258 = (void *)*(v260 - 1);
  MEMORY[0x1F4188790](v260);
  uint64_t v259 = (char *)&v243 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v256 = sub_1C151F52C();
  uint64_t v254 = *(void **)(v256 - 8);
  MEMORY[0x1F4188790](v256);
  uint64_t v257 = (char *)&v243 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C151E1DC();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v255 = (char *)&v243 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B43AD0(0);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v252 = (uint64_t)&v243 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v253 = (char *)&v243 - v29;
  sub_1C0B43B04(0);
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v281 = (uint64_t *)((char *)&v243 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v243 - v33;
  uint64_t v35 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v35);
  v286[3] = type metadata accessor for DebugGroupLayoutViewFactory();
  v286[4] = &off_1F1C29940;
  v286[0] = a2;
  uint64_t v36 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_imageCache;
  type metadata accessor for DebugFormatImageCache();
  swift_allocObject();
  *(void *)((char *)a11 + v36) = sub_1C126BB20();
  uint64_t v278 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_resizingProvider;
  type metadata accessor for FormatLayoutResizingProvider();
  uint64_t v37 = (void *)swift_allocObject();
  *(void *)&v288[0] = MEMORY[0x1E4FBC860];
  sub_1C0B43A20((unint64_t *)&qword_1EB87C6F0, MEMORY[0x1E4FAA868]);
  uint64_t v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA868];
  sub_1C0B4400C(0, (unint64_t *)&unk_1EB880C60, MEMORY[0x1E4FAA868], MEMORY[0x1E4FBB320]);
  sub_1C0B43CC8((unint64_t *)&qword_1EB880C70, (unint64_t *)&unk_1EB880C60, v38);
  sub_1C151FFBC();
  sub_1C1517ECC();
  swift_allocObject();
  uint64_t v39 = sub_1C1517EBC();
  uint64_t v40 = MEMORY[0x1E4FBC868];
  v37[2] = v39;
  v37[3] = v40;
  v37[4] = 0;
  v37[5] = 0;
  *(void *)((char *)a11 + v278) = v37;
  uint64_t v41 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__metadata;
  uint64_t v42 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v34, 1, 1, v42);
  sub_1BFF1B074((uint64_t)v34, (uint64_t)v281, (uint64_t (*)(void))sub_1C0B43B04);
  id v43 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FAAC80];
  sub_1C0B4400C(0, &qword_1EA1A3B88, (uint64_t (*)(uint64_t))sub_1C0B43B04, MEMORY[0x1E4FAAC80]);
  swift_allocObject();
  uint64_t v44 = sub_1C151892C();
  sub_1BFF9C95C((uint64_t)v34, (uint64_t (*)(void))sub_1C0B43B04);
  *(void *)((char *)a11 + v41) = v44;
  uint64_t v45 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__package;
  *(void *)&v288[0] = 0;
  sub_1C0B4400C(0, &qword_1EA1A3B90, (uint64_t (*)(uint64_t))sub_1C0B43B38, v43);
  swift_allocObject();
  *(void *)((char *)a11 + v45) = sub_1C151892C();
  id v46 = (void *)((char *)a11 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_sourceTheme);
  sub_1C0D3989C(v287);
  v46[3] = &type metadata for DebugFormatDebuggerSourceTheme.Cora;
  v46[4] = &off_1F1BF8358;
  unint64_t v47 = (_OWORD *)swift_allocObject();
  *id v46 = v47;
  long long v48 = v287[5];
  v47[5] = v287[4];
  v47[6] = v48;
  v47[7] = v287[6];
  long long v49 = v287[1];
  v47[1] = v287[0];
  v47[2] = v49;
  long long v50 = v287[3];
  v47[3] = v287[2];
  v47[4] = v50;
  uint64_t v51 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showSource;
  LOBYTE(v288[0]) = 0;
  sub_1C0B43DE8(0, (unint64_t *)&unk_1EA1A3BA0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAAC80]);
  uint64_t v278 = v52;
  swift_allocObject();
  *(void *)((char *)a11 + v51) = sub_1C151892C();
  uint64_t v53 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__sourceFile;
  sub_1C017F2B4(v288);
  sub_1C09CFC44((uint64_t)v288, (uint64_t)&v283);
  uint64_t v54 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0B43C04(0, &qword_1EA1A3BB0, (unint64_t *)&qword_1EA1A2580, (uint64_t)&type metadata for DebugFormatFileSource, MEMORY[0x1E4FBB718]);
  swift_allocObject();
  *(void *)((char *)a11 + v53) = sub_1C151892C();
  uint64_t v55 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__sourcePath;
  *(void *)&long long v283 = MEMORY[0x1E4FBC860];
  sub_1C0B43C04(0, &qword_1EA1A3BB8, &qword_1EA1A3BC0, (uint64_t)&type metadata for FormatSourceMap, MEMORY[0x1E4FBB320]);
  swift_allocObject();
  *(void *)((char *)a11 + v55) = sub_1C151892C();
  uint64_t v56 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__sourceError;
  sub_1C0B43C04(0, &qword_1EA1A3BC8, &qword_1EA1A3BD0, (uint64_t)&type metadata for DebugFormatFileSourceError, v54);
  long long v283 = 0u;
  long long v284 = 0u;
  uint64_t v285 = 0;
  swift_allocObject();
  *(void *)((char *)a11 + v56) = sub_1C151892C();
  uint64_t v57 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showSourceMetrics;
  if (qword_1EA194780 != -1) {
    swift_once();
  }
  sub_1C0B43FBC(0, (unint64_t *)&qword_1EA1A3BD8, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB468], MEMORY[0x1E4FAB2F8]);
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v57) = sub_1C15170EC();
  uint64_t v58 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__statusMessage;
  *(void *)&long long v283 = 0x2E676E6964616F4CLL;
  *((void *)&v283 + 1) = 0xEA00000000002E2ELL;
  uint64_t v59 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FAAC80];
  sub_1C0B43DE8(0, &qword_1EA1A3BE0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAAC80]);
  swift_allocObject();
  *(void *)((char *)a11 + v58) = sub_1C151892C();
  uint64_t v60 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__statusProgress;
  LODWORD(v283) = 0;
  sub_1C0B43DE8(0, &qword_1EA1A3BE8, MEMORY[0x1E4FBB470], v59);
  swift_allocObject();
  *(void *)((char *)a11 + v60) = sub_1C151892C();
  uint64_t v61 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__uploadMessage;
  *(void *)&long long v283 = 0x2E676E6964616F4CLL;
  *((void *)&v283 + 1) = 0xEA00000000002E2ELL;
  swift_allocObject();
  *(void *)((char *)a11 + v61) = sub_1C151892C();
  uint64_t v62 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__uploadProgress;
  LODWORD(v283) = 0;
  swift_allocObject();
  *(void *)((char *)a11 + v62) = sub_1C151892C();
  uint64_t v63 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__reloadQueueDepth;
  *(void *)&long long v283 = 0;
  sub_1C0B43DE8(0, &qword_1EA1A3BF0, MEMORY[0x1E4FBB550], v59);
  swift_allocObject();
  *(void *)((char *)a11 + v63) = sub_1C151892C();
  uint64_t v64 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__canvasDevice;
  if (qword_1EA194640 != -1) {
    swift_once();
  }
  sub_1C0B43E34(0, &qword_1EA1A3BF8, (void (*)(void))sub_1C05E7068);
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v64) = sub_1C15170EC();
  uint64_t v65 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__canvasDeviceOrientation;
  uint64_t v66 = MEMORY[0x1E4FBC860];
  if (qword_1EA194648 != -1) {
    swift_once();
  }
  sub_1C0B43E34(0, &qword_1EA1A3C08, (void (*)(void))sub_1C05E7014);
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v65) = sub_1C15170EC();
  uint64_t v67 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__canvasContentSizeCategory;
  if (qword_1EA194650 != -1) {
    swift_once();
  }
  sub_1C0B43E34(0, &qword_1EA1A3C18, (void (*)(void))sub_1C05E6FC0);
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v67) = sub_1C15170EC();
  uint64_t v68 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__canvasIncreaseContrast;
  if (qword_1EA194658 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v68) = sub_1C15170EC();
  uint64_t v69 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__canvasBoldText;
  if (qword_1EA194660 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v69) = sub_1C15170EC();
  uint64_t v70 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__canvasDeviceShowOldHardware;
  if (qword_1EA194668 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v70) = sub_1C15170EC();
  uint64_t v71 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__canvasBackgroundColor;
  if (qword_1EA194670 != -1) {
    swift_once();
  }
  sub_1C0B43E34(0, &qword_1EA1A3C28, (void (*)(void))sub_1C05E6F18);
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v71) = sub_1C15170EC();
  uint64_t v72 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__canvasBackgroundCustomLightHexValue;
  if (qword_1EA194678 != -1) {
    swift_once();
  }
  sub_1C0B43FBC(0, &qword_1EA1A3C38, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB458], MEMORY[0x1E4FAB2F8]);
  uint64_t v74 = v73;
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v72) = sub_1C15170EC();
  uint64_t v75 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__canvasBackgroundCustomDarkHexValue;
  if (qword_1EA194680 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v75) = sub_1C15170EC();
  uint64_t v76 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__layoutOrder;
  if (qword_1EA194608 != -1) {
    swift_once();
  }
  sub_1C0B43E34(0, (unint64_t *)&unk_1EA1A3C40, (void (*)(void))sub_1C05E720C);
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v76) = sub_1C15170EC();
  uint64_t v77 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showMissingOptionBindings;
  if (qword_1EA194600 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v77) = sub_1C15170EC();
  uint64_t v78 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__consoleTrackingNow;
  LOBYTE(v283) = 1;
  swift_allocObject();
  *(void *)((char *)a11 + v78) = sub_1C151892C();
  uint64_t v79 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__consoleAnimating;
  LOBYTE(v283) = 0;
  swift_allocObject();
  *(void *)((char *)a11 + v79) = sub_1C151892C();
  uint64_t v80 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__consoleDisplay;
  if (qword_1EA194568 != -1) {
    swift_once();
  }
  sub_1C0B43E34(0, (unint64_t *)&unk_1EA1A3C50, (void (*)(void))sub_1C05E6EC4);
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v80) = sub_1C15170EC();
  uint64_t v81 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__consolePaneDisplay;
  if (qword_1EA194570 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v81) = sub_1C15170EC();
  uint64_t v82 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__consoleFilterTerm;
  if (qword_1EA194578 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v82) = sub_1C15170EC();
  uint64_t v83 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__wildcardSlotFallback;
  if (qword_1EA1945F8 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v83) = sub_1C15170EC();
  uint64_t v84 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__layoutIdentifier;
  if (qword_1EA194590 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v84) = sub_1C15170EC();
  uint64_t v85 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__backgroundLayoutIdentifier;
  if (qword_1EA194598 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v85) = sub_1C15170EC();
  uint64_t v86 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__groupIdentifier;
  if (qword_1EA1945A8 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v86) = sub_1C15170EC();
  uint64_t v87 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__backgroundGroupIdentifier;
  if (qword_1EA1945B0 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v87) = sub_1C15170EC();
  uint64_t v88 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__bindingIdentifier;
  if (qword_1EA1945B8 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v88) = sub_1C15170EC();
  uint64_t v89 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__allowSelection;
  if (qword_1EA194698 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v89) = sub_1C15170EC();
  uint64_t v90 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__alwaysBounceVertical;
  if (qword_1EA1945E8 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v90) = sub_1C15170EC();
  uint64_t v91 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__alwaysBounceHorizontal;
  if (qword_1EA1945F0 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v91) = sub_1C15170EC();
  uint64_t v92 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showColumns;
  if (qword_1EA194528 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v92) = sub_1C15170EC();
  uint64_t v93 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutMargins;
  if (qword_1EA194530 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v93) = sub_1C15170EC();
  uint64_t v94 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutPaneOnSnapshot;
  if (qword_1EA194548 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v94) = sub_1C15170EC();
  uint64_t v95 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__userInterfaceStyle;
  if (qword_1EA1945C8 != -1) {
    swift_once();
  }
  sub_1C0B43E94(0, (unint64_t *)&unk_1EA1A3C60, type metadata accessor for UIUserInterfaceStyle, (void (*)(void))sub_1C0B43C60);
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v95) = sub_1C15170EC();
  uint64_t v96 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__interfaceLayoutDirection;
  if (qword_1EA1945D0 != -1) {
    swift_once();
  }
  sub_1C0B43E94(0, (unint64_t *)&unk_1EA1A3C70, type metadata accessor for UIUserInterfaceLayoutDirection, (void (*)(void))sub_1C0B43C94);
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v96) = sub_1C15170EC();
  uint64_t v97 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showRulers;
  if (qword_1EA194688 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v97) = sub_1C15170EC();
  uint64_t v98 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showToolbar;
  if (qword_1EA194690 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v98) = sub_1C15170EC();
  uint64_t v99 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__inventorySearchTerm;
  if (qword_1EA194638 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v99) = sub_1C15170EC();
  uint64_t v100 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__inventoryShowDeprecatedPackages;
  if (qword_1EA194560 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v100) = sub_1C15170EC();
  uint64_t v101 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__debuggerSearchTerm;
  if (qword_1EA194770 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v101) = sub_1C15170EC();
  uint64_t v102 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__inspectorSearchTerm;
  if (qword_1EA194778 != -1) {
    swift_once();
  }
  uint64_t v272 = v74;
  swift_allocObject();
  swift_retain();
  *(void *)((char *)a11 + v102) = sub_1C15170EC();
  uint64_t v103 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__history;
  *(void *)&long long v283 = v66;
  sub_1C0B43C04(0, &qword_1EA1A3C80, &qword_1EA1A3C88, (uint64_t)&type metadata for DebugFormatHistory, MEMORY[0x1E4FBB320]);
  swift_allocObject();
  *(void *)((char *)a11 + v103) = sub_1C151892C();
  uint64_t v104 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__isCompiling;
  LOBYTE(v283) = 0;
  swift_allocObject();
  *(void *)((char *)a11 + v104) = sub_1C151892C();
  uint64_t v105 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__isStatusReady;
  LOBYTE(v283) = 0;
  swift_allocObject();
  *(void *)((char *)a11 + v105) = sub_1C151892C();
  uint64_t v106 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__isSnapshotDebugging;
  LOBYTE(v283) = 0;
  swift_allocObject();
  *(void *)((char *)a11 + v106) = sub_1C151892C();
  uint64_t v107 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__isConnected;
  LOBYTE(v283) = 0;
  swift_allocObject();
  *(void *)((char *)a11 + v107) = sub_1C151892C();
  uint64_t v108 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__compilerResult;
  *(void *)&long long v283 = v66;
  sub_1C0B4400C(0, (unint64_t *)&qword_1EA1A3C90, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCompilerResultEntry, MEMORY[0x1E4FBB320]);
  sub_1C0B43CC8((unint64_t *)&qword_1EA1A1620, (unint64_t *)&qword_1EA1A3C90, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCompilerResultEntry);
  uint64_t v281 = a11;
  uint64_t v109 = sub_1C151E93C();
  *(void *)&long long v283 = v66;
  *((void *)&v283 + 1) = v109;
  uint64_t v110 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FAAC80];
  sub_1C0B43DE8(0, &qword_1EA1A3CA0, (uint64_t)&type metadata for DebugFormatCompilerResult, MEMORY[0x1E4FAAC80]);
  swift_allocObject();
  *(void *)((char *)v281 + v108) = sub_1C151892C();
  uint64_t v111 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__compilerProgress;
  unint64_t v112 = sub_1C018F214(v66);
  *(void *)&long long v283 = v66;
  uint64_t v113 = (uint64_t)v281;
  uint64_t v114 = sub_1C151E93C();
  *(void *)&long long v283 = v66;
  *((void *)&v283 + 1) = v114;
  *(void *)&long long v284 = v112;
  sub_1C0B43DE8(0, &qword_1EA1A3CA8, (uint64_t)&type metadata for DebugFormatCompilerProgress, v110);
  swift_allocObject();
  *(void *)(v113 + v111) = sub_1C151892C();
  uint64_t v115 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__layoutContext;
  uint64_t v116 = type metadata accessor for DebugFormatEditorLayoutContext();
  uint64_t v117 = (uint64_t)v253;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v253, 1, 1, v116);
  sub_1BFF1B074(v117, v252, (uint64_t (*)(void))sub_1C0B43AD0);
  sub_1C0B4400C(0, &qword_1EA1A3CB0, (uint64_t (*)(uint64_t))sub_1C0B43AD0, MEMORY[0x1E4FAAC80]);
  swift_allocObject();
  uint64_t v118 = sub_1C151892C();
  sub_1BFF9C95C(v117, (uint64_t (*)(void))sub_1C0B43AD0);
  *(void *)(v113 + v115) = v118;
  uint64_t v119 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__debuggerWatchSelectors;
  if (qword_1EA194748 != -1) {
    swift_once();
  }
  sub_1C0B43D2C();
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v119) = sub_1C15170EC();
  uint64_t v120 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__debuggerWatchOptionsIdentifiers;
  if (qword_1EA194750 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v120) = sub_1C15170EC();
  uint64_t v121 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__uploadEnabled;
  LOBYTE(v283) = 0;
  swift_allocObject();
  *(void *)(v113 + v121) = sub_1C151892C();
  uint64_t v122 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__uploadTarget;
  if (qword_1EA194610 != -1) {
    swift_once();
  }
  sub_1C0B43E34(0, (unint64_t *)&unk_1EA1A3CC0, (void (*)(void))sub_1C022F5D0);
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v122) = sub_1C15170EC();
  uint64_t v123 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__uploadEnvironment;
  if (qword_1EA194620 != -1) {
    swift_once();
  }
  sub_1C0B43E34(0, (unint64_t *)&unk_1EA1A3CD0, (void (*)(void))sub_1C022F57C);
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v123) = sub_1C15170EC();
  uint64_t v124 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__uploadUsername;
  if (qword_1EA194628 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v124) = sub_1C15170EC();
  uint64_t v125 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__uploadPassword;
  if (qword_1EA194630 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v125) = sub_1C15170EC();
  uint64_t v126 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__uploadDiffingEnabled;
  if (qword_1EA194618 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v126) = sub_1C15170EC();
  uint64_t v127 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__featureAppleNews;
  if (qword_1EA1946A0 != -1) {
    swift_once();
  }
  sub_1C0B43E94(0, (unint64_t *)&unk_1EA1A3CE0, MEMORY[0x1E4FAB298], (void (*)(void))sub_1C0B43DB4);
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v127) = sub_1C15170EC();
  uint64_t v128 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__featureAppleNewsPrivateData;
  if (qword_1EA1946A8 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v128) = sub_1C15170EC();
  uint64_t v129 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__featureAppleNewsAudio;
  if (qword_1EA1946B0 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v129) = sub_1C15170EC();
  uint64_t v130 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__featureAppleNewsMagazines;
  if (qword_1EA1946B8 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v130) = sub_1C15170EC();
  uint64_t v131 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__videoInFeed;
  if (qword_1EB85F268 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v131) = sub_1C15170EC();
  uint64_t v132 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__numberOfTestItems;
  if (qword_1EA1946C0 != -1) {
    swift_once();
  }
  sub_1C0B43FBC(0, (unint64_t *)&unk_1EA1A3CF0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAB4A0], MEMORY[0x1E4FAB2F8]);
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v132) = sub_1C15170EC();
  uint64_t v133 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__runTestsAutomatically;
  if (qword_1EA1946D0 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v133) = sub_1C15170EC();
  uint64_t v134 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__testPreviewScale;
  if (qword_1EA1946D8 != -1) {
    swift_once();
  }
  sub_1C0B43FBC(0, (unint64_t *)&qword_1EB85AA60, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAB478], MEMORY[0x1E4FAB2F8]);
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v134) = sub_1C15170EC();
  uint64_t v135 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__testScope;
  if (qword_1EA1946E0 != -1) {
    swift_once();
  }
  sub_1C0B43E34(0, (unint64_t *)&unk_1EA1A3D00, (void (*)(void))sub_1C05E6D18);
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v135) = sub_1C15170EC();
  uint64_t v136 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__testRun;
  if (qword_1EA1946C8 != -1) {
    swift_once();
  }
  sub_1C0B43E34(0, (unint64_t *)&unk_1EA1A3D10, (void (*)(void))sub_1C05E6C70);
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v136) = sub_1C15170EC();
  uint64_t v137 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__testSubject;
  if (qword_1EA1946E8 != -1) {
    swift_once();
  }
  sub_1C0B43E34(0, (unint64_t *)&unk_1EA1A3D20, (void (*)(void))sub_1C05E6B5C);
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v137) = sub_1C15170EC();
  uint64_t v138 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutFirstPass;
  if (qword_1EA1946F0 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v138) = sub_1C15170EC();
  uint64_t v139 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutSecondPass;
  if (qword_1EA1946F8 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v139) = sub_1C15170EC();
  uint64_t v140 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutBoxes;
  if (qword_1EA194700 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v140) = sub_1C15170EC();
  uint64_t v141 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutFrames;
  if (qword_1EA194708 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v141) = sub_1C15170EC();
  uint64_t v142 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutSpaces;
  if (qword_1EA194710 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v142) = sub_1C15170EC();
  uint64_t v143 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__showLayoutEmbeds;
  if (qword_1EA194718 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v143) = sub_1C15170EC();
  uint64_t v144 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__hideContentView;
  if (qword_1EA194720 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v144) = sub_1C15170EC();
  uint64_t v145 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__metricsEnabled;
  if (qword_1EA194728 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v145) = sub_1C15170EC();
  uint64_t v146 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__location;
  if (qword_1EA1945D8 != -1) {
    swift_once();
  }
  sub_1C0B43E34(0, (unint64_t *)&unk_1EA1A3D30, (void (*)(void))sub_1C05E6AB4);
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v146) = sub_1C15170EC();
  uint64_t v147 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__weather;
  if (qword_1EA1945E0 != -1) {
    swift_once();
  }
  sub_1C0B43E34(0, (unint64_t *)&unk_1EA1A3D40, (void (*)(void))sub_1C05E6A0C);
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v147) = sub_1C15170EC();
  uint64_t v148 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__historyGraphRelativeTimeInMilliseconds;
  if (qword_1EA194730 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v148) = sub_1C15170EC();
  uint64_t v149 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__validatedGroupsOnly;
  if (qword_1EA194740 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v149) = sub_1C15170EC();
  uint64_t v150 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__themeIdentifier;
  if (qword_1EA1945A0 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v150) = sub_1C15170EC();
  uint64_t v151 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__pinnedIdentifier;
  if (qword_1EA194580 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v151) = sub_1C15170EC();
  uint64_t v152 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__hiddenInventoryIdentifier;
  if (qword_1EA194588 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v152) = sub_1C15170EC();
  uint64_t v153 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__feedKind;
  LOBYTE(v283) = 0;
  sub_1C0B43DE8(0, &qword_1EA1A3D50, (uint64_t)&type metadata for FeedKind, MEMORY[0x1E4FAAC80]);
  swift_allocObject();
  *(void *)(v113 + v153) = sub_1C151892C();
  uint64_t v154 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__overrideFeedKind;
  if (qword_1EA194738 != -1) {
    swift_once();
  }
  sub_1C0B43E34(0, &qword_1EA1A3D58, (void (*)(void))sub_1C05E6964);
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v154) = sub_1C15170EC();
  uint64_t v155 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__clearCacheOnNextLaunch;
  if (qword_1EA194550 != -1) {
    swift_once();
  }
  uint64_t v278 = a10;
  uint64_t v272 = a9;
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v155) = sub_1C15170EC();
  uint64_t v156 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__versioningMode;
  if (qword_1EA194440 != -1) {
    swift_once();
  }
  sub_1C0B43E94(0, (unint64_t *)&qword_1EA19CB58, (void (*)(uint64_t))type metadata accessor for FormatVersioningModeSelection, (void (*)(void))sub_1C0B43F04);
  swift_allocObject();
  swift_retain();
  *(void *)(v113 + v156) = sub_1C15170EC();
  *(void *)(v113 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager) = 0;
  uint64_t v157 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_compiler;
  type metadata accessor for DebugFormatCompiler();
  *(void *)(v113 + v157) = swift_allocObject();
  *(void *)(v113 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor____lazy_storage___fonts) = 0;
  uint64_t v243 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  sub_1C151E1BC();
  uint64_t v158 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C0B4400C(0, (unint64_t *)&unk_1EA1A3D68, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBBE00]);
  uint64_t v159 = *((unsigned __int8 *)v254 + 80);
  uint64_t v252 = ((v159 + 32) & ~v159) + v254[9];
  uint64_t v253 = v160;
  uint64_t v250 = (v159 + 32) & ~v159;
  uint64_t v251 = v159 | 7;
  uint64_t v161 = swift_allocObject();
  long long v249 = xmmword_1C1529AE0;
  *(_OWORD *)(v161 + 16) = xmmword_1C1529AE0;
  sub_1C151F51C();
  *(void *)&long long v283 = v161;
  uint64_t v247 = sub_1C0B43A20((unint64_t *)&unk_1EB87A1A0, MEMORY[0x1E4FBCC10]);
  sub_1C0B4400C(0, (unint64_t *)&unk_1EB879FB0, v158, MEMORY[0x1E4FBB320]);
  uint64_t v246 = v162;
  uint64_t v248 = sub_1C0B43CC8((unint64_t *)&qword_1EB879FC0, (unint64_t *)&unk_1EB879FB0, v158);
  sub_1C151FFBC();
  unsigned int v245 = *MEMORY[0x1E4FBCC58];
  uint64_t v163 = v259;
  uint64_t v244 = (void (*)(char *))v258[13];
  uint64_t v164 = v260;
  v244(v259);
  uint64_t v165 = (void *)sub_1C151F5AC();
  *(void *)((char *)v281 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_compileQueue) = v165;
  id v166 = objc_allocWithZone(MEMORY[0x1E4F28F08]);
  uint64_t v167 = v165;
  id v168 = objc_msgSend(v166, sel_init);
  long long v169 = (void *)sub_1C151E5EC();
  objc_msgSend(v168, sel_setName_, v169);

  objc_msgSend(v168, sel_setMaxConcurrentOperationCount_, 6);
  uint64_t v258 = v167;
  objc_msgSend(v168, sel_setUnderlyingQueue_, v167);
  *(void *)((char *)v281 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_compilerOperationQueue) = v168;
  uint64_t v254 = v168;
  sub_1C151E1AC();
  uint64_t v170 = swift_allocObject();
  *(_OWORD *)(v170 + 16) = v249;
  sub_1C151F51C();
  *(void *)&long long v283 = v170;
  uint64_t v171 = (uint64_t)v281;
  sub_1C151FFBC();
  ((void (*)(char *, void, void *))v244)(v163, v245, v164);
  uint64_t v172 = (void *)sub_1C151F5AC();
  *(void *)(v171 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_uploadQueue) = v172;
  id v173 = objc_allocWithZone(MEMORY[0x1E4F28F08]);
  uint64_t v174 = v172;
  id v175 = objc_msgSend(v173, sel_init);
  uint64_t v176 = (void *)sub_1C151E5EC();
  objc_msgSend(v175, sel_setName_, v176);

  objc_msgSend(v175, sel_setMaxConcurrentOperationCount_, 6);
  uint64_t v260 = v174;
  objc_msgSend(v175, sel_setUnderlyingQueue_, v174);
  *(void *)(v171 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_uploaderOperationQueue) = v175;
  uint64_t v177 = v279;
  sub_1BFF1B074(v279, v171 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_key, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  uint64_t v178 = v263;
  sub_1BFF1B074(v177 + v261[6], v263, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v179 = (uint64_t *)(v171 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__bindings);
  swift_beginAccess();
  sub_1BFF1B074(v178, v262, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v180 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FAAC80];
  sub_1C0B4400C(0, &qword_1EA1A3D78, (uint64_t (*)(uint64_t))type metadata accessor for GroupLayoutBindingContext, MEMORY[0x1E4FAAC80]);
  swift_allocObject();
  uint64_t v261 = (int *)v175;
  uint64_t v181 = sub_1C151892C();
  sub_1BFF9C95C(v178, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  *uint64_t v179 = v181;
  swift_endAccess();
  sub_1BFC66384((uint64_t)v286, v171 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_factory);
  *(void *)(v171 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_fontManager) = v273;
  sub_1BFC66384(v277, v171 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_featureAvailability);
  *(void *)(v171 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_cacheManager) = v272;
  *(void *)(v171 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_formatManager) = v278;
  type metadata accessor for FormatDebugger();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  *(void *)(v171 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_debugger) = sub_1C10176EC();
  uint64_t v182 = (void *)(v171 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_commandCenter);
  uint64_t v183 = v275;
  uint64_t v184 = v264;
  *uint64_t v182 = v274;
  v182[1] = v184;
  *(void *)(v171 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_commandSource) = v183;
  uint64_t v185 = (uint64_t *)(v171 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__themeIdentifiers);
  swift_beginAccess();
  uint64_t v186 = MEMORY[0x1E4FBC860];
  uint64_t v282 = MEMORY[0x1E4FBC860];
  sub_1C0B43C04(0, &qword_1EA1A3D80, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  swift_allocObject();
  swift_retain();
  swift_unknownObjectRetain();
  *uint64_t v185 = sub_1C151892C();
  swift_endAccess();
  uint64_t v187 = (uint64_t *)(v171 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__pinnedIdentifiers);
  swift_beginAccess();
  uint64_t v188 = MEMORY[0x1E4FBC870];
  uint64_t v282 = MEMORY[0x1E4FBC870];
  sub_1C0B43F38();
  swift_allocObject();
  *uint64_t v187 = sub_1C151892C();
  swift_endAccess();
  uint64_t v189 = (uint64_t *)(v171 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__hiddenInventoryIdentifiers);
  swift_beginAccess();
  uint64_t v282 = v188;
  swift_allocObject();
  *uint64_t v189 = sub_1C151892C();
  swift_endAccess();
  *(void *)(v171 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_defaultSystemFactory) = v276;
  swift_retain();
  uint64_t v190 = sub_1C0231DC0();
  sub_1C151706C();
  sub_1C151704C();
  uint64_t v191 = v267;
  sub_1C151703C();
  swift_release();
  *uint64_t v191 = v190;
  uint64_t v192 = (uint64_t *)(v171 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__compilerSettings);
  swift_beginAccess();
  sub_1BFF1B074((uint64_t)v191, v266, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataCompilerSettings);
  sub_1C0B4400C(0, (unint64_t *)&unk_1EA1A3D98, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataCompilerSettings, v180);
  swift_allocObject();
  uint64_t v193 = sub_1C151892C();
  sub_1BFF9C95C((uint64_t)v191, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataCompilerSettings);
  *uint64_t v192 = v193;
  swift_endAccess();
  swift_retain();
  sub_1C151709C();
  swift_release();
  sub_1BFF27ECC();
  uint64_t v194 = sub_1C151FF1C();
  swift_bridgeObjectRelease();
  int64_t v195 = *(void *)(v194 + 16);
  if (v195)
  {
    *(void *)&long long v283 = v186;
    sub_1BFF661B8(0, v195, 0);
    uint64_t v196 = v283;
    uint64_t v197 = (uint64_t *)(v194 + 56);
    do
    {
      uint64_t v198 = *(v197 - 3);
      uint64_t v199 = *(v197 - 2);
      uint64_t v200 = *(v197 - 1);
      uint64_t v201 = *v197;
      swift_bridgeObjectRetain();
      uint64_t v202 = MEMORY[0x1C18C6220](v198, v199, v200, v201);
      uint64_t v204 = v203;
      swift_bridgeObjectRelease();
      *(void *)&long long v283 = v196;
      unint64_t v206 = *(void *)(v196 + 16);
      unint64_t v205 = *(void *)(v196 + 24);
      if (v206 >= v205 >> 1)
      {
        sub_1BFF661B8(v205 > 1, v206 + 1, 1);
        uint64_t v196 = v283;
      }
      *(void *)(v196 + 16) = v206 + 1;
      uint64_t v207 = v196 + 16 * v206;
      *(void *)(v207 + 32) = v202;
      *(void *)(v207 + 40) = v204;
      v197 += 4;
      --v195;
    }
    while (v195);
    swift_bridgeObjectRelease();
    uint64_t v186 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C0D29ADC();
  swift_retain();
  sub_1C151709C();
  swift_release();
  uint64_t v208 = sub_1C151FF1C();
  swift_bridgeObjectRelease();
  int64_t v209 = *(void *)(v208 + 16);
  if (v209)
  {
    *(void *)&long long v283 = v186;
    sub_1BFF661B8(0, v209, 0);
    uint64_t v210 = v283;
    uint64_t v211 = (uint64_t *)(v208 + 56);
    do
    {
      uint64_t v212 = *(v211 - 3);
      uint64_t v213 = *(v211 - 2);
      uint64_t v214 = *(v211 - 1);
      uint64_t v215 = *v211;
      swift_bridgeObjectRetain();
      uint64_t v216 = MEMORY[0x1C18C6220](v212, v213, v214, v215);
      uint64_t v218 = v217;
      swift_bridgeObjectRelease();
      *(void *)&long long v283 = v210;
      unint64_t v220 = *(void *)(v210 + 16);
      unint64_t v219 = *(void *)(v210 + 24);
      if (v220 >= v219 >> 1)
      {
        sub_1BFF661B8(v219 > 1, v220 + 1, 1);
        uint64_t v210 = v283;
      }
      *(void *)(v210 + 16) = v220 + 1;
      uint64_t v221 = v210 + 16 * v220;
      *(void *)(v221 + 32) = v216;
      *(void *)(v221 + 40) = v218;
      v211 += 4;
      --v209;
    }
    while (v209);
    swift_bridgeObjectRelease();
    uint64_t v186 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v210 = MEMORY[0x1E4FBC860];
  }
  sub_1BFEF4060(v210);
  swift_bridgeObjectRelease();
  sub_1C0D29C00();
  swift_retain();
  sub_1C151709C();
  swift_release();
  uint64_t v222 = sub_1C151FF1C();
  swift_bridgeObjectRelease();
  int64_t v223 = *(void *)(v222 + 16);
  if (v223)
  {
    *(void *)&long long v283 = v186;
    sub_1BFF661B8(0, v223, 0);
    uint64_t v224 = v283;
    uint64_t v225 = (uint64_t *)(v222 + 56);
    do
    {
      uint64_t v226 = *(v225 - 3);
      uint64_t v227 = *(v225 - 2);
      uint64_t v228 = *(v225 - 1);
      uint64_t v229 = *v225;
      swift_bridgeObjectRetain();
      uint64_t v230 = MEMORY[0x1C18C6220](v226, v227, v228, v229);
      uint64_t v232 = v231;
      swift_bridgeObjectRelease();
      *(void *)&long long v283 = v224;
      unint64_t v234 = *(void *)(v224 + 16);
      unint64_t v233 = *(void *)(v224 + 24);
      if (v234 >= v233 >> 1)
      {
        sub_1BFF661B8(v233 > 1, v234 + 1, 1);
        uint64_t v224 = v283;
      }
      *(void *)(v224 + 16) = v234 + 1;
      uint64_t v235 = v224 + 16 * v234;
      *(void *)(v235 + 32) = v230;
      *(void *)(v235 + 40) = v232;
      v225 += 4;
      --v223;
    }
    while (v223);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v224 = MEMORY[0x1E4FBC860];
  }
  sub_1BFEF4060(v224);
  swift_bridgeObjectRelease();
  sub_1C0D29C14();
  swift_retain();
  sub_1C151709C();
  swift_release();
  LOBYTE(v283) = (_BYTE)v283 != 0;
  swift_retain();
  sub_1C15170AC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  uint64_t v236 = v270;
  sub_1BFF1B074(v279, v270, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  unint64_t v237 = (*(unsigned __int8 *)(v268 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v268 + 80);
  uint64_t v238 = swift_allocObject();
  sub_1C0B43A68(v236, v238 + v237, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  sub_1C151708C();
  swift_release();
  swift_release();
  swift_retain();
  sub_1C151709C();
  swift_release();
  uint64_t v239 = 0;
  byte_1EA2B53C0 = v283 == 29;
  do
  {
    if (byte_1F1B89930[v239 + 32])
    {
      if (byte_1F1B89930[v239 + 32] == 1)
      {
        if (qword_1EA1943E0 == -1) {
          goto LABEL_166;
        }
      }
      else if (qword_1EA1943E8 == -1)
      {
        goto LABEL_166;
      }
LABEL_170:
      swift_once();
      goto LABEL_166;
    }
    if (qword_1EA1943D8 != -1) {
      goto LABEL_170;
    }
LABEL_166:
    ++v239;
    swift_allocObject();
    swift_weakInit();
    sub_1C0B43A20((unint64_t *)&unk_1EA1A3DA8, (void (*)(uint64_t))type metadata accessor for DebugFormatEditor);
    swift_retain();
    sub_1C1516FCC();
    swift_release();
    swift_release();
  }
  while (v239 != 3);
  swift_allocObject();
  uint64_t v240 = (uint64_t)v281;
  swift_weakInit();
  uint64_t v241 = (uint64_t)v271;
  sub_1C1516FCC();
  swift_release();
  sub_1BFF9C95C(v241, type metadata accessor for FormatVersioningModeSelection);
  swift_retain();
  sub_1C151709C();
  swift_release();
  if (v283 == 1)
  {
    LOBYTE(v283) = 0;
    swift_retain();
    sub_1C15170AC();
    swift_release();
    sub_1C13BEADC();
  }
  if (qword_1EA194758 != -1) {
    swift_once();
  }
  sub_1C1516FBC();
  swift_retain();
  swift_retain();
  sub_1C151895C();
  swift_release();
  swift_release();
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151897C();
  swift_release();
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151897C();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();

  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v277);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v286);
  sub_1BFF9C95C(v279, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  return v240;
}

char *sub_1C0B40E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12)
{
  uint64_t v169 = a8;
  uint64_t v170 = a7;
  uint64_t v167 = a3;
  uint64_t v168 = a6;
  id v163 = a5;
  uint64_t v174 = a4;
  uint64_t v171 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = sub_1C151B45C();
  MEMORY[0x1F4188790](v14 - 8);
  id v160 = (char *)&v149 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DebugGroupLayoutKey();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v172 = (id *)((char *)&v149 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v182 = (void *)type metadata accessor for DebugGroupLayoutViewFactory();
  uint64_t v183 = &off_1F1C29940;
  id v157 = v182;
  v181[0] = a2;
  uint64_t v18 = &a12[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_packages];
  uint64_t v19 = qword_1EA194C50;
  uint64_t v159 = a12;
  if (v19 != -1) {
    swift_once();
  }
  memcpy(v184, &byte_1EA2B5418, 0x150uLL);
  memmove(v18, &byte_1EA2B5418, 0x150uLL);
  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1C0B4400C(0, &qword_1EA1A3B10, (uint64_t (*)(uint64_t))sub_1C0B4392C, MEMORY[0x1E4FBBE00]);
  uint64_t v21 = swift_allocObject();
  long long v173 = xmmword_1C1529AE0;
  *(_OWORD *)(v21 + 16) = xmmword_1C1529AE0;
  uint64_t v161 = (objc_class *)ObjectType;
  *(void *)(v21 + 32) = ObjectType;
  sub_1C09C3F4C((uint64_t)v184);
  sub_1C0B4392C();
  uint64_t v22 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(ObjCClassFromMetadata, sel_appearanceWhenContainedInInstancesOfClasses_, v22);

  uint64_t v24 = self;
  id v25 = objc_msgSend(v24, sel_secondaryLabelColor);
  objc_msgSend(v23, sel_setTintColor_, v25);

  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = v173;
  Class v158 = (Class)type metadata accessor for DebugNavigationController();
  *(void *)(v26 + 32) = v158;
  uint64_t v27 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(ObjCClassFromMetadata, sel_appearanceWhenContainedInInstancesOfClasses_, v27);

  id v29 = objc_msgSend(v24, sel_secondaryLabelColor);
  objc_msgSend(v28, sel_setTintColor_, v29);

  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = v173;
  *(void *)(v30 + 32) = sub_1C151C02C();
  uint64_t v31 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v32 = objc_msgSend(ObjCClassFromMetadata, sel_appearanceWhenContainedInInstancesOfClasses_, v31);

  id v33 = objc_msgSend(v24, sel_secondaryLabelColor);
  objc_msgSend(v32, sel_setTintColor_, v33);

  if (qword_1EB85E8C0 != -1) {
    swift_once();
  }
  uint64_t v34 = qword_1EB93C2B0;
  sub_1C1517E7C();
  swift_beginAccess();
  *(void *)(v34 + 16) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  sub_1C1517E8C();
  if (qword_1EA1943D0 != -1) {
    swift_once();
  }
  uint64_t v164 = a9;
  uint64_t v165 = a11;
  uint64_t v166 = a10;
  swift_retain();
  sub_1C151950C();
  swift_release();
  uint64_t v36 = v170;
  uint64_t v35 = v171;
  uint64_t v37 = v167;
  if (qword_1EA194C10 != -1) {
    swift_once();
  }
  uint64_t v38 = qword_1EA2B5400;
  type metadata accessor for DebugFormatManager();
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v39 = sub_1C101BAA0(v37, v38);
  sub_1BFF1B074(v35, (uint64_t)v172, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  sub_1BFC66384((uint64_t)v181, (uint64_t)v180);
  sub_1BFC66384(v36, (uint64_t)v179);
  uint64_t v40 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v180, v180[3]);
  uint64_t v156 = &v149;
  __n128 v41 = MEMORY[0x1F4188790](v40);
  id v43 = (uint64_t *)((char *)&v149 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v44 + 16))(v43, v41);
  uint64_t v45 = *v43;
  uint64_t v46 = (uint64_t)v157;
  v178[3] = v157;
  v178[4] = &off_1F1C29940;
  v178[0] = v45;
  type metadata accessor for DebugFormatEditor();
  unint64_t v47 = (void *)swift_allocObject();
  uint64_t v48 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v178, v46);
  __n128 v49 = MEMORY[0x1F4188790](v48);
  uint64_t v51 = (uint64_t *)((char *)&v149 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v52 + 16))(v51, v49);
  uint64_t v53 = *v51;
  uint64_t v54 = v168;
  swift_retain();
  uint64_t v55 = v164;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v56 = v174;
  swift_unknownObjectRetain();
  uint64_t v162 = v39;
  uint64_t v57 = sub_1C0B3CCA8((uint64_t)v172, v53, v37, (uint64_t)v179, v56, (uint64_t)v163, v54, v55, v38, (uint64_t)v39, v47);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v178);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v180);
  uint64_t v58 = v159;
  *(void *)&v159[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_editor] = v57;
  id v59 = objc_allocWithZone((Class)type metadata accessor for DebugFormatSocketServer());
  uint64_t v60 = swift_retain_n();
  *(void *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_socketServer] = sub_1C143F9D8(v60);
  id v61 = objc_allocWithZone((Class)type metadata accessor for DebugFormatInventoryViewController());
  uint64_t v62 = swift_retain();
  id v63 = sub_1C0D25D5C(v62);
  swift_release();
  *(void *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_inventoryViewController] = v63;
  id v64 = objc_allocWithZone((Class)type metadata accessor for DebugFormatLayoutViewController());
  swift_retain();
  uint64_t v172 = (id *)v63;
  id v65 = sub_1C0CD0244(v57);
  swift_release();
  *(void *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_layoutViewController] = v65;
  sub_1BFC66384(v169, (uint64_t)v180);
  sub_1BFC66384(v166, (uint64_t)v179);
  id v66 = objc_allocWithZone((Class)type metadata accessor for DebugFormatBindingViewController());
  swift_retain();
  id v157 = v65;
  uint64_t v67 = v165;
  swift_retain();
  id v68 = sub_1C14136EC(v57, (uint64_t)v180, (uint64_t)v179, v67);
  swift_release();
  swift_release();
  *(void *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_bindingViewController] = v68;
  uint64_t v69 = (objc_class *)type metadata accessor for DebugFormatCompilerViewController();
  uint64_t v70 = (char *)objc_allocWithZone(v69);
  uint64_t v71 = OBJC_IVAR____TtC8NewsFeed33DebugFormatCompilerViewController_tableView;
  id v72 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  swift_retain();
  uint64_t v156 = (id *)v68;
  uint64_t v73 = v70;
  *(void *)&v70[v71] = objc_msgSend(v72, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  uint64_t v74 = OBJC_IVAR____TtC8NewsFeed33DebugFormatCompilerViewController_throttler;
  sub_1C151888C();
  v180[0] = sub_1C151887C();
  sub_1C0B439C0();
  swift_allocObject();
  *(void *)&v73[v74] = sub_1C15193DC();
  *(void *)&v73[OBJC_IVAR____TtC8NewsFeed33DebugFormatCompilerViewController_editor] = v57;
  sub_1C0B43DE8(0, (unint64_t *)&unk_1EA1A3B30, (uint64_t)&type metadata for DebugFormatCompilerSection, MEMORY[0x1E4FBBE00]);
  uint64_t v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = v173;
  uint64_t v76 = qword_1EA194C00;
  swift_retain();
  if (v76 != -1) {
    swift_once();
  }
  uint64_t v77 = sub_1C151928C();
  __swift_project_value_buffer(v77, (uint64_t)qword_1EA2B53E8);
  uint64_t v78 = sub_1C151920C();
  uint64_t v80 = v79;
  swift_retain();
  uint64_t v81 = sub_1C0B42210((uint64_t)&unk_1F1B89958, v57);
  swift_release();
  *(void *)(v75 + 32) = 0x72656C69706D6F43;
  *(void *)(v75 + 40) = 0xE800000000000000;
  *(void *)(v75 + 48) = v78;
  *(void *)(v75 + 56) = v80;
  *(void *)(v75 + 64) = v81;
  *(void *)&v73[OBJC_IVAR____TtC8NewsFeed33DebugFormatCompilerViewController_sections] = v75;

  v177.id receiver = v73;
  v177.super_class = v69;
  id v82 = objc_msgSendSuper2(&v177, sel_initWithNibName_bundle_, 0, 0);
  swift_release();
  *(void *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_compilerViewController] = v82;
  id v83 = objc_allocWithZone((Class)type metadata accessor for DebugFormatTestViewController());
  swift_retain();
  id v84 = v82;
  id v85 = sub_1C1282988(v57);
  swift_release();
  *(void *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_testViewController] = v85;
  id v86 = objc_allocWithZone((Class)type metadata accessor for DebugFormatDebuggerViewController());
  swift_retain();
  id v155 = v85;
  id v87 = sub_1C0FCAD18(v57);
  *(void *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_debuggerViewController] = v87;
  id v88 = objc_allocWithZone((Class)type metadata accessor for DebugFormatFileViewController());
  swift_retain();
  id v154 = v87;
  id v89 = sub_1C0F15638(v57);
  *(void *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_fileViewController] = v89;
  id v90 = objc_allocWithZone((Class)type metadata accessor for DebugFormatDebuggerSourceViewController());
  swift_retain();
  id v91 = v89;
  id v149 = v91;
  id v92 = sub_1C0B8CD14(v57);
  id v150 = v92;
  swift_release();
  *(void *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_sourceViewController] = v92;
  id v153 = (id)sub_1C151BA4C();
  sub_1C0B4400C(0, &qword_1EA19C8E8, (uint64_t (*)(uint64_t))sub_1C024AD08, MEMORY[0x1E4FBBE00]);
  uint64_t v93 = swift_allocObject();
  *(_OWORD *)(v93 + 16) = xmmword_1C152FC70;
  uint64_t v94 = sub_1C0B43A20(&qword_1EA1A3B40, (void (*)(uint64_t))type metadata accessor for DebugFormatInventoryViewController);
  uint64_t v95 = v172;
  *(void *)(v93 + 32) = v172;
  *(void *)(v93 + 40) = v94;
  uint64_t v96 = sub_1C0B43A20(&qword_1EA1A3B48, (void (*)(uint64_t))type metadata accessor for DebugFormatFileViewController);
  *(void *)(v93 + 48) = v91;
  *(void *)(v93 + 56) = v96;
  uint64_t v97 = sub_1C0B43A20(&qword_1EA1A3B50, (void (*)(uint64_t))type metadata accessor for DebugFormatLayoutViewController);
  id v98 = v157;
  *(void *)(v93 + 64) = v157;
  *(void *)(v93 + 72) = v97;
  uint64_t v99 = sub_1C0B43A20(&qword_1EA1A3B58, (void (*)(uint64_t))type metadata accessor for DebugFormatBindingViewController);
  uint64_t v100 = v156;
  *(void *)(v93 + 80) = v156;
  *(void *)(v93 + 88) = v99;
  uint64_t v101 = sub_1C0B43A20(&qword_1EA1A3B60, (void (*)(uint64_t))type metadata accessor for DebugFormatCompilerViewController);
  *(void *)(v93 + 96) = v84;
  *(void *)(v93 + 104) = v101;
  uint64_t v102 = sub_1C0B43A20(&qword_1EA1A3B68, (void (*)(uint64_t))type metadata accessor for DebugFormatTestViewController);
  id v103 = v155;
  *(void *)(v93 + 112) = v155;
  *(void *)(v93 + 120) = v102;
  uint64_t v104 = sub_1C0B43A20((unint64_t *)&unk_1EA1A3B70, (void (*)(uint64_t))type metadata accessor for DebugFormatDebuggerViewController);
  id v105 = v154;
  *(void *)(v93 + 128) = v154;
  *(void *)(v93 + 136) = v104;
  *(void *)&long long v173 = v95;
  uint64_t v151 = (char *)v98;
  uint64_t v172 = v100;
  id v157 = v84;
  uint64_t v156 = (id *)v103;
  uint64_t v106 = (char *)v105;
  id v152 = v106;
  id v155 = v149;
  id v107 = v150;
  uint64_t v108 = (void *)sub_1C151BA0C();
  id v109 = objc_msgSend(v108, sel_navigationItem);
  objc_msgSend(v109, sel_setHidesSearchBarWhenScrolling_, 0);

  *(void *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_containerSegmentedViewController] = v108;
  uint64_t v110 = v158;
  id v111 = objc_allocWithZone(v158);
  id v154 = v108;
  id v112 = objc_msgSend(v111, sel_initWithRootViewController_, v154);
  *(void *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_inventoryContainerController] = v112;
  id v113 = objc_allocWithZone((Class)type metadata accessor for DebugFormatEditorViewController());
  uint64_t v114 = (uint64_t)v162;
  swift_retain();
  swift_retain();
  id v153 = v107;
  id v115 = sub_1C0C67F40(v57, v114, v153);
  id v116 = objc_msgSend(objc_allocWithZone(v110), sel_initWithRootViewController_, v115);
  id v117 = objc_allocWithZone((Class)sub_1C151B9BC());
  Class v158 = (Class)v116;
  uint64_t v118 = (void *)sub_1C151B99C();
  sub_1C0CFFC38();
  sub_1C151B9AC();
  *(void *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_editorViewController] = v115;
  id v119 = objc_allocWithZone((Class)sub_1C151BB8C());
  swift_unknownObjectRetain();
  uint64_t v120 = (char *)v115;
  id v160 = v118;
  uint64_t v121 = (void *)sub_1C151BB7C();
  *(void *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_editorContainerController] = v121;
  id v122 = objc_allocWithZone((Class)type metadata accessor for DebugFormatLogViewController());
  uint64_t v123 = swift_retain();
  id v124 = sub_1C110C4C0(v123);
  swift_release();
  *(void *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_logViewController] = v124;
  uint64_t v125 = *(void **)&v106[OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_debuggerPaneViewController];
  id v126 = objc_allocWithZone((Class)type metadata accessor for DebugFormatConsolePaneViewController());
  swift_retain_n();
  id v127 = v124;
  id v163 = v127;
  id v128 = v121;
  uint64_t v129 = sub_1C11C3598(v57, v127, v125);
  uint64_t v130 = (objc_class *)type metadata accessor for DebugFormatConsoleViewController();
  uint64_t v131 = (char *)objc_allocWithZone(v130);
  uint64_t v132 = &v131[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleHeight];
  *(void *)uint64_t v132 = 0;
  v132[8] = 1;
  uint64_t v133 = &v131[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consolePanSession];
  *((void *)v133 + 1) = 0;
  *((void *)v133 + 2) = 0;
  *(void *)uint64_t v133 = 0;
  v133[24] = 1;
  *(void *)&v131[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController____lazy_storage___panGestureRecognizer] = 0;
  *(void *)&v131[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_editor] = v57;
  *(void *)&v131[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_editorContainerController] = v128;
  *(void *)&v131[OBJC_IVAR____TtC8NewsFeed32DebugFormatConsoleViewController_consoleContainerController] = v129;
  v176.id receiver = v131;
  v176.super_class = v130;
  id v134 = objc_msgSendSuper2(&v176, sel_initWithNibName_bundle_, 0, 0);
  *(void *)&v58[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_consoleViewController] = v134;
  id v135 = v134;

  v175.id receiver = v58;
  v175.super_class = v161;
  id v136 = objc_msgSendSuper2(&v175, sel_initWithNibName_bundle_, 0, 0);
  *(void *)&v120[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_delegate + 8] = &off_1F1BF6C88;
  swift_unknownObjectWeakAssign();
  uint64_t v137 = v151;
  *(void *)&v151[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_delegate + 8] = &off_1F1BF6C78;
  swift_unknownObjectWeakAssign();
  uint64_t v138 = (char *)v136;
  objc_msgSend(v138, sel_setDelegate_, v138);
  sub_1C0B43DE8(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v139 = swift_allocObject();
  *(_OWORD *)(v139 + 16) = xmmword_1C15320F0;
  uint64_t v140 = *(void **)&v138[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_inventoryContainerController];
  *(void *)(v139 + 32) = v140;
  *(void *)(v139 + 40) = v135;
  v180[0] = v139;
  sub_1C151EBEC();
  sub_1BFC39268(0, (unint64_t *)&qword_1EB880D40);
  id v141 = v135;
  uint64_t v142 = v138;
  id v143 = v140;
  uint64_t v144 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v142, sel_setViewControllers_, v144);

  type metadata accessor for DebugFormatAlertManager();
  uint64_t v145 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v146 = MEMORY[0x1E4FBC860];
  *(void *)(v145 + 24) = 0;
  *(void *)(v145 + 32) = v146;
  swift_unknownObjectWeakAssign();
  uint64_t v147 = (uint64_t *)(*(void *)&v142[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_editor]
                   + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager);
  swift_beginAccess();
  *uint64_t v147 = v145;
  swift_retain();
  swift_release();
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151897C();
  swift_release();
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151897C();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v166);
  __swift_destroy_boxed_opaque_existential_1(v169);
  __swift_destroy_boxed_opaque_existential_1(v170);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v181);
  sub_1BFF9C95C(v171, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  return v142;
}

uint64_t sub_1C0B42210(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FormatDerivedDataCompilerSettings();
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (void *)((char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = type metadata accessor for DebugFormatCompilerItem();
  uint64_t v8 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v10 = (void *)((char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    v25[1] = v2;
    uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1C05F7C70(0, v11, 0);
    uint64_t v12 = v31;
    uint64_t v13 = (unsigned __int8 *)(a1 + 32);
    uint64_t v29 = a2 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__compilerSettings;
    swift_beginAccess();
    uint64_t v27 = "ition Item Kind Mismatch";
    unint64_t v28 = (unint64_t)"Newsroom Identifiers";
    uint64_t v26 = "ebug-format-logger";
    do
    {
      int v15 = *v13++;
      int v14 = v15;
      if (v15)
      {
        if (v14 == 1)
        {
          unint64_t v16 = 0xD000000000000024;
          uint64_t v17 = v27;
        }
        else
        {
          unint64_t v16 = 0xD000000000000028;
          uint64_t v17 = v26;
        }
        unint64_t v18 = (unint64_t)v17 | 0x8000000000000000;
      }
      else
      {
        unint64_t v18 = v28 | 0x8000000000000000;
        unint64_t v16 = 0xD000000000000017;
      }
      *uint64_t v10 = v16;
      v10[1] = v18;
      swift_retain();
      sub_1C151894C();
      swift_release();
      char v19 = sub_1C0452FA4(v14, *v7);
      sub_1BFF9C95C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataCompilerSettings);
      uint64_t v20 = 20302;
      if (v19) {
        uint64_t v20 = 5457241;
      }
      unint64_t v21 = 0xE200000000000000;
      if (v19) {
        unint64_t v21 = 0xE300000000000000;
      }
      v10[5] = MEMORY[0x1E4FBB1A0];
      v10[6] = MEMORY[0x1E4FBB208];
      void v10[2] = v20;
      void v10[3] = v21;
      swift_storeEnumTagMultiPayload();
      uint64_t v31 = v12;
      unint64_t v23 = *(void *)(v12 + 16);
      unint64_t v22 = *(void *)(v12 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1C05F7C70(v22 > 1, v23 + 1, 1);
        uint64_t v12 = v31;
      }
      *(void *)(v12 + 16) = v23 + 1;
      sub_1C0B43A68((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v23, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerItem);
      --v11;
    }
    while (v11);
  }
  return v12;
}

void sub_1C0B42500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v44 = a2;
  uint64_t v39 = a1;
  uint64_t v6 = *v4;
  unint64_t v47 = v4;
  uint64_t v48 = v6;
  uint64_t v7 = type metadata accessor for DebugGroupLayoutKey();
  uint64_t v8 = v7 - 8;
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v42 = *(void *)(v43 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v41 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1C151E17C();
  uint64_t v10 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v13);
  int v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C151787C();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  char v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = swift_allocBox();
  uint64_t v21 = v20;
  uint64_t v22 = a1 + *(int *)(v8 + 32);
  sub_1BFC66384(v22 + 8, (uint64_t)v51);
  uint64_t v23 = *(void *)(v22 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v22 + *(int *)(v13 + 52), v16);
  sub_1BFF1B074(v22, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  LOBYTE(v13) = *v15;
  swift_bridgeObjectRetain();
  sub_1BFF9C95C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  unsigned __int8 v50 = v13;
  uint64_t v24 = *(void *)(v22 + 96);
  swift_bridgeObjectRetain();
  sub_1BFE9F050(v51, v23, 0, (uint64_t)v19, &v50, v24, v21);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  uint64_t v25 = v40;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCB28], v40);
  uint64_t v26 = (void *)sub_1C151F5BC();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v25);
  uint64_t v27 = v39;
  uint64_t v28 = v41;
  sub_1BFF1B074(v39, v41, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  unint64_t v29 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v30 = (v42 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = swift_allocObject();
  sub_1C0B43A68(v28, v31 + v29, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  *(void *)(v31 + v30) = v49;
  swift_retain();
  uint64_t v43 = sub_1C151930C();

  swift_release();
  id v32 = (void *)sub_1C151F56C();
  sub_1BFF1B074(v27, v28, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  sub_1BFC66384(v44, (uint64_t)v51);
  unint64_t v33 = (v30 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = swift_allocObject();
  sub_1C0B43A68(v28, v34 + v29, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  sub_1BFC773DC(v51, v34 + v30);
  *(void *)(v34 + v33) = v49;
  uint64_t v35 = (void *)(v34 + ((v33 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v36 = v46;
  *uint64_t v35 = v45;
  v35[1] = v36;
  swift_retain();
  swift_unknownObjectRetain();
  sub_1C151901C();
  swift_release();

  swift_release();
  uint64_t v37 = (void *)sub_1C1518E7C();
  sub_1C151903C();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1C0B42A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v41 = a4;
  uint64_t v42 = a3;
  uint64_t v43 = (char *)a1;
  uint64_t v7 = type metadata accessor for DebugGroupLayoutKey();
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v44 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151787C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v15 = v14 - 8;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v40 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = a1 + *(int *)(v8 + 32);
  sub_1BFC66384(v24 + 8, (uint64_t)v51);
  uint64_t v25 = *(void *)(v24 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v24 + *(int *)(v15 + 60), v10);
  sub_1BFF1B074(v24, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  LOBYTE(v11) = *v20;
  swift_bridgeObjectRetain();
  sub_1BFF9C95C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  v49[0] = v11;
  uint64_t v26 = *(void *)(v24 + 96);
  swift_bridgeObjectRetain();
  uint64_t v27 = v25;
  uint64_t v28 = (uint64_t)v44;
  sub_1BFE9F050(v51, v27, 0, (uint64_t)v13, v49, v26, (uint64_t)v23);
  unint64_t v29 = (void *)v5[8];
  uint64_t v30 = v5[9];
  sub_1BFF1B074((uint64_t)v43, v28, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  uint64_t v43 = v23;
  sub_1BFF1B074((uint64_t)v23, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  __swift_project_boxed_opaque_existential_1(v5 + 2, v5[5]);
  id v31 = v29;
  swift_unknownObjectRetain();
  uint64_t result = sub_1C151819C();
  if (!v51[0])
  {
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(v5 + 2, v5[5]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB895408);
  uint64_t result = sub_1C151819C();
  if (!v50)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(v5 + 2, v5[5]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB895310);
  uint64_t result = sub_1C151819C();
  if (!v48)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(v5 + 2, v5[5]);
  sub_1BFCB6824(0, &qword_1EB88D6F0);
  uint64_t result = sub_1C151819C();
  if (!v46)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  id v33 = objc_allocWithZone((Class)type metadata accessor for DebugPersonalizationInspectViewController());
  uint64_t v34 = v42;
  swift_unknownObjectRetain();
  id v35 = sub_1C14278AC(v31, v30, v28, (uint64_t)v17, v34, v41, (uint64_t)v51, (uint64_t)v49, (uint64_t)v47, (uint64_t)v45);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  id v36 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v35);

  __swift_project_boxed_opaque_existential_1(v5 + 20, v5[23]);
  uint64_t v37 = (void *)sub_1C151AE2C();
  if (v37)
  {
    uint64_t v38 = v37;
    id v39 = objc_msgSend(v37, sel_rootViewController);

    if (v39)
    {
      objc_msgSend(v39, sel_presentViewController_animated_completion_, v36, 1, 0);

      id v36 = v39;
    }
  }

  return sub_1BFF9C95C((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
}

uint64_t sub_1C0B42F6C()
{
  uint64_t v1 = *(void *)(type metadata accessor for DebugGroupLayoutKey() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1C0B3BF98(v0 + v2, *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1C0B42FFC()
{
  uint64_t v1 = (int *)(type metadata accessor for DebugGroupLayoutKey() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 16);
  unint64_t v4 = v0 + v2 + v1[8];
  __swift_destroy_boxed_opaque_existential_1(v4 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v5 = v4 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
  uint64_t v6 = sub_1C151787C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v2 + v1[9];
  uint64_t v8 = sub_1C151772C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  unint64_t v10 = v7 + *(int *)(v9 + 20);
  uint64_t v11 = sub_1C151757C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  unint64_t v12 = v7 + *(int *)(v9 + 24);
  if (*(void *)(v12 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  unint64_t v13 = v12 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v14 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = sub_1C151B62C();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);
  }
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + ((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1C0B432E4(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for DebugGroupLayoutKey() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1C0B3C234(a1, a2, v2 + v6, v2 + v7, *(void *)(v2 + ((v7 + 47) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((((v7 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((((v7 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1C0B433B0(void *a1)
{
  return sub_1C0B3CA24(a1);
}

id sub_1C0B433CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12)
{
  uint64_t v44 = a8;
  uint64_t v46 = a7;
  uint64_t v51 = a5;
  uint64_t v43 = a2;
  uint64_t v47 = a10;
  uint64_t v50 = a9;
  uint64_t v48 = a11;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v18 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v45 = (uint64_t)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DebugGroupLayoutKey();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55[3] = type metadata accessor for DebugGroupLayoutViewFactory();
  v55[4] = &off_1F1C29940;
  v55[0] = a4;
  uint64_t v23 = OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView;
  id v24 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  uint64_t v25 = a12;
  *(void *)&a12[v23] = objc_msgSend(v24, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  uint64_t v26 = OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_searchController;
  *(void *)&v25[v26] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BF8]), sel_initWithSearchResultsController_, 0);
  *(void *)&v25[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_cloudContext] = a1;
  *(void *)&v25[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_feedPersonalizer] = a2;
  uint64_t v27 = a3;
  sub_1BFF1B074(a3, (uint64_t)&v25[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_key], (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  sub_1BFC66384((uint64_t)v55, (uint64_t)&v25[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_factory]);
  uint64_t v28 = v51;
  sub_1BFF1B074(v51, (uint64_t)&v25[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_result], (uint64_t (*)(void))type metadata accessor for DebugInspectViewResult);
  unint64_t v29 = &v25[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_commandCenter];
  uint64_t v30 = v46;
  *(void *)unint64_t v29 = a6;
  *((void *)v29 + 1) = v30;
  sub_1BFF1B074(a3, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  uint64_t v31 = v45;
  sub_1BFF1B074(v28, v45, (uint64_t (*)(void))type metadata accessor for DebugInspectViewResult);
  sub_1C0668294(a8, (uint64_t)v54);
  sub_1BFC66384(v50, (uint64_t)v53);
  type metadata accessor for DebugInspectViewDataSource();
  swift_allocObject();
  id v32 = a1;
  uint64_t v33 = v43;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  *(void *)&v25[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource] = sub_1C06633D4((uint64_t)v22, v31, (uint64_t)v54, (uint64_t)v53);
  uint64_t v34 = v47;
  sub_1BFC66384(v47, (uint64_t)v54);
  uint64_t v35 = v48;
  sub_1BFC66384(v48, (uint64_t)v53);
  sub_1BFF1B074(v27, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  type metadata accessor for DebugInspector();
  swift_allocObject();
  id v36 = v32;
  swift_unknownObjectRetain();
  uint64_t v37 = sub_1C0F77378(v36, v33, (uint64_t)v54, (uint64_t)v53, (uint64_t)v22, 0);

  swift_unknownObjectRelease();
  *(void *)&v25[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_inspector] = v37;
  uint64_t v38 = v44;
  sub_1C0668294(v44, (uint64_t)&v25[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_inventory]);
  uint64_t v39 = v50;
  sub_1BFC66384(v50, (uint64_t)&v25[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_headlineService]);
  sub_1BFC66384(v34, (uint64_t)&v25[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tagService]);
  sub_1BFC66384(v35, (uint64_t)&v25[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_webEmbedDataSourceService]);

  v52.id receiver = v25;
  v52.super_class = ObjectType;
  id v40 = objc_msgSendSuper2(&v52, sel_initWithNibName_bundle_, 0, 0);
  __swift_destroy_boxed_opaque_existential_1(v35);
  __swift_destroy_boxed_opaque_existential_1(v34);
  __swift_destroy_boxed_opaque_existential_1(v39);
  sub_1C066A0EC(v38);
  sub_1BFF9C95C(v51, (uint64_t (*)(void))type metadata accessor for DebugInspectViewResult);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  sub_1BFF9C95C(v27, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
  return v40;
}

uint64_t sub_1C0B4385C()
{
  uint64_t v1 = *(void *)(type metadata accessor for DebugGroupLayoutKey() - 8);
  return sub_1C0B3C11C((void *)(v0
                                + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))));
}

uint64_t sub_1C0B438F4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_1C0B4392C()
{
  unint64_t result = qword_1EA1A3B18;
  if (!qword_1EA1A3B18)
  {
    sub_1C0B43968();
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1A3B18);
  }
  return result;
}

unint64_t sub_1C0B43968()
{
  unint64_t result = qword_1EA1A3B20;
  if (!qword_1EA1A3B20)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1A3B20);
  }
  return result;
}

void sub_1C0B439C0()
{
  if (!qword_1EA1A5490)
  {
    sub_1C151888C();
    unint64_t v0 = sub_1C15193FC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A5490);
    }
  }
}

uint64_t sub_1C0B43A20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0B43A68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C0B43AD0(uint64_t a1)
{
}

void sub_1C0B43B04(uint64_t a1)
{
}

void sub_1C0B43B38(uint64_t a1)
{
}

uint64_t sub_1C0B43B6C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1C0B43C04(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(void, uint64_t))
{
  if (!*a2)
  {
    sub_1C0B43DE8(255, a3, a4, a5);
    unint64_t v6 = sub_1C151898C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C0B43C60()
{
  return sub_1C0B43A20(&qword_1EA19C3D0, type metadata accessor for UIUserInterfaceStyle);
}

uint64_t sub_1C0B43C94()
{
  return sub_1C0B43A20(&qword_1EA19C3C0, type metadata accessor for UIUserInterfaceLayoutDirection);
}

uint64_t sub_1C0B43CC8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0B4400C(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0B43D2C()
{
  if (!qword_1EA1A3CB8)
  {
    sub_1C0B43DE8(255, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1C05E6E48();
    unint64_t v0 = sub_1C15170DC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A3CB8);
    }
  }
}

uint64_t sub_1C0B43DB4()
{
  return sub_1C0B43A20(&qword_1EB896580, MEMORY[0x1E4FAB298]);
}

void sub_1C0B43DE8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C0B43E34(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1C15170DC();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C0B43E94(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_1C15170DC();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C0B43F04()
{
  return sub_1C0B43A20((unint64_t *)&unk_1EA19CB60, (void (*)(uint64_t))type metadata accessor for FormatVersioningModeSelection);
}

void sub_1C0B43F38()
{
  if (!qword_1EA1A3D88)
  {
    sub_1C0B43FBC(255, (unint64_t *)&qword_1EB87A010, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBB510]);
    unint64_t v0 = sub_1C151898C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A3D88);
    }
  }
}

void sub_1C0B43FBC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C0B4400C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0B44070()
{
  uint64_t v1 = (int *)(type metadata accessor for DebugGroupLayoutKey() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  uint64_t v3 = v2 + v1[8];
  __swift_destroy_boxed_opaque_existential_1(v3 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v3 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
  uint64_t v5 = sub_1C151787C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v2 + v1[9];
  uint64_t v7 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = v6 + *(int *)(v8 + 20);
  uint64_t v10 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v6 + *(int *)(v8 + 24);
  if (*(void *)(v11 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = v11 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v13 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    uint64_t v14 = sub_1C151B62C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0B44324()
{
  type metadata accessor for DebugGroupLayoutKey();
  return sub_1C0D29D68();
}

uint64_t sub_1C0B443A4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0B443DC()
{
  return sub_1C0D29E74();
}

uint64_t sub_1C0B443E4()
{
  return sub_1C0D29F44();
}

id SharingIssueURLActivityItemSource.__allocating_init(issue:linkPresentationSource:)(void *a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  id v6 = sub_1C0B45900(a1, a2);

  swift_release();
  return v6;
}

id SharingIssueURLActivityItemSource.init(issue:linkPresentationSource:)(void *a1, uint64_t a2)
{
  id v3 = sub_1C0B45900(a1, a2);

  swift_release();
  return v3;
}

id SharingIssueURLActivityItemSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SharingIssueURLActivityItemSource.init()()
{
}

id SharingIssueURLActivityItemSource.__deallocating_deinit()
{
  v2.id receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_OWORD *SharingIssueURLActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(uint64_t a1@<X8>)
{
  sub_1BFF2E400(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)v12 - v4 + 16;
  uint64_t v6 = v1 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueURL;
  swift_beginAccess();
  sub_1C0025B10(v6, (uint64_t)v5);
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    uint64_t result = (_OWORD *)sub_1BFF50F68((uint64_t)v5, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    *(void *)(a1 + 24) = MEMORY[0x1E4FBB1A0];
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0xE000000000000000;
  }
  else
  {
    uint64_t v13 = v7;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v12);
    (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 32))(boxed_opaque_existential_0, v5, v7);
    return sub_1BFF993A8(v12, (_OWORD *)a1);
  }
  return result;
}

void SharingIssueURLActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  sub_1BFF2E400(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v33 - v9;
  if (a1)
  {
    uint64_t v11 = sub_1C151E62C();
    uint64_t v13 = v12;
    if (v11 == sub_1C151E62C() && v13 == v14)
    {
      id v26 = a1;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v16 = sub_1C1520A9C();
      id v17 = a1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        uint64_t v18 = v2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueURL;
        swift_beginAccess();
        sub_1C0025B10(v18, (uint64_t)v10);
        uint64_t v19 = sub_1C1515FDC();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v10, 1, v19) != 1)
        {
          *(void *)(a2 + 24) = v19;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
          (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_0, v10, v19);

          return;
        }

        uint64_t v21 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
        uint64_t v22 = (uint64_t)v10;
        goto LABEL_11;
      }
    }
    type metadata accessor for SharingHTMLBuilder();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = 0;
    *(void *)(v27 + 24) = 0xE000000000000000;
    swift_beginAccess();
    *(void *)(v27 + 16) = 0;
    *(void *)(v27 + 24) = 0xE000000000000000;
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_1C0B44E0C(v27, v2);
    uint64_t v30 = v29;
    swift_release();
    if (v30)
    {
      *(void *)(a2 + 24) = MEMORY[0x1E4FBB1A0];

      *(void *)a2 = v28;
      *(void *)(a2 + 8) = v30;
      return;
    }

    goto LABEL_17;
  }
  uint64_t v23 = v2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueURL;
  swift_beginAccess();
  sub_1C0025B10(v23, (uint64_t)v7);
  uint64_t v24 = sub_1C1515FDC();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v7, 1, v24) != 1)
  {
    *(void *)(a2 + 24) = v24;
    uint64_t v31 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
    (*(void (**)(uint64_t *, char *, uint64_t))(v25 + 32))(v31, v7, v24);
    return;
  }
  uint64_t v21 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  uint64_t v22 = (uint64_t)v7;
LABEL_11:
  sub_1BFF50F68(v22, (unint64_t *)&qword_1EB8948A0, v21);
LABEL_17:
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
}

LPLinkMetadata_optional __swiftcall SharingIssueURLActivityItemSource.activityViewControllerLinkMetadata(_:)(UIActivityViewController *a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_linkPresentationSource))
  {
    sub_1C1518CEC();
    uint64_t v2 = (objc_class *)objc_msgSend(v5, sel_linkMetadata);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v4 = v2;
  result.value.super.isa = v4;
  result.is_nil = v3;
  return result;
}

uint64_t sub_1C0B44E0C(uint64_t a1, uint64_t a2)
{
  sub_1BFF2E400(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v4 - 8);
  id v87 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v88 = (char *)&v86 - v7;
  uint64_t v8 = sub_1C1515FDC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SharingHTMLBuilder();
  uint64_t v100 = v12;
  uint64_t v101 = &off_1F1C01D50;
  v99[0] = a1;
  __swift_project_boxed_opaque_existential_1(v99, v12);
  uint64_t v13 = off_1F1C01D60[0];
  swift_retain();
  ((void (*)(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>))v13)(v12, (uint64_t)&off_1F1C01D50, v96);
  uint64_t v14 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueCoverDate);
  uint64_t v15 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueCoverDate + 8);
  uint64_t v16 = v97;
  uint64_t v17 = v98;
  __swift_project_boxed_opaque_existential_1(v96, v97);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 24))(&v93, v14, v15, v16, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
  sub_1BFC773DC(&v93, (uint64_t)v96);
  uint64_t v18 = v97;
  uint64_t v19 = v98;
  __swift_project_boxed_opaque_existential_1(v96, v97);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v19 + 16))(&v93, v18, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
  sub_1BFC773DC(&v93, (uint64_t)v96);
  uint64_t v20 = v97;
  uint64_t v21 = v98;
  __swift_project_boxed_opaque_existential_1(v96, v97);
  (*(void (**)(long long *__return_ptr, void, void, uint64_t, uint64_t))(v21 + 56))(&v93, *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueDescription), *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueDescription + 8), v20, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
  sub_1BFC773DC(&v93, (uint64_t)v96);
  uint64_t v22 = a2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueURL;
  swift_beginAccess();
  uint64_t v89 = v9;
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t v90 = v8;
  id v86 = v23;
  uint64_t v24 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
  if (!v23(v22, 1, v8))
  {
    uint64_t v25 = v89;
    uint64_t v26 = v90;
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v11, v22, v90);
    uint64_t v27 = sub_1C1515E2C();
    uint64_t v29 = v28;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v26);
    __swift_project_boxed_opaque_existential_1(v99, v100);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t v31 = v101;
    id v32 = v101[1];
    uint64_t v94 = DynamicType;
    uint64_t v95 = v101;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v93);
    ((void (*)(uint64_t, char **))v32)(DynamicType, v31);
    uint64_t v33 = v94;
    uint64_t v34 = v95;
    __swift_project_boxed_opaque_existential_1(&v93, v94);
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v36 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v37 = sub_1C1515B8C();
    uint64_t v39 = v38;

    uint64_t v24 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
    ((void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, char **))v34[7])(v92, v37, v39, v33, v34);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
    sub_1BFC773DC(v92, (uint64_t)&v93);
    uint64_t v40 = v94;
    uint64_t v41 = v95;
    __swift_project_boxed_opaque_existential_1(&v93, v94);
    ((void (*)(long long *__return_ptr, void, void, uint64_t, char **))v41[7])(v92, *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueTitle), *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueTitle + 8), v40, v41);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
    sub_1BFC773DC(v92, (uint64_t)&v93);
    uint64_t v42 = v94;
    uint64_t v43 = v95;
    __swift_project_boxed_opaque_existential_1(&v93, v94);
    ((void (*)(long long *__return_ptr, uint64_t, unint64_t, uint64_t, char **))v43[7])(v92, 8250, 0xE200000000000000, v42, v43);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
    sub_1BFC773DC(v92, (uint64_t)&v93);
    uint64_t v44 = v94;
    uint64_t v45 = v95;
    __swift_project_boxed_opaque_existential_1(&v93, v94);
    ((void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char **))v45[6])(v92, v27, v29, v27, v29, v44, v45);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
    sub_1BFC773DC(v92, (uint64_t)&v93);
    uint64_t v46 = v97;
    uint64_t v47 = v98;
    __swift_project_boxed_opaque_existential_1(v96, v97);
    sub_1BFC66384((uint64_t)&v93, (uint64_t)v91);
    (*(void (**)(long long *__return_ptr, unsigned char *, uint64_t, uint64_t))(v47 + 32))(v92, v91, v46, v47);
    sub_1BFF50F68((uint64_t)v91, (unint64_t *)&qword_1EA197408, (void (*)(uint64_t))sub_1C01762F0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
    sub_1BFC773DC(v92, (uint64_t)v96);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
  }
  __swift_project_boxed_opaque_existential_1(v99, v100);
  uint64_t v48 = 1;
  uint64_t v49 = swift_getDynamicType();
  uint64_t v50 = v101;
  uint64_t v51 = v101[1];
  uint64_t v94 = v49;
  uint64_t v95 = v101;
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v93);
  ((void (*)(uint64_t, char **))v51)(v49, v50);
  uint64_t v52 = v94;
  uint64_t v53 = v95;
  __swift_project_boxed_opaque_existential_1(&v93, v94);
  ((void (*)(long long *__return_ptr, uint64_t, char **))v53[2])(v92, v52, v53);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
  sub_1BFC773DC(v92, (uint64_t)&v93);
  uint64_t v54 = v94;
  uint64_t v55 = v95;
  __swift_project_boxed_opaque_existential_1(&v93, v94);
  type metadata accessor for Localized();
  uint64_t v56 = swift_getObjCClassFromMetadata();
  uint64_t v57 = self;
  id v58 = objc_msgSend(v57, (SEL)v24[449], v56);
  uint64_t v59 = sub_1C1515B8C();
  uint64_t v61 = v60;

  ((void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, char **))v55[7])(v92, v59, v61, v54, v55);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
  sub_1BFC773DC(v92, (uint64_t)&v93);
  uint64_t v62 = v94;
  id v63 = v95;
  __swift_project_boxed_opaque_existential_1(&v93, v94);
  ((void (*)(long long *__return_ptr, uint64_t, unint64_t, uint64_t, char **))v63[7])(v92, 32, 0xE100000000000000, v62, v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
  sub_1BFC773DC(v92, (uint64_t)&v93);
  id v64 = objc_msgSend(self, sel_nss_MarketingPageURL);
  if (v64)
  {
    id v65 = v64;
    uint64_t v66 = (uint64_t)v87;
    sub_1C1515F1C();

    uint64_t v48 = 0;
    uint64_t v67 = (uint64_t)v88;
    uint64_t v68 = v89;
  }
  else
  {
    uint64_t v67 = (uint64_t)v88;
    uint64_t v68 = v89;
    uint64_t v66 = (uint64_t)v87;
  }
  uint64_t v69 = v48;
  uint64_t v70 = v90;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56))(v66, v69, 1, v90);
  sub_1C002F694(v66, v67);
  if (v86(v67, 1, v70) == 1)
  {
    sub_1BFF50F68(v67, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  }
  else
  {
    uint64_t v71 = sub_1C1515E2C();
    uint64_t v73 = v72;
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v70);
    uint64_t v74 = v94;
    uint64_t v75 = v95;
    __swift_project_boxed_opaque_existential_1(&v93, v94);
    id v76 = objc_msgSend(v57, sel_bundleForClass_, v56);
    uint64_t v77 = sub_1C1515B8C();
    uint64_t v79 = v78;

    ((void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char **))v75[6])(v92, v77, v79, v71, v73, v74, v75);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
    sub_1BFC773DC(v92, (uint64_t)&v93);
  }
  uint64_t v80 = v97;
  uint64_t v81 = v98;
  __swift_project_boxed_opaque_existential_1(v96, v97);
  sub_1BFC66384((uint64_t)&v93, (uint64_t)v91);
  (*(void (**)(long long *__return_ptr, unsigned char *, uint64_t, uint64_t))(v81 + 32))(v92, v91, v80, v81);
  sub_1BFF50F68((uint64_t)v91, (unint64_t *)&qword_1EA197408, (void (*)(uint64_t))sub_1C01762F0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
  sub_1BFC773DC(v92, (uint64_t)v96);
  uint64_t v82 = v97;
  uint64_t v83 = v98;
  __swift_project_boxed_opaque_existential_1(v96, v97);
  uint64_t v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 64))(v82, v83);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
  return v84;
}

id sub_1C0B45900(void *a1, uint64_t a2)
{
  Swift::Bool v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1BFF2E400(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&ObjectType - v7;
  uint64_t v9 = (uint64_t)v3 + OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueURL;
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  uint64_t v12 = v3;
  id v13 = objc_msgSend(a1, sel_identifier);
  if (!v13)
  {
    sub_1C151E62C();
    id v13 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v14 = objc_msgSend(self, sel_nss_NewsURLForIssueID_, v13);

  if (v14)
  {
    sub_1C1515F1C();

    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v15 = 1;
  }
  v11((uint64_t)v8, v15, 1, v10);
  swift_beginAccess();
  sub_1C03E4D98((uint64_t)v8, v9);
  swift_endAccess();
  id v16 = objc_msgSend(a1, sel_title);
  uint64_t v17 = sub_1C151E62C();
  uint64_t v19 = v18;

  uint64_t v20 = (uint64_t *)&v12[OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueTitle];
  *uint64_t v20 = v17;
  v20[1] = v19;
  id v21 = objc_msgSend(a1, sel_coverDate);
  uint64_t v22 = sub_1C151E62C();
  uint64_t v24 = v23;

  uint64_t v25 = (uint64_t *)&v12[OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueCoverDate];
  uint64_t *v25 = v22;
  v25[1] = v24;
  id v26 = objc_msgSend(a1, sel_issueDescription);
  uint64_t v27 = sub_1C151E62C();
  uint64_t v29 = v28;

  uint64_t v30 = (uint64_t *)&v12[OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_issueDescription];
  *uint64_t v30 = v27;
  v30[1] = v29;
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed33SharingIssueURLActivityItemSource_linkPresentationSource] = a2;
  swift_retain();

  v33.id receiver = v12;
  v33.super_class = ObjectType;
  return objc_msgSendSuper2(&v33, sel_init);
}

uint64_t sub_1C0B45BB8()
{
  return type metadata accessor for SharingIssueURLActivityItemSource();
}

uint64_t type metadata accessor for SharingIssueURLActivityItemSource()
{
  uint64_t result = qword_1EA1A3DE8;
  if (!qword_1EA1A3DE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C0B45C0C()
{
  sub_1BFF2E400(319, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for SharingIssueURLActivityItemSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingIssueURLActivityItemSource);
}

uint64_t dispatch thunk of SharingIssueURLActivityItemSource.__allocating_init(issue:linkPresentationSource:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1C0B45CFC(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v21 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1BFF661B8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v21;
    unint64_t v18 = v1 & 0xC000000000000001;
    uint64_t v19 = v2;
    unint64_t v20 = v1;
    while (v2 != v5)
    {
      if (v18)
      {
        uint64_t v6 = MEMORY[0x1C18C7CB0](v5, v1);
      }
      else
      {
        uint64_t v6 = *(void *)(v1 + 8 * v5 + 32);
        swift_retain();
      }
      uint64_t v8 = *(void **)(v6 + 32);
      uint64_t v7 = *(void **)(v6 + 40);
      id v9 = *(id *)(v6 + 48);
      swift_unknownObjectRetain();
      id v10 = v7;
      id v11 = objc_msgSend(v8, sel_itemID);
      uint64_t v12 = sub_1C151E62C();
      uint64_t v14 = v13;
      swift_release();

      swift_unknownObjectRelease();
      unint64_t v16 = *(void *)(v21 + 16);
      unint64_t v15 = *(void *)(v21 + 24);
      if (v16 >= v15 >> 1) {
        sub_1BFF661B8(v15 > 1, v16 + 1, 1);
      }
      ++v5;
      *(void *)(v21 + 16) = v16 + 1;
      uint64_t v17 = v21 + 16 * v16;
      *(void *)(v17 + 32) = v12;
      *(void *)(v17 + 40) = v14;
      uint64_t v2 = v19;
      unint64_t v1 = v20;
      if (v19 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0B45EC4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v1, 0);
    uint64_t v2 = v19;
    uint64_t v4 = (id *)(a1 + 48);
    do
    {
      uint64_t v5 = *(v4 - 2);
      uint64_t v6 = *(v4 - 1);
      id v7 = *v4;
      swift_unknownObjectRetain();
      id v8 = v6;
      id v9 = v7;
      swift_unknownObjectRetain();
      id v10 = v8;
      id v11 = objc_msgSend(v5, sel_itemID);
      uint64_t v12 = sub_1C151E62C();
      uint64_t v14 = v13;

      swift_unknownObjectRelease_n();
      unint64_t v16 = *(void *)(v19 + 16);
      unint64_t v15 = *(void *)(v19 + 24);
      if (v16 >= v15 >> 1) {
        sub_1BFF661B8(v15 > 1, v16 + 1, 1);
      }
      v4 += 3;
      *(void *)(v19 + 16) = v16 + 1;
      uint64_t v17 = v19 + 16 * v16;
      *(void *)(v17 + 32) = v12;
      *(void *)(v17 + 40) = v14;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0B4601C(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_1C151E17C();
  uint64_t v5 = *(void **)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (void *)(a1 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 24));
  uint64_t v9 = v8[4];
  uint64_t v10 = v8[5];
  __swift_project_boxed_opaque_existential_1(v8 + 1, v9);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 64))(v72, v9, v10);
  uint64_t v11 = v73;
  if (!v73)
  {
    sub_1BFD10564((uint64_t)v72);
LABEL_37:
    if (qword_1EA194B18 != -1) {
      swift_once();
    }
    id v58 = (id)qword_1EA2B5358;
    sub_1C151F38C();
    uint64_t v59 = MEMORY[0x1E4FBC860];
    sub_1C15197BC();

    v72[0] = v59;
    v72[1] = v59;
    void v72[2] = 0;
    sub_1C095356C(0, (unint64_t *)&unk_1EA1A3E00, (uint64_t)&type metadata for DebugInspectHeadlineCandidateFetch, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  uint64_t v12 = v74;
  __swift_project_boxed_opaque_existential_1(v72, v73);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(v11, v12);
  if (!v13)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
    goto LABEL_37;
  }
  unint64_t v14 = *(void *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
  unint64_t v15 = (void *)(v14 >> 62);
  if (v14 >> 62)
  {
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_5;
    }
    goto LABEL_36;
  }
  uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v16)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
LABEL_5:
  uint64_t v62 = v15;
  uint64_t v64 = v7;
  id v65 = v5;
  uint64_t v66 = v4;
  unint64_t v67 = v2;
  v72[0] = v14;
  sub_1C00BC220(0);
  sub_1C0B479C8((unint64_t *)&unk_1EA1A3E10, sub_1C00BC220);
  unint64_t v15 = v72;
  uint64_t v63 = sub_1C151F0BC();
  unint64_t v70 = v14 & 0xC000000000000001;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v7 = 4;
  uint64_t v68 = v16;
  unint64_t v69 = v14;
  do
  {
    uint64_t v17 = v7 - 4;
    if (v70)
    {
      uint64_t v18 = MEMORY[0x1C18C7CB0](v7 - 4, v14);
      uint64_t v19 = v7 - 3;
      if (__OFADD__(v17, 1)) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v18 = *(void *)(v14 + 8 * v7);
      swift_retain();
      uint64_t v19 = v7 - 3;
      if (__OFADD__(v17, 1))
      {
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
    }
    uint64_t v71 = v19;
    unint64_t v20 = *(void **)(v18 + 32);
    uint64_t v21 = *(void **)(v18 + 40);
    id v22 = *(id *)(v18 + 48);
    swift_unknownObjectRetain();
    id v23 = v21;
    id v24 = objc_msgSend(v20, sel_itemID);
    uint64_t v4 = sub_1C151E62C();
    uint64_t v26 = v25;

    swift_unknownObjectRelease();
    id v27 = *(id *)(v18 + 40);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v72[0] = v5;
    unint64_t v15 = v5;
    unint64_t v2 = sub_1BFEF2D8C(v4, v26);
    uint64_t v30 = v5[2];
    BOOL v31 = (v29 & 1) == 0;
    uint64_t v32 = v30 + v31;
    if (__OFADD__(v30, v31)) {
      goto LABEL_33;
    }
    unint64_t v14 = v29;
    if (v5[3] >= v32)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v5 = (void *)v72[0];
        if (v29) {
          goto LABEL_6;
        }
      }
      else
      {
        unint64_t v15 = v72;
        sub_1C1070908();
        uint64_t v5 = (void *)v72[0];
        if (v14) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_1C105D2EC(v32, isUniquelyReferenced_nonNull_native);
      unint64_t v15 = (void *)v72[0];
      unint64_t v33 = sub_1BFEF2D8C(v4, v26);
      if ((v14 & 1) != (v34 & 1))
      {
        uint64_t result = sub_1C1520CFC();
        __break(1u);
        return result;
      }
      unint64_t v2 = v33;
      uint64_t v5 = (void *)v72[0];
      if (v14)
      {
LABEL_6:
        unint64_t v15 = (void *)v5[7];

        v15[v2] = v27;
        goto LABEL_7;
      }
    }
    v5[(v2 >> 6) + 8] |= 1 << v2;
    uint64_t v35 = (uint64_t *)(v5[6] + 16 * v2);
    *uint64_t v35 = v4;
    v35[1] = v26;
    *(void *)(v5[7] + 8 * v2) = v27;
    uint64_t v36 = v5[2];
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (v37) {
      goto LABEL_34;
    }
    v5[2] = v38;
    swift_bridgeObjectRetain();
LABEL_7:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v7;
    unint64_t v14 = v69;
  }
  while (v71 != v68);
  swift_bridgeObjectRelease();
  if (qword_1EA194B18 != -1) {
    swift_once();
  }
  uint64_t v39 = (void *)qword_1EA2B5358;
  sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1C1527210;
  uint64_t v41 = v64;
  if (v62)
  {
    swift_bridgeObjectRetain();
    id v44 = v39;
    uint64_t v42 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v42 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v43 = v39;
  }
  uint64_t v45 = MEMORY[0x1E4FBB550];
  uint64_t v46 = MEMORY[0x1E4FBB5C8];
  *(void *)(v40 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v40 + 64) = v46;
  *(void *)(v40 + 32) = v42;
  uint64_t v47 = v63;
  uint64_t v48 = *(void *)(v63 + 16);
  *(void *)(v40 + 96) = v45;
  *(void *)(v40 + 104) = v46;
  *(void *)(v40 + 72) = v48;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  sub_1BFE4597C();
  uint64_t v50 = v65;
  uint64_t v49 = v66;
  ((void (*)(uint64_t, void, uint64_t))v65[13])(v41, *MEMORY[0x1E4FBCB28], v66);
  uint64_t v51 = (void *)sub_1C151F5BC();
  ((void (*)(uint64_t, uint64_t))v50[1])(v41, v49);
  uint64_t v52 = swift_allocObject();
  unint64_t v53 = v67;
  *(void *)(v52 + 16) = v47;
  *(void *)(v52 + 24) = v53;
  sub_1C0B47930(0, &qword_1EA1A3E20, (uint64_t (*)(uint64_t))sub_1BFD355A8, MEMORY[0x1E4FBB320]);
  swift_retain();
  sub_1C151930C();

  swift_release();
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = v5;
  *(void *)(v54 + 24) = v14;
  swift_bridgeObjectRetain();
  uint64_t v55 = (void *)sub_1C1518E7C();
  sub_1C1518FEC();
  swift_release();
  swift_release();

  *(void *)(swift_allocObject() + 16) = v14;
  uint64_t v56 = (void *)sub_1C1518E7C();
  uint64_t v57 = sub_1C15190CC();
  swift_release();
  swift_release();

  return v57;
}

uint64_t sub_1C0B4680C(uint64_t a1, void *a2)
{
  sub_1C0153EDC();
  swift_retain();
  sub_1C0B47570(a1, a2);
  swift_release();
  uint64_t v4 = (void *)sub_1C1518E7C();
  sub_1C0B47994(0);
  sub_1C0B479C8((unint64_t *)&unk_1EA1A3E30, sub_1C0B47994);
  uint64_t v5 = sub_1C1518FAC();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1C0B468EC(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  unint64_t v70 = a3;
  uint64_t v80 = a2;
  uint64_t v75 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1F4188790](v75);
  uint64_t v74 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B47930(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  *(void *)&long long v78 = (char *)&v66 - v6;
  uint64_t v7 = type metadata accessor for FeedItem(0);
  uint64_t v76 = *(void *)(v7 - 8);
  uint64_t v77 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  unint64_t v11 = MEMORY[0x1E4FBC860];
  unint64_t v81 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      unint64_t v14 = swift_bridgeObjectRetain();
      sub_1BFE52C14(v14);
    }
    swift_bridgeObjectRelease();
    unint64_t v11 = v81;
  }
  uint64_t v68 = v9;
  id v79 = objc_msgSend(self, sel_mapTableWithKeyOptions_valueOptions_, 512, 512);
  unint64_t v15 = v11 >> 62;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    uint64_t v16 = result;
    if (result) {
      goto LABEL_7;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v16 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v16) {
    goto LABEL_16;
  }
LABEL_7:
  if (v16 < 1)
  {
    __break(1u);
    goto LABEL_36;
  }
  unint64_t v73 = v11 >> 62;
  uint64_t v18 = 0;
  do
  {
    unint64_t v20 = v11;
    uint64_t v21 = *(void *)(v11 + 8 * v18 + 32);
    id v22 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    uint64_t v23 = sub_1C151E62C();
    uint64_t v25 = v24;

    uint64_t v26 = v80;
    if (*(void *)(v80 + 16) && (unint64_t v27 = sub_1BFEF2D8C(v23, v25), (v28 & 1) != 0)) {
      id v19 = *(id *)(*(void *)(v26 + 56) + 8 * v27);
    }
    else {
      id v19 = 0;
    }
    ++v18;
    swift_bridgeObjectRelease();
    objc_msgSend(v79, sel_setObject_forKey_, v19, v21);

    swift_unknownObjectRelease();
    unint64_t v11 = v20;
  }
  while (v16 != v18);
  swift_bridgeObjectRelease();
  unint64_t v15 = v73;
LABEL_17:
  sub_1BFF91B1C();
  unint64_t v29 = (void *)sub_1C151EBAC();
  FCAssignPersonalizationScoresFromProfiles();

  if (v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v31 = MEMORY[0x1E4FBC860];
  if (v30)
  {
    unint64_t v86 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C05F7878(0, v30 & ~(v30 >> 63), 0);
    if ((v30 & 0x8000000000000000) == 0)
    {
      unint64_t v31 = v86;
      unint64_t v67 = v11;
      uint64_t v32 = (void **)(v11 + 32);
      unint64_t v73 = sub_1C151D2DC();
      uint64_t v33 = *(void *)(v73 - 8);
      char v34 = *(void (**)(void, uint64_t, uint64_t, unint64_t))(v33 + 56);
      uint64_t v71 = v33 + 56;
      uint64_t v72 = v34;
      uint64_t v35 = (uint64_t)v68;
      uint64_t v36 = v74;
      do
      {
        uint64_t v80 = v30;
        BOOL v37 = *v32;
        uint64_t v38 = v78;
        v72(v78, 1, 1, v73);
        id v85 = 0;
        unint64_t v81 = 0;
        LOBYTE(v82) = 1;
        char v84 = 0;
        unint64_t v39 = v31;
        uint64_t v40 = (int *)v75;
        uint64_t v41 = (char *)v36 + *(int *)(v75 + 24);
        uint64_t v42 = type metadata accessor for SharedItem();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1, v42);
        *uint64_t v36 = 258;
        *((unsigned char *)v36 + v40[7]) = 1;
        *((unsigned char *)v36 + v40[8]) = 0;
        *((unsigned char *)v36 + v40[9]) = 0;
        uint64_t v43 = v40[10];
        unint64_t v31 = v39;
        *((unsigned char *)v36 + v43) = 0;
        swift_unknownObjectRetain_n();
        FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v37, 0, &v84, v38, (uint64_t)v36, &v85, v35, (uint64_t)&v81);
        swift_storeEnumTagMultiPayload();
        swift_unknownObjectRelease();
        unint64_t v86 = v39;
        unint64_t v45 = *(void *)(v39 + 16);
        unint64_t v44 = *(void *)(v39 + 24);
        if (v45 >= v44 >> 1)
        {
          sub_1C05F7878(v44 > 1, v45 + 1, 1);
          unint64_t v31 = v86;
        }
        *(void *)(v31 + 16) = v45 + 1;
        sub_1BFEE4958(v35, v31+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(void *)(v76 + 72) * v45);
        ++v32;
        uint64_t v30 = v80 - 1;
      }
      while (v80 != 1);
      unint64_t v11 = v67;
      goto LABEL_27;
    }
LABEL_36:
    __break(1u);
    return result;
  }
LABEL_27:
  uint64_t v46 = v69;
  uint64_t v47 = sub_1C0A793E8(v11);
  swift_bridgeObjectRelease();
  uint64_t v48 = sub_1BFEF4060(v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  unint64_t v49 = v70;
  uint64_t v50 = sub_1C0B476EC(v70, v48);
  uint64_t v80 = v46;
  swift_bridgeObjectRelease_n();
  if (qword_1EA194B18 != -1) {
    swift_once();
  }
  uint64_t v51 = (void *)qword_1EA2B5358;
  sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v52 = swift_allocObject();
  long long v78 = xmmword_1C1527210;
  *(_OWORD *)(v52 + 16) = xmmword_1C1527210;
  uint64_t v53 = *(void *)(v31 + 16);
  uint64_t v54 = MEMORY[0x1E4FBB550];
  uint64_t v55 = MEMORY[0x1E4FBB5C8];
  *(void *)(v52 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v52 + 64) = v55;
  *(void *)(v52 + 32) = v53;
  if (v49 >> 62)
  {
    id v65 = v51;
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v56 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v57 = v51;
  }
  *(void *)(v52 + 96) = v54;
  *(void *)(v52 + 104) = v55;
  *(void *)(v52 + 72) = v56;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  uint64_t v58 = v50[2];
  if (v58)
  {
    uint64_t v59 = (void *)qword_1EA2B5358;
    uint64_t v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = v78;
    *(void *)(v60 + 56) = v54;
    *(void *)(v60 + 64) = v55;
    *(void *)(v60 + 32) = v58;
    id v61 = v59;
    uint64_t v62 = sub_1C0B45EC4((uint64_t)v50);
    sub_1C095356C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    *(void *)(v60 + 96) = v63;
    *(void *)(v60 + 104) = sub_1C034455C();
    *(void *)(v60 + 72) = v62;
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
  }
  unint64_t v81 = v31;
  uint64_t v82 = v50;
  uint64_t v83 = v56;
  sub_1C095356C(0, (unint64_t *)&unk_1EA1A3E00, (uint64_t)&type metadata for DebugInspectHeadlineCandidateFetch, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t v64 = sub_1C151908C();

  return v64;
}

uint64_t sub_1C0B4711C(uint64_t a1, unint64_t a2)
{
  if (qword_1EA194B18 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EA2B5358;
  sub_1C151F36C();
  sub_1BFE6A7A4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1529AE0;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1BFE9C558();
  *(void *)(v4 + 32) = 0;
  *(void *)(v4 + 40) = 0xE000000000000000;
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v5) {
    goto LABEL_18;
  }
  uint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C05F69F4(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v27 = v5;
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v7 = 0;
      do
      {
        uint64_t v8 = (void *)MEMORY[0x1C18C7CB0](v7, a2);
        uint64_t v10 = v8[4];
        uint64_t v9 = (void *)v8[5];
        unint64_t v11 = (void *)v8[6];
        id v12 = v11;
        swift_unknownObjectRetain();
        id v13 = v9;
        swift_unknownObjectRelease();
        unint64_t v15 = *(void *)(v28 + 16);
        unint64_t v14 = *(void *)(v28 + 24);
        if (v15 >= v14 >> 1) {
          sub_1C05F69F4(v14 > 1, v15 + 1, 1);
        }
        ++v7;
        *(void *)(v28 + 16) = v15 + 1;
        uint64_t v16 = (void *)(v28 + 24 * v15);
        v16[4] = v10;
        v16[5] = v13;
        v16[6] = v11;
      }
      while (v27 != v7);
    }
    else
    {
      unint64_t v17 = a2 + 32;
      uint64_t v18 = v5;
      do
      {
        uint64_t v20 = *(void *)(*(void *)v17 + 32);
        id v19 = *(void **)(*(void *)v17 + 40);
        uint64_t v21 = *(void **)(*(void *)v17 + 48);
        unint64_t v23 = *(void *)(v28 + 16);
        unint64_t v22 = *(void *)(v28 + 24);
        swift_unknownObjectRetain();
        id v24 = v19;
        id v25 = v21;
        if (v23 >= v22 >> 1) {
          sub_1C05F69F4(v22 > 1, v23 + 1, 1);
        }
        *(void *)(v28 + 16) = v23 + 1;
        uint64_t v26 = (void *)(v28 + 24 * v23);
        v26[4] = v20;
        v26[5] = v24;
        v26[6] = v21;
        v17 += 8;
        --v18;
      }
      while (v18);
    }
LABEL_18:
    sub_1C095356C(0, (unint64_t *)&unk_1EA1A3E00, (uint64_t)&type metadata for DebugInspectHeadlineCandidateFetch, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DebugInspectHeadlineService()
{
  return self;
}

uint64_t sub_1C0B474B4()
{
  return objectdestroyTm_15(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C0B474CC()
{
  return sub_1C0B4680C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1C0B474E8()
{
  return objectdestroyTm_15(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1C0B47500(uint64_t *a1)
{
  return sub_1C0B468EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C0B4751C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0B47554(uint64_t a1)
{
  return sub_1C0B4711C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0B47570(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1C152028C();
    uint64_t v5 = a1 + 32;
    id v12 = self;
    uint64_t v11 = *MEMORY[0x1E4F7DFC8];
    do
    {
      v5 += 8;
      uint64_t v7 = a2[5];
      uint64_t v6 = a2[6];
      __swift_project_boxed_opaque_existential_1(a2 + 2, v7);
      unint64_t v8 = swift_bridgeObjectRetain();
      uint64_t v9 = sub_1C0B45CFC(v8);
      id v10 = objc_msgSend(v12, sel_defaultCachePolicy);
      (*(void (**)(uint64_t, void, id, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(v9, 0, v10, v11, 25, v7, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      --v3;
    }
    while (v3);
    return v14;
  }
  return result;
}

void *sub_1C0B476EC(unint64_t a1, uint64_t a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      unint64_t v27 = v2 & 0xC000000000000001;
      unint64_t v29 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v4 = 4;
      unint64_t v25 = v2;
      uint64_t v26 = v3;
      while (1)
      {
        uint64_t v5 = v4 - 4;
        if (v27)
        {
          uint64_t v6 = MEMORY[0x1C18C7CB0](v4 - 4, v2);
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v6 = *(void *)(v2 + 8 * v4);
          swift_retain();
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        uint64_t v9 = *(void **)(v6 + 32);
        unint64_t v8 = *(void **)(v6 + 40);
        id v10 = *(id *)(v6 + 48);
        swift_unknownObjectRetain();
        id v11 = v8;
        id v12 = objc_msgSend(v9, sel_itemID);
        uint64_t v13 = sub_1C151E62C();
        uint64_t v15 = v14;

        swift_unknownObjectRelease();
        LOBYTE(v11) = sub_1BFF896B4(v13, v15, a2);
        swift_bridgeObjectRelease();
        if (v11)
        {
          swift_release();
          unint64_t v2 = v25;
        }
        else
        {
          uint64_t v17 = *(void *)(v6 + 32);
          uint64_t v16 = *(void **)(v6 + 40);
          uint64_t v18 = *(void **)(v6 + 48);
          id v19 = v18;
          swift_unknownObjectRetain();
          id v20 = v16;
          swift_release();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v29 = sub_1C0EE70C8(0, v29[2] + 1, 1, v29);
          }
          unint64_t v2 = v25;
          unint64_t v22 = v29[2];
          unint64_t v21 = v29[3];
          if (v22 >= v21 >> 1) {
            unint64_t v29 = sub_1C0EE70C8((void *)(v21 > 1), v22 + 1, 1, v29);
          }
          v29[2] = v22 + 1;
          unint64_t v23 = &v29[3 * v22];
          v23[4] = v17;
          v23[5] = v20;
          v23[6] = v18;
        }
        ++v4;
        if (v7 == v26) {
          goto LABEL_20;
        }
      }
    }
  }
  unint64_t v29 = (void *)MEMORY[0x1E4FBC860];
LABEL_20:
  swift_bridgeObjectRelease();
  return v29;
}

void sub_1C0B47930(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0B47994(uint64_t a1)
{
}

uint64_t sub_1C0B479C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1C0B47A20(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DebugInspectHeadlineCandidateFetch(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for DebugInspectHeadlineCandidateFetch(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for DebugInspectHeadlineCandidateFetch()
{
  return &type metadata for DebugInspectHeadlineCandidateFetch;
}

id sub_1C0B47B20()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v1 = objc_msgSend(self, sel_systemFontOfSize_, 14.0);
  objc_msgSend(v0, sel_setFont_, v1);

  id v2 = objc_msgSend(self, sel_grayColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setLineBreakMode_, 4);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  return v0;
}

void sub_1C0B47C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = &v3[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_identifier];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_thumbnailImageView;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1838]);
  uint64_t v7 = v3;
  id v8 = objc_msgSend(v6, sel_init);
  id v9 = objc_msgSend(v8, sel_layer);
  objc_msgSend(v9, sel_setCornerRadius_, 4.0);

  objc_msgSend(v8, sel_setContentMode_, 2);
  objc_msgSend(v8, sel_setClipsToBounds_, 1);
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v3[v5] = v8;
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_publisherTitle;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v12 = objc_msgSend(self, sel_systemFontOfSize_, 8.0);
  objc_msgSend(v11, sel_setFont_, v12);

  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v11, sel_setNumberOfLines_, 0);
  *(void *)&v7[v10] = v11;
  uint64_t v13 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_articleTitle;
  *(void *)&v7[v13] = sub_1C0B47B20();
  type metadata accessor for DebugPersonalizationSelectionButton();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v15 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  uint64_t v16 = (void *)sub_1C151E5EC();
  objc_msgSend(v15, sel_setTitle_forState_, v16, 0);

  id v17 = *(id *)&v15[qword_1EA1A40C8];
  uint64_t v18 = (void *)sub_1C151E5EC();
  id v19 = self;
  id v20 = objc_msgSend(v19, sel_systemImageNamed_, v18);

  if (!v20)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v21 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_yesButton;
  objc_msgSend(v17, sel_setImage_, v20);

  *(void *)&v7[v21] = v15;
  unint64_t v22 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  unint64_t v23 = (void *)sub_1C151E5EC();
  objc_msgSend(v22, sel_setTitle_forState_, v23, 0);

  id v24 = *(id *)&v22[qword_1EA1A40C8];
  unint64_t v25 = (void *)sub_1C151E5EC();
  id v26 = objc_msgSend(v19, sel_systemImageNamed_, v25);

  if (!v26)
  {
LABEL_8:
    __break(1u);
    return;
  }
  uint64_t v27 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_noButton;
  objc_msgSend(v24, sel_setImage_, v26);

  *(void *)&v7[v27] = v22;
  if (a3)
  {
    uint64_t v28 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = 0;
  }
  v104.id receiver = v7;
  v104.super_class = ObjectType;
  id v29 = objc_msgSendSuper2(&v104, sel_initWithStyle_reuseIdentifier_, a1, v28);

  uint64_t v30 = (char *)v29;
  id v31 = objc_msgSend(v30, sel_contentView);
  uint64_t v32 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_thumbnailImageView;
  objc_msgSend(v31, sel_addSubview_, *(void *)&v30[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_thumbnailImageView]);

  id v33 = objc_msgSend(v30, (SEL)&selRef_setContentMode_);
  uint64_t v96 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_publisherTitle;
  objc_msgSend(v33, sel_addSubview_, *(void *)&v30[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_publisherTitle]);

  id v34 = objc_msgSend(v30, (SEL)&selRef_setContentMode_);
  uint64_t v97 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_articleTitle;
  objc_msgSend(v34, sel_addSubview_, *(void *)&v30[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_articleTitle]);

  id v35 = objc_msgSend(v30, (SEL)&selRef_setContentMode_);
  uint64_t v99 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_yesButton;
  objc_msgSend(v35, sel_addSubview_, *(void *)&v30[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_yesButton]);

  id v36 = objc_msgSend(v30, (SEL)&selRef_setContentMode_);
  uint64_t v101 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_noButton;
  objc_msgSend(v36, sel_addSubview_, *(void *)&v30[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_noButton]);

  id v103 = self;
  sub_1BFE4DBE0();
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1C1591870;
  id v38 = objc_msgSend(*(id *)&v30[v32], sel_leadingAnchor);
  id v39 = objc_msgSend(v30, (SEL)&selRef_setContentMode_);
  id v40 = objc_msgSend(v39, (SEL)&selRef_systemImageNamed_withConfiguration_ + 2);

  id v41 = objc_msgSend(v38, sel_constraintEqualToAnchor_constant_, v40, 16.0);
  *(void *)(v37 + 32) = v41;
  id v42 = objc_msgSend(*(id *)&v30[v32], sel_topAnchor);
  id v43 = objc_msgSend(v30, (SEL)&selRef_setContentMode_);
  id v44 = objc_msgSend(v43, (SEL)&selRef_setTailIndent_ + 3);

  id v45 = objc_msgSend(v42, (SEL)&selRef_thumbnail + 7, v44, 16.0);
  *(void *)(v37 + 40) = v45;
  id v46 = objc_msgSend(*(id *)&v30[v32], sel_bottomAnchor);
  id v47 = objc_msgSend(v30, (SEL)&selRef_setContentMode_);
  id v48 = objc_msgSend(v47, (SEL)&selRef_setDataSource_ + 5);

  id v49 = objc_msgSend(v46, (SEL)&selRef_thumbnail + 7, v48, -16.0);
  *(void *)(v37 + 48) = v49;
  id v50 = objc_msgSend(*(id *)&v30[v32], sel_widthAnchor);
  id v51 = objc_msgSend(v50, sel_constraintEqualToConstant_, 90.0);

  *(void *)(v37 + 56) = v51;
  uint64_t v52 = *(void **)&v30[v32];
  id v53 = objc_msgSend(v52, sel_heightAnchor);
  id v54 = objc_msgSend(v52, sel_widthAnchor);
  id v55 = objc_msgSend(v53, sel_constraintEqualToAnchor_, v54);

  *(void *)(v37 + 64) = v55;
  id v56 = objc_msgSend(*(id *)&v30[v96], (SEL)&selRef_setTailIndent_ + 3);
  id v57 = objc_msgSend(v30, (SEL)&selRef_setContentMode_);
  id v58 = objc_msgSend(v57, (SEL)&selRef_setTailIndent_ + 3);

  id v59 = objc_msgSend(v56, (SEL)&selRef_thumbnail + 7, v58, 8.0);
  *(void *)(v37 + 72) = v59;
  id v60 = objc_msgSend(*(id *)&v30[v96], sel_leadingAnchor);
  id v61 = objc_msgSend(*(id *)&v30[v32], sel_trailingAnchor);
  id v62 = objc_msgSend(v60, (SEL)&selRef_thumbnail + 7, v61, 16.0);

  *(void *)(v37 + 80) = v62;
  id v63 = objc_msgSend(*(id *)&v30[v96], (SEL)&selRef_lowQualityImage + 4);
  id v64 = objc_msgSend(v30, sel_contentView);
  id v65 = objc_msgSend(v64, (SEL)&selRef_lowQualityImage + 4);

  id v66 = objc_msgSend(v63, (SEL)&selRef_thumbnail + 7, v65, -16.0);
  *(void *)(v37 + 88) = v66;
  id v67 = objc_msgSend(*(id *)&v30[v97], sel_topAnchor);
  id v68 = objc_msgSend(*(id *)&v30[v96], sel_bottomAnchor);
  id v69 = objc_msgSend(v67, (SEL)&selRef_thumbnail + 7, v68, 2.0);

  *(void *)(v37 + 96) = v69;
  id v70 = objc_msgSend(*(id *)&v30[v97], sel_leadingAnchor);
  id v71 = objc_msgSend(*(id *)&v30[v32], sel_trailingAnchor);
  id v72 = objc_msgSend(v70, (SEL)&selRef_thumbnail + 7, v71, 16.0);

  *(void *)(v37 + 104) = v72;
  id v73 = objc_msgSend(*(id *)&v30[v97], sel_trailingAnchor);
  id v74 = objc_msgSend(v30, sel_contentView);
  id v75 = objc_msgSend(v74, (SEL)&selRef_lowQualityImage + 4);

  id v76 = objc_msgSend(v73, (SEL)&selRef_thumbnail + 7, v75, -16.0);
  *(void *)(v37 + 112) = v76;
  id v77 = objc_msgSend(*(id *)&v30[v97], sel_bottomAnchor);
  id v78 = objc_msgSend(v30, sel_contentView);
  id v79 = objc_msgSend(v78, (SEL)&selRef_setDataSource_ + 5);

  id v80 = objc_msgSend(v77, sel_constraintLessThanOrEqualToAnchor_constant_, v79, -48.0);
  *(void *)(v37 + 120) = v80;
  id v81 = objc_msgSend(*(id *)&v30[v99], (SEL)&selRef_setDataSource_ + 5);
  id v82 = objc_msgSend(v30, (SEL)&selRef_setContentMode_);
  id v83 = objc_msgSend(v82, (SEL)&selRef_setDataSource_ + 5);

  id v84 = objc_msgSend(v81, (SEL)&selRef_thumbnail + 7, v83, -16.0);
  *(void *)(v37 + 128) = v84;
  id v85 = objc_msgSend(*(id *)&v30[v99], sel_leadingAnchor);
  id v86 = objc_msgSend(*(id *)&v30[v32], (SEL)&selRef_lowQualityImage + 4);
  id v87 = objc_msgSend(v85, (SEL)&selRef_thumbnail + 7, v86, 16.0);

  *(void *)(v37 + 136) = v87;
  id v88 = objc_msgSend(*(id *)&v30[v101], (SEL)&selRef_setDataSource_ + 5);
  id v89 = objc_msgSend(v30, sel_contentView);
  id v90 = objc_msgSend(v89, (SEL)&selRef_setDataSource_ + 5);

  id v91 = objc_msgSend(v88, (SEL)&selRef_thumbnail + 7, v90, -16.0);
  *(void *)(v37 + 144) = v91;
  id v92 = objc_msgSend(*(id *)&v30[v101], sel_leadingAnchor);
  id v93 = objc_msgSend(*(id *)&v30[v99], sel_trailingAnchor);
  id v94 = objc_msgSend(v92, (SEL)&selRef_thumbnail + 7, v93, 10.0);

  *(void *)(v37 + 152) = v94;
  sub_1C151EBEC();
  sub_1C03767D0();
  uint64_t v95 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v103, sel_activateConstraints_, v95);
}

void sub_1C0B488B0(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v2 = &v1[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_identifier];
  *(void *)id v2 = 0;
  *((void *)v2 + 1) = 0;
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_thumbnailImageView;
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1838]);
  uint64_t v5 = v1;
  id v6 = objc_msgSend(v4, sel_init);
  id v7 = objc_msgSend(v6, sel_layer);
  objc_msgSend(v7, sel_setCornerRadius_, 4.0);

  objc_msgSend(v6, sel_setContentMode_, 2);
  objc_msgSend(v6, sel_setClipsToBounds_, 1);
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v1[v3] = v6;
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_publisherTitle;
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v10 = objc_msgSend(self, sel_systemFontOfSize_, 8.0);
  objc_msgSend(v9, sel_setFont_, v10);

  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v9, sel_setNumberOfLines_, 0);
  *(void *)&v5[v8] = v9;
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_articleTitle;
  *(void *)&v5[v11] = sub_1C0B47B20();
  type metadata accessor for DebugPersonalizationSelectionButton();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v13 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  uint64_t v14 = (void *)sub_1C151E5EC();
  objc_msgSend(v13, sel_setTitle_forState_, v14, 0);

  id v15 = *(id *)&v13[qword_1EA1A40C8];
  uint64_t v16 = (void *)sub_1C151E5EC();
  id v17 = self;
  id v18 = objc_msgSend(v17, sel_systemImageNamed_, v16);

  if (v18)
  {
    uint64_t v19 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_yesButton;
    objc_msgSend(v15, sel_setImage_, v18);

    *(void *)&v5[v19] = v13;
    id v20 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
    uint64_t v21 = (void *)sub_1C151E5EC();
    objc_msgSend(v20, sel_setTitle_forState_, v21, 0);

    id v22 = *(id *)&v20[qword_1EA1A40C8];
    unint64_t v23 = (void *)sub_1C151E5EC();
    id v24 = objc_msgSend(v17, sel_systemImageNamed_, v23);

    if (v24)
    {
      uint64_t v25 = OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_noButton;
      objc_msgSend(v22, sel_setImage_, v24);

      *(void *)&v5[v25] = v20;
      v28.id receiver = v5;
      v28.super_class = ObjectType;
      objc_msgSendSuper2(&v28, sel_initWithCoder_, a1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1C0B48C48()
{
  id v1 = v0;
  v16.id receiver = v0;
  v16.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v16, sel_prepareForReuse);
  id v2 = &v0[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_identifier];
  *(void *)id v2 = 0;
  *((void *)v2 + 1) = 0;
  swift_bridgeObjectRelease();
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_systemBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v4);

  uint64_t v5 = *(char **)&v1[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_yesButton];
  id v6 = objc_msgSend(v3, sel_labelColor);
  objc_msgSend(v5, sel_setTitleColor_forState_, v6, 0);

  id v7 = *(id *)&v5[qword_1EA1A40C8];
  id v8 = objc_msgSend(v3, sel_labelColor);
  objc_msgSend(v7, sel_setTintColor_, v8);

  id v9 = objc_msgSend(v3, sel_secondarySystemBackgroundColor);
  objc_msgSend(v5, sel_setBackgroundColor_, v9);

  id v10 = *(char **)&v1[OBJC_IVAR____TtC8NewsFeed40DebugPersonalizationArticleTableViewCell_noButton];
  id v11 = objc_msgSend(v3, sel_labelColor);
  objc_msgSend(v10, sel_setTitleColor_forState_, v11, 0);

  id v12 = *(id *)&v10[qword_1EA1A40C8];
  id v13 = objc_msgSend(v3, sel_labelColor);
  objc_msgSend(v12, sel_setTintColor_, v13);

  id v14 = objc_msgSend(v3, sel_secondarySystemBackgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v14);

  sub_1C151A18C();
  return sub_1C151A18C();
}

uint64_t type metadata accessor for DebugPersonalizationArticleTableViewCell()
{
  return self;
}

BOOL static SportsDataServiceError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SportsDataServiceError.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t SportsDataServiceError.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0B49004()
{
  unint64_t result = qword_1EA1A3E70;
  if (!qword_1EA1A3E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA1A3E70);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsDataServiceError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *unint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0B49124);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataServiceError()
{
  return &type metadata for SportsDataServiceError;
}

uint64_t sub_1C0B4915C(uint64_t a1)
{
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_23;
      }
      uint64_t v10 = *(void *)(v1 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v5) {
          goto LABEL_23;
        }
        uint64_t v10 = *(void *)(v1 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v5) {
            goto LABEL_23;
          }
          uint64_t v10 = *(void *)(v1 + 8 * v7);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t result = sub_1BFEF95B8(v8);
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return v12;
  }
  uint64_t v10 = *(void *)(v1 + 8 * v11);
  if (v10)
  {
    int64_t v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v7);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1C0B492CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA8C8];
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  int64_t v7 = (char *)&v13 - v6;
  uint64_t v8 = *MEMORY[0x1E4FAA8B0];
  uint64_t v9 = sub_1C1517F3C();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a2 + 8))(v7, a1, a2);
  sub_1C0B70738((uint64_t)v7, (unint64_t *)&qword_1EB882B40, v4);
  return v11;
}

uint64_t sub_1C0B49448(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA8C8];
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  int64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = sub_1C1517F3C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a2 + 8))(v7, a1, a2);
  sub_1C0B70738((uint64_t)v7, (unint64_t *)&qword_1EB882B40, v4);
  return v9;
}

uint64_t SportsDataServiceType.fetchDataVisualizations(requests:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = 0;
  return SportsDataServiceType.fetchDataVisualizations(requests:context:)(a1, &v4, a2, a3);
}

uint64_t sub_1C0B495A0(uint64_t a1)
{
  uint64_t v33 = *v1;
  uint64_t v3 = type metadata accessor for SportsDataServiceResourceRequest(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v30 + 64);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v17 = (char *)&v30 - v16;
  sub_1C0B6FCA8(a1, (uint64_t)&v30 - v16, type metadata accessor for SportsDataServiceRequest);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1C0B70244((uint64_t)v17, (uint64_t)v11, type metadata accessor for SportsDataServiceURLRequest);
    uint64_t v26 = sub_1C0B4AF70((uint64_t)&v11[*(int *)(v9 + 24)], (uint64_t)v11, 1);
    uint64_t v27 = type metadata accessor for SportsDataServiceURLRequest;
    uint64_t v28 = (uint64_t)v11;
LABEL_6:
    sub_1C0B6F9C4(v28, v27);
    return v26;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1C0B70244((uint64_t)v17, (uint64_t)v5, type metadata accessor for SportsDataServiceResourceRequest);
    uint64_t v26 = sub_1C0B4CF38((uint64_t)v5, a1);
    uint64_t v27 = type metadata accessor for SportsDataServiceResourceRequest;
    uint64_t v28 = (uint64_t)v5;
    goto LABEL_6;
  }
  uint64_t v19 = v31;
  id v20 = v17;
  uint64_t v21 = v32;
  uint64_t v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v31 + 32))(v8, v20, v32);
  MEMORY[0x1F4188790](v22);
  *(&v30 - 2) = (uint64_t)v1;
  *(&v30 - 1) = (uint64_t)v8;
  sub_1C151932C();
  sub_1C0B6FCA8(a1, (uint64_t)v14, type metadata accessor for SportsDataServiceRequest);
  unint64_t v23 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v24 = swift_allocObject();
  sub_1C0B70244((uint64_t)v14, v24 + v23, type metadata accessor for SportsDataServiceRequest);
  uint64_t v25 = (void *)sub_1C1518E7C();
  sub_1C0B6EFDC(0);
  uint64_t v26 = sub_1C151901C();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v21);
  return v26;
}

uint64_t sub_1C0B499DC(uint64_t a1)
{
  uint64_t v32 = *v1;
  uint64_t v3 = type metadata accessor for SportsDataServiceResourceRequest(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v29 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v29 + 64);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v17 = (char *)&v29 - v16;
  sub_1C0B6FCA8(a1, (uint64_t)&v29 - v16, type metadata accessor for SportsDataServiceRequest);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1C0B70244((uint64_t)v17, (uint64_t)v11, type metadata accessor for SportsDataServiceURLRequest);
    uint64_t v25 = sub_1C0B4B3E8((uint64_t)&v11[*(int *)(v9 + 24)], (uint64_t)v11, 1);
    uint64_t v26 = type metadata accessor for SportsDataServiceURLRequest;
    uint64_t v27 = (uint64_t)v11;
LABEL_6:
    sub_1C0B6F9C4(v27, v26);
    return v25;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1C0B70244((uint64_t)v17, (uint64_t)v5, type metadata accessor for SportsDataServiceResourceRequest);
    uint64_t v25 = sub_1C0B4D570((uint64_t)v5, a1);
    uint64_t v26 = type metadata accessor for SportsDataServiceResourceRequest;
    uint64_t v27 = (uint64_t)v5;
    goto LABEL_6;
  }
  uint64_t v20 = v30;
  uint64_t v19 = v31;
  uint64_t v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 32))(v8, v17, v31);
  MEMORY[0x1F4188790](v21);
  *(&v29 - 2) = (uint64_t)v1;
  *(&v29 - 1) = (uint64_t)v8;
  sub_1C151932C();
  sub_1C0B6FCA8(a1, (uint64_t)v14, type metadata accessor for SportsDataServiceRequest);
  unint64_t v22 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v23 = swift_allocObject();
  sub_1C0B70244((uint64_t)v14, v23 + v22, type metadata accessor for SportsDataServiceRequest);
  uint64_t v24 = (void *)sub_1C1518E7C();
  sub_1C0B7143C(0, &qword_1EB867BC0, (void (*)(void))sub_1C0B714D0, (void (*)(void))sub_1C0B71524);
  uint64_t v25 = sub_1C151901C();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v19);
  return v25;
}

uint64_t sub_1C0B49E4C(uint64_t a1)
{
  uint64_t v32 = *v1;
  uint64_t v3 = type metadata accessor for SportsDataServiceResourceRequest(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v29 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v29 + 64);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v17 = (char *)&v29 - v16;
  sub_1C0B6FCA8(a1, (uint64_t)&v29 - v16, type metadata accessor for SportsDataServiceRequest);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1C0B70244((uint64_t)v17, (uint64_t)v11, type metadata accessor for SportsDataServiceURLRequest);
    uint64_t v25 = sub_1C0B4B8A0((uint64_t)&v11[*(int *)(v9 + 24)], (uint64_t)v11, 1);
    uint64_t v26 = type metadata accessor for SportsDataServiceURLRequest;
    uint64_t v27 = (uint64_t)v11;
LABEL_6:
    sub_1C0B6F9C4(v27, v26);
    return v25;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1C0B70244((uint64_t)v17, (uint64_t)v5, type metadata accessor for SportsDataServiceResourceRequest);
    uint64_t v25 = sub_1C0B4DBE0((uint64_t)v5, a1);
    uint64_t v26 = type metadata accessor for SportsDataServiceResourceRequest;
    uint64_t v27 = (uint64_t)v5;
    goto LABEL_6;
  }
  uint64_t v20 = v30;
  uint64_t v19 = v31;
  uint64_t v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 32))(v8, v17, v31);
  MEMORY[0x1F4188790](v21);
  *(&v29 - 2) = (uint64_t)v1;
  *(&v29 - 1) = (uint64_t)v8;
  sub_1C151932C();
  sub_1C0B6FCA8(a1, (uint64_t)v14, type metadata accessor for SportsDataServiceRequest);
  unint64_t v22 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v23 = swift_allocObject();
  sub_1C0B70244((uint64_t)v14, v23 + v22, type metadata accessor for SportsDataServiceRequest);
  uint64_t v24 = (void *)sub_1C1518E7C();
  sub_1C0B7143C(0, &qword_1EB867BB8, (void (*)(void))sub_1C0B711B0, (void (*)(void))sub_1C0B71204);
  uint64_t v25 = sub_1C151901C();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v19);
  return v25;
}

uint64_t sub_1C0B4A2BC(uint64_t a1)
{
  uint64_t v33 = *v1;
  uint64_t v3 = type metadata accessor for SportsDataServiceResourceRequest(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v30 + 64);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v17 = (char *)&v30 - v16;
  sub_1C0B6FCA8(a1, (uint64_t)&v30 - v16, type metadata accessor for SportsDataServiceRequest);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1C0B70244((uint64_t)v17, (uint64_t)v11, type metadata accessor for SportsDataServiceURLRequest);
    uint64_t v26 = sub_1C0B4BD58((uint64_t)&v11[*(int *)(v9 + 24)], (uint64_t)v11, 1);
    uint64_t v27 = type metadata accessor for SportsDataServiceURLRequest;
    uint64_t v28 = (uint64_t)v11;
LABEL_6:
    sub_1C0B6F9C4(v28, v27);
    return v26;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1C0B70244((uint64_t)v17, (uint64_t)v5, type metadata accessor for SportsDataServiceResourceRequest);
    uint64_t v26 = sub_1C0B4E250((uint64_t)v5, a1);
    uint64_t v27 = type metadata accessor for SportsDataServiceResourceRequest;
    uint64_t v28 = (uint64_t)v5;
    goto LABEL_6;
  }
  uint64_t v19 = v31;
  uint64_t v20 = v17;
  uint64_t v21 = v32;
  uint64_t v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v31 + 32))(v8, v20, v32);
  MEMORY[0x1F4188790](v22);
  *(&v30 - 2) = (uint64_t)v1;
  *(&v30 - 1) = (uint64_t)v8;
  sub_1C151932C();
  sub_1C0B6FCA8(a1, (uint64_t)v14, type metadata accessor for SportsDataServiceRequest);
  unint64_t v23 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v24 = swift_allocObject();
  sub_1C0B70244((uint64_t)v14, v24 + v23, type metadata accessor for SportsDataServiceRequest);
  uint64_t v25 = (void *)sub_1C1518E7C();
  sub_1C0B70CE4(0);
  uint64_t v26 = sub_1C151901C();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v21);
  return v26;
}

uint64_t sub_1C0B4A6F8(uint64_t a1)
{
  uint64_t v33 = *v1;
  uint64_t v3 = type metadata accessor for SportsDataServiceResourceRequest(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v30 + 64);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v17 = (char *)&v30 - v16;
  sub_1C0B6FCA8(a1, (uint64_t)&v30 - v16, type metadata accessor for SportsDataServiceRequest);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1C0B70244((uint64_t)v17, (uint64_t)v11, type metadata accessor for SportsDataServiceURLRequest);
    uint64_t v26 = sub_1C0B4C1D0((uint64_t)&v11[*(int *)(v9 + 24)], (uint64_t)v11, 1);
    uint64_t v27 = type metadata accessor for SportsDataServiceURLRequest;
    uint64_t v28 = (uint64_t)v11;
LABEL_6:
    sub_1C0B6F9C4(v28, v27);
    return v26;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1C0B70244((uint64_t)v17, (uint64_t)v5, type metadata accessor for SportsDataServiceResourceRequest);
    uint64_t v26 = sub_1C0B4E888((uint64_t)v5, a1);
    uint64_t v27 = type metadata accessor for SportsDataServiceResourceRequest;
    uint64_t v28 = (uint64_t)v5;
    goto LABEL_6;
  }
  uint64_t v19 = v31;
  uint64_t v20 = v17;
  uint64_t v21 = v32;
  uint64_t v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v31 + 32))(v8, v20, v32);
  MEMORY[0x1F4188790](v22);
  *(&v30 - 2) = (uint64_t)v1;
  *(&v30 - 1) = (uint64_t)v8;
  sub_1C151932C();
  sub_1C0B6FCA8(a1, (uint64_t)v14, type metadata accessor for SportsDataServiceRequest);
  unint64_t v23 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v24 = swift_allocObject();
  sub_1C0B70244((uint64_t)v14, v24 + v23, type metadata accessor for SportsDataServiceRequest);
  uint64_t v25 = (void *)sub_1C1518E7C();
  sub_1C0B70864(0);
  uint64_t v26 = sub_1C151901C();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v21);
  return v26;
}

uint64_t sub_1C0B4AB34(uint64_t a1)
{
  uint64_t v33 = *v1;
  uint64_t v3 = type metadata accessor for SportsDataServiceResourceRequest(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v30 + 64);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v17 = (char *)&v30 - v16;
  sub_1C0B6FCA8(a1, (uint64_t)&v30 - v16, type metadata accessor for SportsDataServiceRequest);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1C0B70244((uint64_t)v17, (uint64_t)v11, type metadata accessor for SportsDataServiceURLRequest);
    uint64_t v26 = sub_1C0B4CAC0((uint64_t)&v11[*(int *)(v9 + 24)], (uint64_t)v11, 1);
    uint64_t v27 = type metadata accessor for SportsDataServiceURLRequest;
    uint64_t v28 = (uint64_t)v11;
LABEL_6:
    sub_1C0B6F9C4(v28, v27);
    return v26;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1C0B70244((uint64_t)v17, (uint64_t)v5, type metadata accessor for SportsDataServiceResourceRequest);
    uint64_t v26 = sub_1C0B4F4F8((uint64_t)v5, a1);
    uint64_t v27 = type metadata accessor for SportsDataServiceResourceRequest;
    uint64_t v28 = (uint64_t)v5;
    goto LABEL_6;
  }
  uint64_t v19 = v31;
  uint64_t v20 = v17;
  uint64_t v21 = v32;
  uint64_t v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v31 + 32))(v8, v20, v32);
  MEMORY[0x1F4188790](v22);
  *(&v30 - 2) = (uint64_t)v1;
  *(&v30 - 1) = (uint64_t)v8;
  sub_1C151932C();
  sub_1C0B6FCA8(a1, (uint64_t)v14, type metadata accessor for SportsDataServiceRequest);
  unint64_t v23 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v24 = swift_allocObject();
  sub_1C0B70244((uint64_t)v14, v24 + v23, type metadata accessor for SportsDataServiceRequest);
  uint64_t v25 = (void *)sub_1C1518E7C();
  sub_1C0B703C0(0);
  uint64_t v26 = sub_1C151901C();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v21);
  return v26;
}

uint64_t sub_1C0B4AF70(uint64_t a1, uint64_t a2, int a3)
{
  int v43 = a3;
  uint64_t v46 = a2;
  uint64_t v41 = a1;
  uint64_t v6 = v3;
  uint64_t v47 = *v3;
  uint64_t v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v44 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v37 = v13;
  id v48 = v6;
  uint64_t v49 = a2;
  sub_1C151943C();
  uint64_t v32 = sub_1C151932C();
  id v40 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v42 = v12 + 16;
  id v35 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v11;
  v40(v35, a1, v11);
  id v34 = type metadata accessor for SportsDataServiceURLRequest;
  sub_1C0B6FCA8(a2, (uint64_t)v10, type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v14 + 16) & ~v14;
  uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = swift_allocObject();
  id v18 = *(void (**)(unint64_t, char *, uint64_t))(v12 + 32);
  uint64_t v38 = v12 + 32;
  id v39 = v18;
  v18(v17 + v15, (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v19 = (uint64_t)v10;
  uint64_t v33 = type metadata accessor for SportsDataServiceURLRequest;
  sub_1C0B70244((uint64_t)v10, v17 + ((v13 + v16 + v15) & ~v16), type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v20 = (void *)sub_1C1518E7C();
  sub_1C151900C();
  swift_release();
  swift_release();

  uint64_t v21 = v34;
  sub_1C0B6FCA8(v46, (uint64_t)v10, v34);
  uint64_t v32 = v16 | 7;
  uint64_t v22 = swift_allocObject();
  sub_1C0B70244((uint64_t)v10, v22 + ((v16 + 16) & ~v16), type metadata accessor for SportsDataServiceURLRequest);
  unint64_t v23 = (void *)sub_1C1518E7C();
  sub_1C0B6EFDC(0);
  sub_1C151901C();
  swift_release();
  swift_release();

  sub_1C0B6FCA8(v46, v19, v21);
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  v40(v35, v41, v36);
  uint64_t v26 = (v16 + 17) & ~v16;
  unint64_t v27 = (v44 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = swift_allocObject();
  *(unsigned char *)(v28 + 16) = v43;
  sub_1C0B70244(v19, v28 + v26, v33);
  *(void *)(v28 + v27) = v45;
  v39(v28 + ((v14 + v27 + 8) & ~v14), v25, v24);
  swift_retain();
  uint64_t v29 = (void *)sub_1C1518E7C();
  uint64_t v30 = sub_1C15190EC();
  swift_release();
  swift_release();

  return v30;
}

uint64_t sub_1C0B4B3E8(uint64_t a1, uint64_t a2, int a3)
{
  int v48 = a3;
  uint64_t v37 = a2;
  uint64_t v46 = a1;
  uint64_t v6 = *v3;
  uint64_t v7 = v3;
  uint64_t v52 = v3;
  uint64_t v50 = v6;
  uint64_t v8 = type metadata accessor for SportsDataServiceURLRequest(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v49 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C1515FDC();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v42 = v14;
  id v53 = v7;
  uint64_t v54 = a2;
  sub_1C151943C();
  uint64_t v38 = sub_1C151932C();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v45 = v13 + 16;
  uint64_t v47 = v15;
  id v40 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = v12;
  v15(v40, a1, v12);
  id v51 = type metadata accessor for SportsDataServiceURLRequest;
  uint64_t v16 = a2;
  uint64_t v17 = (uint64_t)v11;
  sub_1C0B6FCA8(v16, (uint64_t)v11, type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v18 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v19 = (v18 + 16) & ~v18;
  uint64_t v20 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = *(void (**)(unint64_t, char *, uint64_t))(v13 + 32);
  uint64_t v43 = v13 + 32;
  uint64_t v44 = v22;
  v22(v21 + v19, (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  uint64_t v23 = v17;
  id v39 = type metadata accessor for SportsDataServiceURLRequest;
  sub_1C0B70244(v17, v21 + ((v14 + v20 + v19) & ~v20), type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v24 = (void *)sub_1C1518E7C();
  sub_1C151900C();
  swift_release();
  swift_release();

  uint64_t v25 = v37;
  sub_1C0B6FCA8(v37, v23, v51);
  uint64_t v38 = v20 | 7;
  uint64_t v26 = swift_allocObject();
  sub_1C0B70244(v23, v26 + ((v20 + 16) & ~v20), type metadata accessor for SportsDataServiceURLRequest);
  unint64_t v27 = (void *)sub_1C1518E7C();
  sub_1C0B7143C(0, &qword_1EB867BC0, (void (*)(void))sub_1C0B714D0, (void (*)(void))sub_1C0B71524);
  uint64_t v28 = v52;
  sub_1C151901C();
  swift_release();
  swift_release();

  sub_1C0B6FCA8(v25, v23, v51);
  uint64_t v30 = v40;
  uint64_t v29 = v41;
  v47(v40, v46, v41);
  uint64_t v31 = (v20 + 17) & ~v20;
  unint64_t v32 = (v49 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = swift_allocObject();
  *(unsigned char *)(v33 + 16) = v48;
  sub_1C0B70244(v23, v33 + v31, v39);
  *(void *)(v33 + v32) = v28;
  v44(v33 + ((v18 + v32 + 8) & ~v18), v30, v29);
  swift_retain();
  id v34 = (void *)sub_1C1518E7C();
  uint64_t v35 = sub_1C15190EC();
  swift_release();
  swift_release();

  return v35;
}

uint64_t sub_1C0B4B8A0(uint64_t a1, uint64_t a2, int a3)
{
  int v48 = a3;
  uint64_t v37 = a2;
  uint64_t v46 = a1;
  uint64_t v6 = *v3;
  uint64_t v7 = v3;
  uint64_t v52 = v3;
  uint64_t v50 = v6;
  uint64_t v8 = type metadata accessor for SportsDataServiceURLRequest(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v49 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C1515FDC();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v42 = v14;
  id v53 = v7;
  uint64_t v54 = a2;
  sub_1C151943C();
  uint64_t v38 = sub_1C151932C();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v45 = v13 + 16;
  uint64_t v47 = v15;
  id v40 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = v12;
  v15(v40, a1, v12);
  id v51 = type metadata accessor for SportsDataServiceURLRequest;
  uint64_t v16 = a2;
  uint64_t v17 = (uint64_t)v11;
  sub_1C0B6FCA8(v16, (uint64_t)v11, type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v18 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v19 = (v18 + 16) & ~v18;
  uint64_t v20 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = *(void (**)(unint64_t, char *, uint64_t))(v13 + 32);
  uint64_t v43 = v13 + 32;
  uint64_t v44 = v22;
  v22(v21 + v19, (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  uint64_t v23 = v17;
  id v39 = type metadata accessor for SportsDataServiceURLRequest;
  sub_1C0B70244(v17, v21 + ((v14 + v20 + v19) & ~v20), type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v24 = (void *)sub_1C1518E7C();
  sub_1C151900C();
  swift_release();
  swift_release();

  uint64_t v25 = v37;
  sub_1C0B6FCA8(v37, v23, v51);
  uint64_t v38 = v20 | 7;
  uint64_t v26 = swift_allocObject();
  sub_1C0B70244(v23, v26 + ((v20 + 16) & ~v20), type metadata accessor for SportsDataServiceURLRequest);
  unint64_t v27 = (void *)sub_1C1518E7C();
  sub_1C0B7143C(0, &qword_1EB867BB8, (void (*)(void))sub_1C0B711B0, (void (*)(void))sub_1C0B71204);
  uint64_t v28 = v52;
  sub_1C151901C();
  swift_release();
  swift_release();

  sub_1C0B6FCA8(v25, v23, v51);
  uint64_t v30 = v40;
  uint64_t v29 = v41;
  v47(v40, v46, v41);
  uint64_t v31 = (v20 + 17) & ~v20;
  unint64_t v32 = (v49 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = swift_allocObject();
  *(unsigned char *)(v33 + 16) = v48;
  sub_1C0B70244(v23, v33 + v31, v39);
  *(void *)(v33 + v32) = v28;
  v44(v33 + ((v18 + v32 + 8) & ~v18), v30, v29);
  swift_retain();
  id v34 = (void *)sub_1C1518E7C();
  uint64_t v35 = sub_1C15190EC();
  swift_release();
  swift_release();

  return v35;
}

uint64_t sub_1C0B4BD58(uint64_t a1, uint64_t a2, int a3)
{
  int v43 = a3;
  uint64_t v46 = a2;
  uint64_t v41 = a1;
  uint64_t v6 = v3;
  uint64_t v47 = *v3;
  uint64_t v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v44 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v37 = v13;
  int v48 = v6;
  uint64_t v49 = a2;
  sub_1C151943C();
  uint64_t v32 = sub_1C151932C();
  id v40 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v42 = v12 + 16;
  uint64_t v35 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v11;
  v40(v35, a1, v11);
  id v34 = type metadata accessor for SportsDataServiceURLRequest;
  sub_1C0B6FCA8(a2, (uint64_t)v10, type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v14 + 16) & ~v14;
  uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = *(void (**)(unint64_t, char *, uint64_t))(v12 + 32);
  uint64_t v38 = v12 + 32;
  id v39 = v18;
  v18(v17 + v15, (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v19 = (uint64_t)v10;
  uint64_t v33 = type metadata accessor for SportsDataServiceURLRequest;
  sub_1C0B70244((uint64_t)v10, v17 + ((v13 + v16 + v15) & ~v16), type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v20 = (void *)sub_1C1518E7C();
  sub_1C151900C();
  swift_release();
  swift_release();

  uint64_t v21 = v34;
  sub_1C0B6FCA8(v46, (uint64_t)v10, v34);
  uint64_t v32 = v16 | 7;
  uint64_t v22 = swift_allocObject();
  sub_1C0B70244((uint64_t)v10, v22 + ((v16 + 16) & ~v16), type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v23 = (void *)sub_1C1518E7C();
  sub_1C0B70CE4(0);
  sub_1C151901C();
  swift_release();
  swift_release();

  sub_1C0B6FCA8(v46, v19, v21);
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  v40(v35, v41, v36);
  uint64_t v26 = (v16 + 17) & ~v16;
  unint64_t v27 = (v44 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = swift_allocObject();
  *(unsigned char *)(v28 + 16) = v43;
  sub_1C0B70244(v19, v28 + v26, v33);
  *(void *)(v28 + v27) = v45;
  v39(v28 + ((v14 + v27 + 8) & ~v14), v25, v24);
  swift_retain();
  uint64_t v29 = (void *)sub_1C1518E7C();
  uint64_t v30 = sub_1C15190EC();
  swift_release();
  swift_release();

  return v30;
}

uint64_t sub_1C0B4C1D0(uint64_t a1, uint64_t a2, int a3)
{
  int v43 = a3;
  uint64_t v46 = a2;
  uint64_t v41 = a1;
  uint64_t v6 = v3;
  uint64_t v47 = *v3;
  uint64_t v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v44 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v37 = v13;
  int v48 = v6;
  uint64_t v49 = a2;
  sub_1C151943C();
  uint64_t v32 = sub_1C151932C();
  id v40 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v42 = v12 + 16;
  uint64_t v35 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v11;
  v40(v35, a1, v11);
  id v34 = type metadata accessor for SportsDataServiceURLRequest;
  sub_1C0B6FCA8(a2, (uint64_t)v10, type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v14 + 16) & ~v14;
  uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = *(void (**)(unint64_t, char *, uint64_t))(v12 + 32);
  uint64_t v38 = v12 + 32;
  id v39 = v18;
  v18(v17 + v15, (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v19 = (uint64_t)v10;
  uint64_t v33 = type metadata accessor for SportsDataServiceURLRequest;
  sub_1C0B70244((uint64_t)v10, v17 + ((v13 + v16 + v15) & ~v16), type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v20 = (void *)sub_1C1518E7C();
  sub_1C151900C();
  swift_release();
  swift_release();

  uint64_t v21 = v34;
  sub_1C0B6FCA8(v46, (uint64_t)v10, v34);
  uint64_t v32 = v16 | 7;
  uint64_t v22 = swift_allocObject();
  sub_1C0B70244((uint64_t)v10, v22 + ((v16 + 16) & ~v16), type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v23 = (void *)sub_1C1518E7C();
  sub_1C0B70864(0);
  sub_1C151901C();
  swift_release();
  swift_release();

  sub_1C0B6FCA8(v46, v19, v21);
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  v40(v35, v41, v36);
  uint64_t v26 = (v16 + 17) & ~v16;
  unint64_t v27 = (v44 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = swift_allocObject();
  *(unsigned char *)(v28 + 16) = v43;
  sub_1C0B70244(v19, v28 + v26, v33);
  *(void *)(v28 + v27) = v45;
  v39(v28 + ((v14 + v27 + 8) & ~v14), v25, v24);
  swift_retain();
  uint64_t v29 = (void *)sub_1C1518E7C();
  uint64_t v30 = sub_1C15190EC();
  swift_release();
  swift_release();

  return v30;
}

uint64_t sub_1C0B4C648(uint64_t a1, uint64_t a2, int a3)
{
  int v43 = a3;
  uint64_t v46 = a2;
  uint64_t v41 = a1;
  uint64_t v6 = v3;
  uint64_t v47 = *v3;
  uint64_t v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v44 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v37 = v13;
  int v48 = v6;
  uint64_t v49 = a2;
  sub_1C151943C();
  uint64_t v32 = sub_1C151932C();
  id v40 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v42 = v12 + 16;
  uint64_t v35 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v11;
  v40(v35, a1, v11);
  id v34 = type metadata accessor for SportsDataServiceURLRequest;
  sub_1C0B6FCA8(a2, (uint64_t)v10, type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v14 + 16) & ~v14;
  uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = *(void (**)(unint64_t, char *, uint64_t))(v12 + 32);
  uint64_t v38 = v12 + 32;
  id v39 = v18;
  v18(v17 + v15, (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v19 = (uint64_t)v10;
  uint64_t v33 = type metadata accessor for SportsDataServiceURLRequest;
  sub_1C0B70244((uint64_t)v10, v17 + ((v13 + v16 + v15) & ~v16), type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v20 = (void *)sub_1C1518E7C();
  sub_1C151900C();
  swift_release();
  swift_release();

  uint64_t v21 = v34;
  sub_1C0B6FCA8(v46, (uint64_t)v10, v34);
  uint64_t v32 = v16 | 7;
  uint64_t v22 = swift_allocObject();
  sub_1C0B70244((uint64_t)v10, v22 + ((v16 + 16) & ~v16), type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v23 = (void *)sub_1C1518E7C();
  sub_1C0B6F50C(0);
  sub_1C151901C();
  swift_release();
  swift_release();

  sub_1C0B6FCA8(v46, v19, v21);
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  v40(v35, v41, v36);
  uint64_t v26 = (v16 + 17) & ~v16;
  unint64_t v27 = (v44 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = swift_allocObject();
  *(unsigned char *)(v28 + 16) = v43;
  sub_1C0B70244(v19, v28 + v26, v33);
  *(void *)(v28 + v27) = v45;
  v39(v28 + ((v14 + v27 + 8) & ~v14), v25, v24);
  swift_retain();
  uint64_t v29 = (void *)sub_1C1518E7C();
  uint64_t v30 = sub_1C15190EC();
  swift_release();
  swift_release();

  return v30;
}

uint64_t sub_1C0B4CAC0(uint64_t a1, uint64_t a2, int a3)
{
  int v43 = a3;
  uint64_t v46 = a2;
  uint64_t v41 = a1;
  uint64_t v6 = v3;
  uint64_t v47 = *v3;
  uint64_t v7 = type metadata accessor for SportsDataServiceURLRequest(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v44 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v37 = v13;
  int v48 = v6;
  uint64_t v49 = a2;
  sub_1C151943C();
  uint64_t v32 = sub_1C151932C();
  id v40 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v42 = v12 + 16;
  uint64_t v35 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v11;
  v40(v35, a1, v11);
  id v34 = type metadata accessor for SportsDataServiceURLRequest;
  sub_1C0B6FCA8(a2, (uint64_t)v10, type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v14 + 16) & ~v14;
  uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = *(void (**)(unint64_t, char *, uint64_t))(v12 + 32);
  uint64_t v38 = v12 + 32;
  id v39 = v18;
  v18(v17 + v15, (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v19 = (uint64_t)v10;
  uint64_t v33 = type metadata accessor for SportsDataServiceURLRequest;
  sub_1C0B70244((uint64_t)v10, v17 + ((v13 + v16 + v15) & ~v16), type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v20 = (void *)sub_1C1518E7C();
  sub_1C151900C();
  swift_release();
  swift_release();

  uint64_t v21 = v34;
  sub_1C0B6FCA8(v46, (uint64_t)v10, v34);
  uint64_t v32 = v16 | 7;
  uint64_t v22 = swift_allocObject();
  sub_1C0B70244((uint64_t)v10, v22 + ((v16 + 16) & ~v16), type metadata accessor for SportsDataServiceURLRequest);
  uint64_t v23 = (void *)sub_1C1518E7C();
  sub_1C0B703C0(0);
  sub_1C151901C();
  swift_release();
  swift_release();

  sub_1C0B6FCA8(v46, v19, v21);
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  v40(v35, v41, v36);
  uint64_t v26 = (v16 + 17) & ~v16;
  unint64_t v27 = (v44 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = swift_allocObject();
  *(unsigned char *)(v28 + 16) = v43;
  sub_1C0B70244(v19, v28 + v26, v33);
  *(void *)(v28 + v27) = v45;
  v39(v28 + ((v14 + v27 + 8) & ~v14), v25, v24);
  swift_retain();
  uint64_t v29 = (void *)sub_1C1518E7C();
  uint64_t v30 = sub_1C15190EC();
  swift_release();
  swift_release();

  return v30;
}

uint64_t sub_1C0B4CF38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)v2;
  uint64_t v7 = type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v49 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v50 = v8;
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  uint64_t v48 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v47 = (uint64_t)&v41 - v11;
  uint64_t v46 = type metadata accessor for SportsDataServiceResourceRequest(0);
  uint64_t v51 = *(void *)(v46 - 8);
  uint64_t v12 = *(void *)(v51 + 64);
  MEMORY[0x1F4188790](v46);
  uint64_t v52 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v41 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (uint64_t *)((char *)&v41 - v17);
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C15198DC();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EB863FB8);
  sub_1C0B6FCA8(a1, (uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
  sub_1C0B6FCA8(a1, (uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
  uint64_t v20 = sub_1C15198AC();
  os_log_type_t v21 = sub_1C151F38C();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v43 = v6;
    uint64_t v23 = v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v44 = v3;
    uint64_t v25 = v24;
    uint64_t v54 = v24;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v41 = v9;
    uint64_t v42 = a2;
    uint64_t v45 = a1;
    uint64_t v27 = *v18;
    unint64_t v26 = v18[1];
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1BFDA76EC(v27, v26, &v54);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1C0B6F9C4((uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
    *(_WORD *)(v23 + 12) = 2082;
    sub_1C0255390((uint64_t)&v15[*(int *)(v46 + 20)], v47);
    uint64_t v28 = sub_1C151E6AC();
    uint64_t v53 = sub_1BFDA76EC(v28, v29, &v54);
    a1 = v45;
    uint64_t v9 = v41;
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    a2 = v42;
    sub_1C0B6F9C4((uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
    _os_log_impl(&dword_1BFC31000, v20, v21, "Sports data service fetching resource %{public}s, cachePolicy=%{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    uint64_t v30 = v25;
    uint64_t v3 = v44;
    MEMORY[0x1C18C9B00](v30, -1, -1);
    MEMORY[0x1C18C9B00](v23, -1, -1);
  }
  else
  {
    sub_1C0B6F9C4((uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
    sub_1C0B6F9C4((uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
  }

  MEMORY[0x1F4188790](v31);
  *(&v41 - 2) = v3;
  *(&v41 - 1) = (char *)a1;
  sub_1C02509F8();
  sub_1C151932C();
  sub_1C0B6FCA8(a2, (uint64_t)v9, type metadata accessor for SportsDataServiceRequest);
  unint64_t v32 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v33 = swift_allocObject();
  sub_1C0B70244((uint64_t)v9, v33 + v32, type metadata accessor for SportsDataServiceRequest);
  id v34 = (void *)sub_1C1518E7C();
  sub_1C0B6EFDC(0);
  sub_1C151901C();
  swift_release();
  swift_release();

  uint64_t v35 = v52;
  sub_1C0B6FCA8(a1, v52, type metadata accessor for SportsDataServiceResourceRequest);
  unint64_t v36 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v37 = swift_allocObject();
  sub_1C0B70244(v35, v37 + v36, type metadata accessor for SportsDataServiceResourceRequest);
  uint64_t v38 = (void *)sub_1C1518E7C();
  uint64_t v39 = sub_1C151903C();
  swift_release();

  swift_release();
  return v39;
}

uint64_t sub_1C0B4D570(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)v2;
  uint64_t v7 = type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v49 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v50 = v8;
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  uint64_t v48 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v47 = (uint64_t)&v41 - v11;
  uint64_t v46 = type metadata accessor for SportsDataServiceResourceRequest(0);
  uint64_t v51 = *(void *)(v46 - 8);
  uint64_t v12 = *(void *)(v51 + 64);
  MEMORY[0x1F4188790](v46);
  uint64_t v52 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v41 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (uint64_t *)((char *)&v41 - v17);
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C15198DC();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EB863FB8);
  sub_1C0B6FCA8(a1, (uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
  sub_1C0B6FCA8(a1, (uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
  uint64_t v20 = sub_1C15198AC();
  os_log_type_t v21 = sub_1C151F38C();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v43 = v6;
    uint64_t v23 = v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v44 = v3;
    uint64_t v25 = v24;
    uint64_t v54 = v24;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v41 = v9;
    uint64_t v42 = a2;
    uint64_t v45 = a1;
    uint64_t v27 = *v18;
    unint64_t v26 = v18[1];
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1BFDA76EC(v27, v26, &v54);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1C0B6F9C4((uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
    *(_WORD *)(v23 + 12) = 2082;
    sub_1C0255390((uint64_t)&v15[*(int *)(v46 + 20)], v47);
    uint64_t v28 = sub_1C151E6AC();
    uint64_t v53 = sub_1BFDA76EC(v28, v29, &v54);
    a1 = v45;
    uint64_t v9 = v41;
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    a2 = v42;
    sub_1C0B6F9C4((uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
    _os_log_impl(&dword_1BFC31000, v20, v21, "Sports data service fetching resource %{public}s, cachePolicy=%{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    uint64_t v30 = v25;
    uint64_t v3 = v44;
    MEMORY[0x1C18C9B00](v30, -1, -1);
    MEMORY[0x1C18C9B00](v23, -1, -1);
  }
  else
  {
    sub_1C0B6F9C4((uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
    sub_1C0B6F9C4((uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
  }

  MEMORY[0x1F4188790](v31);
  *(&v41 - 2) = v3;
  *(&v41 - 1) = (char *)a1;
  sub_1C02509F8();
  sub_1C151932C();
  sub_1C0B6FCA8(a2, (uint64_t)v9, type metadata accessor for SportsDataServiceRequest);
  unint64_t v32 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v33 = swift_allocObject();
  sub_1C0B70244((uint64_t)v9, v33 + v32, type metadata accessor for SportsDataServiceRequest);
  id v34 = (void *)sub_1C1518E7C();
  sub_1C0B7143C(0, &qword_1EB867BC0, (void (*)(void))sub_1C0B714D0, (void (*)(void))sub_1C0B71524);
  sub_1C151901C();
  swift_release();
  swift_release();

  uint64_t v35 = v52;
  sub_1C0B6FCA8(a1, v52, type metadata accessor for SportsDataServiceResourceRequest);
  unint64_t v36 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v37 = swift_allocObject();
  sub_1C0B70244(v35, v37 + v36, type metadata accessor for SportsDataServiceResourceRequest);
  uint64_t v38 = (void *)sub_1C1518E7C();
  uint64_t v39 = sub_1C151903C();
  swift_release();

  swift_release();
  return v39;
}

uint64_t sub_1C0B4DBE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)v2;
  uint64_t v7 = type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v49 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v50 = v8;
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  uint64_t v48 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v47 = (uint64_t)&v41 - v11;
  uint64_t v46 = type metadata accessor for SportsDataServiceResourceRequest(0);
  uint64_t v51 = *(void *)(v46 - 8);
  uint64_t v12 = *(void *)(v51 + 64);
  MEMORY[0x1F4188790](v46);
  uint64_t v52 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v41 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (uint64_t *)((char *)&v41 - v17);
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C15198DC();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EB863FB8);
  sub_1C0B6FCA8(a1, (uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
  sub_1C0B6FCA8(a1, (uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
  uint64_t v20 = sub_1C15198AC();
  os_log_type_t v21 = sub_1C151F38C();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v43 = v6;
    uint64_t v23 = v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v44 = v3;
    uint64_t v25 = v24;
    uint64_t v54 = v24;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v41 = v9;
    uint64_t v42 = a2;
    uint64_t v45 = a1;
    uint64_t v27 = *v18;
    unint64_t v26 = v18[1];
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1BFDA76EC(v27, v26, &v54);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1C0B6F9C4((uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
    *(_WORD *)(v23 + 12) = 2082;
    sub_1C0255390((uint64_t)&v15[*(int *)(v46 + 20)], v47);
    uint64_t v28 = sub_1C151E6AC();
    uint64_t v53 = sub_1BFDA76EC(v28, v29, &v54);
    a1 = v45;
    uint64_t v9 = v41;
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    a2 = v42;
    sub_1C0B6F9C4((uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
    _os_log_impl(&dword_1BFC31000, v20, v21, "Sports data service fetching resource %{public}s, cachePolicy=%{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    uint64_t v30 = v25;
    uint64_t v3 = v44;
    MEMORY[0x1C18C9B00](v30, -1, -1);
    MEMORY[0x1C18C9B00](v23, -1, -1);
  }
  else
  {
    sub_1C0B6F9C4((uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
    sub_1C0B6F9C4((uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
  }

  MEMORY[0x1F4188790](v31);
  *(&v41 - 2) = v3;
  *(&v41 - 1) = (char *)a1;
  sub_1C02509F8();
  sub_1C151932C();
  sub_1C0B6FCA8(a2, (uint64_t)v9, type metadata accessor for SportsDataServiceRequest);
  unint64_t v32 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v33 = swift_allocObject();
  sub_1C0B70244((uint64_t)v9, v33 + v32, type metadata accessor for SportsDataServiceRequest);
  id v34 = (void *)sub_1C1518E7C();
  sub_1C0B7143C(0, &qword_1EB867BB8, (void (*)(void))sub_1C0B711B0, (void (*)(void))sub_1C0B71204);
  sub_1C151901C();
  swift_release();
  swift_release();

  uint64_t v35 = v52;
  sub_1C0B6FCA8(a1, v52, type metadata accessor for SportsDataServiceResourceRequest);
  unint64_t v36 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v37 = swift_allocObject();
  sub_1C0B70244(v35, v37 + v36, type metadata accessor for SportsDataServiceResourceRequest);
  uint64_t v38 = (void *)sub_1C1518E7C();
  uint64_t v39 = sub_1C151903C();
  swift_release();

  swift_release();
  return v39;
}

uint64_t sub_1C0B4E250(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)v2;
  uint64_t v7 = type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v49 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v50 = v8;
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  uint64_t v48 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v47 = (uint64_t)&v41 - v11;
  uint64_t v46 = type metadata accessor for SportsDataServiceResourceRequest(0);
  uint64_t v51 = *(void *)(v46 - 8);
  uint64_t v12 = *(void *)(v51 + 64);
  MEMORY[0x1F4188790](v46);
  uint64_t v52 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v41 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (uint64_t *)((char *)&v41 - v17);
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C15198DC();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EB863FB8);
  sub_1C0B6FCA8(a1, (uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
  sub_1C0B6FCA8(a1, (uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
  uint64_t v20 = sub_1C15198AC();
  os_log_type_t v21 = sub_1C151F38C();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v43 = v6;
    uint64_t v23 = v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v44 = v3;
    uint64_t v25 = v24;
    uint64_t v54 = v24;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v41 = v9;
    uint64_t v42 = a2;
    uint64_t v45 = a1;
    uint64_t v27 = *v18;
    unint64_t v26 = v18[1];
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1BFDA76EC(v27, v26, &v54);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1C0B6F9C4((uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
    *(_WORD *)(v23 + 12) = 2082;
    sub_1C0255390((uint64_t)&v15[*(int *)(v46 + 20)], v47);
    uint64_t v28 = sub_1C151E6AC();
    uint64_t v53 = sub_1BFDA76EC(v28, v29, &v54);
    a1 = v45;
    uint64_t v9 = v41;
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    a2 = v42;
    sub_1C0B6F9C4((uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
    _os_log_impl(&dword_1BFC31000, v20, v21, "Sports data service fetching resource %{public}s, cachePolicy=%{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    uint64_t v30 = v25;
    uint64_t v3 = v44;
    MEMORY[0x1C18C9B00](v30, -1, -1);
    MEMORY[0x1C18C9B00](v23, -1, -1);
  }
  else
  {
    sub_1C0B6F9C4((uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
    sub_1C0B6F9C4((uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
  }

  MEMORY[0x1F4188790](v31);
  *(&v41 - 2) = v3;
  *(&v41 - 1) = (char *)a1;
  sub_1C02509F8();
  sub_1C151932C();
  sub_1C0B6FCA8(a2, (uint64_t)v9, type metadata accessor for SportsDataServiceRequest);
  unint64_t v32 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v33 = swift_allocObject();
  sub_1C0B70244((uint64_t)v9, v33 + v32, type metadata accessor for SportsDataServiceRequest);
  id v34 = (void *)sub_1C1518E7C();
  sub_1C0B70CE4(0);
  sub_1C151901C();
  swift_release();
  swift_release();

  uint64_t v35 = v52;
  sub_1C0B6FCA8(a1, v52, type metadata accessor for SportsDataServiceResourceRequest);
  unint64_t v36 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v37 = swift_allocObject();
  sub_1C0B70244(v35, v37 + v36, type metadata accessor for SportsDataServiceResourceRequest);
  uint64_t v38 = (void *)sub_1C1518E7C();
  uint64_t v39 = sub_1C151903C();
  swift_release();

  swift_release();
  return v39;
}

uint64_t sub_1C0B4E888(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)v2;
  uint64_t v7 = type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v49 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v50 = v8;
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  uint64_t v48 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v47 = (uint64_t)&v41 - v11;
  uint64_t v46 = type metadata accessor for SportsDataServiceResourceRequest(0);
  uint64_t v51 = *(void *)(v46 - 8);
  uint64_t v12 = *(void *)(v51 + 64);
  MEMORY[0x1F4188790](v46);
  uint64_t v52 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v41 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (uint64_t *)((char *)&v41 - v17);
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C15198DC();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EB863FB8);
  sub_1C0B6FCA8(a1, (uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
  sub_1C0B6FCA8(a1, (uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
  uint64_t v20 = sub_1C15198AC();
  os_log_type_t v21 = sub_1C151F38C();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v43 = v6;
    uint64_t v23 = v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v44 = v3;
    uint64_t v25 = v24;
    uint64_t v54 = v24;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v41 = v9;
    uint64_t v42 = a2;
    uint64_t v45 = a1;
    uint64_t v27 = *v18;
    unint64_t v26 = v18[1];
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1BFDA76EC(v27, v26, &v54);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1C0B6F9C4((uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
    *(_WORD *)(v23 + 12) = 2082;
    sub_1C0255390((uint64_t)&v15[*(int *)(v46 + 20)], v47);
    uint64_t v28 = sub_1C151E6AC();
    uint64_t v53 = sub_1BFDA76EC(v28, v29, &v54);
    a1 = v45;
    uint64_t v9 = v41;
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    a2 = v42;
    sub_1C0B6F9C4((uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
    _os_log_impl(&dword_1BFC31000, v20, v21, "Sports data service fetching resource %{public}s, cachePolicy=%{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    uint64_t v30 = v25;
    uint64_t v3 = v44;
    MEMORY[0x1C18C9B00](v30, -1, -1);
    MEMORY[0x1C18C9B00](v23, -1, -1);
  }
  else
  {
    sub_1C0B6F9C4((uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
    sub_1C0B6F9C4((uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
  }

  MEMORY[0x1F4188790](v31);
  *(&v41 - 2) = v3;
  *(&v41 - 1) = (char *)a1;
  sub_1C02509F8();
  sub_1C151932C();
  sub_1C0B6FCA8(a2, (uint64_t)v9, type metadata accessor for SportsDataServiceRequest);
  unint64_t v32 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v33 = swift_allocObject();
  sub_1C0B70244((uint64_t)v9, v33 + v32, type metadata accessor for SportsDataServiceRequest);
  id v34 = (void *)sub_1C1518E7C();
  sub_1C0B70864(0);
  sub_1C151901C();
  swift_release();
  swift_release();

  uint64_t v35 = v52;
  sub_1C0B6FCA8(a1, v52, type metadata accessor for SportsDataServiceResourceRequest);
  unint64_t v36 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v37 = swift_allocObject();
  sub_1C0B70244(v35, v37 + v36, type metadata accessor for SportsDataServiceResourceRequest);
  uint64_t v38 = (void *)sub_1C1518E7C();
  uint64_t v39 = sub_1C151903C();
  swift_release();

  swift_release();
  return v39;
}

uint64_t sub_1C0B4EEC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)v2;
  uint64_t v7 = type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v49 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v50 = v8;
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  uint64_t v48 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v47 = (uint64_t)&v41 - v11;
  uint64_t v46 = type metadata accessor for SportsDataServiceResourceRequest(0);
  uint64_t v51 = *(void *)(v46 - 8);
  uint64_t v12 = *(void *)(v51 + 64);
  MEMORY[0x1F4188790](v46);
  uint64_t v52 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v41 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (uint64_t *)((char *)&v41 - v17);
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C15198DC();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EB863FB8);
  sub_1C0B6FCA8(a1, (uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
  sub_1C0B6FCA8(a1, (uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
  uint64_t v20 = sub_1C15198AC();
  os_log_type_t v21 = sub_1C151F38C();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v43 = v6;
    uint64_t v23 = v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v44 = v3;
    uint64_t v25 = v24;
    uint64_t v54 = v24;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v41 = v9;
    uint64_t v42 = a2;
    uint64_t v45 = a1;
    uint64_t v27 = *v18;
    unint64_t v26 = v18[1];
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1BFDA76EC(v27, v26, &v54);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1C0B6F9C4((uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
    *(_WORD *)(v23 + 12) = 2082;
    sub_1C0255390((uint64_t)&v15[*(int *)(v46 + 20)], v47);
    uint64_t v28 = sub_1C151E6AC();
    uint64_t v53 = sub_1BFDA76EC(v28, v29, &v54);
    a1 = v45;
    uint64_t v9 = v41;
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    a2 = v42;
    sub_1C0B6F9C4((uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
    _os_log_impl(&dword_1BFC31000, v20, v21, "Sports data service fetching resource %{public}s, cachePolicy=%{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    uint64_t v30 = v25;
    uint64_t v3 = v44;
    MEMORY[0x1C18C9B00](v30, -1, -1);
    MEMORY[0x1C18C9B00](v23, -1, -1);
  }
  else
  {
    sub_1C0B6F9C4((uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
    sub_1C0B6F9C4((uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
  }

  MEMORY[0x1F4188790](v31);
  *(&v41 - 2) = v3;
  *(&v41 - 1) = (char *)a1;
  sub_1C02509F8();
  sub_1C151932C();
  sub_1C0B6FCA8(a2, (uint64_t)v9, type metadata accessor for SportsDataServiceRequest);
  unint64_t v32 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v33 = swift_allocObject();
  sub_1C0B70244((uint64_t)v9, v33 + v32, type metadata accessor for SportsDataServiceRequest);
  id v34 = (void *)sub_1C1518E7C();
  sub_1C0B6F50C(0);
  sub_1C151901C();
  swift_release();
  swift_release();

  uint64_t v35 = v52;
  sub_1C0B6FCA8(a1, v52, type metadata accessor for SportsDataServiceResourceRequest);
  unint64_t v36 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v37 = swift_allocObject();
  sub_1C0B70244(v35, v37 + v36, type metadata accessor for SportsDataServiceResourceRequest);
  uint64_t v38 = (void *)sub_1C1518E7C();
  uint64_t v39 = sub_1C151903C();
  swift_release();

  swift_release();
  return v39;
}

uint64_t sub_1C0B4F4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)v2;
  uint64_t v7 = type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v49 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v50 = v8;
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  uint64_t v48 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v47 = (uint64_t)&v41 - v11;
  uint64_t v46 = type metadata accessor for SportsDataServiceResourceRequest(0);
  uint64_t v51 = *(void *)(v46 - 8);
  uint64_t v12 = *(void *)(v51 + 64);
  MEMORY[0x1F4188790](v46);
  uint64_t v52 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v41 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (uint64_t *)((char *)&v41 - v17);
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C15198DC();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EB863FB8);
  sub_1C0B6FCA8(a1, (uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
  sub_1C0B6FCA8(a1, (uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
  uint64_t v20 = sub_1C15198AC();
  os_log_type_t v21 = sub_1C151F38C();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v43 = v6;
    uint64_t v23 = v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v44 = v3;
    uint64_t v25 = v24;
    uint64_t v54 = v24;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v41 = v9;
    uint64_t v42 = a2;
    uint64_t v45 = a1;
    uint64_t v27 = *v18;
    unint64_t v26 = v18[1];
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1BFDA76EC(v27, v26, &v54);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1C0B6F9C4((uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
    *(_WORD *)(v23 + 12) = 2082;
    sub_1C0255390((uint64_t)&v15[*(int *)(v46 + 20)], v47);
    uint64_t v28 = sub_1C151E6AC();
    uint64_t v53 = sub_1BFDA76EC(v28, v29, &v54);
    a1 = v45;
    uint64_t v9 = v41;
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    a2 = v42;
    sub_1C0B6F9C4((uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
    _os_log_impl(&dword_1BFC31000, v20, v21, "Sports data service fetching resource %{public}s, cachePolicy=%{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    uint64_t v30 = v25;
    uint64_t v3 = v44;
    MEMORY[0x1C18C9B00](v30, -1, -1);
    MEMORY[0x1C18C9B00](v23, -1, -1);
  }
  else
  {
    sub_1C0B6F9C4((uint64_t)v18, type metadata accessor for SportsDataServiceResourceRequest);
    sub_1C0B6F9C4((uint64_t)v15, type metadata accessor for SportsDataServiceResourceRequest);
  }

  MEMORY[0x1F4188790](v31);
  *(&v41 - 2) = v3;
  *(&v41 - 1) = (char *)a1;
  sub_1C02509F8();
  sub_1C151932C();
  sub_1C0B6FCA8(a2, (uint64_t)v9, type metadata accessor for SportsDataServiceRequest);
  unint64_t v32 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v33 = swift_allocObject();
  sub_1C0B70244((uint64_t)v9, v33 + v32, type metadata accessor for SportsDataServiceRequest);
  id v34 = (void *)sub_1C1518E7C();
  sub_1C0B703C0(0);
  sub_1C151901C();
  swift_release();
  swift_release();

  uint64_t v35 = v52;
  sub_1C0B6FCA8(a1, v52, type metadata accessor for SportsDataServiceResourceRequest);
  unint64_t v36 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v37 = swift_allocObject();
  sub_1C0B70244(v35, v37 + v36, type metadata accessor for SportsDataServiceResourceRequest);
  uint64_t v38 = (void *)sub_1C1518E7C();
  uint64_t v39 = sub_1C151903C();
  swift_release();

  swift_release();
  return v39;
}

uint64_t sub_1C0B4FB30(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v49 = *v1;
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v47 = (uint64_t (*)(uint64_t))((char *)v41 - v6);
  uint64_t v46 = type metadata accessor for SportsDataServiceBatchResourceRequest(0);
  uint64_t v7 = *(void *)(v46 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v46);
  uint64_t v48 = (uint64_t)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v41 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v41 - v13;
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1C15198DC();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EB863FB8);
  sub_1C0B6FCA8(a1, (uint64_t)v14, type metadata accessor for SportsDataServiceBatchResourceRequest);
  sub_1C0B6FCA8(a1, (uint64_t)v11, type metadata accessor for SportsDataServiceBatchResourceRequest);
  uint64_t v16 = sub_1C15198AC();
  os_log_type_t v17 = sub_1C151F38C();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v45 = v2;
    uint64_t v20 = v19;
    uint64_t v43 = swift_slowAlloc();
    uint64_t v51 = v43;
    *(_DWORD *)uint64_t v20 = 136446466;
    v41[1] = v5;
    uint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v22 = MEMORY[0x1C18C6710](v21, MEMORY[0x1E4FBB1A0]);
    int v42 = v18;
    uint64_t v23 = v22;
    uint64_t v44 = v7;
    unint64_t v25 = v24;
    swift_bridgeObjectRelease();
    uint64_t v50 = sub_1BFDA76EC(v23, v25, &v51);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1C0B6F9C4((uint64_t)v14, type metadata accessor for SportsDataServiceBatchResourceRequest);
    *(_WORD *)(v20 + 12) = 2082;
    sub_1C0255390((uint64_t)&v11[*(int *)(v46 + 20)], (uint64_t)v47);
    uint64_t v26 = sub_1C151E6AC();
    uint64_t v50 = sub_1BFDA76EC(v26, v27, &v51);
    uint64_t v7 = v44;
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1C0B6F9C4((uint64_t)v11, type metadata accessor for SportsDataServiceBatchResourceRequest);
    _os_log_impl(&dword_1BFC31000, v16, (os_log_type_t)v42, "Sports data service fetching resources %{public}s, cachePolicy=%{public}s", (uint8_t *)v20, 0x16u);
    uint64_t v28 = v43;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v28, -1, -1);
    uint64_t v29 = v20;
    uint64_t v2 = v45;
    MEMORY[0x1C18C9B00](v29, -1, -1);
  }
  else
  {
    sub_1C0B6F9C4((uint64_t)v14, type metadata accessor for SportsDataServiceBatchResourceRequest);
    sub_1C0B6F9C4((uint64_t)v11, type metadata accessor for SportsDataServiceBatchResourceRequest);
  }

  MEMORY[0x1F4188790](v30);
  v41[-2] = v2;
  v41[-1] = a1;
  uint64_t v31 = a1;
  sub_1C0B6EBE4(0, (unint64_t *)&qword_1EB879BE0, (void (*)(uint64_t))sub_1C02509F8);
  sub_1C151932C();
  uint64_t v47 = type metadata accessor for SportsDataServiceBatchResourceRequest;
  uint64_t v32 = a1;
  uint64_t v33 = v48;
  sub_1C0B6FCA8(v32, v48, type metadata accessor for SportsDataServiceBatchResourceRequest);
  unint64_t v34 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v35 = swift_allocObject();
  sub_1C0B70244(v33, v35 + v34, type metadata accessor for SportsDataServiceBatchResourceRequest);
  unint64_t v36 = (void *)sub_1C1518E7C();
  sub_1C0B6EACC();
  sub_1C151901C();
  swift_release();
  swift_release();

  sub_1C0B6FCA8(v31, v33, v47);
  uint64_t v37 = swift_allocObject();
  sub_1C0B70244(v33, v37 + v34, type metadata accessor for SportsDataServiceBatchResourceRequest);
  uint64_t v38 = (void *)sub_1C1518E7C();
  uint64_t v39 = sub_1C151903C();
  swift_release();

  swift_release();
  return v39;
}

void sub_1C0B50108(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v69 = a5;
  uint64_t v71 = a2;
  uint64_t v68 = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB85C770, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  id v67 = (char *)&v62 - v9;
  uint64_t v10 = sub_1C151631C();
  uint64_t v66 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v65 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], v7);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v62 - v13;
  uint64_t v15 = sub_1C1515FDC();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  int v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v62 - v20;
  sub_1C0B6DDBC(0, &qword_1EB8659E0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster, v7);
  MEMORY[0x1F4188790](v22 - 8);
  unint64_t v24 = (char *)&v62 - v23;
  swift_bridgeObjectRetain();
  id v72 = a4;
  id v25 = objc_msgSend(v72, sel_fileURL);
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    goto LABEL_6;
  }
  uint64_t v26 = v25;
  uint64_t v64 = v10;
  sub_1C1515F1C();

  unint64_t v27 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v27(v14, v18, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_6:
    sub_1C0B70738((uint64_t)v14, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    sub_1C0B6EF6C();
    uint64_t v31 = (void *)swift_allocError();
    swift_willThrow();
    goto LABEL_7;
  }
  v27(v21, v14, v15);
  unint64_t v28 = v70;
  uint64_t v29 = sub_1C1515FFC();
  uint64_t v31 = (void *)v28;
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
LABEL_7:
    if (qword_1EB863FD0 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_1C15198DC();
    __swift_project_value_buffer(v32, (uint64_t)qword_1EB863FB8);
    id v33 = v31;
    swift_bridgeObjectRetain();
    id v34 = v31;
    uint64_t v35 = sub_1C15198AC();
    os_log_type_t v36 = sub_1C151F36C();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v74 = v38;
      *(_DWORD *)uint64_t v37 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_1BFDA76EC(v71, a3, &v74);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 12) = 2082;
      uint64_t v73 = (uint64_t)v31;
      id v39 = v31;
      sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
      uint64_t v40 = sub_1C151E6AC();
      uint64_t v73 = sub_1BFDA76EC(v40, v41, &v74);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BFC31000, v35, v36, "Sports data service failed to decode resource %{public}s, error=%{public}s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v38, -1, -1);
      MEMORY[0x1C18C9B00](v37, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  unint64_t v63 = a3;
  uint64_t v42 = v29;
  unint64_t v43 = v30;
  uint64_t v44 = type metadata accessor for SportsRoster();
  sub_1C0B6EC48();
  uint64_t v69 = v42;
  unint64_t v70 = v43;
  uint64_t v62 = v44;
  sub_1C1517D9C();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  sub_1BFE95664(v69, v70);
  (*(void (**)(char *, void, uint64_t))(*(void *)(v62 - 8) + 56))(v24, 0, 1);
  unint64_t v45 = v63;
  swift_bridgeObjectRetain();
  uint64_t v46 = v71;
  sub_1C02E86F8((uint64_t)v24, v71, v45);
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_1C15198DC();
  __swift_project_value_buffer(v47, (uint64_t)qword_1EB863FB8);
  id v48 = v72;
  swift_bridgeObjectRetain();
  id v49 = v48;
  uint64_t v50 = sub_1C15198AC();
  os_log_type_t v51 = sub_1C151F38C();
  int v52 = v51;
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v53 = swift_slowAlloc();
    id v72 = (id)swift_slowAlloc();
    uint64_t v74 = (uint64_t)v72;
    *(_DWORD *)uint64_t v53 = 136446466;
    LODWORD(v70) = v52;
    swift_bridgeObjectRetain();
    uint64_t v73 = sub_1BFDA76EC(v46, v45, &v74);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v53 + 12) = 2082;
    uint64_t v71 = v53 + 14;
    id v54 = objc_msgSend(v49, sel_fetchDate);
    id v55 = v65;
    sub_1C15162BC();

    uint64_t v56 = (uint64_t)v67;
    sub_1C151644C();
    uint64_t v57 = sub_1C15164AC();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 0, 1, v57);
    uint64_t v58 = sub_1C151619C();
    unint64_t v60 = v59;
    sub_1C0B70738(v56, (unint64_t *)&qword_1EB85C770, MEMORY[0x1E4F27A78]);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v55, v64);
    uint64_t v73 = sub_1BFDA76EC(v58, v60, &v74);
    sub_1C151FE1C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v50, (os_log_type_t)v70, "Sports data service resolved resource %{public}s with fetch date=%{public}s", (uint8_t *)v53, 0x16u);
    id v61 = v72;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v61, -1, -1);
    MEMORY[0x1C18C9B00](v53, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1C0B50AC8(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  if (a2 >> 60 == 15)
  {
    sub_1C0254A10();
    swift_allocError();
    unsigned char *v7 = 5;
    swift_willThrow();
    return;
  }
  if (a3)
  {
    sub_1C00C2AC0(a1, a2);
    id v12 = a3;
    if (objc_msgSend(v12, sel_statusCode) == (id)403)
    {
      sub_1C0254A10();
      swift_allocError();
      *uint64_t v13 = 19;
      swift_willThrow();

      sub_1BFE95878(a1, a2);
      return;
    }
  }
  else
  {
    sub_1BFE95820(a1, a2);
  }
  sub_1C0B714D0();
  sub_1C1517D9C();
  sub_1BFE95878(a1, a2);
  if (!v5)
  {
    sub_1C0B6FCA8(a4, a5, type metadata accessor for SportsDataServiceURLRequest);
    type metadata accessor for SportsDataServiceRequest(0);
    swift_storeEnumTagMultiPayload();
    sub_1C0B7143C(0, &qword_1EB867BC0, (void (*)(void))sub_1C0B714D0, (void (*)(void))sub_1C0B71524);
    uint64_t v15 = a5 + *(int *)(v14 + 52);
    *(_OWORD *)uint64_t v15 = v16;
    *(void *)(v15 + 16) = v17;
  }
}

void sub_1C0B50CB0(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  if (a2 >> 60 == 15)
  {
    sub_1C0254A10();
    swift_allocError();
    unsigned char *v7 = 5;
    swift_willThrow();
    return;
  }
  if (a3)
  {
    sub_1C00C2AC0(a1, a2);
    id v12 = a3;
    if (objc_msgSend(v12, sel_statusCode) == (id)403)
    {
      sub_1C0254A10();
      swift_allocError();
      *uint64_t v13 = 19;
      swift_willThrow();

      sub_1BFE95878(a1, a2);
      return;
    }
  }
  else
  {
    sub_1BFE95820(a1, a2);
  }
  sub_1C0B711B0();
  sub_1C1517D9C();
  sub_1BFE95878(a1, a2);
  if (!v5)
  {
    sub_1C0B6FCA8(a4, a5, type metadata accessor for SportsDataServiceURLRequest);
    type metadata accessor for SportsDataServiceRequest(0);
    swift_storeEnumTagMultiPayload();
    sub_1C0B7143C(0, &qword_1EB867BB8, (void (*)(void))sub_1C0B711B0, (void (*)(void))sub_1C0B71204);
    *(void *)(a5 + *(int *)(v14 + 52)) = v15;
  }
}

uint64_t sub_1C0B50E7C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X4>, void (*a5)(void)@<X5>, void (*a6)(void)@<X6>, uint64_t (*a7)(void)@<X7>, uint64_t a8@<X8>)
{
  if (a2 >> 60 == 15)
  {
    sub_1C0254A10();
    swift_allocError();
    *uint64_t v10 = 5;
    return swift_willThrow();
  }
  if (a3)
  {
    sub_1C00C2AC0(a1, a2);
    id v18 = a3;
    if (objc_msgSend(v18, sel_statusCode) == (id)403)
    {
      sub_1C0254A10();
      swift_allocError();
      *uint64_t v19 = 19;
      swift_willThrow();

      return sub_1BFE95878(a1, a2);
    }
    uint64_t v20 = a7;
  }
  else
  {
    uint64_t v20 = a7;
    sub_1BFE95820(a1, a2);
  }
  a5(0);
  a6();
  sub_1C1517D9C();
  uint64_t result = sub_1BFE95878(a1, a2);
  if (!v8)
  {
    sub_1C0B6FCA8(a4, a8, type metadata accessor for SportsDataServiceURLRequest);
    type metadata accessor for SportsDataServiceRequest(0);
    swift_storeEnumTagMultiPayload();
    uint64_t result = v20(0);
    *(void *)(a8 + *(int *)(result + 52)) = v22;
  }
  return result;
}

uint64_t sub_1C0B5105C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X4>, uint64_t (*a5)(void)@<X5>, void (*a6)(uint64_t)@<X6>, uint64_t (*a7)(void)@<X7>, uint64_t a8@<X8>, uint64_t (*a9)(void))
{
  uint64_t v26 = a4;
  uint64_t v27 = a8;
  uint64_t v15 = a5(0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v25 - v16;
  if (a2 >> 60 == 15)
  {
    sub_1C0254A10();
    swift_allocError();
    *id v18 = 5;
    return swift_willThrow();
  }
  if (a3)
  {
    sub_1C00C2AC0(a1, a2);
    id v20 = a3;
    if (objc_msgSend(v20, sel_statusCode) == (id)403)
    {
      sub_1C0254A10();
      swift_allocError();
      *uint64_t v21 = 19;
      swift_willThrow();

      return sub_1BFE95878(a1, a2);
    }
    id v25 = a7;
  }
  else
  {
    id v25 = a7;
    uint64_t v22 = sub_1BFE95820(a1, a2);
  }
  a6(v22);
  sub_1C1517D9C();
  uint64_t result = sub_1BFE95878(a1, a2);
  if (!v9)
  {
    uint64_t v23 = v27;
    sub_1C0B6FCA8(v26, v27, type metadata accessor for SportsDataServiceURLRequest);
    type metadata accessor for SportsDataServiceRequest(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = v25(0);
    return sub_1C0B70244((uint64_t)v17, v23 + *(int *)(v24 + 52), a9);
  }
  return result;
}

char *sub_1C0B51284(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a2;
  uint64_t v34 = a6;
  uint64_t v36 = a4;
  uint64_t v37 = a5;
  uint64_t v8 = type metadata accessor for SportsDataServiceURLRequest(0);
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v35 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0
    && (uint64_t v32 = v12,
        id v39 = a1,
        id v14 = a1,
        sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930),
        swift_dynamicCast())
    && v38 == 19)
  {
    if (qword_1EB863FD0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1C15198DC();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EB863FB8);
    uint64_t v16 = sub_1C15198AC();
    os_log_type_t v17 = sub_1C151F38C();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      os_log_t v31 = v16;
      uint64_t v19 = v18;
      *(_WORD *)id v18 = 0;
      _os_log_impl(&dword_1BFC31000, v31, v17, "Refreshing access token for sports visualizations", v18, 2u);
      id v20 = v19;
      uint64_t v16 = v31;
      MEMORY[0x1C18C9B00](v20, -1, -1);
    }

    uint64_t v21 = (void *)(v33 + 72);
    uint64_t v22 = *(void *)(v33 + 96);
    uint64_t v33 = *(void *)(v33 + 104);
    __swift_project_boxed_opaque_existential_1(v21, v22);
    uint64_t v23 = v36;
    uint64_t v33 = sub_1C1518A0C();
    uint64_t v24 = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))((char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v10);
    sub_1C0B6FCA8(v23, (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SportsDataServiceURLRequest);
    unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    unint64_t v26 = (v11 + *(unsigned __int8 *)(v35 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    uint64_t v27 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v27 + v25, v13, v10);
    sub_1C0B70244((uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26, type metadata accessor for SportsDataServiceURLRequest);
    unint64_t v28 = (void *)sub_1C1518E7C();
    sub_1C0B7143C(0, &qword_1EB867BC0, (void (*)(void))sub_1C0B714D0, (void (*)(void))sub_1C0B71524);
    type metadata accessor for SportsDataServiceRequestFetcher();
    uint64_t v13 = (char *)sub_1C151900C();
    swift_release();
    swift_release();
  }
  else
  {
    swift_willThrow();
    id v29 = a1;
  }
  return v13;
}

char *sub_1C0B51690(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a2;
  uint64_t v34 = a6;
  uint64_t v36 = a4;
  uint64_t v37 = a5;
  uint64_t v8 = type metadata accessor for SportsDataServiceURLRequest(0);
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v35 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0
    && (uint64_t v32 = v12,
        id v39 = a1,
        id v14 = a1,
        sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930),
        swift_dynamicCast())
    && v38 == 19)
  {
    if (qword_1EB863FD0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1C15198DC();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EB863FB8);
    uint64_t v16 = sub_1C15198AC();
    os_log_type_t v17 = sub_1C151F38C();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      os_log_t v31 = v16;
      uint64_t v19 = v18;
      *(_WORD *)id v18 = 0;
      _os_log_impl(&dword_1BFC31000, v31, v17, "Refreshing access token for sports visualizations", v18, 2u);
      id v20 = v19;
      uint64_t v16 = v31;
      MEMORY[0x1C18C9B00](v20, -1, -1);
    }

    uint64_t v21 = (void *)(v33 + 72);
    uint64_t v22 = *(void *)(v33 + 96);
    uint64_t v33 = *(void *)(v33 + 104);
    __swift_project_boxed_opaque_existential_1(v21, v22);
    uint64_t v23 = v36;
    uint64_t v33 = sub_1C1518A0C();
    uint64_t v24 = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))((char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v10);
    sub_1C0B6FCA8(v23, (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SportsDataServiceURLRequest);
    unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    unint64_t v26 = (v11 + *(unsigned __int8 *)(v35 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    uint64_t v27 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v27 + v25, v13, v10);
    sub_1C0B70244((uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26, type metadata accessor for SportsDataServiceURLRequest);
    unint64_t v28 = (void *)sub_1C1518E7C();
    sub_1C0B7143C(0, &qword_1EB867BB8, (void (*)(void))sub_1C0B711B0, (void (*)(void))sub_1C0B71204);
    type metadata accessor for SportsDataServiceRequestFetcher();
    uint64_t v13 = (char *)sub_1C151900C();
    swift_release();
    swift_release();
  }
  else
  {
    swift_willThrow();
    id v29 = a1;
  }
  return v13;
}

uint64_t sub_1C0B51A9C(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9)
{
  uint64_t v42 = a7;
  unint64_t v43 = a8;
  uint64_t v38 = a2;
  uint64_t v39 = a6;
  uint64_t v44 = a5;
  uint64_t v41 = a4;
  uint64_t v11 = type metadata accessor for SportsDataServiceURLRequest(0);
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v40 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0
    && (uint64_t v37 = v15,
        uint64_t v46 = a1,
        id v17 = a1,
        sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930),
        swift_dynamicCast())
    && v45 == 19)
  {
    uint64_t v36 = a9;
    if (qword_1EB863FD0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1C15198DC();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EB863FB8);
    uint64_t v19 = sub_1C15198AC();
    os_log_type_t v20 = sub_1C151F38C();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      os_log_t v35 = v19;
      uint64_t v22 = v21;
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_1BFC31000, v35, v20, "Refreshing access token for sports visualizations", v21, 2u);
      uint64_t v23 = v22;
      uint64_t v19 = v35;
      MEMORY[0x1C18C9B00](v23, -1, -1);
    }

    uint64_t v24 = (void *)(v38 + 72);
    uint64_t v25 = *(void *)(v38 + 96);
    uint64_t v38 = *(void *)(v38 + 104);
    __swift_project_boxed_opaque_existential_1(v24, v25);
    uint64_t v26 = v41;
    uint64_t v38 = sub_1C1518A0C();
    uint64_t v27 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))((char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v39, v13);
    sub_1C0B6FCA8(v26, (uint64_t)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SportsDataServiceURLRequest);
    unint64_t v28 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    unint64_t v29 = (v14 + *(unsigned __int8 *)(v40 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    uint64_t v30 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v30 + v28, v16, v13);
    sub_1C0B70244((uint64_t)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v30 + v29, type metadata accessor for SportsDataServiceURLRequest);
    os_log_t v31 = (void *)sub_1C1518E7C();
    v43(0);
    type metadata accessor for SportsDataServiceRequestFetcher();
    uint64_t v14 = sub_1C151900C();
    swift_release();
    swift_release();
  }
  else
  {
    swift_willThrow();
    id v32 = a1;
  }
  return v14;
}

void sub_1C0B51E74(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (a2 >> 60 == 15)
  {
    sub_1C0254A10();
    swift_allocError();
    *uint64_t v6 = 5;
    swift_willThrow();
  }
  else
  {
    sub_1BFE95820(a1, a2);
    sub_1C0B714D0();
    sub_1C1517D9C();
    sub_1BFE95878(a1, a2);
    if (!v4)
    {
      sub_1C0B6FCA8(a3, a4, type metadata accessor for SportsDataServiceRequest);
      sub_1C0B7143C(0, &qword_1EB867BC0, (void (*)(void))sub_1C0B714D0, (void (*)(void))sub_1C0B71524);
      uint64_t v11 = a4 + *(int *)(v10 + 52);
      *(_OWORD *)uint64_t v11 = v12;
      *(void *)(v11 + 16) = v13;
    }
  }
}

void sub_1C0B51FC4(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (a2 >> 60 == 15)
  {
    sub_1C0254A10();
    swift_allocError();
    *uint64_t v6 = 5;
    swift_willThrow();
  }
  else
  {
    sub_1BFE95820(a1, a2);
    sub_1C0B711B0();
    sub_1C1517D9C();
    sub_1BFE95878(a1, a2);
    if (!v4)
    {
      sub_1C0B6FCA8(a3, a4, type metadata accessor for SportsDataServiceRequest);
      sub_1C0B7143C(0, &qword_1EB867BB8, (void (*)(void))sub_1C0B711B0, (void (*)(void))sub_1C0B71204);
      *(void *)(a4 + *(int *)(v10 + 52)) = v11;
    }
  }
}

uint64_t sub_1C0B52100@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X4>, void (*a4)(void)@<X5>, void (*a5)(uint64_t)@<X6>, uint64_t (*a6)(void)@<X7>, uint64_t a7@<X8>)
{
  if (a2 >> 60 == 15)
  {
    sub_1C0254A10();
    swift_allocError();
    *uint64_t v9 = 5;
    return swift_willThrow();
  }
  else
  {
    a4(0);
    uint64_t v16 = sub_1BFE95820(a1, a2);
    a5(v16);
    sub_1C1517D9C();
    uint64_t result = sub_1BFE95878(a1, a2);
    if (!v7)
    {
      sub_1C0B6FCA8(a3, a7, type metadata accessor for SportsDataServiceRequest);
      uint64_t result = a6(0);
      *(void *)(a7 + *(int *)(result + 52)) = v17;
    }
  }
  return result;
}

uint64_t sub_1C0B52230@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t (*a4)(void)@<X5>, void (*a5)(uint64_t)@<X6>, uint64_t (*a6)(void)@<X7>, uint64_t a7@<X8>, uint64_t (*a8)(void))
{
  uint64_t v23 = a3;
  uint64_t v14 = a4(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v21 - v15;
  if (a2 >> 60 == 15)
  {
    sub_1C0254A10();
    swift_allocError();
    *uint64_t v17 = 5;
    return swift_willThrow();
  }
  else
  {
    uint64_t v22 = a6;
    uint64_t v19 = sub_1BFE95820(a1, a2);
    a5(v19);
    sub_1C1517D9C();
    uint64_t result = sub_1BFE95878(a1, a2);
    if (!v8)
    {
      sub_1C0B6FCA8(v23, a7, type metadata accessor for SportsDataServiceRequest);
      uint64_t v20 = v22(0);
      return sub_1C0B70244((uint64_t)v16, a7 + *(int *)(v20 + 52), a8);
    }
  }
  return result;
}

uint64_t sub_1C0B523BC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C0B53D34(a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for SportsEventStatusResponse, (void (*)(void))sub_1C0B6F024, (uint64_t (*)(void))sub_1C0B6EFDC, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponse, a4);
}

uint64_t sub_1C0B52424@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v75 = a3;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  *(void *)&long long v76 = (char *)&v62 - v8;
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v74 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v71 = (char *)&v62 - v13;
  uint64_t v14 = type metadata accessor for SportsDataServiceRequest(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB85C770, MEMORY[0x1E4F27A78], v6);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v62 - v18;
  uint64_t v20 = sub_1C151631C();
  uint64_t v73 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  id v72 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1C15198DC();
  __swift_project_value_buffer(v22, (uint64_t)qword_1EB863FB8);
  id v23 = a1;
  uint64_t v24 = sub_1C15198AC();
  os_log_type_t v25 = sub_1C151F38C();
  int v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v27 = swift_slowAlloc();
    int v65 = v26;
    uint64_t v28 = v27;
    uint64_t v66 = swift_slowAlloc();
    *(void *)&long long v77 = v66;
    *(_DWORD *)uint64_t v28 = 136446466;
    os_log_t v64 = v24;
    id v29 = objc_msgSend(v23, sel_resourceID);
    uint64_t v68 = v16;
    id v30 = v29;
    uint64_t v31 = sub_1C151E62C();
    uint64_t v63 = v20;
    uint64_t v32 = v9;
    uint64_t v33 = a4;
    uint64_t v34 = v31;
    uint64_t v67 = v10;
    unint64_t v36 = v35;

    uint64_t v37 = v34;
    a4 = v33;
    uint64_t v9 = v32;
    uint64_t v79 = sub_1BFDA76EC(v37, v36, (uint64_t *)&v77);
    sub_1C151FE1C();

    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2082;
    id v38 = objc_msgSend(v23, sel_fetchDate, v28 + 14);
    uint64_t v39 = v72;
    sub_1C15162BC();

    sub_1C151644C();
    uint64_t v40 = sub_1C15164AC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v19, 0, 1, v40);
    uint64_t v41 = sub_1C151619C();
    unint64_t v43 = v42;
    sub_1C0B70738((uint64_t)v19, (unint64_t *)&qword_1EB85C770, MEMORY[0x1E4F27A78]);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v39, v63);
    uint64_t v79 = sub_1BFDA76EC(v41, v43, (uint64_t *)&v77);
    uint64_t v16 = v68;
    sub_1C151FE1C();

    uint64_t v10 = v67;
    swift_bridgeObjectRelease();
    os_log_t v44 = v64;
    _os_log_impl(&dword_1BFC31000, v64, (os_log_type_t)v65, "Sports data service resolved resource %{public}s with fetch date=%{public}s", (uint8_t *)v28, 0x16u);
    uint64_t v45 = v66;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v45, -1, -1);
    MEMORY[0x1C18C9B00](v28, -1, -1);
  }
  else
  {
  }
  uint64_t v46 = v76;
  sub_1C0B6FCA8(v75, (uint64_t)v16, type metadata accessor for SportsDataServiceRequest);
  id v47 = objc_msgSend(v23, sel_fileURL);
  if (!v47)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v46, 1, 1, v9);
    goto LABEL_11;
  }
  id v48 = v47;
  id v49 = v74;
  sub_1C1515F1C();

  uint64_t v50 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v50(v46, v49, v9);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v46, 0, 1, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v46, 1, v9) == 1)
  {
LABEL_11:
    sub_1C0B70738(v46, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    sub_1C0B6EF6C();
    swift_allocError();
    swift_willThrow();
    return sub_1C0B6F9C4((uint64_t)v16, type metadata accessor for SportsDataServiceRequest);
  }
  uint64_t v51 = v10;
  int v52 = v71;
  v50((uint64_t)v71, (char *)v46, v9);
  uint64_t v53 = v70;
  uint64_t v54 = sub_1C1515FFC();
  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v52, v9);
    return sub_1C0B6F9C4((uint64_t)v16, type metadata accessor for SportsDataServiceRequest);
  }
  uint64_t v57 = v54;
  unint64_t v58 = v55;
  sub_1C0B714D0();
  sub_1C1517D9C();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v71, v9);
  sub_1BFE95664(v57, v58);
  long long v76 = v77;
  uint64_t v59 = v78;
  sub_1C0B7143C(0, &qword_1EB867BC0, (void (*)(void))sub_1C0B714D0, (void (*)(void))sub_1C0B71524);
  uint64_t v61 = a4 + *(int *)(v60 + 52);
  *(_OWORD *)uint64_t v61 = v76;
  *(void *)(v61 + 16) = v59;
  return sub_1C0B70244((uint64_t)v16, a4, type metadata accessor for SportsDataServiceRequest);
}

uint64_t sub_1C0B52C3C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v74 = a3;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v75 = (char *)&v61 - v8;
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v73 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v70 = (char *)&v61 - v13;
  uint64_t v14 = type metadata accessor for SportsDataServiceRequest(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB85C770, MEMORY[0x1E4F27A78], v6);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v61 - v18;
  uint64_t v20 = sub_1C151631C();
  uint64_t v72 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v71 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1C15198DC();
  __swift_project_value_buffer(v22, (uint64_t)qword_1EB863FB8);
  id v23 = a1;
  uint64_t v24 = sub_1C15198AC();
  os_log_type_t v25 = sub_1C151F38C();
  int v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v27 = swift_slowAlloc();
    int v64 = v26;
    uint64_t v28 = v27;
    uint64_t v65 = swift_slowAlloc();
    uint64_t v77 = v65;
    *(_DWORD *)uint64_t v28 = 136446466;
    os_log_t v63 = v24;
    id v29 = objc_msgSend(v23, sel_resourceID);
    uint64_t v67 = v16;
    id v30 = v29;
    uint64_t v31 = sub_1C151E62C();
    uint64_t v62 = v20;
    uint64_t v32 = v9;
    uint64_t v33 = a4;
    uint64_t v34 = v31;
    uint64_t v66 = v10;
    unint64_t v36 = v35;

    uint64_t v37 = v34;
    a4 = v33;
    uint64_t v9 = v32;
    uint64_t v76 = sub_1BFDA76EC(v37, v36, &v77);
    sub_1C151FE1C();

    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2082;
    id v38 = objc_msgSend(v23, sel_fetchDate, v28 + 14);
    uint64_t v39 = v71;
    sub_1C15162BC();

    sub_1C151644C();
    uint64_t v40 = sub_1C15164AC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v19, 0, 1, v40);
    uint64_t v41 = sub_1C151619C();
    unint64_t v43 = v42;
    sub_1C0B70738((uint64_t)v19, (unint64_t *)&qword_1EB85C770, MEMORY[0x1E4F27A78]);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v39, v62);
    uint64_t v76 = sub_1BFDA76EC(v41, v43, &v77);
    uint64_t v16 = v67;
    sub_1C151FE1C();

    uint64_t v10 = v66;
    swift_bridgeObjectRelease();
    os_log_t v44 = v63;
    _os_log_impl(&dword_1BFC31000, v63, (os_log_type_t)v64, "Sports data service resolved resource %{public}s with fetch date=%{public}s", (uint8_t *)v28, 0x16u);
    uint64_t v45 = v65;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v45, -1, -1);
    MEMORY[0x1C18C9B00](v28, -1, -1);
  }
  else
  {
  }
  uint64_t v46 = (uint64_t)v75;
  sub_1C0B6FCA8(v74, (uint64_t)v16, type metadata accessor for SportsDataServiceRequest);
  id v47 = objc_msgSend(v23, sel_fileURL);
  if (!v47)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v46, 1, 1, v9);
    goto LABEL_11;
  }
  id v48 = v47;
  id v49 = v73;
  sub_1C1515F1C();

  uint64_t v50 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v50(v46, v49, v9);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v46, 0, 1, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v46, 1, v9) == 1)
  {
LABEL_11:
    sub_1C0B70738(v46, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    sub_1C0B6EF6C();
    swift_allocError();
    swift_willThrow();
    return sub_1C0B6F9C4((uint64_t)v16, type metadata accessor for SportsDataServiceRequest);
  }
  uint64_t v51 = v10;
  int v52 = v70;
  v50((uint64_t)v70, (char *)v46, v9);
  uint64_t v53 = v69;
  uint64_t v54 = sub_1C1515FFC();
  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v52, v9);
    return sub_1C0B6F9C4((uint64_t)v16, type metadata accessor for SportsDataServiceRequest);
  }
  uint64_t v57 = v54;
  unint64_t v58 = v55;
  sub_1C0B711B0();
  sub_1C1517D9C();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v70, v9);
  sub_1BFE95664(v57, v58);
  uint64_t v59 = v77;
  sub_1C0B7143C(0, &qword_1EB867BB8, (void (*)(void))sub_1C0B711B0, (void (*)(void))sub_1C0B71204);
  *(void *)(a4 + *(int *)(v60 + 52)) = v59;
  return sub_1C0B70244((uint64_t)v16, a4, type metadata accessor for SportsDataServiceRequest);
}

uint64_t sub_1C0B53440@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C0B534E8(a1, a2, a3, (void (*)(void))type metadata accessor for SportsSyncingConfigResource, (void (*)(void))sub_1C0B70D2C, (uint64_t (*)(void))sub_1C0B70CE4, a4);
}

uint64_t sub_1C0B53494@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C0B534E8(a1, a2, a3, (void (*)(void))type metadata accessor for SportsSyncingConfigV2Resource, (void (*)(void))sub_1C0B708AC, (uint64_t (*)(void))sub_1C0B70864, a4);
}

uint64_t sub_1C0B534E8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(void)@<X3>, void (*a5)(void)@<X4>, uint64_t (*a6)(void)@<X5>, uint64_t a7@<X8>)
{
  uint64_t v69 = a6;
  uint64_t v70 = a2;
  uint64_t v71 = a4;
  uint64_t v72 = a5;
  uint64_t v78 = a3;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v79 = &v62[-v11];
  uint64_t v12 = sub_1C1515FDC();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v77 = &v62[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v74 = &v62[-v16];
  uint64_t v17 = type metadata accessor for SportsDataServiceRequest(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = &v62[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB85C770, MEMORY[0x1E4F27A78], v9);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = &v62[-v21];
  uint64_t v23 = sub_1C151631C();
  uint64_t v75 = *(void *)(v23 - 8);
  uint64_t v76 = v23;
  MEMORY[0x1F4188790](v23);
  os_log_type_t v25 = &v62[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1C15198DC();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EB863FB8);
  id v27 = a1;
  uint64_t v28 = sub_1C15198AC();
  os_log_type_t v29 = sub_1C151F38C();
  int v30 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v68 = v19;
    uint64_t v32 = v31;
    uint64_t v65 = swift_slowAlloc();
    uint64_t v81 = v65;
    *(_DWORD *)uint64_t v32 = 136446466;
    os_log_t v64 = v28;
    id v33 = objc_msgSend(v27, sel_resourceID);
    uint64_t v67 = a7;
    id v34 = v33;
    uint64_t v35 = sub_1C151E62C();
    uint64_t v66 = v13;
    uint64_t v36 = v35;
    int v63 = v30;
    uint64_t v37 = v12;
    unint64_t v39 = v38;

    uint64_t v80 = sub_1BFDA76EC(v36, v39, &v81);
    sub_1C151FE1C();

    uint64_t v12 = v37;
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2082;
    id v40 = objc_msgSend(v27, sel_fetchDate);
    sub_1C15162BC();

    sub_1C151644C();
    uint64_t v41 = sub_1C15164AC();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v22, 0, 1, v41);
    uint64_t v42 = sub_1C151619C();
    unint64_t v44 = v43;
    sub_1C0B70738((uint64_t)v22, (unint64_t *)&qword_1EB85C770, MEMORY[0x1E4F27A78]);
    (*(void (**)(unsigned char *, uint64_t))(v75 + 8))(v25, v76);
    uint64_t v80 = sub_1BFDA76EC(v42, v44, &v81);
    a7 = v67;
    sub_1C151FE1C();

    uint64_t v13 = v66;
    swift_bridgeObjectRelease();
    os_log_t v45 = v64;
    _os_log_impl(&dword_1BFC31000, v64, (os_log_type_t)v63, "Sports data service resolved resource %{public}s with fetch date=%{public}s", (uint8_t *)v32, 0x16u);
    uint64_t v46 = v65;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v46, -1, -1);
    uint64_t v47 = v32;
    uint64_t v19 = v68;
    MEMORY[0x1C18C9B00](v47, -1, -1);
  }
  else
  {
  }
  sub_1C0B6FCA8(v78, (uint64_t)v19, type metadata accessor for SportsDataServiceRequest);
  id v48 = objc_msgSend(v27, sel_fileURL);
  uint64_t v49 = (uint64_t)v79;
  if (!v48)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v79, 1, 1, v12);
    goto LABEL_11;
  }
  uint64_t v50 = v48;
  uint64_t v51 = v77;
  sub_1C1515F1C();

  int v52 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v13 + 32);
  v52(v49, v51, v12);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v49, 0, 1, v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v49, 1, v12) == 1)
  {
LABEL_11:
    sub_1C0B70738(v49, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    sub_1C0B6EF6C();
    swift_allocError();
    swift_willThrow();
    return sub_1C0B6F9C4((uint64_t)v19, type metadata accessor for SportsDataServiceRequest);
  }
  uint64_t v53 = v13;
  uint64_t v54 = v74;
  v52((uint64_t)v74, (unsigned char *)v49, v12);
  uint64_t v55 = v73;
  uint64_t v56 = sub_1C1515FFC();
  if (v55)
  {
    (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v54, v12);
    return sub_1C0B6F9C4((uint64_t)v19, type metadata accessor for SportsDataServiceRequest);
  }
  uint64_t v59 = v56;
  unint64_t v60 = v57;
  v71(0);
  v72();
  sub_1C1517D9C();
  (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v74, v12);
  sub_1BFE95664(v59, v60);
  uint64_t v61 = v81;
  *(void *)(a7 + *(int *)(v69(0) + 52)) = v61;
  return sub_1C0B70244((uint64_t)v19, a7, type metadata accessor for SportsDataServiceRequest);
}

uint64_t sub_1C0B53CCC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C0B53D34(a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for SportsDataVisualizationResponse, (void (*)(void))sub_1C0B6AE5C, (uint64_t (*)(void))sub_1C0B6F50C, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponse, a4);
}

uint64_t sub_1C0B53D34@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void, __n128)@<X3>, void (*a5)(void)@<X4>, uint64_t (*a6)(void)@<X5>, uint64_t (*a7)(void)@<X6>, uint64_t a8@<X8>)
{
  uint64_t v77 = a7;
  uint64_t v81 = a5;
  uint64_t v87 = a3;
  uint64_t v80 = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v70 - v14;
  uint64_t v16 = sub_1C1515FDC();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v88 = v16;
  uint64_t v89 = v17;
  MEMORY[0x1F4188790](v16);
  id v86 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v20 = MEMORY[0x1F4188790](v19);
  id v83 = (char *)&v70 - v21;
  uint64_t v78 = a4(0, v20);
  MEMORY[0x1F4188790](v78);
  uint64_t v79 = (char *)&v70 - v22;
  uint64_t v23 = type metadata accessor for SportsDataServiceRequest(0);
  MEMORY[0x1F4188790](v23 - 8);
  os_log_type_t v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB85C770, MEMORY[0x1E4F27A78], v12);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v70 - v27;
  uint64_t v29 = sub_1C151631C();
  uint64_t v84 = *(void *)(v29 - 8);
  uint64_t v85 = v29;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v70 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1C15198DC();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EB863FB8);
  id v33 = a1;
  id v34 = sub_1C15198AC();
  os_log_type_t v35 = sub_1C151F38C();
  int v36 = v35;
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v75 = a8;
    uint64_t v38 = v37;
    uint64_t v73 = swift_slowAlloc();
    uint64_t v91 = v73;
    *(_DWORD *)uint64_t v38 = 136446466;
    int v72 = v36;
    id v39 = objc_msgSend(v33, sel_resourceID);
    uint64_t v76 = a6;
    id v40 = v39;
    uint64_t v41 = sub_1C151E62C();
    uint64_t v74 = v25;
    uint64_t v42 = v41;
    os_log_t v71 = v34;
    unint64_t v43 = v15;
    unint64_t v45 = v44;

    uint64_t v90 = sub_1BFDA76EC(v42, v45, &v91);
    sub_1C151FE1C();

    uint64_t v15 = v43;
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2082;
    id v46 = objc_msgSend(v33, sel_fetchDate);
    sub_1C15162BC();

    sub_1C151644C();
    uint64_t v47 = sub_1C15164AC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v28, 0, 1, v47);
    uint64_t v48 = sub_1C151619C();
    unint64_t v50 = v49;
    sub_1C0B70738((uint64_t)v28, (unint64_t *)&qword_1EB85C770, MEMORY[0x1E4F27A78]);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v31, v85);
    uint64_t v90 = sub_1BFDA76EC(v48, v50, &v91);
    a6 = v76;
    sub_1C151FE1C();

    os_log_type_t v25 = v74;
    swift_bridgeObjectRelease();
    os_log_t v51 = v71;
    _os_log_impl(&dword_1BFC31000, v71, (os_log_type_t)v72, "Sports data service resolved resource %{public}s with fetch date=%{public}s", (uint8_t *)v38, 0x16u);
    uint64_t v52 = v73;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v52, -1, -1);
    uint64_t v53 = v38;
    a8 = v75;
    MEMORY[0x1C18C9B00](v53, -1, -1);
  }
  else
  {
  }
  uint64_t v54 = v88;
  sub_1C0B6FCA8(v87, (uint64_t)v25, type metadata accessor for SportsDataServiceRequest);
  id v55 = objc_msgSend(v33, sel_fileURL);
  if (!v55)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v15, 1, 1, v54);
    goto LABEL_11;
  }
  uint64_t v56 = v55;
  unint64_t v57 = v86;
  sub_1C1515F1C();

  uint64_t v58 = v89;
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
  v59(v15, v57, v54);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v15, 0, 1, v54);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v15, 1, v54) == 1)
  {
LABEL_11:
    sub_1C0B70738((uint64_t)v15, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    sub_1C0B6EF6C();
    swift_allocError();
    swift_willThrow();
    return sub_1C0B6F9C4((uint64_t)v25, type metadata accessor for SportsDataServiceRequest);
  }
  uint64_t v60 = (uint64_t)v25;
  uint64_t v61 = v83;
  v59(v83, v15, v54);
  uint64_t v62 = v82;
  uint64_t v63 = sub_1C1515FFC();
  if (!v62)
  {
    uint64_t v65 = v63;
    unint64_t v66 = v64;
    v81();
    uint64_t v67 = (uint64_t)v79;
    sub_1C1517D9C();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v83, v54);
    sub_1BFE95664(v65, v66);
    sub_1C0B70244(v60, a8, type metadata accessor for SportsDataServiceRequest);
    uint64_t v68 = a6(0);
    return sub_1C0B70244(v67, a8 + *(int *)(v68 + 52), v77);
  }
  (*(void (**)(char *, uint64_t))(v89 + 8))(v61, v54);
  return sub_1C0B6F9C4((uint64_t)v25, type metadata accessor for SportsDataServiceRequest);
}

uint64_t sub_1C0B54564@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C0B53D34(a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for SportsFeaturedEventsResource, (void (*)(void))sub_1C0B70408, (uint64_t (*)(void))sub_1C0B703C0, (uint64_t (*)(void))type metadata accessor for SportsFeaturedEventsResource, a4);
}

uint64_t SportsDataServiceType.fetchRosters(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = 0;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(a3 + 88))(a1, &v4, a2);
}

uint64_t SportsDataServiceType.fetchDataVisualizations(request:)(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *((void *)a1 + 2);
  char v4 = *((unsigned char *)a1 + 24);
  long long v7 = *a1;
  uint64_t v8 = v3;
  char v9 = v4;
  char v6 = 0;
  return (*(uint64_t (**)(long long *, char *, uint64_t))(a3 + 96))(&v7, &v6, a2);
}

uint64_t SportsDataServiceType.fetchDataVisualizations(requests:context:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  char v8 = *a2;
  sub_1C0B7233C(0, (unint64_t *)&unk_1EB863E90, (uint64_t)&type metadata for SportsDataVisualizationResult, MEMORY[0x1E4FAB088]);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 40) = v4;
  *(unsigned char *)(v9 + 48) = v8;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return sub_1C1518FDC();
}

uint64_t sub_1C0B54730(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 56) = a6;
  *(unsigned char *)(v6 + 96) = a4;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 40) = a3;
  *(void *)(v6 + 24) = a1;
  return MEMORY[0x1F4188298](sub_1C0B5475C, 0, 0);
}

uint64_t sub_1C0B5475C()
{
  char v1 = *(unsigned char *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 64) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 48);
  *(void *)(v3 + 32) = v2;
  *(unsigned char *)(v3 + 40) = v1;
  swift_unknownObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C0B54864;
  uint64_t v5 = *(void *)(v0 + 32);
  return MEMORY[0x1F415EEF0](v5, &unk_1EA1A3F70, v3, &type metadata for SportsDataVisualizationRequest, &type metadata for SportsDataVisualizationResult);
}

uint64_t sub_1C0B54864(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 80) = a1;
  *(void *)(v3 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1C0B54C3C;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_1C0B54980;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1C0B54980()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_25:
    uint64_t v17 = (uint64_t *)v0[3];
    swift_bridgeObjectRelease();
    v0[2] = v4;
    sub_1C0B7233C(0, &qword_1EB890030, (uint64_t)&type metadata for SportsDataVisualization, MEMORY[0x1E4FBB320]);
    sub_1C0B6F08C((unint64_t *)&unk_1EB86B150, &qword_1EB890030, (uint64_t)&type metadata for SportsDataVisualization);
    uint64_t v18 = sub_1C151E92C();
    swift_bridgeObjectRelease();
    *uint64_t v17 = v18;
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
  uint64_t v3 = (uint64_t *)(v1 + 32);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v5 = *v3;
    uint64_t v6 = *(void *)(*v3 + 16);
    int64_t v7 = v4[2];
    int64_t v8 = v7 + v6;
    if (__OFADD__(v7, v6)) {
      break;
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v8 <= v4[3] >> 1)
    {
      if (*(void *)(v5 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v7 <= v8) {
        int64_t v10 = v7 + v6;
      }
      else {
        int64_t v10 = v7;
      }
      uint64_t v4 = sub_1C0EDF770(isUniquelyReferenced_nonNull_native, v10, 1, v4);
      if (*(void *)(v5 + 16))
      {
LABEL_14:
        uint64_t v11 = v4[2];
        if ((v4[3] >> 1) - v11 < v6) {
          goto LABEL_30;
        }
        unint64_t v12 = (unint64_t)&v4[v11 + 4];
        if (v5 + 32 < v12 + 8 * v6 && v12 < v5 + 32 + 8 * v6) {
          return sub_1C152052C();
        }
        swift_arrayInitWithCopy();
        if (v6)
        {
          uint64_t v14 = v4[2];
          BOOL v15 = __OFADD__(v14, v6);
          uint64_t v16 = v14 + v6;
          if (v15) {
            goto LABEL_31;
          }
          v4[2] = v16;
        }
        goto LABEL_4;
      }
    }
    if (v6)
    {
      __break(1u);
      break;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    ++v3;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return sub_1C152052C();
}

uint64_t sub_1C0B54C3C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0B54CA0()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0B54CE0(uint64_t a1)
{
  char v4 = *(unsigned char *)(v1 + 48);
  uint64_t v5 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v1 + 16);
  long long v6 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_1C005E7F4;
  *(unsigned char *)(v5 + 96) = v4;
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v5 + 48) = v7;
  *(void *)(v5 + 24) = a1;
  return MEMORY[0x1F4188298](sub_1C0B5475C, 0, 0);
}

uint64_t dispatch thunk of SportsDataServiceType.fetchTaxonomyGraphResource(cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchStandingConfigResource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchLineScoreConfigResource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchBoxScoreConfigResource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchBracketConfigResource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchKeyPlayersConfigResource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchInjuryReportConfigResource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchScoreConfigResource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchSyncingConfigResource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchSyncingConfigV2Resource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchRosters(for:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of SportsDataServiceType.fetchDataVisualizations(request:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t sub_1C0B54E94(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 32) = a5;
  *(void *)(v6 + 40) = a6;
  *(unsigned char *)(v6 + 96) = a4;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a3;
  *(_OWORD *)(v6 + 48) = *(_OWORD *)a2;
  *(void *)(v6 + 64) = *(void *)(a2 + 16);
  *(unsigned char *)(v6 + 97) = *(unsigned char *)(a2 + 24);
  return MEMORY[0x1F4188298](sub_1C0B54ED4, 0, 0);
}

uint64_t sub_1C0B54ED4()
{
  uint64_t v13 = v0;
  char v1 = *(unsigned char *)(v0 + 97);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  char v5 = *(unsigned char *)(v0 + 96);
  long long v9 = *(_OWORD *)(v0 + 48);
  uint64_t v10 = v2;
  char v11 = v1;
  char v12 = v5;
  *(void *)(v0 + 72) = (*(uint64_t (**)(long long *, char *, uint64_t))(v4 + 96))(&v9, &v12, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1C0B54FB8;
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x1F415EBC8](v7);
}

uint64_t sub_1C0B54FB8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C0B550F4, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C0B550F4()
{
  swift_release();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0B55158@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SportsDataVisualization.identifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0B5519C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0B5520C()
{
  type metadata accessor for SportsDataServiceRequest(0);
  sub_1C151932C();
  uint64_t v0 = (void *)sub_1C1518E7C();
  sub_1C0B7143C(0, &qword_1EB867BC0, (void (*)(void))sub_1C0B714D0, (void (*)(void))sub_1C0B71524);
  sub_1C151900C();
  swift_release();

  char v1 = (void *)sub_1C1518E7C();
  sub_1C1518FFC();
  swift_release();

  uint64_t v2 = (void *)sub_1C1518E7C();
  uint64_t v3 = sub_1C151903C();
  swift_release();

  return v3;
}

uint64_t sub_1C0B55398()
{
  return sub_1C0B55440();
}

uint64_t sub_1C0B553EC()
{
  return sub_1C0B55440();
}

uint64_t sub_1C0B55440()
{
  type metadata accessor for SportsDataServiceRequest(0);
  sub_1C151932C();
  uint64_t v0 = (void *)sub_1C1518E7C();
  sub_1C0B7143C(0, &qword_1EB867BB8, (void (*)(void))sub_1C0B711B0, (void (*)(void))sub_1C0B71204);
  sub_1C151900C();
  swift_release();

  char v1 = (void *)sub_1C1518E7C();
  sub_1C1518FFC();
  swift_release();

  uint64_t v2 = (void *)sub_1C1518E7C();
  uint64_t v3 = sub_1C151903C();
  swift_release();

  return v3;
}

uint64_t sub_1C0B55598()
{
  return sub_1C0B55440();
}

uint64_t sub_1C0B555EC()
{
  return sub_1C0B55440();
}

uint64_t sub_1C0B55640()
{
  return sub_1C0B55440();
}

uint64_t sub_1C0B55694()
{
  return sub_1C0B55440();
}

uint64_t sub_1C0B556E8()
{
  return sub_1C0B55440();
}

uint64_t sub_1C0B5573C()
{
  type metadata accessor for SportsDataServiceRequest(0);
  sub_1C151932C();
  uint64_t v0 = (void *)sub_1C1518E7C();
  sub_1C0B70CE4(0);
  sub_1C151900C();
  swift_release();

  char v1 = (void *)sub_1C1518E7C();
  sub_1BFC845BC(0, &qword_1EA1A3F48);
  sub_1C1518FFC();
  swift_release();

  uint64_t v2 = (void *)sub_1C1518E7C();
  uint64_t v3 = sub_1C151903C();
  swift_release();

  return v3;
}

uint64_t sub_1C0B55894()
{
  type metadata accessor for SportsDataServiceRequest(0);
  sub_1C151932C();
  uint64_t v0 = (void *)sub_1C1518E7C();
  sub_1C0B70864(0);
  sub_1C151900C();
  swift_release();

  char v1 = (void *)sub_1C1518E7C();
  sub_1BFC845BC(0, &qword_1EA1A3F48);
  sub_1C1518FFC();
  swift_release();

  uint64_t v2 = (void *)sub_1C1518E7C();
  uint64_t v3 = sub_1C151903C();
  swift_release();

  return v3;
}

uint64_t sub_1C0B559F0(void *a1)
{
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EB93C5E8;
  sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C1529AE0;
  id v4 = v2;
  id v5 = objc_msgSend(a1, sel_identifier);
  uint64_t v6 = sub_1C151E62C();
  uint64_t v8 = v7;

  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1BFE9C558();
  *(void *)(v3 + 64) = v9;
  *(void *)(v3 + 32) = v6;
  *(void *)(v3 + 40) = v8;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(a1, sel_identifier);
  sub_1C151E62C();

  sub_1C1518DBC();
  uint64_t v11 = swift_bridgeObjectRelease();
  if (v24)
  {
    char v12 = (void *)qword_1EB93C5E8;
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C1529AE0;
    id v14 = v12;
    id v15 = objc_msgSend(a1, sel_identifier);
    uint64_t v16 = sub_1C151E62C();
    uint64_t v18 = v17;

    *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v13 + 64) = v9;
    *(void *)(v13 + 32) = v16;
    *(void *)(v13 + 40) = v18;
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    sub_1C0B7233C(0, &qword_1EA1A3F10, (uint64_t)&type metadata for SportsEventRoster, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  else
  {
    MEMORY[0x1F4188790](v11);
    type metadata accessor for SportsDataServiceBatchResourceRequest(0);
    sub_1C151932C();
    __n128 v20 = (void *)sub_1C1518E7C();
    sub_1C0B6EACC();
    sub_1C151900C();
    swift_release();

    *(void *)(swift_allocObject() + 16) = a1;
    swift_unknownObjectRetain();
    uint64_t v21 = (void *)sub_1C1518E7C();
    sub_1C151901C();
    swift_release();
    swift_release();

    *(void *)(swift_allocObject() + 16) = a1;
    swift_unknownObjectRetain();
    uint64_t v22 = (void *)sub_1C1518E7C();
    uint64_t v19 = sub_1C151903C();
    swift_release();
    swift_release();
  }
  return v19;
}

uint64_t sub_1C0B55E54(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  char v16 = *a2;
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_1EB93C5E8;
  sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
  id v10 = v8;
  sub_1C152036C();
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 64) = sub_1BFE9C558();
  *(void *)(v9 + 32) = 0;
  *(void *)(v9 + 40) = 0xE000000000000000;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  sub_1C0254D40(v5, v4, v6, v7);
  sub_1C1518DBC();
  sub_1C0254C7C(v5, v4, v6, v7);
  sub_1C0B7233C(0, (unint64_t *)&unk_1EB863E90, (uint64_t)&type metadata for SportsDataVisualizationResult, MEMORY[0x1E4FAB088]);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v3;
  *(void *)(v11 + 24) = v5;
  *(void *)(v11 + 32) = v4;
  *(void *)(v11 + 40) = v6;
  *(unsigned char *)(v11 + 48) = v7;
  *(unsigned char *)(v11 + 49) = v16;
  sub_1C0254D40(v5, v4, v6, v7);
  swift_retain();
  sub_1C1518FDC();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v5;
  *(void *)(v12 + 24) = v4;
  *(void *)(v12 + 32) = v6;
  *(unsigned char *)(v12 + 40) = v7;
  sub_1C0254D40(v5, v4, v6, v7);
  uint64_t v13 = (void *)sub_1C1518E7C();
  uint64_t v14 = sub_1C151901C();
  swift_release();
  swift_release();

  return v14;
}

uint64_t sub_1C0B56294(uint64_t a1, uint64_t a2)
{
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  char v7 = (char *)&v13 - v6;
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
  sub_1C151932C();
  sub_1C0255390(a2, (uint64_t)v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  sub_1C0255424((uint64_t)v7, v9 + v8);
  id v10 = (void *)sub_1C1518E7C();
  type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v11 = sub_1C1518FFC();
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_1C0B56438(uint64_t a1, uint64_t a2)
{
  return sub_1C0B56668(a1, a2, sub_1C0B499DC);
}

uint64_t sub_1C0B56464@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1C0B7143C(0, &qword_1EB867BC0, (void (*)(void))sub_1C0B714D0, (void (*)(void))sub_1C0B71524);
  uint64_t v5 = (void *)(a1 + *(int *)(v4 + 52));
  uint64_t v6 = v5[1];
  uint64_t v7 = v5[2];
  *a2 = *v5;
  a2[1] = v6;
  a2[2] = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0B564FC()
{
  return sub_1C0B57264();
}

uint64_t sub_1C0B5650C(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA8C8];
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
  uint64_t v6 = sub_1C1517F3C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = sub_1C02513DC(1, (uint64_t)v5);
  sub_1C0B70738((uint64_t)v5, (unint64_t *)&qword_1EB882B40, v2);
  return v7;
}

uint64_t sub_1C0B5663C(uint64_t a1, uint64_t a2)
{
  return sub_1C0B56668(a1, a2, sub_1C0B49E4C);
}

uint64_t sub_1C0B56668(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  return a3(a1);
}

uint64_t sub_1C0B566B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C0B56810(a1, a2);
}

uint64_t sub_1C0B566D0()
{
  return sub_1C0B57264();
}

uint64_t sub_1C0B566E0(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA8C8];
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
  uint64_t v6 = sub_1C1517F3C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = sub_1C02513DC(2, (uint64_t)v5);
  sub_1C0B70738((uint64_t)v5, (unint64_t *)&qword_1EB882B40, v2);
  return v7;
}

uint64_t sub_1C0B56810@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1C0B7143C(0, &qword_1EB867BB8, (void (*)(void))sub_1C0B711B0, (void (*)(void))sub_1C0B71204);
  *a2 = *(void *)(a1 + *(int *)(v4 + 52));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0B56894()
{
  return sub_1C0B57264();
}

uint64_t sub_1C0B568A4(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA8C8];
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
  uint64_t v6 = sub_1C1517F3C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = sub_1C02513DC(3, (uint64_t)v5);
  sub_1C0B70738((uint64_t)v5, (unint64_t *)&qword_1EB882B40, v2);
  return v7;
}

uint64_t sub_1C0B569D4()
{
  return sub_1C0B57264();
}

uint64_t sub_1C0B569E4(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA8C8];
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
  uint64_t v6 = sub_1C1517F3C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = sub_1C02513DC(4, (uint64_t)v5);
  sub_1C0B70738((uint64_t)v5, (unint64_t *)&qword_1EB882B40, v2);
  return v7;
}

uint64_t sub_1C0B56B14()
{
  return sub_1C0B57264();
}

uint64_t sub_1C0B56B24(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA8C8];
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
  uint64_t v6 = sub_1C1517F3C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = sub_1C02513DC(5, (uint64_t)v5);
  sub_1C0B70738((uint64_t)v5, (unint64_t *)&qword_1EB882B40, v2);
  return v7;
}

uint64_t sub_1C0B56C54()
{
  return sub_1C0B57264();
}

uint64_t sub_1C0B56C64(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA8C8];
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
  uint64_t v6 = sub_1C1517F3C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = sub_1C02513DC(6, (uint64_t)v5);
  sub_1C0B70738((uint64_t)v5, (unint64_t *)&qword_1EB882B40, v2);
  return v7;
}

uint64_t sub_1C0B56D94()
{
  return sub_1C0B57264();
}

uint64_t sub_1C0B56DA4(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA8C8];
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
  uint64_t v6 = sub_1C1517F3C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = sub_1C02513DC(7, (uint64_t)v5);
  sub_1C0B70738((uint64_t)v5, (unint64_t *)&qword_1EB882B40, v2);
  return v7;
}

uint64_t sub_1C0B56ED4()
{
  return sub_1C0B57264();
}

uint64_t sub_1C0B56EE4(uint64_t a1, uint64_t a2)
{
  return sub_1C0B56668(a1, a2, sub_1C0B4A2BC);
}

uint64_t sub_1C0B56F10@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C0B571F0(a1, (uint64_t (*)(void))sub_1C0B70CE4, (uint64_t (*)(void))type metadata accessor for SportsSyncingConfigResource, (uint64_t)&protocol witness table for SportsSyncingConfigResource, a2);
}

uint64_t sub_1C0B56F58()
{
  return sub_1C0B57264();
}

uint64_t sub_1C0B56F68(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA8C8];
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
  uint64_t v10 = sub_1C1517F3C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_1C151932C();
  sub_1C0255390((uint64_t)v9, (uint64_t)v6);
  unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v12 = swift_allocObject();
  sub_1C0255424((uint64_t)v6, v12 + v11);
  uint64_t v13 = (void *)sub_1C1518E7C();
  type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v14 = sub_1C1518FFC();
  swift_release();
  swift_release();

  sub_1C0B70738((uint64_t)v9, (unint64_t *)&qword_1EB882B40, v2);
  return v14;
}

uint64_t sub_1C0B5717C(uint64_t a1, uint64_t a2)
{
  return sub_1C0B56668(a1, a2, sub_1C0B4A6F8);
}

uint64_t sub_1C0B571A8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C0B571F0(a1, (uint64_t (*)(void))sub_1C0B70864, (uint64_t (*)(void))type metadata accessor for SportsSyncingConfigV2Resource, (uint64_t)&protocol witness table for SportsSyncingConfigV2Resource, a2);
}

uint64_t sub_1C0B571F0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v8 = *(void *)(a1 + *(int *)(a2(0) + 52));
  a5[3] = a3(0);
  a5[4] = a4;
  *a5 = v8;
  return swift_retain();
}

uint64_t sub_1C0B57264()
{
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C5E8;
  sub_1C151F36C();
  sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1529AE0;
  swift_getErrorValue();
  uint64_t v2 = sub_1C1520D3C();
  uint64_t v4 = v3;
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 64) = sub_1BFE9C558();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  sub_1C15197BC();

  return swift_bridgeObjectRelease();
}

void *sub_1C0B573B0()
{
  uint64_t v0 = type metadata accessor for SportsDataServiceBatchResourceRequest(0);
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (uint64_t *)((char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v3 = objc_msgSend((id)swift_unknownObjectRetain(), sel_rosterResourceIDs);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1C151E33C();

    uint64_t v6 = sub_1C00B2284(v5);
    swift_bridgeObjectRelease();
    uint64_t v7 = (void *)((char *)v2 + *(int *)(v0 + 20));
    void *v7 = 0x40F5180000000000;
    uint64_t v8 = *MEMORY[0x1E4FAA8C0];
    uint64_t v9 = sub_1C1517F3C();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(void *, uint64_t, uint64_t))(v10 + 104))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    *uint64_t v2 = v6;
    sub_1C0B6DDBC(0, &qword_1EB863EA0, type metadata accessor for SportsDataServiceBatchResourceRequest, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v2 = (void *)sub_1C151908C();
  }
  else
  {
    sub_1C0254A10();
    swift_allocError();
    *unint64_t v11 = 17;
    swift_willThrow();
  }
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_1C0B575D4(uint64_t a1, uint64_t a2)
{
  return sub_1C0B56668(a1, a2, sub_1C0B4FB30);
}

uint64_t sub_1C0B57600@<X0>(id a1@<X2>, uint64_t a2@<X0>, uint64_t *a3@<X8>)
{
  id v6 = objc_msgSend(a1, sel_rosterResourceIDs);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C151E33C();

    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v10 = sub_1C0B6BBD8(MEMORY[0x1E4FBC868], v8, v8);
    swift_bridgeObjectRelease_n();
    sub_1C0B6EACC();
    uint64_t v12 = *(void *)(a2 + *(int *)(v11 + 52));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C0B6BEE8(v9, v12, v12, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    id v14 = objc_msgSend(a1, sel_identifier);
    sub_1C151E62C();

    swift_bridgeObjectRetain();
    uint64_t result = sub_1C1518DDC();
    *a3 = v13;
  }
  else
  {
    sub_1C0254A10();
    swift_allocError();
    *uint64_t v16 = 17;
    return swift_willThrow();
  }
  return result;
}

void sub_1C0B577AC(void *a1, void *a2)
{
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1C15198DC();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB863FB8);
  swift_unknownObjectRetain();
  id v5 = a1;
  swift_unknownObjectRetain();
  id v6 = a1;
  oslog = sub_1C15198AC();
  os_log_type_t v7 = sub_1C151F36C();
  if (os_log_type_enabled(oslog, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v18 = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    id v10 = objc_msgSend(a2, sel_UMCCanonicalID);
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = sub_1C151E62C();
      unint64_t v14 = v13;
    }
    else
    {
      unint64_t v14 = 0xEE00444920434D55;
      uint64_t v12 = 0x206E776F6E6B6E75;
    }
    sub_1BFDA76EC(v12, v14, &v18);
    sub_1C151FE1C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v15 = sub_1C1520D3C();
    sub_1BFDA76EC(v15, v16, &v18);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BFC31000, oslog, v7, "Sports data service failed to fetch roster resource for event=%{public}s; error=%{public}s",
      (uint8_t *)v8,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v9, -1, -1);
    MEMORY[0x1C18C9B00](v8, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
  }
}

uint64_t sub_1C0B57A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  *(void *)(v7 + 32) = a5;
  *(unsigned char *)(v7 + 40) = a6;
  *(unsigned char *)(v7 + 41) = a7;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v7 + 48) = v9;
  *uint64_t v9 = v7;
  v9[1] = sub_1C0B57B1C;
  return sub_1C0B57C68(a1, v7 + 16, (unsigned char *)(v7 + 41));
}

uint64_t sub_1C0B57B1C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C0B57C50, 0, 0);
  }
  else
  {
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C0B57C50()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0B57C68(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  *(void *)(v4 + 2424) = v3;
  *(void *)(v4 + 2376) = a1;
  *(void *)(v4 + 2472) = type metadata accessor for SportsDataConfiguration();
  *(void *)(v4 + 2520) = swift_task_alloc();
  *(void *)(v4 + 2568) = swift_task_alloc();
  sub_1C0B6ADE4();
  *(void *)(v4 + 2616) = v7;
  *(void *)(v4 + 2664) = swift_task_alloc();
  *(void *)(v4 + 2712) = swift_task_alloc();
  uint64_t v8 = *(void *)(a2 + 8);
  *(void *)(v4 + 2760) = *(void *)a2;
  *(void *)(v4 + 2808) = v8;
  *(void *)(v4 + 2856) = *(void *)(a2 + 16);
  *(unsigned char *)(v4 + 2098) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(v4 + 2099) = *a3;
  return MEMORY[0x1F4188298](sub_1C0B57D84, 0, 0);
}

uint64_t sub_1C0B57D84()
{
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 2856);
  uint64_t v2 = *(void *)(v0 + 2808);
  uint64_t v3 = *(void *)(v0 + 2760);
  uint64_t v4 = *(void *)(v0 + 2424);
  uint64_t v5 = (void *)qword_1EB93C5E8;
  char v6 = *(unsigned char *)(v0 + 2098);
  sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  *(void *)(v0 + 2904) = v7;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
  *(void *)(v0 + 2296) = 0;
  *(void *)(v0 + 2304) = 0xE000000000000000;
  *(void *)(v0 + 2168) = v3;
  *(void *)(v0 + 2176) = v2;
  *(void *)(v0 + 2184) = v1;
  *(unsigned char *)(v0 + 2192) = v6;
  id v9 = v5;
  sub_1C152036C();
  uint64_t v10 = *(void *)(v0 + 2296);
  uint64_t v11 = *(void *)(v0 + 2304);
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v12 = sub_1BFE9C558();
  *(void *)(v0 + 2952) = v12;
  *(void *)(v8 + 64) = v12;
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = v11;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();

  uint64_t v13 = swift_allocObject();
  *(void *)(v0 + 3000) = v13;
  *(void *)(v13 + 16) = v4;
  *(void *)(v13 + 24) = v3;
  *(void *)(v13 + 32) = v2;
  *(void *)(v13 + 40) = v1;
  *(unsigned char *)(v13 + 48) = v6;
  swift_retain();
  sub_1C0254D40(v3, v2, v1, v6);
  swift_retain();
  swift_asyncLet_begin();
  uint64_t v14 = swift_allocObject();
  *(void *)(v0 + 3048) = v14;
  *(void *)(v14 + 16) = v4;
  *(void *)(v14 + 24) = v3;
  *(void *)(v14 + 32) = v2;
  *(void *)(v14 + 40) = v1;
  *(unsigned char *)(v14 + 48) = v6;
  swift_retain();
  sub_1C0254D40(v3, v2, v1, v6);
  swift_retain();
  swift_asyncLet_begin();
  swift_retain_n();
  swift_asyncLet_begin();
  uint64_t v15 = *(void *)(v0 + 2712);
  return MEMORY[0x1F41881E0](v0 + 1296, v15, sub_1C0B580B0, v0 + 2384);
}

uint64_t sub_1C0B580B0()
{
  v1[387] = v0;
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C0B58D44, 0, 0);
  }
  else
  {
    sub_1C0B6FCA8(v1[339], v1[333], (uint64_t (*)(void))sub_1C0B6ADE4);
    return MEMORY[0x1F41881E0](v1 + 82, v1 + 285, sub_1C0B5818C, v1 + 322);
  }
}

uint64_t sub_1C0B5818C()
{
  *(void *)(v1 + 3104) = v0;
  if (v0) {
    uint64_t v2 = sub_1C0B58F74;
  }
  else {
    uint64_t v2 = sub_1C0B581C0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0B581C0()
{
  uint64_t v27 = v0;
  uint64_t v25 = *(void *)(v0 + 2952);
  char v1 = *(unsigned char *)(v0 + 2098);
  uint64_t v2 = *(void *)(v0 + 2856);
  uint64_t v3 = *(void *)(v0 + 2808);
  uint64_t v4 = *(void *)(v0 + 2760);
  uint64_t v5 = *(void *)(v0 + 2664);
  uint64_t v6 = *(void *)(v0 + 2616);
  *(void *)(v0 + 3112) = *(void *)(v0 + 2280);
  *(void *)(v0 + 3120) = *(void *)(v0 + 2288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C0B6D8C0((uint64_t)v26, v5);
  *(void *)(v0 + 3128) = v7;
  sub_1C0F1228C(v7, v0 + 1976);
  uint64_t v8 = (void *)qword_1EB93C5E8;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C15341B0;
  uint64_t v10 = *(void *)(v0 + 1976);
  uint64_t v11 = MEMORY[0x1E4FBB550];
  uint64_t v12 = MEMORY[0x1E4FBB5C8];
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v9 + 64) = v12;
  *(void *)(v9 + 32) = v10;
  uint64_t v13 = *(void *)(v0 + 1984);
  *(void *)(v9 + 96) = v11;
  *(void *)(v9 + 104) = v12;
  *(void *)(v9 + 72) = v13;
  uint64_t v14 = *(void *)(v0 + 1992);
  *(void *)(v9 + 136) = v11;
  *(void *)(v9 + 144) = v12;
  *(void *)(v9 + 112) = v14;
  uint64_t v15 = *(void *)(v0 + 2000);
  *(void *)(v9 + 176) = v11;
  *(void *)(v9 + 184) = v12;
  *(void *)(v9 + 152) = v15;
  uint64_t v16 = *(void *)(v0 + 2008);
  *(void *)(v9 + 216) = v11;
  *(void *)(v9 + 224) = v12;
  *(void *)(v9 + 192) = v16;
  uint64_t v17 = *(void *)(v0 + 2024);
  *(void *)(v9 + 256) = v11;
  *(void *)(v9 + 264) = v12;
  *(void *)(v9 + 232) = v17;
  uint64_t v18 = *(void *)(v0 + 2016);
  *(void *)(v9 + 296) = v11;
  *(void *)(v9 + 304) = v12;
  *(void *)(v9 + 272) = v18;
  uint64_t v19 = *(void *)(*(void *)(v5 + *(int *)(v6 + 44)) + 16);
  *(void *)(v9 + 336) = v11;
  *(void *)(v9 + 344) = v12;
  *(void *)(v9 + 312) = v19;
  *(void *)(v0 + 2312) = 0;
  *(void *)(v0 + 2320) = 0xE000000000000000;
  *(void *)(v0 + 2104) = v4;
  *(void *)(v0 + 2112) = v3;
  *(void *)(v0 + 2120) = v2;
  *(unsigned char *)(v0 + 2128) = v1;
  id v20 = v8;
  sub_1C152036C();
  uint64_t v21 = *(void *)(v0 + 2312);
  uint64_t v22 = *(void *)(v0 + 2320);
  *(void *)(v9 + 376) = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 384) = v25;
  *(void *)(v9 + 352) = v21;
  *(void *)(v9 + 360) = v22;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();

  uint64_t v23 = *(void *)(v0 + 2568);
  return MEMORY[0x1F41881E0](v0 + 16, v23, sub_1C0B583EC, v0 + 1936);
}

uint64_t sub_1C0B583EC()
{
  *(void *)(v1 + 3136) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1C0B5920C;
  }
  else
  {
    uint64_t v2 = sub_1C0B58484;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0B58484()
{
  uint64_t v1 = v0[391];
  uint64_t v2 = v0[315];
  uint64_t v3 = v0[309];
  sub_1C0B6FCA8(v0[321], v2, (uint64_t (*)(void))type metadata accessor for SportsDataConfiguration);
  uint64_t v4 = *(void *)(v2 + *(int *)(v3 + 20));
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C0B6CD94(v1, v4, MEMORY[0x1E4FBC870]);
  v0[393] = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRetain();
  v0[394] = sub_1C0B6CD94(v7, v4, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[395] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1C0B585E4;
  return sub_1C0B5A3C4(v5);
}

uint64_t sub_1C0B585E4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 3168) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1C0B58704, 0, 0);
}

uint64_t sub_1C0B58704()
{
  uint64_t v1 = *(void *)(v0 + 3168);
  uint64_t v22 = *(void *)(v0 + 2952);
  char v23 = *(unsigned char *)(v0 + 2099);
  char v2 = *(unsigned char *)(v0 + 2098);
  uint64_t v3 = *(void *)(v0 + 2856);
  uint64_t v4 = *(void *)(v0 + 2808);
  uint64_t v5 = *(void *)(v0 + 2760);
  uint64_t v6 = (void *)qword_1EB93C5E8;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1527210;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBB5C8];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v7 + 64) = v9;
  *(void *)(v7 + 32) = v8;
  *(void *)(v0 + 2264) = 0;
  *(void *)(v0 + 2272) = 0xE000000000000000;
  *(void *)(v0 + 2072) = v5;
  *(void *)(v0 + 2080) = v4;
  *(void *)(v0 + 2088) = v3;
  *(unsigned char *)(v0 + 2096) = v2;
  id v10 = v6;
  sub_1C152036C();
  uint64_t v11 = *(void *)(v0 + 2264);
  uint64_t v12 = *(void *)(v0 + 2272);
  *(void *)(v7 + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 104) = v22;
  *(void *)(v7 + 72) = v11;
  *(void *)(v7 + 80) = v12;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();

  *(unsigned char *)(v0 + 2097) = v23;
  *(void *)(v0 + 2136) = v5;
  *(void *)(v0 + 2144) = v4;
  *(void *)(v0 + 2152) = v3;
  *(unsigned char *)(v0 + 2160) = v2;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 3176) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1C0B58918;
  uint64_t v14 = *(void *)(v0 + 3168);
  uint64_t v15 = *(void *)(v0 + 3152);
  uint64_t v16 = *(void *)(v0 + 3120);
  uint64_t v17 = *(void *)(v0 + 3112);
  uint64_t v18 = *(void *)(v0 + 2664);
  uint64_t v19 = *(void *)(v0 + 2520);
  uint64_t v20 = *(void *)(v0 + 2376);
  return sub_1C0B5AD54(v20, (unsigned char *)(v0 + 2097), v15, v17, v16, v18, v19, v14);
}

uint64_t sub_1C0B58918()
{
  *(void *)(*(void *)v1 + 3184) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0) {
    char v2 = sub_1C0B594A4;
  }
  else {
    char v2 = sub_1C0B58A8C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0B58A8C()
{
  uint64_t v1 = v0[333];
  sub_1C0B6F9C4(v0[315], (uint64_t (*)(void))type metadata accessor for SportsDataConfiguration);
  sub_1C0B6F9C4(v1, (uint64_t (*)(void))sub_1C0B6ADE4);
  uint64_t v2 = v0[321];
  return MEMORY[0x1F41881D0](v0 + 2, v2, sub_1C0B58B3C, v0 + 346);
}

uint64_t sub_1C0B58B3C()
{
  return MEMORY[0x1F4188298](sub_1C0B58B58, 0, 0);
}

uint64_t sub_1C0B58B58()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 2280, sub_1C0B58BD8, v0 + 2336);
}

uint64_t sub_1C0B58BD8()
{
  return MEMORY[0x1F4188298](sub_1C0B58BF4, 0, 0);
}

uint64_t sub_1C0B58BF4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 2712);
  return MEMORY[0x1F41881D0](v0 + 1296, v1, sub_1C0B58C68, v0 + 3008);
}

uint64_t sub_1C0B58C68()
{
  return MEMORY[0x1F4188298](sub_1C0B58C84, 0, 0);
}

uint64_t sub_1C0B58C84()
{
  swift_release_n();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0B58D44()
{
  return MEMORY[0x1F41881D0](v0 + 16, *(void *)(v0 + 2568), sub_1C0B58D64, v0 + 2432);
}

uint64_t sub_1C0B58D64()
{
  return MEMORY[0x1F4188298](sub_1C0B58D80, 0, 0);
}

uint64_t sub_1C0B58D80()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 2280, sub_1C0B58E00, v0 + 2480);
}

uint64_t sub_1C0B58E00()
{
  return MEMORY[0x1F4188298](sub_1C0B58E1C, 0, 0);
}

uint64_t sub_1C0B58E1C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 2712);
  return MEMORY[0x1F41881D0](v0 + 1296, v1, sub_1C0B58E90, v0 + 2528);
}

uint64_t sub_1C0B58E90()
{
  return MEMORY[0x1F4188298](sub_1C0B58EAC, 0, 0);
}

uint64_t sub_1C0B58EAC()
{
  swift_release_n();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0B58F74()
{
  sub_1C0B6F9C4(*(void *)(v0 + 2664), (uint64_t (*)(void))sub_1C0B6ADE4);
  uint64_t v1 = *(void *)(v0 + 2568);
  return MEMORY[0x1F41881D0](v0 + 16, v1, sub_1C0B58FFC, v0 + 2624);
}

uint64_t sub_1C0B58FFC()
{
  return MEMORY[0x1F4188298](sub_1C0B59018, 0, 0);
}

uint64_t sub_1C0B59018()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 2280, sub_1C0B59098, v0 + 2672);
}

uint64_t sub_1C0B59098()
{
  return MEMORY[0x1F4188298](sub_1C0B590B4, 0, 0);
}

uint64_t sub_1C0B590B4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 2712);
  return MEMORY[0x1F41881D0](v0 + 1296, v1, sub_1C0B59128, v0 + 2720);
}

uint64_t sub_1C0B59128()
{
  return MEMORY[0x1F4188298](sub_1C0B59144, 0, 0);
}

uint64_t sub_1C0B59144()
{
  swift_release_n();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0B5920C()
{
  sub_1C0B6F9C4(*(void *)(v0 + 2664), (uint64_t (*)(void))sub_1C0B6ADE4);
  uint64_t v1 = *(void *)(v0 + 2568);
  return MEMORY[0x1F41881D0](v0 + 16, v1, sub_1C0B59294, v0 + 2912);
}

uint64_t sub_1C0B59294()
{
  return MEMORY[0x1F4188298](sub_1C0B592B0, 0, 0);
}

uint64_t sub_1C0B592B0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 2280, sub_1C0B59330, v0 + 2960);
}

uint64_t sub_1C0B59330()
{
  return MEMORY[0x1F4188298](sub_1C0B5934C, 0, 0);
}

uint64_t sub_1C0B5934C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 2712);
  return MEMORY[0x1F41881D0](v0 + 1296, v1, sub_1C0B593C0, v0 + 2032);
}

uint64_t sub_1C0B593C0()
{
  return MEMORY[0x1F4188298](sub_1C0B593DC, 0, 0);
}

uint64_t sub_1C0B593DC()
{
  swift_release_n();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0B594A4()
{
  uint64_t v14 = *(void *)(v0 + 3184);
  uint64_t v1 = *(void *)(v0 + 2952);
  char v2 = *(unsigned char *)(v0 + 2098);
  uint64_t v3 = *(void *)(v0 + 2856);
  uint64_t v4 = *(void *)(v0 + 2808);
  uint64_t v5 = *(void *)(v0 + 2760);
  uint64_t v16 = *(void *)(v0 + 2520);
  uint64_t v17 = *(void *)(v0 + 2664);
  id v15 = (id)qword_1EB93C5E8;
  sub_1C151F36C();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1527210;
  *(void *)(v0 + 2248) = 0;
  *(void *)(v0 + 2256) = 0xE000000000000000;
  *(void *)(v0 + 2200) = v5;
  *(void *)(v0 + 2208) = v4;
  *(void *)(v0 + 2216) = v3;
  *(unsigned char *)(v0 + 2224) = v2;
  sub_1C152036C();
  uint64_t v7 = *(void *)(v0 + 2248);
  uint64_t v8 = *(void *)(v0 + 2256);
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 64) = v1;
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v8;
  *(void *)(v0 + 2232) = 0;
  *(void *)(v0 + 2240) = 0xE000000000000000;
  *(void *)(v0 + 2328) = v14;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v10 = *(void *)(v0 + 2232);
  uint64_t v11 = *(void *)(v0 + 2240);
  *(void *)(v6 + 96) = v9;
  *(void *)(v6 + 104) = v1;
  *(void *)(v6 + 72) = v10;
  *(void *)(v6 + 80) = v11;
  sub_1C15197BC();
  swift_bridgeObjectRelease();

  swift_willThrow();
  sub_1C0B6F9C4(v16, (uint64_t (*)(void))type metadata accessor for SportsDataConfiguration);
  sub_1C0B6F9C4(v17, (uint64_t (*)(void))sub_1C0B6ADE4);
  uint64_t v12 = *(void *)(v0 + 2568);
  return MEMORY[0x1F41881D0](v0 + 16, v12, sub_1C0B596C8, v0 + 3056);
}

uint64_t sub_1C0B596C8()
{
  return MEMORY[0x1F4188298](sub_1C0B596E4, 0, 0);
}

uint64_t sub_1C0B596E4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 2280, sub_1C0B59764, v0 + 2864);
}

uint64_t sub_1C0B59764()
{
  return MEMORY[0x1F4188298](sub_1C0B59780, 0, 0);
}

uint64_t sub_1C0B59780()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 2712);
  return MEMORY[0x1F41881D0](v0 + 1296, v1, sub_1C0B597F4, v0 + 2816);
}

uint64_t sub_1C0B597F4()
{
  return MEMORY[0x1F4188298](sub_1C0B59810, 0, 0);
}

uint64_t sub_1C0B59810()
{
  swift_release_n();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0B598D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W4>, char a5@<W5>, void *a6@<X8>)
{
  uint64_t v7 = *a1;
  sub_1C0254D40(a2, a3, a4, a5);
  swift_bridgeObjectRetain();
  sub_1C1518DDC();
  *a6 = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0B5995C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C0B6E774(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C0B59990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 80) = a6;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1C0B599BC, 0, 0);
}

uint64_t sub_1C0B599BC()
{
  char v1 = *(unsigned char *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 48);
  long long v9 = *(_OWORD *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v9;
  *(void *)(v4 + 40) = v2;
  *(unsigned char *)(v4 + 48) = v1;
  type metadata accessor for SportsDataServiceBatchRequest(0);
  sub_1C151932C();
  swift_task_dealloc();
  uint64_t v5 = (void *)sub_1C1518E7C();
  sub_1C0B6ADE4();
  type metadata accessor for SportsDataService();
  *(void *)(v0 + 56) = sub_1C151900C();

  swift_release();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1C0B59B28;
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x1F415EBC8](v7);
}

uint64_t sub_1C0B59B28()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C0B72390, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C0B59C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 80) = a6;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1C0B59C90, 0, 0);
}

uint64_t sub_1C0B59C90()
{
  uint64_t v9 = v0;
  char v1 = *(unsigned char *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 32);
  uint64_t v7 = v2;
  char v8 = v1;
  *(void *)(v0 + 56) = sub_1C0B59E90((uint64_t)&v6);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1C0B59D54;
  uint64_t v4 = *(void *)(v0 + 16);
  return MEMORY[0x1F415EBC8](v4);
}

uint64_t sub_1C0B59D54()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C0126A64, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C0B59E90(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = *(unsigned __int8 *)(a1 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (v4 == 1 && *(unsigned char *)(v2 + 33) == 1) {
      goto LABEL_4;
    }
  }
  else if ((v1 & 0x100) != 0)
  {
LABEL_4:
    type metadata accessor for SportsFeaturedEventsResource();
    sub_1C151932C();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v2;
    *(void *)(v5 + 24) = v1;
    *(void *)(v5 + 32) = v3;
    *(unsigned char *)(v5 + 40) = v4;
    sub_1C0254D40(v2, v1, v3, v4);
    long long v6 = (void *)sub_1C1518E7C();
    sub_1C0B6F704();
    sub_1C151900C();
    swift_release();
    swift_release();

    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v2;
    *(void *)(v7 + 24) = v1;
    *(void *)(v7 + 32) = v3;
    *(unsigned char *)(v7 + 40) = v4;
    sub_1C0254D40(v2, v1, v3, v4);
    char v8 = (void *)sub_1C1518E7C();
    sub_1C151901C();
    swift_release();
    swift_release();

    uint64_t v9 = (void *)sub_1C1518E7C();
    uint64_t v10 = sub_1C15190DC();
    swift_release();

    return v10;
  }
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1C15198DC();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB863FB8);
  sub_1C0254D40(v2, v1, v3, v4);
  sub_1C0254D40(v2, v1, v3, v4);
  uint64_t v13 = sub_1C15198AC();
  os_log_type_t v14 = sub_1C151F38C();
  if (os_log_type_enabled(v13, v14))
  {
    id v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)id v15 = 136446210;
    uint64_t v21 = v20;
    buf = v15;
    SportsDataVisualizationRequest.tagIds.getter();
    uint64_t v16 = MEMORY[0x1C18C6710]();
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    sub_1BFDA76EC(v16, v18, &v21);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1C0254C7C(v2, v1, v3, v4);
    sub_1C0254C7C(v2, v1, v3, v4);
    _os_log_impl(&dword_1BFC31000, v13, v14, "Skipping featured events fetch for request with tagIds=%{public}s", buf, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v20, -1, -1);
    MEMORY[0x1C18C9B00](buf, -1, -1);
  }
  else
  {
    sub_1C0254C7C(v2, v1, v3, v4);
    sub_1C0254C7C(v2, v1, v3, v4);
  }

  sub_1C0B7233C(0, &qword_1EB8611A8, (uint64_t)&type metadata for SportsFeaturedEventsResult, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t sub_1C0B5A2EC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1C0B5A30C, 0, 0);
}

uint64_t sub_1C0B5A30C()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0[3] + 136), *(void *)(v0[3] + 160));
  v0[4] = sub_1C0B89070();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C02AE608;
  uint64_t v2 = v0[2];
  return MEMORY[0x1F415EBC8](v2);
}

uint64_t sub_1C0B5A3C4(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  sub_1C0B6EFDC(0);
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = *(void *)(type metadata accessor for SportsEventStatusResponse() - 8);
  v2[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0B5A4DC, 0, 0);
}

uint64_t sub_1C0B5A4DC()
{
  uint64_t v20 = v0;
  uint64_t v1 = v0[8];
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v4 = *(void *)(type metadata accessor for SportsDataVisualizationResponseItem() - 8);
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C0B67150(v5, v19);
      sub_1BFEF95B8(v19[0]);
      v5 += v6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    uint64_t v2 = v18;
  }
  v0[5] = v2;
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  sub_1C0B7233C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  uint64_t v9 = v8;
  sub_1C0B6F08C((unint64_t *)&unk_1EB879F40, (unint64_t *)&qword_1EB879F20, v7);
  uint64_t v10 = sub_1C151E92C();
  swift_bridgeObjectRelease();
  if (*(void *)(v10 + 16))
  {
    v19[0] = v10;
    swift_bridgeObjectRetain();
    sub_1BFFCDDC4(v19);
    swift_bridgeObjectRelease();
    v0[6] = v19[0];
    sub_1C0B6F08C(&qword_1EB8900F0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0]);
    uint64_t v14 = sub_1C151F0BC();
    v0[15] = v14;
    swift_release();
    swift_retain();
    id v15 = (void *)swift_task_alloc();
    v0[16] = v15;
    void *v15 = v0;
    v15[1] = sub_1C0B5A824;
    uint64_t v16 = v0[9];
    uint64_t v17 = v0[10];
    return MEMORY[0x1F415EEF0](v14, &unk_1EA1A3F28, v16, v9, v17);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v11 = sub_1C018F74C(MEMORY[0x1E4FBC860]);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(unint64_t))v0[1];
    return v12(v11);
  }
}

uint64_t sub_1C0B5A824(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 136) = a1;
  *(void *)(v3 + 144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C0B5ABA4;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v4 = sub_1C0B5A990;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1C0B5A990()
{
  uint64_t v1 = v0[17];
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[13];
    uint64_t v5 = v0[10];
    uint64_t v4 = v0[11];
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C05F7D30(0, v2, 0);
    uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v7 = *(void *)(v4 + 72);
    uint64_t v8 = v17;
    do
    {
      uint64_t v9 = v0[14];
      uint64_t v10 = v0[12];
      sub_1C0B6FCA8(v6, v10, (uint64_t (*)(void))sub_1C0B6EFDC);
      sub_1C0B6FCA8(v10 + *(int *)(v5 + 52), v9, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponse);
      sub_1C0B6F9C4(v10, (uint64_t (*)(void))sub_1C0B6EFDC);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7D30(0, *(void *)(v8 + 16) + 1, 1);
        uint64_t v8 = v17;
      }
      unint64_t v12 = *(void *)(v8 + 16);
      unint64_t v11 = *(void *)(v8 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1C05F7D30(v11 > 1, v12 + 1, 1);
        uint64_t v8 = v17;
      }
      uint64_t v13 = v0[14];
      *(void *)(v8 + 16) = v12 + 1;
      sub_1C0B70244(v13, v8+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v12, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponse);
      v6 += v7;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = sub_1C0B6E2EC(v8);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  id v15 = (uint64_t (*)(uint64_t))v0[1];
  return v15(v14);
}

uint64_t sub_1C0B5ABA4()
{
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 144);
  int64_t v2 = (void *)qword_1EB93C5E8;
  sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C1529AE0;
  swift_getErrorValue();
  id v4 = v2;
  uint64_t v5 = sub_1C1520D3C();
  uint64_t v7 = v6;
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 64) = sub_1BFE9C558();
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v7;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();

  unint64_t v8 = sub_1C018F74C(MEMORY[0x1E4FBC860]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v9(v8);
}

uint64_t sub_1C0B5AD54(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 1760) = v8;
  *(void *)(v9 + 1752) = a8;
  *(void *)(v9 + 1744) = a7;
  *(void *)(v9 + 1736) = a6;
  *(void *)(v9 + 1728) = a5;
  *(void *)(v9 + 1720) = a4;
  *(void *)(v9 + 1712) = a3;
  *(void *)(v9 + 1704) = a1;
  *(void *)(v9 + 1768) = *(void *)(type metadata accessor for SportsDataVisualizationResponseScoreItem() - 8);
  *(void *)(v9 + 1776) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for SportsDataVisualizationResponseItem();
  *(void *)(v9 + 1784) = v11;
  *(void *)(v9 + 1792) = *(void *)(v11 - 8);
  *(void *)(v9 + 1800) = swift_task_alloc();
  *(void *)(v9 + 1808) = swift_task_alloc();
  *(void *)(v9 + 1816) = swift_task_alloc();
  *(void *)(v9 + 1824) = swift_task_alloc();
  *(unsigned char *)(v9 + 1936) = *a2;
  *(_OWORD *)(v9 + 1832) = *(_OWORD *)v14;
  *(void *)(v9 + 1848) = *(void *)(v14 + 16);
  *(unsigned char *)(v9 + 1937) = *(unsigned char *)(v14 + 24);
  return MEMORY[0x1F4188298](sub_1C0B5AEE8, 0, 0);
}

uint64_t sub_1C0B5AEE8()
{
  uint64_t v1 = v0[215];
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v44 = MEMORY[0x1E4FBC860];
    uint64_t v4 = v0[224];
    uint64_t v5 = v0[221];
    swift_bridgeObjectRetain();
    sub_1C05F7CE8(0, v2, 0);
    uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v7 = *(void *)(v5 + 72);
    uint64_t v8 = v44;
    do
    {
      uint64_t v9 = v0[228];
      uint64_t v10 = v0[222];
      sub_1C0B6FCA8(v6, v10, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      sub_1C0B6FCA8(v10, v9, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      swift_storeEnumTagMultiPayload();
      sub_1C0B6F9C4(v10, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7CE8(0, *(void *)(v8 + 16) + 1, 1);
        uint64_t v8 = v44;
      }
      unint64_t v12 = *(void *)(v8 + 16);
      unint64_t v11 = *(void *)(v8 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1C05F7CE8(v11 > 1, v12 + 1, 1);
        uint64_t v8 = v44;
      }
      uint64_t v13 = v0[228];
      *(void *)(v8 + 16) = v12 + 1;
      sub_1C0B70244(v13, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v12, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
      v6 += v7;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
  }
  uint64_t v45 = v0[214];
  swift_bridgeObjectRetain();
  sub_1C104ACB0(v8);
  v0[207] = v45;
  sub_1C0B6DD88(0);
  sub_1C001A5E0(&qword_1EB86B2B8, sub_1C0B6DD88);
  uint64_t v14 = sub_1C151E92C();
  v0[232] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    uint64_t v16 = v0[224];
    uint64_t v17 = v14 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v18 = *(void *)(v16 + 72);
    swift_bridgeObjectRetain();
    uint64_t v19 = v15;
    do
    {
      uint64_t v20 = v0[227];
      sub_1C0B6FCA8(v17, v20, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
      uint64_t v21 = sub_1C09B8418();
      sub_1C0B6F9C4(v20, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
      sub_1BFEF95B8((uint64_t)v21);
      v17 += v18;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
  }
  uint64_t v42 = sub_1BFEF4060(v3);
  swift_bridgeObjectRelease();
  if (v15)
  {
    uint64_t v22 = v0[225];
    uint64_t v23 = v0[224];
    uint64_t v24 = v14 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    uint64_t v25 = *(void *)(v23 + 72);
    uint64_t v41 = v14;
    swift_bridgeObjectRetain();
    uint64_t v26 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v43 = v25;
    do
    {
      uint64_t v27 = v0[226];
      uint64_t v28 = v0[225];
      sub_1C0B6FCA8(v24, v27, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
      sub_1C0B6FCA8(v27, v28, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
      unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v30 = v0[226];
      if (EnumCaseMultiPayload <= 2)
      {
        sub_1C0B6F9C4(v0[225], (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
        sub_1C0B6F9C4(v30, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
      }
      else
      {
        uint64_t v31 = *(void *)(v22 + 16);
        uint64_t v32 = *(void *)(v22 + 24);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C0B6F9C4(v30, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v26 = sub_1BFEF9B68(0, v26[2] + 1, 1, v26);
        }
        unint64_t v34 = v26[2];
        unint64_t v33 = v26[3];
        if (v34 >= v33 >> 1) {
          uint64_t v26 = sub_1BFEF9B68((void *)(v33 > 1), v34 + 1, 1, v26);
        }
        _OWORD v26[2] = v34 + 1;
        os_log_type_t v35 = &v26[2 * v34];
        v35[4] = v31;
        v35[5] = v32;
        uint64_t v25 = v43;
      }
      v24 += v25;
      --v15;
    }
    while (v15);
    uint64_t v36 = v41;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v36 = v14;
  }
  uint64_t v37 = v0[220];
  v0[233] = sub_1BFEF4060((uint64_t)v26);
  swift_bridgeObjectRelease();
  uint64_t v38 = swift_allocObject();
  v0[234] = v38;
  *(void *)(v38 + 16) = v37;
  *(void *)(v38 + 24) = v36;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1C0B6DFD0(255, (unint64_t *)&unk_1EB86AEF0, (unint64_t *)&qword_1EB86B430);
  swift_asyncLet_begin();
  uint64_t v39 = swift_allocObject();
  v0[235] = v39;
  *(void *)(v39 + 16) = v37;
  *(void *)(v39 + 24) = v42;
  swift_retain();
  swift_retain();
  sub_1C0B6DFD0(255, (unint64_t *)&qword_1EB86AF00, (unint64_t *)&qword_1EB890230);
  swift_asyncLet_begin();
  return MEMORY[0x1F41881E0](v0 + 82, v0 + 195, sub_1C0B5B50C, v0 + 184);
}

uint64_t sub_1C0B5B50C()
{
  v1[236] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F41881D0](v1 + 2, v1 + 201, sub_1C0B5BD70, v1 + 190);
  }
  else
  {
    v1[237] = v1[195];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881D8](v1 + 2, v1 + 201, sub_1C0B5B5F0, v1 + 178);
  }
}

uint64_t sub_1C0B5B5F0()
{
  return MEMORY[0x1F4188298](sub_1C0B5B60C, 0, 0);
}

uint64_t sub_1C0B5B60C()
{
  uint64_t v1 = v0[233];
  uint64_t v2 = v0[201];
  v0[238] = v2;
  swift_bridgeObjectRetain();
  unint64_t v3 = sub_1C0B6C6BC(v1, v2);
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1C0B6B220(v3);
  swift_release();
  uint64_t v4 = (void *)sub_1C1518E7C();
  sub_1C0B6E038();
  sub_1C151940C();

  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_1C1518E7C();
  sub_1C0B6E0B0();
  v0[239] = sub_1C1518FFC();

  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[240] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1C0B5B7AC;
  return MEMORY[0x1F415EBC8](v0 + 183);
}

uint64_t sub_1C0B5B7AC()
{
  *(void *)(*(void *)v1 + 1928) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1C0B5BEF0;
  }
  else
  {
    uint64_t v2 = sub_1C0B5B908;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0B5B908()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(void *)(v0 + 1904);
  uint64_t v2 = *(void *)(v0 + 1896);
  uint64_t v23 = *(void *)(v0 + 1856);
  char v22 = *(unsigned char *)(v0 + 1937);
  uint64_t v21 = *(void *)(v0 + 1848);
  long long v20 = *(_OWORD *)(v0 + 1832);
  uint64_t v3 = *(void *)(v0 + 1760);
  uint64_t v25 = v2;
  uint64_t v4 = *(void *)(v0 + 1752);
  uint64_t v24 = v4;
  uint64_t v5 = *(void *)(v0 + 1744);
  uint64_t v6 = *(void *)(v0 + 1736);
  uint64_t v7 = *(void *)(v0 + 1728);
  uint64_t v19 = *(void *)(v0 + 1720);
  uint64_t v8 = *(void *)(v0 + 1464);
  *(void *)(v0 + 1512) = MEMORY[0x1E4FBC860];
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v3;
  *(void *)(v9 + 24) = v6;
  *(void *)(v9 + 32) = v5;
  *(void *)(v9 + 40) = v4;
  *(void *)(v9 + 48) = v2;
  uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  *(void *)(v9 + 56) = v19;
  *(void *)(v9 + 64) = v7;
  *(void *)(v9 + 72) = v1;
  *(_OWORD *)(v9 + 80) = v20;
  *(void *)(v9 + 96) = v21;
  *(unsigned char *)(v9 + 104) = v22;
  *(void *)(v9 + 112) = v8;
  *(void *)(v9 + 120) = v0 + 1512;
  uint64_t v26 = sub_1C02846F8((void (*)(void *__return_ptr, void))sub_1C0B6E118, v9, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v11 = *(void *)(v0 + 1512);
  sub_1BFF0A354();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C1518A2C();
  sub_1C0B63D68(v11, v6, v12, v24, v25, v7, v1, &v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v27;
  sub_1C0B6E168();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = v13;
  sub_1BFEF683C(v13);
  if ((~v13 & 0xF000000000000007) != 0)
  {
    sub_1BFEF683C(v13);
    uint64_t v10 = sub_1C0EDF770(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v16 = v10[2];
    unint64_t v15 = v10[3];
    if (v16 >= v15 >> 1) {
      uint64_t v10 = sub_1C0EDF770((void *)(v15 > 1), v16 + 1, 1, v10);
    }
    void v10[2] = v16 + 1;
    v10[v16 + 4] = v13;
  }
  uint64_t v17 = *(void **)(v0 + 1704);
  swift_bridgeObjectRelease();
  uint64_t v27 = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C10475A4((uint64_t)v10);
  sub_1BFEF68C0(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v17 = v27;
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 1608, sub_1C0B5BBF8, v0 + 1376);
}

uint64_t sub_1C0B5BBF8()
{
  return MEMORY[0x1F4188298](sub_1C0B5BC14, 0, 0);
}

uint64_t sub_1C0B5BC14()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1560, sub_1C0B5BC94, v0 + 1296);
}

uint64_t sub_1C0B5BC94()
{
  return MEMORY[0x1F4188298](sub_1C0B5BCB0, 0, 0);
}

uint64_t sub_1C0B5BCB0()
{
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0B5BD70()
{
  return MEMORY[0x1F4188298](sub_1C0B5BD8C, 0, 0);
}

uint64_t sub_1C0B5BD8C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1560, sub_1C0B5BE0C, v0 + 1568);
}

uint64_t sub_1C0B5BE0C()
{
  return MEMORY[0x1F4188298](sub_1C0B5BE28, 0, 0);
}

uint64_t sub_1C0B5BE28()
{
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0B5BEF0()
{
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 1608, sub_1C0B5BF10, v0 + 1664);
}

uint64_t sub_1C0B5BF10()
{
  return MEMORY[0x1F4188298](sub_1C0B5BF2C, 0, 0);
}

uint64_t sub_1C0B5BF2C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1560, sub_1C0B5BFAC, v0 + 1616);
}

uint64_t sub_1C0B5BFAC()
{
  return MEMORY[0x1F4188298](sub_1C0B5BFC8, 0, 0);
}

uint64_t sub_1C0B5BFC8()
{
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0B5C090(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsDataServiceBatchRequest(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  swift_retain();
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_1C0B6B3F8(v7, a2);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v8 = (void *)sub_1C1518E7C();
  sub_1C0B6F50C(0);
  sub_1C151940C();
  swift_bridgeObjectRelease();

  sub_1C0B6FCA8(a1, (uint64_t)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SportsDataServiceBatchRequest);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  sub_1C0B70244((uint64_t)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, type metadata accessor for SportsDataServiceBatchRequest);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1C0B6FE00;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = (void *)sub_1C1518E7C();
  sub_1C0B6ADE4();
  uint64_t v13 = sub_1C1518FFC();
  swift_release();
  swift_release();

  return v13;
}

uint64_t sub_1C0B5C2A0()
{
  type metadata accessor for SportsDataServiceRequest(0);
  sub_1C151932C();
  uint64_t v0 = (void *)sub_1C1518E7C();
  sub_1C0B703C0(0);
  sub_1C151900C();
  swift_release();

  uint64_t v1 = (void *)sub_1C1518E7C();
  type metadata accessor for SportsFeaturedEventsResource();
  sub_1C1518FFC();
  swift_release();

  uint64_t v2 = (void *)sub_1C1518E7C();
  uint64_t v3 = sub_1C151903C();
  swift_release();

  return v3;
}

uint64_t sub_1C0B5C3FC(uint64_t (*a1)(), uint64_t a2, uint64_t a3, uint64_t a4, char *a5, char a6)
{
  uint64_t v63 = a3;
  unint64_t v64 = a5;
  uint64_t v55 = a2;
  uint64_t v8 = type metadata accessor for SportsFeaturedEventsResource();
  MEMORY[0x1F4188790](v8);
  uint64_t v54 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v53 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v53 - v14;
  if (qword_1EB863FD0 != -1) {
    goto LABEL_39;
  }
  while (2)
  {
    uint64_t v16 = sub_1C15198DC();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EB863FB8);
    sub_1C0B6FCA8((uint64_t)a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SportsFeaturedEventsResource);
    uint64_t v56 = a1;
    sub_1C0B6FCA8((uint64_t)a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SportsFeaturedEventsResource);
    uint64_t v17 = sub_1C15198AC();
    os_log_type_t v18 = sub_1C151F38C();
    int v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v62 = v8;
      uint64_t v21 = v20;
      uint64_t v61 = swift_slowAlloc();
      uint64_t v65 = v61;
      *(_DWORD *)uint64_t v21 = 136446466;
      uint64_t v58 = v21 + 4;
      sub_1C0B6F8AC();
      sub_1C1518A2C();
      LODWORD(v60) = v19;
      uint64_t v59 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
      sub_1C0B7233C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      uint64_t v22 = sub_1C151E3CC();
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      uint64_t v66 = sub_1BFDA76EC(v22, v24, &v65);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      a1 = type metadata accessor for SportsFeaturedEventsResource;
      sub_1C0B6F9C4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SportsFeaturedEventsResource);
      *(_WORD *)(v21 + 12) = 2082;
      uint64_t v58 = v21 + 14;
      sub_1C0B6FA24();
      sub_1C1518A2C();
      sub_1C0B7233C(0, &qword_1EB861428, (uint64_t)&type metadata for SportsFeaturedAffinityEvent, v59);
      uint64_t v15 = (char *)sub_1C151E3CC();
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      uint64_t v66 = sub_1BFDA76EC((uint64_t)v15, v26, &v65);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      sub_1C0B6F9C4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SportsFeaturedEventsResource);
      _os_log_impl(&dword_1BFC31000, v17, (os_log_type_t)v60, "Fetch featured events, featured tagIds=%{public}s, affinity tagIds=%{public}s", (uint8_t *)v21, 0x16u);
      uint64_t v27 = v61;
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v27, -1, -1);
      uint64_t v28 = v21;
      uint64_t v8 = v62;
      MEMORY[0x1C18C9B00](v28, -1, -1);
    }
    else
    {
      sub_1C0B6F9C4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SportsFeaturedEventsResource);
      sub_1C0B6F9C4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SportsFeaturedEventsResource);
    }

    sub_1C0B6F8AC();
    uint64_t v29 = sub_1C1518A2C();
    uint64_t v66 = sub_1BFD35AC4(v29);
    sub_1C0B6FA24();
    uint64_t v30 = sub_1C1518A2C();
    uint64_t v31 = 0;
    uint64_t v32 = *(void *)(v30 + 64);
    uint64_t v57 = v30;
    uint64_t v58 = v30 + 64;
    uint64_t v33 = 1 << *(unsigned char *)(v30 + 32);
    uint64_t v34 = -1;
    if (v33 < 64) {
      uint64_t v34 = ~(-1 << v33);
    }
    unint64_t v35 = v34 & v32;
    uint64_t v59 = (uint64_t (*)(void, uint64_t))((unint64_t)(v33 + 63) >> 6);
LABEL_9:
    while (v35)
    {
      unint64_t v36 = __clz(__rbit64(v35));
      v35 &= v35 - 1;
      unint64_t v37 = v36 | (v31 << 6);
LABEL_22:
      uint64_t v41 = *(void *)(*(void *)(v30 + 56) + 8 * v37);
      uint64_t v42 = *(void *)(v41 + 16);
      if (v42)
      {
        uint64_t v61 = v35;
        uint64_t v62 = v31;
        uint64_t v43 = (uint64_t *)(*(void *)(v30 + 48) + 16 * v37);
        uint64_t v8 = *v43;
        a1 = (uint64_t (*)())v43[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v60 = v41;
        uint64_t v44 = (char **)(v41 + 40);
        while (1)
        {
          uint64_t v45 = (uint64_t)*(v44 - 1);
          uint64_t v12 = *v44;
          if (!a6) {
            break;
          }
          uint64_t v15 = (char *)MEMORY[0x1E4FBC870];
          if (a6 == 1)
          {
            uint64_t v15 = *(char **)(v63 + 40);
LABEL_29:
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v46 = sub_1BFEFB810((uint64_t)v15, v45);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v46 & 1) == 0)
          {
            swift_bridgeObjectRetain();
            sub_1BFEFFC1C(&v65, v8, (uint64_t)a1);
            swift_bridgeObjectRelease();
          }
          v44 += 2;
          if (!--v42)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v30 = v57;
            unint64_t v35 = v61;
            uint64_t v31 = v62;
            goto LABEL_9;
          }
        }
        uint64_t v15 = v64;
        goto LABEL_29;
      }
    }
    if (__OFADD__(v31++, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v31 >= (uint64_t)v59) {
      break;
    }
    unint64_t v39 = *(void *)(v58 + 8 * v31);
    if (v39)
    {
LABEL_21:
      unint64_t v35 = (v39 - 1) & v39;
      unint64_t v37 = __clz(__rbit64(v39)) + (v31 << 6);
      goto LABEL_22;
    }
    uint64_t v40 = v31 + 1;
    if (v31 + 1 >= (uint64_t)v59) {
      break;
    }
    unint64_t v39 = *(void *)(v58 + 8 * v40);
    if (v39) {
      goto LABEL_20;
    }
    uint64_t v40 = v31 + 2;
    if (v31 + 2 >= (uint64_t)v59) {
      break;
    }
    unint64_t v39 = *(void *)(v58 + 8 * v40);
    if (v39)
    {
LABEL_20:
      uint64_t v31 = v40;
      goto LABEL_21;
    }
    uint64_t v40 = v31 + 3;
    if (v31 + 3 < (uint64_t)v59)
    {
      unint64_t v39 = *(void *)(v58 + 8 * v40);
      if (!v39)
      {
        while (1)
        {
          uint64_t v31 = v40 + 1;
          if (__OFADD__(v40, 1)) {
            break;
          }
          if (v31 >= (uint64_t)v59) {
            goto LABEL_36;
          }
          unint64_t v39 = *(void *)(v58 + 8 * v31);
          ++v40;
          if (v39) {
            goto LABEL_21;
          }
        }
LABEL_38:
        __break(1u);
LABEL_39:
        swift_once();
        continue;
      }
      goto LABEL_20;
    }
    break;
  }
LABEL_36:
  swift_release();
  uint64_t v47 = (uint64_t)v54;
  uint64_t v48 = (uint64_t)v56;
  swift_retain();
  uint64_t v49 = swift_bridgeObjectRetain();
  sub_1C0B6B8FC(v49);
  swift_bridgeObjectRelease_n();
  swift_release();
  unint64_t v50 = (void *)sub_1C1518E7C();
  sub_1C0B6ADE4();
  sub_1C151940C();
  swift_bridgeObjectRelease();

  sub_1C0B6FCA8(v48, v47, (uint64_t (*)(void))type metadata accessor for SportsFeaturedEventsResource);
  sub_1C0B6DDBC(0, &qword_1EB863E80, (uint64_t (*)(uint64_t))type metadata accessor for SportsFeaturedEventsResource, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1C151908C();
  uint64_t v51 = sub_1C15192FC();
  swift_release();
  swift_release();
  return v51;
}

uint64_t sub_1C0B5CB24@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, unint64_t *a6@<X8>)
{
  int v100 = a5;
  uint64_t v99 = a4;
  uint64_t v98 = a3;
  uint64_t v97 = a2;
  uint64_t v102 = a6;
  uint64_t v9 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  uint64_t v94 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  id v109 = (uint64_t *)((char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v120 = type metadata accessor for SportsDataVisualizationResponseData();
  uint64_t v111 = *(void *)(v120 - 8);
  MEMORY[0x1F4188790](v120);
  uint64_t v12 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SportsDataVisualizationResponse();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v112 = (uint64_t)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6F50C(0);
  uint64_t v104 = v15;
  uint64_t v117 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v116 = (uint64_t)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6F704();
  uint64_t v18 = v17 - 8;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for SportsFeaturedEventsResource();
  MEMORY[0x1F4188790](v21 - 8);
  unint64_t v23 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(int *)(v18 + 56);
  uint64_t v25 = (uint64_t)&v20[v24];
  uint64_t v26 = (uint64_t)a1 + v24;
  uint64_t v27 = *a1;
  sub_1C0B6FCA8(v26, (uint64_t)&v20[v24], (uint64_t (*)(void))type metadata accessor for SportsFeaturedEventsResource);
  sub_1C0B70244(v25, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for SportsFeaturedEventsResource);
  sub_1C0B6F8AC();
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C1518A2C();
  uint64_t v29 = sub_1C0B4915C(v28);
  uint64_t v95 = v6;
  swift_bridgeObjectRelease();
  uint64_t v96 = sub_1BFEF4060(v29);
  swift_bridgeObjectRelease();
  uint64_t v101 = v23;
  uint64_t v30 = sub_1C14F77E0();
  uint64_t v31 = v30;
  uint64_t v123 = MEMORY[0x1E4FBC860];
  uint64_t v105 = *(void *)(v27 + 16);
  if (!v105)
  {
    swift_bridgeObjectRelease();
    uint64_t v64 = MEMORY[0x1E4FBC860];
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v65 = v97;
    uint64_t v66 = v98;
    uint64_t v67 = v99;
    int v68 = v100;
    sub_1C0254D40(v97, v98, v99, v100);
    uint64_t v69 = v96;
    swift_bridgeObjectRetain();
    uint64_t v70 = v95;
    unint64_t v71 = sub_1C0B6C8DC(v64, v31, v65, v66, v67, v68, v69);
    uint64_t v7 = v70;
    swift_bridgeObjectRelease();
    sub_1C0254C7C(v65, v66, v67, v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    int64_t v72 = *(void *)(v71 + 16);
    uint64_t v73 = MEMORY[0x1E4FBC860];
    unint64_t v121 = v71;
    if (v72)
    {
      uint64_t v123 = MEMORY[0x1E4FBC860];
      sub_1BFF661B8(0, v72, 0);
      uint64_t v74 = v71 + ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80));
      uint64_t v75 = *(void *)(v94 + 72);
      uint64_t v73 = v123;
      do
      {
        uint64_t v76 = v109;
        sub_1C0B6FCA8(v74, (uint64_t)v109, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
        uint64_t v77 = *v76;
        uint64_t v78 = v76[1];
        swift_bridgeObjectRetain();
        sub_1C0B6F9C4((uint64_t)v76, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BFF661B8(0, *(void *)(v73 + 16) + 1, 1);
          uint64_t v73 = v123;
        }
        unint64_t v80 = *(void *)(v73 + 16);
        unint64_t v79 = *(void *)(v73 + 24);
        if (v80 >= v79 >> 1)
        {
          sub_1BFF661B8(v79 > 1, v80 + 1, 1);
          uint64_t v73 = v123;
        }
        *(void *)(v73 + 16) = v80 + 1;
        uint64_t v81 = v73 + 16 * v80;
        *(void *)(v81 + 32) = v77;
        *(void *)(v81 + 40) = v78;
        v74 += v75;
        --v72;
      }
      while (v72);
    }
    uint64_t v36 = sub_1BFEF4060(v73);
    swift_bridgeObjectRelease();
    if (qword_1EB863FD0 != -1) {
      goto LABEL_53;
    }
    goto LABEL_44;
  }
  uint64_t v93 = v30;
  sub_1C0B6ADE4();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v107 = v27 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
  uint64_t v108 = v32;
  uint64_t v106 = *(void *)(v33 + 72);
  uint64_t v92 = v27;
  swift_bridgeObjectRetain();
  uint64_t v34 = 0;
LABEL_3:
  uint64_t v35 = *(void *)(v107 + v106 * v34 + *(int *)(v108 + 44));
  uint64_t v115 = *(void *)(v35 + 16);
  if (!v115)
  {
    uint64_t v37 = MEMORY[0x1E4FBC860];
    goto LABEL_33;
  }
  uint64_t v103 = v34;
  uint64_t v114 = v116 + *(int *)(v104 + 52);
  uint64_t v113 = v35 + ((*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80));
  swift_bridgeObjectRetain();
  uint64_t v36 = 0;
  uint64_t v37 = MEMORY[0x1E4FBC860];
  uint64_t v110 = v35;
  while (1)
  {
    if ((unint64_t)v36 >= *(void *)(v35 + 16)) {
      goto LABEL_52;
    }
    uint64_t v38 = v116;
    sub_1C0B6FCA8(v113 + *(void *)(v117 + 72) * v36, v116, (uint64_t (*)(void))sub_1C0B6F50C);
    uint64_t v39 = v112;
    sub_1C0B6FCA8(v114, v112, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponse);
    sub_1C0B6F9C4(v38, (uint64_t (*)(void))sub_1C0B6F50C);
    sub_1C060B68C();
    uint64_t v40 = sub_1C151851C();
    sub_1C0B6F9C4(v39, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponse);
    uint64_t v41 = *(void *)(v40 + 16);
    if (v41) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_6:
    if (++v36 == v115)
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = v103;
LABEL_33:
      uint64_t v63 = v34 + 1;
      sub_1C104ACB0(v37);
      uint64_t v34 = v63;
      if (v63 == v105)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v64 = v123;
        uint64_t v31 = v93;
        goto LABEL_36;
      }
      goto LABEL_3;
    }
  }
  uint64_t v118 = v40;
  uint64_t v119 = v36;
  uint64_t v7 = v40 + ((*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80));
  unint64_t v121 = *(void *)(v111 + 72);
  while (1)
  {
    sub_1C0B6FCA8(v7, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseData);
    sub_1C0B6F5F4();
    uint64_t v42 = sub_1C151851C();
    unint64_t v43 = *(void *)(v42 + 16);
    int64_t v44 = *(void *)(v37 + 16);
    int64_t v45 = v44 + v43;
    if (__OFADD__(v44, v43)) {
      break;
    }
    uint64_t v46 = v42;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v45 <= *(void *)(v37 + 24) >> 1)
    {
      uint64_t v48 = *(void *)(v46 + 16);
      if (!v48) {
        goto LABEL_10;
      }
    }
    else
    {
      if (v44 <= v45) {
        int64_t v49 = v44 + v43;
      }
      else {
        int64_t v49 = v44;
      }
      uint64_t v37 = sub_1C0EE7210(isUniquelyReferenced_nonNull_native, v49, 1, v37);
      uint64_t v48 = *(void *)(v46 + 16);
      if (!v48)
      {
LABEL_10:
        if (v43) {
          goto LABEL_49;
        }
        goto LABEL_11;
      }
    }
    uint64_t v50 = *(void *)(v37 + 16);
    uint64_t v36 = (*(void *)(v37 + 24) >> 1) - v50;
    uint64_t v51 = *(void *)(type metadata accessor for SportsDataVisualizationResponseItem() - 8);
    uint64_t v52 = *(void *)(v51 + 72);
    if (v36 < v48) {
      goto LABEL_50;
    }
    unint64_t v53 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    unint64_t v54 = v37 + v53 + v52 * v50;
    unint64_t v55 = v46 + v53;
    uint64_t v56 = v52 * v48;
    unint64_t v57 = v54 + v56;
    unint64_t v58 = v55 + v56;
    if (v55 < v57 && v54 < v58)
    {
      uint64_t result = sub_1C152052C();
      __break(1u);
      return result;
    }
    swift_arrayInitWithCopy();
    if (v48 < v43) {
      goto LABEL_49;
    }
    uint64_t v60 = *(void *)(v37 + 16);
    BOOL v61 = __OFADD__(v60, v48);
    uint64_t v62 = v60 + v48;
    if (v61) {
      goto LABEL_51;
    }
    *(void *)(v37 + 16) = v62;
LABEL_11:
    swift_bridgeObjectRelease();
    sub_1C0B6F9C4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseData);
    v7 += v121;
    if (!--v41)
    {
      swift_bridgeObjectRelease();
      uint64_t v35 = v110;
      uint64_t v36 = v119;
      goto LABEL_6;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  swift_once();
LABEL_44:
  uint64_t v82 = sub_1C15198DC();
  __swift_project_value_buffer(v82, (uint64_t)qword_1EB863FB8);
  swift_bridgeObjectRetain_n();
  id v83 = sub_1C15198AC();
  os_log_type_t v84 = sub_1C151F38C();
  if (os_log_type_enabled(v83, v84))
  {
    uint64_t v85 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    uint64_t v123 = v86;
    *(_DWORD *)uint64_t v85 = 136446210;
    uint64_t v120 = v7;
    swift_bridgeObjectRetain();
    uint64_t v87 = sub_1C151EFCC();
    unint64_t v89 = v88;
    swift_bridgeObjectRelease();
    uint64_t v122 = sub_1BFDA76EC(v87, v89, &v123);
    sub_1C151FE1C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v83, v84, "Successfully fetched featured events=%{public}s", v85, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v86, -1, -1);
    MEMORY[0x1C18C9B00](v85, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t result = sub_1C0B6F9C4((uint64_t)v101, (uint64_t (*)(void))type metadata accessor for SportsFeaturedEventsResource);
  uint64_t v90 = v102;
  *uint64_t v102 = v121;
  v90[1] = v36;
  return result;
}

uint64_t sub_1C0B5D664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, char a5@<W5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v32 = a4;
  uint64_t v33 = a6;
  uint64_t v31 = a3;
  uint64_t v34 = a7;
  uint64_t v10 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6FCA8(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      goto LABEL_2;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    default:
      sub_1C0B70244((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      uint64_t v20 = sub_1C09B8238();
      if (!*(void *)(a2 + 16) || (unint64_t v22 = sub_1BFEF2D8C(v20, v21), (v23 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = v34;
        goto LABEL_12;
      }
      uint64_t v24 = *(void *)(*(void *)(a2 + 56) + 8 * v22);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (!a5)
      {
        uint64_t v17 = v34;
        uint64_t v25 = v32;
        goto LABEL_15;
      }
      uint64_t v17 = v34;
      if (a5 == 1)
      {
        uint64_t v25 = *(void *)(v31 + 40);
LABEL_15:
        swift_bridgeObjectRetain();
        goto LABEL_17;
      }
      uint64_t v25 = MEMORY[0x1E4FBC870];
LABEL_17:
      char v29 = sub_1BFEFB810(v25, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0) {
        goto LABEL_18;
      }
LABEL_12:
      uint64_t v26 = sub_1C09B8238();
      char v28 = sub_1BFF896B4(v26, v27, v33);
      swift_bridgeObjectRelease();
      if (v28)
      {
LABEL_18:
        sub_1C0B70244((uint64_t)v13, v17, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
        uint64_t v18 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v17, v18, 1, v10);
      }
      sub_1C0B6F9C4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
LABEL_3:
      uint64_t v18 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v17, v18, 1, v10);
  }
}

void sub_1C0B5D9AC(void *a1@<X0>, void *a2@<X8>)
{
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1C15198DC();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB863FB8);
  id v5 = a1;
  id v6 = a1;
  uint64_t v7 = sub_1C15198AC();
  os_log_type_t v8 = sub_1C151F36C();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v14 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    swift_getErrorValue();
    uint64_t v11 = sub_1C1520D3C();
    sub_1BFDA76EC(v11, v12, &v14);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BFC31000, v7, v8, "Failed to fetch featured events; error=%{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v10, -1, -1);
    MEMORY[0x1C18C9B00](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = MEMORY[0x1E4FBC870];
  *a2 = MEMORY[0x1E4FBC860];
  a2[1] = v13;
}

uint64_t sub_1C0B5DBA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C09B7E8C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0B5DBDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C0B5DC00, 0, 0);
}

uint64_t sub_1C0B5DC00()
{
  v0[5] = sub_1C0B5DCA8(v0[4]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C0128064;
  uint64_t v2 = v0[2];
  return MEMORY[0x1F415EBC8](v2);
}

uint64_t sub_1C0B5DCA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v36 = (uint64_t)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1F4188790](v41);
  id v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  os_log_type_t v8 = (void *)((char *)v35 - v7);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v35 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v35 - v15;
  uint64_t v43 = MEMORY[0x1E4FBC870];
  uint64_t v39 = *(void *)(a1 + 16);
  if (v39)
  {
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v37 = *(void *)(v14 + 72);
    uint64_t v38 = v17;
    v35[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v18 = 0;
    while (2)
    {
      uint64_t v19 = v18 + 1;
      sub_1C0B6FCA8(v38 + v37 * v18, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
      sub_1C0B6FCA8((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v40 = v19;
      switch(EnumCaseMultiPayload)
      {
        case 1:
          uint64_t v21 = *((void *)v11 + 4);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 2:
          uint64_t v21 = *((void *)v11 + 6);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 3:
        case 4:
        case 5:
        case 6:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v21 = MEMORY[0x1E4FBC860];
          break;
        default:
          uint64_t v30 = v36;
          sub_1C0B70244((uint64_t)v11, v36, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
          uint64_t v21 = *(void *)(v30 + 48);
          swift_bridgeObjectRetain();
          sub_1C0B6F9C4(v30, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
          break;
      }
      uint64_t v22 = *(void *)(v21 + 16);
      if (v22)
      {
        char v23 = (uint64_t *)(v21 + 40);
        do
        {
          uint64_t v24 = *(v23 - 1);
          uint64_t v25 = *v23;
          swift_bridgeObjectRetain();
          sub_1BFEFFC1C(&v42, v24, v25);
          swift_bridgeObjectRelease();
          v23 += 2;
          --v22;
        }
        while (v22);
      }
      swift_bridgeObjectRelease();
      sub_1C0B6FCA8((uint64_t)v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v26 = v8[2];
          uint64_t v27 = v8[3];
          goto LABEL_12;
        case 2u:
          uint64_t v26 = v8[2];
          uint64_t v27 = v8[3];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_13;
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v26 = v8[4];
          uint64_t v27 = v8[5];
LABEL_12:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_13:
          swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_14;
          }
          goto LABEL_15;
        default:
          uint64_t v31 = v36;
          sub_1C0B70244((uint64_t)v8, v36, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
          uint64_t v26 = *(void *)(v31 + 32);
          uint64_t v27 = *(void *)(v31 + 40);
          swift_bridgeObjectRetain();
          sub_1C0B6F9C4(v31, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
          if (!v27) {
            goto LABEL_15;
          }
LABEL_14:
          sub_1BFEFFC1C(&v42, v26, v27);
          swift_bridgeObjectRelease();
LABEL_15:
          sub_1C0B6FCA8((uint64_t)v16, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
          if (swift_getEnumCaseMultiPayload() == 2)
          {
            uint64_t v28 = *((void *)v5 + 4);
            uint64_t v29 = *((void *)v5 + 5);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v29)
            {
              sub_1BFEFFC1C(&v42, v28, v29);
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            sub_1C0B6F9C4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
          }
          sub_1C0B6F9C4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
          uint64_t v18 = v40;
          if (v40 != v39) {
            continue;
          }
          uint64_t v13 = swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  MEMORY[0x1F4188790](v13);
  v35[-2] = v35[2];
  v35[-1] = &v43;
  sub_1BFC8BAC0();
  sub_1C151932C();
  uint64_t v32 = (void *)sub_1C1518E7C();
  sub_1C0B6DFD0(0, (unint64_t *)&unk_1EB86AEF0, (unint64_t *)&qword_1EB86B430);
  uint64_t v33 = sub_1C1518FFC();
  swift_release();

  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_1C0B5E2F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return MEMORY[0x1F4188298](sub_1C0B5E314, 0, 0);
}

uint64_t sub_1C0B5E314()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = v1[26];
  uint64_t v3 = v1[27];
  __swift_project_boxed_opaque_existential_1(v1 + 23, v2);
  uint64_t v4 = swift_bridgeObjectRetain();
  id v5 = sub_1BFE71F8C(v4);
  swift_bridgeObjectRelease();
  v0[6] = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v3 + 16))(v5, v2, v3);
  swift_release();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1C0B5E428;
  return MEMORY[0x1F415EBC8](v0 + 2);
}

uint64_t sub_1C0B5E428()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0B5E564;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C0B5E544;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0B5E544()
{
  **(void **)(v0 + 24) = *(void *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0B5E564()
{
  uint64_t v1 = *(void **)(v0 + 64);
  swift_release();
  unint64_t v2 = sub_1C018F998(MEMORY[0x1E4FBC860]);

  **(void **)(v0 + 24) = v2;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1C0B5E5EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, uint64_t *a8@<X8>, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t *a15)
{
  uint64_t v75 = a7;
  uint64_t v76 = a5;
  uint64_t v80 = a3;
  uint64_t v81 = a6;
  *(void *)&long long v82 = a2;
  uint64_t v91 = a8;
  uint64_t v77 = a14;
  unint64_t v78 = a9;
  uint64_t v79 = a4;
  uint64_t v16 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (uint64_t *)((char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6FCA8(a1, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v24 = *((void *)v21 + 1);
      uint64_t v25 = *((void *)v21 + 2);
      uint64_t v26 = *((void *)v21 + 3);
      uint64_t v27 = *((void *)v21 + 4);
      uint64_t v28 = *((void *)v21 + 5);
      char v29 = v21[48];
      uint64_t v83 = *(void *)v21;
      uint64_t v84 = v24;
      uint64_t v85 = v25;
      uint64_t v86 = v26;
      uint64_t v87 = v27;
      uint64_t v88 = v28;
      LOBYTE(v89) = v29;
      sub_1BFF0A354();
      uint64_t v30 = sub_1C1518A2C();
      sub_1C0B626AC((uint64_t)&v83, v80, v30, v81, v91);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 2u:
      uint64_t v31 = *(void *)v21;
      uint64_t v32 = *((void *)v21 + 1);
      uint64_t v33 = *((void *)v21 + 2);
      uint64_t v34 = *((void *)v21 + 3);
      uint64_t v36 = *((void *)v21 + 4);
      uint64_t v35 = *((void *)v21 + 5);
      long long v82 = *((_OWORD *)v21 + 3);
      uint64_t v80 = *((void *)v21 + 8);
      uint64_t v81 = v35;
      LODWORD(v79) = v21[72];
      uint64_t v37 = (void *)*a15;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *a15 = (uint64_t)v37;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1C0EE72A0(0, v37[2] + 1, 1, v37);
        uint64_t v37 = (void *)result;
        *a15 = result;
      }
      unint64_t v39 = v37[2];
      unint64_t v38 = v37[3];
      if (v39 >= v38 >> 1)
      {
        uint64_t result = (uint64_t)sub_1C0EE72A0((void *)(v38 > 1), v39 + 1, 1, v37);
        uint64_t v37 = (void *)result;
        *a15 = result;
      }
      v37[2] = v39 + 1;
      uint64_t v40 = &v37[10 * v39];
      v40[4] = v31;
      v40[5] = v32;
      v40[6] = v33;
      v40[7] = v34;
      uint64_t v41 = v81;
      v40[8] = v36;
      v40[9] = v41;
      *((_OWORD *)v40 + 5) = v82;
      v40[12] = v80;
      *((unsigned char *)v40 + 104) = v79;
      *uint64_t v91 = 0xF000000000000007;
      return result;
    case 3u:
      uint64_t v42 = *((void *)v21 + 1);
      uint64_t v43 = *((void *)v21 + 2);
      uint64_t v44 = *((void *)v21 + 3);
      uint64_t v45 = *((void *)v21 + 4);
      uint64_t v46 = *((void *)v21 + 5);
      uint64_t v47 = *((void *)v21 + 6);
      char v48 = v21[56];
      uint64_t v83 = *(void *)v21;
      uint64_t v84 = v42;
      uint64_t v85 = v43;
      uint64_t v86 = v44;
      uint64_t v87 = v45;
      uint64_t v88 = v46;
      uint64_t v89 = v47;
      char v90 = v48;
      sub_1BFF0A354();
      uint64_t v49 = sub_1C1518A2C();
      sub_1C0B5FEBC((uint64_t)&v83, v80, v49, v78, v77, v91);
      goto LABEL_13;
    case 4u:
      uint64_t v50 = *((void *)v21 + 1);
      uint64_t v51 = *((void *)v21 + 2);
      uint64_t v52 = *((void *)v21 + 3);
      uint64_t v53 = *((void *)v21 + 4);
      uint64_t v54 = *((void *)v21 + 5);
      uint64_t v55 = *((void *)v21 + 6);
      char v56 = v21[56];
      uint64_t v83 = *(void *)v21;
      uint64_t v84 = v50;
      uint64_t v85 = v51;
      uint64_t v86 = v52;
      uint64_t v87 = v53;
      uint64_t v88 = v54;
      uint64_t v89 = v55;
      char v90 = v56;
      sub_1BFF0A354();
      uint64_t v57 = sub_1C1518A2C();
      sub_1C0B60CB8((uint64_t)&v83, v80, v57, v78, v77, (unint64_t *)v91);
      goto LABEL_13;
    case 5u:
      uint64_t v58 = *((void *)v21 + 1);
      uint64_t v59 = *((void *)v21 + 2);
      uint64_t v60 = *((void *)v21 + 3);
      uint64_t v61 = *((void *)v21 + 4);
      uint64_t v62 = *((void *)v21 + 5);
      uint64_t v63 = *((void *)v21 + 6);
      char v64 = v21[56];
      uint64_t v83 = *(void *)v21;
      uint64_t v84 = v58;
      uint64_t v85 = v59;
      uint64_t v86 = v60;
      uint64_t v87 = v61;
      uint64_t v88 = v62;
      uint64_t v89 = v63;
      char v90 = v64;
      sub_1BFF0A354();
      uint64_t v65 = sub_1C1518A2C();
      sub_1C0B618AC((uint64_t)&v83, v80, v65, v78, v77, (unint64_t *)v91);
      goto LABEL_13;
    case 6u:
      uint64_t v66 = *((void *)v21 + 1);
      uint64_t v67 = *((void *)v21 + 2);
      uint64_t v68 = *((void *)v21 + 3);
      uint64_t v69 = *((void *)v21 + 4);
      uint64_t v70 = *((void *)v21 + 5);
      uint64_t v71 = *((void *)v21 + 6);
      char v72 = v21[56];
      uint64_t v83 = *(void *)v21;
      uint64_t v84 = v66;
      uint64_t v85 = v67;
      uint64_t v86 = v68;
      uint64_t v87 = v69;
      uint64_t v88 = v70;
      uint64_t v89 = v71;
      char v90 = v72;
      sub_1BFF0A354();
      uint64_t v73 = sub_1C1518A2C();
      sub_1C0B62F6C((uint64_t)&v83, v80, v73, v78, v77, (unint64_t *)v91);
LABEL_13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_14:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      sub_1C0B70244((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      sub_1BFF0A354();
      uint64_t v22 = sub_1C1518A2C();
      uint64_t v83 = a10;
      uint64_t v84 = a11;
      uint64_t v85 = a12;
      LOBYTE(v86) = a13;
      sub_1C0B5EAD4(v18, v80, v22, v76, v81, v75, v78, (uint64_t)&v83, v91);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C0B6F9C4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      break;
  }
  return result;
}

void sub_1C0B5EAD4(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v131 = a6;
  unint64_t v132 = a7;
  uint64_t v122 = a5;
  uint64_t v133 = a4;
  uint64_t v135 = a2;
  uint64_t v138 = a9;
  uint64_t v12 = type metadata accessor for SportsDataVisualizationResponseMetadata();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v121 = (uint64_t)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0B6DDBC(0, qword_1EB869120, (uint64_t (*)(uint64_t))type metadata accessor for SportsEventStatusResponseEmbed, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  id v124 = (char *)&v121 - v16;
  sub_1C0B6DDBC(0, &qword_1EB86ABB8, type metadata accessor for SportsDataVisualizationResponseEventStatus, v14);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v128 = (uint64_t)&v121 - v18;
  uint64_t v126 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  uint64_t v125 = *(void *)(v126 - 8);
  MEMORY[0x1F4188790](v126);
  uint64_t v129 = (uint64_t)&v121 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v130 = (char *)&v121 - v21;
  uint64_t v22 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (uint64_t *)((char *)&v121 - v26);
  MEMORY[0x1F4188790](v28);
  id v134 = (char *)&v121 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (uint64_t *)((char *)&v121 - v31);
  MEMORY[0x1F4188790](v33);
  uint64_t v123 = (uint64_t)&v121 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (uint64_t *)((char *)&v121 - v36);
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], v14);
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v40 = (char *)&v121 - v39;
  uint64_t v41 = sub_1C1515FDC();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v139 = v41;
  uint64_t v140 = v42;
  MEMORY[0x1F4188790](v41);
  id v127 = (char *)&v121 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v44);
  uint64_t v136 = v22;
  uint64_t v137 = (char *)&v121 - v45;
  if (*(unsigned char *)(a8 + 24) == 2) {
    char v46 = 1;
  }
  else {
    char v46 = *((unsigned char *)a1 + *(int *)(v22 + 40));
  }
  LOBYTE(v141[0]) = v46;
  sub_1C0B64050(v141, a3, (uint64_t)v40);
  uint64_t v48 = v139;
  uint64_t v47 = v140;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))(v40, 1, v139) == 1)
  {
    sub_1C0B70738((uint64_t)v40, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    if (qword_1EB863FD0 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_1C15198DC();
    __swift_project_value_buffer(v49, (uint64_t)qword_1EB863FB8);
    sub_1C0B6FCA8((uint64_t)a1, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    sub_1C0B6FCA8((uint64_t)a1, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    uint64_t v50 = sub_1C15198AC();
    os_log_type_t v51 = sub_1C151F36C();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = 0x535F5354524F5053;
      uint64_t v53 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      *(void *)&v141[0] = v54;
      *(_DWORD *)uint64_t v53 = 136446466;
      uint64_t v55 = *v27;
      unint64_t v56 = v27[1];
      swift_bridgeObjectRetain();
      v142[0] = sub_1BFDA76EC(v55, v56, (uint64_t *)v141);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      sub_1C0B6F9C4((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      *(_WORD *)(v53 + 12) = 2082;
      unint64_t v57 = 0xEC00000045524F43;
      switch(v24[*(int *)(v136 + 40)])
      {
        case 1:
          uint64_t v52 = 0xD000000000000015;
          uint64_t v58 = "SPORTS_SCORE_MASTHEAD";
          goto LABEL_47;
        case 2:
          unint64_t v57 = 0xEF474E49444E4154;
          break;
        case 3:
          uint64_t v52 = 0x425F5354524F5053;
          unint64_t v57 = 0xEE0054454B434152;
          break;
        case 4:
          unint64_t v57 = 0x80000001C16021E0;
          uint64_t v52 = 0xD000000000000010;
          break;
        case 5:
          uint64_t v52 = 0xD000000000000011;
          uint64_t v58 = "SPORTS_LINE_SCORE";
          goto LABEL_47;
        case 6:
          uint64_t v52 = 0xD000000000000014;
          uint64_t v58 = "SPORTS_INJURY_REPORT";
          goto LABEL_47;
        case 7:
          uint64_t v52 = 0xD000000000000013;
          uint64_t v58 = "SPORTS_TEAM_LEADERS";
LABEL_47:
          unint64_t v57 = (unint64_t)(v58 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      v142[0] = sub_1BFDA76EC(v52, v57, (uint64_t *)v141);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      sub_1C0B6F9C4((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      _os_log_impl(&dword_1BFC31000, v50, v51, "Sports data service no embed mapping found for id=%{public}s, embedType=%{public}s", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v54, -1, -1);
      MEMORY[0x1C18C9B00](v53, -1, -1);
    }
    else
    {
      sub_1C0B6F9C4((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      sub_1C0B6F9C4((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    }

    goto LABEL_58;
  }
  uint64_t v59 = v137;
  uint64_t v60 = (*(uint64_t (**)(char *, char *, uint64_t))(v47 + 32))(v137, v40, v48);
  uint64_t v61 = a1[7];
  MEMORY[0x1F4188790](v60);
  uint64_t v120 = v135;
  swift_bridgeObjectRetain();
  unint64_t v62 = sub_1C0284738((void (*)(uint64_t *__return_ptr, void *))sub_1C0B6E97C, (uint64_t)v119, v61);
  swift_bridgeObjectRelease();
  if (v62 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v63 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v63 != *(void *)(a1[7] + 16))
  {
    swift_bridgeObjectRelease();
    if (qword_1EB863FD0 != -1) {
      swift_once();
    }
    uint64_t v77 = sub_1C15198DC();
    __swift_project_value_buffer(v77, (uint64_t)qword_1EB863FB8);
    sub_1C0B6FCA8((uint64_t)a1, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    uint64_t v78 = (uint64_t)v134;
    sub_1C0B6FCA8((uint64_t)a1, (uint64_t)v134, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    uint64_t v79 = sub_1C15198AC();
    os_log_type_t v80 = sub_1C151F36C();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = v78;
      uint64_t v82 = 0x535F5354524F5053;
      uint64_t v83 = swift_slowAlloc();
      uint64_t v84 = swift_slowAlloc();
      *(void *)&v141[0] = v84;
      *(_DWORD *)uint64_t v83 = 136446466;
      uint64_t v85 = *v32;
      unint64_t v86 = v32[1];
      swift_bridgeObjectRetain();
      v142[0] = sub_1BFDA76EC(v85, v86, (uint64_t *)v141);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      sub_1C0B6F9C4((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      *(_WORD *)(v83 + 12) = 2082;
      uint64_t v87 = v137;
      unint64_t v88 = 0xEC00000045524F43;
      switch(*(unsigned char *)(v81 + *(int *)(v136 + 40)))
      {
        case 1:
          uint64_t v82 = 0xD000000000000015;
          uint64_t v89 = "SPORTS_SCORE_MASTHEAD";
          goto LABEL_56;
        case 2:
          unint64_t v88 = 0xEF474E49444E4154;
          break;
        case 3:
          uint64_t v82 = 0x425F5354524F5053;
          unint64_t v88 = 0xEE0054454B434152;
          break;
        case 4:
          unint64_t v88 = 0x80000001C16021E0;
          uint64_t v82 = 0xD000000000000010;
          break;
        case 5:
          uint64_t v82 = 0xD000000000000011;
          uint64_t v89 = "SPORTS_LINE_SCORE";
          goto LABEL_56;
        case 6:
          uint64_t v82 = 0xD000000000000014;
          uint64_t v89 = "SPORTS_INJURY_REPORT";
          goto LABEL_56;
        case 7:
          uint64_t v82 = 0xD000000000000013;
          uint64_t v89 = "SPORTS_TEAM_LEADERS";
LABEL_56:
          unint64_t v88 = (unint64_t)(v89 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      v142[0] = sub_1BFDA76EC(v82, v88, (uint64_t *)v141);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      sub_1C0B6F9C4((uint64_t)v134, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      _os_log_impl(&dword_1BFC31000, v79, v80, "Sports data service could not create all data sources for id=%{public}s, embedType=%{public}s", (uint8_t *)v83, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v84, -1, -1);
      MEMORY[0x1C18C9B00](v83, -1, -1);

      (*(void (**)(char *, uint64_t))(v140 + 8))(v87, v139);
      goto LABEL_58;
    }

    sub_1C0B6F9C4(v78, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    sub_1C0B6F9C4((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    goto LABEL_40;
  }
  char v64 = (void *)sub_1C0B64418(a1, v132);
  uint64_t v65 = v133;
  if (v64)
  {
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_isDeprecated))
    {
      swift_bridgeObjectRelease();
      if (qword_1EB863FD0 != -1) {
        swift_once();
      }
      uint64_t v66 = sub_1C15198DC();
      __swift_project_value_buffer(v66, (uint64_t)qword_1EB863FB8);
      sub_1C0B6FCA8((uint64_t)a1, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      swift_unknownObjectRetain_n();
      uint64_t v67 = sub_1C15198AC();
      os_log_type_t v68 = sub_1C151F38C();
      if (os_log_type_enabled(v67, v68))
      {
        uint64_t v69 = swift_slowAlloc();
        uint64_t v70 = swift_slowAlloc();
        *(void *)&v141[0] = v70;
        *(_DWORD *)uint64_t v69 = 136446466;
        uint64_t v71 = *v37;
        unint64_t v72 = v37[1];
        swift_bridgeObjectRetain();
        v142[0] = sub_1BFDA76EC(v71, v72, (uint64_t *)v141);
        sub_1C151FE1C();
        swift_bridgeObjectRelease();
        sub_1C0B6F9C4((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
        *(_WORD *)(v69 + 12) = 2082;
        id v73 = objc_msgSend(v64, sel_description);
        uint64_t v74 = sub_1C151E62C();
        unint64_t v76 = v75;

        v142[0] = sub_1BFDA76EC(v74, v76, (uint64_t *)v141);
        sub_1C151FE1C();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BFC31000, v67, v68, "Sports data service not created score for deprecated id=%{public}s, event=%{public}s", (uint8_t *)v69, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v70, -1, -1);
        MEMORY[0x1C18C9B00](v69, -1, -1);
        swift_unknownObjectRelease_n();

        (*(void (**)(char *, uint64_t))(v140 + 8))(v137, v139);
LABEL_58:
        uint64_t v112 = 0xF000000000000007;
        goto LABEL_59;
      }
      swift_unknownObjectRelease_n();

      sub_1C0B6F9C4((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      swift_unknownObjectRelease_n();
LABEL_40:
      (*(void (**)(char *, uint64_t))(v140 + 8))(v59, v48);
      goto LABEL_58;
    }
    swift_unknownObjectRelease();
  }
  uint64_t v90 = v122;
  id v134 = (char *)sub_1C0B646A0(a1, v122, v64);
  uint64_t v135 = (uint64_t)v64;
  unint64_t v132 = sub_1C0B64A48((int)a1, v90, v64);
  if (*(void *)(v65 + 16))
  {
    uint64_t v92 = *a1;
    uint64_t v91 = a1[1];
    swift_bridgeObjectRetain();
    unint64_t v93 = sub_1BFEF2D8C(v92, v91);
    uint64_t v94 = (uint64_t)v124;
    if (v95)
    {
      unint64_t v96 = v93;
      uint64_t v97 = *(void *)(v65 + 56);
      uint64_t v98 = type metadata accessor for SportsEventStatusResponseEmbed();
      uint64_t v99 = *(void *)(v98 - 8);
      uint64_t v100 = v97 + *(void *)(v99 + 72) * v96;
      uint64_t v48 = v139;
      sub_1C0B6FCA8(v100, v94, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponseEmbed);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v99 + 56))(v94, 0, 1, v98);
    }
    else
    {
      uint64_t v98 = type metadata accessor for SportsEventStatusResponseEmbed();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v94, 1, 1, v98);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for SportsEventStatusResponseEmbed();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 48))(v94, 1, v98) != 1)
    {
      uint64_t v106 = v94 + *(int *)(v98 + 20);
      uint64_t v105 = v128;
      sub_1C0B6FCA8(v106, v128, type metadata accessor for SportsDataVisualizationResponseEventStatus);
      sub_1C0B6F9C4(v94, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponseEmbed);
      uint64_t v102 = 0;
      uint64_t v103 = v136;
      uint64_t v104 = (uint64_t)v130;
      goto LABEL_35;
    }
  }
  else
  {
    uint64_t v101 = type metadata accessor for SportsEventStatusResponseEmbed();
    uint64_t v94 = (uint64_t)v124;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v124, 1, 1, v101);
  }
  sub_1C0B70738(v94, qword_1EB869120, (uint64_t (*)(uint64_t))type metadata accessor for SportsEventStatusResponseEmbed);
  uint64_t v102 = 1;
  uint64_t v103 = v136;
  uint64_t v104 = (uint64_t)v130;
  uint64_t v105 = v128;
LABEL_35:
  uint64_t v107 = v125;
  uint64_t v108 = v126;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v125 + 56))(v105, v102, 1, v126);
  uint64_t v109 = v123;
  sub_1C0B6FCA8((uint64_t)a1, v123, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v105, 1, v108) == 1)
  {
    uint64_t v110 = v109 + *(int *)(v103 + 36);
    uint64_t v111 = v121;
    sub_1C0B6FCA8(v110, v121, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseMetadata);
    sub_1C0B6F9C4(v109, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    sub_1C0B70244(v111, v104, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    sub_1C0B70738(v105, &qword_1EB86ABB8, type metadata accessor for SportsDataVisualizationResponseEventStatus);
  }
  else
  {
    sub_1C0B6F9C4(v109, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    sub_1C0B70244(v105, v104, type metadata accessor for SportsDataVisualizationResponseEventStatus);
  }
  uint64_t v112 = swift_allocObject();
  uint64_t v113 = *a1;
  uint64_t v114 = a1[1];
  uint64_t v115 = v140;
  uint64_t v116 = (uint64_t)v127;
  (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v127, v59, v48);
  uint64_t v117 = v129;
  sub_1C0B6FCA8(v104, v129, type metadata accessor for SportsDataVisualizationResponseEventStatus);
  sub_1C11FA080(v117, (unint64_t *)v142);
  swift_bridgeObjectRetain_n();
  LOBYTE(v117) = sub_1BFF896B4(v113, v114, v131);
  swift_bridgeObjectRelease();
  type metadata accessor for SportsScoreDataVisualization();
  memset(v141, 0, 48);
  swift_allocObject();
  uint64_t v118 = SportsScoreDataVisualization.init(competitorTags:leagueTag:umcCanonicalId:event:embedUrl:urlDataSources:eventStatus:isFeatured:metadata:debugData:config:)(v132, (uint64_t)v134, v113, v114, v135, v116, v62, v142, v117 & 1, 0, 0, (uint64_t *)v141);
  sub_1C0B6F9C4(v104, type metadata accessor for SportsDataVisualizationResponseEventStatus);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v59, v48);
  *(void *)(v112 + 16) = v118;
LABEL_59:
  *uint64_t v138 = v112;
}

uint64_t sub_1C0B5FEBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
  uint64_t v82 = a6;
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v74 - v12;
  uint64_t v14 = sub_1C1515FDC();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = *(void *)(a1 + 16);
  uint64_t v22 = *(void *)(a1 + 24);
  uint64_t v83 = *(unsigned __int8 *)(a1 + 56);
  if (!*(void *)(a4 + 16)) {
    goto LABEL_10;
  }
  uint64_t v80 = v20;
  uint64_t v81 = v18;
  uint64_t v79 = *(void *)a1;
  uint64_t v23 = *(void *)(a1 + 8);
  uint64_t v77 = (char *)&v74 - v19;
  uint64_t v78 = v23;
  uint64_t v24 = *(void *)(a1 + 40);
  uint64_t v25 = *(void *)(a1 + 48);
  uint64_t v76 = v24;
  swift_bridgeObjectRetain();
  unint64_t v26 = sub_1BFEF2D8C(v21, v22);
  if ((v27 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v38 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1C1527210;
    *(void *)&v84[0] = 0;
    *((void *)&v84[0] + 1) = 0xE000000000000000;
    uint64_t v40 = v39;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    long long v44 = v84[0];
    uint64_t v45 = MEMORY[0x1E4FBB1A0];
    *(void *)(v40 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v46 = sub_1BFE9C558();
    *(_OWORD *)(v40 + 32) = v44;
    *(void *)(v40 + 96) = v45;
    *(void *)(v40 + 104) = v46;
    *(void *)(v40 + 64) = v46;
    *(void *)(v40 + 72) = v21;
    *(void *)(v40 + 80) = v22;
    swift_bridgeObjectRetain();
    sub_1C15197BC();

    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v75 = v25;
  uint64_t v28 = *(void *)(*(void *)(a4 + 56) + 8 * v26);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(void *)(a5 + 16))
  {
LABEL_14:
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v41 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1C1527210;
    *(void *)&v84[0] = 0;
    *((void *)&v84[0] + 1) = 0xE000000000000000;
    uint64_t v43 = v42;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    long long v61 = v84[0];
    uint64_t v62 = MEMORY[0x1E4FBB1A0];
    *(void *)(v43 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v63 = sub_1BFE9C558();
    *(_OWORD *)(v43 + 32) = v61;
    *(void *)(v43 + 96) = v62;
    *(void *)(v43 + 104) = v63;
    *(void *)(v43 + 64) = v63;
    *(void *)(v43 + 72) = v21;
    *(void *)(v43 + 80) = v22;
    swift_bridgeObjectRetain();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  unint64_t v29 = sub_1BFEF2D8C(v21, v22);
  if ((v30 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v74 = v28;
  uint64_t v31 = *(void *)(*(void *)(a5 + 56) + 8 * v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  LOBYTE(v84[0]) = v83;
  uint64_t v32 = v78;
  sub_1C0B64050(v84, a3, (uint64_t)v13);
  uint64_t v34 = v80;
  uint64_t v33 = v81;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v13, 1, v81) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1C0B70738((uint64_t)v13, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v35 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C1529AE0;
    *(void *)&v84[0] = 0;
    *((void *)&v84[0] + 1) = 0xE000000000000000;
    uint64_t v37 = v36;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    long long v73 = v84[0];
    *(void *)(v37 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v37 + 64) = sub_1BFE9C558();
    *(_OWORD *)(v37 + 32) = v73;
    sub_1C15197BC();

    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t result = swift_unknownObjectRelease();
LABEL_22:
    uint64_t v60 = 0xF000000000000007;
    goto LABEL_23;
  }
  uint64_t v48 = (*(uint64_t (**)(char *, char *, uint64_t))(v34 + 32))(v77, v13, v33);
  MEMORY[0x1F4188790](v48);
  *(&v74 - 2) = a2;
  uint64_t v49 = v75;
  swift_bridgeObjectRetain();
  unint64_t v50 = sub_1C0284738((void (*)(uint64_t *__return_ptr, void *))sub_1C0B723DC, (uint64_t)(&v74 - 4), v49);
  swift_bridgeObjectRelease();
  if (v50 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v51 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v52 = v31;
  uint64_t v53 = v32;
  uint64_t v54 = v74;
  if (v51 != *(void *)(v75 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EB863FD0 != -1) {
      swift_once();
    }
    uint64_t v64 = sub_1C15198DC();
    __swift_project_value_buffer(v64, (uint64_t)qword_1EB863FB8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v65 = sub_1C15198AC();
    os_log_type_t v66 = sub_1C151F36C();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = 0x535F5354524F5053;
      os_log_type_t v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      *(void *)&v84[0] = v69;
      *(_DWORD *)os_log_type_t v68 = 136446210;
      unint64_t v70 = 0xEC00000045524F43;
      uint64_t v71 = v69;
      switch(v83)
      {
        case 1:
          uint64_t v67 = 0xD000000000000015;
          unint64_t v72 = "SPORTS_SCORE_MASTHEAD";
          goto LABEL_36;
        case 2:
          unint64_t v70 = 0xEF474E49444E4154;
          break;
        case 3:
          uint64_t v67 = 0x425F5354524F5053;
          unint64_t v70 = 0xEE0054454B434152;
          break;
        case 4:
          unint64_t v70 = 0x80000001C16021E0;
          uint64_t v67 = 0xD000000000000010;
          break;
        case 5:
          uint64_t v67 = 0xD000000000000011;
          unint64_t v72 = "SPORTS_LINE_SCORE";
          goto LABEL_36;
        case 6:
          uint64_t v67 = 0xD000000000000014;
          unint64_t v72 = "SPORTS_INJURY_REPORT";
          goto LABEL_36;
        case 7:
          uint64_t v67 = 0xD000000000000013;
          unint64_t v72 = "SPORTS_TEAM_LEADERS";
LABEL_36:
          unint64_t v70 = (unint64_t)(v72 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      uint64_t v85 = sub_1BFDA76EC(v67, v70, (uint64_t *)v84);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BFC31000, v65, v66, "Sports data service could not create all data sources for embedType=%{public}s", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v71, -1, -1);
      MEMORY[0x1C18C9B00](v68, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    swift_unknownObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v77, v81);
    goto LABEL_22;
  }
  uint64_t v55 = swift_allocObject();
  uint64_t v57 = v80;
  uint64_t v56 = v81;
  uint64_t v58 = v77;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v16, v77, v81);
  uint64_t v85 = v52;
  type metadata accessor for SportsBoxScoreDataVisualization();
  memset(v84, 0, sizeof(v84));
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v59 = SportsBoxScoreDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(v79, v53, v54, (uint64_t)v16, v50, &v85, (uint64_t *)v84);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v58, v56);
  *(void *)(v55 + 16) = v59;
  uint64_t v60 = v55 | 0x6000000000000000;
LABEL_23:
  *uint64_t v82 = v60;
  return result;
}

uint64_t sub_1C0B60CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, unint64_t *a6@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v77 = a6;
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v66 - v11;
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v74 = v13;
  uint64_t v75 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = *(void *)(a1 + 24);
  uint64_t v21 = *(unsigned __int8 *)(a1 + 56);
  if (!*(void *)(a4 + 16)) {
    goto LABEL_8;
  }
  uint64_t v68 = a5;
  uint64_t v76 = v21;
  uint64_t v22 = *(void *)a1;
  uint64_t v23 = *(void *)(a1 + 8);
  uint64_t v24 = *(void *)(a1 + 40);
  uint64_t v25 = *(void *)(a1 + 48);
  uint64_t v70 = v24;
  uint64_t v71 = (char *)&v66 - v18;
  swift_bridgeObjectRetain();
  uint64_t v72 = v19;
  unint64_t v26 = sub_1BFEF2D8C(v19, v20);
  if ((v27 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = v72;
LABEL_8:
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v34 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1C1527210;
    *(void *)&v78[0] = 0;
    *((void *)&v78[0] + 1) = 0xE000000000000000;
    uint64_t v36 = v35;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    long long v48 = v78[0];
    uint64_t v49 = MEMORY[0x1E4FBB1A0];
    *(void *)(v36 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v50 = sub_1BFE9C558();
    *(_OWORD *)(v36 + 32) = v48;
    *(void *)(v36 + 96) = v49;
    *(void *)(v36 + 104) = v50;
    *(void *)(v36 + 64) = v50;
    *(void *)(v36 + 72) = v19;
    *(void *)(v36 + 80) = v20;
    swift_bridgeObjectRetain();
    sub_1C15197BC();

    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v69 = v25;
  uint64_t v28 = *(void *)(*(void *)(a4 + 56) + 8 * v26);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  LOBYTE(v78[0]) = v76;
  uint64_t v67 = v23;
  sub_1C0B64050(v78, a3, (uint64_t)v12);
  uint64_t v30 = v74;
  uint64_t v29 = v75;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v12, 1, v74) != 1)
  {
    uint64_t v37 = v22;
    uint64_t v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v29 + 32))(v71, v12, v30);
    MEMORY[0x1F4188790](v38);
    *(&v66 - 2) = v73;
    uint64_t v39 = v69;
    swift_bridgeObjectRetain();
    unint64_t v40 = sub_1C0284738((void (*)(uint64_t *__return_ptr, void *))sub_1C0B723DC, (uint64_t)(&v66 - 4), v39);
    swift_bridgeObjectRelease();
    if (v40 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_1C15204BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v42 = v67;
    uint64_t v43 = v72;
    if (v41 != *(void *)(v69 + 16))
    {
      uint64_t v52 = v76;
      swift_bridgeObjectRelease();
      if (qword_1EB863FD0 != -1) {
        swift_once();
      }
      uint64_t v53 = sub_1C15198DC();
      __swift_project_value_buffer(v53, (uint64_t)qword_1EB863FB8);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v54 = sub_1C15198AC();
      os_log_type_t v55 = sub_1C151F36C();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = 0x535F5354524F5053;
        uint64_t v57 = (uint8_t *)swift_slowAlloc();
        uint64_t v58 = swift_slowAlloc();
        *(void *)&v78[0] = v58;
        *(_DWORD *)uint64_t v57 = 136446210;
        unint64_t v59 = 0xEC00000045524F43;
        uint64_t v60 = v58;
        switch(v52)
        {
          case 1:
            uint64_t v56 = 0xD000000000000015;
            long long v61 = "SPORTS_SCORE_MASTHEAD";
            goto LABEL_35;
          case 2:
            unint64_t v59 = 0xEF474E49444E4154;
            break;
          case 3:
            uint64_t v56 = 0x425F5354524F5053;
            unint64_t v59 = 0xEE0054454B434152;
            break;
          case 4:
            unint64_t v59 = 0x80000001C16021E0;
            uint64_t v56 = 0xD000000000000010;
            break;
          case 5:
            uint64_t v56 = 0xD000000000000011;
            long long v61 = "SPORTS_LINE_SCORE";
            goto LABEL_35;
          case 6:
            uint64_t v56 = 0xD000000000000014;
            long long v61 = "SPORTS_INJURY_REPORT";
            goto LABEL_35;
          case 7:
            uint64_t v56 = 0xD000000000000013;
            long long v61 = "SPORTS_TEAM_LEADERS";
LABEL_35:
            unint64_t v59 = (unint64_t)(v61 - 32) | 0x8000000000000000;
            break;
          default:
            break;
        }
        v79[0] = sub_1BFDA76EC(v56, v59, (uint64_t *)v78);
        sub_1C151FE1C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BFC31000, v54, v55, "Sports data service could not create all data sources for embedType=%{public}s", v57, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v60, -1, -1);
        MEMORY[0x1C18C9B00](v57, -1, -1);

        swift_unknownObjectRelease();
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v71, v74);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        swift_unknownObjectRelease();
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v71, v30);
      }
      goto LABEL_17;
    }
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v16, v71, v30);
    uint64_t v44 = v68;
    if (*(void *)(v68 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v45 = sub_1BFEF2D8C(v43, v20);
      if (v46)
      {
        uint64_t v47 = *(void *)(*(void *)(v44 + 56) + 8 * v45);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_28:
        uint64_t v62 = swift_allocObject();
        v79[0] = v47;
        type metadata accessor for SportsLineScoreDataVisualization();
        memset(v78, 0, sizeof(v78));
        swift_allocObject();
        unint64_t v63 = SportsLineScoreDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(v37, v42, v28, (uint64_t)v16, v40, v79, (uint64_t *)v78);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v71, v30);
        *(void *)(v62 + 16) = v63;
        unint64_t v51 = v62 | 0x8000000000000000;
        goto LABEL_18;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v47 = 0;
    goto LABEL_28;
  }
  sub_1C0B70738((uint64_t)v12, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  id v31 = (id)qword_1EB93C5E8;
  sub_1C151F36C();
  sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1C1529AE0;
  *(void *)&v78[0] = 0;
  *((void *)&v78[0] + 1) = 0xE000000000000000;
  uint64_t v33 = v32;
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  long long v64 = v78[0];
  *(void *)(v33 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v33 + 64) = sub_1BFE9C558();
  *(_OWORD *)(v33 + 32) = v64;
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
LABEL_17:
  unint64_t v51 = 0xF000000000000007;
LABEL_18:
  *uint64_t v77 = v51;
  return result;
}

uint64_t sub_1C0B618AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, unint64_t *a6@<X8>)
{
  uint64_t v82 = a6;
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v74 - v12;
  uint64_t v14 = sub_1C1515FDC();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = *(void *)(a1 + 16);
  uint64_t v22 = *(void *)(a1 + 24);
  uint64_t v83 = *(unsigned __int8 *)(a1 + 56);
  if (!*(void *)(a4 + 16)) {
    goto LABEL_10;
  }
  uint64_t v80 = v20;
  uint64_t v81 = v18;
  uint64_t v79 = *(void *)a1;
  uint64_t v23 = *(void *)(a1 + 8);
  uint64_t v77 = (char *)&v74 - v19;
  uint64_t v78 = v23;
  uint64_t v24 = *(void *)(a1 + 40);
  uint64_t v25 = *(void *)(a1 + 48);
  uint64_t v76 = v24;
  swift_bridgeObjectRetain();
  unint64_t v26 = sub_1BFEF2D8C(v21, v22);
  if ((v27 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v38 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1C1527210;
    *(void *)&v84[0] = 0;
    *((void *)&v84[0] + 1) = 0xE000000000000000;
    uint64_t v40 = v39;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    long long v44 = v84[0];
    uint64_t v45 = MEMORY[0x1E4FBB1A0];
    *(void *)(v40 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v46 = sub_1BFE9C558();
    *(_OWORD *)(v40 + 32) = v44;
    *(void *)(v40 + 96) = v45;
    *(void *)(v40 + 104) = v46;
    *(void *)(v40 + 64) = v46;
    *(void *)(v40 + 72) = v21;
    *(void *)(v40 + 80) = v22;
    swift_bridgeObjectRetain();
    sub_1C15197BC();

    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v75 = v25;
  uint64_t v28 = *(void *)(*(void *)(a4 + 56) + 8 * v26);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(void *)(a5 + 16))
  {
LABEL_14:
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v41 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1C1527210;
    *(void *)&v84[0] = 0;
    *((void *)&v84[0] + 1) = 0xE000000000000000;
    uint64_t v43 = v42;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    long long v61 = v84[0];
    uint64_t v62 = MEMORY[0x1E4FBB1A0];
    *(void *)(v43 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v63 = sub_1BFE9C558();
    *(_OWORD *)(v43 + 32) = v61;
    *(void *)(v43 + 96) = v62;
    *(void *)(v43 + 104) = v63;
    *(void *)(v43 + 64) = v63;
    *(void *)(v43 + 72) = v21;
    *(void *)(v43 + 80) = v22;
    swift_bridgeObjectRetain();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  unint64_t v29 = sub_1BFEF2D8C(v21, v22);
  if ((v30 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v74 = v28;
  uint64_t v31 = *(void *)(*(void *)(a5 + 56) + 8 * v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  LOBYTE(v84[0]) = v83;
  uint64_t v32 = v78;
  sub_1C0B64050(v84, a3, (uint64_t)v13);
  uint64_t v34 = v80;
  uint64_t v33 = v81;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v13, 1, v81) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1C0B70738((uint64_t)v13, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v35 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C1529AE0;
    *(void *)&v84[0] = 0;
    *((void *)&v84[0] + 1) = 0xE000000000000000;
    uint64_t v37 = v36;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    long long v73 = v84[0];
    *(void *)(v37 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v37 + 64) = sub_1BFE9C558();
    *(_OWORD *)(v37 + 32) = v73;
    sub_1C15197BC();

    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t result = swift_unknownObjectRelease();
LABEL_22:
    unint64_t v60 = 0xF000000000000007;
    goto LABEL_23;
  }
  uint64_t v48 = (*(uint64_t (**)(char *, char *, uint64_t))(v34 + 32))(v77, v13, v33);
  MEMORY[0x1F4188790](v48);
  *(&v74 - 2) = a2;
  uint64_t v49 = v75;
  swift_bridgeObjectRetain();
  unint64_t v50 = sub_1C0284738((void (*)(uint64_t *__return_ptr, void *))sub_1C0B723DC, (uint64_t)(&v74 - 4), v49);
  swift_bridgeObjectRelease();
  if (v50 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v51 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v52 = v31;
  uint64_t v53 = v32;
  uint64_t v54 = v74;
  if (v51 != *(void *)(v75 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EB863FD0 != -1) {
      swift_once();
    }
    uint64_t v64 = sub_1C15198DC();
    __swift_project_value_buffer(v64, (uint64_t)qword_1EB863FB8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v65 = sub_1C15198AC();
    os_log_type_t v66 = sub_1C151F36C();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = 0x535F5354524F5053;
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      *(void *)&v84[0] = v69;
      *(_DWORD *)uint64_t v68 = 136446210;
      unint64_t v70 = 0xEC00000045524F43;
      uint64_t v71 = v69;
      switch(v83)
      {
        case 1:
          uint64_t v67 = 0xD000000000000015;
          uint64_t v72 = "SPORTS_SCORE_MASTHEAD";
          goto LABEL_36;
        case 2:
          unint64_t v70 = 0xEF474E49444E4154;
          break;
        case 3:
          uint64_t v67 = 0x425F5354524F5053;
          unint64_t v70 = 0xEE0054454B434152;
          break;
        case 4:
          unint64_t v70 = 0x80000001C16021E0;
          uint64_t v67 = 0xD000000000000010;
          break;
        case 5:
          uint64_t v67 = 0xD000000000000011;
          uint64_t v72 = "SPORTS_LINE_SCORE";
          goto LABEL_36;
        case 6:
          uint64_t v67 = 0xD000000000000014;
          uint64_t v72 = "SPORTS_INJURY_REPORT";
          goto LABEL_36;
        case 7:
          uint64_t v67 = 0xD000000000000013;
          uint64_t v72 = "SPORTS_TEAM_LEADERS";
LABEL_36:
          unint64_t v70 = (unint64_t)(v72 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      uint64_t v85 = sub_1BFDA76EC(v67, v70, (uint64_t *)v84);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BFC31000, v65, v66, "Sports data service could not create all data sources for embedType=%{public}s", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v71, -1, -1);
      MEMORY[0x1C18C9B00](v68, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    swift_unknownObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v77, v81);
    goto LABEL_22;
  }
  uint64_t v55 = swift_allocObject();
  uint64_t v57 = v80;
  uint64_t v56 = v81;
  uint64_t v58 = v77;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v16, v77, v81);
  uint64_t v85 = v52;
  type metadata accessor for SportsInjuryReportDataVisualization();
  memset(v84, 0, sizeof(v84));
  swift_allocObject();
  swift_bridgeObjectRetain();
  unint64_t v59 = SportsInjuryReportDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(v79, v53, v54, (uint64_t)v16, v50, &v85, (uint64_t *)v84);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v58, v56);
  *(void *)(v55 + 16) = v59;
  unint64_t v60 = v55 | 0xA000000000000000;
LABEL_23:
  *uint64_t v82 = v60;
  return result;
}

uint64_t sub_1C0B626AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v56 = a4;
  uint64_t v57 = a5;
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v52 - v9;
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v52 - v16;
  long long v18 = *(_OWORD *)(a1 + 16);
  v60[0] = *(_OWORD *)a1;
  v60[1] = v18;
  long long v61 = *(_OWORD *)(a1 + 32);
  uint64_t v19 = *(unsigned __int8 *)(a1 + 48);
  char v62 = v19;
  LOBYTE(v58[0]) = v19;
  uint64_t v20 = *((void *)&v60[0] + 1);
  uint64_t v55 = *(void *)&v60[0];
  sub_1C0B64050(v58, a3, (uint64_t)v10);
  uint64_t v21 = v11;
  uint64_t v22 = v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v21) == 1)
  {
    sub_1C0B70738((uint64_t)v10, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v23 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1C1529AE0;
    *(void *)&v58[0] = 0;
    *((void *)&v58[0] + 1) = 0xE000000000000000;
    uint64_t v25 = v24;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    long long v50 = v58[0];
    *(void *)(v25 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v25 + 64) = sub_1BFE9C558();
    *(_OWORD *)(v25 + 32) = v50;
    sub_1C15197BC();

    uint64_t result = swift_bridgeObjectRelease();
LABEL_23:
    uint64_t v39 = 0xF000000000000007;
    goto LABEL_24;
  }
  unint64_t v26 = *(uint64_t (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v54 = v17;
  uint64_t v53 = v21;
  uint64_t v27 = v26(v17, v10, v21);
  uint64_t v28 = *((void *)&v61 + 1);
  MEMORY[0x1F4188790](v27);
  *(&v52 - 2) = a2;
  swift_bridgeObjectRetain();
  unint64_t v29 = sub_1C0284738((void (*)(uint64_t *__return_ptr, void *))sub_1C0B723DC, (uint64_t)(&v52 - 4), v28);
  swift_bridgeObjectRelease();
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v30 != *(void *)(v28 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = v54;
    if (qword_1EB863FD0 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_1C15198DC();
    __swift_project_value_buffer(v41, (uint64_t)qword_1EB863FB8);
    sub_1C0B6E998((uint64_t)v60);
    sub_1C0B6E998((uint64_t)v60);
    uint64_t v42 = sub_1C15198AC();
    os_log_type_t v43 = sub_1C151F36C();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = 0x535F5354524F5053;
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(void *)&v58[0] = v46;
      *(_DWORD *)uint64_t v45 = 136446210;
      unint64_t v47 = 0xEC00000045524F43;
      uint64_t v48 = v46;
      switch(v19)
      {
        case 1:
          uint64_t v44 = 0xD000000000000015;
          uint64_t v49 = "SPORTS_SCORE_MASTHEAD";
          goto LABEL_21;
        case 2:
          unint64_t v47 = 0xEF474E49444E4154;
          break;
        case 3:
          uint64_t v44 = 0x425F5354524F5053;
          unint64_t v47 = 0xEE0054454B434152;
          break;
        case 4:
          unint64_t v47 = 0x80000001C16021E0;
          uint64_t v44 = 0xD000000000000010;
          break;
        case 5:
          uint64_t v44 = 0xD000000000000011;
          uint64_t v49 = "SPORTS_LINE_SCORE";
          goto LABEL_21;
        case 6:
          uint64_t v44 = 0xD000000000000014;
          uint64_t v49 = "SPORTS_INJURY_REPORT";
          goto LABEL_21;
        case 7:
          uint64_t v44 = 0xD000000000000013;
          uint64_t v49 = "SPORTS_TEAM_LEADERS";
LABEL_21:
          unint64_t v47 = (unint64_t)(v49 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      v63[0] = sub_1BFDA76EC(v44, v47, (uint64_t *)v58);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      sub_1C0B6E9EC((uint64_t)v60);
      sub_1C0B6E9EC((uint64_t)v60);
      _os_log_impl(&dword_1BFC31000, v42, v43, "Sports data service could not create all data sources for embedType=%{public}s", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v48, -1, -1);
      MEMORY[0x1C18C9B00](v45, -1, -1);

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v54, v53);
    }
    else
    {

      sub_1C0B6E9EC((uint64_t)v60);
      sub_1C0B6E9EC((uint64_t)v60);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v40, v53);
    }
    goto LABEL_23;
  }
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v61;
  v63[0] = v61;
  uint64_t v33 = v56;
  swift_bridgeObjectRetain();
  sub_1BFFAF7A4((uint64_t)v63);
  uint64_t v34 = sub_1C0B6CC64(v32, v33);
  swift_bridgeObjectRelease();
  sub_1BFCA59C8((uint64_t)v63);
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1C0B64E54((uint64_t)v60, v33);
  uint64_t v36 = v54;
  uint64_t v37 = v53;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v54, v53);
  uint64_t v59 = 1;
  type metadata accessor for SportsStandingDataVisualization();
  memset(v58, 0, sizeof(v58));
  swift_allocObject();
  id v38 = SportsStandingDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:embedUrl:urlDataSources:metadata:config:)(v34, v55, v20, v35, (uint64_t)v14, v29, &v59, (uint64_t *)v58);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v36, v37);
  *(void *)(v31 + 16) = v38;
  uint64_t v39 = v31 | 0x2000000000000000;
LABEL_24:
  uint64_t *v57 = v39;
  return result;
}

uint64_t sub_1C0B62F6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, unint64_t *a6@<X8>)
{
  uint64_t v82 = a6;
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v74 - v12;
  uint64_t v14 = sub_1C1515FDC();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = *(void *)(a1 + 16);
  uint64_t v22 = *(void *)(a1 + 24);
  uint64_t v83 = *(unsigned __int8 *)(a1 + 56);
  if (!*(void *)(a4 + 16)) {
    goto LABEL_10;
  }
  uint64_t v80 = v20;
  uint64_t v81 = v18;
  uint64_t v79 = *(void *)a1;
  uint64_t v23 = *(void *)(a1 + 8);
  uint64_t v77 = (char *)&v74 - v19;
  uint64_t v78 = v23;
  uint64_t v24 = *(void *)(a1 + 40);
  uint64_t v25 = *(void *)(a1 + 48);
  uint64_t v76 = v24;
  swift_bridgeObjectRetain();
  unint64_t v26 = sub_1BFEF2D8C(v21, v22);
  if ((v27 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v38 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1C1527210;
    *(void *)&v84[0] = 0;
    *((void *)&v84[0] + 1) = 0xE000000000000000;
    uint64_t v40 = v39;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    long long v44 = v84[0];
    uint64_t v45 = MEMORY[0x1E4FBB1A0];
    *(void *)(v40 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v46 = sub_1BFE9C558();
    *(_OWORD *)(v40 + 32) = v44;
    *(void *)(v40 + 96) = v45;
    *(void *)(v40 + 104) = v46;
    *(void *)(v40 + 64) = v46;
    *(void *)(v40 + 72) = v21;
    *(void *)(v40 + 80) = v22;
    swift_bridgeObjectRetain();
    sub_1C15197BC();

    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v75 = v25;
  uint64_t v28 = *(void *)(*(void *)(a4 + 56) + 8 * v26);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(void *)(a5 + 16))
  {
LABEL_14:
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v41 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1C1527210;
    *(void *)&v84[0] = 0;
    *((void *)&v84[0] + 1) = 0xE000000000000000;
    uint64_t v43 = v42;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    long long v61 = v84[0];
    uint64_t v62 = MEMORY[0x1E4FBB1A0];
    *(void *)(v43 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v63 = sub_1BFE9C558();
    *(_OWORD *)(v43 + 32) = v61;
    *(void *)(v43 + 96) = v62;
    *(void *)(v43 + 104) = v63;
    *(void *)(v43 + 64) = v63;
    *(void *)(v43 + 72) = v21;
    *(void *)(v43 + 80) = v22;
    swift_bridgeObjectRetain();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  unint64_t v29 = sub_1BFEF2D8C(v21, v22);
  if ((v30 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v74 = v28;
  uint64_t v31 = *(void *)(*(void *)(a5 + 56) + 8 * v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  LOBYTE(v84[0]) = v83;
  uint64_t v32 = v78;
  sub_1C0B64050(v84, a3, (uint64_t)v13);
  uint64_t v34 = v80;
  uint64_t v33 = v81;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v13, 1, v81) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1C0B70738((uint64_t)v13, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v35 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C1529AE0;
    *(void *)&v84[0] = 0;
    *((void *)&v84[0] + 1) = 0xE000000000000000;
    uint64_t v37 = v36;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    long long v73 = v84[0];
    *(void *)(v37 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v37 + 64) = sub_1BFE9C558();
    *(_OWORD *)(v37 + 32) = v73;
    sub_1C15197BC();

    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t result = swift_unknownObjectRelease();
LABEL_22:
    unint64_t v60 = 0xF000000000000007;
    goto LABEL_23;
  }
  uint64_t v48 = (*(uint64_t (**)(char *, char *, uint64_t))(v34 + 32))(v77, v13, v33);
  MEMORY[0x1F4188790](v48);
  *(&v74 - 2) = a2;
  uint64_t v49 = v75;
  swift_bridgeObjectRetain();
  unint64_t v50 = sub_1C0284738((void (*)(uint64_t *__return_ptr, void *))sub_1C0B723DC, (uint64_t)(&v74 - 4), v49);
  swift_bridgeObjectRelease();
  if (v50 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v51 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v52 = v31;
  uint64_t v53 = v32;
  uint64_t v54 = v74;
  if (v51 != *(void *)(v75 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EB863FD0 != -1) {
      swift_once();
    }
    uint64_t v64 = sub_1C15198DC();
    __swift_project_value_buffer(v64, (uint64_t)qword_1EB863FB8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v65 = sub_1C15198AC();
    os_log_type_t v66 = sub_1C151F36C();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = 0x535F5354524F5053;
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      *(void *)&v84[0] = v69;
      *(_DWORD *)uint64_t v68 = 136446210;
      unint64_t v70 = 0xEC00000045524F43;
      uint64_t v71 = v69;
      switch(v83)
      {
        case 1:
          uint64_t v67 = 0xD000000000000015;
          uint64_t v72 = "SPORTS_SCORE_MASTHEAD";
          goto LABEL_36;
        case 2:
          unint64_t v70 = 0xEF474E49444E4154;
          break;
        case 3:
          uint64_t v67 = 0x425F5354524F5053;
          unint64_t v70 = 0xEE0054454B434152;
          break;
        case 4:
          unint64_t v70 = 0x80000001C16021E0;
          uint64_t v67 = 0xD000000000000010;
          break;
        case 5:
          uint64_t v67 = 0xD000000000000011;
          uint64_t v72 = "SPORTS_LINE_SCORE";
          goto LABEL_36;
        case 6:
          uint64_t v67 = 0xD000000000000014;
          uint64_t v72 = "SPORTS_INJURY_REPORT";
          goto LABEL_36;
        case 7:
          uint64_t v67 = 0xD000000000000013;
          uint64_t v72 = "SPORTS_TEAM_LEADERS";
LABEL_36:
          unint64_t v70 = (unint64_t)(v72 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      uint64_t v85 = sub_1BFDA76EC(v67, v70, (uint64_t *)v84);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BFC31000, v65, v66, "Sports data service could not create all data sources for embedType=%{public}s", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v71, -1, -1);
      MEMORY[0x1C18C9B00](v68, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    swift_unknownObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v77, v81);
    goto LABEL_22;
  }
  uint64_t v55 = swift_allocObject();
  uint64_t v57 = v80;
  uint64_t v56 = v81;
  uint64_t v58 = v77;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v16, v77, v81);
  uint64_t v85 = v52;
  type metadata accessor for SportsKeyPlayerDataVisualization();
  memset(v84, 0, sizeof(v84));
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v59 = SportsKeyPlayerDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(v79, v53, v54, (uint64_t)v16, v50, &v85, (uint64_t *)v84);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v58, v56);
  *(void *)(v55 + 16) = v59;
  unint64_t v60 = v55 | 0xC000000000000000;
LABEL_23:
  *uint64_t v82 = v60;
  return result;
}

uint64_t sub_1C0B63D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v31 = a7;
  uint64_t v32 = a1;
  uint64_t v33 = a8;
  sub_1C0B6DDBC(0, (unint64_t *)&unk_1EB863ED8, (uint64_t (*)(uint64_t))sub_1C00FD9D4, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v30 - v15;
  sub_1C00FD9D4();
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  char v30 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v30 - v22;
  uint64_t v35 = v8;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  uint64_t v40 = a6;
  uint64_t v41 = v31;
  uint64_t v42 = sub_1C0284514((void (*)(uint64_t *__return_ptr, void *))sub_1C0B6E1E4, (uint64_t)v34, v32);
  sub_1C00FDA38();
  sub_1C001A5E0((unint64_t *)&qword_1EB8900C0, (void (*)(uint64_t))sub_1C00FDA38);
  sub_1C15193CC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
  {
    uint64_t result = sub_1C0B70738((uint64_t)v16, (unint64_t *)&unk_1EB863ED8, (uint64_t (*)(uint64_t))sub_1C00FD9D4);
    uint64_t v25 = 0xF000000000000007;
  }
  else
  {
    unint64_t v26 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v26(v23, v16, v18);
    uint64_t v27 = swift_allocObject();
    uint64_t v28 = v30;
    v26(v30, v23, v18);
    type metadata accessor for SportsBracketGroupDataVisualization();
    uint64_t v29 = swift_allocObject();
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v26)(v29 + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations, v28, v18);
    *(void *)(v27 + 16) = v29;
    uint64_t v25 = v27 | 0x4000000000000000;
  }
  *uint64_t v33 = v25;
  return result;
}

uint64_t sub_1C0B64050@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - v7;
  LOBYTE(v18) = *a1;
  sub_1C0B66A28(&v18, a2, (uint64_t)&v18 - v7);
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C0B70738((uint64_t)v8, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v11 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C1529AE0;
    uint64_t v18 = 0;
    unint64_t v19 = 0xE000000000000000;
    uint64_t v13 = (void *)v12;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v14 = v18;
    unint64_t v15 = v19;
    v13[7] = MEMORY[0x1E4FBB1A0];
    v13[8] = sub_1BFE9C558();
    v13[4] = v14;
    v13[5] = v15;
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    uint64_t v16 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v8, v9);
    uint64_t v16 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v16, 1, v9);
}

uint64_t sub_1C0B64418(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = a1[3];
  if (!v3)
  {
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v10 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
    uint64_t v13 = *a1;
    uint64_t v12 = a1[1];
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 64) = sub_1BFE9C558();
    *(void *)(v11 + 32) = v13;
    *(void *)(v11 + 40) = v12;
    swift_bridgeObjectRetain();
    sub_1C15197BC();

    goto LABEL_12;
  }
  uint64_t v5 = a1[2];
  uint64_t v6 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (!v6)
  {
LABEL_9:
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v14 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C1527210;
    uint64_t v17 = *a1;
    uint64_t v16 = a1[1];
    uint64_t v18 = MEMORY[0x1E4FBB1A0];
    *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v19 = sub_1BFE9C558();
    *(void *)(v15 + 32) = v17;
    *(void *)(v15 + 40) = v16;
    *(void *)(v15 + 96) = v18;
    *(void *)(v15 + 104) = v19;
    *(void *)(v15 + 64) = v19;
    *(void *)(v15 + 72) = v5;
    *(void *)(v15 + 80) = v3;
    swift_bridgeObjectRetain();
    sub_1C15197BC();

LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_1BFEF2D8C(v5, v3);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v9 = *(void *)(*(void *)(a2 + 56) + 8 * v7);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease_n();
  return v9;
}

id sub_1C0B646A0(uint64_t *a1, uint64_t a2, void *a3)
{
  if (!a3)
  {
    uint64_t v18 = a1[5];
    if (v18)
    {
      uint64_t v20 = a1[4];
      uint64_t v21 = qword_1EB86AE58;
      swift_bridgeObjectRetain();
      if (v21 != -1) {
        swift_once();
      }
      id v22 = (id)qword_1EB93C5E8;
      sub_1C151F36C();
      sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1C1527210;
      uint64_t v24 = MEMORY[0x1E4FBB1A0];
      *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v25 = sub_1BFE9C558();
      *(void *)(v23 + 32) = v20;
      *(void *)(v23 + 40) = v18;
      uint64_t v26 = *a1;
      uint64_t v27 = a1[1];
      *(void *)(v23 + 96) = v24;
      *(void *)(v23 + 104) = v25;
      *(void *)(v23 + 64) = v25;
      *(void *)(v23 + 72) = v26;
      *(void *)(v23 + 80) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      if (*(void *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v28 = sub_1BFEF2D8C(v20, v18);
        if (v29)
        {
          id v17 = *(id *)(*(void *)(a2 + 56) + 8 * v28);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease_n();
          return v17;
        }
        swift_bridgeObjectRelease();
      }
      id v30 = (id)qword_1EB93C5E8;
      sub_1C151F36C();
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1C1527210;
      uint64_t v32 = MEMORY[0x1E4FBB1A0];
      *(void *)(v31 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v31 + 64) = v25;
      *(void *)(v31 + 32) = v20;
      *(void *)(v31 + 40) = v18;
      *(void *)(v31 + 96) = v32;
      *(void *)(v31 + 104) = v25;
      *(void *)(v31 + 72) = v26;
      *(void *)(v31 + 80) = v27;
      swift_bridgeObjectRetain();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
    }
    return 0;
  }
  uint64_t v5 = qword_1EB86AE58;
  swift_unknownObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_1EB93C5E8;
  sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1527210;
  id v8 = v6;
  id v9 = objc_msgSend(a3, sel_identifier);
  uint64_t v10 = sub_1C151E62C();
  uint64_t v12 = v11;

  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v14 = sub_1BFE9C558();
  *(void *)(v7 + 32) = v10;
  *(void *)(v7 + 40) = v12;
  uint64_t v16 = *a1;
  uint64_t v15 = a1[1];
  *(void *)(v7 + 96) = v13;
  *(void *)(v7 + 104) = v14;
  *(void *)(v7 + 64) = v14;
  *(void *)(v7 + 72) = v16;
  *(void *)(v7 + 80) = v15;
  swift_bridgeObjectRetain();
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(a3, sel_eventLeagueTag);
  swift_unknownObjectRelease();
  return v17;
}

unint64_t sub_1C0B64A48(int a1, uint64_t a2, id a3)
{
  if (a3 && (id v4 = objc_msgSend(a3, sel_eventCompetitorTags)) != 0)
  {
    uint64_t v5 = v4;
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB86B430);
    unint64_t v6 = sub_1C151EBCC();
  }
  else
  {
    unint64_t v6 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C0B6CC64(v7, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v6 >> 62))
  {
    uint64_t v9 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!(v8 >> 62)) {
      goto LABEL_7;
    }
LABEL_12:
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v9 < v25) {
      goto LABEL_8;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (v8 >> 62) {
    goto LABEL_12;
  }
LABEL_7:
  if (v9 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_8:
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v10 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C152C7F0;
    uint64_t v12 = sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB86B430);
    uint64_t v13 = MEMORY[0x1C18C6710](v8, v12);
    uint64_t v15 = v14;
    uint64_t v16 = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v17 = sub_1BFE9C558();
    *(void *)(v11 + 64) = v17;
    *(void *)(v11 + 32) = v13;
    *(void *)(v11 + 40) = v15;
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = MEMORY[0x1C18C6710](v18, v16);
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    *(void *)(v11 + 96) = v16;
    *(void *)(v11 + 104) = v17;
    *(void *)(v11 + 72) = v19;
    *(void *)(v11 + 80) = v21;
    uint64_t v22 = MEMORY[0x1C18C6710](v6, v12);
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    *(void *)(v11 + 136) = v16;
    *(void *)(v11 + 144) = v17;
    *(void *)(v11 + 112) = v22;
    *(void *)(v11 + 120) = v24;
    sub_1C15197BC();
    unint64_t v6 = v8;
    goto LABEL_16;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  uint64_t v26 = (void *)qword_1EB93C5E8;
  sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C1527210;
  uint64_t v28 = sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB86B430);
  id v10 = v26;
  uint64_t v29 = MEMORY[0x1C18C6710](v6, v28);
  uint64_t v31 = v30;
  uint64_t v32 = MEMORY[0x1E4FBB1A0];
  *(void *)(v27 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v33 = sub_1BFE9C558();
  *(void *)(v27 + 64) = v33;
  *(void *)(v27 + 32) = v29;
  *(void *)(v27 + 40) = v31;
  uint64_t v34 = swift_bridgeObjectRetain();
  uint64_t v35 = MEMORY[0x1C18C6710](v34, v32);
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  *(void *)(v27 + 96) = v32;
  *(void *)(v27 + 104) = v33;
  *(void *)(v27 + 72) = v35;
  *(void *)(v27 + 80) = v37;
  sub_1C151F38C();
  sub_1C15197BC();
LABEL_16:

  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C0B64E54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2 || !*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1BFEF2D8C(v4, v2);
  if (v6)
  {
    uint64_t v7 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

void *sub_1C0B64ED4@<X0>(uint64_t a1@<X0>, char *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, char *a7@<X7>, void *a8@<X8>)
{
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 64);
  char v11 = *(unsigned char *)(a1 + 72);
  *(void *)&v14[0] = *(void *)a1;
  *((void *)&v14[0] + 1) = v9;
  long long v12 = *(_OWORD *)(a1 + 32);
  v14[1] = *(_OWORD *)(a1 + 16);
  v14[2] = v12;
  v14[3] = *(_OWORD *)(a1 + 48);
  uint64_t v15 = v10;
  char v16 = v11;
  uint64_t result = sub_1C0B64F5C(v14, a2, a3, a4, a5, a6, a7);
  *a8 = result;
  return result;
}

void *sub_1C0B64F5C(_OWORD *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  uint64_t v64 = a7;
  uint64_t v65 = a6;
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v59 - v13;
  uint64_t v15 = sub_1C1515FDC();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v63 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v59 - v19;
  *(_OWORD *)&v70[9] = *(_OWORD *)((char *)a1 + 57);
  long long v21 = a1[1];
  v69[0] = *a1;
  v69[1] = v21;
  long long v22 = a1[3];
  v69[2] = a1[2];
  *(_OWORD *)unint64_t v70 = v22;
  uint64_t v66 = v70[24];
  LOBYTE(v67[0]) = v70[24];
  uint64_t v23 = *((void *)&v69[0] + 1);
  uint64_t v62 = *(void *)&v69[0];
  sub_1C0B64050(v67, a3, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1C0B70738((uint64_t)v14, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v24 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1C1529AE0;
    *(void *)&v67[0] = 0;
    *((void *)&v67[0] + 1) = 0xE000000000000000;
    uint64_t v26 = v25;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    long long v55 = v67[0];
    *(void *)(v26 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v26 + 64) = sub_1BFE9C558();
    *(_OWORD *)(v26 + 32) = v55;
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v60 = v16;
  uint64_t v27 = *(uint64_t (**)(char *, char *, uint64_t))(v16 + 32);
  uint64_t v59 = v20;
  uint64_t v61 = v15;
  uint64_t v28 = v27(v20, v14, v15);
  uint64_t v29 = *(void *)&v70[16];
  uint64_t v71 = *(void *)&v70[16];
  MEMORY[0x1F4188790](v28);
  *(&v59 - 8) = v7;
  *(&v59 - 7) = (char *)a3;
  *(&v59 - 6) = (char *)v69;
  *(&v59 - 5) = v64;
  *(&v59 - 4) = (char *)a5;
  uint64_t v30 = a5;
  *(&v59 - 3) = a2;
  uint64_t v58 = v65;
  sub_1BFFAF7A4((uint64_t)&v71);
  uint64_t v31 = sub_1C02848BC((void *(*)(uint64_t *__return_ptr, uint64_t))sub_1C0B6E244, (uint64_t)(&v59 - 10), v29);
  uint64_t v32 = sub_1BFCA59C8((uint64_t)&v71);
  uint64_t v33 = *(void *)&v70[8];
  MEMORY[0x1F4188790](v32);
  uint64_t v57 = a2;
  swift_bridgeObjectRetain();
  unint64_t v34 = sub_1C0284738((void (*)(uint64_t *__return_ptr, void *))sub_1C0B723DC, (uint64_t)(&v59 - 4), v33);
  swift_bridgeObjectRelease();
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v36 = v61;
  uint64_t v37 = v60;
  uint64_t v38 = v59;
  if (v35 != *(void *)(v33 + 16))
  {
    uint64_t v45 = v59;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EB863FD0 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_1C15198DC();
    __swift_project_value_buffer(v46, (uint64_t)qword_1EB863FB8);
    sub_1C0B6E278((uint64_t)v69);
    sub_1C0B6E278((uint64_t)v69);
    unint64_t v47 = sub_1C15198AC();
    os_log_type_t v48 = sub_1C151F36C();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = 0x535F5354524F5053;
      unint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      *(void *)&v67[0] = v51;
      *(_DWORD *)unint64_t v50 = 136446210;
      unint64_t v52 = 0xEC00000045524F43;
      uint64_t v53 = v51;
      switch(v66)
      {
        case 1:
          uint64_t v49 = 0xD000000000000015;
          uint64_t v54 = "SPORTS_SCORE_MASTHEAD";
          goto LABEL_22;
        case 2:
          unint64_t v52 = 0xEF474E49444E4154;
          break;
        case 3:
          uint64_t v49 = 0x425F5354524F5053;
          unint64_t v52 = 0xEE0054454B434152;
          break;
        case 4:
          unint64_t v52 = 0x80000001C16021E0;
          uint64_t v49 = 0xD000000000000010;
          break;
        case 5:
          uint64_t v49 = 0xD000000000000011;
          uint64_t v54 = "SPORTS_LINE_SCORE";
          goto LABEL_22;
        case 6:
          uint64_t v49 = 0xD000000000000014;
          uint64_t v54 = "SPORTS_INJURY_REPORT";
          goto LABEL_22;
        case 7:
          uint64_t v49 = 0xD000000000000013;
          uint64_t v54 = "SPORTS_TEAM_LEADERS";
LABEL_22:
          unint64_t v52 = (unint64_t)(v54 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      v72[0] = sub_1BFDA76EC(v49, v52, (uint64_t *)v67);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      sub_1C08844F8((uint64_t)v69);
      sub_1C08844F8((uint64_t)v69);
      _os_log_impl(&dword_1BFC31000, v47, v48, "Sports data service could not create all data sources for embedType=%{public}s", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v53, -1, -1);
      MEMORY[0x1C18C9B00](v50, -1, -1);

      (*(void (**)(char *, uint64_t))(v60 + 8))(v45, v61);
    }
    else
    {

      sub_1C08844F8((uint64_t)v69);
      sub_1C08844F8((uint64_t)v69);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v45, v36);
    }
    return 0;
  }
  uint64_t v39 = *(void *)v70;
  v72[0] = *(void *)v70;
  swift_bridgeObjectRetain();
  sub_1BFFAF7A4((uint64_t)v72);
  uint64_t v40 = sub_1C0B6CC64(v39, v30);
  swift_bridgeObjectRelease();
  sub_1BFCA59C8((uint64_t)v72);
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_1C0B64E54((uint64_t)v69, v30);
  uint64_t v42 = sub_1C0B669A8((uint64_t)v69, v30);
  uint64_t v43 = (uint64_t)v63;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v63, v38, v36);
  uint64_t v68 = 1;
  type metadata accessor for SportsBracketDataVisualization();
  memset(v67, 0, sizeof(v67));
  swift_allocObject();
  long long v44 = SportsBracketDataVisualization.init(competitorTags:umcCanonicalId:leagueTag:championshipTag:embedUrl:urlDataSources:events:metadata:config:)(v40, v62, v23, v41, v42, v43, v34, v31, &v68, (uint64_t *)v67);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v36);
  return v44;
}

uint64_t sub_1C0B65914@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>, uint64_t a9)
{
  uint64_t v116 = a8;
  uint64_t v106 = a7;
  uint64_t v111 = a4;
  uint64_t v112 = a6;
  uint64_t v113 = a3;
  uint64_t v12 = type metadata accessor for SportsDataVisualizationResponseMetadata();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v100 = (uint64_t)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1F4188790](v14);
  unint64_t v114 = (unint64_t)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v109 = (uint64_t)&v97 - v17;
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0B6DDBC(0, qword_1EB869120, (uint64_t (*)(uint64_t))type metadata accessor for SportsEventStatusResponseEmbed, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v101 = (uint64_t)&v97 - v20;
  sub_1C0B6DDBC(0, &qword_1EB86ABB8, type metadata accessor for SportsDataVisualizationResponseEventStatus, v18);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v104 = (char *)&v97 - v22;
  uint64_t v103 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  uint64_t v107 = (uint64_t)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v105 = (char *)&v97 - v25;
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], v18);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v97 - v27;
  uint64_t v29 = sub_1C1515FDC();
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v108 = (char *)&v97 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  unint64_t v34 = (char *)&v97 - v33;
  uint64_t v110 = v14;
  LOBYTE(v117[0]) = *((unsigned char *)a1 + *(int *)(v14 + 40));
  sub_1C0B64050(v117, a2, (uint64_t)v28);
  uint64_t v35 = v29;
  uint64_t v36 = v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v35) == 1)
  {
    sub_1C0B70738((uint64_t)v28, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    if (qword_1EB86AE58 != -1) {
      swift_once();
    }
    id v37 = (id)qword_1EB93C5E8;
    sub_1C151F36C();
    sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1C1529AE0;
    *(void *)&v117[0] = 0;
    *((void *)&v117[0] + 1) = 0xE000000000000000;
    uint64_t v39 = v38;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    long long v93 = v117[0];
    *(void *)(v39 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v39 + 64) = sub_1BFE9C558();
    *(_OWORD *)(v39 + 32) = v93;
    sub_1C15197BC();

    uint64_t result = swift_bridgeObjectRelease();
LABEL_34:
    uint64_t v92 = 0;
    goto LABEL_35;
  }
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  uint64_t v113 = v35;
  v40(v34, v28, v35);
  uint64_t v41 = (void *)sub_1C0B64418(a1, v111);
  id v99 = sub_1C0B646A0(a1, a5, v41);
  uint64_t v111 = (uint64_t)v41;
  unint64_t v42 = sub_1C0B64A48((int)a1, a5, v41);
  uint64_t v43 = a1[7];
  MEMORY[0x1F4188790](v42);
  uint64_t v96 = v112;
  swift_bridgeObjectRetain();
  unint64_t v44 = sub_1C0284738((void (*)(uint64_t *__return_ptr, void *))sub_1C0B723DC, (uint64_t)v95, v43);
  swift_bridgeObjectRelease();
  uint64_t v45 = v44;
  unint64_t v46 = v44 >> 62;
  unint64_t v47 = v34;
  if (v46)
  {
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v48 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v49 = v114;
  if (v48 != *(void *)(a1[7] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EB863FD0 != -1) {
      swift_once();
    }
    uint64_t v62 = sub_1C15198DC();
    __swift_project_value_buffer(v62, (uint64_t)qword_1EB863FB8);
    sub_1C0B6FCA8((uint64_t)a1, v49, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    unint64_t v63 = sub_1C15198AC();
    os_log_type_t v64 = sub_1C151F36C();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v115 = v47;
      uint64_t v65 = v36;
      uint64_t v66 = 0x535F5354524F5053;
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      *(void *)&v117[0] = v68;
      *(_DWORD *)uint64_t v67 = 136446210;
      uint64_t v69 = *(unsigned __int8 *)(v49 + *(int *)(v110 + 40));
      unint64_t v70 = 0xEC00000045524F43;
      uint64_t v71 = v68;
      switch(v69)
      {
        case 1:
          uint64_t v66 = 0xD000000000000015;
          uint64_t v72 = "SPORTS_SCORE_MASTHEAD";
          goto LABEL_32;
        case 2:
          unint64_t v70 = 0xEF474E49444E4154;
          break;
        case 3:
          uint64_t v66 = 0x425F5354524F5053;
          unint64_t v70 = 0xEE0054454B434152;
          break;
        case 4:
          unint64_t v70 = 0x80000001C16021E0;
          uint64_t v66 = 0xD000000000000010;
          break;
        case 5:
          uint64_t v66 = 0xD000000000000011;
          uint64_t v72 = "SPORTS_LINE_SCORE";
          goto LABEL_32;
        case 6:
          uint64_t v66 = 0xD000000000000014;
          uint64_t v72 = "SPORTS_INJURY_REPORT";
          goto LABEL_32;
        case 7:
          uint64_t v66 = 0xD000000000000013;
          uint64_t v72 = "SPORTS_TEAM_LEADERS";
LABEL_32:
          unint64_t v70 = (unint64_t)(v72 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      uint64_t v118 = sub_1BFDA76EC(v66, v70, (uint64_t *)v117);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      sub_1C0B6F9C4(v114, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      _os_log_impl(&dword_1BFC31000, v63, v64, "Sports data service could not create all data sources for embedType=%{public}s", v67, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v71, -1, -1);
      MEMORY[0x1C18C9B00](v67, -1, -1);

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v115, v113);
    }
    else
    {

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_1C0B6F9C4(v49, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v47, v113);
    }
    goto LABEL_34;
  }
  uint64_t v112 = v45;
  uint64_t v98 = a9;
  uint64_t v50 = v106;
  uint64_t v51 = *(void *)(v106 + 16);
  unint64_t v114 = v42;
  if (v51)
  {
    uint64_t v115 = v34;
    uint64_t v53 = *a1;
    uint64_t v52 = a1[1];
    swift_bridgeObjectRetain();
    unint64_t v54 = sub_1BFEF2D8C(v53, v52);
    if (v55)
    {
      unint64_t v56 = v54;
      uint64_t v57 = *(void *)(v50 + 56);
      uint64_t v58 = type metadata accessor for SportsEventStatusResponseEmbed();
      uint64_t v59 = *(void *)(v58 - 8);
      uint64_t v60 = v57 + *(void *)(v59 + 72) * v56;
      uint64_t v61 = v101;
      sub_1C0B6FCA8(v60, v101, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponseEmbed);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v61, 0, 1, v58);
    }
    else
    {
      uint64_t v58 = type metadata accessor for SportsEventStatusResponseEmbed();
      uint64_t v61 = v101;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v101, 1, 1, v58);
    }
    uint64_t v74 = (uint64_t)v104;
    swift_bridgeObjectRelease();
    type metadata accessor for SportsEventStatusResponseEmbed();
    int v75 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 48))(v61, 1, v58);
    unint64_t v47 = v115;
    if (v75 != 1)
    {
      sub_1C0B6FCA8(v61 + *(int *)(v58 + 20), v74, type metadata accessor for SportsDataVisualizationResponseEventStatus);
      sub_1C0B6F9C4(v61, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponseEmbed);
      uint64_t v76 = 0;
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v73 = type metadata accessor for SportsEventStatusResponseEmbed();
    uint64_t v61 = v101;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v101, 1, 1, v73);
    uint64_t v74 = (uint64_t)v104;
  }
  sub_1C0B70738(v61, qword_1EB869120, (uint64_t (*)(uint64_t))type metadata accessor for SportsEventStatusResponseEmbed);
  uint64_t v76 = 1;
LABEL_22:
  uint64_t v77 = (uint64_t)v105;
  uint64_t v78 = v103;
  uint64_t v79 = v102;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56))(v74, v76, 1, v103);
  uint64_t v80 = v109;
  sub_1C0B6FCA8((uint64_t)a1, v109, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v74, 1, v78) == 1)
  {
    uint64_t v81 = v80 + *(int *)(v110 + 36);
    uint64_t v82 = v80;
    uint64_t v83 = v100;
    sub_1C0B6FCA8(v81, v100, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseMetadata);
    sub_1C0B6F9C4(v82, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    sub_1C0B70244(v83, v77, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    sub_1C0B70738(v74, &qword_1EB86ABB8, type metadata accessor for SportsDataVisualizationResponseEventStatus);
  }
  else
  {
    sub_1C0B6F9C4(v80, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    sub_1C0B70244(v74, v77, type metadata accessor for SportsDataVisualizationResponseEventStatus);
  }
  uint64_t v84 = v77;
  uint64_t v85 = *a1;
  uint64_t v86 = a1[1];
  uint64_t v87 = (uint64_t)v108;
  unint64_t v88 = v47;
  uint64_t v89 = v47;
  uint64_t v90 = v113;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v108, v88, v113);
  uint64_t v91 = v107;
  sub_1C0B6FCA8(v84, v107, type metadata accessor for SportsDataVisualizationResponseEventStatus);
  sub_1C11FA080(v91, (unint64_t *)&v118);
  swift_bridgeObjectRetain_n();
  LOBYTE(v91) = sub_1BFF896B4(v85, v86, v98);
  swift_bridgeObjectRelease();
  type metadata accessor for SportsScoreDataVisualization();
  memset(v117, 0, 48);
  swift_allocObject();
  uint64_t v92 = SportsScoreDataVisualization.init(competitorTags:leagueTag:umcCanonicalId:event:embedUrl:urlDataSources:eventStatus:isFeatured:metadata:debugData:config:)(v114, (uint64_t)v99, v85, v86, v111, v87, v112, &v118, v91 & 1, 0, 0, (uint64_t *)v117);
  sub_1C0B6F9C4(v84, type metadata accessor for SportsDataVisualizationResponseEventStatus);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v89, v90);
LABEL_35:
  *uint64_t v116 = v92;
  return result;
}

uint64_t sub_1C0B66888@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1C1515FDC();
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = a1[1];
  long long v12 = *a1;
  long long v13 = v9;
  long long v14 = a1[2];
  (*(void (**)(char *, uint64_t))(v10 + 16))(v8, a2);
  long long v15 = v12;
  long long v16 = v13;
  long long v17 = v14;
  sub_1BFF59A8C((uint64_t)&v15);
  sub_1BFF59A8C((uint64_t)&v16);
  sub_1BFF59A8C((uint64_t)&v17);
  uint64_t result = sub_1C0DA9010(&v12, (uint64_t)v8);
  *a3 = result;
  return result;
}

uint64_t sub_1C0B669A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (!v2 || !*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1BFEF2D8C(v4, v2);
  if (v6)
  {
    uint64_t v7 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C0B66A28@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  switch(*a1)
  {
    case 1:
      unsigned __int8 v5 = 1;
      uint64_t result = sub_1C0B67DB8(&v5, a2, a3);
      break;
    case 2:
      unsigned __int8 v6 = 2;
      uint64_t result = sub_1C0B68370(&v6, a2, a3);
      break;
    case 3:
      unsigned __int8 v7 = 3;
      uint64_t result = sub_1C0B68928(&v7, a2, a3);
      break;
    case 4:
      unsigned __int8 v8 = 4;
      uint64_t result = sub_1C0B68EE0(&v8, a2, a3);
      break;
    case 5:
      unsigned __int8 v9 = 5;
      uint64_t result = sub_1C0B69498(&v9, a2, a3);
      break;
    case 6:
      unsigned __int8 v10 = 6;
      uint64_t result = sub_1C0B69A50(&v10, a2, a3);
      break;
    case 7:
      unsigned __int8 v11 = 7;
      uint64_t result = sub_1C0B6A008(&v11, a2, a3);
      break;
    default:
      unsigned __int8 v4 = 0;
      uint64_t result = sub_1C0B67800(&v4, a2, a3);
      break;
  }
  return result;
}

uint64_t sub_1C0B66B24(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  v3[2] = a1;
  v3[3] = a3;
  type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *a2;
  v3[4] = v5;
  v3[5] = v6;
  return MEMORY[0x1F4188298](sub_1C0B66BBC, 0, 0);
}

uint64_t sub_1C0B66BBC()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0[3] + 16), *(void *)(v0[3] + 40));
  uint64_t v1 = swift_bridgeObjectRetain();
  v0[6] = sub_1C0252C88(v1);
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[7] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C0B66CD8;
  uint64_t v3 = v0[4];
  return MEMORY[0x1F415EBC8](v3);
}

uint64_t sub_1C0B66CD8()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0B67064;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C0B66DF4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0B66DF4()
{
  uint64_t v1 = v0[4];
  __swift_project_boxed_opaque_existential_1((void *)(v0[3] + 56), *(void *)(v0[3] + 80));
  v0[9] = sub_1C0B495A0(v1);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C0B66EB0;
  uint64_t v3 = v0[2];
  return MEMORY[0x1F415EBC8](v3);
}

uint64_t sub_1C0B66EB0()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1C0B670D0;
  }
  else {
    uint64_t v2 = sub_1C0B66FE0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0B66FE0()
{
  sub_1C0B6F9C4(*(void *)(v0 + 32), type metadata accessor for SportsDataServiceRequest);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0B67064()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0B670D0()
{
  sub_1C0B6F9C4(*(void *)(v0 + 32), type metadata accessor for SportsDataServiceRequest);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0B67150@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v41 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  MEMORY[0x1F4188790](v41);
  uint64_t v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SportsDataVisualizationResponseMetadata();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unsigned __int8 v11 = (char *)v37 - v10;
  uint64_t v42 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  long long v13 = (void *)((char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  long long v16 = (char *)v37 - v15;
  uint64_t v17 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6FCA8(a1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_3;
    case 2u:
      v37[1] = v2;
      uint64_t v24 = *((void *)v19 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void *)(v24 + 16);
      if (!v25)
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v22 = MEMORY[0x1E4FBC860];
        uint64_t v21 = v38;
        goto LABEL_4;
      }
      uint64_t v26 = v24 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
      uint64_t v40 = *(void *)(v40 + 72);
      v37[0] = v24;
      swift_bridgeObjectRetain();
      uint64_t v27 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v39 = v5;
      while (2)
      {
        sub_1C0B6FCA8(v26, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
        sub_1C0B6FCA8((uint64_t)v13 + *(int *)(v42 + 36), (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseMetadata);
        sub_1C0B6FCA8((uint64_t)v8, (uint64_t)v5, type metadata accessor for SportsDataVisualizationResponseEventStatus);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v28 = type metadata accessor for StartTimeEndTime;
        switch(EnumCaseMultiPayload)
        {
          case 6:
            uint64_t v28 = type metadata accessor for StartTime;
            goto LABEL_10;
          case 8:
          case 9:
LABEL_10:
            sub_1C0B6F9C4((uint64_t)v5, v28);
            sub_1C0B6F9C4((uint64_t)v8, type metadata accessor for SportsDataVisualizationResponseEventStatus);
            sub_1C0B6F9C4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
            goto LABEL_11;
          case 10:
            goto LABEL_14;
          default:
            sub_1C0B6F9C4((uint64_t)v5, type metadata accessor for StartTime);
LABEL_14:
            sub_1C0B6F9C4((uint64_t)v8, type metadata accessor for SportsDataVisualizationResponseEventStatus);
            uint64_t v31 = *v13;
            uint64_t v30 = v13[1];
            swift_bridgeObjectRetain();
            sub_1C0B6F9C4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v27 = sub_1BFEF9B68(0, v27[2] + 1, 1, v27);
            }
            unint64_t v33 = v27[2];
            unint64_t v32 = v27[3];
            if (v33 >= v32 >> 1) {
              uint64_t v27 = sub_1BFEF9B68((void *)(v32 > 1), v33 + 1, 1, v27);
            }
            v27[2] = v33 + 1;
            unint64_t v34 = &v27[2 * v33];
            v34[4] = v31;
            v34[5] = v30;
            uint64_t v5 = v39;
LABEL_11:
            v26 += v40;
            if (--v25) {
              continue;
            }
            uint64_t result = swift_bridgeObjectRelease_n();
            *uint64_t v38 = (uint64_t)v27;
            break;
        }
        break;
      }
      break;
    default:
      sub_1C0B6FCA8((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      sub_1C0B6FCA8((uint64_t)&v16[*(int *)(v42 + 36)], (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseMetadata);
      char v23 = SportsDataVisualizationResponseEventStatus.isFinalized.getter();
      sub_1C0B6F9C4((uint64_t)v11, type metadata accessor for SportsDataVisualizationResponseEventStatus);
      if (v23)
      {
        sub_1C0B6F9C4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
        uint64_t result = sub_1C0B6F9C4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
LABEL_3:
        uint64_t v21 = v38;
        uint64_t v22 = MEMORY[0x1E4FBC860];
LABEL_4:
        *uint64_t v21 = v22;
      }
      else
      {
        sub_1C0B7233C(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_1C1529AE0;
        *(void *)(v35 + 32) = sub_1C09B8238();
        *(void *)(v35 + 40) = v36;
        sub_1C0B6F9C4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
        *uint64_t v38 = v35;
        uint64_t result = sub_1C0B6F9C4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      }
      break;
  }
  return result;
}

uint64_t sub_1C0B67800@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v31 - v7;
  unsigned __int8 v9 = *a1;
  if (qword_1EB863818 != -1) {
    swift_once();
  }
  if (sub_1C151701C())
  {
    sub_1C151706C();
    sub_1C151704C();
    if (qword_1EA194900 != -1) {
      swift_once();
    }
    sub_1C151703C();
    swift_release();
    sub_1C1515F7C();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_1C1515FDC();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v8, v10);
      if (qword_1EB86AE58 != -1) {
        swift_once();
      }
      uint64_t v12 = (void *)qword_1EB93C5E8;
      sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1C1527210;
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      uint64_t v14 = (void *)v13;
      id v23 = v12;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v24 = v31;
      unint64_t v25 = v32;
      uint64_t v26 = MEMORY[0x1E4FBB1A0];
      v14[7] = MEMORY[0x1E4FBB1A0];
      unint64_t v27 = sub_1BFE9C558();
      _OWORD v14[8] = v27;
      _OWORD v14[4] = v24;
      v14[5] = v25;
      uint64_t v28 = sub_1C1515E2C();
      v14[12] = v26;
      v14[13] = v27;
      v14[9] = v28;
      v14[10] = v29;
      sub_1C151F38C();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
    }
  }
  else
  {
    uint64_t v15 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  }
  sub_1C0B70738((uint64_t)v8, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  if (*(void *)(a2 + 16) && (unint64_t v16 = sub_1C10527F0(v9), (v17 & 1) != 0))
  {
    unint64_t v18 = v16;
    uint64_t v19 = *(void *)(a2 + 56);
    uint64_t v20 = sub_1C1515FDC();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(a3, v19 + *(void *)(v21 + 72) * v18, v20);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(a3, 0, 1, v20);
  }
  else
  {
    uint64_t v22 = sub_1C1515FDC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a3, 1, 1, v22);
  }
}

uint64_t sub_1C0B67DB8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v31 - v7;
  unsigned __int8 v9 = *a1;
  if (qword_1EB863A88 != -1) {
    swift_once();
  }
  if (sub_1C151701C())
  {
    sub_1C151706C();
    sub_1C151704C();
    if (qword_1EA194910 != -1) {
      swift_once();
    }
    sub_1C151703C();
    swift_release();
    sub_1C1515F7C();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_1C1515FDC();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v8, v10);
      if (qword_1EB86AE58 != -1) {
        swift_once();
      }
      uint64_t v12 = (void *)qword_1EB93C5E8;
      sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1C1527210;
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      uint64_t v14 = (void *)v13;
      id v23 = v12;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v24 = v31;
      unint64_t v25 = v32;
      uint64_t v26 = MEMORY[0x1E4FBB1A0];
      v14[7] = MEMORY[0x1E4FBB1A0];
      unint64_t v27 = sub_1BFE9C558();
      _OWORD v14[8] = v27;
      _OWORD v14[4] = v24;
      v14[5] = v25;
      uint64_t v28 = sub_1C1515E2C();
      v14[12] = v26;
      v14[13] = v27;
      v14[9] = v28;
      v14[10] = v29;
      sub_1C151F38C();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
    }
  }
  else
  {
    uint64_t v15 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  }
  sub_1C0B70738((uint64_t)v8, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  if (*(void *)(a2 + 16) && (unint64_t v16 = sub_1C10527F0(v9), (v17 & 1) != 0))
  {
    unint64_t v18 = v16;
    uint64_t v19 = *(void *)(a2 + 56);
    uint64_t v20 = sub_1C1515FDC();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(a3, v19 + *(void *)(v21 + 72) * v18, v20);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(a3, 0, 1, v20);
  }
  else
  {
    uint64_t v22 = sub_1C1515FDC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a3, 1, 1, v22);
  }
}

uint64_t sub_1C0B68370@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v31 - v7;
  unsigned __int8 v9 = *a1;
  if (qword_1EB8638F8 != -1) {
    swift_once();
  }
  if (sub_1C151701C())
  {
    sub_1C151706C();
    sub_1C151704C();
    if (qword_1EA194920 != -1) {
      swift_once();
    }
    sub_1C151703C();
    swift_release();
    sub_1C1515F7C();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_1C1515FDC();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v8, v10);
      if (qword_1EB86AE58 != -1) {
        swift_once();
      }
      uint64_t v12 = (void *)qword_1EB93C5E8;
      sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1C1527210;
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      uint64_t v14 = (void *)v13;
      id v23 = v12;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v24 = v31;
      unint64_t v25 = v32;
      uint64_t v26 = MEMORY[0x1E4FBB1A0];
      v14[7] = MEMORY[0x1E4FBB1A0];
      unint64_t v27 = sub_1BFE9C558();
      _OWORD v14[8] = v27;
      _OWORD v14[4] = v24;
      v14[5] = v25;
      uint64_t v28 = sub_1C1515E2C();
      v14[12] = v26;
      v14[13] = v27;
      v14[9] = v28;
      v14[10] = v29;
      sub_1C151F38C();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
    }
  }
  else
  {
    uint64_t v15 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  }
  sub_1C0B70738((uint64_t)v8, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  if (*(void *)(a2 + 16) && (unint64_t v16 = sub_1C10527F0(v9), (v17 & 1) != 0))
  {
    unint64_t v18 = v16;
    uint64_t v19 = *(void *)(a2 + 56);
    uint64_t v20 = sub_1C1515FDC();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(a3, v19 + *(void *)(v21 + 72) * v18, v20);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(a3, 0, 1, v20);
  }
  else
  {
    uint64_t v22 = sub_1C1515FDC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a3, 1, 1, v22);
  }
}

uint64_t sub_1C0B68928@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v31 - v7;
  unsigned __int8 v9 = *a1;
  if (qword_1EB86BD10 != -1) {
    swift_once();
  }
  if (sub_1C151701C())
  {
    sub_1C151706C();
    sub_1C151704C();
    if (qword_1EA194938 != -1) {
      swift_once();
    }
    sub_1C151703C();
    swift_release();
    sub_1C1515F7C();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_1C1515FDC();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v8, v10);
      if (qword_1EB86AE58 != -1) {
        swift_once();
      }
      uint64_t v12 = (void *)qword_1EB93C5E8;
      sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1C1527210;
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      uint64_t v14 = (void *)v13;
      id v23 = v12;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v24 = v31;
      unint64_t v25 = v32;
      uint64_t v26 = MEMORY[0x1E4FBB1A0];
      v14[7] = MEMORY[0x1E4FBB1A0];
      unint64_t v27 = sub_1BFE9C558();
      _OWORD v14[8] = v27;
      _OWORD v14[4] = v24;
      v14[5] = v25;
      uint64_t v28 = sub_1C1515E2C();
      v14[12] = v26;
      v14[13] = v27;
      v14[9] = v28;
      v14[10] = v29;
      sub_1C151F38C();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
    }
  }
  else
  {
    uint64_t v15 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  }
  sub_1C0B70738((uint64_t)v8, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  if (*(void *)(a2 + 16) && (unint64_t v16 = sub_1C10527F0(v9), (v17 & 1) != 0))
  {
    unint64_t v18 = v16;
    uint64_t v19 = *(void *)(a2 + 56);
    uint64_t v20 = sub_1C1515FDC();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(a3, v19 + *(void *)(v21 + 72) * v18, v20);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(a3, 0, 1, v20);
  }
  else
  {
    uint64_t v22 = sub_1C1515FDC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a3, 1, 1, v22);
  }
}

uint64_t sub_1C0B68EE0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v31 - v7;
  unsigned __int8 v9 = *a1;
  if (qword_1EB863868 != -1) {
    swift_once();
  }
  if (sub_1C151701C())
  {
    sub_1C151706C();
    sub_1C151704C();
    if (qword_1EA1948C0 != -1) {
      swift_once();
    }
    sub_1C151703C();
    swift_release();
    sub_1C1515F7C();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_1C1515FDC();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v8, v10);
      if (qword_1EB86AE58 != -1) {
        swift_once();
      }
      uint64_t v12 = (void *)qword_1EB93C5E8;
      sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1C1527210;
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      uint64_t v14 = (void *)v13;
      id v23 = v12;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v24 = v31;
      unint64_t v25 = v32;
      uint64_t v26 = MEMORY[0x1E4FBB1A0];
      v14[7] = MEMORY[0x1E4FBB1A0];
      unint64_t v27 = sub_1BFE9C558();
      _OWORD v14[8] = v27;
      _OWORD v14[4] = v24;
      v14[5] = v25;
      uint64_t v28 = sub_1C1515E2C();
      v14[12] = v26;
      v14[13] = v27;
      v14[9] = v28;
      v14[10] = v29;
      sub_1C151F38C();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
    }
  }
  else
  {
    uint64_t v15 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  }
  sub_1C0B70738((uint64_t)v8, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  if (*(void *)(a2 + 16) && (unint64_t v16 = sub_1C10527F0(v9), (v17 & 1) != 0))
  {
    unint64_t v18 = v16;
    uint64_t v19 = *(void *)(a2 + 56);
    uint64_t v20 = sub_1C1515FDC();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(a3, v19 + *(void *)(v21 + 72) * v18, v20);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(a3, 0, 1, v20);
  }
  else
  {
    uint64_t v22 = sub_1C1515FDC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a3, 1, 1, v22);
  }
}

uint64_t sub_1C0B69498@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v31 - v7;
  unsigned __int8 v9 = *a1;
  if (qword_1EB863948 != -1) {
    swift_once();
  }
  if (sub_1C151701C())
  {
    sub_1C151706C();
    sub_1C151704C();
    if (qword_1EA1948F0 != -1) {
      swift_once();
    }
    sub_1C151703C();
    swift_release();
    sub_1C1515F7C();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_1C1515FDC();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v8, v10);
      if (qword_1EB86AE58 != -1) {
        swift_once();
      }
      uint64_t v12 = (void *)qword_1EB93C5E8;
      sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1C1527210;
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      uint64_t v14 = (void *)v13;
      id v23 = v12;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v24 = v31;
      unint64_t v25 = v32;
      uint64_t v26 = MEMORY[0x1E4FBB1A0];
      v14[7] = MEMORY[0x1E4FBB1A0];
      unint64_t v27 = sub_1BFE9C558();
      _OWORD v14[8] = v27;
      _OWORD v14[4] = v24;
      v14[5] = v25;
      uint64_t v28 = sub_1C1515E2C();
      v14[12] = v26;
      v14[13] = v27;
      v14[9] = v28;
      v14[10] = v29;
      sub_1C151F38C();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
    }
  }
  else
  {
    uint64_t v15 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  }
  sub_1C0B70738((uint64_t)v8, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  if (*(void *)(a2 + 16) && (unint64_t v16 = sub_1C10527F0(v9), (v17 & 1) != 0))
  {
    unint64_t v18 = v16;
    uint64_t v19 = *(void *)(a2 + 56);
    uint64_t v20 = sub_1C1515FDC();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(a3, v19 + *(void *)(v21 + 72) * v18, v20);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(a3, 0, 1, v20);
  }
  else
  {
    uint64_t v22 = sub_1C1515FDC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a3, 1, 1, v22);
  }
}

uint64_t sub_1C0B69A50@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v31 - v7;
  unsigned __int8 v9 = *a1;
  if (qword_1EB863A38 != -1) {
    swift_once();
  }
  if (sub_1C151701C())
  {
    sub_1C151706C();
    sub_1C151704C();
    if (qword_1EA1948D0 != -1) {
      swift_once();
    }
    sub_1C151703C();
    swift_release();
    sub_1C1515F7C();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_1C1515FDC();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v8, v10);
      if (qword_1EB86AE58 != -1) {
        swift_once();
      }
      uint64_t v12 = (void *)qword_1EB93C5E8;
      sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1C1527210;
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      uint64_t v14 = (void *)v13;
      id v23 = v12;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v24 = v31;
      unint64_t v25 = v32;
      uint64_t v26 = MEMORY[0x1E4FBB1A0];
      v14[7] = MEMORY[0x1E4FBB1A0];
      unint64_t v27 = sub_1BFE9C558();
      _OWORD v14[8] = v27;
      _OWORD v14[4] = v24;
      v14[5] = v25;
      uint64_t v28 = sub_1C1515E2C();
      v14[12] = v26;
      v14[13] = v27;
      v14[9] = v28;
      v14[10] = v29;
      sub_1C151F38C();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
    }
  }
  else
  {
    uint64_t v15 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  }
  sub_1C0B70738((uint64_t)v8, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  if (*(void *)(a2 + 16) && (unint64_t v16 = sub_1C10527F0(v9), (v17 & 1) != 0))
  {
    unint64_t v18 = v16;
    uint64_t v19 = *(void *)(a2 + 56);
    uint64_t v20 = sub_1C1515FDC();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(a3, v19 + *(void *)(v21 + 72) * v18, v20);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(a3, 0, 1, v20);
  }
  else
  {
    uint64_t v22 = sub_1C1515FDC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a3, 1, 1, v22);
  }
}

uint64_t sub_1C0B6A008@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v31 - v7;
  unsigned __int8 v9 = *a1;
  if (qword_1EB8639E8 != -1) {
    swift_once();
  }
  if (sub_1C151701C())
  {
    sub_1C151706C();
    sub_1C151704C();
    if (qword_1EA1948E0 != -1) {
      swift_once();
    }
    sub_1C151703C();
    swift_release();
    sub_1C1515F7C();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_1C1515FDC();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v8, v10);
      if (qword_1EB86AE58 != -1) {
        swift_once();
      }
      uint64_t v12 = (void *)qword_1EB93C5E8;
      sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1C1527210;
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      uint64_t v14 = (void *)v13;
      id v23 = v12;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v24 = v31;
      unint64_t v25 = v32;
      uint64_t v26 = MEMORY[0x1E4FBB1A0];
      v14[7] = MEMORY[0x1E4FBB1A0];
      unint64_t v27 = sub_1BFE9C558();
      _OWORD v14[8] = v27;
      _OWORD v14[4] = v24;
      v14[5] = v25;
      uint64_t v28 = sub_1C1515E2C();
      v14[12] = v26;
      v14[13] = v27;
      v14[9] = v28;
      v14[10] = v29;
      sub_1C151F38C();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
    }
  }
  else
  {
    uint64_t v15 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  }
  sub_1C0B70738((uint64_t)v8, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  if (*(void *)(a2 + 16) && (unint64_t v16 = sub_1C10527F0(v9), (v17 & 1) != 0))
  {
    unint64_t v18 = v16;
    uint64_t v19 = *(void *)(a2 + 56);
    uint64_t v20 = sub_1C1515FDC();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(a3, v19 + *(void *)(v21 + 72) * v18, v20);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(a3, 0, 1, v20);
  }
  else
  {
    uint64_t v22 = sub_1C1515FDC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a3, 1, 1, v22);
  }
}

uint64_t sub_1C0B6A5C0(void *a1)
{
  uint64_t v1 = a1[15];
  uint64_t v2 = a1[16];
  __swift_project_boxed_opaque_existential_1(a1 + 12, v1);
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_1BFE71F8C(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v2 + 16))(v4, v1, v2);
  swift_release();
  return v5;
}

uint64_t sub_1C0B6A660@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_29:
    uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
LABEL_30:
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v5;
    return result;
  }
LABEL_28:
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_29;
  }
LABEL_3:
  uint64_t v4 = 0;
  unint64_t v44 = v2 & 0xC000000000000001;
  uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v43 = v2;
  while (2)
  {
    uint64_t v42 = v5;
    uint64_t v6 = v4;
    while (1)
    {
      if (v44)
      {
        uint64_t v7 = (void *)MEMORY[0x1C18C7CB0](v6, v2);
        uint64_t v8 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t v7 = *(void **)(v2 + 8 * v6 + 32);
        swift_unknownObjectRetain();
        uint64_t v8 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
      }
      id v9 = objc_msgSend(v7, sel_asSports);
      uint64_t v45 = v8;
      if (v9) {
        break;
      }
      uint64_t v10 = v3;
      if (qword_1EB86AE58 != -1) {
        swift_once();
      }
      id v11 = (id)qword_1EB93C5E8;
      sub_1C151F36C();
      sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C1529AE0;
      id v13 = objc_msgSend(v7, sel_identifier);
      uint64_t v14 = sub_1C151E62C();
      uint64_t v16 = v15;

      *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v12 + 64) = sub_1BFE9C558();
      *(void *)(v12 + 32) = v14;
      *(void *)(v12 + 40) = v16;
      sub_1C15197BC();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      ++v6;
      uint64_t v3 = v10;
      uint64_t v2 = v43;
      if (v45 == v10)
      {
        uint64_t v5 = v42;
        goto LABEL_30;
      }
    }
    id v17 = v9;
    id v18 = objc_msgSend(v9, sel_identifier);
    uint64_t v19 = sub_1C151E62C();
    uint64_t v21 = v20;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v40 = v19;
    uint64_t v23 = v19;
    uint64_t v24 = v21;
    unint64_t v26 = sub_1BFEF2D8C(v23, v21);
    uint64_t v27 = v42[2];
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      break;
    }
    char v30 = v25;
    if (v42[3] >= v29)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C1073184();
      }
      goto LABEL_21;
    }
    sub_1C106216C(v29, isUniquelyReferenced_nonNull_native);
    unint64_t v31 = sub_1BFEF2D8C(v40, v24);
    if ((v30 & 1) == (v32 & 1))
    {
      unint64_t v26 = v31;
LABEL_21:
      uint64_t v33 = v3;
      uint64_t v5 = v42;
      if (v30)
      {
        uint64_t v34 = v42[7];
        swift_unknownObjectRelease();
        *(void *)(v34 + 8 * v26) = v17;
        goto LABEL_25;
      }
      v42[(v26 >> 6) + 8] |= 1 << v26;
      uint64_t v35 = (uint64_t *)(v42[6] + 16 * v26);
      *uint64_t v35 = v40;
      v35[1] = v24;
      *(void *)(v42[7] + 8 * v26) = v17;
      uint64_t v36 = v42[2];
      BOOL v37 = __OFADD__(v36, 1);
      uint64_t v38 = v36 + 1;
      if (!v37)
      {
        v42[2] = v38;
        swift_bridgeObjectRetain();
LABEL_25:
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v3 = v33;
        uint64_t v4 = v45;
        if (v45 != v3) {
          continue;
        }
        goto LABEL_30;
      }
      goto LABEL_32;
    }
    break;
  }
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C0B6AA5C(uint64_t a1, uint64_t a2)
{
  return sub_1C0B56668(a1, a2, sub_1C0B4AB34);
}

uint64_t sub_1C0B6AA88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0B703C0(0);
  return sub_1C0B6FCA8(a1 + *(int *)(v4 + 52), a2, (uint64_t (*)(void))type metadata accessor for SportsFeaturedEventsResource);
}

void sub_1C0B6AAE8(void *a1)
{
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C15198DC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB863FB8);
  id v3 = a1;
  id v4 = a1;
  oslog = sub_1C15198AC();
  os_log_type_t v5 = sub_1C151F36C();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v11 = v7;
    *(_DWORD *)uint64_t v6 = 136446210;
    swift_getErrorValue();
    uint64_t v8 = sub_1C1520D3C();
    sub_1BFDA76EC(v8, v9, &v11);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BFC31000, oslog, v5, "Sports data service failed to fetch featured event resource; error = %{public}s",
      v6,
      0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v7, -1, -1);
    MEMORY[0x1C18C9B00](v6, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1C0B6ACDC()
{
  return objectdestroy_4Tm();
}

uint64_t sub_1C0B6ACE4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 49);
  char v9 = *(unsigned char *)(v1 + 48);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1C005E7F4;
  return sub_1C0B57A58(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1C0B6ADC0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0B598D8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), a2);
}

void sub_1C0B6ADE4()
{
  if (!qword_1EB869090)
  {
    type metadata accessor for SportsDataVisualizationResponse();
    sub_1C0B6AE5C();
    sub_1C0B6AE90();
    unint64_t v0 = type metadata accessor for SportsDataServiceBatchResponse();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB869090);
    }
  }
}

uint64_t sub_1C0B6AE5C()
{
  return sub_1C001A5E0(&qword_1EB8694C8, (void (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponse);
}

uint64_t sub_1C0B6AE90()
{
  return sub_1C001A5E0(&qword_1EB8694C0, (void (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponse);
}

uint64_t sub_1C0B6AEC4()
{
  return objectdestroy_4Tm();
}

uint64_t sub_1C0B6AECC(uint64_t a1)
{
  long long v9 = *(_OWORD *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  char v6 = *(unsigned char *)(v1 + 48);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *(void *)uint64_t v7 = v2;
  *(unsigned char *)(v7 + 80) = v6;
  *(void *)(v7 + 40) = v4;
  *(void *)(v7 + 48) = v5;
  *(_OWORD *)(v7 + 24) = v9;
  *(void *)(v7 + 8) = sub_1C005E7F4;
  *(void *)(v7 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1C0B599BC, 0, 0);
}

uint64_t sub_1C0B6AFA4()
{
  return objectdestroy_4Tm();
}

uint64_t objectdestroy_4Tm()
{
  swift_release();
  sub_1C0254C7C(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_1C0B6B000(uint64_t a1)
{
  long long v9 = *(_OWORD *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  char v6 = *(unsigned char *)(v1 + 48);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *(void *)uint64_t v7 = v2;
  *(unsigned char *)(v7 + 80) = v6;
  *(void *)(v7 + 40) = v4;
  *(void *)(v7 + 48) = v5;
  *(_OWORD *)(v7 + 24) = v9;
  *(void *)(v7 + 8) = sub_1BFC542F4;
  *(void *)(v7 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1C0B59C90, 0, 0);
}

uint64_t sub_1C0B6B0D8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_1C005E7F4;
  return MEMORY[0x1F4188298](sub_1C0B5A30C, 0, 0);
}

void sub_1C0B6B184(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a1;
  swift_retain();
  uint64_t v8 = sub_1C0B6C500(MEMORY[0x1E4FBC868], v7, a2);
  swift_release();
  sub_1C0B6FCA8(a3, a4, type metadata accessor for SportsDataServiceBatchResourceRequest);
  sub_1C0B6EACC();
  *(void *)(a4 + *(int *)(v9 + 52)) = v8;
}

uint64_t sub_1C0B6B220(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v2) {
      break;
    }
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C152028C();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v5 = (void *)MEMORY[0x1C18C7CB0](v4, a1);
      }
      else
      {
        uint64_t v5 = *(void **)(a1 + 8 * v4 + 32);
        swift_unknownObjectRetain();
      }
      ++v4;
      sub_1C0B559F0(v5);
      *(void *)(swift_allocObject() + 16) = v5;
      swift_unknownObjectRetain();
      uint64_t v6 = (void *)sub_1C1518E7C();
      sub_1C0B6E038();
      sub_1C1518FFC();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();

      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      if (v2 == v4) {
        return v7;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0B6B3F8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for SportsDataServiceResourceRequest(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v44 = (uint64_t)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v43 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v40 = (uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v16)
  {
    uint64_t v31 = v2;
    uint64_t v47 = MEMORY[0x1E4FBC860];
    sub_1C152028C();
    uint64_t v18 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v19 = a1 + ((v18 + 32) & ~v18);
    uint64_t v20 = v11;
    uint64_t v21 = (void *)(a2 + 56);
    uint64_t v46 = *(void *)(v20 + 72);
    uint64_t v35 = (v18 + 16) & ~v18;
    uint64_t v36 = (uint64_t (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v33 = v18 | 7;
    uint64_t v34 = v35 + v12;
    char v32 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v38 = v10;
    uint64_t v39 = a2;
    BOOL v37 = (void *)(a2 + 56);
    while (1)
    {
      uint64_t v24 = *__swift_project_boxed_opaque_existential_1(v21, *(void *)(a2 + 80));
      sub_1C0B6FCA8(v19, (uint64_t)v15, type metadata accessor for SportsDataServiceRequest);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          unint64_t v26 = v43;
          uint64_t v27 = (*v36)(v43, v15, v45);
          MEMORY[0x1F4188790](v27);
          *(&v31 - 2) = v24;
          *(&v31 - 1) = (uint64_t)v26;
          sub_1C151932C();
          uint64_t v28 = v40;
          sub_1C0B6FCA8(v19, v40, type metadata accessor for SportsDataServiceRequest);
          uint64_t v29 = swift_allocObject();
          sub_1C0B70244(v28, v29 + v35, type metadata accessor for SportsDataServiceRequest);
          char v30 = (void *)sub_1C1518E7C();
          sub_1C0B6F50C(0);
          type metadata accessor for SportsDataServiceRequestFetcher();
          sub_1C151901C();
          a2 = v39;
          swift_release();
          uint64_t v21 = v37;
          swift_release();

          (*v32)(v26, v45);
          goto LABEL_5;
        }
        uint64_t v22 = v44;
        sub_1C0B70244((uint64_t)v15, v44, type metadata accessor for SportsDataServiceResourceRequest);
        sub_1C0B4EEC0(v22, v19);
        uint64_t v23 = type metadata accessor for SportsDataServiceResourceRequest;
      }
      else
      {
        uint64_t v22 = v41;
        sub_1C0B70244((uint64_t)v15, v41, type metadata accessor for SportsDataServiceURLRequest);
        sub_1C0B4C648(v22 + *(int *)(v42 + 24), v22, 1);
        uint64_t v23 = type metadata accessor for SportsDataServiceURLRequest;
      }
      sub_1C0B6F9C4(v22, v23);
LABEL_5:
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      v19 += v46;
      if (!--v16) {
        return v47;
      }
    }
  }
  return result;
}

uint64_t sub_1C0B6B8FC(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v27 = MEMORY[0x1E4FBC860];
    sub_1C152028C();
    uint64_t result = sub_1BFD44A04(v1);
    int64_t v4 = result;
    int v6 = v5;
    char v8 = v7 & 1;
    uint64_t v20 = v1;
    uint64_t v21 = v1 + 56;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(v1 + 32))
    {
      if (((*(void *)(v21 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_11;
      }
      if (*(_DWORD *)(v1 + 36) != v6) {
        goto LABEL_12;
      }
      uint64_t v9 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v4);
      uint64_t v10 = *v9;
      uint64_t v11 = v9[1];
      char v22 = v8;
      type metadata accessor for SportsDataVisualizationAllRequest();
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v10;
      *(void *)(v12 + 24) = v11;
      *(_WORD *)(v12 + 32) = 1;
      uint64_t v25 = v10;
      uint64_t v26 = v11;
      swift_bridgeObjectRetain_n();
      uint64_t v24 = sub_1C151EFFC();
      uint64_t v13 = v25;
      uint64_t v14 = v26;
      swift_bridgeObjectRetain();
      sub_1BFEFFC1C(&v23, v13, v14);
      swift_bridgeObjectRelease();
      uint64_t v15 = v24;
      uint64_t v16 = swift_arrayDestroy();
      *(void *)(v12 + 40) = v15;
      MEMORY[0x1F4188790](v16);
      type metadata accessor for SportsDataServiceBatchRequest(0);
      sub_1C151932C();
      id v17 = (void *)sub_1C1518E7C();
      sub_1C0B6ADE4();
      sub_1C151900C();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      sub_1C152025C();
      sub_1C152029C();
      uint64_t v1 = v20;
      sub_1C15202AC();
      sub_1C152026C();
      uint64_t result = sub_1BFD43BF8(v4, v6, v22 & 1, v20);
      int64_t v4 = result;
      int v6 = v18;
      char v8 = v19 & 1;
      if (!--v2)
      {
        sub_1C0153754(result, v18, v8);
        return v27;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0B6BBD8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    while (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      if (*(void *)(a3 + 16))
      {
LABEL_23:
        uint64_t v16 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v12);
        uint64_t v18 = *v16;
        uint64_t v17 = v16[1];
        swift_bridgeObjectRetain();
        unint64_t v19 = sub_1BFEF2D8C(v18, v17);
        if (v20)
        {
          uint64_t v21 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v19);
          uint64_t v39 = *v21;
          uint64_t v40 = v21[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v44 = a1;
          unint64_t v23 = sub_1BFEF2D8C(v39, v40);
          uint64_t v24 = a1[2];
          BOOL v25 = (v22 & 1) == 0;
          uint64_t v26 = v24 + v25;
          if (__OFADD__(v24, v25)) {
            goto LABEL_39;
          }
          if (a1[3] >= v26)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              char v43 = v22;
              unint64_t v38 = v23;
              sub_1C106AFB0();
              unint64_t v23 = v38;
              char v22 = v43;
            }
          }
          else
          {
            char v42 = v22;
            sub_1C105548C(v26, isUniquelyReferenced_nonNull_native);
            unint64_t v27 = sub_1BFEF2D8C(v39, v40);
            int v29 = v28 & 1;
            char v22 = v42;
            if ((v42 & 1) != v29) {
              goto LABEL_41;
            }
            unint64_t v23 = v27;
          }
          a1 = v44;
          if (v22)
          {
            char v30 = (uint64_t *)(v44[7] + 16 * v23);
            swift_bridgeObjectRelease();
            *char v30 = v18;
            v30[1] = v17;
          }
          else
          {
            v44[(v23 >> 6) + 8] |= 1 << v23;
            uint64_t v31 = (uint64_t *)(v44[6] + 16 * v23);
            *uint64_t v31 = v39;
            v31[1] = v40;
            char v32 = (uint64_t *)(v44[7] + 16 * v23);
            *char v32 = v18;
            v32[1] = v17;
            uint64_t v33 = v44[2];
            BOOL v34 = __OFADD__(v33, 1);
            uint64_t v35 = v33 + 1;
            if (v34) {
              goto LABEL_40;
            }
            v44[2] = v35;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v13 >= v9) {
      goto LABEL_36;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v9) {
        goto LABEL_36;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v9) {
          goto LABEL_36;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v9) {
            goto LABEL_36;
          }
          unint64_t v14 = *(void *)(v5 + 8 * v10);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
    if (*(void *)(a3 + 16)) {
      goto LABEL_23;
    }
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v9)
  {
LABEL_36:
    swift_release();
    return (uint64_t)a1;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v9) {
      goto LABEL_36;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C0B6BEE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v58 = a1;
  sub_1C0B6DDBC(0, &qword_1EB8659E0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  int64_t v9 = (char *)&v52 - v8;
  uint64_t v65 = type metadata accessor for SportsRoster();
  MEMORY[0x1F4188790](v65);
  uint64_t v57 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v63 = (uint64_t)&v52 - v13;
  uint64_t v14 = *(void *)(a2 + 64);
  uint64_t v59 = v12;
  uint64_t v60 = a2 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  os_log_type_t v64 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v61 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int64_t v62 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v18 = 0;
  uint64_t v53 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v18 << 6);
      goto LABEL_25;
    }
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    if (v21 >= v62) {
      goto LABEL_45;
    }
    unint64_t v22 = *(void *)(v60 + 8 * v21);
    ++v18;
    if (!v22)
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v62) {
        goto LABEL_45;
      }
      unint64_t v22 = *(void *)(v60 + 8 * v18);
      if (!v22)
      {
        int64_t v18 = v21 + 2;
        if (v21 + 2 >= v62) {
          goto LABEL_45;
        }
        unint64_t v22 = *(void *)(v60 + 8 * v18);
        if (!v22)
        {
          int64_t v18 = v21 + 3;
          if (v21 + 3 >= v62) {
            goto LABEL_45;
          }
          unint64_t v22 = *(void *)(v60 + 8 * v18);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_25:
    uint64_t v24 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v20);
    uint64_t v25 = v24[1];
    if (!*(void *)(a3 + 16))
    {
      (*v64)(v9, 1, 1, v65);
      swift_bridgeObjectRetain();
LABEL_5:
      sub_1C0B70738((uint64_t)v9, &qword_1EB8659E0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster);
      goto LABEL_6;
    }
    uint64_t v26 = *v24;
    swift_bridgeObjectRetain_n();
    unint64_t v27 = sub_1BFEF2D8C(v26, v25);
    if (v28)
    {
      sub_1C0B6FCA8(*(void *)(a3 + 56) + *(void *)(v59 + 72) * v27, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SportsRoster);
      uint64_t v29 = 0;
    }
    else
    {
      uint64_t v29 = 1;
    }
    uint64_t v30 = v65;
    (*v64)(v9, v29, 1, v65);
    swift_bridgeObjectRelease();
    if ((*v61)(v9, 1, v30) == 1) {
      goto LABEL_5;
    }
    sub_1C0B70244((uint64_t)v9, v63, (uint64_t (*)(void))type metadata accessor for SportsRoster);
    if (!*(void *)(a4 + 16)) {
      goto LABEL_37;
    }
    swift_bridgeObjectRetain();
    unint64_t v31 = sub_1BFEF2D8C(v26, v25);
    if ((v32 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_37:
      sub_1C0B6F9C4(v63, (uint64_t (*)(void))type metadata accessor for SportsRoster);
      goto LABEL_6;
    }
    uint64_t v33 = (uint64_t *)(*(void *)(a4 + 56) + 16 * v31);
    uint64_t v34 = *v33;
    uint64_t v35 = v33[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1C0B6FCA8(v63, v57, (uint64_t (*)(void))type metadata accessor for SportsRoster);
    uint64_t v36 = v58;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v66 = v36;
    uint64_t v56 = v34;
    unint64_t v39 = sub_1BFEF2D8C(v34, v35);
    uint64_t v40 = v36[2];
    BOOL v41 = (v38 & 1) == 0;
    uint64_t v42 = v40 + v41;
    if (__OFADD__(v40, v41)) {
      goto LABEL_47;
    }
    char v43 = v38;
    if (v36[3] >= v42)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C1072F28();
      }
    }
    else
    {
      sub_1C1061DB0(v42, isUniquelyReferenced_nonNull_native);
      unint64_t v44 = sub_1BFEF2D8C(v56, v35);
      if ((v43 & 1) != (v45 & 1)) {
        goto LABEL_50;
      }
      unint64_t v39 = v44;
    }
    a3 = v55;
    uint64_t v58 = v66;
    if (v43)
    {
      sub_1C0B6F190(v57, v66[7] + *(void *)(v59 + 72) * v39, (uint64_t (*)(void))type metadata accessor for SportsRoster);
    }
    else
    {
      v66[(v39 >> 6) + 8] |= 1 << v39;
      uint64_t v46 = v57;
      uint64_t v47 = (void *)(v58[6] + 16 * v39);
      *uint64_t v47 = v56;
      v47[1] = v35;
      sub_1C0B70244(v46, v58[7] + *(void *)(v59 + 72) * v39, (uint64_t (*)(void))type metadata accessor for SportsRoster);
      uint64_t v48 = v58[2];
      BOOL v49 = __OFADD__(v48, 1);
      uint64_t v50 = v48 + 1;
      if (v49) {
        goto LABEL_48;
      }
      v58[2] = v50;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0B6F9C4(v63, (uint64_t (*)(void))type metadata accessor for SportsRoster);
    a4 = v53;
    a2 = v54;
LABEL_6:
    swift_bridgeObjectRelease();
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v62)
  {
LABEL_45:
    swift_release();
    return (uint64_t)v58;
  }
  unint64_t v22 = *(void *)(v60 + 8 * v23);
  if (v22)
  {
    int64_t v18 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v62) {
      goto LABEL_45;
    }
    unint64_t v22 = *(void *)(v60 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_49:
  __break(1u);
LABEL_50:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C0B6C500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a1;
  uint64_t v4 = v3;
  uint64_t v7 = a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a2 + 64);
  int64_t v23 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    int64_t v18 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v20 = *v18;
    unint64_t v19 = v18[1];
    int64_t v21 = *(void **)(*(void *)(a2 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    id v22 = v21;
    sub_1C0B50108((uint64_t)&v24, v20, v19, v22, a3);
    if (v4)
    {
      swift_release();

      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }

    uint64_t result = swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v12 >= v23) {
      goto LABEL_22;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_13:
    unint64_t v10 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v23) {
    goto LABEL_22;
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16) {
    goto LABEL_12;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v23)
  {
LABEL_22:
    swift_release();
    return v24;
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16)
  {
LABEL_12:
    int64_t v12 = v17;
    goto LABEL_13;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v23) {
      goto LABEL_22;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_13;
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1C0B6C6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v4 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    while (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      if (*(void *)(a2 + 16))
      {
LABEL_24:
        unint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
        uint64_t v17 = *v16;
        uint64_t v18 = v16[1];
        swift_bridgeObjectRetain_n();
        sub_1BFEF2D8C(v17, v18);
        if (v19)
        {
          swift_unknownObjectRetain();
          uint64_t v20 = swift_bridgeObjectRelease_n();
          MEMORY[0x1C18C66D0](v20);
          if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          uint64_t result = sub_1C151EBEC();
        }
        else
        {
          uint64_t result = swift_bridgeObjectRelease_n();
        }
      }
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v13 >= v8) {
      goto LABEL_28;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_28;
      }
      unint64_t v14 = *(void *)(v4 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_28;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v8) {
            goto LABEL_28;
          }
          unint64_t v14 = *(void *)(v4 + 8 * v10);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
    if (*(void *)(a2 + 16)) {
      goto LABEL_24;
    }
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v8)
  {
LABEL_28:
    swift_release();
    return v21;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_28;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_1C0B6C8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v37 = a5;
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v34 = a2;
  sub_1C0B6DDBC(0, &qword_1EB86AB18, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseScoreItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  int64_t v13 = (char *)&v27 - v12;
  uint64_t v33 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  uint64_t v14 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v32 = (uint64_t)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v30 = (uint64_t)&v27 - v17;
  uint64_t v18 = *(void *)(a1 + 16);
  if (!v18) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v19 = *(void *)(type metadata accessor for SportsDataVisualizationResponseItem() - 8);
  uint64_t v20 = a1 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  uint64_t v28 = v14;
  uint64_t v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v31 = *(void *)(v19 + 72);
  uint64_t v27 = a1;
  swift_bridgeObjectRetain();
  unint64_t v22 = MEMORY[0x1E4FBC860];
  int v29 = a6;
  do
  {
    sub_1C0B5D664(v20, v34, v35, v37, a6, a7, (uint64_t)v13);
    if (v7)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v22;
    }
    if ((*v21)(v13, 1, v33) == 1)
    {
      sub_1C0B70738((uint64_t)v13, &qword_1EB86AB18, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseScoreItem);
    }
    else
    {
      uint64_t v23 = v30;
      sub_1C0B70244((uint64_t)v13, v30, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      sub_1C0B70244(v23, v32, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v22 = sub_1C0EE7258(0, *(void *)(v22 + 16) + 1, 1, v22);
      }
      unint64_t v25 = *(void *)(v22 + 16);
      unint64_t v24 = *(void *)(v22 + 24);
      if (v25 >= v24 >> 1) {
        unint64_t v22 = sub_1C0EE7258(v24 > 1, v25 + 1, 1, v22);
      }
      *(void *)(v22 + 16) = v25 + 1;
      sub_1C0B70244(v32, v22+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v25, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
      LOBYTE(a6) = v29;
    }
    v20 += v31;
    --v18;
  }
  while (v18);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1C0B6CC64(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t *)(a1 + 40);
    do
    {
      if (*(void *)(a2 + 16))
      {
        uint64_t v7 = *(v6 - 1);
        uint64_t v8 = *v6;
        swift_bridgeObjectRetain_n();
        sub_1BFEF2D8C(v7, v8);
        if (v9)
        {
          swift_unknownObjectRetain();
          uint64_t v10 = swift_bridgeObjectRelease_n();
          MEMORY[0x1C18C66D0](v10);
          if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_1C0B6CD94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v73 = a2;
  uint64_t v74 = a3;
  uint64_t v72 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  MEMORY[0x1F4188790](v72);
  uint64_t v75 = (uint64_t)v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SportsDataVisualizationResponseMetadata();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v71 = (uint64_t)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1F4188790](v70);
  uint64_t v63 = (void *)((char *)v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v9);
  uint64_t v77 = (uint64_t)v60 - v10;
  uint64_t v11 = type metadata accessor for SportsDataVisualizationResponseItem();
  MEMORY[0x1F4188790](v11);
  int64_t v13 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v69 = (void *)((char *)v60 - v15);
  MEMORY[0x1F4188790](v16);
  uint64_t v76 = (void *)((char *)v60 - v17);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v60 - v19;
  MEMORY[0x1F4188790](v21);
  unint64_t v24 = (char *)v60 - v23;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v83 = MEMORY[0x1E4FBC860];
  uint64_t v26 = *(void *)(a1 + 16);
  if (v26)
  {
    uint64_t v62 = v3;
    uint64_t v27 = *(unsigned __int8 *)(v22 + 80);
    uint64_t v28 = *(void *)(v22 + 72);
    uint64_t v81 = (v27 + 32) & ~v27;
    uint64_t v82 = v28;
    uint64_t v29 = a1 + v81;
    uint64_t v30 = MEMORY[0x1E4FBC860];
    long long v64 = xmmword_1C152C7F0;
    uint64_t v78 = v11;
    uint64_t v79 = v13;
    uint64_t v80 = (char *)v60 - v23;
    do
    {
      sub_1C0B6FCA8(v29, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
      sub_1C0B6FCA8((uint64_t)v24, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          swift_bridgeObjectRelease();
          unint64_t v24 = v80;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_11;
        case 2u:
          swift_bridgeObjectRelease();
          unint64_t v24 = v80;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_10;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_10:
          swift_bridgeObjectRelease();
          int64_t v13 = v79;
          goto LABEL_11;
        case 4u:
        case 5u:
        case 6u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v24 = v80;
LABEL_11:
          swift_bridgeObjectRelease();
LABEL_12:
          sub_1C0B70244((uint64_t)v24, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1C05F7CE8(0, *(void *)(v30 + 16) + 1, 1);
          }
          uint64_t v30 = v83;
          unint64_t v34 = *(void *)(v83 + 16);
          unint64_t v33 = *(void *)(v83 + 24);
          if (v34 >= v33 >> 1)
          {
            sub_1C05F7CE8(v33 > 1, v34 + 1, 1);
            uint64_t v30 = v83;
          }
          *(void *)(v30 + 16) = v34 + 1;
          uint64_t v35 = v82;
          sub_1C0B70244((uint64_t)v13, v30 + v81 + v34 * v82, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
          break;
        default:
          sub_1C0B70244((uint64_t)v20, v77, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
          sub_1C0B6FCA8((uint64_t)v24, (uint64_t)v76, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v31 = *v76;
              uint64_t v32 = v76[1];
              goto LABEL_21;
            case 2u:
              uint64_t v31 = *v76;
              uint64_t v32 = v76[1];
              uint64_t v44 = v76[3];
              uint64_t v67 = v76[6];
              uint64_t v68 = v44;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_22;
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v31 = *v76;
              uint64_t v32 = v76[1];
LABEL_21:
              swift_bridgeObjectRelease();
LABEL_22:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              break;
            default:
              uint64_t v36 = v63;
              sub_1C0B70244((uint64_t)v76, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
              uint64_t v31 = *v36;
              uint64_t v32 = v36[1];
              swift_bridgeObjectRetain();
              sub_1C0B6F9C4((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
              break;
          }
          int v37 = sub_1BFF896B4(v31, v32, v73);
          swift_bridgeObjectRelease();
          uint64_t v38 = v71;
          sub_1C0B6FCA8(v77 + *(int *)(v70 + 36), v71, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseMetadata);
          sub_1C0B70244(v38, v75, type metadata accessor for SportsDataVisualizationResponseEventStatus);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          unsigned __int8 v40 = 10;
          BOOL v41 = type metadata accessor for StartTime;
          char v42 = 0;
          int64_t v13 = v79;
          switch(EnumCaseMultiPayload)
          {
            case 1:
              char v42 = 1;
              char v43 = type metadata accessor for StartTime;
              goto LABEL_35;
            case 2:
              char v42 = 2;
              char v43 = type metadata accessor for StartTime;
              goto LABEL_35;
            case 3:
              char v42 = 3;
              char v43 = type metadata accessor for StartTime;
              goto LABEL_35;
            case 4:
              char v42 = 4;
              char v43 = type metadata accessor for StartTime;
              goto LABEL_35;
            case 5:
              char v42 = 5;
              char v43 = type metadata accessor for StartTime;
              goto LABEL_35;
            case 6:
              char v42 = 6;
              char v43 = type metadata accessor for StartTime;
              goto LABEL_35;
            case 7:
              char v42 = 7;
              char v43 = type metadata accessor for StartTime;
              goto LABEL_35;
            case 8:
              char v42 = 8;
              goto LABEL_34;
            case 9:
              char v42 = 9;
LABEL_34:
              char v43 = type metadata accessor for StartTimeEndTime;
LABEL_35:
              BOOL v41 = v43;
              goto LABEL_36;
            case 10:
              goto LABEL_37;
            default:
LABEL_36:
              sub_1C0B6F9C4(v75, v41);
              unsigned __int8 v40 = v42;
LABEL_37:
              int v45 = sub_1C0453B10(v40, v74);
              if (((v37 | v45) & 1) == 0)
              {
                sub_1C0B6F9C4(v77, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
                goto LABEL_12;
              }
              char v46 = v45;
              LODWORD(v67) = v37;
              if (qword_1EB86AE58 != -1) {
                swift_once();
              }
              id v65 = (id)qword_1EB93C5E8;
              sub_1BFEE7F14(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
              uint64_t v47 = swift_allocObject();
              *(_OWORD *)(v47 + 16) = v64;
              sub_1C0B6FCA8((uint64_t)v24, (uint64_t)v69, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v66 = *v69;
                  uint64_t v68 = v69[1];
                  uint64_t v61 = v69[3];
                  goto LABEL_42;
                case 2u:
                  uint64_t v66 = *v69;
                  uint64_t v68 = v69[1];
                  _OWORD v60[2] = v69[3];
                  uint64_t v61 = v69[5];
                  v60[1] = v69[6];
                  id v48 = v65;
                  id v59 = v65;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_43;
                case 3u:
                case 4u:
                case 5u:
                case 6u:
                  uint64_t v66 = *v69;
                  uint64_t v68 = v69[1];
                  uint64_t v61 = v69[5];
LABEL_42:
                  id v48 = v65;
                  id v49 = v65;
                  swift_bridgeObjectRelease();
LABEL_43:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  break;
                default:
                  uint64_t v57 = v63;
                  sub_1C0B70244((uint64_t)v69, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
                  uint64_t v66 = *v57;
                  uint64_t v68 = v57[1];
                  id v48 = v65;
                  id v58 = v65;
                  swift_bridgeObjectRetain();
                  sub_1C0B6F9C4((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
                  break;
              }
              uint64_t v50 = MEMORY[0x1E4FBB1A0];
              *(void *)(v47 + 56) = MEMORY[0x1E4FBB1A0];
              unint64_t v51 = sub_1BFE9C558();
              uint64_t v52 = v68;
              *(void *)(v47 + 32) = v66;
              *(void *)(v47 + 40) = v52;
              if (v67) {
                uint64_t v53 = 1702195828;
              }
              else {
                uint64_t v53 = 0x65736C6166;
              }
              if (v67) {
                unint64_t v54 = 0xE400000000000000;
              }
              else {
                unint64_t v54 = 0xE500000000000000;
              }
              *(void *)(v47 + 96) = v50;
              *(void *)(v47 + 104) = v51;
              *(void *)(v47 + 64) = v51;
              *(void *)(v47 + 72) = v53;
              *(void *)(v47 + 80) = v54;
              if (v46) {
                uint64_t v55 = 1702195828;
              }
              else {
                uint64_t v55 = 0x65736C6166;
              }
              if (v46) {
                unint64_t v56 = 0xE400000000000000;
              }
              else {
                unint64_t v56 = 0xE500000000000000;
              }
              *(void *)(v47 + 136) = v50;
              *(void *)(v47 + 144) = v51;
              *(void *)(v47 + 112) = v55;
              *(void *)(v47 + 120) = v56;
              sub_1C151F38C();
              sub_1C15197BC();

              swift_bridgeObjectRelease();
              sub_1C0B6F9C4(v77, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
              unint64_t v24 = v80;
              sub_1C0B6F9C4((uint64_t)v80, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem);
              int64_t v13 = v79;
              uint64_t v35 = v82;
              break;
          }
          break;
      }
      v29 += v35;
      --v26;
    }
    while (v26);
    return v83;
  }
  return result;
}

uint64_t sub_1C0B6D8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v55 = type metadata accessor for SportsDataVisualizationResponseData();
  uint64_t v48 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SportsDataVisualizationResponse();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v52 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6F50C(0);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B6ADE4();
  uint64_t v13 = *(void *)(a2 + *(int *)(v12 + 44));
  uint64_t v51 = *(void *)(v13 + 16);
  if (!v51) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v50 = &v11[*(int *)(v8 + 52)];
  uint64_t v49 = v13 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  swift_bridgeObjectRetain();
  unint64_t v14 = 0;
  unint64_t v15 = MEMORY[0x1E4FBC860];
  char v46 = v11;
  uint64_t v47 = v9;
  uint64_t v45 = v13;
  while (1)
  {
    if (v14 >= *(void *)(v13 + 16)) {
      goto LABEL_36;
    }
    sub_1C0B6FCA8(v49 + *(void *)(v9 + 72) * v14, (uint64_t)v11, (uint64_t (*)(void))sub_1C0B6F50C);
    uint64_t v16 = v52;
    sub_1C0B6FCA8((uint64_t)v50, v52, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponse);
    sub_1C0B6F9C4((uint64_t)v11, (uint64_t (*)(void))sub_1C0B6F50C);
    sub_1C060B68C();
    uint64_t v17 = sub_1C151851C();
    sub_1C0B6F9C4(v16, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponse);
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_4:
    if (++v14 == v51)
    {
      swift_bridgeObjectRelease();
      return v15;
    }
  }
  uint64_t v53 = v17;
  unint64_t v54 = v14;
  uint64_t v19 = v17 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
  uint64_t v20 = *(void *)(v48 + 72);
  while (1)
  {
    sub_1C0B6FCA8(v19, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseData);
    sub_1C0B6F5F4();
    uint64_t v21 = sub_1C151851C();
    unint64_t v22 = *(void *)(v21 + 16);
    int64_t v23 = *(void *)(v15 + 16);
    int64_t v24 = v23 + v22;
    if (__OFADD__(v23, v22)) {
      break;
    }
    uint64_t v25 = v21;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v24 <= *(void *)(v15 + 24) >> 1)
    {
      unint64_t v27 = *(void *)(v25 + 16);
      if (!v27) {
        goto LABEL_8;
      }
    }
    else
    {
      if (v23 <= v24) {
        int64_t v28 = v23 + v22;
      }
      else {
        int64_t v28 = v23;
      }
      unint64_t v15 = sub_1C0EE7210(isUniquelyReferenced_nonNull_native, v28, 1, v15);
      unint64_t v27 = *(void *)(v25 + 16);
      if (!v27)
      {
LABEL_8:
        if (v22) {
          goto LABEL_33;
        }
        goto LABEL_9;
      }
    }
    uint64_t v29 = *(void *)(v15 + 16);
    uint64_t v30 = (*(void *)(v15 + 24) >> 1) - v29;
    uint64_t v31 = *(void *)(type metadata accessor for SportsDataVisualizationResponseItem() - 8);
    uint64_t v32 = *(void *)(v31 + 72);
    if (v30 < (uint64_t)v27) {
      goto LABEL_34;
    }
    unint64_t v33 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    unint64_t v34 = v15 + v33 + v32 * v29;
    unint64_t v35 = v25 + v33;
    uint64_t v36 = v32 * v27;
    unint64_t v37 = v34 + v36;
    unint64_t v38 = v35 + v36;
    if (v35 < v37 && v34 < v38) {
      goto LABEL_37;
    }
    swift_arrayInitWithCopy();
    if (v27 < v22) {
      goto LABEL_33;
    }
    uint64_t v40 = *(void *)(v15 + 16);
    BOOL v41 = __OFADD__(v40, v27);
    uint64_t v42 = v40 + v27;
    if (v41) {
      goto LABEL_35;
    }
    *(void *)(v15 + 16) = v42;
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1C0B6F9C4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseData);
    v19 += v20;
    if (!--v18)
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = v46;
      uint64_t v9 = v47;
      uint64_t v13 = v45;
      unint64_t v14 = v54;
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void sub_1C0B6DD88(uint64_t a1)
{
}

void sub_1C0B6DDBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0B6DE24(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1C005E7F4;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1C0B5DC00, 0, 0);
}

uint64_t objectdestroy_43Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0B6DF1C(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1C005E7F4;
  *(_OWORD *)(v4 + 32) = v5;
  *(void *)(v4 + 24) = a1;
  return MEMORY[0x1F4188298](sub_1C0B5E314, 0, 0);
}

void sub_1C0B6DFD0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1BFC9DBE8(255, a3);
    unint64_t v4 = sub_1C151E41C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C0B6E038()
{
  if (!qword_1EB86B450)
  {
    sub_1BFC9DBE8(255, (unint64_t *)&qword_1EB890230);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB86B450);
    }
  }
}

void sub_1C0B6E0B0()
{
  if (!qword_1EB86AEA8)
  {
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86AEA8);
    }
  }
}

uint64_t sub_1C0B6E118@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0B5E5EC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 64), a2, *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), *(void *)(v2 + 96), *(unsigned char *)(v2 + 104), *(void *)(v2 + 112), *(uint64_t **)(v2 + 120));
}

void sub_1C0B6E168()
{
  if (!qword_1EB86BB08)
  {
    sub_1C0B7233C(255, (unint64_t *)&unk_1EB8973F0, (uint64_t)&type metadata for SportsDataVisualization, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86BB08);
    }
  }
}

void *sub_1C0B6E1E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C0B64ED4(a1, *(char **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(char **)(v2 + 64), a2);
}

uint64_t sub_1C0B6E20C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0B6E244@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0B65914(a1, v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], a2, v2[9]);
}

uint64_t sub_1C0B6E278(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0B6E2EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SportsEventStatusResponseEmbed();
  uint64_t v45 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SportsEventStatusResponseData();
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for SportsEventStatusResponse();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)sub_1C018F74C(MEMORY[0x1E4FBC860]);
  uint64_t v41 = *(void *)(a1 + 16);
  if (!v41) {
    return (uint64_t)v12;
  }
  uint64_t v40 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v39 = *(void *)(v9 + 72);
  uint64_t v36 = a1;
  swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  uint64_t v44 = v7;
  unint64_t v37 = v11;
  while (1)
  {
    sub_1C0B6FCA8(v40 + v39 * v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponse);
    sub_1C04C29A8();
    uint64_t v14 = sub_1C151851C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15) {
      break;
    }
LABEL_4:
    ++v13;
    swift_bridgeObjectRelease();
    sub_1C0B6F9C4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponse);
    if (v13 == v41)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v12;
    }
  }
  uint64_t v42 = v14;
  uint64_t v43 = v13;
  uint64_t v16 = v38;
  uint64_t v17 = v14 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
  swift_bridgeObjectRetain();
  uint64_t v46 = *(void *)(v16 + 72);
  while (1)
  {
    sub_1C0B6FCA8(v17, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponseData);
    uint64_t v19 = *v7;
    uint64_t v18 = v7[1];
    uint64_t v20 = (uint64_t)v7;
    uint64_t v21 = (uint64_t)v4;
    sub_1C0B6FCA8(v20, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponseEmbed);
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v47 = v12;
    unint64_t v24 = sub_1BFEF2D8C(v19, v18);
    uint64_t v25 = v12[2];
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26)) {
      break;
    }
    char v28 = v23;
    if (v12[3] >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C1072F7C();
      }
    }
    else
    {
      sub_1C1061E04(v27, isUniquelyReferenced_nonNull_native);
      unint64_t v29 = sub_1BFEF2D8C(v19, v18);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_22;
      }
      unint64_t v24 = v29;
    }
    unint64_t v4 = (char *)v21;
    uint64_t v12 = v47;
    if (v28)
    {
      sub_1C0B6F190(v21, v47[7] + *(void *)(v45 + 72) * v24, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponseEmbed);
    }
    else
    {
      v47[(v24 >> 6) + 8] |= 1 << v24;
      uint64_t v31 = (uint64_t *)(v12[6] + 16 * v24);
      *uint64_t v31 = v19;
      v31[1] = v18;
      sub_1C0B70244(v21, v12[7] + *(void *)(v45 + 72) * v24, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponseEmbed);
      uint64_t v32 = v12[2];
      BOOL v33 = __OFADD__(v32, 1);
      uint64_t v34 = v32 + 1;
      if (v33) {
        goto LABEL_21;
      }
      _OWORD v12[2] = v34;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v44;
    sub_1C0B6F9C4((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponseData);
    v17 += v46;
    if (!--v15)
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = v37;
      uint64_t v13 = v43;
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C0B6E774(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v5 = (void *)*(v2 - 1);
    uint64_t v6 = *v2;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    id v7 = objc_msgSend(v5, sel_identifier);
    uint64_t v8 = sub_1C151E62C();
    uint64_t v10 = v9;

    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v13 = sub_1BFEF2D8C(v8, v10);
    uint64_t v14 = v3[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15)) {
      break;
    }
    char v17 = v12;
    if (v3[3] >= v16)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v12) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1C1072FD0();
        if (v17) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1C1061E58(v16, isUniquelyReferenced_nonNull_native);
      unint64_t v18 = sub_1BFEF2D8C(v8, v10);
      if ((v17 & 1) != (v19 & 1)) {
        goto LABEL_21;
      }
      unint64_t v13 = v18;
      if (v17)
      {
LABEL_3:
        uint64_t v4 = v3[7];
        swift_bridgeObjectRelease();
        *(void *)(v4 + 8 * v13) = v6;
        goto LABEL_4;
      }
    }
    v3[(v13 >> 6) + 8] |= 1 << v13;
    uint64_t v20 = (uint64_t *)(v3[6] + 16 * v13);
    *uint64_t v20 = v8;
    v20[1] = v10;
    *(void *)(v3[7] + 8 * v13) = v6;
    uint64_t v21 = v3[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_20;
    }
    v3[2] = v23;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 += 2;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C0B6E97C@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0B66888(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C0B6E998(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0B6E9EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0B6EA40()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0B6EA78@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  *a2 = *(void *)(v2 + 16);
  a2[1] = v3;
  swift_unknownObjectRetain();
  return swift_bridgeObjectRetain();
}

void *sub_1C0B6EAB0()
{
  return sub_1C0B573B0();
}

void sub_1C0B6EACC()
{
  if (!qword_1EB867BF0)
  {
    sub_1C0B6EBE4(255, (unint64_t *)&qword_1EB86AE80, (void (*)(uint64_t))type metadata accessor for SportsRoster);
    type metadata accessor for SportsDataServiceBatchResourceRequest(255);
    sub_1C0B6EC7C((unint64_t *)&qword_1EB86AEA0, (void (*)(void))sub_1C0B6EC48);
    sub_1C0B6EC7C((unint64_t *)&qword_1EB86AE90, (void (*)(void))sub_1C0B6ED10);
    unint64_t v0 = type metadata accessor for SportsDataServiceResponse();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB867BF0);
    }
  }
}

void sub_1C0B6EBE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151E41C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0B6EC48()
{
  return sub_1C001A5E0(&qword_1EB8659C8, (void (*)(uint64_t))type metadata accessor for SportsRoster);
}

uint64_t sub_1C0B6EC7C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0B6EBE4(255, (unint64_t *)&qword_1EB86AE80, (void (*)(uint64_t))type metadata accessor for SportsRoster);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0B6ED10()
{
  return sub_1C001A5E0(&qword_1EB8659C0, (void (*)(uint64_t))type metadata accessor for SportsRoster);
}

uint64_t sub_1C0B6ED44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0B57600(*(id *)(v2 + 16), a1, a2);
}

void sub_1C0B6ED60(void *a1)
{
  sub_1C0B577AC(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C0B6ED68()
{
  return sub_1C0A4E734(*(void **)(v0 + 16), *(uint64_t **)(v0 + 24));
}

void sub_1C0B6ED88(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for SportsDataServiceBatchResourceRequest(0) - 8);
  sub_1C0B6B184(a1, a2, v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a3);
}

uint64_t objectdestroy_79Tm_0()
{
  uint64_t v1 = (int *)(type metadata accessor for SportsDataServiceBatchResourceRequest(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + v1[7];
  uint64_t v4 = sub_1C1517F3C();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return swift_deallocObject();
}

uint64_t sub_1C0B6EF40(uint64_t a1)
{
  return sub_1C0B72148(a1, type metadata accessor for SportsDataServiceBatchResourceRequest, (uint64_t (*)(uint64_t, uint64_t))sub_1C0A4E7BC);
}

unint64_t sub_1C0B6EF6C()
{
  unint64_t result = qword_1EA1A3F18;
  if (!qword_1EA1A3F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA1A3F18);
  }
  return result;
}

uint64_t sub_1C0B6EFC0()
{
  return sub_1C0B6A5C0(*(void **)(v0 + 16));
}

void sub_1C0B6EFDC(uint64_t a1)
{
}

uint64_t sub_1C0B6F024()
{
  return sub_1C001A5E0(&qword_1EB867C48, (void (*)(uint64_t))type metadata accessor for SportsEventStatusResponse);
}

uint64_t sub_1C0B6F058()
{
  return sub_1C001A5E0(&qword_1EB867C40, (void (*)(uint64_t))type metadata accessor for SportsEventStatusResponse);
}

uint64_t sub_1C0B6F08C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0B7233C(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0B6F0E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1C005E7F4;
  return sub_1C0B66B24(a1, a2, v2);
}

uint64_t sub_1C0B6F190(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0B6F1F8()
{
  return sub_1C0A4F5B8();
}

uint64_t sub_1C0B6F218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SportsDataServiceRequest(0) - 8);
  return sub_1C0B52230(*(void *)a1, *(void *)(a1 + 8), v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponse, (void (*)(uint64_t))sub_1C0B6F024, (uint64_t (*)(void))sub_1C0B6EFDC, a2, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponse);
}

uint64_t sub_1C0B6F2F8()
{
  return sub_1C0A4EA90(*(void *)(v0 + 16));
}

char *sub_1C0B6F318(uint64_t a1, uint64_t a2)
{
  return sub_1C0B715C0(a1, a2);
}

uint64_t sub_1C0B6F334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SportsDataServiceURLRequest(0) - 8);
  return sub_1C0B5105C(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponse, (void (*)(uint64_t))sub_1C0B6F024, (uint64_t (*)(void))sub_1C0B6EFDC, a2, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponse);
}

uint64_t sub_1C0B6F418(void *a1, uint64_t a2)
{
  return sub_1C0B70FF4(a1, a2, (uint64_t)&unk_1F1BEB848, sub_1C0B6EFDC, (uint64_t)sub_1C0B6F464);
}

uint64_t sub_1C0B6F464(uint64_t a1, uint64_t a2)
{
  return sub_1C0B70160(a1, a2, (uint64_t (*)(unint64_t, unint64_t, void))sub_1C0B4AF70);
}

uint64_t sub_1C0B6F490()
{
  return sub_1C0A4F694(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1C0B6F4B0(void *a1, uint64_t a2)
{
  return sub_1C0B702DC(a1, a2, (uint64_t (*)(void, uint64_t, unint64_t))sub_1C0B523BC);
}

uint64_t sub_1C0B6F4E0(uint64_t a1)
{
  return sub_1C0B72148(a1, type metadata accessor for SportsDataServiceResourceRequest, (uint64_t (*)(uint64_t, uint64_t))sub_1C0A4F728);
}

void sub_1C0B6F50C(uint64_t a1)
{
}

void sub_1C0B6F554(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    type metadata accessor for SportsDataServiceRequest(255);
    a4();
    a5();
    unint64_t v8 = type metadata accessor for SportsDataServiceResponse();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0B6F5F4()
{
  if (!qword_1EB863D90)
  {
    type metadata accessor for SportsDataVisualizationResponseItem();
    sub_1C001A5E0(&qword_1EB86A3E8, (void (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseItem);
    sub_1C001A5E0(&qword_1EB86A3E0, (void (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseItem);
    unint64_t v0 = sub_1C151852C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863D90);
    }
  }
}

uint64_t sub_1C0B6F6C0()
{
  return sub_1C0B5C2A0();
}

uint64_t sub_1C0B6F6E0(uint64_t (*a1)(), uint64_t a2)
{
  return sub_1C0B5C3FC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(char **)(v2 + 32), *(unsigned char *)(v2 + 40));
}

void sub_1C0B6F704()
{
  if (!qword_1EB86B270)
  {
    sub_1C0B6F774();
    type metadata accessor for SportsFeaturedEventsResource();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB86B270);
    }
  }
}

void sub_1C0B6F774()
{
  if (!qword_1EB86B268)
  {
    sub_1C0B6DDBC(255, &qword_1EB86B280, (uint64_t (*)(uint64_t))sub_1C0B6ADE4, MEMORY[0x1E4FBB320]);
    sub_1BFEE7F14(255, (unint64_t *)&qword_1EB879FD0, (unint64_t *)&qword_1EB87A930, MEMORY[0x1E4FBC0E8], MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB86B268);
    }
  }
}

uint64_t objectdestroy_8Tm_1()
{
  sub_1C0254C7C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1C0B6F888@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1C0B5CB24(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), a2);
}

void sub_1C0B6F8AC()
{
  if (!qword_1EB863DF0)
  {
    sub_1C0B7233C(255, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1BFD4A8EC((unint64_t *)&qword_1EB879F50);
    sub_1BFD4A8EC((unint64_t *)&qword_1EB85DF50);
    unint64_t v0 = sub_1C1518A3C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863DF0);
    }
  }
}

uint64_t sub_1C0B6F9C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C0B6FA24()
{
  if (!qword_1EB862950)
  {
    sub_1C0B7233C(255, &qword_1EB861428, (uint64_t)&type metadata for SportsFeaturedAffinityEvent, MEMORY[0x1E4FBB320]);
    sub_1C0B6FBAC(&qword_1EB863340, (void (*)(void))sub_1C0B6FB58);
    sub_1C0B6FBAC((unint64_t *)&unk_1EB863330, (void (*)(void))sub_1C0B6FC3C);
    unint64_t v0 = sub_1C1518A3C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB862950);
    }
  }
}

unint64_t sub_1C0B6FB58()
{
  unint64_t result = qword_1EB863028;
  if (!qword_1EB863028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863028);
  }
  return result;
}

uint64_t sub_1C0B6FBAC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0B7233C(255, &qword_1EB861428, (uint64_t)&type metadata for SportsFeaturedAffinityEvent, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0B6FC3C()
{
  unint64_t result = qword_1EB863018;
  if (!qword_1EB863018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863018);
  }
  return result;
}

uint64_t sub_1C0B6FC90()
{
  return sub_1C0B707A8();
}

uint64_t sub_1C0B6FCA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0B6FD10()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SportsDataServiceBatchRequest(0) - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0B6FE00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SportsDataServiceBatchRequest(0) - 8);
  sub_1C0B6FCA8(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2, type metadata accessor for SportsDataServiceBatchRequest);
  sub_1C0B6ADE4();
  *(void *)(a2 + *(int *)(v6 + 44)) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0B6FEA8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0B6FEE0(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_1C0B6FF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SportsDataServiceRequest(0) - 8);
  return sub_1C0B52230(*(void *)a1, *(void *)(a1 + 8), v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponse, (void (*)(uint64_t))sub_1C0B6AE5C, (uint64_t (*)(void))sub_1C0B6F50C, a2, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponse);
}

uint64_t sub_1C0B70004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SportsDataServiceURLRequest(0) - 8);
  return sub_1C0B5105C(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponse, (void (*)(uint64_t))sub_1C0B6AE5C, (uint64_t (*)(void))sub_1C0B6F50C, a2, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponse);
}

uint64_t sub_1C0B700E8(void *a1, uint64_t a2)
{
  return sub_1C0B70FF4(a1, a2, (uint64_t)&unk_1F1BEBA00, sub_1C0B6F50C, (uint64_t)sub_1C0B70134);
}

uint64_t sub_1C0B70134(uint64_t a1, uint64_t a2)
{
  return sub_1C0B70160(a1, a2, (uint64_t (*)(unint64_t, unint64_t, void))sub_1C0B4C648);
}

uint64_t sub_1C0B70160(uint64_t a1, uint64_t a2, uint64_t (*a3)(unint64_t, unint64_t, void))
{
  uint64_t v5 = *(void *)(sub_1C1515FDC() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for SportsDataServiceURLRequest(0) - 8);
  return a3(v3 + v6, v3 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), 0);
}

uint64_t sub_1C0B70244(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0B702B0(void *a1, uint64_t a2)
{
  return sub_1C0B702DC(a1, a2, (uint64_t (*)(void, uint64_t, unint64_t))sub_1C0B53CCC);
}

uint64_t sub_1C0B702DC(void *a1, uint64_t a2, uint64_t (*a3)(void, uint64_t, unint64_t))
{
  uint64_t v7 = *(void *)(type metadata accessor for SportsDataServiceRequest(0) - 8);
  return a3(*a1, a2, v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
}

uint64_t sub_1C0B70374()
{
  return sub_1C0B56F68(v0);
}

void sub_1C0B703C0(uint64_t a1)
{
}

uint64_t sub_1C0B70408()
{
  return sub_1C001A5E0(&qword_1EB868700, (void (*)(uint64_t))type metadata accessor for SportsFeaturedEventsResource);
}

uint64_t sub_1C0B7043C()
{
  return sub_1C001A5E0(&qword_1EB8686F8, (void (*)(uint64_t))type metadata accessor for SportsFeaturedEventsResource);
}

uint64_t sub_1C0B70474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SportsDataServiceRequest(0) - 8);
  return sub_1C0B52230(*(void *)a1, *(void *)(a1 + 8), v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t (*)(void))type metadata accessor for SportsFeaturedEventsResource, (void (*)(uint64_t))sub_1C0B70408, (uint64_t (*)(void))sub_1C0B703C0, a2, (uint64_t (*)(void))type metadata accessor for SportsFeaturedEventsResource);
}

uint64_t sub_1C0B7055C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SportsDataServiceURLRequest(0) - 8);
  return sub_1C0B5105C(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t (*)(void))type metadata accessor for SportsFeaturedEventsResource, (void (*)(uint64_t))sub_1C0B70408, (uint64_t (*)(void))sub_1C0B703C0, a2, (uint64_t (*)(void))type metadata accessor for SportsFeaturedEventsResource);
}

uint64_t sub_1C0B70640(void *a1, uint64_t a2)
{
  return sub_1C0B70FF4(a1, a2, (uint64_t)&unk_1F1BEBB18, sub_1C0B703C0, (uint64_t)sub_1C0B7068C);
}

uint64_t sub_1C0B7068C(uint64_t a1, uint64_t a2)
{
  return sub_1C0B70160(a1, a2, (uint64_t (*)(unint64_t, unint64_t, void))sub_1C0B4CAC0);
}

uint64_t sub_1C0B706BC(void *a1, uint64_t a2)
{
  return sub_1C0B702DC(a1, a2, (uint64_t (*)(void, uint64_t, unint64_t))sub_1C0B54564);
}

uint64_t sub_1C0B706EC()
{
  return sub_1C02529E4(v0);
}

uint64_t sub_1C0B7070C(uint64_t a1)
{
  return sub_1C0B70BE4(a1, (uint64_t (*)(uint64_t, unint64_t))sub_1C0252950);
}

uint64_t sub_1C0B70738(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C0B6DDBC(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0B707A8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v5 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  long long v6 = v5;
  uint64_t v7 = v2;
  char v8 = v3;
  return sub_1C0250D24((uint64_t)&v6);
}

uint64_t sub_1C0B70818()
{
  return sub_1C0B56F68(v0);
}

void sub_1C0B70864(uint64_t a1)
{
}

uint64_t sub_1C0B708AC()
{
  return sub_1C001A5E0(&qword_1EA1A3F38, (void (*)(uint64_t))type metadata accessor for SportsSyncingConfigV2Resource);
}

uint64_t sub_1C0B708E0()
{
  return sub_1C001A5E0(&qword_1EA1A3F40, (void (*)(uint64_t))type metadata accessor for SportsSyncingConfigV2Resource);
}

uint64_t sub_1C0B70918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0B70DEC(a1, (void (*)(void))type metadata accessor for SportsSyncingConfigV2Resource, (void (*)(uint64_t))sub_1C0B708AC, (uint64_t (*)(void))sub_1C0B70864, a2);
}

uint64_t sub_1C0B70974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0B70EF8(a1, (void (*)(void))type metadata accessor for SportsSyncingConfigV2Resource, (void (*)(void))sub_1C0B708AC, (uint64_t (*)(void))sub_1C0B70864, a2);
}

uint64_t sub_1C0B709CC(void *a1, uint64_t a2)
{
  return sub_1C0B70FF4(a1, a2, (uint64_t)&unk_1F1BEBC58, sub_1C0B70864, (uint64_t)sub_1C0B70A18);
}

uint64_t sub_1C0B70A18(uint64_t a1, uint64_t a2)
{
  return sub_1C0B70160(a1, a2, (uint64_t (*)(unint64_t, unint64_t, void))sub_1C0B4C1D0);
}

uint64_t sub_1C0B70A48(void *a1, uint64_t a2)
{
  return sub_1C0B702DC(a1, a2, (uint64_t (*)(void, uint64_t, unint64_t))sub_1C0B53494);
}

uint64_t sub_1C0B70A78()
{
  return sub_1C0252974(v0);
}

uint64_t objectdestroy_182Tm()
{
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = sub_1C1517F3C();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  return swift_deallocObject();
}

uint64_t sub_1C0B70BE4(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t))
{
  sub_1C0B6DDBC(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  return a2(a1, v2+ ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80)));
}

uint64_t sub_1C0B70C98()
{
  return sub_1C0B56F68(v0);
}

void sub_1C0B70CE4(uint64_t a1)
{
}

uint64_t sub_1C0B70D2C()
{
  return sub_1C001A5E0(&qword_1EA1A3F58, (void (*)(uint64_t))type metadata accessor for SportsSyncingConfigResource);
}

uint64_t sub_1C0B70D60()
{
  return sub_1C001A5E0(&qword_1EA1A3F60, (void (*)(uint64_t))type metadata accessor for SportsSyncingConfigResource);
}

uint64_t sub_1C0B70D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0B70DEC(a1, (void (*)(void))type metadata accessor for SportsSyncingConfigResource, (void (*)(uint64_t))sub_1C0B70D2C, (uint64_t (*)(void))sub_1C0B70CE4, a2);
}

uint64_t sub_1C0B70DEC@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, void (*a3)(uint64_t)@<X3>, uint64_t (*a4)(void)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v11 = *(void *)(type metadata accessor for SportsDataServiceRequest(0) - 8);
  return sub_1C0B52100(*(void *)a1, *(void *)(a1 + 8), v5 + ((*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a2, a3, a4, a5);
}

uint64_t sub_1C0B70EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0B70EF8(a1, (void (*)(void))type metadata accessor for SportsSyncingConfigResource, (void (*)(void))sub_1C0B70D2C, (uint64_t (*)(void))sub_1C0B70CE4, a2);
}

uint64_t sub_1C0B70EF8@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, void (*a3)(void)@<X3>, uint64_t (*a4)(void)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v11 = *(void *)(type metadata accessor for SportsDataServiceURLRequest(0) - 8);
  return sub_1C0B50E7C(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), v5 + ((*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a2, a3, a4, a5);
}

uint64_t sub_1C0B70FAC(void *a1, uint64_t a2)
{
  return sub_1C0B70FF4(a1, a2, (uint64_t)&unk_1F1BEBD98, sub_1C0B70CE4, (uint64_t)sub_1C0B71114);
}

uint64_t sub_1C0B70FF4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v11 = *(void *)(type metadata accessor for SportsDataServiceURLRequest(0) - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)(sub_1C1515FDC() - 8);
  return sub_1C0B51A9C(a1, a2, *(unsigned char *)(v5 + 16), v5 + v12, *(void *)(v5 + v13), v5 + ((v13 + *(unsigned __int8 *)(v14 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), a3, a4, a5);
}

uint64_t sub_1C0B71114(uint64_t a1, uint64_t a2)
{
  return sub_1C0B70160(a1, a2, (uint64_t (*)(unint64_t, unint64_t, void))sub_1C0B4BD58);
}

uint64_t sub_1C0B71144(void *a1, uint64_t a2)
{
  return sub_1C0B702DC(a1, a2, (uint64_t (*)(void, uint64_t, unint64_t))sub_1C0B53440);
}

uint64_t sub_1C0B71174()
{
  return sub_1C02528E0(v0);
}

uint64_t sub_1C0B71194()
{
  return sub_1C0B56DA4(v0);
}

unint64_t sub_1C0B711B0()
{
  unint64_t result = qword_1EB867C20;
  if (!qword_1EB867C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867C20);
  }
  return result;
}

unint64_t sub_1C0B71204()
{
  unint64_t result = qword_1EB867C18;
  if (!qword_1EB867C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867C18);
  }
  return result;
}

uint64_t sub_1C0B7125C(void *a1, uint64_t a2)
{
  return sub_1C0B71840(a1, a2, type metadata accessor for SportsDataServiceRequest, (uint64_t (*)(void, void, void, uint64_t, unint64_t))sub_1C0B51FC4);
}

uint64_t sub_1C0B712A4(void *a1, uint64_t a2)
{
  return sub_1C0B71840(a1, a2, type metadata accessor for SportsDataServiceURLRequest, (uint64_t (*)(void, void, void, uint64_t, unint64_t))sub_1C0B50CB0);
}

uint64_t sub_1C0B712E8(uint64_t a1, uint64_t a2)
{
  return sub_1C0B71AC0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, unint64_t, void, unint64_t))sub_1C0B51690);
}

uint64_t sub_1C0B71318(uint64_t a1, uint64_t a2)
{
  return sub_1C0B70160(a1, a2, (uint64_t (*)(unint64_t, unint64_t, void))sub_1C0B4B8A0);
}

uint64_t sub_1C0B71348(void *a1, uint64_t a2)
{
  return sub_1C0B702DC(a1, a2, (uint64_t (*)(void, uint64_t, unint64_t))sub_1C0B52C3C);
}

uint64_t sub_1C0B71378()
{
  return sub_1C0B56C64(v0);
}

uint64_t sub_1C0B71394()
{
  return sub_1C0B56B24(v0);
}

uint64_t sub_1C0B713B0()
{
  return sub_1C0B569E4(v0);
}

uint64_t sub_1C0B713CC()
{
  return sub_1C0B568A4(v0);
}

uint64_t sub_1C0B713E8()
{
  return sub_1C0B566E0(v0);
}

uint64_t sub_1C0B71404()
{
  return sub_1C0B5650C(v0);
}

uint64_t sub_1C0B71420()
{
  return sub_1C0B56294(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1C0B7143C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    type metadata accessor for SportsDataServiceRequest(255);
    a3();
    a4();
    unint64_t v7 = type metadata accessor for SportsDataServiceResponse();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0B714D0()
{
  unint64_t result = qword_1EB868408;
  if (!qword_1EB868408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868408);
  }
  return result;
}

unint64_t sub_1C0B71524()
{
  unint64_t result = qword_1EB868400;
  if (!qword_1EB868400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868400);
  }
  return result;
}

uint64_t sub_1C0B7157C(void *a1, uint64_t a2)
{
  return sub_1C0B71840(a1, a2, type metadata accessor for SportsDataServiceRequest, (uint64_t (*)(void, void, void, uint64_t, unint64_t))sub_1C0B51E74);
}

char *sub_1C0B715C0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1C1515FDC() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for SportsDataServiceURLRequest(0) - 8);
  return sub_1C0A4EB00(a1, a2, v2 + v6, v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)));
}

uint64_t objectdestroy_99Tm()
{
  uint64_t v1 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  uint64_t v3 = sub_1C1515FDC();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  v4(v2 + v1[5], v3);
  v4(v2 + v1[6], v3);
  uint64_t v5 = (uint64_t *)(v2 + v1[7]);
  if (v5[3])
  {
    sub_1BFE95664(*v5, v5[1]);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0B71800(void *a1, uint64_t a2)
{
  return sub_1C0B71840(a1, a2, type metadata accessor for SportsDataServiceURLRequest, (uint64_t (*)(void, void, void, uint64_t, unint64_t))sub_1C0B50AC8);
}

uint64_t sub_1C0B71840(void *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void, void, void, uint64_t, unint64_t))
{
  uint64_t v8 = *(void *)(a3(0) - 8);
  return a4(*a1, a1[1], a1[2], a2, v4 + ((*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)));
}

uint64_t objectdestroy_102Tm_0()
{
  uint64_t v1 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 17) & ~v2;
  uint64_t v10 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  v6(v0 + v3, v4);
  v6(v0 + v3 + v1[5], v4);
  v6(v0 + v3 + v1[6], v4);
  uint64_t v8 = (uint64_t *)(v0 + v3 + v1[7]);
  if (v8[3])
  {
    sub_1BFE95664(*v8, v8[1]);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  v6(v0 + ((((v10 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7), v4);
  return swift_deallocObject();
}

uint64_t sub_1C0B71A94(uint64_t a1, uint64_t a2)
{
  return sub_1C0B71AC0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, unint64_t, void, unint64_t))sub_1C0B51284);
}

uint64_t sub_1C0B71AC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, unint64_t, void, unint64_t))
{
  uint64_t v7 = *(void *)(type metadata accessor for SportsDataServiceURLRequest(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(sub_1C1515FDC() - 8);
  return a3(a1, a2, *(unsigned __int8 *)(v3 + 16), v3 + v8, *(void *)(v3 + v9), v3 + ((v9 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)));
}

uint64_t objectdestroy_96Tm()
{
  uint64_t v1 = sub_1C1515FDC();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(*((void *)v5 - 1) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  uint64_t v7 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v7(v0 + v3, v1);
  v7(v0 + v6, v1);
  v7(v0 + v6 + v5[5], v1);
  v7(v0 + v6 + v5[6], v1);
  unint64_t v8 = (uint64_t *)(v0 + v6 + v5[7]);
  if (v8[3])
  {
    sub_1BFE95664(*v8, v8[1]);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0B71D70(uint64_t a1, uint64_t a2)
{
  return sub_1C0B70160(a1, a2, (uint64_t (*)(unint64_t, unint64_t, void))sub_1C0B4B3E8);
}

uint64_t objectdestroy_93Tm()
{
  uint64_t v1 = *(void *)(type metadata accessor for SportsDataServiceRequest(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v0 + v2;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v9 = v3 + *(int *)(type metadata accessor for SportsDataServiceResourceRequest(0) + 20);
      uint64_t v10 = sub_1C1517F3C();
      uint64_t v11 = *(void *)(v10 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      }
      break;
    case 1:
      uint64_t v12 = sub_1C1515FDC();
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v0 + v2, v12);
      break;
    case 0:
      uint64_t v5 = sub_1C1515FDC();
      unint64_t v6 = *(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      v6(v0 + v2, v5);
      uint64_t v7 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
      v6(v3 + v7[5], v5);
      v6(v3 + v7[6], v5);
      unint64_t v8 = (uint64_t *)(v3 + v7[7]);
      if (v8[3])
      {
        sub_1BFE95664(*v8, v8[1]);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      break;
  }
  return swift_deallocObject();
}

uint64_t sub_1C0B71FE8(void *a1, uint64_t a2)
{
  return sub_1C0B702DC(a1, a2, (uint64_t (*)(void, uint64_t, unint64_t))sub_1C0B52424);
}

uint64_t objectdestroy_111Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for SportsDataServiceResourceRequest(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + v1[7];
  uint64_t v4 = sub_1C1517F3C();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return swift_deallocObject();
}

uint64_t sub_1C0B72148(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a3(a1, v6);
}

uint64_t sub_1C0B721D0()
{
  return sub_1C0252850(v0);
}

uint64_t sub_1C0B721F0(uint64_t a1)
{
  return sub_1C0B70BE4(a1, (uint64_t (*)(uint64_t, unint64_t))sub_1C02528C0);
}

uint64_t sub_1C0B7221C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0B72254(uint64_t a1, long long *a2)
{
  uint64_t v6 = *(void *)(v2 + 32);
  char v7 = *(unsigned char *)(v2 + 40);
  uint64_t v8 = swift_task_alloc();
  long long v9 = *(_OWORD *)(v2 + 16);
  *(void *)(v3 + 16) = v8;
  *(void *)uint64_t v8 = v3;
  *(void *)(v8 + 8) = sub_1C005E7F4;
  *(unsigned char *)(v8 + 96) = v7;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = v6;
  long long v10 = *a2;
  *(_OWORD *)(v8 + 32) = v9;
  *(_OWORD *)(v8 + 48) = v10;
  *(void *)(v8 + 64) = *((void *)a2 + 2);
  *(unsigned char *)(v8 + 97) = *((unsigned char *)a2 + 24);
  return MEMORY[0x1F4188298](sub_1C0B54ED4, 0, 0);
}

void sub_1C0B7233C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C0B72394()
{
  return sub_1C0B6F1F8();
}

uint64_t sub_1C0B723AC()
{
  return sub_1C0B6F2F8();
}

uint64_t sub_1C0B723C4()
{
  return sub_1C0B6F490();
}

uint64_t sub_1C0B723DC@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0B6E97C(a1, a2);
}

char *sub_1C0B723F4(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v18 = sub_1C151759C();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (double *)((char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView;
  id v23 = objc_allocWithZone(MEMORY[0x1E4FB1BE0]);
  unint64_t v24 = v8;
  *(void *)&v8[v22] = objc_msgSend(v23, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *uint64_t v21 = a5;
  v21[1] = a6;
  void v21[2] = a7;
  v21[3] = a8;
  (*(void (**)(double *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x1E4FAB6B8], v18);
  id v25 = objc_allocWithZone((Class)sub_1C15177EC());
  *(void *)&v24[OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_columnDebugView] = sub_1C15177DC();

  v34.id receiver = v24;
  v34.super_class = ObjectType;
  BOOL v26 = (char *)objc_msgSendSuper2(&v34, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v27 = OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView;
  char v28 = *(void **)&v26[OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView];
  unint64_t v29 = v26;
  objc_msgSend(v29, sel_addSubview_, v28);
  objc_msgSend(v29, sel_addSubview_, *(void *)&v29[OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_columnDebugView]);
  id v30 = v28;
  sub_1C151F72C();
  objc_msgSend(v30, sel_setFrame_);

  uint64_t v31 = *(void **)&v26[v27];
  objc_msgSend(v31, sel_setClipsToBounds_, 0);
  objc_msgSend(v31, sel_setShowsVerticalScrollIndicator_, 0);
  id v32 = v31;
  objc_msgSend(v32, sel_setShowsHorizontalScrollIndicator_, 0);

  return v29;
}

id sub_1C0B72724()
{
  v14.id receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, sel_layoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView];
  objc_msgSend(v1, sel_frame);
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  objc_msgSend(v0, sel_bounds);
  CGFloat v10 = CGRectGetWidth(v15) * 0.5;
  objc_msgSend(v1, sel_bounds);
  CGFloat Width = CGRectGetWidth(v16);
  MEMORY[0x1C18C72C0](v10 - Width * 0.5, v3, v5, v7, v9);
  objc_msgSend(v1, sel_setFrame_);
  uint64_t v12 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_columnDebugView];
  objc_msgSend(v1, sel_frame);
  return objc_msgSend(v12, sel_setFrame_);
}

uint64_t type metadata accessor for DebugGroupLayoutView()
{
  return self;
}

uint64_t sub_1C0B72914()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView), sel_subviews));
  sub_1C0063B40();
  unint64_t v2 = sub_1C151EBCC();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C15204BC();
  uint64_t v3 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1C18C7CB0](i, v2);
      }
      else {
        id v6 = *(id *)(v2 + 8 * i + 32);
      }
      double v7 = v6;
      swift_getObjectType();
      if (swift_conformsToProtocol2()) {
        double v8 = v7;
      }
      else {
        double v8 = 0;
      }
      if (v8)
      {
        swift_getObjectType();
        sub_1C151C26C();
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_1C0B72A80()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView), sel_subviews));
  sub_1C0063B40();
  unint64_t v2 = sub_1C151EBCC();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v3)
    {
LABEL_3:
      if (v3 < 1)
      {
        __break(1u);
      }
      else
      {
        for (uint64_t i = 0; i != v3; ++i)
        {
          if ((v2 & 0xC000000000000001) != 0) {
            id v5 = (id)MEMORY[0x1C18C7CB0](i, v2);
          }
          else {
            id v5 = *(id *)(v2 + 8 * i + 32);
          }
          id v6 = v5;
          id v10 = v5;
          sub_1C0B72D04();
          id v7 = v6;
          if (swift_dynamicCast())
          {
            sub_1BFC773DC(v8, (uint64_t)v11);
            __swift_project_boxed_opaque_existential_1(v11, v11[3]);
            sub_1C151CB0C();

            __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
          }
          else
          {
            uint64_t v9 = 0;
            memset(v8, 0, sizeof(v8));

            sub_1C0B72D5C((uint64_t)v8);
          }
        }
        swift_bridgeObjectRelease();
      }
      return;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
}

void sub_1C0B72C54()
{
}

void sub_1C0B72C78()
{
  sub_1C0B72E10(&qword_1EA1A3F90);
  JUMPOUT(0x1C18C4650);
}

uint64_t sub_1C0B72CD0()
{
  return sub_1C0B72E10(&qword_1EA1A3F88);
}

unint64_t sub_1C0B72D04()
{
  unint64_t result = qword_1EB85C940;
  if (!qword_1EB85C940)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB85C940);
  }
  return result;
}

uint64_t sub_1C0B72D5C(uint64_t a1)
{
  sub_1C0B72DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C0B72DB8()
{
  if (!qword_1EB85C948)
  {
    sub_1C0B72D04();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85C948);
    }
  }
}

uint64_t sub_1C0B72E10(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DebugGroupLayoutView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0B72E50()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  switch(*(unsigned char *)(v0 + 32))
  {
    case 1:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000010;
      sub_1BFFBE5C8();
      sub_1BFED9C20();
      sub_1BFE99E40();
      sub_1C151E55C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1BFFBE5C8();
      sub_1C151E55C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      goto LABEL_10;
    case 2:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0x6465726975716552;
      sub_1C151E80C();
      sub_1C151E80C();
      break;
    case 3:
      if (*(void *)(v0 + 24))
      {
        sub_1C151E80C();
        sub_1C151E80C();
      }
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0x6465726975716552;
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      if (v1)
      {
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
      }
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
LABEL_10:
      swift_bridgeObjectRelease();
      break;
    default:
      unint64_t v4 = 0;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C0081EF8();
      sub_1C151EFCC();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1BFD78FAC(v1, v2);
      break;
  }
  return v4;
}

uint64_t destroy for FormatBindResult.FailureReason(uint64_t a1)
{
  return sub_1BFF77308(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for FormatBindResult.FailureReason(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1BFF7D1D4(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FormatBindResult.FailureReason(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1BFF7D1D4(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  unint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1BFF77308(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FormatBindResult.FailureReason(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1BFF77308(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatBindResult.FailureReason(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatBindResult.FailureReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C0B734A4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatBindResult.FailureReason()
{
  return &type metadata for FormatBindResult.FailureReason;
}

uint64_t initializeWithCopy for FormatBindResult(uint64_t a1, uint64_t *a2)
{
  unsigned int v3 = *((unsigned __int8 *)a2 + 32);
  if (v3 > 3)
  {
    long long v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  }
  else
  {
    uint64_t v4 = *a2;
    unint64_t v5 = a2[1];
    uint64_t v6 = a2[2];
    uint64_t v7 = a2[3];
    sub_1BFF7D1D4(*a2, v5, v6, v7, v3);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = v3;
  }
  return a1;
}

uint64_t assignWithCopy for FormatBindResult(uint64_t a1, long long *a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
  unsigned int v5 = *((unsigned __int8 *)a2 + 32);
  if (v4 > 3)
  {
    if (v5 <= 3)
    {
      uint64_t v15 = *(void *)a2;
      unint64_t v16 = *((void *)a2 + 1);
      uint64_t v18 = *((void *)a2 + 2);
      uint64_t v17 = *((void *)a2 + 3);
      sub_1BFF7D1D4(*(void *)a2, v16, v18, v17, v5);
      *(void *)a1 = v15;
      *(void *)(a1 + 8) = v16;
      *(void *)(a1 + 16) = v18;
      *(void *)(a1 + 24) = v17;
      *(unsigned char *)(a1 + 32) = v5;
      return a1;
    }
LABEL_7:
    long long v19 = *a2;
    long long v20 = a2[1];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)a1 = v19;
    *(_OWORD *)(a1 + 16) = v20;
    return a1;
  }
  if (v5 > 3)
  {
    sub_1BFF77308(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), v4);
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *((void *)a2 + 1);
  uint64_t v9 = *((void *)a2 + 2);
  uint64_t v8 = *((void *)a2 + 3);
  sub_1BFF7D1D4(*(void *)a2, v7, v9, v8, v5);
  uint64_t v10 = *(void *)a1;
  unint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v8;
  char v14 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v5;
  sub_1BFF77308(v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for FormatBindResult(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 > 3) {
    goto LABEL_5;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 32);
  if (v5 > 3)
  {
    sub_1BFF77308(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), v4);
LABEL_5:
    long long v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    return a1;
  }
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 32) = v5;
  sub_1BFF77308(v6, v7, v8, v9, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatBindResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 3) {
    unsigned int v4 = -1;
  }
  else {
    unsigned int v4 = v3 ^ 0xFF;
  }
  if (v4 + 1 >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FormatBindResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = ~(_BYTE)a2;
    }
  }
  return result;
}

uint64_t sub_1C0B7372C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 32);
  if (v1 > 3) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C0B73740(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 32) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBindResult()
{
  return &type metadata for FormatBindResult;
}

uint64_t PuzzleMenuConfig.init(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (!*(void *)(a1 + 16))
  {
    object = 0;
    uint64_t countAndFlagsBits = 0;
    goto LABEL_22;
  }
  unint64_t v4 = sub_1BFEF2D8C(25705, 0xE200000000000000);
  if ((v5 & 1) == 0)
  {
    uint64_t countAndFlagsBits = 0;
    object = 0;
    if (*(void *)(a1 + 16)) {
      goto LABEL_13;
    }
LABEL_22:
    uint64_t v13 = 0;
    uint64_t v12 = 0;
    goto LABEL_23;
  }
  sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v90);
  int v6 = swift_dynamicCast();
  if (v6) {
    uint64_t countAndFlagsBits = v89[0]._countAndFlagsBits;
  }
  else {
    uint64_t countAndFlagsBits = 0;
  }
  if (v6) {
    object = v89[0]._object;
  }
  else {
    object = 0;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_22;
  }
LABEL_13:
  unint64_t v9 = sub_1BFEF2D8C(1852793705, 0xE400000000000000);
  if (v10)
  {
    sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v9, (uint64_t)&v90);
    int v11 = swift_dynamicCast();
    if (v11) {
      uint64_t v12 = v89[0]._countAndFlagsBits;
    }
    else {
      uint64_t v12 = 0;
    }
    if (v11) {
      uint64_t v13 = v89[0]._object;
    }
    else {
      uint64_t v13 = 0;
    }
    if (!*(void *)(a1 + 16))
    {
LABEL_23:
      uint64_t v83 = 0;
      uint64_t v84 = 0;
      if (*(void *)(a1 + 16)) {
        goto LABEL_24;
      }
LABEL_52:
      uint64_t v81 = 0;
      uint64_t v82 = 0;
      goto LABEL_53;
    }
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    if (!*(void *)(a1 + 16)) {
      goto LABEL_23;
    }
  }
  unint64_t v24 = sub_1BFEF2D8C(0xD000000000000012, 0x80000001C161DA50);
  if ((v25 & 1) == 0) {
    goto LABEL_23;
  }
  sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v24, (uint64_t)&v90);
  int v26 = swift_dynamicCast();
  if (v26) {
    uint64_t v27 = v89[0]._countAndFlagsBits;
  }
  else {
    uint64_t v27 = 0;
  }
  if (v26) {
    char v28 = v89[0]._object;
  }
  else {
    char v28 = 0;
  }
  uint64_t v83 = v28;
  uint64_t v84 = v27;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_52;
  }
LABEL_24:
  unint64_t v14 = sub_1BFEF2D8C(0xD000000000000010, 0x80000001C161DA70);
  if ((v15 & 1) == 0)
  {
    uint64_t v81 = 0;
    uint64_t v82 = 0;
    if (*(void *)(a1 + 16)) {
      goto LABEL_34;
    }
LABEL_53:
    id v23 = 0;
    uint64_t v22 = 0;
    goto LABEL_54;
  }
  sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v14, (uint64_t)&v90);
  int v16 = swift_dynamicCast();
  if (v16) {
    uint64_t v17 = v89[0]._countAndFlagsBits;
  }
  else {
    uint64_t v17 = 0;
  }
  if (v16) {
    uint64_t v18 = v89[0]._object;
  }
  else {
    uint64_t v18 = 0;
  }
  uint64_t v81 = v18;
  uint64_t v82 = v17;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_53;
  }
LABEL_34:
  unint64_t v19 = sub_1BFEF2D8C(0x7069746C6F6F74, 0xE700000000000000);
  if (v20)
  {
    sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v19, (uint64_t)&v90);
    int v21 = swift_dynamicCast();
    if (v21) {
      uint64_t v22 = v89[0]._countAndFlagsBits;
    }
    else {
      uint64_t v22 = 0;
    }
    if (v21) {
      id v23 = v89[0]._object;
    }
    else {
      id v23 = 0;
    }
    if (!*(void *)(a1 + 16))
    {
LABEL_54:
      uint64_t v79 = 0;
      uint64_t v80 = 0;
      uint64_t v29 = *(void *)(a1 + 16);
      if (v29) {
        goto LABEL_55;
      }
LABEL_78:
      uint64_t v77 = 0;
      uint64_t v78 = 0;
      goto LABEL_79;
    }
  }
  else
  {
    uint64_t v22 = 0;
    id v23 = 0;
    if (!*(void *)(a1 + 16)) {
      goto LABEL_54;
    }
  }
  unint64_t v37 = sub_1BFEF2D8C(0x656C746974, 0xE500000000000000);
  if ((v38 & 1) == 0) {
    goto LABEL_54;
  }
  sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v37, (uint64_t)&v90);
  int v39 = swift_dynamicCast();
  if (v39) {
    uint64_t v40 = v89[0]._countAndFlagsBits;
  }
  else {
    uint64_t v40 = 0;
  }
  if (v39) {
    uint64_t v41 = v89[0]._object;
  }
  else {
    uint64_t v41 = 0;
  }
  uint64_t v79 = v41;
  uint64_t v80 = v40;
  uint64_t v29 = *(void *)(a1 + 16);
  if (!v29) {
    goto LABEL_78;
  }
LABEL_55:
  unint64_t v30 = sub_1BFEF2D8C(0x656C746974627573, 0xE800000000000000);
  if ((v31 & 1) == 0)
  {
    uint64_t v77 = 0;
    uint64_t v78 = 0;
    uint64_t v29 = *(void *)(a1 + 16);
    if (!v29) {
      goto LABEL_79;
    }
    goto LABEL_65;
  }
  sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v30, (uint64_t)&v90);
  int v32 = swift_dynamicCast();
  if (v32) {
    uint64_t v33 = v89[0]._countAndFlagsBits;
  }
  else {
    uint64_t v33 = 0;
  }
  if (v32) {
    objc_super v34 = v89[0]._object;
  }
  else {
    objc_super v34 = 0;
  }
  uint64_t v77 = v34;
  uint64_t v78 = v33;
  uint64_t v29 = *(void *)(a1 + 16);
  if (v29)
  {
LABEL_65:
    unint64_t v35 = sub_1BFEF2D8C(0x656E696C6E69, 0xE600000000000000);
    if ((v36 & 1) != 0
      && (sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v35, (uint64_t)&v90), swift_dynamicCast()))
    {
      LOBYTE(v29) = v89[0]._countAndFlagsBits;
    }
    else
    {
      LOBYTE(v29) = 0;
    }
  }
LABEL_79:
  char v108 = v29;
  uint64_t v85 = v23;
  uint64_t v86 = v22;
  if (!*(void *)(a1 + 16))
  {
    char v107 = 0;
    goto LABEL_90;
  }
  unint64_t v42 = sub_1BFEF2D8C(0xD000000000000011, 0x80000001C161DA90);
  if ((v43 & 1) != 0
    && (sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v42, (uint64_t)&v90), swift_dynamicCast()))
  {
    char v44 = v89[0]._countAndFlagsBits;
  }
  else
  {
    char v44 = 0;
  }
  uint64_t v45 = *(void *)(a1 + 16);
  char v107 = v44;
  if (!v45
    || (unint64_t v46 = sub_1BFEF2D8C(0x6574617473, 0xE500000000000000), (v47 & 1) == 0)
    || (sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v46, (uint64_t)&v90), (swift_dynamicCast() & 1) == 0))
  {
LABEL_90:
    char v48 = 3;
    if (!*(void *)(a1 + 16)) {
      goto LABEL_102;
    }
    goto LABEL_91;
  }
  PuzzleMenuConfig.State.init(rawValue:)(v89[0]);
  char v48 = v90;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_102;
  }
LABEL_91:
  unint64_t v49 = sub_1BFEF2D8C(0x7475626972747461, 0xEA00000000007365);
  if ((v50 & 1) == 0
    || (sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v49, (uint64_t)&v90),
        sub_1BFEFDF24(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]),
        (swift_dynamicCast() & 1) == 0))
  {
LABEL_102:
    uint64_t v53 = 0;
    if (!*(void *)(a1 + 16)) {
      goto LABEL_108;
    }
    goto LABEL_103;
  }
  uint64_t v74 = v12;
  uint64_t v51 = *(void *)(v89[0]._countAndFlagsBits + 16);
  if (v51)
  {
    uint64_t v75 = countAndFlagsBits;
    swift_bridgeObjectRetain();
    uint64_t v52 = v89[0]._countAndFlagsBits + 40;
    uint64_t v53 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      swift_bridgeObjectRetain();
      unint64_t v54 = sub_1C15205AC();
      swift_bridgeObjectRelease();
      if (v54 <= 2)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v53 = sub_1C0EE5EA0(0, *((void *)v53 + 2) + 1, 1, v53);
        }
        unint64_t v56 = *((void *)v53 + 2);
        unint64_t v55 = *((void *)v53 + 3);
        if (v56 >= v55 >> 1) {
          uint64_t v53 = sub_1C0EE5EA0((char *)(v55 > 1), v56 + 1, 1, v53);
        }
        *((void *)v53 + 2) = v56 + 1;
        v53[v56 + 32] = v54;
      }
      v52 += 16;
      --v51;
    }
    while (v51);
    swift_bridgeObjectRelease();
    uint64_t countAndFlagsBits = v75;
  }
  else
  {
    uint64_t v53 = (char *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v74;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_108;
  }
LABEL_103:
  unint64_t v57 = sub_1BFEF2D8C(0x736D657469, 0xE500000000000000);
  if (v58)
  {
    sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v57, (uint64_t)&v90);
    goto LABEL_109;
  }
LABEL_108:
  long long v90 = 0u;
  long long v91 = 0u;
LABEL_109:
  swift_bridgeObjectRelease();
  if (!*((void *)&v91 + 1))
  {
    sub_1BFEFE4A0((uint64_t)&v90);
    goto LABEL_122;
  }
  sub_1BFD2C710(0, (unint64_t *)&qword_1EA19BBA8, (uint64_t (*)(uint64_t))sub_1BFFB4FA4, MEMORY[0x1E4FBB320]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_122:
    uint64_t v62 = 0;
    goto LABEL_126;
  }
  uint64_t v59 = v12;
  uint64_t v60 = *(void *)(v89[0]._countAndFlagsBits + 16);
  if (v60)
  {
    uint64_t v76 = countAndFlagsBits;
    swift_bridgeObjectRetain();
    uint64_t v61 = 0;
    uint64_t v62 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v63 = swift_bridgeObjectRetain();
      PuzzleMenuConfig.init(with:)(v87, v63);
      sub_1C065D9D0((uint64_t)v87, (uint64_t)v89);
      sub_1C065D9D0((uint64_t)v89, (uint64_t)&v90);
      if (sub_1C065DA58((uint64_t)&v90) != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v62 = sub_1C0EE5E8C(0, v62[2] + 1, 1, v62);
        }
        unint64_t v65 = v62[2];
        unint64_t v64 = v62[3];
        if (v65 >= v64 >> 1) {
          uint64_t v62 = sub_1C0EE5E8C((void *)(v64 > 1), v65 + 1, 1, v62);
        }
        sub_1C065D9D0((uint64_t)v89, (uint64_t)v87);
        v62[2] = v65 + 1;
        uint64_t v66 = &v62[18 * v65];
        void v66[2] = v87[0];
        long long v67 = v87[4];
        long long v69 = v87[1];
        long long v68 = v87[2];
        void v66[5] = v87[3];
        v66[6] = v67;
        v66[3] = v69;
        v66[4] = v68;
        long long v71 = v87[6];
        long long v70 = v88[0];
        long long v72 = v87[5];
        *(_OWORD *)((char *)v66 + 153) = *(_OWORD *)((char *)v88 + 9);
        v66[8] = v71;
        v66[9] = v70;
        v66[7] = v72;
      }
      if (v60 - 1 == v61) {
        break;
      }
      ++v61;
    }
    swift_bridgeObjectRelease_n();
    uint64_t countAndFlagsBits = v76;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v62 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v59;
LABEL_126:
  *(void *)&long long v90 = countAndFlagsBits;
  *((void *)&v90 + 1) = object;
  *(void *)&long long v91 = v80;
  *((void *)&v91 + 1) = v79;
  uint64_t v92 = v78;
  long long v93 = v77;
  uint64_t v94 = v12;
  char v95 = v13;
  uint64_t v96 = v84;
  uint64_t v97 = v83;
  uint64_t v98 = v82;
  id v99 = v81;
  uint64_t v100 = v62;
  char v101 = v108;
  char v102 = v48;
  uint64_t v103 = v53;
  uint64_t v104 = v86;
  uint64_t v105 = v85;
  char v106 = v107;
  nullsub_1(&v90);
  return sub_1C065D9D0((uint64_t)&v90, a2);
}