void sub_24DB73C14(void *a1, int a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  char *v24;
  uint64_t v25;
  int v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  long long v39;
  uint64_t v40;
  void *v41;
  id *v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  char *v59;
  void *v60;
  id v61;
  void (*v62)(long long *);
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  void *v70;
  id v71;
  id v72;
  uint64_t v73;
  char *v74;
  void *v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  void *v83;
  uint64_t v84;
  char *v85;
  void *v86;
  char *v87;
  void *v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  char *v96;
  id v97;
  id v98;
  char v99;
  id v100;
  id v101;
  id v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  void *v110;
  id v111;
  id v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  void *v129;
  uint64_t v130;
  void (*v131)(void);
  id v132;
  id v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char isUniquelyReferenced_nonNull_native;
  id v141;
  id v142;
  id v143;
  void *v144;
  void *v145;
  id v146;
  id v147;
  void *v148;
  void *v149;
  uint64_t v150;
  id v151;
  id v152;
  dispatch_group_t v153;
  long long v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(long long *);
  uint64_t v159;
  char *v160;
  void (**v161)(char *, uint64_t);
  int v162;
  char *v163;
  uint64_t v164;
  dispatch_group_t v165;
  uint64_t v166;
  id v167[16];
  _OWORD v168[8];
  long long v169;
  long long v170;
  uint64_t v171;
  unint64_t v172;
  void *v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  char v177;
  id v178;
  long long v179;
  long long v180;
  long long v181;
  long long v182;
  long long v183;
  long long v184;

  v162 = a2;
  v9 = sub_24DCC8408();
  v161 = *(void (***)(char *, uint64_t))(v9 - 8);
  MEMORY[0x270FA5388](v9);
  v160 = (char *)&v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24DCC8288();
  MEMORY[0x270FA5388](v11 - 8);
  v13 = (char *)&v157 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_24DCC82A8();
  v15 = *(NSObject **)(v14 - 8);
  v164 = v14;
  v165 = v15;
  MEMORY[0x270FA5388](v14);
  v163 = (char *)&v157 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = a5;
  v178 = a1;
  swift_retain_n();
  v18 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
  v166 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
  if (swift_dynamicCast())
  {
    sub_24D3F0BA0((uint64_t)&v169, (uint64_t)v167, (uint64_t *)&unk_26B192A40);
    sub_24D3F0BA0((uint64_t)v167, (uint64_t)v168, (uint64_t *)&unk_26B192A40);
    if (sub_24D5B3C48((uint64_t)v168))
    {
      sub_24D5B3AB4((uint64_t)v167);
      goto LABEL_4;
    }
    v28 = nullsub_1(v168);
    v29 = *(void *)v28;
    v30 = *(unsigned __int8 *)(v28 + 8);
    v32 = *(void *)(v28 + 16);
    v31 = *(void *)(v28 + 24);
    v33 = *(void *)(v28 + 32);
    v34 = *(void *)(v28 + 40);
    v35 = *(void *)(v28 + 48);
    v36 = *(void *)(v28 + 56);
    v37 = *(void *)(v28 + 64);
    v38 = *(void *)(v28 + 72);
    v39 = *(_OWORD *)(v28 + 80);
    v40 = *(void *)(v28 + 104);
    v41 = *(void **)(v28 + 112);
    v155 = *(void *)(v28 + 96);
    v156 = v40;
    *((void *)&v154 + 1) = *((void *)&v39 + 1);
    sub_24D3E386C(v32, v31, v33, v34, v35, v36, v37, v38, v39);
    if (v30 != 2 || v29)
    {
      if (v30 != 2 || v29 != 1)
      {
        *(void *)&v179 = 0x2F73662F70665F5FLL;
        *((void *)&v179 + 1) = 0xE800000000000000;
        sub_24D3D4384(v29, v30);
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        v54 = (id)sub_24DCC97B8();
        swift_bridgeObjectRelease();
        if (v41) {
          goto LABEL_34;
        }
        goto LABEL_47;
      }
      v42 = (id *)MEMORY[0x263F053F8];
    }
    else
    {
      v42 = (id *)MEMORY[0x263F053F0];
    }
    v54 = *v42;
    if (v41)
    {
LABEL_34:
      v55 = v41;
LABEL_48:
      *(void *)&v179 = v55;
      BYTE8(v179) = 1;
      v79 = v41;
      v80 = v55;
      ((void (*)(long long *))a4)(&v179);

      goto LABEL_49;
    }
LABEL_47:
    v55 = objc_msgSend(self, sel_fileProviderErrorForNonExistentItemWithIdentifier_, v54);
    goto LABEL_48;
  }
LABEL_4:

  v167[0] = a1;
  v19 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A50);
  if (swift_dynamicCast())
  {
    v158 = (void (*)(long long *))a4;
    v159 = v17;
    v20 = a5;
    v21 = (void *)v169;
    v22 = v176;
    if (!v177)
    {
      sub_24D400D4C(*((uint64_t *)&v169 + 1), v170, *((uint64_t *)&v170 + 1), v171, v172);
      if (v22) {
        v43 = v22;
      }
      else {
        v43 = objc_msgSend(self, sel_fileProviderErrorForNonExistentItemWithIdentifier_, v21);
      }
      *(void *)&v168[0] = v43;
      BYTE8(v168[0]) = 1;
      v77 = v22;
      v78 = v43;
      v158(v168);

      swift_release();
      goto LABEL_63;
    }
    sub_24D5B38F0((void *)v169, *((void **)&v169 + 1), v170, *((void **)&v170 + 1), v171, v172, v173, v174, v175, v176, v177);
    a5 = v20;
    a4 = (unint64_t)v158;
    v17 = v159;
  }

  v178 = a1;
  v23 = a1;
  if (!swift_dynamicCast())
  {

    goto LABEL_13;
  }
  v157 = a5;
  v24 = v13;
  v25 = v17;
  sub_24D3F0BA0((uint64_t)&v169, (uint64_t)v167, (uint64_t *)&unk_26B192A40);
  sub_24D3F0BA0((uint64_t)v167, (uint64_t)v168, (uint64_t *)&unk_26B192A40);
  v26 = sub_24D5B3C48((uint64_t)v168);
  switch(v26)
  {
    case 1:
      v62 = (void (*)(long long *))a4;
      v63 = nullsub_1(v168);
      v64 = *(void *)v63;
      v65 = *(unsigned __int8 *)(v63 + 8);
      v66 = *(void *)(v63 + 48);
      v67 = *(void *)(v63 + 56);

      sub_24D4A479C(v66, v67);
      swift_bridgeObjectRelease();
      if (v162)
      {
        sub_24DCC8178();
        sub_24D5F77E0(MEMORY[0x263F8EE78]);
        sub_24DB59FB4((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
        v69 = v163;
        v68 = v164;
        sub_24DCC8808();
        v70 = (void *)sub_24DCC8128();
        ((void (*)(char *, uint64_t))v165[1].isa)(v69, v68);
        *(void *)&v179 = v70;
        BYTE8(v179) = 1;
        v71 = v70;
        v62(&v179);
      }
      else
      {
        type metadata accessor for VFSFileTree(0);
        swift_dynamicCastClassUnconditional();
        v179 = 0u;
        v180 = 0u;
        v181 = 0u;
        v182 = 0u;
        v183 = 0u;
        v184 = 0u;
        v83 = (void *)swift_allocObject();
        v83[2] = sub_24D6D9268;
        v83[3] = v25;
        v83[4] = a3;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_24D3DC118(v64, v65, (uint64_t)&v179, 0, 1, (uint64_t)sub_24DB78DC8, (uint64_t)v83);
        swift_release();
        swift_release();
      }

      swift_release();
LABEL_63:
      swift_release();
      return;
    case 3:
      v56 = nullsub_1(v168);
      v57 = *(void *)v56;
      v58 = *(unsigned __int8 *)(v56 + 8);
      sub_24D5B3AB4((uint64_t)v167);
      if (v162)
      {
        LODWORD(v179) = 66;
        sub_24D5F77E0(MEMORY[0x263F8EE78]);
        sub_24DB59FB4((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
        v59 = v160;
        sub_24DCC8808();
        v60 = (void *)sub_24DCC83E8();
        v161[1](v59, v9);
        *(void *)&v179 = v60;
        BYTE8(v179) = 1;
        v61 = v60;
        ((void (*)(long long *))a4)(&v179);
      }
      else
      {
        type metadata accessor for VFSFileTree(0);
        swift_dynamicCastClassUnconditional();
        v179 = 0u;
        v180 = 0u;
        v181 = 0u;
        v182 = 0u;
        v183 = 0u;
        v184 = 0u;
        v82 = (void *)swift_allocObject();
        v82[2] = sub_24D6D9268;
        v82[3] = v17;
        v82[4] = a3;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_24D3DC118(v57, v58, (uint64_t)&v179, 0, 1, (uint64_t)sub_24DB78DC4, (uint64_t)v82);
        swift_release();
        swift_release();
      }

      goto LABEL_62;
    case 5:
      nullsub_1(v168);

LABEL_16:
      sub_24DCC8138();
LABEL_70:
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24DB59FB4((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
      v96 = v163;
      v95 = v164;
      sub_24DCC8808();
      v53 = (void *)sub_24DCC8128();
      ((void (*)(char *, uint64_t))v165[1].isa)(v96, v95);
      goto LABEL_71;
  }
  sub_24D5B3AB4((uint64_t)v167);

  v13 = v24;
  a5 = v157;
LABEL_13:
  *(void *)&v168[0] = a1;
  v27 = a1;
  if (swift_dynamicCast())
  {
    if (v177 == 5)
    {
LABEL_15:

      goto LABEL_16;
    }
    sub_24D5B38F0((void *)v169, *((void **)&v169 + 1), v170, *((void **)&v170 + 1), v171, v172, v173, v174, v175, v176, v177);
  }

  *(void *)&v168[0] = a1;
  v44 = a1;
  if (swift_dynamicCast())
  {
    switch(LOBYTE(v167[0]))
    {
      case 1:
      case 2:

        sub_24DCC8168();
        goto LABEL_70;
      case 3:
      case 5:
        goto LABEL_68;
      case 4:
        sub_24DCC81F8();
        sub_24D5F77E0(MEMORY[0x263F8EE78]);
        sub_24DB59FB4((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
        v85 = v163;
        v84 = v164;
        sub_24DCC8808();
        v86 = (void *)sub_24DCC8128();
        ((void (*)(char *, uint64_t))v165[1].isa)(v85, v84);
        goto LABEL_60;
      default:
        goto LABEL_15;
    }
  }

  v167[0] = a1;
  v45 = a1;
  if (swift_dynamicCast())
  {
    if (v170 == 253 || v170 == 254)
    {

      type metadata accessor for NSFileProviderError(0);
      *(void *)&v169 = -2005;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
      v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_24DCCECE0;
      *(void *)(v46 + 32) = sub_24DCC97E8();
      *(void *)(v46 + 40) = v47;
      v48 = (void *)sub_24DCC97B8();
      sub_24DCCB128();
      v49 = (id)FPLocv();

      v50 = sub_24DCC97E8();
      v52 = v51;

      *(void *)(v46 + 72) = MEMORY[0x263F8D310];
      *(void *)(v46 + 48) = v50;
      *(void *)(v46 + 56) = v52;
      sub_24D428D08(v46);
      sub_24DB59FB4(&qword_26B193F20, type metadata accessor for NSFileProviderError);
      sub_24DCC8808();
      v53 = *(void **)&v168[0];
LABEL_71:
      *(void *)&v169 = v53;
      BYTE8(v169) = 1;
      v97 = v53;
      ((void (*)(long long *))a4)(&v169);
      swift_release();
      swift_release();

      return;
    }
    sub_24D512AD8(v169, *((uint64_t *)&v169 + 1), v170);
    LODWORD(v168[0]) = 16;
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24DB59FB4((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
    v87 = v160;
    sub_24DCC8808();
    v88 = (void *)sub_24DCC83E8();
    v161[1](v87, v9);
    *(void *)&v168[0] = v88;
    BYTE8(v168[0]) = 1;
    v89 = v88;
    ((void (*)(_OWORD *))a4)(v168);

    v81 = v167[0];
    goto LABEL_61;
  }
  v161 = (void (**)(char *, uint64_t))v13;

  v178 = a1;
  v72 = a1;
  if (swift_dynamicCast())
  {
    sub_24D3F0BA0((uint64_t)&v169, (uint64_t)v167, (uint64_t *)&unk_26B192A40);
    sub_24D3F0BA0((uint64_t)v167, (uint64_t)v168, (uint64_t *)&unk_26B192A40);
    if (sub_24D5B3C48((uint64_t)v168) == 15)
    {
      sub_24DCC81B8();
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24DB59FB4((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
      v74 = v163;
      v73 = v164;
      sub_24DCC8808();
      v75 = (void *)sub_24DCC8128();
      ((void (*)(char *, uint64_t))v165[1].isa)(v74, v73);
      *(void *)&v179 = v75;
      BYTE8(v179) = 1;
      v76 = v75;
      ((void (*)(long long *))a4)(&v179);

LABEL_49:
      v81 = v178;
LABEL_61:

LABEL_62:
      swift_release();
      goto LABEL_63;
    }
    sub_24D5B3AB4((uint64_t)v167);
  }
  else
  {
  }
  *(void *)&v168[0] = a1;
  v90 = a1;
  if (swift_dynamicCast())
  {
    v91 = (id)FPDomainUnavailableError();
    if (!v91)
    {
LABEL_114:
      v130 = swift_release_n();
      __break(1u);
LABEL_115:
      MEMORY[0x270FA5388](v130);
      v155 = a4;
      swift_release_n();
      swift_release();
      sub_24DA89268((uint64_t (*)(uint64_t))sub_24D57ED94, (uint64_t)&v154, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318);
    }
    v86 = v91;
LABEL_60:
    *(void *)&v169 = v86;
    BYTE8(v169) = 1;
    v92 = v86;
    ((void (*)(long long *))a4)(&v169);

    v81 = *(id *)&v168[0];
    goto LABEL_61;
  }

  v167[0] = a1;
  v93 = a1;
  if (swift_dynamicCast())
  {
    sub_24D3F0BA0((uint64_t)&v169, (uint64_t)v168, (uint64_t *)&unk_26B192A40);
    sub_24D5B3AB4((uint64_t)v168);

LABEL_69:
    sub_24DCC81E8();
    goto LABEL_70;
  }

  *(void *)&v168[0] = a1;
  v94 = a1;
  if (swift_dynamicCast())
  {
    sub_24D5B38F0((void *)v169, *((void **)&v169 + 1), v170, *((void **)&v170 + 1), v171, v172, v173, v174, v175, v176, v177);
LABEL_68:

    goto LABEL_69;
  }

  *(void *)&v169 = a1;
  v98 = a1;
  v99 = swift_dynamicCast();

  if (v99) {
    goto LABEL_69;
  }
  *(void *)&v168[0] = a1;
  v100 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192990);
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    goto LABEL_68;
  }

  *(void *)&v168[0] = a1;
  v101 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1929A0);
  if (swift_dynamicCast())
  {
    sub_24D5B38B0((void *)v169);
    goto LABEL_68;
  }

  *(void *)&v168[0] = a1;
  v102 = a1;
  if (swift_dynamicCast())
  {
    sub_24D5B385C((uint64_t)&v169);
    goto LABEL_68;
  }
  v159 = v17;

  v103 = (void *)sub_24DCC8818();
  v104 = objc_msgSend(v103, sel_userInfo);
  v105 = sub_24DCC9578();

  v106 = sub_24DCC97E8();
  if (*(void *)(v105 + 16) && (v108 = sub_24D4053BC(v106, v107), (v109 & 1) != 0))
  {
    sub_24D3F7E8C(*(void *)(v105 + 56) + 32 * v108, (uint64_t)&v169);
  }
  else
  {
    v169 = 0u;
    v170 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v170 + 1))
  {
    sub_24D3FB6F8(0, (unint64_t *)&qword_26B1940A0);
    if (swift_dynamicCast())
    {
      v110 = *(void **)&v168[0];
      swift_retain();
      swift_retain();
      v111 = v103;
      v112 = v110;
      sub_24DB69C8C(v112, v162 & 1, a3, v111, (void (*)(long long *))a4, a5);

      swift_release_n();
      swift_release_n();
      return;
    }
  }
  else
  {
    sub_24D415F74((uint64_t)&v169, qword_26B197F50);
  }
  v113 = objc_msgSend(v103, sel_userInfo);
  v114 = sub_24DCC9578();

  v166 = *MEMORY[0x263F083F0];
  v115 = sub_24DCC97E8();
  if (*(void *)(v114 + 16) && (v117 = sub_24D4053BC(v115, v116), (v118 & 1) != 0))
  {
    v119 = a3;
    sub_24D3F7E8C(*(void *)(v114 + 56) + 32 * v117, (uint64_t)&v169);
  }
  else
  {
    v119 = a3;
    v169 = 0u;
    v170 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v120 = swift_allocObject();
  if (*((void *)&v170 + 1))
  {
    v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_269870660);
    if (swift_dynamicCast())
    {
      v164 = v121;
      v157 = a5;
      v158 = (void (*)(long long *))a4;
      v122 = (uint64_t *)(v120 + 16);
      *(void *)(v120 + 16) = *(void *)&v168[0];
      v165 = dispatch_group_create();
      a4 = *(void *)(v120 + 16);
      if (a4 >> 62) {
        goto LABEL_112;
      }
      v123 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      while (1)
      {
        if (!v123)
        {
LABEL_108:
          if (v162)
          {
            v134 = objc_msgSend(v103, sel_userInfo);
            v135 = sub_24DCC9578();

            v136 = sub_24DCC97E8();
            v138 = v137;
            swift_beginAccess();
            v139 = *(void *)(v120 + 16);
            *((void *)&v170 + 1) = v164;
            *(void *)&v169 = v139;
            sub_24D3F7E7C(&v169, v168);
            swift_bridgeObjectRetain();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&v179 = v135;
            sub_24D706588(v168, v136, v138, isUniquelyReferenced_nonNull_native);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v141 = objc_msgSend(v103, sel_domain);
            sub_24DCC97E8();

            v142 = objc_msgSend(v103, sel_code);
            v143 = objc_allocWithZone(MEMORY[0x263F087E8]);
            v144 = (void *)sub_24DCC97B8();
            swift_bridgeObjectRelease();
            v145 = (void *)sub_24DCC9558();
            swift_bridgeObjectRelease();
            v146 = objc_msgSend(v143, sel_initWithDomain_code_userInfo_, v144, v142, v145);

            *(void *)&v169 = v146;
            BYTE8(v169) = 1;
            v147 = v146;
            v158(&v169);
            swift_release();
            swift_release();
          }
          else
          {
            v148 = *(void **)(*(void *)(v119 + 16) + 64);
            v149 = (void *)swift_allocObject();
            v149[2] = v103;
            v149[3] = v120;
            v150 = v159;
            v149[4] = sub_24D6D9268;
            v149[5] = v150;
            swift_retain();
            v151 = v103;
            swift_retain();
            v152 = v148;
            v153 = v165;
            sub_24D3E2DA8((uint64_t)"normalizeError(_:synchronous:completionHandler:)", 48, 2, 0, v152, (uint64_t)sub_24DB78DBC, (uint64_t)v149);
            swift_release();
            swift_release();

            swift_release();
          }
          goto LABEL_63;
        }
        a4 = v165;
        v124 = objc_sync_enter((id)a4);
        if (v124)
        {
LABEL_116:
          MEMORY[0x270FA5388](v124);
          v155 = a4;
          swift_release_n();
          swift_release();
          sub_24DA89268((uint64_t (*)(uint64_t))sub_24D57ED98, (uint64_t)&v154, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314);
        }
        v125 = 0;
        v126 = v123 - 1;
        while (1)
        {
          swift_beginAccess();
          v127 = *v122;
          if ((*v122 & 0xC000000000000001) == 0) {
            break;
          }
          v128 = (id)MEMORY[0x253328820](v125);
LABEL_101:
          v129 = v128;
          swift_endAccess();
          v130 = objc_sync_exit((id)a4);
          if (v130) {
            goto LABEL_115;
          }

          dispatch_group_enter((dispatch_group_t)a4);
          v131 = (void (*)(void))(id)a4;
          swift_retain();
          v132 = v129;
          sub_24DB4FE84(v132, v162 & 1, v119, v131, v120, v125);

          swift_release();
          if (v126 == v125) {
            goto LABEL_108;
          }
          v124 = objc_sync_enter(v131);
          ++v125;
          if (v124) {
            goto LABEL_116;
          }
        }
        if (v125 < *(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          break;
        }
        __break(1u);
LABEL_112:
        swift_bridgeObjectRetain();
        v123 = sub_24DCCA9C8();
        swift_bridgeObjectRelease();
        if (v123 < 0)
        {
          __break(1u);
          goto LABEL_114;
        }
      }
      v128 = *(id *)(v127 + 8 * v125 + 32);
      goto LABEL_101;
    }
  }
  else
  {
    sub_24D415F74((uint64_t)&v169, qword_26B197F50);
  }
  swift_deallocUninitializedObject();
  *(void *)&v169 = a1;
  BYTE8(v169) = 1;
  v133 = a1;
  ((void (*)(long long *))a4)(&v169);

  swift_release();
  swift_release();
}

void sub_24DB75544(void *a1, int a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  int v162 = a2;
  uint64_t v9 = sub_24DCC8408();
  v161 = *(void (***)(char *, uint64_t))(v9 - 8);
  MEMORY[0x270FA5388](v9);
  v160 = (char *)&v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC8288();
  MEMORY[0x270FA5388](v11 - 8);
  v13 = (char *)&v157 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24DCC82A8();
  v15 = *(NSObject **)(v14 - 8);
  uint64_t v164 = v14;
  dispatch_group_t v165 = v15;
  MEMORY[0x270FA5388](v14);
  v163 = (char *)&v157 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = a5;
  id v178 = a1;
  swift_retain_n();
  id v18 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
  uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
  if (swift_dynamicCast())
  {
    sub_24D3F0BA0((uint64_t)&v169, (uint64_t)v167, (uint64_t *)&unk_26B192A40);
    sub_24D3F0BA0((uint64_t)v167, (uint64_t)v168, (uint64_t *)&unk_26B192A40);
    if (sub_24D5B3C48((uint64_t)v168))
    {
      sub_24D5B3AB4((uint64_t)v167);
      goto LABEL_4;
    }
    uint64_t v28 = nullsub_1(v168);
    uint64_t v29 = *(void *)v28;
    int v30 = *(unsigned __int8 *)(v28 + 8);
    uint64_t v32 = *(void *)(v28 + 16);
    uint64_t v31 = *(void *)(v28 + 24);
    uint64_t v33 = *(void *)(v28 + 32);
    uint64_t v34 = *(void *)(v28 + 40);
    uint64_t v35 = *(void *)(v28 + 48);
    uint64_t v36 = *(void *)(v28 + 56);
    uint64_t v37 = *(void *)(v28 + 64);
    uint64_t v38 = *(void *)(v28 + 72);
    long long v39 = *(_OWORD *)(v28 + 80);
    uint64_t v40 = *(void *)(v28 + 104);
    v41 = *(void **)(v28 + 112);
    unint64_t v155 = *(void *)(v28 + 96);
    uint64_t v156 = v40;
    *((void *)&v154 + 1) = *((void *)&v39 + 1);
    sub_24D3E386C(v32, v31, v33, v34, v35, v36, v37, v38, v39);
    if (v30 != 2 || v29)
    {
      if (v30 != 2 || v29 != 1)
      {
        *(void *)&long long v179 = 0x2F73662F70665F5FLL;
        *((void *)&v179 + 1) = 0xE800000000000000;
        sub_24D3D4384(v29, v30);
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        id v54 = (id)sub_24DCC97B8();
        swift_bridgeObjectRelease();
        if (v41) {
          goto LABEL_34;
        }
        goto LABEL_47;
      }
      v42 = (id *)MEMORY[0x263F053F8];
    }
    else
    {
      v42 = (id *)MEMORY[0x263F053F0];
    }
    id v54 = *v42;
    if (v41)
    {
LABEL_34:
      id v55 = v41;
LABEL_48:
      *(void *)&long long v179 = v55;
      WORD4(v179) = 256;
      id v79 = v41;
      id v80 = v55;
      ((void (*)(long long *))a4)(&v179);

      goto LABEL_49;
    }
LABEL_47:
    id v55 = objc_msgSend(self, sel_fileProviderErrorForNonExistentItemWithIdentifier_, v54);
    goto LABEL_48;
  }
LABEL_4:

  v167[0] = a1;
  id v19 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A50);
  if (swift_dynamicCast())
  {
    v158 = (void (*)(long long *))a4;
    uint64_t v159 = v17;
    uint64_t v20 = a5;
    v21 = (void *)v169;
    v22 = v176;
    if (!v177)
    {
      sub_24D400D4C(*((uint64_t *)&v169 + 1), v170, *((uint64_t *)&v170 + 1), v171, v172);
      if (v22) {
        id v43 = v22;
      }
      else {
        id v43 = objc_msgSend(self, sel_fileProviderErrorForNonExistentItemWithIdentifier_, v21);
      }
      *(void *)&v168[0] = v43;
      WORD4(v168[0]) = 256;
      id v77 = v22;
      id v78 = v43;
      v158(v168);

      swift_release();
      goto LABEL_63;
    }
    sub_24D5B38F0((void *)v169, *((void **)&v169 + 1), v170, *((void **)&v170 + 1), v171, v172, v173, v174, v175, v176, v177);
    a5 = v20;
    a4 = (unint64_t)v158;
    uint64_t v17 = v159;
  }

  id v178 = a1;
  id v23 = a1;
  if (!swift_dynamicCast())
  {

    goto LABEL_13;
  }
  uint64_t v157 = a5;
  v24 = v13;
  uint64_t v25 = v17;
  sub_24D3F0BA0((uint64_t)&v169, (uint64_t)v167, (uint64_t *)&unk_26B192A40);
  sub_24D3F0BA0((uint64_t)v167, (uint64_t)v168, (uint64_t *)&unk_26B192A40);
  int v26 = sub_24D5B3C48((uint64_t)v168);
  switch(v26)
  {
    case 1:
      v62 = (void (*)(long long *))a4;
      uint64_t v63 = nullsub_1(v168);
      uint64_t v64 = *(void *)v63;
      int v65 = *(unsigned __int8 *)(v63 + 8);
      uint64_t v66 = *(void *)(v63 + 48);
      unint64_t v67 = *(void *)(v63 + 56);

      sub_24D4A479C(v66, v67);
      swift_bridgeObjectRelease();
      if (v162)
      {
        sub_24DCC8178();
        sub_24D5F77E0(MEMORY[0x263F8EE78]);
        sub_24DB59FB4((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
        v69 = v163;
        uint64_t v68 = v164;
        sub_24DCC8808();
        v70 = (void *)sub_24DCC8128();
        ((void (*)(char *, uint64_t))v165[1].isa)(v69, v68);
        *(void *)&long long v179 = v70;
        WORD4(v179) = 256;
        id v71 = v70;
        v62(&v179);
      }
      else
      {
        type metadata accessor for VFSFileTree(0);
        swift_dynamicCastClassUnconditional();
        long long v179 = 0u;
        long long v180 = 0u;
        long long v181 = 0u;
        long long v182 = 0u;
        long long v183 = 0u;
        long long v184 = 0u;
        v83 = (void *)swift_allocObject();
        v83[2] = sub_24DB78D7C;
        v83[3] = v25;
        v83[4] = a3;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_24D3DC118(v64, v65, (uint64_t)&v179, 0, 1, (uint64_t)sub_24DB78DC8, (uint64_t)v83);
        swift_release();
        swift_release();
      }

      swift_release();
LABEL_63:
      swift_release();
      return;
    case 3:
      uint64_t v56 = nullsub_1(v168);
      uint64_t v57 = *(void *)v56;
      int v58 = *(unsigned __int8 *)(v56 + 8);
      sub_24D5B3AB4((uint64_t)v167);
      if (v162)
      {
        LODWORD(v179) = 66;
        sub_24D5F77E0(MEMORY[0x263F8EE78]);
        sub_24DB59FB4((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
        v59 = v160;
        sub_24DCC8808();
        v60 = (void *)sub_24DCC83E8();
        v161[1](v59, v9);
        *(void *)&long long v179 = v60;
        WORD4(v179) = 256;
        id v61 = v60;
        ((void (*)(long long *))a4)(&v179);
      }
      else
      {
        type metadata accessor for VFSFileTree(0);
        swift_dynamicCastClassUnconditional();
        long long v179 = 0u;
        long long v180 = 0u;
        long long v181 = 0u;
        long long v182 = 0u;
        long long v183 = 0u;
        long long v184 = 0u;
        v82 = (void *)swift_allocObject();
        v82[2] = sub_24DB78D7C;
        v82[3] = v17;
        v82[4] = a3;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_24D3DC118(v57, v58, (uint64_t)&v179, 0, 1, (uint64_t)sub_24DB78DC4, (uint64_t)v82);
        swift_release();
        swift_release();
      }

      goto LABEL_62;
    case 5:
      nullsub_1(v168);

LABEL_16:
      sub_24DCC8138();
LABEL_70:
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24DB59FB4((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
      v96 = v163;
      uint64_t v95 = v164;
      sub_24DCC8808();
      v53 = (void *)sub_24DCC8128();
      ((void (*)(char *, uint64_t))v165[1].isa)(v96, v95);
      goto LABEL_71;
  }
  sub_24D5B3AB4((uint64_t)v167);

  v13 = v24;
  a5 = v157;
LABEL_13:
  *(void *)&v168[0] = a1;
  id v27 = a1;
  if (swift_dynamicCast())
  {
    if (v177 == 5)
    {
LABEL_15:

      goto LABEL_16;
    }
    sub_24D5B38F0((void *)v169, *((void **)&v169 + 1), v170, *((void **)&v170 + 1), v171, v172, v173, v174, v175, v176, v177);
  }

  *(void *)&v168[0] = a1;
  id v44 = a1;
  if (swift_dynamicCast())
  {
    switch(LOBYTE(v167[0]))
    {
      case 1:
      case 2:

        sub_24DCC8168();
        goto LABEL_70;
      case 3:
      case 5:
        goto LABEL_68;
      case 4:
        sub_24DCC81F8();
        sub_24D5F77E0(MEMORY[0x263F8EE78]);
        sub_24DB59FB4((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
        v85 = v163;
        uint64_t v84 = v164;
        sub_24DCC8808();
        v86 = (void *)sub_24DCC8128();
        ((void (*)(char *, uint64_t))v165[1].isa)(v85, v84);
        goto LABEL_60;
      default:
        goto LABEL_15;
    }
  }

  v167[0] = a1;
  id v45 = a1;
  if (swift_dynamicCast())
  {
    if (v170 == 253 || v170 == 254)
    {

      type metadata accessor for NSFileProviderError(0);
      *(void *)&long long v169 = -2005;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_24DCCECE0;
      *(void *)(v46 + 32) = sub_24DCC97E8();
      *(void *)(v46 + 40) = v47;
      v48 = (void *)sub_24DCC97B8();
      sub_24DCCB128();
      id v49 = (id)FPLocv();

      uint64_t v50 = sub_24DCC97E8();
      uint64_t v52 = v51;

      *(void *)(v46 + 72) = MEMORY[0x263F8D310];
      *(void *)(v46 + 48) = v50;
      *(void *)(v46 + 56) = v52;
      sub_24D428D08(v46);
      sub_24DB59FB4(&qword_26B193F20, type metadata accessor for NSFileProviderError);
      sub_24DCC8808();
      v53 = *(void **)&v168[0];
LABEL_71:
      *(void *)&long long v169 = v53;
      WORD4(v169) = 256;
      id v97 = v53;
      ((void (*)(long long *))a4)(&v169);
      swift_release();
      swift_release();

      return;
    }
    sub_24D512AD8(v169, *((uint64_t *)&v169 + 1), v170);
    LODWORD(v168[0]) = 16;
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24DB59FB4((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
    v87 = v160;
    sub_24DCC8808();
    v88 = (void *)sub_24DCC83E8();
    v161[1](v87, v9);
    *(void *)&v168[0] = v88;
    WORD4(v168[0]) = 256;
    id v89 = v88;
    ((void (*)(_OWORD *))a4)(v168);

    id v81 = v167[0];
    goto LABEL_61;
  }
  v161 = (void (**)(char *, uint64_t))v13;

  id v178 = a1;
  id v72 = a1;
  if (swift_dynamicCast())
  {
    sub_24D3F0BA0((uint64_t)&v169, (uint64_t)v167, (uint64_t *)&unk_26B192A40);
    sub_24D3F0BA0((uint64_t)v167, (uint64_t)v168, (uint64_t *)&unk_26B192A40);
    if (sub_24D5B3C48((uint64_t)v168) == 15)
    {
      sub_24DCC81B8();
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24DB59FB4((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
      v74 = v163;
      uint64_t v73 = v164;
      sub_24DCC8808();
      v75 = (void *)sub_24DCC8128();
      ((void (*)(char *, uint64_t))v165[1].isa)(v74, v73);
      *(void *)&long long v179 = v75;
      WORD4(v179) = 256;
      id v76 = v75;
      ((void (*)(long long *))a4)(&v179);

LABEL_49:
      id v81 = v178;
LABEL_61:

LABEL_62:
      swift_release();
      goto LABEL_63;
    }
    sub_24D5B3AB4((uint64_t)v167);
  }
  else
  {
  }
  *(void *)&v168[0] = a1;
  id v90 = a1;
  if (swift_dynamicCast())
  {
    id v91 = (id)FPDomainUnavailableError();
    if (!v91)
    {
LABEL_114:
      uint64_t v130 = swift_release_n();
      __break(1u);
LABEL_115:
      MEMORY[0x270FA5388](v130);
      unint64_t v155 = a4;
      swift_release_n();
      swift_release();
      sub_24DA89268((uint64_t (*)(uint64_t))sub_24D57ED94, (uint64_t)&v154, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318);
    }
    v86 = v91;
LABEL_60:
    *(void *)&long long v169 = v86;
    WORD4(v169) = 256;
    id v92 = v86;
    ((void (*)(long long *))a4)(&v169);

    id v81 = *(id *)&v168[0];
    goto LABEL_61;
  }

  v167[0] = a1;
  id v93 = a1;
  if (swift_dynamicCast())
  {
    sub_24D3F0BA0((uint64_t)&v169, (uint64_t)v168, (uint64_t *)&unk_26B192A40);
    sub_24D5B3AB4((uint64_t)v168);

LABEL_69:
    sub_24DCC81E8();
    goto LABEL_70;
  }

  *(void *)&v168[0] = a1;
  id v94 = a1;
  if (swift_dynamicCast())
  {
    sub_24D5B38F0((void *)v169, *((void **)&v169 + 1), v170, *((void **)&v170 + 1), v171, v172, v173, v174, v175, v176, v177);
LABEL_68:

    goto LABEL_69;
  }

  *(void *)&long long v169 = a1;
  id v98 = a1;
  char v99 = swift_dynamicCast();

  if (v99) {
    goto LABEL_69;
  }
  *(void *)&v168[0] = a1;
  id v100 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192990);
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    goto LABEL_68;
  }

  *(void *)&v168[0] = a1;
  id v101 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1929A0);
  if (swift_dynamicCast())
  {
    sub_24D5B38B0((void *)v169);
    goto LABEL_68;
  }

  *(void *)&v168[0] = a1;
  id v102 = a1;
  if (swift_dynamicCast())
  {
    sub_24D5B385C((uint64_t)&v169);
    goto LABEL_68;
  }
  uint64_t v159 = v17;

  v103 = (void *)sub_24DCC8818();
  id v104 = objc_msgSend(v103, sel_userInfo);
  uint64_t v105 = sub_24DCC9578();

  uint64_t v106 = sub_24DCC97E8();
  if (*(void *)(v105 + 16) && (unint64_t v108 = sub_24D4053BC(v106, v107), (v109 & 1) != 0))
  {
    sub_24D3F7E8C(*(void *)(v105 + 56) + 32 * v108, (uint64_t)&v169);
  }
  else
  {
    long long v169 = 0u;
    long long v170 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v170 + 1))
  {
    sub_24D3FB6F8(0, (unint64_t *)&qword_26B1940A0);
    if (swift_dynamicCast())
    {
      v110 = *(void **)&v168[0];
      swift_retain();
      swift_retain();
      id v111 = v103;
      id v112 = v110;
      sub_24DB6BA1C(v112, v162 & 1, a3, v111, (void (*)(long long *))a4, a5);

      swift_release_n();
      swift_release_n();
      return;
    }
  }
  else
  {
    sub_24D415F74((uint64_t)&v169, qword_26B197F50);
  }
  id v113 = objc_msgSend(v103, sel_userInfo);
  uint64_t v114 = sub_24DCC9578();

  uint64_t v166 = *MEMORY[0x263F083F0];
  uint64_t v115 = sub_24DCC97E8();
  if (*(void *)(v114 + 16) && (unint64_t v117 = sub_24D4053BC(v115, v116), (v118 & 1) != 0))
  {
    uint64_t v119 = a3;
    sub_24D3F7E8C(*(void *)(v114 + 56) + 32 * v117, (uint64_t)&v169);
  }
  else
  {
    uint64_t v119 = a3;
    long long v169 = 0u;
    long long v170 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v120 = swift_allocObject();
  if (*((void *)&v170 + 1))
  {
    uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_269870660);
    if (swift_dynamicCast())
    {
      uint64_t v164 = v121;
      uint64_t v157 = a5;
      v158 = (void (*)(long long *))a4;
      v122 = (uint64_t *)(v120 + 16);
      *(void *)(v120 + 16) = *(void *)&v168[0];
      dispatch_group_t v165 = dispatch_group_create();
      a4 = *(void *)(v120 + 16);
      if (a4 >> 62) {
        goto LABEL_112;
      }
      uint64_t v123 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      while (1)
      {
        if (!v123)
        {
LABEL_108:
          if (v162)
          {
            id v134 = objc_msgSend(v103, sel_userInfo);
            uint64_t v135 = sub_24DCC9578();

            uint64_t v136 = sub_24DCC97E8();
            uint64_t v138 = v137;
            swift_beginAccess();
            uint64_t v139 = *(void *)(v120 + 16);
            *((void *)&v170 + 1) = v164;
            *(void *)&long long v169 = v139;
            sub_24D3F7E7C(&v169, v168);
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v179 = v135;
            sub_24D706588(v168, v136, v138, isUniquelyReferenced_nonNull_native);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v141 = objc_msgSend(v103, sel_domain);
            sub_24DCC97E8();

            id v142 = objc_msgSend(v103, sel_code);
            id v143 = objc_allocWithZone(MEMORY[0x263F087E8]);
            v144 = (void *)sub_24DCC97B8();
            swift_bridgeObjectRelease();
            v145 = (void *)sub_24DCC9558();
            swift_bridgeObjectRelease();
            id v146 = objc_msgSend(v143, sel_initWithDomain_code_userInfo_, v144, v142, v145);

            *(void *)&long long v169 = v146;
            WORD4(v169) = 256;
            id v147 = v146;
            v158(&v169);
            swift_release();
            swift_release();
          }
          else
          {
            v148 = *(void **)(*(void *)(v119 + 16) + 64);
            v149 = (void *)swift_allocObject();
            v149[2] = v103;
            v149[3] = v120;
            uint64_t v150 = v159;
            v149[4] = sub_24DB78D7C;
            v149[5] = v150;
            swift_retain();
            id v151 = v103;
            swift_retain();
            id v152 = v148;
            dispatch_group_t v153 = v165;
            sub_24D3E2DA8((uint64_t)"normalizeError(_:synchronous:completionHandler:)", 48, 2, 0, v152, (uint64_t)sub_24DB78DBC, (uint64_t)v149);
            swift_release();
            swift_release();

            swift_release();
          }
          goto LABEL_63;
        }
        a4 = v165;
        uint64_t v124 = objc_sync_enter((id)a4);
        if (v124)
        {
LABEL_116:
          MEMORY[0x270FA5388](v124);
          unint64_t v155 = a4;
          swift_release_n();
          swift_release();
          sub_24DA89268((uint64_t (*)(uint64_t))sub_24D57ED98, (uint64_t)&v154, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314);
        }
        unint64_t v125 = 0;
        uint64_t v126 = v123 - 1;
        while (1)
        {
          swift_beginAccess();
          uint64_t v127 = *v122;
          if ((*v122 & 0xC000000000000001) == 0) {
            break;
          }
          id v128 = (id)MEMORY[0x253328820](v125);
LABEL_101:
          v129 = v128;
          swift_endAccess();
          uint64_t v130 = objc_sync_exit((id)a4);
          if (v130) {
            goto LABEL_115;
          }

          dispatch_group_enter((dispatch_group_t)a4);
          v131 = (void (*)(void))(id)a4;
          swift_retain();
          id v132 = v129;
          sub_24DB4FE84(v132, v162 & 1, v119, v131, v120, v125);

          swift_release();
          if (v126 == v125) {
            goto LABEL_108;
          }
          uint64_t v124 = objc_sync_enter(v131);
          ++v125;
          if (v124) {
            goto LABEL_116;
          }
        }
        if (v125 < *(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          break;
        }
        __break(1u);
LABEL_112:
        swift_bridgeObjectRetain();
        uint64_t v123 = sub_24DCCA9C8();
        swift_bridgeObjectRelease();
        if (v123 < 0)
        {
          __break(1u);
          goto LABEL_114;
        }
      }
      id v128 = *(id *)(v127 + 8 * v125 + 32);
      goto LABEL_101;
    }
  }
  else
  {
    sub_24D415F74((uint64_t)&v169, qword_26B197F50);
  }
  swift_deallocUninitializedObject();
  *(void *)&long long v169 = a1;
  WORD4(v169) = 256;
  id v133 = a1;
  ((void (*)(long long *))a4)(&v169);

  swift_release();
  swift_release();
}

uint64_t sub_24DB76E74(uint64_t a1, void *a2, unint64_t a3, uint64_t a4, void *a5, unint64_t a6, void **a7, void **a8, char *a9, uint64_t a10, void *a11)
{
  uint64_t v119 = a7;
  uint64_t v126 = a4;
  unint64_t v128 = a3;
  uint64_t v106 = a2;
  uint64_t v127 = a1;
  uint64_t v100 = sub_24DCC8408();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  id v98 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B194240);
  uint64_t v15 = MEMORY[0x270FA5388](v112);
  id v101 = (uint64_t *)((char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v15);
  id v111 = (uint64_t *)((char *)&v96 - v17);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199BC0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v122 = (uint64_t)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for VFSItem(0);
  uint64_t v123 = *(void *)(v20 - 8);
  uint64_t v124 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v108 = (uint64_t)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_24DCC8A58();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v105 = (char *)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  unint64_t v125 = (char *)&v96 - v27;
  uint64_t v104 = v28;
  MEMORY[0x270FA5388](v26);
  int v30 = (char *)&v96 - v29;
  uint64_t v31 = sub_24DCC9078();
  uint64_t v120 = *(void *)(v31 - 8);
  uint64_t v121 = v31;
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v96 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = (void *)swift_allocObject();
  uint64_t v35 = a5;
  v34[2] = a5;
  v34[3] = a6;
  uint64_t v36 = v119;
  v34[4] = v119;
  v34[5] = a8;
  v34[6] = a9;
  v34[7] = a10;
  char v118 = v34;
  v34[8] = a11;
  id v113 = v35;
  unint64_t v115 = a6;
  sub_24D40B3C8(a6);
  uint64_t v114 = v36;
  uint64_t v119 = a8;
  uint64_t v37 = v127;
  swift_retain();
  unint64_t v117 = a9;
  swift_retain();
  swift_retain();
  uint64_t v116 = a11;
  swift_retain();
  id v38 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  id v102 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v102(v30, v37, v22);
  unint64_t v39 = v128;
  sub_24D40B3C8(v128);
  sub_24D40B3C8(v39);
  uint64_t v40 = sub_24DCC9068();
  os_log_type_t v41 = sub_24DCCA118();
  BOOL v42 = os_log_type_enabled(v40, v41);
  uint64_t v109 = v23;
  uint64_t v103 = v23 + 16;
  if (v42)
  {
    uint64_t v43 = swift_slowAlloc();
    uint64_t v110 = a10;
    uint64_t v44 = v43;
    uint64_t v97 = swift_slowAlloc();
    uint64_t v130 = v97;
    *(_DWORD *)uint64_t v44 = 136446466;
    uint64_t v107 = (void (*)(uint64_t, uint64_t))(v44 + 4);
    id v45 = (void *)sub_24DCC8948();
    id v46 = objc_msgSend(v45, sel_fp_shortDescription);

    uint64_t v47 = sub_24DCC97E8();
    unint64_t v49 = v48;

    uint64_t v129 = sub_24D418FB4(v47, v49, &v130);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    uint64_t v51 = v22;
    uint64_t v107 = v50;
    v50((uint64_t)v30, v22);
    *(_WORD *)(v44 + 12) = 2082;
    unint64_t v52 = v128;
    sub_24D40B3C8(v128);
    unint64_t v53 = sub_24D3D865C(v52);
    unint64_t v55 = v54;
    sub_24D4170B0(v52);
    uint64_t v129 = sub_24D418FB4(v53, v55, &v130);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    sub_24D4170B0(v52);
    sub_24D4170B0(v52);
    _os_log_impl(&dword_24D3D0000, v40, v41, "create fault at %{public}s for %{public}s", (uint8_t *)v44, 0x16u);
    uint64_t v56 = v97;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v56, -1, -1);
    uint64_t v57 = v44;
    uint64_t v37 = v127;
    uint64_t v58 = v110;
    MEMORY[0x25332B030](v57, -1, -1);

    (*(void (**)(char *, uint64_t))(v120 + 8))(v33, v121);
  }
  else
  {
    v59 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    uint64_t v51 = v22;
    uint64_t v107 = v59;
    v59((uint64_t)v30, v22);
    unint64_t v52 = v128;
    sub_24D4170B0(v128);
    sub_24D4170B0(v52);

    (*(void (**)(char *, uint64_t))(v120 + 8))(v33, v121);
    uint64_t v58 = a10;
  }
  uint64_t v60 = v122;
  uint64_t v61 = v126;
  sub_24D40BD70(0, 1, 0, v122);
  uint64_t v62 = v60;
  uint64_t v63 = v123;
  uint64_t v64 = v124;
  int v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v62, 1, v124);
  uint64_t v66 = (uint64_t)v125;
  if (v65 != 1)
  {
    uint64_t v76 = v62;
    uint64_t v77 = v108;
    sub_24D3FC620(v76, v108, type metadata accessor for VFSItem);
    uint64_t v78 = v63;
    id v79 = v111;
    sub_24D3FC480(v77, (uint64_t)v111, type metadata accessor for VFSItem);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v78 + 56))(v79, 0, 1, v64);
    swift_storeEnumTagMultiPayload();
    sub_24D66F1BC(v79, v113, v115, v114, v119, v117, v58, v116);
    sub_24D415F74((uint64_t)v79, (uint64_t *)&unk_26B194240);
    sub_24D3FCD78(v77, type metadata accessor for VFSItem);
    return swift_release();
  }
  sub_24D415F74(v62, (uint64_t *)&unk_26B199BC0);
  unint64_t v67 = sub_24D82B150(v52);
  uint64_t v68 = v51;
  uint64_t v69 = v109;
  if (!v67)
  {
LABEL_10:
    uint64_t v110 = v58;
    uint64_t v80 = v37;
    sub_24DCC89A8();
    type metadata accessor for VFSFileTree(0);
    id v81 = (void *)swift_dynamicCastClassUnconditional();
    swift_retain();
    if (!objc_sync_enter(v81))
    {
      uint64_t v82 = v81[20];
      swift_retain();
      if (objc_sync_exit(v81)) {
        sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v81);
      }
      swift_release();
      uint64_t v83 = *(void *)(v82 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs);
      swift_bridgeObjectRetain();
      swift_release();
      char v84 = sub_24DBA5468(v83);
      swift_bridgeObjectRelease();
      if (v84)
      {
        v85 = v105;
        v102(v105, v80, v68);
        unint64_t v86 = (*(unsigned __int8 *)(v69 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
        unint64_t v87 = (v104 + v86 + 7) & 0xFFFFFFFFFFFFFFF8;
        v88 = (char *)swift_allocObject();
        id v89 = v118;
        *((void *)v88 + 2) = sub_24DB789F4;
        *((void *)v88 + 3) = v89;
        uint64_t v90 = v68;
        unint64_t v91 = v128;
        *((void *)v88 + 4) = v61;
        *((void *)v88 + 5) = v91;
        (*(void (**)(char *, char *, uint64_t))(v69 + 32))(&v88[v86], v85, v90);
        id v92 = v106;
        *(void *)&v88[v87] = v106;
        sub_24D40B3C8(v91);
        swift_retain();
        swift_retain();
        sub_24DB3B6CC(v66, v92, v91, (void (*)(uint64_t *))sub_24DB78A0C, (uint64_t)v88);
        swift_release();
        v107(v66, v90);
        return swift_release();
      }
      id v93 = (void *)sub_24DCC8948();
      id v81 = (id)FPItemNotFoundErrorAtURL();

      if (v81)
      {
        id v94 = v101;
        *id v101 = v81;
        swift_storeEnumTagMultiPayload();
        sub_24D66F1BC(v94, v113, v115, v114, v119, v117, v110, v116);
        sub_24D415F74((uint64_t)v94, (uint64_t *)&unk_26B194240);
        v107(v66, v68);
        return swift_release();
      }

      sub_24D4170B0(v115);
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      __break(1u);
    }
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v81);
  }
  v70 = v67;
  if ((objc_msgSend(v67, sel_shouldFailCoordinationIfDownloadRequired) & 1) == 0)
  {

    goto LABEL_10;
  }
  LODWORD(v130) = 1;
  sub_24D5F77E0(MEMORY[0x263F8EE78]);
  sub_24DB59FB4((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
  uint64_t v71 = v58;
  id v72 = v98;
  uint64_t v73 = v100;
  sub_24DCC8808();
  uint64_t v74 = sub_24DCC83E8();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v72, v73);
  v75 = v111;
  *id v111 = v74;
  swift_storeEnumTagMultiPayload();
  sub_24D66F1BC(v75, v113, v115, v114, v119, v117, v71, v116);

  sub_24D415F74((uint64_t)v75, (uint64_t *)&unk_26B194240);
  return swift_release();
}

uint64_t sub_24DB77A74(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B194760);
  sub_24D3E4A9C(&qword_26986EFA8, &qword_26B194760);
  uint64_t v4 = sub_24DCC9DB8();
  v2[4] = v4;
  v2[5] = v3;
  return MEMORY[0x270FA2498](sub_24DB77B2C, v4, v3);
}

uint64_t sub_24DB77B2C()
{
  uint64_t v1 = sub_24DB38594((uint64_t)sub_24DB4D2F4, 0);
  uint64_t v2 = v0[2];
  uint64_t v3 = sub_24DB3952C(v1);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = sub_24D58F5D0(v3);
  swift_bridgeObjectRelease();
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 480))(100, v5);
  v0[6] = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_24DB4C9FC(v8, v6);
  swift_bridgeObjectRelease();
  int64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v27 = v0;
    uint64_t v28 = MEMORY[0x263F8EE78];
    sub_24D417E98(0, v10, 0);
    uint64_t result = sub_24DC87F98(v9);
    uint64_t v11 = result;
    uint64_t v13 = v12;
    char v15 = v14 & 1;
    do
    {
      if (v11 < 0 || v11 >= 1 << *(unsigned char *)(v9 + 32))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        return result;
      }
      if (((*(void *)(v9 + 56 + (((unint64_t)v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_19;
      }
      if (*(_DWORD *)(v9 + 36) != v13) {
        goto LABEL_20;
      }
      uint64_t v16 = *(void *)(v9 + 48) + 16 * v11;
      uint64_t v17 = *(void *)v16;
      char v18 = *(unsigned char *)(v16 + 8);
      unint64_t v20 = *(void *)(v28 + 16);
      unint64_t v19 = *(void *)(v28 + 24);
      if (v20 >= v19 >> 1) {
        sub_24D417E98(v19 > 1, v20 + 1, 1);
      }
      v27[7] = v28;
      *(void *)(v28 + 16) = v20 + 1;
      uint64_t v21 = v28 + 16 * v20;
      *(void *)(v21 + 32) = v17;
      *(unsigned char *)(v21 + 40) = v18;
      *(unsigned char *)(v21 + 41) = 0;
      uint64_t result = sub_24DC8803C(v11, v13, v15 & 1, v9);
      uint64_t v11 = result;
      uint64_t v13 = v22;
      char v15 = v23 & 1;
      --v10;
    }
    while (v10);
    sub_24D4C6A6C(result, v22, v23 & 1);
    swift_release();
    uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2698706C8 + dword_2698706C8);
    uint64_t v24 = (void *)swift_task_alloc();
    v27[8] = v24;
    void *v24 = v27;
    v24[1] = sub_24DB77E94;
    return v26(v28, 1);
  }
  else
  {
    swift_release();
    *(void *)(v0[3] + 56) = v0[6];
    swift_bridgeObjectRelease();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    return v25();
  }
}

uint64_t sub_24DB77E94()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 32);
    uint64_t v7 = *(void *)(v2 + 40);
    return MEMORY[0x270FA2498](sub_24DB77FF8, v6, v7);
  }
}

uint64_t sub_24DB77FF8()
{
  *(void *)(v0[3] + 56) = v0[6];
  swift_bridgeObjectRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24DB78068(uint64_t a1)
{
  return sub_24DB4D098(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_24DB78088(uint64_t a1)
{
  return a1;
}

uint64_t sub_24DB780BC(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  if (*a1 == *(void *)(v2 + 56) && a1[1] == *(void *)(v2 + 64)) {
    return 1;
  }
  else {
    return sub_24DCCAE28() & 1;
  }
}

uint64_t sub_24DB78114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_24DB4D128(a1, a2, a3, a4);
}

id sub_24DB78130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24DB4D244(a1, a2, a3);
}

double sub_24DB7814C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_24DB4BC0C(*(void **)a1, *(unsigned __int8 *)(a1 + 8) | (*(unsigned __int8 *)(a1 + 9) << 8), a2, a3, a4, *(void *)(v5 + 16), a5);
}

#error "24DB78238: call analysis failed (funcsize=55)"

uint64_t sub_24DB78258(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 144);
  uint64_t v2 = *(void **)(a1 + 152);
  uint64_t v4 = *(void *)(a1 + 176);
  uint64_t v8 = *(void *)(a1 + 168);
  unint64_t v5 = *(void *)(a1 + 184);
  int64_t v10 = *(void **)(a1 + 224);
  uint64_t v11 = *(void **)(a1 + 240);
  unint64_t v15 = *(void *)(a1 + 280);
  uint64_t v16 = *(void *)(a1 + 272);
  uint64_t v13 = *(void *)(a1 + 296);
  uint64_t v14 = *(void *)(a1 + 288);
  unint64_t v12 = *(void *)(a1 + 304);
  uint64_t v17 = *(void **)(a1 + 352);
  char v18 = *(void **)(a1 + 344);
  uint64_t v20 = *(void *)(a1 + 376);
  uint64_t v21 = *(void *)(a1 + 368);
  unint64_t v19 = *(void *)(a1 + 384);
  uint64_t v22 = *(void **)(a1 + 424);
  char v23 = *(void **)(a1 + 496);
  char v6 = *(unsigned char *)(a1 + 160);
  char v9 = *(unsigned char *)(a1 + 360);
  sub_24D3E386C(*(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104));
  sub_24D3E380C(v3, v2, v6);
  sub_24D3E3850(v8, v4, v5);

  sub_24D400D4C(v16, v15, v14, v13, v12);
  sub_24D3E380C(v18, v17, v9);
  sub_24D3E3850(v21, v20, v19);
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_24DB78400()
{
  return swift_deallocObject();
}

void *sub_24DB78410@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

void *sub_24DB78454@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, void))(v2 + 16))(&v6, *a1);
  if (!v3) {
    *a2 = v6;
  }
  return result;
}

unint64_t sub_24DB7849C()
{
  unint64_t result = qword_269870748;
  if (!qword_269870748)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269870740);
    sub_24DB78510();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870748);
  }
  return result;
}

unint64_t sub_24DB78510()
{
  unint64_t result = qword_269870750;
  if (!qword_269870750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870750);
  }
  return result;
}

uint64_t sub_24DB78564()
{
  return sub_24DB4353C(v0, (uint64_t (*)(void *))sub_24DB3AA3C);
}

void sub_24DB78594(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
}

uint64_t sub_24DB7859C()
{
  return sub_24DB4353C(v0, (uint64_t (*)(void *))sub_24DB3A89C);
}

void sub_24DB785CC(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
}

uint64_t sub_24DB785D4(uint64_t *a1, uint64_t a2, char a3)
{
  return sub_24DB4D38C(a1, a2, a3 & 1);
}

uint64_t sub_24DB785E0(void **a1, uint64_t a2, char a3)
{
  return sub_24DB4D4A8(a1, a2, a3 & 1);
}

uint64_t sub_24DB785EC()
{
  return sub_24DB43BE0();
}

uint64_t sub_24DB785F4()
{
  return sub_24DB43C98(v0);
}

uint64_t sub_24DB78610()
{
  return objectdestroy_173Tm();
}

uint64_t objectdestroy_173Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DB78664()
{
  return sub_24DB4D5B0(*(void *)(v0 + 16), (void **)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_24DB7868C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DB786C4()
{
  return sub_24DB4D664(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
}

uint64_t sub_24DB786EC()
{
  return sub_24DB46A8C(v0);
}

double sub_24DB78708@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24DB4D7BC(a1, a2);
}

double sub_24DB78710@<D0>(uint64_t a1@<X8>)
{
  return sub_24DB4D89C(a1);
}

uint64_t sub_24DB78718(uint64_t a1)
{
  return sub_24D62969C(a1, *(uint64_t (**)(void, void, uint64_t))(v1 + 16));
}

uint64_t sub_24DB78774()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24DB787BC(uint64_t a1)
{
  sub_24D5A7384(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(void, id))(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_24DB787CC()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DB78854()
{
  return swift_deallocObject();
}

uint64_t sub_24DB78864()
{
  return swift_deallocObject();
}

uint64_t sub_24DB78874()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24DB7889C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_24DB788C8@<X0>(uint64_t a1@<X8>)
{
  return sub_24DB47F30(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_24DB788E4@<X0>(uint64_t a1@<X8>)
{
  return sub_24DB46454(*(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), a1);
}

uint64_t sub_24DB78910()
{
  return sub_24DB46A24(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_24DB78934()
{
  return sub_24DB23BAC(*(void *)(v0 + 16), *(void **)(v0 + 24), *(uint64_t (**)(void))(v0 + 32));
}

uint64_t objectdestroy_455Tm()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DB7898C()
{
  sub_24D4170B0(*(void *)(v0 + 24));
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24DB789F4(void *a1)
{
  sub_24D66F1BC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 32), *(void ***)(v1 + 40), *(char **)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t objectdestroy_465Tm()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 40));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

char *sub_24DB78B0C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (void (*)(void **))v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  unint64_t v8 = v1[5];
  char v9 = *(void **)((char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24DB4862C(a1, v5, v6, v7, v8, (uint64_t)v1 + v4, v9);
}

uint64_t sub_24DB78BB0()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_24DB78C84(void *a1)
{
  sub_24DCC8A58();
  unint64_t v3 = *(void (**)(void *))(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);

  return sub_24DB48C30(a1, v3, v4);
}

uint64_t sub_24DB78D18()
{
  sub_24D4170B0(*(void *)(v0 + 16));
  swift_release();

  swift_release();

  return swift_deallocObject();
}

void sub_24DB78D68(uint64_t a1)
{
  sub_24D64A5E4(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void (**)(void *, id, id))(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_24DB78E28()
{
  return sub_24DB78874();
}

uint64_t sub_24DB78E40(void *a1)
{
  return sub_24DB7889C(a1);
}

uint64_t sub_24DB78E58@<X0>(_DWORD *a1@<X8>)
{
  return sub_24DB47F00(a1);
}

void sub_24DB78E7C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = sub_24DCC8818();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

void sub_24DB78EE0(char a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_24DCC8818();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, void))(a3 + 16))(a3, a1 & 1);
}

uint64_t sub_24DB78F50(void *a1, void (*a2)(void *))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194258);
  MEMORY[0x270FA5388](v4);
  id v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *id v6 = a1;
  swift_storeEnumTagMultiPayload();
  id v7 = a1;
  a2(v6);
  return sub_24D415F74((uint64_t)v6, &qword_26B194258);
}

uint64_t sub_24DB79010(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v96 = a6;
  uint64_t v111 = a5;
  uint64_t v100 = a4;
  id v101 = a3;
  uint64_t v113 = a2;
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194258);
  uint64_t v7 = MEMORY[0x270FA5388](v99);
  unint64_t v91 = (uint64_t *)&v86[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  id v98 = &v86[-v9];
  uint64_t v10 = sub_24DCC8D88();
  uint64_t v106 = *(void *)(v10 - 8);
  uint64_t v107 = v10;
  MEMORY[0x270FA5388](v10);
  id v93 = &v86[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v103 = (unsigned char *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B192380);
  MEMORY[0x270FA5388](v103);
  uint64_t v109 = &v86[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B20);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  id v92 = &v86[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  id v94 = &v86[-v17];
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = &v86[-v19];
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = &v86[-v21];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1934B0);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v95 = &v86[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v105 = &v86[-v27];
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = &v86[-v28];
  uint64_t v30 = type metadata accessor for ChangeEnumeratorAnchor();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v90 = &v86[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = &v86[-v34];
  uint64_t v97 = a1;
  uint64_t v36 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1992E0);
  uint64_t v37 = (unsigned char *)swift_dynamicCastClassUnconditional();
  sub_24D415FD0(v113, (uint64_t)v29, &qword_26B1934B0);
  id v38 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v31 + 48);
  uint64_t v108 = v31 + 48;
  unsigned int v39 = v38(v29, 1, v30);
  uint64_t v104 = v30;
  uint64_t v112 = v36;
  id v102 = v38;
  if (v39 == 1)
  {
    swift_retain();
    sub_24D415F74((uint64_t)v29, &qword_26B1934B0);
    uint64_t v40 = v111;
    goto LABEL_12;
  }
  sub_24DB7D0D4((uint64_t)v29, (uint64_t)v35);
  uint64_t v41 = v106;
  uint64_t v42 = v107;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v106 + 16))(v22, v35, v107);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v41 + 56))(v22, 0, 1, v42);
  uint64_t v43 = (uint64_t)&v37[qword_26B1A2560];
  swift_beginAccess();
  sub_24D415FD0(v43, (uint64_t)v20, (uint64_t *)&unk_26B196B20);
  uint64_t v44 = v109;
  uint64_t v45 = (uint64_t)&v109[*((int *)v103 + 12)];
  sub_24D415FD0((uint64_t)v22, (uint64_t)v109, (uint64_t *)&unk_26B196B20);
  sub_24D415FD0((uint64_t)v20, v45, (uint64_t *)&unk_26B196B20);
  id v46 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v41 + 48);
  int v47 = v46(v44, 1, v42);
  id v89 = v35;
  if (v47 != 1)
  {
    v88 = v20;
    uint64_t v103 = v22;
    unint64_t v49 = v94;
    sub_24D415FD0((uint64_t)v44, (uint64_t)v94, (uint64_t *)&unk_26B196B20);
    int v50 = v46((unsigned char *)v45, 1, v42);
    uint64_t v40 = v111;
    if (v50 != 1)
    {
      uint64_t v53 = v106;
      unint64_t v54 = v93;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v106 + 32))(v93, v45, v42);
      sub_24DB7F6EC(&qword_26B192370, MEMORY[0x263F07508]);
      swift_retain();
      int v87 = sub_24DCC9798();
      unint64_t v55 = *(void (**)(unsigned char *, uint64_t))(v53 + 8);
      v55(v54, v42);
      sub_24D415F74((uint64_t)v88, (uint64_t *)&unk_26B196B20);
      sub_24D415F74((uint64_t)v103, (uint64_t *)&unk_26B196B20);
      v55(v49, v42);
      sub_24D415F74((uint64_t)v109, (uint64_t *)&unk_26B196B20);
      if (v87) {
        goto LABEL_11;
      }
LABEL_9:
      type metadata accessor for NSFileProviderError(0);
      uint64_t v116 = -1002;
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24DB7F6EC(&qword_26B193F20, type metadata accessor for NSFileProviderError);
      sub_24DCC8808();
      uint64_t v51 = (uint64_t)v98;
      *id v98 = v114;
      swift_storeEnumTagMultiPayload();
      v101(v51);
      swift_release();
      sub_24D415F74(v51, &qword_26B194258);
      return sub_24D907118((uint64_t)v89);
    }
    swift_retain();
    sub_24D415F74((uint64_t)v88, (uint64_t *)&unk_26B196B20);
    sub_24D415F74((uint64_t)v103, (uint64_t *)&unk_26B196B20);
    (*(void (**)(unsigned char *, uint64_t))(v106 + 8))(v49, v42);
LABEL_8:
    sub_24D415F74((uint64_t)v109, &qword_26B192380);
    goto LABEL_9;
  }
  swift_retain();
  sub_24D415F74((uint64_t)v20, (uint64_t *)&unk_26B196B20);
  sub_24D415F74((uint64_t)v22, (uint64_t *)&unk_26B196B20);
  int v48 = v46((unsigned char *)v45, 1, v107);
  uint64_t v40 = v111;
  if (v48 != 1) {
    goto LABEL_8;
  }
  sub_24D415F74((uint64_t)v109, (uint64_t *)&unk_26B196B20);
LABEL_11:
  sub_24D907118((uint64_t)v89);
  uint64_t v30 = v104;
  id v38 = v102;
LABEL_12:
  type metadata accessor for FPFileTree();
  swift_dynamicCastClassUnconditional();
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v57 = objc_msgSend(Strong, sel_providerDomainID);

  if (v40 < 1) {
    goto LABEL_26;
  }
  if ((unint64_t)v40 >= 0x1F4) {
    sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/fpfs/enumerators/ChangeEnumerator.swift", 102, 2, 96);
  }
  uint64_t v116 = MEMORY[0x263F8EE78];
  uint64_t v115 = MEMORY[0x263F8EE78];
  uint64_t v109 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B199920);
  uint64_t v58 = (void *)swift_dynamicCastClassUnconditional();
  v59 = v105;
  sub_24D415FD0(v113, (uint64_t)v105, &qword_26B1934B0);
  if (v38(v59, 1, v30) == 1)
  {
    swift_retain();
    sub_24D415F74((uint64_t)v59, &qword_26B1934B0);
    uint64_t v60 = 0;
  }
  else
  {
    uint64_t v60 = *(void **)&v59[*(int *)(v30 + 24)];
    swift_retain();
    sub_24D907118((uint64_t)v59);
  }
  id v61 = v57;
  uint64_t v62 = v110;
  uint64_t v63 = sub_24DB00A88(v60, v40, v58, &v115, (uint64_t)v61);
  if (!v62)
  {
    uint64_t v65 = v63;
    char v66 = v64;
    swift_release();

    uint64_t v67 = swift_dynamicCastClassUnconditional();
    uint64_t v68 = v95;
    sub_24D415FD0(v113, (uint64_t)v95, &qword_26B1934B0);
    uint64_t v69 = v104;
    if (v102(v68, 1, v104) == 1)
    {
      swift_retain();
      sub_24D415F74((uint64_t)v68, &qword_26B1934B0);
      uint64_t v70 = 0;
    }
    else
    {
      uint64_t v70 = *(void *)&v68[*(int *)(v69 + 20)];
      swift_retain();
      sub_24D907118((uint64_t)v68);
    }
    uint64_t v71 = v97;
    id v72 = v61;
    uint64_t v73 = v96;
    swift_retain();
    swift_retain();
    uint64_t v74 = sub_24DB03A4C(v70, v111, v67, v73, v71, &v116, v72, &v115);
    LODWORD(v113) = v75;
    swift_release();
    swift_release();
    swift_release();

    uint64_t v76 = (uint64_t)&v109[qword_26B1A2560];
    swift_beginAccess();
    uint64_t v77 = v92;
    sub_24D415FD0(v76, (uint64_t)v92, (uint64_t *)&unk_26B196B20);
    uint64_t v79 = v106;
    uint64_t v78 = v107;
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v106 + 48))(v77, 1, v107) != 1)
    {
      uint64_t v80 = (uint64_t)v90;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v79 + 32))(v90, v77, v78);
      uint64_t v81 = v104;
      *(void *)(v80 + *(int *)(v104 + 20)) = v74;
      *(void *)(v80 + *(int *)(v81 + 24)) = v65;
      uint64_t v82 = v115;
      uint64_t v83 = (uint64_t)v91;
      *unint64_t v91 = v116;
      *(void *)(v83 + 8) = v82;
      char v84 = v113 | v66;
      uint64_t v85 = v83 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B193FB8) + 80);
      *(unsigned char *)(v83 + 16) = v84 & 1;
      sub_24D9070B4(v80, v85);
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v101(v83);
      swift_release();

      sub_24D415F74(v83, &qword_26B194258);
      sub_24D907118(v80);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_26:
    sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/fpfs/enumerators/ChangeEnumerator.swift", 102, 2, 95);
  }
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_24DB79CE4()
{
  return sub_24DB7CD8C((uint64_t (*)(void))type metadata accessor for DummyObserver);
}

uint64_t type metadata accessor for DummyObserver()
{
  return self;
}

id sub_24DB79E04()
{
  return sub_24DB7CD8C((uint64_t (*)(void))type metadata accessor for LifetimeExtender);
}

uint64_t type metadata accessor for LifetimeExtender()
{
  return self;
}

uint64_t sub_24DB79E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6 = v5;
  uint64_t v23 = a3;
  uint64_t v11 = sub_24DCC92F8();
  uint64_t v25 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_24DCC9398();
  uint64_t v14 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(v6, sel_queue);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v6;
  v18[3] = a4;
  v18[4] = a5;
  v18[5] = a1;
  uint64_t v19 = v23;
  v18[6] = a2;
  v18[7] = v19;
  aBlock[4] = sub_24DB7D26C;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24D3D2E94;
  aBlock[3] = &block_descriptor_29_0;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24DCC9348();
  uint64_t v26 = MEMORY[0x263F8EE78];
  sub_24DB7F6EC((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
  sub_24D3E3170();
  sub_24DCCA5B8();
  MEMORY[0x2533282B0](0, v16, v13, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v24);
  return swift_release();
}

void sub_24DB7A148(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void **)(a1 + OBJC_IVAR____TtC9libfssync11FPFSIndexer_spotlightIndexer);
  if (v8)
  {
    sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
    id v10 = v8;
    uint64_t v11 = (void *)sub_24DCC9C18();
    sub_24D3FB6F8(0, (unint64_t *)&unk_26B1940B0);
    uint64_t v12 = (void *)sub_24DCC9C18();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a3;
    v15[4] = sub_24D6B7A94;
    v15[5] = v13;
    v15[0] = MEMORY[0x263EF8330];
    v15[1] = 1107296256;
    v15[2] = sub_24D6024BC;
    v15[3] = &block_descriptor_35_3;
    uint64_t v14 = _Block_copy(v15);
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_indexOutOfBandUpdatedItems_deletedItems_indexReason_completionHandler_, v11, v12, a6, v14);
    _Block_release(v14);
  }
  else
  {
    a2(0);
  }
}

uint64_t sub_24DB7A2D8(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t))
{
  v8[4] = nullsub_1;
  v8[5] = 0;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  v8[2] = sub_24DCB2804;
  v8[3] = &block_descriptor_138;
  id v6 = _Block_copy(v8);
  objc_msgSend(a2, sel_signalChangesWithCompletionHandler_, v6);
  _Block_release(v6);
  return a3(a1);
}

void sub_24DB7A428(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v87 = a7;
  id v90 = a6;
  int v91 = a5;
  uint64_t v85 = a4;
  uint64_t v83 = a3;
  uint64_t v11 = type metadata accessor for ChangeEnumeratorAnchor();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v84 = v13;
  uint64_t v86 = (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1934B0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24DCC9078();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v22 = sub_24DCC9068();
  int v81 = sub_24DCCA108();
  BOOL v23 = os_log_type_enabled(v22, (os_log_type_t)v81);
  uint64_t v89 = a8;
  unint64_t v82 = a1;
  if (v23)
  {
    uint64_t v76 = v17;
    uint64_t v77 = v16;
    uint64_t v78 = v11;
    uint64_t v80 = a2;
    uint64_t v24 = (_DWORD *)swift_slowAlloc();
    uint64_t v73 = swift_slowAlloc();
    aBlock[0] = v73;
    uint64_t v74 = v24;
    _DWORD *v24 = 136315650;
    os_log_t v75 = v22;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_24DCCA9C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v26 = v18;
    uint64_t v27 = MEMORY[0x263F8EE78];
    uint64_t v79 = v12;
    if (v25)
    {
      uint64_t v92 = MEMORY[0x263F8EE78];
      sub_24D7C7018(0, v25 & ~(v25 >> 63), 0);
      if (v25 < 0)
      {
        __break(1u);
        id v70 = (id)v25;
        sub_24DA88150((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/fpfs/enumerators/ChangeEnumerator.swift", 102, 2, 39, (void *)v25);
      }
      id v72 = v20;
      uint64_t v28 = 0;
      uint64_t v27 = v92;
      unint64_t v29 = a1;
      unint64_t v30 = a1 & 0xC000000000000001;
      do
      {
        if (v30) {
          id v31 = (id)MEMORY[0x253328820](v28, v29);
        }
        else {
          id v31 = *(id *)(v29 + 8 * v28 + 32);
        }
        uint64_t v32 = v31;
        id v33 = objc_msgSend(v31, sel_itemID);
        id v34 = objc_msgSend(v33, sel_identifier);

        uint64_t v92 = v27;
        unint64_t v36 = *(void *)(v27 + 16);
        unint64_t v35 = *(void *)(v27 + 24);
        if (v36 >= v35 >> 1)
        {
          sub_24D7C7018(v35 > 1, v36 + 1, 1);
          uint64_t v27 = v92;
        }
        ++v28;
        *(void *)(v27 + 16) = v36 + 1;
        *(void *)(v27 + 8 * v36 + 32) = v34;
      }
      while (v25 != v28);
      uint64_t v26 = v18;
      uint64_t v20 = v72;
    }
    id v38 = v74;
    type metadata accessor for NSFileProviderItemIdentifier(0);
    uint64_t v40 = MEMORY[0x253327CD0](v27, v39);
    unint64_t v42 = v41;
    swift_bridgeObjectRelease();
    uint64_t v92 = sub_24D418FB4(v40, v42, aBlock);
    sub_24DCCA428();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *((_WORD *)v38 + 6) = 2080;
    uint64_t v43 = sub_24D3FB6F8(0, (unint64_t *)&unk_26B1940B0);
    uint64_t v44 = swift_bridgeObjectRetain();
    uint64_t v45 = MEMORY[0x253327CD0](v44, v43);
    unint64_t v47 = v46;
    swift_bridgeObjectRelease();
    uint64_t v92 = sub_24D418FB4(v45, v47, aBlock);
    sub_24DCCA428();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *((_WORD *)v38 + 11) = 1024;
    LODWORD(v92) = v91 & 1;
    sub_24DCCA428();
    os_log_t v48 = v75;
    _os_log_impl(&dword_24D3D0000, v75, (os_log_type_t)v81, "🧲  pushing batch: updating=%s, deleting=%s hasMore=%{BOOL}d", (uint8_t *)v38, 0x1Cu);
    uint64_t v49 = v73;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v49, -1, -1);
    MEMORY[0x25332B030](v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v76);
    uint64_t v37 = v85;
    uint64_t v12 = v79;
    uint64_t v11 = v78;
    uint64_t v16 = v77;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    uint64_t v37 = v85;
  }
  sub_24D415FD0(v83, (uint64_t)v16, &qword_26B1934B0);
  uint64_t v50 = v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11) == 1)
  {
    sub_24D415F74((uint64_t)v16, &qword_26B1934B0);
    uint64_t v51 = 0;
  }
  else
  {
    sub_24DCC8718();
    swift_allocObject();
    sub_24DCC8708();
    sub_24DCC86E8();
    sub_24DB7F6EC((unint64_t *)&unk_26B193480, (void (*)(uint64_t))type metadata accessor for ChangeEnumeratorAnchor);
    uint64_t v52 = sub_24DCC86F8();
    unint64_t v54 = v53;
    swift_release();
    sub_24D907118((uint64_t)v16);
    uint64_t v51 = (void *)sub_24DCC8B28();
    sub_24D400DCC(v52, v54);
  }
  sub_24DCC8718();
  swift_allocObject();
  sub_24DCC8708();
  sub_24DCC86E8();
  sub_24DB7F6EC((unint64_t *)&unk_26B193480, (void (*)(uint64_t))type metadata accessor for ChangeEnumeratorAnchor);
  uint64_t v55 = sub_24DCC86F8();
  uint64_t v56 = v37;
  unint64_t v58 = v57;
  swift_release();
  v59 = (void *)sub_24DCC8B28();
  sub_24D400DCC(v55, v58);
  sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
  uint64_t v60 = (void *)sub_24DCC9C18();
  sub_24D3FB6F8(0, (unint64_t *)&unk_26B1940B0);
  id v61 = (void *)sub_24DCC9C18();
  uint64_t v62 = v56;
  uint64_t v63 = v86;
  sub_24D9070B4(v62, v86);
  unint64_t v64 = (*(unsigned __int8 *)(v50 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  uint64_t v65 = swift_allocObject();
  uint64_t v66 = v87;
  uint64_t v67 = v88;
  *(void *)(v65 + 16) = v88;
  *(void *)(v65 + 24) = v66;
  *(void *)(v65 + 32) = v89;
  *(unsigned char *)(v65 + 40) = v91 & 1;
  sub_24DB7D0D4(v63, v65 + v64);
  aBlock[4] = (uint64_t)sub_24DB7D138;
  aBlock[5] = v65;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24D6024BC;
  aBlock[3] = (uint64_t)&block_descriptor_40;
  uint64_t v68 = _Block_copy(aBlock);
  id v69 = v67;
  swift_retain();
  swift_release();
  objc_msgSend(v90, sel_indexOneBatchFromAnchor_toAnchor_updatedItems_deletedItems_completionHandler_, v51, v59, v60, v61, v68);
  _Block_release(v68);
}

void sub_24DB7AD10(void *a1, void *a2, void (*a3)(void, void, void), uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v61 = a6;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1934B8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ChangeEnumeratorAnchor();
  uint64_t v57 = *(void *)(v14 - 8);
  uint64_t v58 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24DCC9078();
  uint64_t v62 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v54 - v21;
  uint64_t v60 = a2;
  id v23 = objc_msgSend(a2, sel_domain);
  uint64_t v63 = v17;
  if (v23)
  {
    uint64_t v24 = v23;
    id v25 = objc_msgSend(v23, sel_log);
  }
  else
  {
    id v25 = 0;
  }
  id v26 = (id)fpfs_adopt_log();

  if (a1)
  {
    int v59 = a5;
    _s3__C4CodeOMa_0(0);
    v66[0] = -1006;
    id v27 = a1;
    sub_24DB7F6EC(qword_2698707F0, _s3__C4CodeOMa_0);
    if (sub_24DCC86A8())
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1934B0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v13, 1, 1, v28);
      uint64_t v29 = (uint64_t)v60 + OBJC_IVAR____TtC9libfssync11FPFSIndexer_lastIndexedAnchor;
      swift_beginAccess();
      sub_24DB7D1B4((uint64_t)v13, v29);
      swift_endAccess();
    }
    id v30 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v31 = a1;
    uint64_t v32 = sub_24DCC9068();
    os_log_type_t v33 = sub_24DCCA128();
    if (os_log_type_enabled(v32, v33))
    {
      id v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      id v56 = v26;
      unint64_t v36 = (void *)v35;
      uint64_t v55 = a3;
      *(_DWORD *)id v34 = 138412290;
      swift_getErrorValue();
      id v37 = sub_24DBA2828(v64);
      v66[0] = (uint64_t)v37;
      a3 = v55;
      sub_24DCCA428();
      *unint64_t v36 = v37;

      _os_log_impl(&dword_24D3D0000, v32, v33, "🧲  indexing failed: %@", v34, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      id v38 = v36;
      id v26 = v56;
      MEMORY[0x25332B030](v38, -1, -1);
      MEMORY[0x25332B030](v34, -1, -1);
    }
    else
    {
    }
    uint64_t v49 = v63;

    (*(void (**)(char *, uint64_t))(v62 + 8))(v20, v49);
    id v50 = a1;
    a3(v59 & 1, a1, 10);
  }
  else
  {
    id v56 = v26;
    id v39 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    sub_24D9070B4(v61, (uint64_t)v16);
    uint64_t v40 = sub_24DCC9068();
    os_log_type_t v41 = sub_24DCCA108();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v54 = a4;
      uint64_t v43 = (uint8_t *)v42;
      uint64_t v44 = swift_slowAlloc();
      uint64_t v55 = a3;
      uint64_t v45 = v44;
      v66[0] = v44;
      *(_DWORD *)uint64_t v43 = 136315138;
      int v59 = a5;
      uint64_t v46 = sub_24D906388();
      uint64_t v65 = sub_24D418FB4(v46, v47, v66);
      LOBYTE(a5) = v59;
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      sub_24D907118((uint64_t)v16);
      _os_log_impl(&dword_24D3D0000, v40, v41, "🧲  batch indexation succeeded for anchor %s", v43, 0xCu);
      swift_arrayDestroy();
      uint64_t v48 = v45;
      a3 = v55;
      MEMORY[0x25332B030](v48, -1, -1);
      MEMORY[0x25332B030](v43, -1, -1);
    }
    else
    {
      sub_24D907118((uint64_t)v16);
    }

    (*(void (**)(char *, uint64_t))(v62 + 8))(v22, v63);
    sub_24D9070B4(v61, (uint64_t)v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v13, 0, 1, v58);
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1934B0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v13, 0, 1, v51);
    uint64_t v52 = (uint64_t)v60 + OBJC_IVAR____TtC9libfssync11FPFSIndexer_lastIndexedAnchor;
    swift_beginAccess();
    sub_24DB7D1B4((uint64_t)v13, v52);
    swift_endAccess();
    a3(a5 & 1, 0, 0);
    id v26 = v56;
  }
  id v53 = (id)fpfs_adopt_log();
}

void sub_24DB7B3F0(void *a1, void (*a2)(void *), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1934B8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24DCC9078();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v14 = a1;
    a2(a1);
  }
  else
  {
    id v15 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v16 = sub_24DCC9068();
    os_log_type_t v17 = sub_24DCCA128();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_24D3D0000, v16, v17, "🧲  restarting indexing from scratch", v18, 2u);
      MEMORY[0x25332B030](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v19 = type metadata accessor for ChangeEnumeratorAnchor();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v9, 1, 1, v19);
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1934B0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v9, 0, 1, v20);
    uint64_t v21 = a4 + OBJC_IVAR____TtC9libfssync11FPFSIndexer_lastIndexedAnchor;
    swift_beginAccess();
    sub_24DB7D1B4((uint64_t)v9, v21);
    swift_endAccess();
    a2(0);
  }
}

uint64_t sub_24DB7B6B4(uint64_t a1, unint64_t a2, void *a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v32 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194238);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  id v15 = (char *)&v30 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (void **)((char *)&v30 - v20);
  MEMORY[0x270FA5388](v19);
  id v23 = (uint64_t *)((char *)&v30 - v22);
  if (a3)
  {
    *uint64_t v12 = a3;
    swift_storeEnumTagMultiPayload();
    id v24 = a3;
    id v23 = v12;
  }
  else
  {
    if (a2 >> 60 == 15)
    {
      uint64_t v25 = type metadata accessor for ChangeEnumeratorAnchor();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v15, 1, 1, v25);
    }
    else
    {
      id v31 = a4;
      sub_24DCC86D8();
      swift_allocObject();
      sub_24D3F9C18(a1, a2);
      sub_24DCC86C8();
      uint64_t v26 = type metadata accessor for ChangeEnumeratorAnchor();
      sub_24DB7F6EC((unint64_t *)&unk_26B193490, (void (*)(uint64_t))type metadata accessor for ChangeEnumeratorAnchor);
      sub_24DCC86B8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v15, 0, 1, v26);
      swift_release();
      sub_24D416034(a1, a2);
      a4 = v31;
    }
    swift_storeEnumTagMultiPayload();
    sub_24D3F0BA0((uint64_t)v15, (uint64_t)v18, &qword_26B194238);
    sub_24D3F0BA0((uint64_t)v18, (uint64_t)v21, &qword_26B194238);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      id v27 = *v21;
      type metadata accessor for NSFileProviderError(0);
      uint64_t v33 = -1002;
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24DB7F6EC(&qword_26B193F20, type metadata accessor for NSFileProviderError);
      sub_24DCC8808();
      uint64_t v28 = v34;

      *id v23 = v28;
    }
    else
    {
      sub_24D3F0BA0((uint64_t)v21, (uint64_t)v23, &qword_26B1934B0);
    }
    swift_storeEnumTagMultiPayload();
  }
  a4(v23);
  return sub_24D415F74((uint64_t)v23, &qword_26B194238);
}

uint64_t sub_24DB7BA84(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v6 = v4;
    uint64_t v4 = (void *)sub_24DCC8B68();
    unint64_t v8 = v7;
  }
  else
  {
    swift_retain();
    unint64_t v8 = 0xF000000000000000;
  }
  id v9 = a3;
  v5(v4, v8, a3);

  sub_24D416034((uint64_t)v4, v8);

  return swift_release();
}

uint64_t sub_24DB7BB30(char a1, void *a2, uint64_t a3, uint64_t (*a4)(void, void *), uint64_t a5, void *a6, void *a7)
{
  if (!a2) {
    return a4(a1 & 1, a2);
  }
  _s3__C4CodeOMa_1(0);
  v22[0] = -1002;
  id v14 = a2;
  sub_24DB7F6EC((unint64_t *)&qword_26B194040, _s3__C4CodeOMa_1);
  char v15 = sub_24DCC86A8();

  if ((v15 & 1) == 0) {
    return a4(a1 & 1, a2);
  }
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a4;
  v16[3] = a5;
  v16[4] = a2;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = sub_24DB7FC48;
  v17[3] = v16;
  v17[4] = a6;
  v22[4] = sub_24DB7FC4C;
  v22[5] = v17;
  v22[0] = MEMORY[0x263EF8330];
  v22[1] = 1107296256;
  v22[2] = sub_24D6024BC;
  v22[3] = &block_descriptor_126_1;
  uint64_t v18 = _Block_copy(v22);
  id v19 = a2;
  swift_retain();
  swift_retain();
  id v20 = a6;
  swift_release();
  objc_msgSend(a7, sel_dropIndexWithDropReason_completionHandler_, a3, v18);
  _Block_release(v18);
  return swift_release();
}

void sub_24DB7BD20(id a1, void (*a2)(uint64_t, id), int a3, id a4)
{
  id v6 = a1;
  if (!a1)
  {
    id v8 = a4;
    id v6 = a4;
  }
  id v9 = a1;
  a2(1, v6);
}

void sub_24DB7BD9C(uint64_t a1, void *a2, void (*a3)(void, id, uint64_t), uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v94 = a5;
  id v95 = a6;
  uint64_t v97 = a3;
  uint64_t v98 = a4;
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194258);
  MEMORY[0x270FA5388](v87);
  id v9 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24DCC9078();
  uint64_t v91 = *(void *)(v10 - 8);
  uint64_t v92 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1934B0);
  uint64_t v90 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v90 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v88 = (uint64_t)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v96 = (uint64_t)&v84 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v89 = (uint64_t)&v84 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v84 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v84 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v99 = (uint64_t)&v84 - v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194238);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (id *)((char *)&v84 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v93 = a2;
  id v30 = objc_msgSend(a2, sel_domain);
  if (v30)
  {
    id v31 = v30;
    id v32 = objc_msgSend(v30, sel_log);
  }
  else
  {
    id v32 = 0;
  }
  id v33 = (id)fpfs_adopt_log();

  sub_24D415FD0(a1, (uint64_t)v29, &qword_26B194238);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v34 = *v29;
    id v35 = *v29;
    v97(0, v34, 7);

LABEL_17:
    id v83 = (id)fpfs_adopt_log();

    return;
  }
  id v86 = v33;
  uint64_t v36 = (uint64_t)v29;
  uint64_t v37 = v99;
  sub_24D3F0BA0(v36, v99, &qword_26B1934B0);
  id v38 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  sub_24D415FD0(v37, (uint64_t)v25, &qword_26B1934B0);
  id v39 = sub_24DCC9068();
  os_log_type_t v40 = sub_24DCCA108();
  BOOL v41 = os_log_type_enabled(v39, v40);
  uint64_t v85 = v9;
  if (v41)
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    uint64_t v84 = swift_slowAlloc();
    uint64_t v101 = v84;
    *(_DWORD *)uint64_t v42 = 136315138;
    sub_24D415FD0((uint64_t)v25, (uint64_t)v22, &qword_26B1934B0);
    uint64_t v43 = type metadata accessor for ChangeEnumeratorAnchor();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v22, 1, v43) == 1)
    {
      sub_24D415F74((uint64_t)v22, &qword_26B1934B0);
      unint64_t v44 = 0xE500000000000000;
      uint64_t v45 = 0x3E6C696E3CLL;
    }
    else
    {
      uint64_t v45 = sub_24D906388();
      unint64_t v44 = v47;
      sub_24D907118((uint64_t)v22);
    }
    uint64_t v100 = sub_24D418FB4(v45, v44, &v101);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    sub_24D415F74((uint64_t)v25, &qword_26B1934B0);
    _os_log_impl(&dword_24D3D0000, v39, v40, "🧲  indexing from %s", v42, 0xCu);
    uint64_t v48 = v84;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v48, -1, -1);
    MEMORY[0x25332B030](v42, -1, -1);

    (*(void (**)(char *, uint64_t))(v91 + 8))(v12, v92);
    uint64_t v46 = v96;
    uint64_t v37 = v99;
  }
  else
  {
    sub_24D415F74((uint64_t)v25, &qword_26B1934B0);

    (*(void (**)(char *, uint64_t))(v91 + 8))(v12, v92);
    uint64_t v46 = v96;
  }
  uint64_t v49 = v89;
  sub_24D415FD0(v37, v89, &qword_26B1934B0);
  sub_24D415FD0(v49, v46, &qword_26B1934B0);
  uint64_t v50 = *(unsigned __int8 *)(v90 + 80);
  uint64_t v51 = (v50 + 40) & ~v50;
  uint64_t v52 = v14 + 7;
  unint64_t v53 = (v14 + 7 + v51) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v54 = (void *)swift_allocObject();
  uint64_t v55 = v93;
  id v56 = (void (*)(void, void, void))v97;
  uint64_t v57 = v98;
  v54[2] = v93;
  v54[3] = v56;
  v54[4] = v57;
  sub_24D3F0BA0(v49, (uint64_t)v54 + v51, &qword_26B1934B0);
  uint64_t v58 = v94;
  id v59 = v95;
  *(void *)((char *)v54 + v53) = v95;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v97 = *(void (**)(void, id, uint64_t))(Strong + 16);
    uint64_t v61 = Strong;
    uint64_t v92 = Strong;
    uint64_t v62 = v88;
    sub_24D415FD0(v99, v88, &qword_26B1934B0);
    uint64_t v63 = (v50 + 24) & ~v50;
    unint64_t v64 = (v52 + v63) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v65 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = v61;
    sub_24D3F0BA0(v62, v66 + v63, &qword_26B1934B0);
    uint64_t v67 = (void *)(v66 + v64);
    *uint64_t v67 = sub_24DB7F650;
    v67[1] = v54;
    *(void *)(v66 + v65) = 200;
    *(void *)(v66 + ((v65 + 15) & 0xFFFFFFFFFFFFFFF8)) = v58;
    uint64_t v68 = swift_allocObject();
    *(void *)(v68 + 16) = sub_24DB7F650;
    *(void *)(v68 + 24) = v54;
    id v69 = v55;
    swift_retain_n();
    id v70 = v95;
    id v71 = v95;
    swift_retain_n();
    id v72 = v69;
    id v73 = v71;
    swift_retain();
    swift_retain();
    sub_24D8272E0((uint64_t)"enumerateChanges(fromAnchor:suggestedBatchSize:reply:)", 54, 2, 0, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24DB7FCB0, v68, (uint64_t)sub_24DB7F658, v66);
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v74 = v96;
    uint64_t v75 = v99;
    uint64_t v76 = v70;
LABEL_16:
    sub_24D415F74(v74, &qword_26B1934B0);

    sub_24D415F74(v75, &qword_26B1934B0);
    id v33 = v86;
    goto LABEL_17;
  }
  id v77 = v55;
  swift_retain_n();
  id v78 = v59;
  id v79 = v77;
  id v80 = v78;
  id v81 = (id)FPDomainUnavailableError();
  if (v81)
  {
    uint64_t v76 = v59;
    uint64_t v82 = (uint64_t)v85;
    void *v85 = v81;
    swift_storeEnumTagMultiPayload();
    uint64_t v74 = v96;
    sub_24DB7C664(v82, v79, (void (*)(void, void, void))v97, v57, v96, v80);
    sub_24D415F74(v82, &qword_26B194258);
    swift_release();

    swift_release();
    uint64_t v75 = v99;
    goto LABEL_16;
  }
  swift_release();

  sub_24D415F74(v96, &qword_26B1934B0);
  __break(1u);
}

void sub_24DB7C664(uint64_t a1, void *a2, void (*a3)(void, void, void), uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v50 = a5;
  uint64_t v11 = type metadata accessor for ChangeEnumeratorAnchor();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v54 = (uint64_t)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24DCC9078();
  uint64_t v52 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194258);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = a2;
  id v19 = objc_msgSend(a2, sel_domain);
  if (v19)
  {
    uint64_t v20 = v19;
    id v21 = objc_msgSend(v19, sel_log);
  }
  else
  {
    id v21 = 0;
  }
  id v22 = (id)fpfs_adopt_log();

  sub_24D415FD0(a1, (uint64_t)v18, &qword_26B194258);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v24 = *(void *)v18;
  if (EnumCaseMultiPayload == 1)
  {
    id v53 = v22;
    id v25 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v26 = (id)v24;
    uint64_t v27 = sub_24DCC9068();
    os_log_type_t v28 = sub_24DCCA128();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v54 = v13;
      id v31 = (void *)v30;
      uint64_t v49 = a3;
      *(_DWORD *)uint64_t v29 = 138412290;
      swift_getErrorValue();
      id v32 = sub_24DBA2828(v55);
      uint64_t v57 = (uint64_t)v32;
      a3 = v49;
      sub_24DCCA428();
      *id v31 = v32;

      _os_log_impl(&dword_24D3D0000, v27, v28, "🧲  enumeration error: %@", v29, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      id v33 = v31;
      uint64_t v13 = v54;
      MEMORY[0x25332B030](v33, -1, -1);
      MEMORY[0x25332B030](v29, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v13);
    id v44 = (id)v24;
    a3(0, v24, 9);

    id v22 = v53;
    goto LABEL_28;
  }
  uint64_t v49 = a3;
  uint64_t v34 = *((void *)v18 + 1);
  LODWORD(v52) = v18[16];
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193FB8);
  sub_24DB7D0D4((uint64_t)&v18[*(int *)(v35 + 80)], v54);
  uint64_t v57 = v34;
  unint64_t v56 = MEMORY[0x263F8EE78];
  if (!(v24 >> 62))
  {
    uint64_t v36 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v36) {
      goto LABEL_9;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    unint64_t v43 = MEMORY[0x263F8EE78];
LABEL_27:
    sub_24D786660(v43);
    uint64_t v45 = v54;
    sub_24DB7A428(v24, v57, v50, v54, v52, a6, (uint64_t)v49, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24D907118(v45);
LABEL_28:
    id v46 = (id)fpfs_adopt_log();

    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_24DCCA9C8();
  if (!v36) {
    goto LABEL_26;
  }
LABEL_9:
  if (v36 >= 1)
  {
    unint64_t v47 = a6;
    uint64_t v48 = a4;
    id v53 = v22;
    for (uint64_t i = 0; i != v36; ++i)
    {
      if ((v24 & 0xC000000000000001) != 0) {
        id v38 = (id)MEMORY[0x253328820](i, v24);
      }
      else {
        id v38 = *(id *)(v24 + 8 * i + 32);
      }
      id v39 = v38;
      if (objc_msgSend(v38, sel_isKnownByTheProvider, v47, v48)
        && (id v40 = objc_msgSend(v39, sel_itemID),
            unsigned __int8 v41 = objc_msgSend(v40, sel_isDiskIdentifier),
            v40,
            (v41 & 1) != 0))
      {
        id v42 = objc_msgSend(v39, sel_itemID);

        if (v42)
        {
          MEMORY[0x253327CA0]();
          if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_24DCC9C78();
          }
          sub_24DCC9CD8();
          sub_24DCC9C48();
        }
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v43 = v56;
    a6 = v47;
    a4 = v48;
    id v22 = v53;
    goto LABEL_27;
  }
  __break(1u);
}

id sub_24DB7CD74()
{
  return sub_24DB7CD8C((uint64_t (*)(void))type metadata accessor for FPFSIndexer);
}

id sub_24DB7CD8C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_24DB7CE30()
{
  return type metadata accessor for FPFSIndexer();
}

uint64_t type metadata accessor for FPFSIndexer()
{
  uint64_t result = qword_26B192680;
  if (!qword_26B192680) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24DB7CE84()
{
  sub_24DB7CF20();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_24DB7CF20()
{
  if (!qword_26B1934C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1934B0);
    unint64_t v0 = sub_24DCCA3F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1934C0);
    }
  }
}

uint64_t sub_24DB7CFEC()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ChangeEnumeratorAnchor() - 8) + 80);
  uint64_t v2 = (v1 + 41) & ~v1;

  swift_release();
  uint64_t v3 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);

  return swift_deallocObject();
}

uint64_t sub_24DB7D0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChangeEnumeratorAnchor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_24DB7D138(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ChangeEnumeratorAnchor() - 8);
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v5 = *(void (**)(void, void, void))(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  int v7 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v8 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_24DB7AD10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_24DB7D1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1934B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24DB7D21C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_24DB7D26C()
{
  sub_24DB7A148(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

void sub_24DB7D27C(void *a1, char *a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  uint64_t v10 = OBJC_IVAR____TtC9libfssync11FPFSIndexer_spotlightIndexer;
  uint64_t v11 = *(void *)&a2[OBJC_IVAR____TtC9libfssync11FPFSIndexer_spotlightIndexer];
  _Block_copy(a3);
  if (v11)
  {
    uint64_t v12 = *(void **)&a2[v10];
    if (v12)
    {
LABEL_3:
      uint64_t v13 = (void *)swift_allocObject();
      v13[2] = a2;
      v13[3] = sub_24D5B2F8C;
      v13[4] = v9;
      aBlock[4] = sub_24DB7FC34;
      aBlock[5] = v13;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D6024BC;
      aBlock[3] = &block_descriptor_135;
      uint64_t v14 = _Block_copy(aBlock);
      uint64_t v15 = a2;
      id v16 = v12;
      swift_retain();
      swift_release();
      objc_msgSend(v16, sel_dropIndexWithDropReason_completionHandler_, a1, v14);
      _Block_release(v14);
      swift_release();

      return;
    }
    goto LABEL_9;
  }
  id v17 = objc_msgSend(a2, sel_domain);
  if (v17)
  {
    uint64_t v18 = v17;
    id v19 = objc_msgSend(v17, sel_provider);
    if (v19)
    {
      id v40 = v19;
      unsigned __int8 v41 = a1;
      id v20 = objc_msgSend(v19, sel_providerDomainForDomain_, v18);
      id v38 = objc_msgSend(v18, sel_nsDomainOrNilForDefault);
      id v39 = v20;
      id v37 = objc_msgSend(v18, sel_log);
      id v21 = objc_msgSend(v18, sel_supportURL);
      sub_24DCC89E8();

      uint64_t v22 = sub_24DCC8A58();
      uint64_t v23 = *(void *)(v22 - 8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v8, 0, 1, v22);
      LODWORD(v20) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v8, 1, v22);
      unint64_t v24 = a2;
      id v25 = 0;
      if (v20 != 1)
      {
        id v25 = (void *)sub_24DCC8948();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v22);
      }
      id v26 = objc_allocWithZone(MEMORY[0x263F05508]);
      uint64_t v27 = v38;
      os_log_type_t v28 = v39;
      uint64_t v29 = v37;
      id v30 = objc_msgSend(v26, sel_initWithDomain_providerDomain_log_supportURL_dropIndexDelegate_, v38, v39, v37, v25, v24);

      id v31 = *(void **)&a2[v10];
      *(void *)&a2[v10] = v30;

      a1 = v41;
      uint64_t v12 = *(void **)&a2[v10];
      if (v12) {
        goto LABEL_3;
      }
LABEL_9:
      swift_release();
      return;
    }
  }
  id v32 = (id)FPDomainUnavailableError();
  if (v32) {
    uint64_t v33 = sub_24DCC8818();
  }
  else {
    uint64_t v33 = 0;
  }
  uint64_t v34 = (void (*)(void *))a3[2];
  unsigned __int8 v41 = (void *)v33;
  v34(a3);
  swift_release();

  uint64_t v35 = v41;
}

uint64_t sub_24DB7D6A0(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void (**a7)(void, void, void))
{
  uint64_t v68 = a3;
  id v69 = a4;
  uint64_t v12 = type metadata accessor for ChangeEnumeratorAnchor();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v74 = (uint64_t)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24DCC9078();
  uint64_t v71 = *(void *)(v14 - 8);
  uint64_t v72 = v14;
  MEMORY[0x270FA5388](v14);
  id v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194258);
  MEMORY[0x270FA5388](v17);
  id v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a7;
  id v21 = (void *)swift_allocObject();
  v21[2] = sub_24DB7FC40;
  v21[3] = v20;
  v21[4] = a5;
  v21[5] = a6;
  _Block_copy(a7);
  swift_retain();
  id v66 = a5;
  id v67 = a6;
  id v70 = a2;
  id v22 = objc_msgSend(a2, sel_domain);
  if (v22)
  {
    uint64_t v23 = v22;
    id v24 = objc_msgSend(v22, sel_log);
  }
  else
  {
    id v24 = 0;
  }
  id v25 = (id)fpfs_adopt_log();

  sub_24D415FD0(a1, (uint64_t)v19, &qword_26B194258);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v27 = *(void *)v19;
  if (EnumCaseMultiPayload == 1)
  {
    id v73 = v25;
    id v28 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v29 = (id)v27;
    id v30 = sub_24DCC9068();
    os_log_type_t v31 = sub_24DCCA128();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v65 = v20;
      uint64_t v33 = (uint8_t *)v32;
      uint64_t v34 = swift_slowAlloc();
      unint64_t v64 = v21;
      uint64_t v35 = (void *)v34;
      *(_DWORD *)uint64_t v33 = 138412290;
      swift_getErrorValue();
      id v36 = sub_24DBA2828(v75);
      aBlock[0] = (uint64_t)v36;
      sub_24DCCA428();
      *uint64_t v35 = v36;

      _os_log_impl(&dword_24D3D0000, v30, v31, "🧲  enumeration error: %@", v33, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v35, -1, -1);
      MEMORY[0x25332B030](v33, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v71 + 8))(v16, v72);
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = a7;
    _s3__C4CodeOMa_1(0);
    aBlock[0] = -1002;
    _Block_copy(a7);
    id v50 = (id)v27;
    _Block_copy(a7);
    id v51 = (id)v27;
    sub_24DB7F6EC((unint64_t *)&qword_26B194040, _s3__C4CodeOMa_1);
    char v52 = sub_24DCC86A8();

    if (v52)
    {
      id v53 = (void *)swift_allocObject();
      v53[2] = sub_24DB7FC40;
      v53[3] = v49;
      v53[4] = v27;
      uint64_t v54 = (void *)swift_allocObject();
      v54[2] = sub_24DB7FC48;
      v54[3] = v53;
      uint64_t v55 = v66;
      v54[4] = v66;
      aBlock[4] = (uint64_t)sub_24DB7FC4C;
      aBlock[5] = (uint64_t)v54;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_24D6024BC;
      aBlock[3] = (uint64_t)&block_descriptor_103_0;
      unint64_t v56 = _Block_copy(aBlock);
      id v57 = v55;
      id v58 = (id)v27;
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v67, sel_dropIndexWithDropReason_completionHandler_, 9, v56);
      _Block_release(v56);
      swift_release();
      swift_release();
    }
    else
    {
      id v59 = (void *)sub_24DCC8818();
      ((void (**)(void, void, void *))a7)[2](a7, 0, v59);
      swift_release();
    }
    _Block_release(a7);

    id v25 = v73;
    uint64_t v60 = (void *)fpfs_adopt_log();
    goto LABEL_31;
  }
  uint64_t v37 = *((void *)v19 + 1);
  int v38 = v19[16];
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193FB8);
  sub_24DB7D0D4((uint64_t)&v19[*(int *)(v39 + 80)], v74);
  aBlock[0] = v37;
  unint64_t v77 = MEMORY[0x263F8EE78];
  if (!(v27 >> 62))
  {
    uint64_t v40 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v40) {
      goto LABEL_9;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    unint64_t v48 = MEMORY[0x263F8EE78];
LABEL_30:
    sub_24D786660(v48);
    uint64_t v61 = v74;
    sub_24DB7A428(v27, aBlock[0], v68, v74, v38, v69, (uint64_t)sub_24DB7FC44, (uint64_t)v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24D907118(v61);
    uint64_t v60 = (void *)fpfs_adopt_log();
LABEL_31:
    id v62 = v60;
    swift_release();

    return swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_24DCCA9C8();
  uint64_t v40 = result;
  if (!result) {
    goto LABEL_29;
  }
LABEL_9:
  if (v40 >= 1)
  {
    LODWORD(v72) = v38;
    id v73 = v25;
    unint64_t v64 = v21;
    uint64_t v65 = v20;
    for (uint64_t i = 0; i != v40; ++i)
    {
      if ((v27 & 0xC000000000000001) != 0) {
        id v43 = (id)MEMORY[0x253328820](i, v27);
      }
      else {
        id v43 = *(id *)(v27 + 8 * i + 32);
      }
      id v44 = v43;
      if (objc_msgSend(v43, sel_isKnownByTheProvider)
        && (id v45 = objc_msgSend(v44, sel_itemID),
            unsigned __int8 v46 = objc_msgSend(v45, sel_isDiskIdentifier),
            v45,
            (v46 & 1) != 0))
      {
        id v47 = objc_msgSend(v44, sel_itemID);

        if (v47)
        {
          MEMORY[0x253327CA0]();
          if (*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_24DCC9C78();
          }
          sub_24DCC9CD8();
          sub_24DCC9C48();
        }
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v48 = v77;
    id v21 = v64;
    id v25 = v73;
    int v38 = v72;
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

void sub_24DB7DEC4(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, const void *a7)
{
  id v118 = a4;
  uint64_t v114 = a3;
  id v124 = a1;
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194258);
  MEMORY[0x270FA5388](v106);
  uint64_t v107 = (uint64_t *)((char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_24DCC9078();
  uint64_t v112 = *(void *)(v12 - 8);
  uint64_t v113 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v115 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1934B0);
  uint64_t v110 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v110 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v109 = (uint64_t)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v119 = (uint64_t)&v106 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v111 = (uint64_t)&v106 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v108 = (uint64_t)&v106 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  id v25 = (char *)&v106 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v125 = (uint64_t)&v106 - v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194238);
  MEMORY[0x270FA5388](v27);
  id v29 = (void **)((char *)&v106 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a7;
  os_log_type_t v31 = (char *)swift_allocObject();
  *((void *)v31 + 2) = sub_24DB7FC40;
  *((void *)v31 + 3) = v30;
  *((void *)v31 + 4) = a5;
  *((void *)v31 + 5) = a6;
  _Block_copy(a7);
  swift_retain();
  id v32 = a5;
  id v33 = a6;
  uint64_t v123 = (void *)a7;
  _Block_copy(a7);
  uint64_t v122 = v30;
  swift_retain();
  id v121 = v32;
  id v120 = v33;
  id v116 = a2;
  id v34 = objc_msgSend(a2, sel_domain, v106);
  if (v34)
  {
    uint64_t v35 = v34;
    id v36 = objc_msgSend(v34, sel_log);
  }
  else
  {
    id v36 = 0;
  }
  id v117 = (id)fpfs_adopt_log();

  sub_24D415FD0((uint64_t)v124, (uint64_t)v29, &qword_26B194238);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v37 = *v29;
    uint64_t v38 = swift_allocObject();
    uint64_t v39 = v123;
    *(void *)(v38 + 16) = v123;
    _s3__C4CodeOMa_1(0);
    aBlock[0] = -1002;
    _Block_copy(v39);
    id v40 = v37;
    _Block_copy(v39);
    id v41 = v37;
    sub_24DB7F6EC((unint64_t *)&qword_26B194040, _s3__C4CodeOMa_1);
    char v42 = sub_24DCC86A8();

    id v43 = v120;
    if (v42)
    {
      id v44 = (void *)swift_allocObject();
      v44[2] = sub_24DB7FC40;
      v44[3] = v38;
      v44[4] = v37;
      id v45 = (void *)swift_allocObject();
      v45[2] = sub_24DB7F67C;
      v45[3] = v44;
      id v46 = v121;
      v45[4] = v121;
      aBlock[4] = (uint64_t)sub_24DB7F68C;
      aBlock[5] = (uint64_t)v45;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_24D6024BC;
      aBlock[3] = (uint64_t)&block_descriptor_80_2;
      id v47 = _Block_copy(aBlock);
      id v48 = v46;
      id v49 = v37;
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v43, sel_dropIndexWithDropReason_completionHandler_, 7, v47);
      _Block_release(v47);
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v61 = (void *)sub_24DCC8818();
      (*((void (**)(void *, void, void *))v39 + 2))(v39, 0, v61);
      swift_release();

      id v46 = v121;
    }
    id v62 = v117;
    _Block_release(v39);

    goto LABEL_20;
  }
  uint64_t v50 = v125;
  sub_24D3F0BA0((uint64_t)v29, v125, &qword_26B1934B0);
  id v51 = (id)fpfs_current_or_default_log();
  char v52 = v115;
  sub_24DCC9088();
  sub_24D415FD0(v50, (uint64_t)v25, &qword_26B1934B0);
  id v53 = sub_24DCC9068();
  os_log_type_t v54 = sub_24DCCA108();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = (uint8_t *)swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    aBlock[0] = v56;
    *(_DWORD *)uint64_t v55 = 136315138;
    uint64_t v57 = v108;
    sub_24D415FD0((uint64_t)v25, v108, &qword_26B1934B0);
    uint64_t v58 = type metadata accessor for ChangeEnumeratorAnchor();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 48))(v57, 1, v58) == 1)
    {
      sub_24D415F74(v57, &qword_26B1934B0);
      unint64_t v59 = 0xE500000000000000;
      uint64_t v60 = 0x3E6C696E3CLL;
    }
    else
    {
      uint64_t v64 = v56;
      uint64_t v65 = v57;
      uint64_t v60 = sub_24D906388();
      unint64_t v59 = v66;
      uint64_t v67 = v65;
      uint64_t v56 = v64;
      sub_24D907118(v67);
    }
    uint64_t aBlock[6] = sub_24D418FB4(v60, v59, aBlock);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    sub_24D415F74((uint64_t)v25, &qword_26B1934B0);
    _os_log_impl(&dword_24D3D0000, v53, v54, "🧲  indexing from %s", v55, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v56, -1, -1);
    MEMORY[0x25332B030](v55, -1, -1);

    (*(void (**)(char *, uint64_t))(v112 + 8))(v115, v113);
    uint64_t v63 = v119;
    uint64_t v50 = v125;
  }
  else
  {
    sub_24D415F74((uint64_t)v25, &qword_26B1934B0);

    (*(void (**)(char *, uint64_t))(v112 + 8))(v52, v113);
    uint64_t v63 = v119;
  }
  uint64_t v68 = v111;
  sub_24D415FD0(v50, v111, &qword_26B1934B0);
  sub_24D415FD0(v68, v63, &qword_26B1934B0);
  uint64_t v69 = *(unsigned __int8 *)(v110 + 80);
  uint64_t v70 = (v69 + 40) & ~v69;
  uint64_t v71 = v15 + 7;
  unint64_t v72 = (v15 + 7 + v70) & 0xFFFFFFFFFFFFFFF8;
  id v73 = (void *)swift_allocObject();
  uint64_t v74 = v116;
  v73[2] = v116;
  v73[3] = sub_24DB7FC44;
  v73[4] = v31;
  sub_24D3F0BA0(v68, (uint64_t)v73 + v70, &qword_26B1934B0);
  id v75 = v118;
  *(void *)((char *)v73 + v72) = v118;
  uint64_t v76 = v31;
  uint64_t v77 = v114;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v79 = Strong;
    id v124 = *(id *)(Strong + 16);
    uint64_t v80 = v77;
    uint64_t v115 = v76;
    uint64_t v81 = v109;
    sub_24D415FD0(v125, v109, &qword_26B1934B0);
    uint64_t v82 = (v69 + 24) & ~v69;
    unint64_t v83 = (v71 + v82) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v84 = (v83 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v85 = swift_allocObject();
    *(void *)(v85 + 16) = v79;
    sub_24D3F0BA0(v81, v85 + v82, &qword_26B1934B0);
    id v86 = (void *)(v85 + v83);
    void *v86 = sub_24DB7F650;
    v86[1] = v73;
    *(void *)(v85 + v84) = 200;
    *(void *)(v85 + ((v84 + 15) & 0xFFFFFFFFFFFFFFF8)) = v80;
    uint64_t v87 = swift_allocObject();
    *(void *)(v87 + 16) = sub_24DB7F650;
    *(void *)(v87 + 24) = v73;
    id v88 = v116;
    swift_retain_n();
    id v89 = v118;
    id v90 = v118;
    swift_retain_n();
    id v91 = v88;
    id v92 = v90;
    swift_retain();
    swift_retain();
    sub_24D8272E0((uint64_t)"enumerateChanges(fromAnchor:suggestedBatchSize:reply:)", 54, 2, 0, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24DB7F670, v87, (uint64_t)sub_24DB7F658, v85);
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    id v93 = v89;
    uint64_t v94 = v125;
    swift_release();
    uint64_t v39 = v123;
    id v43 = v120;
    id v46 = v121;
    uint64_t v95 = v119;
LABEL_19:
    sub_24D415F74(v95, &qword_26B1934B0);

    sub_24D415F74(v94, &qword_26B1934B0);
    id v62 = v117;
LABEL_20:
    id v102 = (id)fpfs_adopt_log();
    swift_release();

    swift_release_n();
    _Block_release(v39);
    return;
  }
  id v96 = v74;
  swift_retain_n();
  id v97 = v75;
  id v124 = v96;
  id v116 = v97;
  id v98 = (id)FPDomainUnavailableError();
  if (v98)
  {
    uint64_t v99 = (uint64_t)v107;
    *uint64_t v107 = v98;
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = v123;
    _Block_copy(v123);
    swift_retain();
    id v46 = v121;
    id v100 = v121;
    id v43 = v120;
    id v101 = v120;
    uint64_t v95 = v119;
    sub_24DB7D6A0(v99, v124, v119, v116, v100, v101, (void (**)(void, void, void))v39);
    _Block_release(v39);
    swift_release();

    sub_24D415F74(v99, &qword_26B194258);
    swift_release();

    swift_release();
    id v93 = v118;
    uint64_t v94 = v125;
    goto LABEL_19;
  }
  id v103 = v120;

  id v104 = v121;
  swift_release_n();
  swift_release();

  uint64_t v105 = v123;
  _Block_release(v123);
  _Block_release(v105);

  sub_24D415F74(v119, &qword_26B1934B0);
  __break(1u);
}

void sub_24DB7EB3C(char *a1, void (**a2)(void, void, void))
{
  uint64_t v4 = sub_24DCC9078();
  uint64_t v86 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v87 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194238);
  MEMORY[0x270FA5388](v84);
  uint64_t v85 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1934B8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1934B0);
  uint64_t v88 = *(void *)(v10 - 8);
  uint64_t v89 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v90 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24DCC93F8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (uint64_t *)((char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  _Block_copy(a2);
  _Block_copy(a2);
  *uint64_t v18 = objc_msgSend(a1, sel_queue);
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F8F0E0], v15);
  char v20 = sub_24DCC9418();
  (*(void (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if (v20)
  {
    uint64_t v21 = *(void *)&a1[OBJC_IVAR____TtC9libfssync11FPFSIndexer_enumerator];
    if (v21)
    {
      swift_retain();
      id v22 = objc_msgSend(a1, sel_domain);
      if (v22)
      {
        uint64_t v23 = v22;
        id v24 = objc_msgSend(v22, sel_provider);
        if (v24)
        {
          uint64_t v80 = v4;
          id v81 = v24;
          id v25 = objc_msgSend(v24, sel_providerDomainForDomain_, v23);
          uint64_t v26 = *(void **)&a1[OBJC_IVAR____TtC9libfssync11FPFSIndexer_spotlightIndexer];
          id v82 = v25;
          uint64_t v83 = v19;
          if (v26)
          {
            id v27 = v26;
            id v28 = objc_msgSend(v23, sel_nsDomainOrNilForDefault);
            objc_msgSend(v27, sel_setDomain_, v28);

            objc_msgSend(v27, sel_setProviderDomain_, v25);
          }
          else
          {
            uint64_t v74 = v9;
            uint64_t v79 = OBJC_IVAR____TtC9libfssync11FPFSIndexer_spotlightIndexer;
            id v78 = objc_msgSend(v23, sel_nsDomainOrNilForDefault);
            id v77 = v25;
            id v76 = objc_msgSend(v23, sel_log);
            id v30 = objc_msgSend(v23, sel_supportURL);
            sub_24DCC89E8();

            uint64_t v31 = sub_24DCC8A58();
            uint64_t v32 = *(void *)(v31 - 8);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v14, 0, 1, v31);
            int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v14, 1, v31);
            id v75 = a1;
            id v34 = 0;
            if (v33 != 1)
            {
              id v34 = (void *)sub_24DCC8948();
              (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v31);
            }
            id v35 = objc_allocWithZone(MEMORY[0x263F05508]);
            id v36 = v78;
            uint64_t v37 = v77;
            uint64_t v38 = v76;
            uint64_t v39 = v75;
            id v40 = objc_msgSend(v35, sel_initWithDomain_providerDomain_log_supportURL_dropIndexDelegate_, v78, v77, v76, v34, v75);

            id v41 = *(void **)&a1[v79];
            *(void *)&a1[v79] = v40;
            id v27 = v40;

            uint64_t v19 = v83;
            uint64_t v9 = v74;
          }
          char v42 = (void *)swift_allocObject();
          v42[2] = sub_24D6D1408;
          v42[3] = v19;
          v42[4] = a1;
          v42[5] = v27;
          id v43 = (void *)swift_allocObject();
          v43[2] = a1;
          v43[3] = sub_24DB7F5D4;
          v43[4] = v42;
          v43[5] = v21;
          v43[6] = v27;
          uint64_t v44 = (uint64_t)&a1[OBJC_IVAR____TtC9libfssync11FPFSIndexer_lastIndexedAnchor];
          swift_beginAccess();
          sub_24D415FD0(v44, (uint64_t)v9, &qword_26B1934B8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v9, 1, v89) == 1)
          {
            id v45 = a1;
            id v46 = v27;
            id v47 = v45;
            id v48 = v46;
            swift_retain_n();
            id v49 = v47;
            id v50 = v48;
            swift_retain_n();
            swift_retain_n();
            id v51 = v49;
            id v52 = v50;
            sub_24D415F74((uint64_t)v9, &qword_26B1934B8);
            id v53 = (id)fpfs_current_or_default_log();
            os_log_type_t v54 = v87;
            sub_24DCC9088();
            uint64_t v55 = sub_24DCC9068();
            os_log_type_t v56 = sub_24DCCA118();
            if (os_log_type_enabled(v55, v56))
            {
              uint64_t v57 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v57 = 0;
              _os_log_impl(&dword_24D3D0000, v55, v56, "🧲  current anchor is unknown, fetching from spotlight", v57, 2u);
              uint64_t v58 = v57;
              os_log_type_t v54 = v87;
              MEMORY[0x25332B030](v58, -1, -1);
            }

            (*(void (**)(char *, uint64_t))(v86 + 8))(v54, v80);
            uint64_t v59 = swift_allocObject();
            *(void *)(v59 + 16) = sub_24DB7F630;
            *(void *)(v59 + 24) = v43;
            aBlock[4] = sub_24DB7F640;
            aBlock[5] = v59;
            aBlock[0] = MEMORY[0x263EF8330];
            aBlock[1] = 1107296256;
            aBlock[2] = sub_24DB7BA84;
            aBlock[3] = &block_descriptor_50_1;
            uint64_t v60 = _Block_copy(aBlock);
            swift_retain();
            swift_release();
            objc_msgSend(v52, sel_fetchCurrentIndexingAnchorWithCompletionHandler_, v60);
            _Block_release(v60);

            swift_release_n();
          }
          else
          {
            uint64_t v61 = (uint64_t)v9;
            uint64_t v62 = v90;
            sub_24D3F0BA0(v61, v90, &qword_26B1934B0);
            uint64_t v63 = v62;
            uint64_t v64 = v85;
            sub_24D415FD0(v63, (uint64_t)v85, &qword_26B1934B0);
            swift_storeEnumTagMultiPayload();
            uint64_t v65 = a1;
            id v66 = v27;
            uint64_t v67 = v65;
            id v68 = v66;
            swift_retain();
            uint64_t v69 = v67;
            id v70 = v68;
            swift_retain();
            swift_retain();
            _Block_copy(a2);
            swift_retain();
            uint64_t v71 = v69;
            id v72 = v70;
            swift_retain();
            swift_retain();
            sub_24DB7DEC4(v64, v71, v21, v72, v71, v72, a2);
            _Block_release(a2);
            sub_24D415F74((uint64_t)v64, &qword_26B194238);
            sub_24D415F74(v90, &qword_26B1934B0);

            swift_release_n();
          }
          swift_release();
          swift_release_n();
          swift_release_n();
          id v29 = v82;
          goto LABEL_26;
        }
      }
      id v29 = (id)FPDomainUnavailableError();
      if (v29) {
        uint64_t v23 = (void *)sub_24DCC8818();
      }
      else {
        uint64_t v23 = 0;
      }
      ((void (**)(void, void, void *))a2)[2](a2, 0, v23);
      swift_release();
    }
    else
    {
      id v29 = (id)FPDomainUnavailableError();
      if (v29) {
        uint64_t v23 = (void *)sub_24DCC8818();
      }
      else {
        uint64_t v23 = 0;
      }
      ((void (**)(void, void, void *))a2)[2](a2, 0, v23);
    }
    swift_release();
LABEL_26:

    _Block_release(a2);
    return;
  }
  __break(1u);
}

uint64_t sub_24DB7F5D4(char a1, void *a2, uint64_t a3)
{
  return sub_24DB7BB30(a1, a2, a3, *(uint64_t (**)(void, void *))(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_24DB7F5E0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24DB7F630(uint64_t a1)
{
  sub_24DB7BD9C(a1, *(void **)(v1 + 16), *(void (**)(void, id, uint64_t))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_24DB7F640(uint64_t a1, unint64_t a2, void *a3)
{
  return sub_24DB7B6B4(a1, a2, a3, *(void (**)(void))(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_24DB7F658()
{
  return sub_24DB7FA88();
}

uint64_t sub_24DB7F670(void *a1)
{
  return sub_24DB78F50(a1, *(void (**)(void *))(v1 + 16));
}

void sub_24DB7F67C(void *a1)
{
  sub_24DB7BD20(a1, *(void (**)(uint64_t, id))(v1 + 16), *(void *)(v1 + 24), *(id *)(v1 + 32));
}

void sub_24DB7F68C(void *a1)
{
  sub_24DB7B3F0(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t objectdestroy_40Tm_0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DB7F6EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_60Tm_1()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1934B0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);

  swift_release();
  uint64_t v4 = type metadata accessor for ChangeEnumeratorAnchor();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v0 + v2, 1, v4))
  {
    uint64_t v5 = sub_24DCC8D88();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v2, v5);
  }

  return swift_deallocObject();
}

void sub_24DB7F880(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1934B0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (void *)v1[2];
  uint64_t v6 = (void (*)(void, void, void))v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = *(void **)((char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_24DB7C664(a1, v5, v6, v7, (uint64_t)v1 + v4, v8);
}

uint64_t objectdestroy_63Tm_0()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1934B0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  uint64_t v3 = type metadata accessor for ChangeEnumeratorAnchor();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v0 + v2, 1, v3))
  {
    uint64_t v4 = sub_24DCC8D88();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DB7FA88()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1934B0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24DB79010(*(void *)(v0 + 16), v0 + v2, *(void (**)(uint64_t))(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24DB7FB3C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_73Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DB7FBBC()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_24DB7FBF4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DB7FC34(uint64_t a1)
{
  return sub_24DB7A2D8(a1, *(void **)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t sub_24DB7FCB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 64);
}

uint64_t sub_24DB7FCBC()
{
  uint64_t result = type metadata accessor for ItemReconciliationHalf();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ItemReconciliationHalf();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_24DB7FDD0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v164 = *(void *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v164 + 84)) {
    uint64_t v2 = *(void *)(v164 + 64);
  }
  else {
    uint64_t v2 = *(void *)(v164 + 64) + 1;
  }
  size_t v165 = v2;
  uint64_t v144 = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(v144 - 8);
  int v159 = *(_DWORD *)(v3 + 80);
  uint64_t v4 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v4 - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v141 = v5;
  uint64_t v142 = v4;
  int v157 = *(_DWORD *)(v5 + 80);
  uint64_t v167 = v157;
  int v162 = v159 & 0xF8 | v157;
  uint64_t v143 = v3;
  unsigned int v139 = v6;
  unsigned int v150 = *(_DWORD *)(v3 + 84);
  if (v150 > v6) {
    unsigned int v6 = *(_DWORD *)(v3 + 84);
  }
  unsigned int v140 = v6;
  if (v6 <= 0x7FFFFFFE) {
    unsigned int v6 = 2147483646;
  }
  unsigned int v148 = v6;
  uint64_t v151 = *(void *)(v3 + 64);
  uint64_t v153 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v147 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v147 - 8);
  uint64_t v8 = v7;
  int v155 = *(_DWORD *)(v7 + 80);
  uint64_t v146 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v146 - 8);
  uint64_t v10 = v9;
  int v11 = *(_DWORD *)(v9 + 80);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = v7;
  uint64_t v15 = *(_DWORD *)(v13 + 80);
  uint64_t v16 = v11 & 0xF8 | v15 | 7;
  uint64_t v17 = v16 | v155 & 0xF8;
  uint64_t v161 = v8;
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v18 = *(void *)(v14 + 64);
  }
  else {
    uint64_t v18 = *(void *)(v14 + 64) + 1;
  }
  uint64_t v145 = v9;
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v13 + 84)) {
    unsigned int v19 = *(_DWORD *)(v13 + 84);
  }
  else {
    unsigned int v19 = *(_DWORD *)(v9 + 84);
  }
  if (v19 <= 0x7FFFFFFE) {
    int v20 = 2147483646;
  }
  else {
    int v20 = v19;
  }
  uint64_t v21 = *(void *)(v9 + 64);
  uint64_t v22 = *(void *)(*(void *)(v12 - 8) + 64);
  uint64_t v23 = v17 | *(_DWORD *)(v164 + 80) & 0xF8 | v162;
  if (v23 != 7
    || ((v157 | v159 | v155 | v11 | *(_DWORD *)(v13 + 80) | *(_DWORD *)(v164 + 80)) & 0x100000) != 0
    || (uint64_t v24 = v162 | 7u,
        uint64_t v25 = v151 + 7,
        uint64_t v133 = v157 + 8,
        size_t v26 = ((((v153 + 7 + ((v133 + ((v151 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v157)) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16,
        uint64_t v163 = v21 + 7,
        uint64_t v134 = v15 + 8,
        unint64_t v27 = ((((v22 + 7 + ((v15 + 8 + ((v21 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16,
        ((((((((((((v16 + 9 + ((((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v16) + v27 + 34) & 0xFFFFFFFFFFFFFFF8)
              + 63) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 8
          + ((((((((((v24 + ((((v165 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v24) + v26 + 34) & 0xFFFFFFFFFFFFFFF8)
                + 63) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + v17
            + 8) & ~v17)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 39) & 0xFFFFFFFFFFFFFFF8)
      + 8 > 0x18))
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    id v29 = (uint64_t *)(v30 + ((v23 + 16) & ~v23));
    swift_retain();
    return v29;
  }
  uint64_t v136 = v11 & 0xF8 | v15 | 7;
  unint64_t v137 = ((((((((v24 + ((((v165 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v24) + v26 + 34) & 0xFFFFFFFFFFFFFFF8)
           + 63) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + v17
       + 8;
  uint64_t v127 = v153 + 7;
  uint64_t v152 = v18 + 7;
  uint64_t v154 = v16 + 9;
  size_t __n = v18;
  int v156 = v20;
  uint64_t v158 = *(_DWORD *)(v13 + 80);
  unsigned int v129 = v19;
  int v160 = *(_DWORD *)(v10 + 84);
  unsigned int v126 = *(_DWORD *)(v13 + 84);
  uint64_t v128 = v22 + 7;
  uint64_t v131 = *(void *)(v12 - 8);
  uint64_t v132 = v12;
  unint64_t v138 = ((((((((v16 + 9 + ((((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v16) + v27 + 34) & 0xFFFFFFFFFFFFFFF8)
           + 63) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  uint64_t v28 = ~v24;
  unint64_t v135 = ((((v22 + 7 + ((v15 + 8 + ((v21 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  id v29 = a1;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v164 + 48))(a2, 1, AssociatedTypeWitness))
  {
    memcpy(a1, a2, v165);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v164 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v164 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  uint64_t v31 = ~v167;
  uint64_t v32 = (void *)(((unint64_t)a1 + v165 + 7) & 0xFFFFFFFFFFFFFFF8);
  int v33 = (void *)(((unint64_t)a2 + v165 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v32 = *v33;
  unint64_t v34 = ((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = ((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  uint64_t v36 = v35 + v24;
  uint64_t v37 = (void *)((v34 + v24 + 9) & v28);
  uint64_t v38 = (const void *)((v36 + 9) & v28);
  if (v150 == v148)
  {
    if (!(*(unsigned int (**)(const void *))(v143 + 48))(v38)) {
      goto LABEL_34;
    }
  }
  else
  {
    uint64_t v39 = (void *)(((unint64_t)v38 + v25) & 0xFFFFFFFFFFFFFFF8);
    if (v140 > 0x7FFFFFFE)
    {
      if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v141 + 48))(((unint64_t)v39 + v133) & v31, v139, v142))
      {
LABEL_34:
        uint64_t v39 = (void *)(((unint64_t)v38 + v25) & 0xFFFFFFFFFFFFFFF8);
LABEL_35:
        (*(void (**)(void *, const void *, uint64_t))(v143 + 16))(v37, v38, v144);
        id v41 = (void *)(((unint64_t)v37 + v25) & 0xFFFFFFFFFFFFFFF8);
        void *v41 = *v39;
        unint64_t v42 = ((unint64_t)v41 + v133) & v31;
        unint64_t v43 = ((unint64_t)v39 + v133) & v31;
        uint64_t v44 = *(void (**)(unint64_t, unint64_t, uint64_t))(v141 + 16);
        swift_bridgeObjectRetain();
        v44(v42, v43, v142);
        id v45 = (void *)((v127 + v42) & 0xFFFFFFFFFFFFFFF8);
        id v46 = (void *)((v127 + v43) & 0xFFFFFFFFFFFFFFF8);
        *id v45 = *v46;
        id v47 = (void *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
        id v48 = (void *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
        *id v47 = *v48;
        v47[1] = v48[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v40 = *v39;
      if (*v39 >= 0xFFFFFFFFuLL) {
        LODWORD(v40) = -1;
      }
      if ((v40 + 1) < 2) {
        goto LABEL_35;
      }
    }
  }
  memcpy(v37, v38, v26);
LABEL_36:
  uint64_t v49 = (uint64_t)v38 + v26 + 10;
  uint64_t v50 = (uint64_t)v38 + v26 + 34;
  id v51 = (unsigned char *)(((unint64_t)v37 + v26) | 2);
  uint64_t v52 = (uint64_t)v37 + v26 + 10;
  *((unsigned char *)v37 + v26) = *((unsigned char *)v38 + v26);
  uint64_t v53 = (uint64_t)v37 + v26 + 34;
  *(unsigned char *)(((unint64_t)v37 + v26) | 1) = *(unsigned char *)(((unint64_t)v38 + v26) | 1);
  uint64_t v54 = ~v17;
  *id v51 = *(unsigned char *)(((unint64_t)v38 + v26) | 2);
  unint64_t v55 = v52 & 0xFFFFFFFFFFFFFFF8;
  os_log_type_t v56 = *(void **)(v49 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v57 = *(void **)((v49 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v58 = *(unsigned char *)((v49 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v56, v57, v58);
  *(void *)unint64_t v55 = v56;
  *(void *)(v55 + 8) = v57;
  *(unsigned char *)(v55 + 16) = v58;
  unint64_t v59 = v53 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v60 = v50 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v61 = *(void *)(v60 + 16) >> 60;
  if (!(4 * (v61 & 3)) || ((v61 >> 2) & 0xFFFFFFF3 | (4 * (v61 & 3))) == 0xF)
  {
    uint64_t v69 = (uint64_t *)(v60 + 8);
    *(void *)unint64_t v59 = *(void *)v60;
    unint64_t v70 = *(void *)(v60 + 16);
    if (v70 >> 60 == 15)
    {
      *(_OWORD *)(v59 + 8) = *(_OWORD *)v69;
    }
    else
    {
      uint64_t v71 = *v69;
      sub_24D3F9C18(*v69, *(void *)(v60 + 16));
      *(void *)(v59 + 8) = v71;
      *(void *)(v59 + 16) = v70;
    }
    uint64_t v65 = a2;
    size_t v66 = v135;
    uint64_t v67 = v163;
    uint64_t v68 = v147;
    long long v72 = *(_OWORD *)(v60 + 24);
    *(unsigned char *)(v59 + 40) = *(unsigned char *)(v60 + 40);
    *(_OWORD *)(v59 + 24) = v72;
    *(void *)(v59 + 48) = *(void *)(v60 + 48);
  }
  else
  {
    long long v62 = *(_OWORD *)v60;
    long long v63 = *(_OWORD *)(v60 + 16);
    long long v64 = *(_OWORD *)(v60 + 32);
    *(void *)(v59 + 48) = *(void *)(v60 + 48);
    *(_OWORD *)(v59 + 16) = v63;
    *(_OWORD *)(v59 + 32) = v64;
    *(_OWORD *)unint64_t v59 = v62;
    uint64_t v65 = a2;
    size_t v66 = v135;
    uint64_t v67 = v163;
    uint64_t v68 = v147;
  }
  uint64_t v73 = (void *)((v59 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v74 = (void **)((v60 + 63) & 0xFFFFFFFFFFFFFFF8);
  id v75 = *v74;
  *uint64_t v73 = *v74;
  uint64_t v76 = ~v136;
  *(void *)(((unint64_t)v73 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v74 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v77 = (void *)(((unint64_t)a1 + v137) & v54);
  id v78 = (const void *)(((unint64_t)v65 + v137) & v54);
  uint64_t v79 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v161 + 48);
  id v80 = v75;
  if (v79(v78, 1, v68))
  {
    memcpy(v77, v78, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v161 + 16))(v77, v78, v68);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v161 + 56))(v77, 0, 1, v68);
  }
  id v81 = (void *)(((unint64_t)v77 + v152) & 0xFFFFFFFFFFFFFFF8);
  id v82 = (void *)(((unint64_t)v78 + v152) & 0xFFFFFFFFFFFFFFF8);
  *id v81 = *v82;
  uint64_t v83 = ~v158;
  unint64_t v84 = ((unint64_t)v81 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v85 = ((unint64_t)v82 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v84 = *(void *)v85;
  *(unsigned char *)(v84 + 8) = *(unsigned char *)(v85 + 8);
  uint64_t v86 = (void *)((v154 + v84) & v76);
  uint64_t v87 = (const void *)((v154 + v85) & v76);
  if (v160 == v156)
  {
    if (!(*(unsigned int (**)(const void *))(v145 + 48))(v87)) {
      goto LABEL_56;
    }
LABEL_55:
    memcpy(v86, v87, v66);
    goto LABEL_58;
  }
  uint64_t v88 = (uint64_t *)(((unint64_t)v87 + v67) & 0xFFFFFFFFFFFFFFF8);
  if (v129 <= 0x7FFFFFFE)
  {
    uint64_t v89 = *v88;
    if ((unint64_t)*v88 >= 0xFFFFFFFF) {
      LODWORD(v89) = -1;
    }
    if ((v89 + 1) < 2) {
      goto LABEL_57;
    }
    goto LABEL_55;
  }
  if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v131 + 48))(((unint64_t)v88 + v134) & v83, v126, v132))
  {
    goto LABEL_55;
  }
LABEL_56:
  uint64_t v88 = (uint64_t *)(((unint64_t)v87 + v67) & 0xFFFFFFFFFFFFFFF8);
LABEL_57:
  (*(void (**)(void *, const void *, uint64_t))(v145 + 16))(v86, v87, v146);
  uint64_t v90 = (void *)(((unint64_t)v86 + v67) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v90 = *v88;
  unint64_t v91 = ((unint64_t)v90 + v134) & v83;
  unint64_t v92 = ((unint64_t)v88 + v134) & v83;
  id v93 = *(void (**)(unint64_t, unint64_t, uint64_t))(v131 + 16);
  swift_bridgeObjectRetain();
  v93(v91, v92, v132);
  uint64_t v94 = (void *)((v128 + v91) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v95 = (void *)((v128 + v92) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v94 = *v95;
  id v96 = (void *)(((unint64_t)v94 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v97 = (void *)(((unint64_t)v95 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v96 = *v97;
  v96[1] = v97[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_58:
  uint64_t v98 = (uint64_t)v87 + v66 + 10;
  uint64_t v99 = (uint64_t)v87 + v66 + 34;
  *((unsigned char *)v86 + v66) = *((unsigned char *)v87 + v66);
  uint64_t v100 = (uint64_t)v86 + v66 + 34;
  *(unsigned char *)(((unint64_t)v86 + v66) | 1) = *(unsigned char *)(((unint64_t)v87 + v66) | 1);
  *(unsigned char *)(((unint64_t)v86 + v66) | 2) = *(unsigned char *)(((unint64_t)v87 + v66) | 2);
  unint64_t v101 = ((unint64_t)v86 + v66 + 10) & 0xFFFFFFFFFFFFFFF8;
  id v102 = *(void **)(v98 & 0xFFFFFFFFFFFFFFF8);
  id v103 = *(void **)((v98 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v104 = *(unsigned char *)((v98 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v102, v103, v104);
  *(void *)unint64_t v101 = v102;
  *(void *)(v101 + 8) = v103;
  *(unsigned char *)(v101 + 16) = v104;
  unint64_t v105 = v100 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v106 = v99 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v107 = *(void *)(v106 + 16) >> 60;
  if (!(4 * (v107 & 3)) || ((v107 >> 2) & 0xFFFFFFF3 | (4 * (v107 & 3))) == 0xF)
  {
    uint64_t v111 = (uint64_t *)(v106 + 8);
    *(void *)unint64_t v105 = *(void *)v106;
    unint64_t v112 = *(void *)(v106 + 16);
    if (v112 >> 60 == 15)
    {
      *(_OWORD *)(v105 + 8) = *(_OWORD *)v111;
    }
    else
    {
      uint64_t v113 = *v111;
      sub_24D3F9C18(*v111, *(void *)(v106 + 16));
      *(void *)(v105 + 8) = v113;
      *(void *)(v105 + 16) = v112;
    }
    long long v114 = *(_OWORD *)(v106 + 24);
    *(unsigned char *)(v105 + 40) = *(unsigned char *)(v106 + 40);
    *(_OWORD *)(v105 + 24) = v114;
    *(void *)(v105 + 48) = *(void *)(v106 + 48);
  }
  else
  {
    long long v108 = *(_OWORD *)v106;
    long long v109 = *(_OWORD *)(v106 + 16);
    long long v110 = *(_OWORD *)(v106 + 32);
    *(void *)(v105 + 48) = *(void *)(v106 + 48);
    *(_OWORD *)(v105 + 16) = v109;
    *(_OWORD *)(v105 + 32) = v110;
    *(_OWORD *)unint64_t v105 = v108;
  }
  uint64_t v115 = (void *)((v105 + 63) & 0xFFFFFFFFFFFFFFF8);
  id v116 = (void **)((v106 + 63) & 0xFFFFFFFFFFFFFFF8);
  id v117 = *v116;
  *uint64_t v115 = *v116;
  *(void *)(((unint64_t)v115 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v116 + 15) & 0xFFFFFFFFFFFFFFF8);
  *((unsigned char *)v77 + v138) = *((unsigned char *)v78 + v138);
  unint64_t v118 = ((unint64_t)v77 + v138) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v119 = ((unint64_t)v78 + v138) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v118 + 8) = *(void *)(v119 + 8);
  id v120 = (_OWORD *)((v118 + 23) & 0xFFFFFFFFFFFFFFF8);
  id v121 = (_OWORD *)((v119 + 23) & 0xFFFFFFFFFFFFFFF8);
  *id v120 = *v121;
  unint64_t v122 = ((unint64_t)v120 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v123 = ((unint64_t)v121 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v122 = *(void *)v123;
  *(unsigned char *)(v122 + 8) = *(unsigned char *)(v123 + 8);
  *(void *)(((unint64_t)v120 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v121 + 39) & 0xFFFFFFFFFFFFFFF8);
  id v124 = v117;
  swift_bridgeObjectRetain();
  return v29;
}

void *sub_24DB80A78(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_12;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  if (v9) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = v10 + 1;
  }
  memcpy(a1, a2, v11);
LABEL_12:
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v12 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v12 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v13 = v12 + 7;
  v225 = a1;
  uint64_t v14 = (void *)(((unint64_t)a1 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  v228 = a2;
  uint64_t v223 = v13;
  uint64_t v15 = (void *)(((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v14 = *v15;
  unint64_t v16 = ((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = ((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = v19;
  int v21 = *(_DWORD *)(v19 + 80) & 0xF8;
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(v22 - 8);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v26 = v21 | v25 | 7;
  uint64_t v27 = (v26 + 9 + v16) & ~v26;
  uint64_t v226 = v26;
  uint64_t v28 = (v26 + 9 + v17) & ~v26;
  uint64_t v29 = *(unsigned int *)(v19 + 84);
  uint64_t v30 = *(unsigned int *)(v24 + 84);
  if (v29 <= v30) {
    unsigned int v31 = *(_DWORD *)(v24 + 84);
  }
  else {
    unsigned int v31 = *(_DWORD *)(v19 + 84);
  }
  if (v31 <= 0x7FFFFFFE) {
    int v32 = 2147483646;
  }
  else {
    int v32 = v31;
  }
  uint64_t v33 = *(void *)(v19 + 64) + 7;
  uint64_t v34 = *(void *)(*(void *)(v22 - 8) + 64) + 7;
  unint64_t v35 = (((v34 + ((v25 + 8 + (v33 & 0xFFFFFFFFFFFFFFF8)) & ~v25)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  size_t v36 = v35 + 16;
  uint64_t v217 = *(void *)(v22 - 8);
  uint64_t v219 = v22;
  uint64_t v211 = v18;
  uint64_t v213 = v25 + 8;
  uint64_t v215 = ~v25;
  if (v29 == v32)
  {
    uint64_t v210 = *(void *)(*(void *)(v22 - 8) + 64) + 7;
    size_t __n = v35 + 16;
    uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    int v38 = v37(v27, v29, v18);
    uint64_t v39 = (const void *)v28;
    int v40 = v37(v28, v29, v18);
    if (v38) {
      goto LABEL_23;
    }
    goto LABEL_34;
  }
  uint64_t v44 = (uint64_t *)((v33 + v27) & 0xFFFFFFFFFFFFFFF8);
  if (v31 <= 0x7FFFFFFE)
  {
    uint64_t v45 = *v44;
    if ((unint64_t)*v44 >= 0xFFFFFFFF) {
      LODWORD(v45) = -1;
    }
    unsigned int v46 = v45 + 1;
    id v47 = (uint64_t *)((v33 + v28) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v48 = *v47;
    if ((unint64_t)*v47 >= 0xFFFFFFFF) {
      LODWORD(v48) = -1;
    }
    unsigned int v49 = v48 + 1;
    uint64_t v41 = v226;
    if (v46 >= 2)
    {
      uint64_t v210 = *(void *)(*(void *)(v22 - 8) + 64) + 7;
      uint64_t v39 = (const void *)v28;
      if (v49 >= 2) {
        goto LABEL_24;
      }
      size_t __n = v36;
LABEL_41:
      (*(void (**)(uint64_t, const void *, uint64_t))(v20 + 16))(v27, v39, v211);
      *uint64_t v44 = *v47;
      unint64_t v58 = ((unint64_t)v44 + v213) & v215;
      unint64_t v59 = ((unint64_t)v47 + v213) & v215;
      unint64_t v60 = *(void (**)(unint64_t, unint64_t, uint64_t))(v217 + 16);
      swift_bridgeObjectRetain();
      v60(v58, v59, v219);
      uint64_t v61 = (void *)((v210 + v58) & 0xFFFFFFFFFFFFFFF8);
      long long v62 = (void *)((v210 + v59) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v61 = *v62;
      long long v63 = (void *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v64 = (void *)(((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFFFF8);
      *long long v63 = *v64;
      v63[1] = v64[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v65 = v228;
      size_t v36 = __n;
      uint64_t v28 = (uint64_t)v39;
      goto LABEL_45;
    }
    uint64_t v50 = v18;
    if (v49 >= 2)
    {
LABEL_36:
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v27, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v217 + 8))(((unint64_t)v44 + v213) & v215, v219);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v42 = (void *)v27;
      unint64_t v43 = (const void *)v28;
      goto LABEL_37;
    }
LABEL_43:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 24))(v27, v28, v50);
    *uint64_t v44 = *v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v66 = (unint64_t)v47 + v213;
    size_t v67 = v36;
    unint64_t v68 = v66 & v215;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v217 + 24))(((unint64_t)v44 + v213) & v215, v66 & v215, v219);
    uint64_t v69 = (void *)((v34 + (((unint64_t)v44 + v213) & v215)) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v70 = v34 + v68;
    size_t v36 = v67;
    unint64_t v71 = (v70 & 0xFFFFFFFFFFFFFFF8) + 15;
    void *v69 = *(void *)(v70 & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v72 = (void *)(((unint64_t)v69 + 15) & 0xFFFFFFFFFFFFFFF8);
    *long long v72 = *(void *)(v71 & 0xFFFFFFFFFFFFFFF8);
    v72[1] = *(void *)((v71 & 0xFFFFFFFFFFFFFFF8) + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_44;
  }
  uint64_t v210 = *(void *)(*(void *)(v22 - 8) + 64) + 7;
  size_t __n = v35 + 16;
  uint64_t v51 = ~v25;
  uint64_t v52 = ((unint64_t)v44 + v25 + 8) & ~v25;
  uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v54 = v23;
  uint64_t v55 = v25 + 8;
  int v56 = v53(v52, v30, v23);
  uint64_t v57 = (uint64_t (*)(unint64_t, uint64_t, uint64_t))v53;
  int v208 = v56;
  uint64_t v39 = (const void *)v28;
  int v40 = v57((v55 + ((v33 + v28) & 0xFFFFFFFFFFFFFFF8)) & v51, v30, v54);
  if (!v208)
  {
LABEL_34:
    uint64_t v44 = (uint64_t *)((v33 + v27) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v41 = v226;
    if (v40)
    {
      size_t v36 = __n;
      uint64_t v28 = (uint64_t)v39;
      uint64_t v50 = v211;
      goto LABEL_36;
    }
    id v47 = (uint64_t *)(((unint64_t)v39 + v33) & 0xFFFFFFFFFFFFFFF8);
    size_t v36 = __n;
    uint64_t v28 = (uint64_t)v39;
    uint64_t v34 = v210;
    uint64_t v50 = v211;
    goto LABEL_43;
  }
LABEL_23:
  uint64_t v41 = v226;
  size_t v36 = __n;
  if (!v40)
  {
    uint64_t v44 = (uint64_t *)((v33 + v27) & 0xFFFFFFFFFFFFFFF8);
    id v47 = (uint64_t *)(((unint64_t)v39 + v33) & 0xFFFFFFFFFFFFFFF8);
    goto LABEL_41;
  }
LABEL_24:
  unint64_t v42 = (void *)v27;
  uint64_t v28 = (uint64_t)v39;
  unint64_t v43 = v39;
LABEL_37:
  memcpy(v42, v43, v36);
LABEL_44:
  uint64_t v65 = v228;
LABEL_45:
  uint64_t v73 = v36 + v28 + 34;
  *(unsigned char *)(v36 + v27) = *(unsigned char *)(v36 + v28);
  uint64_t v74 = v36 + v27 + 34;
  *(unsigned char *)((v36 + v27) | 1) = *(unsigned char *)((v36 + v28) | 1);
  *(unsigned char *)((v36 + v27) | 2) = *(unsigned char *)((v36 + v28) | 2);
  unint64_t v75 = (v36 + v27 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v76 = (v36 + v28 + 10) & 0xFFFFFFFFFFFFFFF8;
  id v77 = *(id *)v76;
  id v78 = *(void **)(v76 + 8);
  char v79 = *(unsigned char *)(v76 + 16);
  sub_24D3F1C98(*(id *)v76, v78, v79);
  id v80 = *(void **)v75;
  id v81 = *(void **)(v75 + 8);
  *(void *)unint64_t v75 = v77;
  *(void *)(v75 + 8) = v78;
  char v82 = *(unsigned char *)(v75 + 16);
  *(unsigned char *)(v75 + 16) = v79;
  sub_24D3E380C(v80, v81, v82);
  unint64_t v83 = v74 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v84 = v73 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v85 = (uint64_t *)(v83 + 8);
  unint64_t v86 = *(void *)(v83 + 16);
  uint64_t v87 = (uint64_t *)(v84 + 8);
  uint64_t v88 = *(void *)(v84 + 16) >> 60;
  BOOL v92 = ((4 * v88) & 0xC) == 0;
  int v89 = (4 * v88) & 0xC | (v88 >> 2);
  int v90 = v92;
  if (v89 == 15) {
    int v91 = 1;
  }
  else {
    int v91 = v90;
  }
  if (4 * ((v86 >> 60) & 3)) {
    BOOL v92 = (((v86 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v86 >> 60) & 3))) == 15;
  }
  else {
    BOOL v92 = 1;
  }
  if (v92)
  {
    if (v91)
    {
      *(void *)unint64_t v83 = *(void *)v84;
      unint64_t v93 = *(void *)(v84 + 16);
      if (v86 >> 60 == 15)
      {
        if (v93 >> 60 != 15) {
          goto LABEL_59;
        }
      }
      else
      {
        if (v93 >> 60 != 15)
        {
          uint64_t v99 = *v87;
          sub_24D3F9C18(v99, *(void *)(v84 + 16));
          uint64_t v100 = *(void *)(v83 + 8);
          unint64_t v101 = *(void *)(v83 + 16);
          *(void *)(v83 + 8) = v99;
          *(void *)(v83 + 16) = v93;
          sub_24D400DCC(v100, v101);
          goto LABEL_71;
        }
        sub_24D4B12A0(v83 + 8);
      }
      *(_OWORD *)unint64_t v85 = *(_OWORD *)v87;
      goto LABEL_71;
    }
    if (v86 >> 60 != 15) {
      sub_24D400DCC(*v85, v86);
    }
LABEL_65:
    long long v95 = *(_OWORD *)v84;
    long long v96 = *(_OWORD *)(v84 + 16);
    long long v97 = *(_OWORD *)(v84 + 32);
    *(void *)(v83 + 48) = *(void *)(v84 + 48);
    *(_OWORD *)(v83 + 16) = v96;
    *(_OWORD *)(v83 + 32) = v97;
    *(_OWORD *)unint64_t v83 = v95;
    uint64_t v98 = v223;
    goto LABEL_72;
  }
  if (!v91) {
    goto LABEL_65;
  }
  *(void *)unint64_t v83 = *(void *)v84;
  unint64_t v93 = *(void *)(v84 + 16);
  if (v93 >> 60 == 15)
  {
    *(_OWORD *)unint64_t v85 = *(_OWORD *)v87;
    goto LABEL_71;
  }
LABEL_59:
  uint64_t v94 = *v87;
  sub_24D3F9C18(v94, *(void *)(v84 + 16));
  *(void *)(v83 + 8) = v94;
  *(void *)(v83 + 16) = v93;
LABEL_71:
  uint64_t v98 = v223;
  long long v102 = *(_OWORD *)(v84 + 24);
  *(unsigned char *)(v83 + 40) = *(unsigned char *)(v84 + 40);
  *(_OWORD *)(v83 + 24) = v102;
  *(void *)(v83 + 48) = *(void *)(v84 + 48);
LABEL_72:
  id v103 = (void **)((v83 + 63) & 0xFFFFFFFFFFFFFFF8);
  char v104 = (void **)((v84 + 63) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v105 = *v104;
  unint64_t v106 = *v103;
  void *v103 = *v104;
  id v107 = v105;

  *(void *)(((unint64_t)v103 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v104 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v108 = ((((((((((v98 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v41 + 9) & ~v41) + v36 + 34) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v109 = swift_getAssociatedTypeWitness();
  uint64_t v110 = *(void *)(v109 - 8);
  int v111 = *(_DWORD *)(v110 + 80) & 0xF8;
  uint64_t v224 = swift_getAssociatedTypeWitness();
  uint64_t v112 = *(void *)(v224 - 8);
  int v113 = *(_DWORD *)(v112 + 80) & 0xF8;
  uint64_t v216 = swift_getAssociatedTypeWitness();
  uint64_t v114 = *(void *)(v216 - 8);
  uint64_t v115 = *(unsigned __int8 *)(v114 + 80);
  uint64_t v227 = v113 | v115 | 7;
  uint64_t v116 = v227 | v111;
  uint64_t v117 = v108 + v116 + 8;
  uint64_t v118 = ((unint64_t)v225 + v117) & ~v116;
  uint64_t v119 = ((unint64_t)v65 + v117) & ~v116;
  id v120 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48);
  LODWORD(v103) = v120(v118, 1, v109);
  int v121 = v120(v119, 1, v109);
  if (v103)
  {
    if (!v121)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 16))(v118, v119, v109);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v110 + 56))(v118, 0, 1, v109);
      goto LABEL_83;
    }
    int v122 = *(_DWORD *)(v110 + 84);
    size_t v123 = *(void *)(v110 + 64);
  }
  else
  {
    if (!v121)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 24))(v118, v119, v109);
      goto LABEL_83;
    }
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v118, v109);
    int v122 = *(_DWORD *)(v110 + 84);
    size_t v123 = *(void *)(v110 + 64);
  }
  if (v122) {
    size_t v124 = v123;
  }
  else {
    size_t v124 = v123 + 1;
  }
  memcpy((void *)v118, (const void *)v119, v124);
LABEL_83:
  if (*(_DWORD *)(v110 + 84)) {
    uint64_t v125 = *(void *)(v110 + 64);
  }
  else {
    uint64_t v125 = *(void *)(v110 + 64) + 1;
  }
  uint64_t v222 = v118;
  uint64_t v218 = v119;
  unsigned int v126 = (void *)(((v119 | 7) + v125) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v127 = (void *)(((v118 | 7) + v125) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v127 = *v126;
  unint64_t v128 = ((unint64_t)v127 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v129 = ((unint64_t)v126 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v128 = *(void *)v129;
  *(unsigned char *)(v128 + 8) = *(unsigned char *)(v129 + 8);
  uint64_t v130 = (void *)((v227 + 9 + v128) & ~v227);
  v229 = (char *)((v227 + 9 + v129) & ~v227);
  uint64_t v131 = *(unsigned int *)(v112 + 84);
  uint64_t v132 = *(unsigned int *)(v114 + 84);
  if (v131 <= v132) {
    unsigned int v133 = *(_DWORD *)(v114 + 84);
  }
  else {
    unsigned int v133 = *(_DWORD *)(v112 + 84);
  }
  if (v133 <= 0x7FFFFFFE) {
    int v134 = 2147483646;
  }
  else {
    int v134 = v133;
  }
  uint64_t v135 = *(void *)(v112 + 64) + 7;
  uint64_t v136 = ~v115;
  uint64_t v137 = v115 + 8;
  size_t v138 = ((((*(void *)(v114 + 64) + 7 + ((v115 + 8 + (v135 & 0xFFFFFFFFFFFFFFF8)) & ~v115)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  size_t __na = v125;
  uint64_t v212 = v136;
  uint64_t v214 = *(void *)(v114 + 64) + 7;
  if (v131 == v134)
  {
    size_t v209 = v138;
    unsigned int v139 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v112 + 48);
    int v140 = v139(v130, v131, v224);
    int v141 = v139(v229, v131, v224);
    if (v140) {
      goto LABEL_94;
    }
LABEL_105:
    uint64_t v143 = (uint64_t *)(((unint64_t)v130 + v135) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v142 = v225;
    if (v141)
    {
      size_t v138 = v209;
      goto LABEL_107;
    }
    uint64_t v144 = (uint64_t *)((unint64_t)&v229[v135] & 0xFFFFFFFFFFFFFFF8);
    size_t v138 = v209;
    goto LABEL_112;
  }
  uint64_t v143 = (uint64_t *)(((unint64_t)v130 + v135) & 0xFFFFFFFFFFFFFFF8);
  if (v133 > 0x7FFFFFFE)
  {
    size_t v209 = v138;
    unint64_t v149 = ((unint64_t)v143 + v137) & v136;
    unsigned int v150 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v114 + 48);
    int v207 = v150(v149, v132, v216);
    int v141 = v150((v137 + ((unint64_t)&v229[v135] & 0xFFFFFFFFFFFFFFF8)) & v136, v132, v216);
    if (v207)
    {
LABEL_94:
      uint64_t v142 = v225;
      size_t v138 = v209;
      if (!v141)
      {
        uint64_t v143 = (uint64_t *)(((unint64_t)v130 + v135) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v144 = (uint64_t *)((unint64_t)&v229[v135] & 0xFFFFFFFFFFFFFFF8);
LABEL_110:
        (*(void (**)(void *, char *, uint64_t))(v112 + 16))(v130, v229, v224);
        *uint64_t v143 = *v144;
        unint64_t v151 = ((unint64_t)v143 + v137) & v212;
        unint64_t v152 = ((unint64_t)v144 + v137) & v212;
        uint64_t v153 = *(void (**)(unint64_t, unint64_t, uint64_t))(v114 + 16);
        swift_bridgeObjectRetain();
        v153(v151, v152, v216);
        uint64_t v154 = (void *)((v214 + v151) & 0xFFFFFFFFFFFFFFF8);
        int v155 = (void *)((v214 + v152) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v154 = *v155;
        int v156 = (void *)(((unint64_t)v154 + 15) & 0xFFFFFFFFFFFFFFF8);
        int v157 = (void *)(((unint64_t)v155 + 15) & 0xFFFFFFFFFFFFFFF8);
        *int v156 = *v157;
        v156[1] = v157[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_113;
      }
LABEL_108:
      memcpy(v130, v229, v138);
      goto LABEL_113;
    }
    goto LABEL_105;
  }
  uint64_t v145 = *v143;
  if ((unint64_t)*v143 >= 0xFFFFFFFF) {
    LODWORD(v145) = -1;
  }
  unsigned int v146 = v145 + 1;
  uint64_t v144 = (uint64_t *)((unint64_t)&v229[v135] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v147 = *v144;
  if ((unint64_t)*v144 >= 0xFFFFFFFF) {
    LODWORD(v147) = -1;
  }
  unsigned int v148 = v147 + 1;
  uint64_t v142 = v225;
  if (v146 >= 2)
  {
    if (v148 < 2) {
      goto LABEL_110;
    }
    goto LABEL_108;
  }
  if (v148 >= 2)
  {
LABEL_107:
    (*(void (**)(void *, uint64_t))(v112 + 8))(v130, v224);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v114 + 8))(((unint64_t)v143 + v137) & v212, v216);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_108;
  }
LABEL_112:
  (*(void (**)(void *, char *, uint64_t))(v112 + 24))(v130, v229, v224);
  *uint64_t v143 = *v144;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v158 = ((unint64_t)v144 + v137) & v212;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v114 + 24))(((unint64_t)v143 + v137) & v212, v158, v216);
  int v159 = (void *)((v214 + (((unint64_t)v143 + v137) & v212)) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v160 = (v214 + v158) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v161 = *(void *)v160;
  v160 += 15;
  *int v159 = v161;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v162 = (void *)(((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8);
  *int v162 = *(void *)(v160 & 0xFFFFFFFFFFFFFFF8);
  v162[1] = *(void *)((v160 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_113:
  size_t v163 = v138;
  uint64_t v164 = (uint64_t)&v229[v138 + 10];
  size_t v165 = &v229[v138];
  *((unsigned char *)v130 + v138) = v229[v138];
  uint64_t v166 = (uint64_t)v130 + v138 + 34;
  *(unsigned char *)(((unint64_t)v130 + v138) | 1) = *(unsigned char *)((unint64_t)&v229[v138] | 1);
  *(unsigned char *)(((unint64_t)v130 + v138) | 2) = *(unsigned char *)((unint64_t)&v229[v138] | 2);
  unint64_t v167 = ((unint64_t)v130 + v138 + 10) & 0xFFFFFFFFFFFFFFF8;
  v168 = *(void **)(v164 & 0xFFFFFFFFFFFFFFF8);
  long long v169 = *(void **)((v164 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v170 = *(unsigned char *)((v164 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v168, v169, v170);
  uint64_t v171 = *(void **)v167;
  unint64_t v172 = *(void **)(v167 + 8);
  *(void *)unint64_t v167 = v168;
  *(void *)(v167 + 8) = v169;
  char v173 = *(unsigned char *)(v167 + 16);
  *(unsigned char *)(v167 + 16) = v170;
  sub_24D3E380C(v171, v172, v173);
  unint64_t v174 = v166 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v175 = (unint64_t)(v165 + 34) & 0xFFFFFFFFFFFFFFF8;
  v176 = (uint64_t *)(v174 + 8);
  unint64_t v177 = *(void *)(v174 + 16);
  id v178 = (uint64_t *)(v175 + 8);
  uint64_t v179 = *(void *)(v175 + 16) >> 60;
  BOOL v92 = ((4 * v179) & 0xC) == 0;
  int v180 = (4 * v179) & 0xC | (v179 >> 2);
  int v181 = v92;
  if (v180 == 15) {
    int v182 = 1;
  }
  else {
    int v182 = v181;
  }
  if (!(4 * ((v177 >> 60) & 3)) || (((v177 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v177 >> 60) & 3))) == 0xF)
  {
    if (v182)
    {
      *(void *)unint64_t v174 = *(void *)v175;
      unint64_t v183 = *(void *)(v175 + 16);
      if (v177 >> 60 != 15)
      {
        if (v183 >> 60 != 15)
        {
          uint64_t v188 = *v178;
          sub_24D3F9C18(v188, *(void *)(v175 + 16));
          uint64_t v189 = *(void *)(v174 + 8);
          unint64_t v190 = *(void *)(v174 + 16);
          *(void *)(v174 + 8) = v188;
          *(void *)(v174 + 16) = v183;
          sub_24D400DCC(v189, v190);
          goto LABEL_134;
        }
        sub_24D4B12A0(v174 + 8);
        goto LABEL_132;
      }
LABEL_125:
      if (v183 >> 60 != 15)
      {
        uint64_t v184 = *v178;
        sub_24D3F9C18(v184, v183);
        *(void *)(v174 + 8) = v184;
        *(void *)(v174 + 16) = v183;
LABEL_134:
        long long v191 = *(_OWORD *)(v175 + 24);
        *(unsigned char *)(v174 + 40) = *(unsigned char *)(v175 + 40);
        *(_OWORD *)(v174 + 24) = v191;
        *(void *)(v174 + 48) = *(void *)(v175 + 48);
        goto LABEL_135;
      }
LABEL_132:
      *(_OWORD *)v176 = *(_OWORD *)v178;
      goto LABEL_134;
    }
    if (v177 >> 60 != 15) {
      sub_24D400DCC(*v176, v177);
    }
  }
  else if (v182)
  {
    *(void *)unint64_t v174 = *(void *)v175;
    unint64_t v183 = *(void *)(v175 + 16);
    goto LABEL_125;
  }
  long long v185 = *(_OWORD *)v175;
  long long v186 = *(_OWORD *)(v175 + 16);
  long long v187 = *(_OWORD *)(v175 + 32);
  *(void *)(v174 + 48) = *(void *)(v175 + 48);
  *(_OWORD *)(v174 + 16) = v186;
  *(_OWORD *)(v174 + 32) = v187;
  *(_OWORD *)unint64_t v174 = v185;
LABEL_135:
  v192 = (void **)((v174 + 63) & 0xFFFFFFFFFFFFFFF8);
  v193 = (void **)((v175 + 63) & 0xFFFFFFFFFFFFFFF8);
  v194 = *v193;
  v195 = *v192;
  *v192 = *v193;
  id v196 = v194;

  *(void *)(((unint64_t)v192 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v193 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v197 = ((((((((v227 + 9 + ((((__na + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v227) + v163 + 34) & 0xFFFFFFFFFFFFFFF8)
           + 63) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  unint64_t v198 = v197 + v222;
  unint64_t v199 = v197 + v218;
  *(unsigned char *)unint64_t v198 = *(unsigned char *)v199;
  unint64_t v200 = v198 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v201 = v199 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v198 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v199 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v202 = (void *)((v200 + 23) & 0xFFFFFFFFFFFFFFF8);
  v203 = (void *)((v201 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v202 = *v203;
  v202[1] = v203[1];
  unint64_t v204 = ((unint64_t)v202 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v205 = ((unint64_t)v203 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v204 = *(void *)v205;
  *(unsigned char *)(v204 + 8) = *(unsigned char *)(v205 + 8);
  *(void *)(((unint64_t)v202 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v203 + 39) & 0xFFFFFFFFFFFFFFF8);
  return v142;
}

void *sub_24DB81C40(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    int v6 = *(_DWORD *)(v5 + 84);
    size_t v7 = *(void *)(v5 + 64);
    if (v6) {
      size_t v8 = v7;
    }
    else {
      size_t v8 = v7 + 1;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    size_t v10 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v9 = v5 + 56;
    v10(a1, 0, 1, AssociatedTypeWitness);
    int v6 = *(_DWORD *)(v9 + 28);
    size_t v7 = *(void *)(v9 + 8);
  }
  if (v6) {
    size_t v11 = v7;
  }
  else {
    size_t v11 = v7 + 1;
  }
  size_t v12 = v11 + 7;
  int v122 = a2;
  size_t v124 = a1;
  uint64_t v13 = (void *)(((unint64_t)a1 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  size_t v119 = v12;
  uint64_t v14 = (void *)(((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8);
  void *v13 = *v14;
  unint64_t v15 = ((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = ((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = v18;
  int v20 = *(_DWORD *)(v18 + 80) & 0xF8;
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = v20 | v23 | 7;
  __dst = (unsigned char *)((v24 + 9 + v15) & ~v24);
  uint64_t v25 = (const void *)((v24 + 9 + v16) & ~v24);
  uint64_t v26 = *(unsigned int *)(v18 + 84);
  if (v26 <= *(_DWORD *)(v22 + 84)) {
    unsigned int v27 = *(_DWORD *)(v22 + 84);
  }
  else {
    unsigned int v27 = *(_DWORD *)(v18 + 84);
  }
  if (v27 <= 0x7FFFFFFE) {
    int v28 = 2147483646;
  }
  else {
    int v28 = v27;
  }
  uint64_t v29 = *(void *)(v18 + 64) + 7;
  uint64_t v30 = ~v23;
  uint64_t v31 = v23 + 8;
  uint64_t v112 = *(void *)(*(void *)(v21 - 8) + 64) + 7;
  uint64_t v114 = v21;
  size_t v32 = ((((v112 + ((v23 + 8 + (v29 & 0xFFFFFFFFFFFFFFF8)) & ~v23)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v26 == v28)
  {
    if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v25, v26, v17)) {
      goto LABEL_26;
    }
LABEL_25:
    unint64_t v35 = __dst;
    memcpy(__dst, v25, v32);
    goto LABEL_28;
  }
  uint64_t v33 = (uint64_t *)(((unint64_t)v25 + v29) & 0xFFFFFFFFFFFFFFF8);
  if (v27 <= 0x7FFFFFFE)
  {
    uint64_t v34 = *v33;
    if ((unint64_t)*v33 >= 0xFFFFFFFF) {
      LODWORD(v34) = -1;
    }
    if ((v34 + 1) < 2) {
      goto LABEL_27;
    }
    goto LABEL_25;
  }
  if ((*(unsigned int (**)(unint64_t))(v22 + 48))(((unint64_t)v33 + v31) & v30)) {
    goto LABEL_25;
  }
LABEL_26:
  uint64_t v33 = (uint64_t *)(((unint64_t)v25 + v29) & 0xFFFFFFFFFFFFFFF8);
LABEL_27:
  uint64_t v36 = v17;
  uint64_t v37 = v30;
  (*(void (**)(unsigned char *, const void *, uint64_t))(v19 + 32))(__dst, v25, v36);
  unint64_t v35 = __dst;
  int v38 = (void *)((unint64_t)&__dst[v29] & 0xFFFFFFFFFFFFFFF8);
  *int v38 = *v33;
  unint64_t v39 = ((unint64_t)v38 + v31) & v30;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 32))(v39, ((unint64_t)v33 + v31) & v37, v114);
  int v40 = (void *)((v112 + v39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v41 = (void *)((v112 + (((unint64_t)v33 + v31) & v37)) & 0xFFFFFFFFFFFFFFF8);
  *int v40 = *v41;
  *(_OWORD *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_28:
  uint64_t v42 = (uint64_t)v25 + v32 + 34;
  v35[v32] = *((unsigned char *)v25 + v32);
  *(unsigned char *)((unint64_t)&v35[v32] | 1) = *(unsigned char *)(((unint64_t)v25 + v32) | 1);
  *(unsigned char *)((unint64_t)&v35[v32] | 2) = *(unsigned char *)(((unint64_t)v25 + v32) | 2);
  unint64_t v43 = (unint64_t)&v35[v32 + 10] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = ((unint64_t)v25 + v32 + 10) & 0xFFFFFFFFFFFFFFF8;
  long long v45 = *(_OWORD *)v44;
  *(unsigned char *)(v43 + 16) = *(unsigned char *)(v44 + 16);
  *(_OWORD *)unint64_t v43 = v45;
  unint64_t v46 = (unint64_t)&v35[v32 + 34] & 0xFFFFFFFFFFFFFFF8;
  long long v47 = *(_OWORD *)(v42 & 0xFFFFFFFFFFFFFFF8);
  long long v48 = *(_OWORD *)((v42 & 0xFFFFFFFFFFFFFFF8) + 16);
  long long v49 = *(_OWORD *)((v42 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(void *)(v46 + 48) = *(void *)((v42 & 0xFFFFFFFFFFFFFFF8) + 48);
  *(_OWORD *)(v46 + 16) = v48;
  *(_OWORD *)(v46 + 32) = v49;
  *(_OWORD *)unint64_t v46 = v47;
  uint64_t v50 = (void *)((v46 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v51 = (void *)(((v42 & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v50 = *v51;
  *(void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v52 = ((((((((((v119 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v24 + 9) & ~v24) + v32 + 34) & 0xFFFFFFFFFFFFFFF8)
         + 63) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v53 = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(v53 - 8);
  int v55 = *(_DWORD *)(v54 + 80) & 0xF8;
  uint64_t v115 = swift_getAssociatedTypeWitness();
  uint64_t v56 = *(void *)(v115 - 8);
  int v57 = *(_DWORD *)(v56 + 80) & 0xF8;
  uint64_t v113 = swift_getAssociatedTypeWitness();
  uint64_t v58 = *(void *)(v113 - 8);
  uint64_t v59 = *(unsigned __int8 *)(v58 + 80);
  uint64_t v60 = v57 | v59 | 7;
  uint64_t v61 = v60 | v55;
  uint64_t v62 = v52 + v61 + 8;
  uint64_t v63 = ((unint64_t)v124 + v62) & ~v61;
  uint64_t v64 = ((unint64_t)v122 + v62) & ~v61;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v64, 1, v53))
  {
    int v65 = *(_DWORD *)(v54 + 84);
    size_t v66 = *(void *)(v54 + 64);
    if (v65) {
      size_t v67 = v66;
    }
    else {
      size_t v67 = v66 + 1;
    }
    memcpy((void *)v63, (const void *)v64, v67);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v63, v64, v53);
    uint64_t v69 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56);
    uint64_t v68 = v54 + 56;
    v69(v63, 0, 1, v53);
    int v65 = *(_DWORD *)(v68 + 28);
    size_t v66 = *(void *)(v68 + 8);
  }
  if (v65) {
    size_t v70 = v66;
  }
  else {
    size_t v70 = v66 + 1;
  }
  uint64_t v121 = v64;
  uint64_t v123 = v63;
  unint64_t v71 = (void *)(((v63 | 7) + v70) & 0xFFFFFFFFFFFFFFF8);
  size_t v120 = v70;
  long long v72 = (void *)(((v64 | 7) + v70) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v71 = *v72;
  unint64_t v73 = ((unint64_t)v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = ((unint64_t)v72 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v73 = *(void *)v74;
  *(unsigned char *)(v73 + 8) = *(unsigned char *)(v74 + 8);
  unint64_t __dsta = ~v60;
  uint64_t v118 = v60 + 9;
  unint64_t v75 = (void *)((v60 + 9 + v73) & ~v60);
  unint64_t v76 = (const void *)((v60 + 9 + v74) & ~v60);
  unsigned int v77 = *(_DWORD *)(v56 + 84);
  if (v77 <= *(_DWORD *)(v58 + 84)) {
    unsigned int v78 = *(_DWORD *)(v58 + 84);
  }
  else {
    unsigned int v78 = *(_DWORD *)(v56 + 84);
  }
  if (v78 <= 0x7FFFFFFE) {
    int v79 = 2147483646;
  }
  else {
    int v79 = v78;
  }
  uint64_t v80 = *(void *)(v56 + 64) + 7;
  uint64_t v81 = ~v59;
  uint64_t v82 = v59 + 8;
  uint64_t v83 = *(void *)(v58 + 64) + 7;
  size_t v84 = ((((v83 + ((v59 + 8 + (v80 & 0xFFFFFFFFFFFFFFF8)) & ~v59)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v77 == v79)
  {
    uint64_t v85 = ~v59;
    if (!(*(unsigned int (**)(const void *, void, uint64_t))(v56 + 48))(v76, *(unsigned int *)(v56 + 84), v115))goto LABEL_53; {
  }
    }
  else
  {
    unint64_t v86 = (void *)(((unint64_t)v76 + v80) & 0xFFFFFFFFFFFFFFF8);
    if (v78 > 0x7FFFFFFE)
    {
      uint64_t v85 = ~v59;
      if (!(*(unsigned int (**)(unint64_t))(v58 + 48))(((unint64_t)v86 + v82) & v81))
      {
LABEL_53:
        unint64_t v86 = (void *)(((unint64_t)v76 + v80) & 0xFFFFFFFFFFFFFFF8);
LABEL_54:
        (*(void (**)(void *, const void *, uint64_t))(v56 + 32))(v75, v76, v115);
        uint64_t v88 = (void *)(((unint64_t)v75 + v80) & 0xFFFFFFFFFFFFFFF8);
        void *v88 = *v86;
        uint64_t v89 = v85;
        unint64_t v90 = ((unint64_t)v88 + v82) & v85;
        unint64_t v91 = ((unint64_t)v86 + v82) & v89;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v58 + 32))(v90, v91, v113);
        BOOL v92 = (void *)((v83 + v90) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v93 = (void *)((v83 + v91) & 0xFFFFFFFFFFFFFFF8);
        *BOOL v92 = *v93;
        *(_OWORD *)(((unint64_t)v92 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v93 + 15) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_55;
      }
    }
    else
    {
      uint64_t v85 = ~v59;
      uint64_t v87 = *v86;
      if (*v86 >= 0xFFFFFFFFuLL) {
        LODWORD(v87) = -1;
      }
      if ((v87 + 1) < 2) {
        goto LABEL_54;
      }
    }
  }
  memcpy(v75, v76, v84);
LABEL_55:
  *((unsigned char *)v75 + v84) = *((unsigned char *)v76 + v84);
  *(unsigned char *)(((unint64_t)v75 + v84) | 1) = *(unsigned char *)(((unint64_t)v76 + v84) | 1);
  *(unsigned char *)(((unint64_t)v75 + v84) | 2) = *(unsigned char *)(((unint64_t)v76 + v84) | 2);
  unint64_t v94 = ((unint64_t)v75 + v84 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v95 = ((unint64_t)v76 + v84 + 10) & 0xFFFFFFFFFFFFFFF8;
  long long v96 = *(_OWORD *)v95;
  *(unsigned char *)(v94 + 16) = *(unsigned char *)(v95 + 16);
  *(_OWORD *)unint64_t v94 = v96;
  unint64_t v97 = ((unint64_t)v75 + v84 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v98 = ((unint64_t)v76 + v84 + 34) & 0xFFFFFFFFFFFFFFF8;
  long long v99 = *(_OWORD *)v98;
  long long v100 = *(_OWORD *)(v98 + 16);
  long long v101 = *(_OWORD *)(v98 + 32);
  *(void *)(v97 + 48) = *(void *)(v98 + 48);
  *(_OWORD *)(v97 + 16) = v100;
  *(_OWORD *)(v97 + 32) = v101;
  *(_OWORD *)unint64_t v97 = v99;
  long long v102 = (void *)((v97 + 63) & 0xFFFFFFFFFFFFFFF8);
  id v103 = (void *)((v98 + 63) & 0xFFFFFFFFFFFFFFF8);
  *long long v102 = *v103;
  *(void *)(((unint64_t)v102 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v103 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v104 = ((((((((v118 + ((((v120 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & __dsta) + v84 + 34) & 0xFFFFFFFFFFFFFFF8)
           + 63) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  unint64_t v105 = v104 + v123;
  unint64_t v106 = v104 + v121;
  *(unsigned char *)unint64_t v105 = *(unsigned char *)v106;
  v105 &= 0xFFFFFFFFFFFFFFF8;
  v106 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v105 + 8) = *(void *)(v106 + 8);
  id v107 = (_OWORD *)((v105 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v108 = (_OWORD *)((v106 + 23) & 0xFFFFFFFFFFFFFFF8);
  *id v107 = *v108;
  unint64_t v109 = ((unint64_t)v107 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = ((unint64_t)v108 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v109 = *(void *)v110;
  *(unsigned char *)(v109 + 8) = *(unsigned char *)(v110 + 8);
  *(void *)(((unint64_t)v107 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v108 + 39) & 0xFFFFFFFFFFFFFFF8);
  return v124;
}

void *sub_24DB82600(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_12;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  if (v9) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = v10 + 1;
  }
  memcpy(a1, a2, v11);
LABEL_12:
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v12 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v12 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v13 = v12 + 7;
  unint64_t v197 = a1;
  uint64_t v14 = (void *)(((unint64_t)a1 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  v194 = a2;
  uint64_t v191 = v13;
  unint64_t v15 = (void *)(((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v14 = *v15;
  unint64_t v16 = ((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = ((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = v19;
  int v21 = *(_DWORD *)(v19 + 80) & 0xF8;
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = v23;
  uint64_t v25 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v26 = v21 | v25 | 7;
  uint64_t v27 = (v26 + 9 + v16) & ~v26;
  uint64_t v192 = v26;
  uint64_t v28 = (v26 + 9 + v17) & ~v26;
  uint64_t v29 = *(unsigned int *)(v19 + 84);
  uint64_t v30 = *(unsigned int *)(v23 + 84);
  if (v29 <= v30) {
    unsigned int v31 = *(_DWORD *)(v23 + 84);
  }
  else {
    unsigned int v31 = *(_DWORD *)(v19 + 84);
  }
  if (v31 <= 0x7FFFFFFE) {
    int v32 = 2147483646;
  }
  else {
    int v32 = v31;
  }
  uint64_t v33 = *(void *)(v19 + 64) + 7;
  uint64_t v34 = ~v25;
  size_t v198 = ((((*(void *)(v23 + 64) + 7 + ((v25 + 8 + (v33 & 0xFFFFFFFFFFFFFFF8)) & ~v25)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v187 = *(void *)(v23 + 64) + 7;
  uint64_t v189 = v22;
  uint64_t v181 = v18;
  uint64_t v183 = v25 + 8;
  uint64_t v185 = *(void *)(v22 - 8);
  if (v29 == v32)
  {
    uint64_t v179 = ~v25;
    unint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    int v36 = v35(v27, v29, v18);
    uint64_t v37 = (const void *)v28;
    int v38 = v35(v28, v29, v18);
    unint64_t v39 = (void *)v27;
    if (v36) {
      goto LABEL_23;
    }
    goto LABEL_34;
  }
  uint64_t v37 = (const void *)v28;
  uint64_t v41 = (uint64_t *)((v33 + v27) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v39 = (void *)v27;
  if (v31 <= 0x7FFFFFFE)
  {
    uint64_t v43 = *v41;
    if ((unint64_t)*v41 >= 0xFFFFFFFF) {
      LODWORD(v43) = -1;
    }
    unsigned int v44 = v43 + 1;
    uint64_t v42 = (uint64_t *)(((unint64_t)v37 + v33) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v45 = *v42;
    if ((unint64_t)*v42 >= 0xFFFFFFFF) {
      LODWORD(v45) = -1;
    }
    unsigned int v46 = v45 + 1;
    uint64_t v40 = v192;
    if (v44 >= 2)
    {
      uint64_t v179 = ~v25;
      if (v46 < 2) {
        goto LABEL_39;
      }
LABEL_37:
      size_t v53 = v198;
      memcpy(v39, v37, v198);
      goto LABEL_43;
    }
    uint64_t v47 = v18;
    if (v46 >= 2)
    {
LABEL_36:
      (*(void (**)(void *, uint64_t))(v20 + 8))(v39, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v185 + 8))(((unint64_t)v41 + v183) & v34, v189);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
LABEL_41:
    (*(void (**)(void *, const void *, uint64_t))(v20 + 40))(v39, v37, v47);
    uint64_t *v41 = *v42;
    swift_bridgeObjectRelease();
    unint64_t v57 = ((unint64_t)v41 + v183) & v34;
    unint64_t v58 = ((unint64_t)v42 + v183) & v34;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v185 + 40))(v57, v58, v189);
    uint64_t v59 = (void *)((v187 + v57) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v60 = (v187 + v58) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v61 = *(void *)v60;
    v60 += 15;
    void *v59 = v61;
    swift_bridgeObjectRelease();
    uint64_t v62 = (void *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v62 = *(void *)(v60 & 0xFFFFFFFFFFFFFFF8);
    v62[1] = *(void *)((v60 & 0xFFFFFFFFFFFFFFF8) + 8);
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  unint64_t v48 = (unint64_t)v41 + v25 + 8;
  uint64_t v49 = v25 + 8;
  uint64_t v50 = ~v25;
  uint64_t v51 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v52 = v22;
  int v177 = v51(v48 & v34, v30, v22);
  uint64_t v179 = v50;
  int v38 = v51((v49 + (((unint64_t)v37 + v33) & 0xFFFFFFFFFFFFFFF8)) & v50, v30, v52);
  if (!v177)
  {
LABEL_34:
    uint64_t v41 = (uint64_t *)(((unint64_t)v39 + v33) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v40 = v192;
    if (v38)
    {
      uint64_t v34 = v179;
      uint64_t v47 = v181;
      goto LABEL_36;
    }
    uint64_t v42 = (uint64_t *)(((unint64_t)v37 + v33) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v34 = v179;
    uint64_t v47 = v181;
    goto LABEL_41;
  }
LABEL_23:
  uint64_t v40 = v192;
  if (v38) {
    goto LABEL_37;
  }
  uint64_t v41 = (uint64_t *)(((unint64_t)v39 + v33) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v42 = (uint64_t *)(((unint64_t)v37 + v33) & 0xFFFFFFFFFFFFFFF8);
LABEL_39:
  (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v39, v37, v181);
  uint64_t *v41 = *v42;
  unint64_t v54 = ((unint64_t)v41 + v183) & v179;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v185 + 32))(v54, ((unint64_t)v42 + v183) & v179, v189);
  int v55 = (void *)((v187 + v54) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v56 = (void *)((v187 + (((unint64_t)v42 + v183) & v179)) & 0xFFFFFFFFFFFFFFF8);
  *int v55 = *v56;
  *(_OWORD *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_42:
  size_t v53 = v198;
LABEL_43:
  *((unsigned char *)v39 + v53) = *((unsigned char *)v37 + v53);
  *(unsigned char *)(((unint64_t)v39 + v53) | 1) = *(unsigned char *)(((unint64_t)v37 + v53) | 1);
  *(unsigned char *)(((unint64_t)v39 + v53) | 2) = *(unsigned char *)(((unint64_t)v37 + v53) | 2);
  unint64_t v63 = ((unint64_t)v39 + v53 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = ((unint64_t)v37 + v53 + 10) & 0xFFFFFFFFFFFFFFF8;
  char v65 = *(unsigned char *)(v64 + 16);
  size_t v66 = *(void **)v63;
  size_t v67 = *(void **)(v63 + 8);
  *(_OWORD *)unint64_t v63 = *(_OWORD *)v64;
  char v68 = *(unsigned char *)(v63 + 16);
  *(unsigned char *)(v63 + 16) = v65;
  sub_24D3E380C(v66, v67, v68);
  unint64_t v69 = ((unint64_t)v39 + v53 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = ((unint64_t)v37 + v53 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v71 = *(void *)(v69 + 16);
  if (4 * ((v71 >> 60) & 3)) {
    BOOL v72 = (((v71 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v71 >> 60) & 3))) == 15;
  }
  else {
    BOOL v72 = 1;
  }
  if (!v72)
  {
LABEL_57:
    long long v78 = *(_OWORD *)v70;
    long long v79 = *(_OWORD *)(v70 + 16);
    long long v80 = *(_OWORD *)(v70 + 32);
    *(void *)(v69 + 48) = *(void *)(v70 + 48);
    *(_OWORD *)(v69 + 16) = v79;
    *(_OWORD *)(v69 + 32) = v80;
    *(_OWORD *)unint64_t v69 = v78;
    uint64_t v77 = v191;
    goto LABEL_62;
  }
  unint64_t v73 = (uint64_t *)(v69 + 8);
  uint64_t v74 = *(void *)(v70 + 16) >> 60;
  if (4 * (v74 & 3)) {
    BOOL v75 = ((v74 >> 2) & 0xFFFFFFF3 | (4 * (v74 & 3))) == 15;
  }
  else {
    BOOL v75 = 1;
  }
  if (!v75)
  {
    if (v71 >> 60 != 15) {
      sub_24D400DCC(*v73, v71);
    }
    goto LABEL_57;
  }
  unint64_t v76 = (_OWORD *)(v70 + 8);
  *(void *)unint64_t v69 = *(void *)v70;
  if (v71 >> 60 == 15)
  {
    *(_OWORD *)unint64_t v73 = *v76;
    uint64_t v77 = v191;
  }
  else
  {
    unint64_t v81 = *(void *)(v70 + 16);
    uint64_t v77 = v191;
    if (v81 >> 60 == 15)
    {
      sub_24D4B12A0(v69 + 8);
      *(_OWORD *)unint64_t v73 = *v76;
    }
    else
    {
      uint64_t v82 = *(void *)(v69 + 8);
      *(void *)(v69 + 8) = *(void *)v76;
      *(void *)(v69 + 16) = v81;
      sub_24D400DCC(v82, v71);
    }
  }
  long long v83 = *(_OWORD *)(v70 + 24);
  *(unsigned char *)(v69 + 40) = *(unsigned char *)(v70 + 40);
  *(_OWORD *)(v69 + 24) = v83;
  *(void *)(v69 + 48) = *(void *)(v70 + 48);
LABEL_62:
  size_t v84 = (void **)((v69 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v85 = (void **)((v70 + 63) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v86 = *v84;
  *size_t v84 = *v85;

  *(void *)(((unint64_t)v84 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v85 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v87 = ((((((((((v77 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v40 + 9) & ~v40) + v53 + 34) & 0xFFFFFFFFFFFFFFF8)
         + 63) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v88 = swift_getAssociatedTypeWitness();
  uint64_t v89 = *(void *)(v88 - 8);
  int v90 = *(_DWORD *)(v89 + 80) & 0xF8;
  uint64_t v196 = swift_getAssociatedTypeWitness();
  uint64_t v91 = *(void *)(v196 - 8);
  int v92 = *(_DWORD *)(v91 + 80) & 0xF8;
  uint64_t v186 = swift_getAssociatedTypeWitness();
  uint64_t v93 = *(void *)(v186 - 8);
  uint64_t v94 = *(unsigned __int8 *)(v93 + 80);
  uint64_t v199 = v92 | v94 | 7;
  uint64_t v95 = v199 | v90;
  uint64_t v96 = v87 + v95 + 8;
  uint64_t v97 = ((unint64_t)v197 + v96) & ~v95;
  uint64_t v98 = ((unint64_t)v194 + v96) & ~v95;
  long long v99 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
  int v100 = v99(v97, 1, v88);
  int v101 = v99(v98, 1, v88);
  if (v100)
  {
    if (!v101)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v97, v98, v88);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v97, 0, 1, v88);
      goto LABEL_73;
    }
    int v102 = *(_DWORD *)(v89 + 84);
    size_t v103 = *(void *)(v89 + 64);
  }
  else
  {
    if (!v101)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 40))(v97, v98, v88);
      goto LABEL_73;
    }
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v97, v88);
    int v102 = *(_DWORD *)(v89 + 84);
    size_t v103 = *(void *)(v89 + 64);
  }
  if (v102) {
    size_t v104 = v103;
  }
  else {
    size_t v104 = v103 + 1;
  }
  memcpy((void *)v97, (const void *)v98, v104);
LABEL_73:
  if (*(_DWORD *)(v89 + 84)) {
    uint64_t v105 = *(void *)(v89 + 64);
  }
  else {
    uint64_t v105 = *(void *)(v89 + 64) + 1;
  }
  uint64_t v190 = v97;
  uint64_t v195 = v98;
  unint64_t v106 = (void *)(((v98 | 7) + v105) & 0xFFFFFFFFFFFFFFF8);
  id v107 = (void *)(((v97 | 7) + v105) & 0xFFFFFFFFFFFFFFF8);
  *id v107 = *v106;
  unint64_t v108 = ((unint64_t)v107 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v109 = ((unint64_t)v106 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v108 = *(void *)v109;
  *(unsigned char *)(v108 + 8) = *(unsigned char *)(v109 + 8);
  unint64_t v110 = (void *)((v199 + 9 + v108) & ~v199);
  uint64_t v111 = (v199 + 9 + v109) & ~v199;
  uint64_t v112 = *(unsigned int *)(v91 + 84);
  uint64_t v113 = *(unsigned int *)(v93 + 84);
  if (v112 <= v113) {
    unsigned int v114 = *(_DWORD *)(v93 + 84);
  }
  else {
    unsigned int v114 = *(_DWORD *)(v91 + 84);
  }
  if (v114 <= 0x7FFFFFFE) {
    int v115 = 2147483646;
  }
  else {
    int v115 = v114;
  }
  uint64_t v116 = *(void *)(v91 + 64) + 7;
  uint64_t v117 = ~v94;
  unint64_t v188 = ((((*(void *)(v93 + 64) + 7 + ((v94 + 8 + (v116 & 0xFFFFFFFFFFFFFFF8)) & ~v94)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v193 = v105;
  uint64_t v182 = *(void *)(v93 + 64) + 7;
  uint64_t v184 = v93;
  uint64_t v178 = v94 + 8;
  uint64_t v180 = ~v94;
  if (v112 == v115)
  {
    uint64_t v118 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v91 + 48);
    int v119 = v118(v110, v112, v196);
    uint64_t v120 = v111;
    int v121 = v118((void *)v111, v112, v196);
    if (v119) {
      goto LABEL_84;
    }
    goto LABEL_95;
  }
  uint64_t v120 = (v199 + 9 + v109) & ~v199;
  unsigned int v126 = (uint64_t *)(((unint64_t)v110 + v116) & 0xFFFFFFFFFFFFFFF8);
  if (v114 <= 0x7FFFFFFE)
  {
    uint64_t v128 = *v126;
    if ((unint64_t)*v126 >= 0xFFFFFFFF) {
      LODWORD(v128) = -1;
    }
    unsigned int v129 = v128 + 1;
    uint64_t v125 = (char *)((v199 + 9 + v109) & ~v199);
    uint64_t v127 = (uint64_t *)((v116 + v111) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v130 = *v127;
    if ((unint64_t)*v127 >= 0xFFFFFFFF) {
      LODWORD(v130) = -1;
    }
    unsigned int v131 = v130 + 1;
    int v122 = v197;
    uint64_t v124 = v190;
    if (v129 >= 2)
    {
      size_t v123 = v188;
      if (v131 < 2) {
        goto LABEL_100;
      }
      goto LABEL_98;
    }
    size_t v123 = v188;
    uint64_t v132 = v184;
    if (v131 >= 2)
    {
LABEL_97:
      (*(void (**)(void *, uint64_t))(v91 + 8))(v110, v196);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v132 + 8))(((unint64_t)v126 + v178) & v180, v186);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_98;
    }
LABEL_102:
    (*(void (**)(void *, char *, uint64_t))(v91 + 40))(v110, v125, v196);
    *unsigned int v126 = *v127;
    swift_bridgeObjectRelease();
    unint64_t v137 = ((unint64_t)v126 + v178) & v180;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v132 + 40))(v137, ((unint64_t)v127 + v178) & v180, v186);
    size_t v138 = (void *)((v182 + v137) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v139 = (v182 + (((unint64_t)v127 + v178) & v180)) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v140 = *(void *)v139;
    v139 += 15;
    *size_t v138 = v140;
    swift_bridgeObjectRelease();
    int v141 = (void *)(((unint64_t)v138 + 15) & 0xFFFFFFFFFFFFFFF8);
    *int v141 = *(void *)(v139 & 0xFFFFFFFFFFFFFFF8);
    v141[1] = *(void *)((v139 & 0xFFFFFFFFFFFFFFF8) + 8);
    swift_bridgeObjectRelease();
    goto LABEL_103;
  }
  unsigned int v133 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v184 + 48);
  int v176 = v133(((unint64_t)v126 + v94 + 8) & v117, v113, v186);
  int v121 = v133((v94 + 8 + ((v116 + v111) & 0xFFFFFFFFFFFFFFF8)) & v117, v113, v186);
  if (!v176)
  {
LABEL_95:
    unsigned int v126 = (uint64_t *)(((unint64_t)v110 + v116) & 0xFFFFFFFFFFFFFFF8);
    int v122 = v197;
    uint64_t v124 = v190;
    if (v121)
    {
      size_t v123 = v188;
      uint64_t v125 = (char *)v120;
      uint64_t v132 = v184;
      goto LABEL_97;
    }
    uint64_t v125 = (char *)v120;
    uint64_t v127 = (uint64_t *)((v116 + v120) & 0xFFFFFFFFFFFFFFF8);
    size_t v123 = v188;
    uint64_t v132 = v184;
    goto LABEL_102;
  }
LABEL_84:
  int v122 = v197;
  size_t v123 = v188;
  uint64_t v124 = v190;
  uint64_t v125 = (char *)v120;
  if (!v121)
  {
    unsigned int v126 = (uint64_t *)(((unint64_t)v110 + v116) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v127 = (uint64_t *)((v116 + v120) & 0xFFFFFFFFFFFFFFF8);
LABEL_100:
    (*(void (**)(void *, char *, uint64_t))(v91 + 32))(v110, v125, v196);
    *unsigned int v126 = *v127;
    unint64_t v134 = ((unint64_t)v126 + v178) & v180;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v184 + 32))(v134, ((unint64_t)v127 + v178) & v180, v186);
    uint64_t v135 = (void *)((v182 + v134) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v136 = (void *)((v182 + (((unint64_t)v127 + v178) & v180)) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v135 = *v136;
    *(_OWORD *)(((unint64_t)v135 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v136 + 15) & 0xFFFFFFFFFFFFFFF8);
    goto LABEL_103;
  }
LABEL_98:
  memcpy(v110, v125, v123);
LABEL_103:
  uint64_t v142 = (unsigned char *)((unint64_t)&v125[v123] | 1);
  uint64_t v143 = (unsigned char *)((unint64_t)&v125[v123] | 2);
  uint64_t v144 = (uint64_t)&v125[v123 + 10];
  uint64_t v145 = &v125[v123];
  *((unsigned char *)v110 + v123) = *v145;
  *(unsigned char *)(((unint64_t)v110 + v123) | 1) = *v142;
  *(unsigned char *)(((unint64_t)v110 + v123) | 2) = *v143;
  unint64_t v146 = ((unint64_t)v110 + v123 + 10) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v142) = *(unsigned char *)((v144 & 0xFFFFFFFFFFFFFFF8) + 16);
  uint64_t v147 = *(void **)v146;
  unsigned int v148 = *(void **)(v146 + 8);
  *(_OWORD *)unint64_t v146 = *(_OWORD *)(v144 & 0xFFFFFFFFFFFFFFF8);
  char v149 = *(unsigned char *)(v146 + 16);
  *(unsigned char *)(v146 + 16) = (_BYTE)v142;
  sub_24D3E380C(v147, v148, v149);
  unint64_t v150 = ((unint64_t)v110 + v123 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v151 = (unint64_t)(v145 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v152 = *(void *)(v150 + 16);
  if (!(4 * ((v152 >> 60) & 3)) || (((v152 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v152 >> 60) & 3))) == 0xF)
  {
    int v156 = (uint64_t *)(v150 + 8);
    uint64_t v157 = *(void *)(v151 + 16) >> 60;
    if (4 * (v157 & 3) && ((v157 >> 2) & 0xFFFFFFF3 | (4 * (v157 & 3))) != 0xF)
    {
      if (v152 >> 60 != 15) {
        sub_24D400DCC(*v156, v152);
      }
      goto LABEL_105;
    }
    unint64_t v158 = v122;
    int v159 = (void *)(v151 + 8);
    *(void *)unint64_t v150 = *(void *)v151;
    if (v152 >> 60 != 15)
    {
      unint64_t v160 = *(void *)(v151 + 16);
      if (v160 >> 60 != 15)
      {
        uint64_t v161 = *(void *)(v150 + 8);
        *(void *)(v150 + 8) = *v159;
        *(void *)(v150 + 16) = v160;
        sub_24D400DCC(v161, v152);
        goto LABEL_115;
      }
      sub_24D4B12A0(v150 + 8);
    }
    *(_OWORD *)int v156 = *(_OWORD *)v159;
LABEL_115:
    long long v162 = *(_OWORD *)(v151 + 24);
    *(unsigned char *)(v150 + 40) = *(unsigned char *)(v151 + 40);
    *(_OWORD *)(v150 + 24) = v162;
    *(void *)(v150 + 48) = *(void *)(v151 + 48);
    int v122 = v158;
    goto LABEL_116;
  }
LABEL_105:
  long long v153 = *(_OWORD *)v151;
  long long v154 = *(_OWORD *)(v151 + 16);
  long long v155 = *(_OWORD *)(v151 + 32);
  *(void *)(v150 + 48) = *(void *)(v151 + 48);
  *(_OWORD *)(v150 + 16) = v154;
  *(_OWORD *)(v150 + 32) = v155;
  *(_OWORD *)unint64_t v150 = v153;
LABEL_116:
  size_t v163 = (void **)((v150 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v164 = (void **)((v151 + 63) & 0xFFFFFFFFFFFFFFF8);
  size_t v165 = *v163;
  char *v163 = *v164;

  *(void *)(((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v164 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v166 = ((((((((v199 + 9 + ((((v193 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v199) + v123 + 34) & 0xFFFFFFFFFFFFFFF8)
           + 63) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  unint64_t v167 = v166 + v124;
  unint64_t v168 = v166 + v195;
  *(unsigned char *)unint64_t v167 = *(unsigned char *)v168;
  unint64_t v169 = v167 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v170 = v168 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v167 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v168 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  uint64_t v171 = (void *)((v169 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v172 = (void *)((v170 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v171 = *v172;
  v171[1] = v172[1];
  unint64_t v173 = ((unint64_t)v171 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v174 = ((unint64_t)v172 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v173 = *(void *)v174;
  *(unsigned char *)(v173 + 8) = *(unsigned char *)(v174 + 8);
  *(void *)(((unint64_t)v171 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v172 + 39) & 0xFFFFFFFFFFFFFFF8);
  return v122;
}

void sub_24DB8368C(_DWORD *a1, unsigned int a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v80 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v75 = v80;
  uint64_t v76 = AssociatedTypeWitness;
  unsigned int v87 = *(_DWORD *)(v80 + 84);
  if (v87) {
    unsigned int v4 = v87 - 1;
  }
  else {
    unsigned int v4 = 0;
  }
  uint64_t v70 = swift_getAssociatedTypeWitness();
  uint64_t v83 = *(void *)(v70 - 8);
  unsigned int v5 = *(_DWORD *)(v83 + 84);
  uint64_t v67 = swift_getAssociatedTypeWitness();
  uint64_t v82 = *(void *)(v67 - 8);
  unsigned int v6 = *(_DWORD *)(v82 + 84);
  unsigned int v71 = v5;
  unsigned int v66 = v6;
  if (v5 > v6) {
    unsigned int v6 = v5;
  }
  unsigned int v69 = v6;
  if (v6 <= 0x7FFFFFFE) {
    unsigned int v6 = 2147483646;
  }
  unsigned int v73 = v6;
  unsigned int v7 = v6 - 1;
  unsigned int v74 = v7;
  if (v4 > v7) {
    unsigned int v7 = v4;
  }
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  unsigned int v77 = v4;
  unsigned int v78 = v7;
  uint64_t v72 = swift_getAssociatedTypeWitness();
  uint64_t v84 = *(void *)(v72 - 8);
  unsigned int v86 = *(_DWORD *)(v84 + 84);
  if (v86) {
    unsigned int v8 = v86 - 1;
  }
  else {
    unsigned int v8 = 0;
  }
  uint64_t v65 = swift_getAssociatedTypeWitness();
  uint64_t v79 = *(void *)(v65 - 8);
  unsigned int v9 = *(_DWORD *)(v79 + 84);
  int v10 = 0;
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v12 = v11;
  uint64_t v13 = v80;
  unsigned int v68 = v9;
  if (v9 <= *(_DWORD *)(v11 + 84)) {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  else {
    unsigned int v14 = v9;
  }
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  else {
    unsigned int v15 = v14;
  }
  unsigned int v81 = v8;
  if (v8 <= v15 - 1) {
    unsigned int v16 = v15 - 1;
  }
  else {
    unsigned int v16 = v8;
  }
  if (v16 <= 0x7FFFFFFE) {
    unsigned int v16 = 2147483646;
  }
  uint64_t v17 = *(unsigned __int8 *)(v82 + 80);
  uint64_t v18 = *(void *)(v83 + 64);
  uint64_t v19 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v20 = *(void *)(v79 + 64);
  uint64_t v21 = *(void *)(v11 + 64);
  if (v16 <= v78) {
    unsigned int v22 = v78;
  }
  else {
    unsigned int v22 = v16;
  }
  if (v22 <= 0x7FFFFFFF) {
    unsigned int v23 = 0x7FFFFFFF;
  }
  else {
    unsigned int v23 = v22;
  }
  if (v87) {
    uint64_t v24 = *(void *)(v13 + 64);
  }
  else {
    uint64_t v24 = *(void *)(v13 + 64) + 1;
  }
  uint64_t v25 = *(_DWORD *)(v83 + 80) & 0xF8 | v17 | 7;
  uint64_t v26 = v18 + 7;
  size_t v27 = ((((*(void *)(v82 + 64) + ((v17 + 8 + ((v18 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v28 = *(_DWORD *)(v79 + 80) & 0xF8 | v19 | 7;
  uint64_t v29 = v28 | *(_DWORD *)(v84 + 80) & 0xF8;
  unint64_t v30 = ((((((((v25 + ((((v24 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v25) + v27 + 34) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v29
      + 8;
  if (v86) {
    uint64_t v31 = *(void *)(v84 + 64);
  }
  else {
    uint64_t v31 = *(void *)(v84 + 64) + 1;
  }
  uint64_t v32 = v20 + 7;
  uint64_t v33 = v19 + 8;
  unint64_t v34 = (((v21 + ((v19 + 8 + ((v20 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v19) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = v31 + 7;
  unint64_t v36 = (((v31 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v37 = v28 + 9;
  unint64_t v38 = ((((((((v28 + 9 + v36) & ~v28) + v34 + 16 + 34) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v39 = ((((v38 + (v30 & ~v29) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v23 < a3)
  {
    if (((((v38 + (v30 & ~v29) + 23) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v40 = a3 - v23 + 1;
    }
    else {
      unsigned int v40 = 2;
    }
    if (v40 >= 0x10000) {
      int v41 = 4;
    }
    else {
      int v41 = 2;
    }
    if (v40 < 0x100) {
      int v41 = 1;
    }
    if (v40 >= 2) {
      int v10 = v41;
    }
    else {
      int v10 = 0;
    }
  }
  int v42 = v10;
  if (a2 > v23)
  {
    if (((((v38 + (v30 & ~v29) + 23) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v43 = a2 - v23;
    }
    else {
      int v43 = 1;
    }
    if (((((v38 + (v30 & ~v29) + 23) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v44 = ~v23 + a2;
      bzero(a1, ((((v38 + (v30 & ~v29) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 8);
      *a1 = v44;
    }
    switch(v10)
    {
      case 1:
        *((unsigned char *)a1 + v39) = v43;
        break;
      case 2:
        *(_WORD *)((char *)a1 + v39) = v43;
        break;
      case 3:
LABEL_115:
        __break(1u);
        JUMPOUT(0x24DB83F5CLL);
      case 4:
        *(_DWORD *)((char *)a1 + v39) = v43;
        break;
      default:
        return;
    }
  }
  else
  {
    uint64_t v46 = ~v28;
    uint64_t v47 = ~v19;
    switch(v42)
    {
      case 1:
        *((unsigned char *)a1 + v39) = 0;
        unsigned int v48 = a2;
        if (!a2) {
          return;
        }
        goto LABEL_66;
      case 2:
        *(_WORD *)((char *)a1 + v39) = 0;
        unsigned int v48 = a2;
        if (!a2) {
          return;
        }
        goto LABEL_66;
      case 3:
        goto LABEL_115;
      case 4:
        *(_DWORD *)((char *)a1 + v39) = 0;
        goto LABEL_65;
      default:
LABEL_65:
        unsigned int v48 = a2;
        if (!a2) {
          return;
        }
LABEL_66:
        if (v78 == v23)
        {
          if (v77 == v78)
          {
            uint64_t v49 = v48 + 1;
            uint64_t v50 = v76;
            uint64_t v51 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56);
            unint64_t v52 = (unint64_t)a1;
            uint64_t v53 = v87;
LABEL_72:
            v51(v52, v49, v53, v50);
            return;
          }
          uint64_t v45 = ~v25;
          unint64_t v54 = (_DWORD *)(((((((unint64_t)a1 + v24 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                          + v25
                          + 9) & ~v25);
          if (v74 == v78)
          {
            uint64_t v55 = v48 + 1;
            if (v55 <= v73)
            {
              if (v48 == -1) {
                return;
              }
              uint64_t v53 = v71;
              if (v71 == v73)
              {
                uint64_t v51 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56);
                unint64_t v52 = ((((((unint64_t)a1 + v24 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + v25
                     + 9) & v45;
                uint64_t v49 = v48 + 1;
                uint64_t v50 = v70;
              }
              else
              {
                uint64_t v62 = (void *)(((unint64_t)v54 + v26) & 0xFFFFFFFFFFFFFFF8);
                if (v69 <= 0x7FFFFFFE)
                {
                  if (v55 > 0x7FFFFFFE)
                  {
                    *uint64_t v62 = 0;
                    *(_DWORD *)uint64_t v62 = v48 - 2147483646;
                  }
                  else
                  {
                    *uint64_t v62 = v55;
                  }
                  return;
                }
                unint64_t v52 = ((unint64_t)v62 + v17 + 8) & ~v17;
                uint64_t v51 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56);
                uint64_t v49 = v48 + 1;
                uint64_t v53 = v66;
                uint64_t v50 = v67;
              }
              goto LABEL_72;
            }
            if (!v27) {
              return;
            }
            unsigned int v56 = v48 - v73;
            unint64_t v57 = (void *)(((((((unint64_t)a1 + v24 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                          + v25
                          + 9) & v45);
LABEL_88:
            bzero(v57, v27);
            *unint64_t v54 = v56;
            return;
          }
          uint64_t v59 = (uint64_t)v54 + v27 + 10;
          goto LABEL_95;
        }
        unint64_t v52 = ((unint64_t)a1 + v30) & ~v29;
        if (v16 == v23)
        {
          if (v81 == v16)
          {
            uint64_t v49 = v48 + 1;
            uint64_t v51 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56);
            uint64_t v53 = v86;
            uint64_t v50 = v72;
            goto LABEL_72;
          }
          unint64_t v54 = (_DWORD *)((v37 + ((((v35 + v52) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v46);
          if (v15 - 1 != v16)
          {
            uint64_t v59 = (uint64_t)v54 + v34 + 26;
LABEL_95:
            unint64_t v60 = (void *)(((v59 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
            if (v48 <= 0x7FFFFFFE)
            {
              void *v60 = v48;
              return;
            }
            int v61 = -2147483647;
LABEL_98:
            void *v60 = 0;
            *(_DWORD *)unint64_t v60 = v48 + v61;
            return;
          }
          uint64_t v49 = v48 + 1;
          if (v49 > v15)
          {
            if (v34 == -16) {
              return;
            }
            unsigned int v56 = v48 - v15;
            unint64_t v57 = (void *)((v37 + ((((v35 + v52) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v46);
            size_t v27 = v34 + 16;
            goto LABEL_88;
          }
          if (v48 == -1) {
            return;
          }
          if (v68 == v15)
          {
            uint64_t v51 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56);
            unint64_t v52 = (v37 + ((((v35 + v52) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v46;
            uint64_t v53 = v68;
            uint64_t v50 = v65;
            goto LABEL_72;
          }
          unint64_t v60 = (void *)(((unint64_t)v54 + v32) & 0xFFFFFFFFFFFFFFF8);
          if (v14 <= 0x7FFFFFFE)
          {
            if (v49 <= 0x7FFFFFFE)
            {
              void *v60 = v49;
              return;
            }
            int v61 = -2147483646;
            goto LABEL_98;
          }
          unint64_t v63 = ((unint64_t)v60 + v33) & v47;
          unint64_t v64 = *(void (**)(unint64_t))(v12 + 56);
          v64(v63);
        }
        else
        {
          if ((v48 & 0x80000000) != 0) {
            uint64_t v58 = v48 ^ 0x80000000;
          }
          else {
            uint64_t v58 = v48 - 1;
          }
          *(void *)(((v38 + v52) & 0xFFFFFFFFFFFFFFF8) + 8) = v58;
        }
        break;
    }
  }
}

uint64_t sub_24DB83F84()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_24DCCA3F8();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FileItemVersion();
    uint64_t result = sub_24DCCA3F8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_24DB8417C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v2 + 84)) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  else {
    uint64_t v3 = *(void *)(v2 + 64) + 1;
  }
  uint64_t v77 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v77 - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  size_t v7 = v3;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(_DWORD *)(v8 + 80);
  uint64_t v11 = v5 & 0xF8 | v10 | 7;
  uint64_t v76 = v4;
  uint64_t v12 = *(unsigned int *)(v4 + 84);
  if (v12 <= v9) {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v4 + 84);
  }
  if (v13 <= 0x7FFFFFFE) {
    int v14 = 2147483646;
  }
  else {
    int v14 = v13;
  }
  uint64_t v15 = *(void *)(v4 + 64) + 7;
  uint64_t v16 = *(void *)(*(void *)(v6 - 8) + 64) + 7;
  uint64_t v17 = *(_DWORD *)(v2 + 80) & 0xF8 | v11;
  BOOL v19 = v17 != 7
     || ((*(_DWORD *)(v8 + 80) | v5 | *(_DWORD *)(v2 + 80)) & 0x100000) != 0
     || ((((((((v11 + ((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v11)
            + ((((v16 + ((v10 + 8 + (v15 & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16
            + 34) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8 > 0x18;
  if (v19)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    unsigned int v22 = (uint64_t *)(v20 + ((v17 + 16) & ~v17));
    swift_retain();
    return v22;
  }
  int v73 = v14;
  size_t v21 = v7;
  uint64_t v74 = *(void *)(v4 + 64) + 7;
  unint64_t v75 = ((((v16 + ((v10 + 8 + (v15 & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v69 = *(void *)(*(void *)(v6 - 8) + 64) + 7;
  uint64_t v70 = v10 + 8;
  uint64_t v71 = *(void *)(v6 - 8);
  uint64_t v72 = v6;
  unsigned int v22 = a1;
  uint64_t v23 = ~v11;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v2 + 48))(a2, 1, AssociatedTypeWitness))
  {
    memcpy(a1, a2, v21);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v2 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v2 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  uint64_t v25 = ~v10;
  uint64_t v26 = (void *)(((unint64_t)a1 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
  size_t v27 = (void *)(((unint64_t)a2 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v26 = *v27;
  unint64_t v28 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = ((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  unint64_t v30 = (char *)((v28 + v11 + 9) & v23);
  uint64_t v31 = (const void *)((v29 + v11 + 9) & v23);
  if (v12 == v73)
  {
    uint64_t v32 = v25;
    uint64_t v34 = v74;
    size_t v33 = v75;
    if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v76 + 48))(v31, v12, v77)) {
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t v34 = v74;
    uint64_t v35 = (void *)(((unint64_t)v31 + v74) & 0xFFFFFFFFFFFFFFF8);
    BOOL v19 = v13 > 0x7FFFFFFE;
    size_t v33 = v75;
    if (v19)
    {
      uint64_t v32 = v25;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v71 + 48))(((unint64_t)v35 + v70) & v25, v9, v72))
      {
LABEL_32:
        uint64_t v35 = (void *)(((unint64_t)v31 + v34) & 0xFFFFFFFFFFFFFFF8);
LABEL_33:
        (*(void (**)(char *, const void *, uint64_t))(v76 + 16))(v30, v31, v77);
        uint64_t v37 = (void *)((unint64_t)&v30[v34] & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v37 = *v35;
        unint64_t v38 = ((unint64_t)v37 + v70) & v32;
        unint64_t v39 = ((unint64_t)v35 + v70) & v32;
        unsigned int v40 = *(void (**)(unint64_t, unint64_t, uint64_t))(v71 + 16);
        swift_bridgeObjectRetain();
        v40(v38, v39, v72);
        int v41 = (void *)((v69 + v38) & 0xFFFFFFFFFFFFFFF8);
        int v42 = (void *)((v69 + v39) & 0xFFFFFFFFFFFFFFF8);
        void *v41 = *v42;
        int v43 = (void *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
        int v44 = (void *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
        *int v43 = *v44;
        v43[1] = v44[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t v32 = v25;
      uint64_t v36 = *v35;
      if (*v35 >= 0xFFFFFFFFuLL) {
        LODWORD(v36) = -1;
      }
      if ((v36 + 1) < 2) {
        goto LABEL_33;
      }
    }
  }
  memcpy(v30, v31, v33);
LABEL_34:
  unint64_t v45 = (unint64_t)&v30[v33];
  uint64_t v46 = (uint64_t)v31 + v33 + 10;
  uint64_t v47 = (uint64_t)v31 + v33 + 34;
  *(unsigned char *)unint64_t v45 = *((unsigned char *)v31 + v33);
  unint64_t v48 = v45 + 34;
  *(unsigned char *)(v45 | 1) = *(unsigned char *)(((unint64_t)v31 + v33) | 1);
  *(unsigned char *)(v45 | 2) = *(unsigned char *)(((unint64_t)v31 + v33) | 2);
  unint64_t v49 = (v45 + 10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v50 = *(void **)(v46 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v51 = *(void **)((v46 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v52 = *(unsigned char *)((v46 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v50, v51, v52);
  *(void *)unint64_t v49 = v50;
  *(void *)(v49 + 8) = v51;
  *(unsigned char *)(v49 + 16) = v52;
  unint64_t v53 = v48 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = v47 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = *(void *)((v47 & 0xFFFFFFFFFFFFFFF8) + 16) >> 60;
  if (4 * (v55 & 3)) {
    BOOL v56 = ((v55 >> 2) & 0xFFFFFFF3 | (4 * (v55 & 3))) == 15;
  }
  else {
    BOOL v56 = 1;
  }
  if (v56)
  {
    unint64_t v57 = (uint64_t *)(v54 + 8);
    *(void *)unint64_t v53 = *(void *)v54;
    unint64_t v58 = *(void *)(v54 + 16);
    if (v58 >> 60 == 15)
    {
      *(_OWORD *)(v53 + 8) = *(_OWORD *)v57;
    }
    else
    {
      uint64_t v62 = *v57;
      sub_24D3F9C18(*v57, *(void *)(v54 + 16));
      *(void *)(v53 + 8) = v62;
      *(void *)(v53 + 16) = v58;
    }
    long long v63 = *(_OWORD *)(v54 + 24);
    *(unsigned char *)(v53 + 40) = *(unsigned char *)(v54 + 40);
    *(_OWORD *)(v53 + 24) = v63;
    *(void *)(v53 + 48) = *(void *)(v54 + 48);
  }
  else
  {
    long long v59 = *(_OWORD *)v54;
    long long v60 = *(_OWORD *)(v54 + 16);
    long long v61 = *(_OWORD *)(v54 + 32);
    *(void *)(v53 + 48) = *(void *)(v54 + 48);
    *(_OWORD *)(v53 + 16) = v60;
    *(_OWORD *)(v53 + 32) = v61;
    *(_OWORD *)unint64_t v53 = v59;
  }
  unint64_t v64 = (void *)((v53 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v65 = (void **)((v54 + 63) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v66 = *v65;
  *unint64_t v64 = *v65;
  *(void *)(((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v65 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v67 = v66;
  return v22;
}

void *sub_24DB84770(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_12;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  if (v9) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = v10 + 1;
  }
  memcpy(a1, a2, v11);
LABEL_12:
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v12 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v12 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v13 = v12 + 7;
  unint64_t v108 = a1;
  int v14 = (void *)(((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)(((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8);
  *int v14 = *v15;
  unint64_t v16 = ((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = ((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = v19;
  int v21 = *(_DWORD *)(v19 + 80) & 0xF8;
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = v23;
  uint64_t v25 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v26 = v21 | v25 | 7;
  uint64_t v27 = (v26 + 9 + v16) & ~v26;
  unint64_t v110 = (const void *)((v26 + 9 + v17) & ~v26);
  uint64_t v28 = *(unsigned int *)(v19 + 84);
  uint64_t v29 = *(unsigned int *)(v23 + 84);
  if (v28 <= v29) {
    unsigned int v30 = *(_DWORD *)(v23 + 84);
  }
  else {
    unsigned int v30 = *(_DWORD *)(v19 + 84);
  }
  if (v30 <= 0x7FFFFFFE) {
    int v31 = 2147483646;
  }
  else {
    int v31 = v30;
  }
  uint64_t v32 = *(void *)(v19 + 64) + 7;
  uint64_t v33 = v25 + 8;
  size_t v109 = ((((*(void *)(v23 + 64) + 7 + ((v25 + 8 + (v32 & 0xFFFFFFFFFFFFFFF8)) & ~v25)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v106 = *(void *)(v23 + 64) + 7;
  uint64_t v107 = v22;
  uint64_t v104 = v18;
  uint64_t v105 = ~v25;
  if (v28 == v31)
  {
    uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    int v35 = v34(v27, v28, v18);
    int v36 = v34((uint64_t)v110, v28, v18);
    uint64_t v37 = (char *)v27;
    if (v35) {
      goto LABEL_23;
    }
    goto LABEL_34;
  }
  unint64_t v39 = (uint64_t *)((v32 + v27) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v37 = (char *)v27;
  if (v30 <= 0x7FFFFFFE)
  {
    uint64_t v41 = *v39;
    if ((unint64_t)*v39 >= 0xFFFFFFFF) {
      LODWORD(v41) = -1;
    }
    unsigned int v42 = v41 + 1;
    unsigned int v40 = (uint64_t *)(((unint64_t)v110 + v32) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v43 = *v40;
    if ((unint64_t)*v40 >= 0xFFFFFFFF) {
      LODWORD(v43) = -1;
    }
    unsigned int v44 = v43 + 1;
    unint64_t v38 = v108;
    if (v42 >= 2)
    {
      if (v44 < 2) {
        goto LABEL_39;
      }
LABEL_37:
      size_t v50 = v109;
      memcpy(v37, v110, v109);
      goto LABEL_43;
    }
    uint64_t v45 = v104;
    if (v44 >= 2)
    {
LABEL_36:
      (*(void (**)(char *, uint64_t))(v20 + 8))(v37, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v24 + 8))(((unint64_t)v39 + v33) & v105, v107);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
LABEL_41:
    (*(void (**)(char *, const void *, uint64_t))(v20 + 24))(v37, v110, v45);
    *unint64_t v39 = *v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v24 + 24))(((unint64_t)v39 + v33) & v105, ((unint64_t)v40 + v33) & v105, v107);
    unint64_t v58 = (void *)((v106 + (((unint64_t)v39 + v33) & v105)) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v59 = (v106 + (((unint64_t)v40 + v33) & v105)) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v60 = *(void *)v59;
    v59 += 15;
    *unint64_t v58 = v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v61 = (void *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
    *long long v61 = *(void *)(v59 & 0xFFFFFFFFFFFFFFF8);
    v61[1] = *(void *)((v59 & 0xFFFFFFFFFFFFFFF8) + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  unint64_t v46 = (unint64_t)v39 + v33;
  uint64_t v47 = ~v25;
  unint64_t v48 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v49 = v22;
  int v103 = v48(v46 & ~v25, v29, v22);
  int v36 = v48((v33 + (((unint64_t)v110 + v32) & 0xFFFFFFFFFFFFFFF8)) & v47, v29, v49);
  if (!v103)
  {
LABEL_34:
    unint64_t v39 = (uint64_t *)((unint64_t)&v37[v32] & 0xFFFFFFFFFFFFFFF8);
    unint64_t v38 = v108;
    if (v36)
    {
      uint64_t v45 = v104;
      goto LABEL_36;
    }
    unsigned int v40 = (uint64_t *)(((unint64_t)v110 + v32) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v45 = v104;
    goto LABEL_41;
  }
LABEL_23:
  unint64_t v38 = v108;
  if (v36) {
    goto LABEL_37;
  }
  unint64_t v39 = (uint64_t *)((unint64_t)&v37[v32] & 0xFFFFFFFFFFFFFFF8);
  unsigned int v40 = (uint64_t *)(((unint64_t)v110 + v32) & 0xFFFFFFFFFFFFFFF8);
LABEL_39:
  (*(void (**)(char *, const void *, uint64_t))(v20 + 16))(v37, v110, v104);
  *unint64_t v39 = *v40;
  unint64_t v51 = ((unint64_t)v39 + v33) & v105;
  unint64_t v52 = ((unint64_t)v40 + v33) & v105;
  unint64_t v53 = *(void (**)(unint64_t, unint64_t, uint64_t))(v24 + 16);
  swift_bridgeObjectRetain();
  v53(v51, v52, v107);
  unint64_t v54 = (void *)((v106 + v51) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v55 = (void *)((v106 + v52) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v54 = *v55;
  BOOL v56 = (void *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v57 = (void *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
  *BOOL v56 = *v57;
  v56[1] = v57[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_42:
  size_t v50 = v109;
LABEL_43:
  uint64_t v62 = (unsigned char *)(((unint64_t)v110 + v50) | 1);
  long long v63 = (unsigned char *)(((unint64_t)v110 + v50) | 2);
  uint64_t v64 = (uint64_t)v110 + v50 + 10;
  uint64_t v66 = (uint64_t)v110 + v50 + 34;
  char v65 = *((unsigned char *)v110 + v50);
  id v67 = (unsigned char *)((unint64_t)&v37[v50] | 1);
  unsigned int v68 = (unsigned char *)((unint64_t)&v37[v50] | 2);
  uint64_t v69 = (uint64_t)&v37[v50 + 10];
  uint64_t v70 = &v37[v50];
  char *v70 = v65;
  *id v67 = *v62;
  *unsigned int v68 = *v63;
  unint64_t v71 = v69 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v72 = *(void **)(v64 & 0xFFFFFFFFFFFFFFF8);
  int v73 = *(void **)((v64 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v74 = *(unsigned char *)((v64 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v72, v73, v74);
  unint64_t v75 = *(void **)v71;
  uint64_t v76 = *(void **)(v71 + 8);
  *(void *)unint64_t v71 = v72;
  *(void *)(v71 + 8) = v73;
  char v77 = *(unsigned char *)(v71 + 16);
  *(unsigned char *)(v71 + 16) = v74;
  sub_24D3E380C(v75, v76, v77);
  unint64_t v78 = (unint64_t)(v70 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v79 = v66 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v80 = (uint64_t *)(v78 + 8);
  unint64_t v81 = *(void *)(v78 + 16);
  uint64_t v82 = (uint64_t *)((v66 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v83 = *(void *)(v79 + 16) >> 60;
  BOOL v87 = ((4 * v83) & 0xC) == 0;
  int v84 = (4 * v83) & 0xC | (v83 >> 2);
  int v85 = v87;
  if (v84 == 15) {
    int v86 = 1;
  }
  else {
    int v86 = v85;
  }
  if (4 * ((v81 >> 60) & 3)) {
    BOOL v87 = (((v81 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v81 >> 60) & 3))) == 15;
  }
  else {
    BOOL v87 = 1;
  }
  if (v87)
  {
    if (v86)
    {
      *(void *)unint64_t v78 = *(void *)v79;
      unint64_t v88 = *(void *)(v79 + 16);
      if (v81 >> 60 != 15)
      {
        if (v88 >> 60 != 15)
        {
          uint64_t v93 = *v82;
          sub_24D3F9C18(*v82, *(void *)(v79 + 16));
          uint64_t v94 = *(void *)(v78 + 8);
          unint64_t v95 = *(void *)(v78 + 16);
          *(void *)(v78 + 8) = v93;
          *(void *)(v78 + 16) = v88;
          sub_24D400DCC(v94, v95);
          goto LABEL_67;
        }
        sub_24D4B12A0(v78 + 8);
        goto LABEL_61;
      }
LABEL_60:
      if (v88 >> 60 != 15)
      {
        uint64_t v92 = *v82;
        sub_24D3F9C18(*v82, v88);
        *(void *)(v78 + 8) = v92;
        *(void *)(v78 + 16) = v88;
        goto LABEL_67;
      }
LABEL_61:
      *(_OWORD *)uint64_t v80 = *(_OWORD *)v82;
LABEL_67:
      long long v96 = *(_OWORD *)(v79 + 24);
      *(unsigned char *)(v78 + 40) = *(unsigned char *)(v79 + 40);
      *(_OWORD *)(v78 + 24) = v96;
      *(void *)(v78 + 48) = *(void *)(v79 + 48);
      goto LABEL_68;
    }
    if (v81 >> 60 != 15) {
      sub_24D400DCC(*v80, v81);
    }
  }
  else if (v86)
  {
    *(void *)unint64_t v78 = *(void *)v79;
    unint64_t v88 = *(void *)(v79 + 16);
    goto LABEL_60;
  }
  long long v89 = *(_OWORD *)v79;
  long long v90 = *(_OWORD *)(v79 + 16);
  long long v91 = *(_OWORD *)(v79 + 32);
  *(void *)(v78 + 48) = *(void *)(v79 + 48);
  *(_OWORD *)(v78 + 16) = v90;
  *(_OWORD *)(v78 + 32) = v91;
  *(_OWORD *)unint64_t v78 = v89;
LABEL_68:
  uint64_t v97 = (void **)((v78 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v98 = (void **)((v79 + 63) & 0xFFFFFFFFFFFFFFF8);
  long long v99 = *v98;
  int v100 = *v97;
  *uint64_t v97 = *v98;
  id v101 = v99;

  *(void *)(((unint64_t)v97 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v98 + 15) & 0xFFFFFFFFFFFFFFF8);
  return v38;
}

void *sub_24DB84F98(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    int v6 = *(_DWORD *)(v5 + 84);
    size_t v7 = *(void *)(v5 + 64);
    if (v6) {
      size_t v8 = v7;
    }
    else {
      size_t v8 = v7 + 1;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    size_t v10 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v9 = v5 + 56;
    v10(a1, 0, 1, AssociatedTypeWitness);
    int v6 = *(_DWORD *)(v9 + 28);
    size_t v7 = *(void *)(v9 + 8);
  }
  if (v6) {
    size_t v11 = v7;
  }
  else {
    size_t v11 = v7 + 1;
  }
  size_t v12 = v11 + 7;
  unint64_t v54 = a1;
  uint64_t v13 = (void *)(((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8);
  int v14 = (void *)(((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8);
  void *v13 = *v14;
  unint64_t v15 = ((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = ((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = v18;
  int v20 = *(_DWORD *)(v18 + 80) & 0xF8;
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = v20 | v23 | 7;
  uint64_t v25 = (void *)((v24 + 9 + v15) & ~v24);
  uint64_t v26 = (const void *)((v24 + 9 + v16) & ~v24);
  uint64_t v27 = *(unsigned int *)(v18 + 84);
  if (v27 <= *(_DWORD *)(v22 + 84)) {
    unsigned int v28 = *(_DWORD *)(v22 + 84);
  }
  else {
    unsigned int v28 = *(_DWORD *)(v18 + 84);
  }
  if (v28 <= 0x7FFFFFFE) {
    int v29 = 2147483646;
  }
  else {
    int v29 = v28;
  }
  uint64_t v30 = *(void *)(v18 + 64) + 7;
  uint64_t v31 = v23 + 8;
  uint64_t v32 = *(void *)(*(void *)(v21 - 8) + 64) + 7;
  size_t v33 = ((((v32 + ((v23 + 8 + (v30 & 0xFFFFFFFFFFFFFFF8)) & ~v23)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v52 = ~v23;
  uint64_t v53 = v21;
  if (v27 == v29)
  {
    if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v26, v27, v17)) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v34 = (void *)(((unint64_t)v26 + v30) & 0xFFFFFFFFFFFFFFF8);
    if (v28 > 0x7FFFFFFE)
    {
      if (!(*(unsigned int (**)(unint64_t))(v22 + 48))(((unint64_t)v34 + v31) & ~v23))
      {
LABEL_26:
        uint64_t v34 = (void *)(((unint64_t)v26 + v30) & 0xFFFFFFFFFFFFFFF8);
LABEL_27:
        (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v25, v26, v17);
        int v36 = (void *)(((unint64_t)v25 + v30) & 0xFFFFFFFFFFFFFFF8);
        *int v36 = *v34;
        uint64_t v37 = v25;
        unint64_t v38 = ((unint64_t)v36 + v31) & v52;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 32))(v38, ((unint64_t)v34 + v31) & v52, v53);
        unint64_t v39 = v32 + v38;
        uint64_t v25 = v37;
        v39 &= 0xFFFFFFFFFFFFFFF8;
        unsigned int v40 = (void *)((v32 + (((unint64_t)v34 + v31) & v52)) & 0xFFFFFFFFFFFFFFF8);
        *(void *)unint64_t v39 = *v40;
        *(_OWORD *)((v39 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v35 = *v34;
      if (*v34 >= 0xFFFFFFFFuLL) {
        LODWORD(v35) = -1;
      }
      if ((v35 + 1) < 2) {
        goto LABEL_27;
      }
    }
  }
  memcpy(v25, v26, v33);
LABEL_28:
  uint64_t v41 = (uint64_t)v26 + v33 + 10;
  *((unsigned char *)v25 + v33) = *((unsigned char *)v26 + v33);
  *(unsigned char *)(((unint64_t)v25 + v33) | 1) = *(unsigned char *)(((unint64_t)v26 + v33) | 1);
  *(unsigned char *)(((unint64_t)v25 + v33) | 2) = *(unsigned char *)(((unint64_t)v26 + v33) | 2);
  unint64_t v42 = ((unint64_t)v25 + v33 + 10) & 0xFFFFFFFFFFFFFFF8;
  long long v43 = *(_OWORD *)(v41 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v42 + 16) = *(unsigned char *)((v41 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_OWORD *)unint64_t v42 = v43;
  unint64_t v44 = ((unint64_t)v25 + v33 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v45 = ((unint64_t)v26 + v33 + 34) & 0xFFFFFFFFFFFFFFF8;
  long long v46 = *(_OWORD *)v45;
  long long v47 = *(_OWORD *)(v45 + 16);
  long long v48 = *(_OWORD *)(v45 + 32);
  *(void *)(v44 + 48) = *(void *)(v45 + 48);
  *(_OWORD *)(v44 + 16) = v47;
  *(_OWORD *)(v44 + 32) = v48;
  *(_OWORD *)unint64_t v44 = v46;
  uint64_t v49 = (void *)((v44 + 63) & 0xFFFFFFFFFFFFFFF8);
  size_t v50 = (void *)((v45 + 63) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v49 = *v50;
  *(void *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
  return v54;
}

void *sub_24DB85408(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_12;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  if (v9) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = v10 + 1;
  }
  memcpy(a1, a2, v11);
LABEL_12:
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v12 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v12 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v13 = v12 + 7;
  uint64_t v93 = a1;
  int v14 = (void *)(((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v15 = (void *)(((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8);
  *int v14 = *v15;
  unint64_t v16 = ((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = ((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = v19;
  int v21 = *(_DWORD *)(v19 + 80) & 0xF8;
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(v22 - 8);
  uint64_t v25 = v24;
  uint64_t v26 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v27 = v21 | v26 | 7;
  uint64_t v28 = (v27 + 9 + v16) & ~v27;
  int v29 = (char *)((v27 + 9 + v17) & ~v27);
  uint64_t v30 = *(unsigned int *)(v19 + 84);
  uint64_t v31 = *(unsigned int *)(v24 + 84);
  if (v30 <= v31) {
    unsigned int v32 = *(_DWORD *)(v24 + 84);
  }
  else {
    unsigned int v32 = *(_DWORD *)(v19 + 84);
  }
  if (v32 <= 0x7FFFFFFE) {
    int v33 = 2147483646;
  }
  else {
    int v33 = v32;
  }
  uint64_t v34 = *(void *)(v19 + 64) + 7;
  uint64_t v35 = v26 + 8;
  unint64_t __n = ((((*(void *)(v24 + 64) + 7 + ((v26 + 8 + (v34 & 0xFFFFFFFFFFFFFFF8)) & ~v26)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  __dst = (void *)v28;
  uint64_t v91 = *(void *)(v24 + 64) + 7;
  uint64_t v92 = v22;
  uint64_t v89 = v18;
  uint64_t v90 = ~v26;
  if (v30 == v33)
  {
    int v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    int v37 = v36(v28, v30, v18);
    int v38 = v36((uint64_t)v29, v30, v18);
    if (v37)
    {
LABEL_23:
      unint64_t v39 = v93;
      uint64_t v28 = (uint64_t)__dst;
      if (v38)
      {
LABEL_24:
        unsigned int v40 = (void *)v28;
LABEL_37:
        unint64_t v52 = __n;
        memcpy(v40, v29, __n);
        uint64_t v53 = __dst;
        goto LABEL_44;
      }
      uint64_t v41 = (uint64_t *)(((unint64_t)__dst + v34) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v44 = (uint64_t *)((unint64_t)&v29[v34] & 0xFFFFFFFFFFFFFFF8);
      goto LABEL_40;
    }
    goto LABEL_34;
  }
  uint64_t v41 = (uint64_t *)((v34 + v28) & 0xFFFFFFFFFFFFFFF8);
  if (v32 > 0x7FFFFFFE)
  {
    uint64_t v48 = ~v26;
    unint64_t v49 = ((unint64_t)v41 + v35) & ~v26;
    size_t v50 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v24 + 48);
    uint64_t v51 = v23;
    int v88 = v50(v49, v31, v23);
    int v38 = v50((v35 + ((unint64_t)&v29[v34] & 0xFFFFFFFFFFFFFFF8)) & v48, v31, v51);
    if (v88) {
      goto LABEL_23;
    }
LABEL_34:
    uint64_t v28 = (uint64_t)__dst;
    uint64_t v41 = (uint64_t *)(((unint64_t)__dst + v34) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v39 = v93;
    if (v38)
    {
      uint64_t v47 = v89;
      goto LABEL_36;
    }
    unint64_t v44 = (uint64_t *)((unint64_t)&v29[v34] & 0xFFFFFFFFFFFFFFF8);
    uint64_t v47 = v89;
    goto LABEL_42;
  }
  uint64_t v42 = *v41;
  if ((unint64_t)*v41 >= 0xFFFFFFFF) {
    LODWORD(v42) = -1;
  }
  unsigned int v43 = v42 + 1;
  unint64_t v44 = (uint64_t *)((unint64_t)&v29[v34] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v45 = *v44;
  if ((unint64_t)*v44 >= 0xFFFFFFFF) {
    LODWORD(v45) = -1;
  }
  unsigned int v46 = v45 + 1;
  unint64_t v39 = v93;
  if (v43 < 2)
  {
    uint64_t v47 = v18;
    if (v46 >= 2)
    {
LABEL_36:
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v28, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v25 + 8))(((unint64_t)v41 + v35) & v90, v92);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unsigned int v40 = __dst;
      goto LABEL_37;
    }
LABEL_42:
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 40))(v28, v29, v47);
    uint64_t *v41 = *v44;
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v25 + 40))(((unint64_t)v41 + v35) & v90, ((unint64_t)v44 + v35) & v90, v92);
    BOOL v56 = (void *)((v91 + (((unint64_t)v41 + v35) & v90)) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v57 = (v91 + (((unint64_t)v44 + v35) & v90)) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v58 = *(void *)v57;
    v57 += 15;
    *BOOL v56 = v58;
    swift_bridgeObjectRelease();
    unint64_t v59 = (void *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v59 = *(void *)(v57 & 0xFFFFFFFFFFFFFFF8);
    v59[1] = *(void *)((v57 & 0xFFFFFFFFFFFFFFF8) + 8);
    swift_bridgeObjectRelease();
    uint64_t v53 = __dst;
    goto LABEL_43;
  }
  if (v46 >= 2) {
    goto LABEL_24;
  }
LABEL_40:
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v28, v29, v89);
  uint64_t *v41 = *v44;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v25 + 32))(((unint64_t)v41 + v35) & v90, ((unint64_t)v44 + v35) & v90, v92);
  uint64_t v53 = __dst;
  unint64_t v54 = (void *)((v91 + (((unint64_t)v41 + v35) & v90)) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v55 = (void *)((v91 + (((unint64_t)v44 + v35) & v90)) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v54 = *v55;
  *(_OWORD *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_43:
  unint64_t v52 = __n;
LABEL_44:
  unint64_t v60 = (unint64_t)v53 + v52;
  long long v61 = (unsigned char *)((unint64_t)&v29[v52] | 1);
  uint64_t v62 = (unsigned char *)((unint64_t)&v29[v52] | 2);
  uint64_t v63 = (uint64_t)&v29[v52 + 10];
  uint64_t v64 = &v29[v52];
  *(unsigned char *)unint64_t v60 = *v64;
  unint64_t v65 = v60 + 34;
  *(unsigned char *)(v60 | 1) = *v61;
  *(unsigned char *)(v60 | 2) = *v62;
  unint64_t v66 = (v60 + 10) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v61) = *(unsigned char *)((v63 & 0xFFFFFFFFFFFFFFF8) + 16);
  id v67 = *(void **)v66;
  unsigned int v68 = *(void **)(v66 + 8);
  *(_OWORD *)unint64_t v66 = *(_OWORD *)(v63 & 0xFFFFFFFFFFFFFFF8);
  char v69 = *(unsigned char *)(v66 + 16);
  *(unsigned char *)(v66 + 16) = (_BYTE)v61;
  sub_24D3E380C(v67, v68, v69);
  unint64_t v70 = v65 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v71 = (unint64_t)(v64 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v72 = *(void *)(v70 + 16);
  if (4 * ((v72 >> 60) & 3)) {
    BOOL v73 = (((v72 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v72 >> 60) & 3))) == 15;
  }
  else {
    BOOL v73 = 1;
  }
  if (!v73) {
    goto LABEL_60;
  }
  char v74 = (uint64_t *)(v70 + 8);
  uint64_t v75 = *(void *)(v71 + 16) >> 60;
  if (4 * (v75 & 3)) {
    BOOL v76 = ((v75 >> 2) & 0xFFFFFFF3 | (4 * (v75 & 3))) == 15;
  }
  else {
    BOOL v76 = 1;
  }
  if (v76)
  {
    char v77 = (void *)(v71 + 8);
    *(void *)unint64_t v70 = *(void *)v71;
    if (v72 >> 60 != 15)
    {
      unint64_t v78 = *(void *)(v71 + 16);
      if (v78 >> 60 != 15)
      {
        uint64_t v82 = *(void *)(v70 + 8);
        *(void *)(v70 + 8) = *v77;
        *(void *)(v70 + 16) = v78;
        sub_24D400DCC(v82, v72);
        goto LABEL_62;
      }
      sub_24D4B12A0(v70 + 8);
    }
    *(_OWORD *)char v74 = *(_OWORD *)v77;
LABEL_62:
    long long v83 = *(_OWORD *)(v71 + 24);
    *(unsigned char *)(v70 + 40) = *(unsigned char *)(v71 + 40);
    *(_OWORD *)(v70 + 24) = v83;
    *(void *)(v70 + 48) = *(void *)(v71 + 48);
    goto LABEL_63;
  }
  if (v72 >> 60 != 15) {
    sub_24D400DCC(*v74, v72);
  }
LABEL_60:
  long long v79 = *(_OWORD *)v71;
  long long v80 = *(_OWORD *)(v71 + 16);
  long long v81 = *(_OWORD *)(v71 + 32);
  *(void *)(v70 + 48) = *(void *)(v71 + 48);
  *(_OWORD *)(v70 + 16) = v80;
  *(_OWORD *)(v70 + 32) = v81;
  *(_OWORD *)unint64_t v70 = v79;
LABEL_63:
  int v84 = (void **)((v70 + 63) & 0xFFFFFFFFFFFFFFF8);
  int v85 = (void **)((v71 + 63) & 0xFFFFFFFFFFFFFFF8);
  int v86 = *v84;
  *int v84 = *v85;

  *(void *)(((unint64_t)v84 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v85 + 15) & 0xFFFFFFFFFFFFFFF8);
  return v39;
}

uint64_t sub_24DB85BA4(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v37 = AssociatedTypeWitness;
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  uint64_t v36 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v36 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v8 <= v12) {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  else {
    unsigned int v13 = v8;
  }
  if (v13 <= 0x7FFFFFFE) {
    int v14 = 2147483646;
  }
  else {
    int v14 = v13;
  }
  if (v6 <= v14 - 1) {
    unsigned int v15 = v14 - 1;
  }
  else {
    unsigned int v15 = v6;
  }
  if (v15 <= 0x7FFFFFFE) {
    unsigned int v16 = 2147483646;
  }
  else {
    unsigned int v16 = v15;
  }
  if (v5) {
    uint64_t v17 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v4 + 64) + 1;
  }
  uint64_t v18 = *(unsigned __int8 *)(v11 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v19 = v9;
  uint64_t v20 = *(_DWORD *)(v7 + 80) & 0xF8 | v18 | 7;
  uint64_t v21 = *(void *)(v7 + 64) + 7;
  unint64_t v22 = ((((*(void *)(*(void *)(v9 - 8) + 64) + ((v18 + 8 + (v21 & 0xFFFFFFFFFFFFFFF8)) & ~v18) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v16 < a2)
  {
    unint64_t v23 = ((((((((v20 + ((((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v20) + v22 + 34) & 0xFFFFFFFFFFFFFFF8)
            + 63) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    uint64_t v10 = v23 & 0xFFFFFFF8;
    if ((v23 & 0xFFFFFFF8) != 0) {
      unsigned int v24 = 2;
    }
    else {
      unsigned int v24 = a2 - v16 + 1;
    }
    if (v24 >= 0x10000) {
      unsigned int v25 = 4;
    }
    else {
      unsigned int v25 = 2;
    }
    if (v24 < 0x100) {
      unsigned int v25 = 1;
    }
    if (v24 >= 2) {
      uint64_t v26 = v25;
    }
    else {
      uint64_t v26 = 0;
    }
    switch(v26)
    {
      case 1:
        int v27 = *((unsigned __int8 *)a1 + v23);
        if (!*((unsigned char *)a1 + v23)) {
          break;
        }
        goto LABEL_36;
      case 2:
        int v27 = *(unsigned __int16 *)((char *)a1 + v23);
        if (*(_WORD *)((char *)a1 + v23)) {
          goto LABEL_36;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24DB85F98);
      case 4:
        int v27 = *(_DWORD *)((char *)a1 + v23);
        if (!v27) {
          break;
        }
LABEL_36:
        int v28 = v27 - 1;
        if ((v23 & 0xFFFFFFF8) != 0)
        {
          int v28 = 0;
          int v29 = *a1;
        }
        else
        {
          int v29 = 0;
        }
        return v16 + (v29 | v28) + 1;
      default:
        break;
    }
  }
  if (v6 == v16)
  {
    if (v5 < 2) {
      return 0;
    }
    unsigned int v32 = (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(v4 + 48))(a1, v5, v37, v20, v22, v10);
    goto LABEL_46;
  }
  unint64_t v31 = ((((((unint64_t)a1 + v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v20 + 9) & ~v20;
  if (v14 - 1 == v16)
  {
    if (v8 == v14)
    {
      unsigned int v32 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v31, v8, v36);
    }
    else
    {
      uint64_t v34 = (uint64_t *)((v21 + v31) & 0xFFFFFFFFFFFFFFF8);
      if (v13 > 0x7FFFFFFE)
      {
        unsigned int v32 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(v11 + 48))(((unint64_t)v34 + v18 + 8) & ~v18, v12, v19, v20, v22, v10);
      }
      else
      {
        uint64_t v35 = *v34;
        if ((unint64_t)*v34 >= 0xFFFFFFFF) {
          LODWORD(v35) = -1;
        }
        if ((v35 + 1) >= 2) {
          unsigned int v32 = v35;
        }
        else {
          unsigned int v32 = 0;
        }
      }
    }
LABEL_46:
    if (v32 >= 2) {
      return v32 - 1;
    }
    else {
      return 0;
    }
  }
  unint64_t v33 = *(void *)((((v31 + v22 + 10) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
  if (v33 >= 0xFFFFFFFF) {
    LODWORD(v33) = -1;
  }
  if ((v33 + 1) >= 2) {
    return v33;
  }
  else {
    return 0;
  }
}

void sub_24DB85FAC(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v41 = AssociatedTypeWitness;
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  uint64_t v40 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v40 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  int v9 = 0;
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v7 + 64);
  if (v8 <= *(_DWORD *)(v10 + 84)) {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v13 = v8;
  }
  if (v13 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  else {
    unsigned int v14 = v13;
  }
  if (v6 <= v14 - 1) {
    unsigned int v15 = v14 - 1;
  }
  else {
    unsigned int v15 = v6;
  }
  if (v15 <= 0x7FFFFFFE) {
    unsigned int v16 = 2147483646;
  }
  else {
    unsigned int v16 = v15;
  }
  if (v5) {
    uint64_t v17 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v4 + 64) + 1;
  }
  uint64_t v18 = *(_DWORD *)(v7 + 80) & 0xF8 | v11 | 7;
  uint64_t v19 = v12 + 7;
  uint64_t v20 = v11 + 8;
  size_t v21 = ((((*(void *)(v10 + 64) + ((v11 + 8 + ((v12 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v22 = ((((((((v18 + ((((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v18) + v21 + 34) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v16 < a3)
  {
    if (((((((((v18 + ((((v17 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 9) & ~v18)
             + v21
             + 34) & 0xFFFFFFF8)
           + 63) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v23 = a3 - v16 + 1;
    else {
      unsigned int v23 = 2;
    }
    if (v23 >= 0x10000) {
      int v24 = 4;
    }
    else {
      int v24 = 2;
    }
    if (v23 < 0x100) {
      int v24 = 1;
    }
    if (v23 >= 2) {
      int v9 = v24;
    }
    else {
      int v9 = 0;
    }
  }
  if (a2 > v16)
  {
    if (((((((((v18 + ((((v17 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 9) & ~v18)
             + v21
             + 34) & 0xFFFFFFF8)
           + 63) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      int v25 = a2 - v16;
    else {
      int v25 = 1;
    }
    if (((((((((v18 + ((((v17 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 9) & ~v18)
             + v21
             + 34) & 0xFFFFFFF8)
           + 63) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      unsigned int v26 = ~v16 + a2;
      bzero(a1, ((((((((v18 + ((((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v18) + v21 + 34) & 0xFFFFFFFFFFFFFFF8)+ 63) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *a1 = v26;
    }
    switch(v9)
    {
      case 1:
        *((unsigned char *)a1 + v22) = v25;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v22) = v25;
        return;
      case 3:
        goto LABEL_72;
      case 4:
        *(unsigned int *)((char *)a1 + v22) = v25;
        return;
      default:
        return;
    }
  }
  uint64_t v27 = ~v18;
  uint64_t v28 = ~v11;
  unint64_t v29 = (unint64_t)a1;
  switch(v9)
  {
    case 1:
      *((unsigned char *)a1 + v22) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_46;
    case 2:
      *(_WORD *)((char *)a1 + v22) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_46;
    case 3:
LABEL_72:
      __break(1u);
      JUMPOUT(0x24DB864ACLL);
    case 4:
      *(unsigned int *)((char *)a1 + v22) = 0;
      goto LABEL_45;
    default:
LABEL_45:
      if (!a2) {
        return;
      }
LABEL_46:
      if (v6 == v16)
      {
        uint64_t v30 = a2 + 1;
        uint64_t v31 = v41;
        unsigned int v32 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
        uint64_t v33 = v5;
LABEL_49:
        v32(v29, v30, v33, v31);
        return;
      }
      uint64_t v34 = (_DWORD *)(((((((unint64_t)a1 + v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                      + v18
                      + 9) & v27);
      if (v14 - 1 == v16)
      {
        uint64_t v35 = a2 + 1;
        if (v35 <= v14)
        {
          if (a2 != -1)
          {
            if (v8 == v14)
            {
              unsigned int v32 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
              unint64_t v29 = ((((((unint64_t)a1 + v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v18 + 9) & v27;
              uint64_t v30 = a2 + 1;
              uint64_t v33 = v8;
              uint64_t v31 = v40;
              goto LABEL_49;
            }
            int v38 = (void *)(((unint64_t)v34 + v19) & 0xFFFFFFFFFFFFFFF8);
            if (v13 > 0x7FFFFFFE)
            {
              unint64_t v39 = *(void (**)(unint64_t, void))(v10 + 56);
              v39(((unint64_t)v38 + v20) & v28, a2 + 1);
            }
            else if (v35 > 0x7FFFFFFE)
            {
              *int v38 = 0;
              *(_DWORD *)int v38 = a2 - 2147483646;
            }
            else
            {
              *int v38 = v35;
            }
          }
        }
        else if (v21)
        {
          unsigned int v36 = a2 - v14;
          bzero((void *)(((((((unint64_t)a1 + v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v18 + 9) & v27), v21);
          *uint64_t v34 = v36;
        }
      }
      else
      {
        uint64_t v37 = (void *)(((((unint64_t)v34 + v21 + 10) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
        if (a2 > 0x7FFFFFFE)
        {
          *uint64_t v37 = 0;
          *(_DWORD *)uint64_t v37 = a2 - 0x7FFFFFFF;
        }
        else
        {
          *uint64_t v37 = a2;
        }
      }
      return;
  }
}

uint64_t sub_24DB864D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v34 = a2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v32 = (uint64_t)&v29 - v9;
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = type metadata accessor for ItemReconciliationHalf();
  MEMORY[0x270FA5388](v13);
  uint64_t v33 = (uint64_t)&v29 - v14;
  (*(void (**)(void))(v15 + 16))();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v3, v7);
  uint64_t v16 = *(int *)(a1 + 56);
  uint64_t v17 = *(int *)(a1 + 60);
  uint64_t v30 = v3;
  uint64_t v18 = *(void *)(v3 + v17);
  int v31 = *(unsigned __int8 *)(v3 + v16);
  uint64_t v44 = v18;
  uint64_t v36 = v5;
  uint64_t v37 = v11;
  uint64_t v38 = v6;
  uint64_t v39 = v12;
  uint64_t v29 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  uint64_t v40 = AssociatedTypeWitness;
  uint64_t v41 = v20;
  uint64_t v42 = AssociatedConformanceWitness;
  uint64_t v43 = v22;
  type metadata accessor for ReconciliationID();
  uint64_t v23 = sub_24DCC9D48();
  uint64_t v40 = v20;
  uint64_t v41 = AssociatedTypeWitness;
  uint64_t v42 = v22;
  uint64_t v43 = AssociatedConformanceWitness;
  uint64_t v24 = type metadata accessor for ReconciliationID();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v27 = sub_24D7854B0((void (*)(char *, char *))sub_24DB92374, (uint64_t)v35, v23, v24, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v26);
  swift_bridgeObjectRelease();
  return sub_24DB8BA58(v33, v32, v31, v27, *(void *)(v30 + *(int *)(a1 + 64)), *(void *)(v30 + *(int *)(a1 + 64) + 8), 0, *(unsigned char *)(v30 + *(int *)(a1 + 72)), v34, *(void *)(v30 + *(int *)(a1 + 76)));
}

uint64_t sub_24DB86810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_24DCC8CE8();
  uint64_t v26 = *(void *)(v10 - 8);
  uint64_t v27 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DB86A84(a5);
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v13 = (int *)type metadata accessor for ItemReconciliation();
  sub_24DB86A84(a5 + v13[13]);
  *(unsigned char *)(a5 + v13[14]) = 4;
  uint64_t v25 = v13[15];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  uint64_t v28 = AssociatedTypeWitness;
  uint64_t v29 = v15;
  uint64_t v30 = AssociatedConformanceWitness;
  uint64_t v31 = v17;
  type metadata accessor for ReconciliationID();
  *(void *)(a5 + v25) = sub_24DCC9C98();
  uint64_t v18 = v13[16];
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v20 = v19;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v12, v27);
  double v22 = v20 * 1000000000.0;
  if ((~COERCE__INT64(v20 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v22 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v22 < 9.22337204e18)
  {
    uint64_t v23 = (void *)(a5 + v18);
    *uint64_t v23 = 0x2000000000000000;
    v23[1] = (uint64_t)v22;
    *(void *)(a5 + v13[17]) = 0;
    *(unsigned char *)(a5 + v13[18]) = 0;
    *(void *)(a5 + v13[19]) = 0;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

double sub_24DB86A84@<D0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a1, 1, 1, AssociatedTypeWitness);
  uint64_t v3 = (int *)type metadata accessor for ItemReconciliationHalf();
  *(void *)(a1 + v3[9]) = 0;
  *(void *)(a1 + v3[10]) = 0;
  *(unsigned char *)(a1 + v3[11]) = 3;
  uint64_t v4 = a1 + v3[12];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for FileItemVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(unsigned char *)(a1 + v3[13]) = 0;
  *(unsigned char *)(a1 + v3[14]) = 6;
  *(unsigned char *)(a1 + v3[15]) = 0;
  uint64_t v6 = a1 + v3[16];
  *(_OWORD *)uint64_t v6 = xmmword_24DCD4920;
  *(unsigned char *)(v6 + 16) = 4;
  uint64_t v7 = a1 + v3[17];
  *(void *)uint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  *(void *)(v7 + 16) = 0xB000000000000000;
  double result = 0.0;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(void *)(a1 + v3[18]) = 0;
  *(void *)(a1 + v3[19]) = 0;
  return result;
}

uint64_t sub_24DB86C94@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  uint64_t v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v10);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  double v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

BOOL sub_24DB86F3C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_24DCCA3F8();
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_24DCCA3F8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v21 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v21 - v15, v2, v13);
  LODWORD(v12) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v16, 1, v12);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v2, a1);
  if (v12 == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a1);
    return 0;
  }
  else
  {
    uint64_t v19 = v21;
    uint64_t v18 = v22;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v8, &v11[*(int *)(a1 + 52)], v22);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a1);
    BOOL v17 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v8, 1, AssociatedTypeWitness) != 1;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v18);
  }
  return v17;
}

uint64_t sub_24DB87278(void *a1)
{
  uint64_t v2 = a1[5];
  uint64_t v3 = a1[3];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v87 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v89 = swift_getAssociatedConformanceWitness();
  uint64_t v70 = type metadata accessor for FileItemVersion();
  uint64_t v71 = sub_24DCCA3F8();
  uint64_t v69 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  unsigned int v68 = (char *)&v66 - v4;
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[2];
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = swift_getAssociatedConformanceWitness();
  uint64_t v10 = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = v7;
  uint64_t v87 = v8;
  uint64_t AssociatedConformanceWitness = v9;
  uint64_t v89 = v10;
  uint64_t v77 = type metadata accessor for FileItemVersion();
  uint64_t v78 = sub_24DCCA3F8();
  uint64_t v76 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  char v74 = (char *)&v66 - v11;
  uint64_t v72 = v3;
  uint64_t v73 = v2;
  uint64_t v12 = (uint64_t)a1;
  uint64_t v83 = swift_getAssociatedTypeWitness();
  int v84 = (void *)sub_24DCCA3F8();
  uint64_t v82 = *(v84 - 1);
  uint64_t v13 = MEMORY[0x270FA5388](v84);
  uint64_t v15 = (char *)&v66 - v14;
  uint64_t v16 = *(a1 - 1);
  uint64_t v17 = MEMORY[0x270FA5388](v13);
  long long v80 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  long long v81 = (char *)&v66 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v66 - v21;
  uint64_t v79 = v5;
  uint64_t v75 = v6;
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = sub_24DCCA3F8();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v66 - v26;
  uint64_t v28 = v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))((char *)&v66 - v26, v85, v24);
  LODWORD(v23) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v27, 1, v23);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v90 = v12;
  v29(v22, v28, v12);
  if (v23 == 1)
  {
    uint64_t v30 = v90;
    uint64_t v31 = &v22[*(int *)(v90 + 52)];
    id v67 = v29;
    uint64_t v32 = v82;
    uint64_t v33 = v84;
    (*(void (**)(char *, char *, void *))(v82 + 16))(v15, v31, v84);
    uint64_t v34 = *(void (**)(char *, uint64_t))(v16 + 8);
    v34(v22, v30);
    int v35 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v83 - 8) + 48))(v15, 1);
    (*(void (**)(char *, void *))(v32 + 8))(v15, v33);
    uint64_t v29 = v67;
    if (v35 == 1)
    {
      sub_24D4A5DD0();
      swift_allocError();
      uint64_t v37 = v36;
      uint64_t AssociatedTypeWitness = 0;
      uint64_t v87 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      uint64_t v38 = v87;
      *(void *)uint64_t v37 = AssociatedTypeWitness;
      *(void *)(v37 + 8) = v38;
      char v39 = 5;
LABEL_15:
      *(unsigned char *)(v37 + 48) = v39;
      return swift_willThrow();
    }
  }
  else
  {
    uint64_t v34 = *(void (**)(char *, uint64_t))(v16 + 8);
    v34(v22, v90);
  }
  if (*(unsigned char *)(v85 + *(int *)(v90 + 56)) == 4)
  {
    sub_24D4A5DD0();
    swift_allocError();
    uint64_t v37 = v40;
    uint64_t AssociatedTypeWitness = 0;
    uint64_t v87 = 0xE000000000000000;
    sub_24DCCA728();
    sub_24DCC9968();
    swift_getWitnessTable();
    sub_24DCCADC8();
    uint64_t v41 = v87;
    *(void *)uint64_t v37 = AssociatedTypeWitness;
    *(void *)(v37 + 8) = v41;
    char v39 = 6;
    goto LABEL_15;
  }
  int v84 = v34;
  uint64_t v42 = v90;
  uint64_t v43 = v85;
  BOOL v44 = sub_24DB86F3C(v90);
  uint64_t v45 = v81;
  v29(v81, v43, v42);
  if (v44)
  {
    uint64_t v46 = type metadata accessor for ItemReconciliationHalf();
    uint64_t v47 = v76;
    uint64_t v48 = v74;
    uint64_t v49 = v78;
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v74, &v45[*(int *)(v46 + 48)], v78);
    ((void (*)(char *, uint64_t))v84)(v45, v90);
    int v50 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v77 - 8) + 48))(v48, 1);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
    if (v50 == 1)
    {
      sub_24D4A5DD0();
      swift_allocError();
      uint64_t v37 = v51;
      uint64_t AssociatedTypeWitness = 0;
      uint64_t v87 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      uint64_t v52 = AssociatedTypeWitness;
      uint64_t v53 = v87;
      *(unsigned char *)uint64_t v37 = 0;
LABEL_14:
      *(void *)(v37 + 8) = v52;
      *(void *)(v37 + 16) = v53;
      char v39 = 7;
      goto LABEL_15;
    }
  }
  else
  {
    ((void (*)(char *, uint64_t))v84)(v45, v90);
  }
  uint64_t v54 = v90;
  uint64_t v55 = v85;
  BOOL v56 = sub_24DB86F3C(v90);
  unint64_t v57 = v80;
  v29(v80, v55, v54);
  if (!v56) {
    return ((uint64_t (*)(char *, uint64_t))v84)(v57, v90);
  }
  uint64_t v58 = v90;
  uint64_t v59 = *(int *)(v90 + 52);
  unint64_t v60 = &v57[v59 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 48)];
  uint64_t v61 = v69;
  uint64_t v62 = v68;
  uint64_t v63 = v71;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v68, v60, v71);
  ((void (*)(char *, uint64_t))v84)(v57, v58);
  LODWORD(v59) = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v70 - 8) + 48))(v62, 1);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v62, v63);
  if (v59 == 1)
  {
    sub_24D4A5DD0();
    swift_allocError();
    uint64_t v37 = v65;
    uint64_t AssociatedTypeWitness = 0;
    uint64_t v87 = 0xE000000000000000;
    sub_24DCCA728();
    sub_24DCC9968();
    swift_getWitnessTable();
    sub_24DCCADC8();
    uint64_t v52 = AssociatedTypeWitness;
    uint64_t v53 = v87;
    *(unsigned char *)uint64_t v37 = 1;
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_24DB87D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(a5 + 16);
  uint64_t v9 = *(void *)(a5 + 24);
  uint64_t v11 = *(void *)(a5 + 32);
  uint64_t v78 = *(void *)(a5 + 40);
  uint64_t v79 = v9;
  uint64_t v92 = v9;
  uint64_t v88 = v10;
  uint64_t v89 = a2;
  uint64_t v93 = v10;
  uint64_t v94 = v78;
  uint64_t v87 = v11;
  uint64_t v95 = v11;
  uint64_t v83 = (int *)type metadata accessor for ItemReconciliation();
  uint64_t v91 = *((void *)v83 - 1);
  uint64_t v12 = MEMORY[0x270FA5388](v83);
  uint64_t v82 = (uint64_t)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v81 = (uint64_t)&v72 - v14;
  uint64_t v15 = sub_24DCCA3F8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  int v86 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v72 - v19;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v90 = a1;
  uint64_t v85 = v21;
  v21((char *)&v72 - v19, a1, v15);
  uint64_t v22 = *(void *)(a5 - 8);
  int v84 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v23 = v84(v20, 1, a5);
  uint64_t v80 = a3;
  if (v23 == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
    uint64_t v76 = 0;
    uint64_t v77 = 0;
    char v24 = 70;
  }
  else
  {
    uint64_t v39 = v96;
    char v40 = sub_24DB88314(a4, (int *)a5);
    uint64_t v96 = v39;
    if (v39)
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v20, a5);
      return v29 & 1;
    }
    char v24 = v40;
    uint64_t v76 = v42;
    uint64_t v77 = v41;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v20, a5);
    if (v24 == 70)
    {
      uint64_t v76 = 0;
      uint64_t v77 = 0;
    }
  }
  uint64_t v25 = v96;
  char v26 = sub_24DB88314(a4, (int *)a5);
  if (!v25)
  {
    uint64_t v96 = 0;
    uint64_t v75 = a4;
    char v30 = v24;
    char v31 = v26;
    if (v26 == 70) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = v27;
    }
    uint64_t v74 = v32;
    if (v26 == 70) {
      uint64_t v33 = 0;
    }
    else {
      uint64_t v33 = v28;
    }
    uint64_t v73 = v33;
    uint64_t v34 = type metadata accessor for ItemReconciliationHalf();
    LODWORD(v89) = sub_24DB90670(v30, v77, v76, v31, v74, v73, v89, v34);
    int v35 = v86;
    v85(v86, v90, v15);
    if (v84(v35, 1, a5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v15);
      uint64_t v36 = 0;
      uint64_t v90 = 0;
      char v37 = 70;
      uint64_t v38 = v83;
    }
    else
    {
      uint64_t v43 = v81;
      sub_24DB864D4(a5, v81);
      uint64_t v44 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v35, a5);
      uint64_t v45 = (*(uint64_t (**)(uint64_t))(*(void *)v75 + 176))(v44);
      uint64_t v38 = v83;
      uint64_t v46 = v96;
      char v47 = sub_24DB88314(v45, v83);
      int v50 = (void (**)(uint64_t, int *))(v91 + 8);
      uint64_t v96 = v46;
      if (v46)
      {
        (*v50)(v43, v38);
        swift_release();
        return v29 & 1;
      }
      char v51 = v47;
      uint64_t v52 = v48;
      uint64_t v53 = v49;
      (*v50)(v43, v38);
      swift_release();
      if (v51 == 70) {
        char v37 = 70;
      }
      else {
        char v37 = v51;
      }
      if (v51 == 70) {
        uint64_t v36 = 0;
      }
      else {
        uint64_t v36 = v52;
      }
      if (v51 == 70) {
        uint64_t v54 = 0;
      }
      else {
        uint64_t v54 = v53;
      }
      uint64_t v90 = v54;
    }
    uint64_t v55 = v82;
    uint64_t v56 = sub_24DB864D4(a5, v82);
    uint64_t v57 = (*(uint64_t (**)(uint64_t))(*(void *)v75 + 176))(v56);
    uint64_t v58 = v96;
    char v59 = sub_24DB88314(v57, v38);
    uint64_t v62 = v61;
    uint64_t v63 = v38;
    if (v58)
    {
      (*(void (**)(uint64_t, int *))(v91 + 8))(v55, v38);
      swift_release();
    }
    else
    {
      char v65 = v59;
      uint64_t v66 = v60;
      id v67 = *(void (**)(uint64_t, int *))(v91 + 8);
      uint64_t v96 = 0;
      v67(v55, v63);
      swift_release();
      if (v65 == 70) {
        uint64_t v68 = 0;
      }
      else {
        uint64_t v68 = v62;
      }
      if (v65 == 70) {
        uint64_t v69 = 0;
      }
      else {
        uint64_t v69 = v66;
      }
      uint64_t v70 = type metadata accessor for ItemReconciliationHalf();
      char v71 = sub_24DB90670(v37, v36, v90, v65, v68, v69, v80, v70);
      char v29 = v89 | v71;
    }
  }
  return v29 & 1;
}

uint64_t sub_24DB88314(uint64_t a1, int *a2)
{
  uint64_t v219 = a1;
  unint64_t v226 = *((void *)a2 - 1);
  uint64_t v3 = MEMORY[0x270FA5388](a1);
  v206 = (char *)&v194 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  unint64_t v205 = (char *)&v194 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  int v207 = (char *)&v194 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v210 = (char *)&v194 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v215 = (char *)&v194 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v214 = (char *)&v194 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v213 = (char *)&v194 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v211 = (char *)&v194 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v220 = (char *)&v194 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  int v208 = (char *)&v194 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  size_t v209 = (char *)&v194 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v212 = (char *)&v194 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v222 = (char *)&v194 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  v221 = (char *)&v194 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v224 = (char *)&v194 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v218 = (char *)&v194 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  v225 = (char *)&v194 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v217 = (char *)&v194 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v216 = (char *)&v194 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v223 = (char *)&v194 - v42;
  MEMORY[0x270FA5388](v41);
  uint64_t v44 = (char *)&v194 - v43;
  uint64_t v46 = *(void (**)(char *))(v45 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v48 = sub_24DCCA3F8();
  uint64_t v49 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  char v51 = (char *)&v194 - v50;
  uint64_t v52 = a2;
  uint64_t v53 = v227;
  uint64_t result = sub_24DB87278(a2);
  if (v53) {
    return result;
  }
  uint64_t v55 = v51;
  v203 = v44;
  unint64_t v204 = v52;
  uint64_t v227 = 0;
  uint64_t v56 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v57 = v228;
  if (*(unsigned char *)(v228 + *(int *)(v56 + 64) + 16) == 2) {
    return 70;
  }
  uint64_t v58 = (int *)v56;
  uint64_t v59 = *(int *)(v56 + 52);
  if (*(unsigned char *)(v228 + v59) == 1) {
    return 70;
  }
  v202 = v46;
  uint64_t v60 = v49;
  uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
  uint64_t v62 = v48;
  v61(v55, v228, v48);
  int v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v55, 1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v55, v62);
  if (v63 == 1)
  {
    uint64_t v64 = v57 + v204[13];
    if (*(unsigned char *)(v64 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 36))) {
      goto LABEL_8;
    }
    return 70;
  }
  uint64_t v200 = v59;
  unint64_t v201 = v58;
  uint64_t v233 = *(void *)(v57 + v204[15]);
  uint64_t v65 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v67 = swift_getAssociatedConformanceWitness();
  uint64_t v229 = AssociatedTypeWitness;
  uint64_t v230 = v65;
  uint64_t v231 = AssociatedConformanceWitness;
  uint64_t v232 = v67;
  type metadata accessor for ReconciliationID();
  sub_24DCC9D48();
  swift_getWitnessTable();
  if ((sub_24DCC9FE8() & 1) == 0) {
    return 70;
  }
  uint64_t v68 = v204;
  uint64_t v69 = v228;
  uint64_t v70 = v228 + v204[13];
  char v71 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v72 = v71[19];
  if ((*(unsigned char *)(v70 + v72) & 3) != 0) {
    return 70;
  }
  uint64_t v73 = v68;
  uint64_t v74 = v201;
  uint64_t v75 = *(void *)(v69 + v201[9]);
  if ((v75 & 0x55) == 0)
  {
    uint64_t v196 = v201[10];
    unint64_t v199 = *(void *)(v69 + v196);
    size_t v198 = v71;
    uint64_t v197 = v71[14];
    int v76 = *(unsigned __int8 *)(v70 + v197);
    unint64_t v77 = v226;
    uint64_t v78 = v69;
    unint64_t v80 = v226 + 16;
    uint64_t v79 = *(void (**)(char *, uint64_t, int *))(v226 + 16);
    uint64_t v81 = v203;
    v79(v203, v78, v73);
    v202 = (void (*)(char *))v79;
    if (v76 == 4)
    {
      uint64_t v82 = *(void (**)(char *, int *))(v77 + 8);
      v82(v81, v73);
      unint64_t v83 = v80;
    }
    else
    {
      unint64_t v195 = v80;
      int v85 = v81[v74[14]];
      int v86 = v81;
      uint64_t v87 = *(void (**)(char *, int *))(v77 + 8);
      v87(v86, v73);
      if (v85 != 3)
      {
        int v95 = *(unsigned __int8 *)(v228 + v74[14]);
        uint64_t v96 = v216;
        v202(v216);
        if (v95 == 6)
        {
          uint64_t v97 = v198;
          int v98 = v96[v73[13] + v198[14]];
          long long v99 = v96;
          uint64_t v82 = v87;
          v87(v99, v73);
          BOOL v100 = v98 == 6;
          unint64_t v92 = v199;
          uint64_t v93 = v225;
          if (v100) {
            int v91 = *(unsigned __int8 *)(v70 + v97[11]);
          }
          else {
            int v91 = 3;
          }
          uint64_t v79 = (void (*)(char *, uint64_t, int *))v202;
          unint64_t v94 = v195;
          uint64_t v88 = v200;
        }
        else
        {
          uint64_t v104 = v96;
          uint64_t v82 = v87;
          v87(v104, v73);
          int v91 = 3;
          uint64_t v79 = (void (*)(char *, uint64_t, int *))v202;
          unint64_t v94 = v195;
          uint64_t v88 = v200;
          unint64_t v92 = v199;
          uint64_t v93 = v225;
        }
        goto LABEL_48;
      }
      uint64_t v82 = v87;
      uint64_t v79 = (void (*)(char *, uint64_t, int *))v202;
      unint64_t v83 = v195;
    }
    uint64_t v88 = v200;
    if (*(unsigned char *)(v228 + v200) == 2)
    {
      int v89 = *(unsigned __int8 *)(v70 + v197);
      if (v89 == 6)
      {
        uint64_t v90 = v223;
        v79(v223, v228, v73);
LABEL_42:
        v82(v90, v73);
        return 70;
      }
      uint64_t v216 = (char *)v82;
      id v101 = v223;
      v79(v223, v228, v73);
      BOOL v100 = v89 == 4;
      uint64_t v90 = v101;
      uint64_t v82 = (void (*)(char *, int *))v216;
      if (!v100) {
        goto LABEL_42;
      }
      int v102 = v90;
      int v103 = v90[v73[13] + v198[11]];
      ((void (*)(char *, int *))v216)(v102, v73);
      if (v103) {
        return 70;
      }
      int v91 = 0;
      uint64_t v88 = v200;
    }
    else
    {
      int v91 = 0;
    }
    unint64_t v92 = v199;
    uint64_t v93 = v225;
    unint64_t v94 = v83;
LABEL_48:
    uint64_t v105 = 1843460;
    if ((v92 & 0x10000000000) == 0) {
      goto LABEL_53;
    }
    uint64_t v106 = v228;
    int v107 = *(unsigned __int8 *)(v228 + v73[14]);
    if (v107 != 2)
    {
      if (v107 != 4) {
        goto LABEL_53;
      }
      __break(1u);
    }
    if (!*(unsigned char *)(v106 + v88)) {
      goto LABEL_57;
    }
LABEL_53:
    if ((v91 - 2) < 2)
    {
      int v108 = *(unsigned __int8 *)(v228 + v88);
      size_t v109 = v217;
      ((void (*)(char *))v79)(v217);
      if (v108) {
        int v110 = v109[v73[13] + v198[13]] == 0;
      }
      else {
        int v110 = 1;
      }
      v82(v109, v73);
      int v113 = *(unsigned __int8 *)(v228 + v200);
      v202(v93);
      if (v113 == 4)
      {
        v82(v93, v73);
      }
      else
      {
        BOOL v114 = v93[v73[13] + v198[13]] != 4;
        v82(v93, v73);
        if (v114 & ~v110)
        {
          int v115 = v218;
          unint64_t v111 = v199;
LABEL_75:
          uint64_t v105 = 1876224;
          if (v111) {
            goto LABEL_76;
          }
          if (!*(void *)(v228 + v196))
          {
            uint64_t v174 = *(void *)(v70 + v72);
            unint64_t v195 = v94;
            ((void (*)(char *, uint64_t, int *))v202)(v115, v228, v73);
            if ((v174 & 4) == 0)
            {
              v82(v115, v73);
              return 70;
            }
            uint64_t v180 = *(void *)&v115[v73[13] + v198[19]];
            v82(v115, v73);
            if ((v180 & 8) == 0) {
              return 70;
            }
            unint64_t v199 = 0;
            uint64_t v73 = v204;
LABEL_77:
            uint64_t v116 = v228;
            BOOL v117 = sub_24DB86F3C((uint64_t)v73);
            uint64_t v118 = v224;
            uint64_t v119 = v116;
            uint64_t v120 = (void (*)(char *, uint64_t, int *))v202;
            ((void (*)(char *, uint64_t, int *))v202)(v224, v119, v73);
            if (v117)
            {
              uint64_t v121 = *(void *)&v118[v73[13] + v198[9]];
              int v122 = v118;
              size_t v123 = (char *)(v226 + 8);
              v82(v122, v73);
              if ((v121 & 1) == 0)
              {
                unint64_t v124 = v105 | 0x402;
                if ((v199 & 2) == 0) {
                  unint64_t v124 = v105;
                }
                uint64_t v125 = (v124 >> 10) & 1;
                if ((v199 & 1) == 0) {
                  LODWORD(v125) = 1;
                }
                unint64_t v126 = v124 | 0x400;
                if (v125) {
                  unint64_t v126 = v124;
                }
                uint64_t v127 = *(void *)(v228 + v196);
                if ((v199 & 0x10) == 0)
                {
                  uint64_t v128 = (v126 >> 12) & 1;
                  if (v127 != 0x10000) {
                    LODWORD(v128) = 1;
                  }
                  if (!v128) {
                    v126 |= 0x1000uLL;
                  }
                }
                unint64_t v226 = v126;
                unsigned int v129 = v213;
                v120(v213, v228, v73);
                uint64_t v130 = v214;
                v225 = v123;
                if ((v127 & 0x100000000000) != 0)
                {
                  int v158 = v129[v201[11]];
                  v82(v129, v73);
                  uint64_t v132 = (void (*)(void))v82;
                  if (v158 != 3)
                  {
                    uint64_t v159 = v226;
                    uint64_t v160 = (v226 >> 14) & 1;
                    if (v158) {
                      LODWORD(v160) = 1;
                    }
                    if (!v160) {
                      uint64_t v159 = v226 | 0x4000;
                    }
                    unint64_t v226 = v159;
                  }
                }
                else
                {
                  unsigned int v131 = v129;
                  uint64_t v132 = (void (*)(void))v82;
                  v82(v131, v73);
                }
                uint64_t v161 = *(void *)(v70 + v72);
                uint64_t v162 = v228;
                size_t v163 = (void (*)(char *, uint64_t, int *))v202;
                ((void (*)(char *, uint64_t, int *))v202)(v130, v228, v73);
                if ((v161 & 4) != 0)
                {
                  uint64_t v224 = *(char **)&v130[v73[13] + v198[19]];
                  ((void (*)(char *, int *))v132)(v130, v73);
                  uint64_t v164 = v215;
                  v163(v215, v162, v73);
                  if ((v224 & 8) == 0)
                  {
                    ((void (*)(char *, int *))v132)(v164, v73);
                    goto LABEL_126;
                  }
                }
                else
                {
                  ((void (*)(char *, int *))v132)(v130, v73);
                  uint64_t v164 = v215;
                  v163(v215, v162, v73);
                }
                uint64_t v165 = *(void *)&v164[v201[19]];
                ((void (*)(char *, int *))v132)(v164, v73);
                if ((v165 & 4) == 0)
                {
                  char v166 = v199;
                  uint64_t v167 = *(void *)(v70 + v72);
                  unint64_t v168 = v210;
                  unint64_t v169 = (void (*)(char *, uint64_t, int *))v202;
                  ((void (*)(char *, uint64_t, int *))v202)(v210, v228, v73);
                  if ((v167 & 4) != 0)
                  {
                    uint64_t v175 = *(void *)&v168[v73[13] + v198[19]];
                    int v176 = v168;
                    uint64_t v171 = v132;
                    ((void (*)(char *, int *))v132)(v176, v73);
                    if ((v175 & 8) != 0)
                    {
                      uint64_t v177 = unk_26FFA2030;
                      if ((unk_26FFA2030 & ~qword_26FFA2028) == 0) {
                        uint64_t v177 = 0;
                      }
                      char v178 = qword_26FFA2038;
                      if ((qword_26FFA2038 & ~(v177 | qword_26FFA2028)) == 0) {
                        char v178 = 0;
                      }
                      v166 |= v177 | qword_26FFA2028 | v178;
                    }
                  }
                  else
                  {
                    unint64_t v170 = v168;
                    uint64_t v171 = v132;
                    ((void (*)(char *, int *))v132)(v170, v73);
                  }
                  if ((v166 & 8) != 0)
                  {
                    uint64_t result = 70;
                    switch(*(unsigned char *)(v228 + v200))
                    {
                      case 1:
                        return result;
                      case 2:
                      case 4:
                        int v182 = *(unsigned __int8 *)(v228 + v204[14]);
                        if (v182 == 4) {
                          goto LABEL_187;
                        }
                        uint64_t v183 = v171;
                        v169(v207, v228, v204);
                        if (v182 == 1)
                        {
                          ((void (*)(char *, int *))v171)(v207, v204);
                        }
                        else
                        {
                          unint64_t v188 = *(void *)&v207[v201[17] + 16];
                          v171();
                          if (v188 >> 60 == 11) {
                            return 23;
                          }
                        }
                        unint64_t v189 = *(void *)(v228 + v201[17] + 16);
                        ((void (*)(char *))v169)(v205);
                        if (v189 >> 60 == 11)
                        {
                          uint64_t v190 = v204;
                          ((void (*)(char *, int *))v171)(v205, v204);
                          v169(v206, v228, v190);
LABEL_178:
                          ((void (*)(char *, int *))v183)(v206, v204);
                          return 1;
                        }
                        uint64_t v191 = v204;
                        uint64_t v192 = *(void *)&v205[v204[13] + v198[19]];
                        v183();
                        v169(v206, v228, v191);
                        if ((v192 & 4) == 0) {
                          goto LABEL_178;
                        }
                        v183();
                        break;
                      default:
                        if (*(unsigned char *)(v70 + v197) == 3) {
                          return 70;
                        }
                        int v179 = *(unsigned __int8 *)(v228 + v204[14]);
                        if (v179 == 1) {
                          return 6;
                        }
                        if (v179 != 4) {
                          return 23;
                        }
                        goto LABEL_188;
                    }
                  }
                  return 1;
                }
LABEL_126:
                unint64_t v172 = v199 & 0xFFFFDFFFFFFEF6E7;
                if (qword_26B199AA0 != -1) {
                  swift_once();
                }
                if ((v172 & (qword_26B1A24C8 | 0x6409000000C000)) == 0) {
                  return 70;
                }
                return 1;
              }
            }
            else
            {
              v82(v118, v73);
            }
            unsigned int v133 = v120;
            uint64_t v134 = v228;
            BOOL v135 = sub_24DB86F3C((uint64_t)v73);
            uint64_t v136 = v221;
            v133(v221, v134, v73);
            if (v135) {
              int v137 = v136[v73[13] + v198[9]] & 1;
            }
            else {
              int v137 = 0;
            }
            size_t v138 = v201;
            uint64_t v139 = v219;
            uint64_t v140 = v220;
            v82(v136, v73);
            int v141 = v222;
            ((void (*)(char *, uint64_t, int *))v202)(v222, v228, v73);
            if (v137)
            {
              uint64_t v142 = *(void *)&v141[v138[10]];
              uint64_t v143 = ((uint64_t (*)(char *, int *))v82)(v141, v73);
              if ((v142 & 8) == 0)
              {
                __int16 v144 = (*(uint64_t (**)(uint64_t))(*(void *)v139 + 152))(v143);
                uint64_t v145 = v212;
                ((void (*)(char *, uint64_t, int *))v202)(v212, v228, v73);
                if ((v144 & 0x4000) == 0)
                {
                  v82(v145, v73);
                  return 70;
                }
                uint64_t v173 = *(void *)&v145[v73[13] + v198[9]];
                v82(v145, v73);
                uint64_t result = 70;
                if ((v199 & 2) == 0 || (v173 & 0x80) == 0) {
                  return result;
                }
              }
            }
            else
            {
              v82(v141, v73);
            }
            unint64_t v146 = (void (*)(void))v82;
            uint64_t v147 = v201;
            uint64_t v148 = v228;
            int v149 = *(unsigned __int8 *)(v228 + v201[14]);
            if (v149 == 5) {
              return 70;
            }
            int v150 = *(unsigned __int8 *)(v228 + v73[14]);
            if (v150 != 1)
            {
              if (v150 != 4)
              {
                uint64_t result = 70;
                switch(*(unsigned char *)(v228 + v200))
                {
                  case 1:
                  case 3:
                  case 4:
                    return result;
                  case 2:
                    uint64_t v181 = (void (*)(char *, uint64_t, int *))v202;
                    if (v149 == 6)
                    {
                      ((void (*)(char *, uint64_t, int *))v202)(v209, v228, v204);
                    }
                    else
                    {
                      ((void (*)(char *, uint64_t, int *))v202)(v209, v228, v204);
                      if (!v149)
                      {
                        int v193 = v209[v201[15]];
                        v146();
                        if (v193) {
                          return 0;
                        }
                        goto LABEL_165;
                      }
                    }
                    ((void (*)(char *, int *))v146)(v209, v204);
LABEL_165:
                    uint64_t v184 = v204;
                    uint64_t v185 = v228;
                    BOOL v186 = sub_24DB86F3C((uint64_t)v204);
                    v181(v208, v185, v184);
                    if (v186)
                    {
                      int v187 = v208[v204[13] + v198[13]];
                      v146();
                      if ((v187 | 4) == 4) {
                        return 70;
                      }
                    }
                    else
                    {
                      ((void (*)(char *, int *))v146)(v208, v204);
                    }
                    if (*(void *)(v228 + v201[17] + 16) >> 60 != 11) {
                      return 0;
                    }
                    if (!*(unsigned char *)(v228 + v201[11])) {
                      return 70;
                    }
                    return 23;
                  default:
                    if (v150 != 2) {
                      return 0;
                    }
                    return 23;
                }
              }
              __break(1u);
              goto LABEL_185;
            }
            BOOL v151 = sub_24DB86F3C((uint64_t)v73);
            unint64_t v152 = v140;
            long long v153 = v140;
            long long v154 = (void (*)(char *, uint64_t, int *))v202;
            ((void (*)(char *, uint64_t, int *))v202)(v153, v148, v73);
            if (v151)
            {
              LODWORD(v226) = v152[v147[14]];
              v146();
              long long v155 = v211;
              v154(v211, v148, v73);
              if (v226 != 6)
              {
                int v156 = v155;
                uint64_t v157 = *(void *)&v155[v147[10]];
                ((void (*)(char *, int *))v146)(v156, v73);
                if (!v157) {
                  return 70;
                }
                return 0;
              }
            }
            else
            {
              ((void (*)(char *, int *))v146)(v152, v73);
              long long v155 = v211;
              v154(v211, v148, v73);
            }
            ((void (*)(char *, int *))v146)(v155, v73);
            return 0;
          }
          return 1;
        }
      }
      int v115 = v218;
      unint64_t v111 = v199;
      if ((v199 & 8) != 0) {
        unint64_t v111 = v199 & 0xFFFFFFFFFFFFFFF7;
      }
      goto LABEL_75;
    }
    if (!v91)
    {
LABEL_57:
      unint64_t v111 = 24;
LABEL_76:
      unint64_t v199 = v111;
      goto LABEL_77;
    }
    int v112 = *(unsigned __int8 *)(v228 + v73[14]);
    if ((v92 & 0x10000) != 0)
    {
      if (v112 != 1)
      {
        if (v112 == 4) {
          goto LABEL_186;
        }
        return 1;
      }
    }
    else if (v112 != 1)
    {
      if (v112 == 4)
      {
LABEL_185:
        __break(1u);
LABEL_186:
        __break(1u);
LABEL_187:
        __break(1u);
LABEL_188:
        __break(1u);
        JUMPOUT(0x24DB89D3CLL);
      }
      uint64_t v105 = 1876224;
      goto LABEL_72;
    }
    uint64_t v105 = 1876244;
LABEL_72:
    if (*(unsigned __int8 *)(v228 + v88) < 2u) {
      return 70;
    }
    unint64_t v111 = 16;
    goto LABEL_76;
  }
  if ((v75 & 0x51) == 0) {
    return 70;
  }
  if ((*(void *)(v69 + v201[9]) & 0x41) != 0x40)
  {
    if ((*(unsigned char *)(v70 + v71[9]) & 0x51) == 0)
    {
      BOOL v84 = sub_24DB86F3C((uint64_t)v73);
      if ((v75 & 0x10) != 0)
      {
        if (v84)
        {
          if (qword_26B199AA0 == -1) {
            return 2;
          }
          goto LABEL_176;
        }
        return 70;
      }
      if (v84)
      {
        if ((v75 & 2) != 0)
        {
          if (qword_26B199AA0 != -1) {
            swift_once();
          }
        }
        else if (qword_26B199AA0 != -1)
        {
          swift_once();
        }
        return 2;
      }
    }
LABEL_8:
    if (qword_26B199AA0 == -1) {
      return 2;
    }
LABEL_176:
    swift_once();
    return 2;
  }
  if (qword_26B199AA0 != -1) {
    swift_once();
  }
  return 12;
}

BOOL sub_24DB89D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v10)
  {
    unint64_t v11 = v7 & 0xFFFFDFFFFFFEF6E7;
    if (qword_26B199AA0 != -1) {
      swift_once();
    }
    uint64_t v7 = v11 & (qword_26B1A24C8 | 0x6409000000C000);
  }
  uint64_t v12 = *(void *)(v4 + *(int *)(a3 + 40)) & v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v4, a3);
  if (v12) {
    BOOL v13 = 1;
  }
  else {
    BOOL v13 = (v9[*(int *)(a3 + 36)] & 0x51) != 0;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a3);
  return v13;
}

uint64_t sub_24DB89ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, a2);
  uint64_t v9 = &v7[*(int *)(type metadata accessor for ItemReconciliationHalf() + 64)];
  if (!v9[16] && *(void *)v9 == 0x2000)
  {
    sub_24D3E380C((void *)0x2000, *((id *)v9 + 1), 0);
    *(void *)uint64_t v9 = 0;
    *((void *)v9 + 1) = 0;
    v9[16] = 1;
  }
  uint64_t v10 = *(int *)(a2 + 52);
  unint64_t v11 = &v7[v10 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 64)];
  if (!v11[16] && *(void *)v11 == 0x2000)
  {
    sub_24D3E380C((void *)0x2000, *((id *)v11 + 1), 0);
    *(void *)unint64_t v11 = 0;
    *((void *)v11 + 1) = 0;
    v11[16] = 1;
  }
  uint64_t v12 = sub_24DB8A1C8(v4, a2);
  if (!v2) {
    uint64_t v4 = v12;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a2);
  return v4;
}

BOOL sub_24DB8A0A8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ItemReconciliationHalf();
  BOOL v7 = sub_24DB90838(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  if (v7)
  {
    BOOL v8 = 1;
  }
  else
  {
    uint64_t v9 = type metadata accessor for ItemReconciliationHalf();
    BOOL v8 = sub_24DB90838(v9);
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
  return v8;
}

uint64_t sub_24DB8A1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v72 = (uint64_t *)a1;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v74 = *(void *)(a2 + 24);
  uint64_t v75 = v4;
  uint64_t v76 = v6;
  uint64_t v77 = v5;
  BOOL v7 = (int *)type metadata accessor for ItemReconciliation();
  uint64_t v69 = *((void *)v7 - 1);
  uint64_t v70 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v68 = (uint64_t)&v66 - v8;
  uint64_t v9 = *(int *)(a2 + 60);
  uint64_t v71 = v2;
  uint64_t v78 = *(void *)(v2 + v9);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = swift_getAssociatedConformanceWitness();
  uint64_t v74 = AssociatedTypeWitness;
  uint64_t v75 = v11;
  uint64_t v76 = AssociatedConformanceWitness;
  uint64_t v77 = v13;
  type metadata accessor for ReconciliationID();
  sub_24DCC9D48();
  swift_getWitnessTable();
  if ((sub_24DCC9FE8() & 1) == 0) {
    return 0x8000000000000001;
  }
  uint64_t v14 = (uint64_t)v72;
  uint64_t v15 = v73;
  uint64_t v16 = sub_24DB91FA0((uint64_t)v72, (int *)a2);
  if (v15) {
    return v11;
  }
  uint64_t v20 = v17;
  uint64_t v21 = v18;
  int v22 = v19;
  uint64_t v73 = v16;
  uint64_t v23 = v68;
  uint64_t v24 = sub_24DB864D4(a2, v68);
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(*(void *)v14 + 176))(v24);
  uint64_t v26 = v70;
  uint64_t v27 = sub_24DB91FA0(v25, v70);
  uint64_t v71 = v30;
  uint64_t v32 = v27;
  uint64_t v67 = v28;
  unsigned __int8 v33 = v29;
  (*(void (**)(uint64_t, int *))(v69 + 8))(v23, v26);
  swift_release();
  int v34 = v33 >> 6;
  if (v33 >> 6)
  {
    if (v34 == 1)
    {
      if ((v71 & 0x10) != 0)
      {
        sub_24DA89DC8(v73, v20, (uint64_t)v21, v22);
        return v32 | 0x4000000000000000;
      }
      int v35 = v32;
      if (v22 < 0x40u)
      {
        if ((_BYTE)v32)
        {
          uint64_t v36 = v73;
          if (v32 == 23 && (v22 & 1) == 0)
          {
            if (v21 == (void *)512)
            {
              uint64_t v37 = *v72;
              uint64_t v66 = v32;
              uint64_t v38 = *(int **)(v37 + 152);
              uint64_t v69 = v37 + 152;
              uint64_t v70 = v38;
              uint64_t v39 = v73;
              sub_24DAFF16C(v73, v20, (void *)0x200, v22);
              uint64_t v40 = v71;
              uint64_t v41 = (uint64_t)v67;
              id v42 = sub_24DAFF16C(v32, v71, v67, v33);
              uint64_t v43 = v41;
              __int16 v44 = ((uint64_t (*)(id))v70)(v42);
              sub_24DA89DC8(v39, v20, 512, v22);
              uint64_t v45 = v20;
              uint64_t v46 = v66;
              sub_24DA89DC8(v39, v45, 512, v22);
              sub_24DA89DC8(v46, v40, v41, v33);
              if ((v44 & 0x4000) != 0) {
                return 0x4000000000000017;
              }
              uint64_t v47 = v46;
              goto LABEL_52;
            }
LABEL_48:
            sub_24DA89DC8(v36, v20, (uint64_t)v21, v22);
            uint64_t v47 = v32;
            uint64_t v55 = v71;
            uint64_t v56 = (uint64_t)v67;
            goto LABEL_54;
          }
        }
        else
        {
          uint64_t v36 = v73;
          if ((v22 & 1) == 0)
          {
            if (v21 == (void *)512)
            {
              uint64_t v59 = *(uint64_t (**)(id))(*v72 + 152);
              uint64_t v60 = v73;
              sub_24DAFF16C(v73, v20, (void *)0x200, v22);
              uint64_t v66 = v32;
              id v61 = sub_24DAFF16C(v32, v71, v67, v33);
              LOWORD(v59) = v59(v61);
              sub_24DA89DC8(v60, v20, 512, v22);
              if (((unsigned __int16)v59 & 0x4000) == 0)
              {
                uint64_t v62 = v66;
                uint64_t v43 = (uint64_t)v67;
                uint64_t v63 = v71;
                sub_24DA89DC8(v66, v71, (uint64_t)v67, v33);
                sub_24DA89DC8(v60, v20, 512, v22);
                uint64_t v47 = v62;
                uint64_t v55 = v63;
LABEL_53:
                uint64_t v56 = v43;
                goto LABEL_54;
              }
              sub_24DA89DC8(v60, v20, 512, v22);
              uint64_t v64 = v66;
              uint64_t v43 = (uint64_t)v67;
              char v65 = v71;
              sub_24DA89DC8(v66, v71, (uint64_t)v67, v33);
              if ((v65 & 2) != 0) {
                return 0x4000000000000000;
              }
              uint64_t v47 = v64;
LABEL_52:
              uint64_t v55 = v71;
              goto LABEL_53;
            }
            goto LABEL_48;
          }
        }
        goto LABEL_29;
      }
      int v58 = v22 >> 6;
      goto LABEL_34;
    }
  }
  else if ((v22 & 0xC0) == 0x40)
  {
    uint64_t v36 = v73;
    if (v73 == 2 && (v33 & 1) == 0)
    {
      uint64_t v48 = (uint64_t)v67;
      if (v67 != (void *)2)
      {
        sub_24DA89DC8(v73, v20, (uint64_t)v21, v22);
        uint64_t v47 = v32;
        uint64_t v55 = v71;
        uint64_t v56 = v48;
LABEL_54:
        unsigned __int8 v57 = v33;
        goto LABEL_30;
      }
      uint64_t v49 = v71;
      uint64_t v50 = v32;
      char v51 = *(int **)(*v72 + 152);
      uint64_t v69 = *v72 + 152;
      uint64_t v70 = v51;
      sub_24DAFF16C(v73, v20, v21, v22);
      LODWORD(v68) = v22;
      uint64_t v11 = 2;
      id v52 = sub_24DAFF16C(v32, v49, (void *)2, v33);
      unsigned __int8 v53 = v68;
      __int16 v54 = ((uint64_t (*)(id))v70)(v52);
      sub_24DA89DC8(v50, v49, 2, v33);
      sub_24DA89DC8(v73, v20, (uint64_t)v21, v53);
      sub_24DA89DC8(v50, v49, 2, v33);
      if ((v54 & 0x4000) == 0)
      {
        uint64_t v47 = v73;
        uint64_t v55 = v20;
        uint64_t v56 = (uint64_t)v21;
        unsigned __int8 v57 = v53;
LABEL_30:
        sub_24DA89DC8(v47, v55, v56, v57);
        return 0x8000000000000001;
      }
      return v11;
    }
LABEL_29:
    sub_24DA89DC8(v36, v20, (uint64_t)v21, v22);
    uint64_t v47 = v32;
    uint64_t v55 = v71;
    uint64_t v56 = (uint64_t)v67;
    unsigned __int8 v57 = v33;
    goto LABEL_30;
  }
  if (v22 <= 0x3Fu || !(v33 >> 6))
  {
    uint64_t v36 = v73;
    goto LABEL_29;
  }
  int v58 = v22 >> 6;
  if (v34 != 2)
  {
    int v35 = v32;
LABEL_34:
    if (v58 == 2) {
      return v32 | 0x4000000000000000;
    }
    if ((_BYTE)v73)
    {
      if (v73 == 2 && v35 == 2)
      {
        sub_24DA89DC8(v73, v20, (uint64_t)v21, v22);
        sub_24DA89DC8(v32, v71, (uint64_t)v67, v33);
        return 0x8000000000000002;
      }
    }
    else if (!v35)
    {
      sub_24DAFF16C(v73, v20, v21, v22);
      sub_24DAFF16C(v32, v71, v67, v33);
      sub_24DA83AD8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/types/ItemReconciliation.swift", 126, 2, 1262);
    }
    sub_24DA89DC8(v32, v71, (uint64_t)v67, v33);
    return v73;
  }
  if (v58 != 2) {
    return v73;
  }
  return 0x8000000000000000;
}

BOOL sub_24DB8A958(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v17 - v8;
  BOOL v10 = sub_24DB86F3C(v7);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v11(v9, v1, a1);
  BOOL v12 = v10 && *(void *)&v9[*(int *)(type metadata accessor for ItemReconciliationHalf() + 36)] == 0;
  uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v9, a1);
  v11(v6, v1, a1);
  if (v12)
  {
    uint64_t v14 = &v6[*(int *)(a1 + 52)];
    BOOL v15 = *(void *)&v14[*(int *)(type metadata accessor for ItemReconciliationHalf() + 36)] == 0;
  }
  else
  {
    BOOL v15 = 0;
  }
  v13(v6, a1);
  return v15;
}

BOOL sub_24DB8AAF8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v26 - v8;
  if (qword_26B199AA0 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_26B1A24C8 | 0x10;
  uint64_t v11 = (int *)type metadata accessor for ItemReconciliationHalf();
  BOOL v12 = sub_24DB89D64(v10, 0, (uint64_t)v11);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v13(v9, v2, a1);
  if (!v12)
  {
    uint64_t v27 = v7;
    uint64_t v15 = type metadata accessor for ItemReconciliationHalf();
    BOOL v16 = sub_24DB89D64(v10, 0, v15);
    uint64_t v17 = v9;
    uint64_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
    v18(v17, a1);
    BOOL v14 = 0;
    if (v16) {
      return v14;
    }
    if (*(unsigned char *)(v2 + v11[13]) == 1
      || *(unsigned char *)(v2 + *(int *)(a1 + 52) + *(int *)(v15 + 52)) == 1
      || *(unsigned char *)(v2 + v11[11]) != 3
      || *(unsigned char *)(v2 + v11[14]) != 6)
    {
      return 0;
    }
    uint64_t v19 = v2 + v11[16];
    int v20 = *(unsigned __int8 *)(v19 + 16);
    if (v20 == 3)
    {
      int v22 = v27;
      v13(v27, v2, a1);
    }
    else
    {
      if (v20 != 4)
      {
        int v22 = v27;
        v13(v27, v2, a1);
        goto LABEL_21;
      }
      unint64_t v21 = *(void *)v19 & 0xFFFFFFFFFFFFFFFELL | *(void *)(v19 + 8);
      int v22 = v27;
      v13(v27, v2, a1);
      if (v21)
      {
LABEL_21:
        BOOL v14 = 0;
        goto LABEL_22;
      }
    }
    uint64_t v24 = &v22[*(int *)(a1 + 52) + (uint64_t)*(int *)(v15 + 64)];
    int v25 = v24[16];
    if (v25 == 3)
    {
      BOOL v14 = 1;
      goto LABEL_22;
    }
    if (v25 == 4)
    {
      BOOL v14 = (*(void *)v24 & 0xFFFFFFFFFFFFFFFELL | *((void *)v24 + 1)) == 0;
LABEL_22:
      v18(v22, a1);
      return v14;
    }
    goto LABEL_21;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, a1);
  return 0;
}

uint64_t sub_24DB8AE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v56 = *(void *)(a2 + 24);
  uint64_t v57 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v51 = sub_24DCCA3F8();
  uint64_t v58 = *(void *)(v51 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v51);
  uint64_t v60 = (char *)&v49 - v8;
  uint64_t v54 = AssociatedTypeWitness;
  uint64_t v53 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v50 = (char *)&v49 - v9;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_24DCCA3F8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v49 - v14;
  uint64_t v55 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v49 - v16;
  uint64_t v49 = *(void *)(a2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(a3, v59, a2);
  uint64_t v18 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v19 = a3;
  uint64_t v20 = *(int *)(v18 + 36);
  uint64_t v21 = *(void *)(a3 + v20);
  if ((v21 & 0x51) != 0)
  {
    uint64_t v22 = v61;
  }
  else
  {
    uint64_t v23 = v18;
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v59 = v19;
    v24(v15, v19, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v15, 1, v10) == 1)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      uint64_t v22 = v61;
      uint64_t v19 = v59;
    }
    else
    {
      uint64_t v25 = v55;
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v17, v15, v10);
      uint64_t v26 = v61;
      uint64_t v27 = sub_24D6E8128();
      if (v26)
      {
        (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v10);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 8))(v59, a2);
      }
      uint64_t v29 = v59;
      *(void *)(v59 + *(int *)(v23 + 40)) |= v27;
      if (v28) {
        *(void *)(v29 + v20) = v21 | 1;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v10);
      uint64_t v19 = v59;
      uint64_t v22 = 0;
    }
  }
  uint64_t v30 = v19 + *(int *)(a2 + 52);
  uint64_t v31 = v19;
  uint64_t result = type metadata accessor for ItemReconciliationHalf();
  uint64_t v33 = *(int *)(result + 36);
  uint64_t v34 = *(void *)(v30 + v33);
  uint64_t v35 = v58;
  uint64_t v36 = v60;
  if ((v34 & 0x51) != 0) {
    return result;
  }
  uint64_t v37 = result;
  uint64_t v61 = v22;
  uint64_t v59 = v31;
  uint64_t v38 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v60, v30, v51);
  uint64_t v39 = v53;
  uint64_t v40 = v36;
  uint64_t v41 = v54;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v40, 1, v54) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v60, v38);
  }
  id v42 = v50;
  uint64_t v43 = (*(uint64_t (**)(char *, char *, uint64_t))(v39 + 32))(v50, v60, v41);
  (*(void (**)(uint64_t))(*(void *)v52 + 176))(v43);
  uint64_t v44 = v61;
  uint64_t v45 = sub_24D6E8128();
  uint64_t v61 = v44;
  if (v44)
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v54);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 8))(v59, a2);
  }
  uint64_t v47 = v45;
  char v48 = v46;
  swift_release();
  *(void *)(v30 + *(int *)(v37 + 40)) |= v47;
  if (v48) {
    *(void *)(v30 + v33) = v34 | 1;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v50, v54);
}

BOOL sub_24DB8B3BC(char a1)
{
  return (a1 & 0xFB) == 0;
}

uint64_t sub_24DB8B3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v41 = a1;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v42 = *(void *)(a2 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_24DCCA3F8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v38 - v10;
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v38 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v43 = v3;
  v15(v11, v3, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, AssociatedTypeWitness) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  uint64_t v39 = a2;
  uint64_t v17 = v41;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, AssociatedTypeWitness);
  uint64_t v18 = v42;
  uint64_t v19 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v20 = v43;
  int v21 = *(unsigned __int8 *)(v43 + *(int *)(v19 + 64) + 16);
  uint64_t v40 = v14;
  if (v21 != 2)
  {
    uint64_t v27 = v48;
    uint64_t v23 = v17;
    goto LABEL_7;
  }
  uint64_t v22 = v14;
  uint64_t v38 = AssociatedTypeWitness;
  uint64_t v23 = v17;
  uint64_t v24 = *(void *)(v17 + 24);
  uint64_t v25 = v48;
  uint64_t v26 = (*(uint64_t (**)(char *))(*(void *)v24 + 256))(v22);
  uint64_t v27 = v25;
  if (!v25)
  {
    if (!v26)
    {
      uint64_t v28 = v39;
      uint64_t v33 = *(void *)(v39 + 24);
      uint64_t v34 = *(void *)(v39 + 40);
      uint64_t v44 = v5;
      uint64_t v45 = v33;
      uint64_t v46 = v18;
      uint64_t v47 = v34;
      uint64_t v35 = type metadata accessor for Ingestion.DeleteRejectedItemInTree();
      char v36 = (*(uint64_t (**)(char *, uint64_t, void))(*(void *)v24 + 288))(v40, v35, 0);
      uint64_t AssociatedTypeWitness = v38;
      if ((v36 & 1) == 0)
      {
LABEL_19:
        sub_24D4A5DD0();
        swift_allocError();
        *(void *)uint64_t v37 = 1;
        *(_OWORD *)(v37 + 8) = 0u;
        *(_OWORD *)(v37 + 24) = 0u;
        *(void *)(v37 + 40) = 0;
        *(unsigned char *)(v37 + 48) = 9;
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v40, AssociatedTypeWitness);
      }
LABEL_8:
      if (*(unsigned char *)(v20 + *(int *)(v19 + 52)) != 1) {
        return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v40, AssociatedTypeWitness);
      }
      uint64_t v29 = *(void *)(v28 + 24);
      uint64_t v30 = *(void *)(v28 + 40);
      if (*(unsigned char *)(v20 + *(int *)(v28 + 56)) == 1)
      {
        uint64_t v44 = v5;
        uint64_t v45 = v29;
        uint64_t v46 = v18;
        uint64_t v47 = v30;
        uint64_t ChildrenMetadata = type metadata accessor for Ingestion.FetchChildrenMetadata();
      }
      else
      {
        uint64_t v44 = v5;
        uint64_t v45 = v29;
        uint64_t v46 = v18;
        uint64_t v47 = v30;
        uint64_t ChildrenMetadata = type metadata accessor for Ingestion.FetchContent();
      }
      char v32 = (*(uint64_t (**)(char *, uint64_t, void))(**(void **)(v23 + 24) + 288))(v40, ChildrenMetadata, 0);
      if (v27 || (v32 & 1) != 0) {
        return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v40, AssociatedTypeWitness);
      }
      goto LABEL_19;
    }
    swift_release();
    uint64_t AssociatedTypeWitness = v38;
LABEL_7:
    uint64_t v28 = v39;
    goto LABEL_8;
  }
  uint64_t AssociatedTypeWitness = v38;
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v40, AssociatedTypeWitness);
}

uint64_t sub_24DB8B7E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  swift_getAssociatedTypeWitness();
  uint64_t v21 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(a9, a1, v21);
  uint64_t v22 = (int *)type metadata accessor for ItemReconciliationHalf();
  *(void *)(a9 + v22[9]) = a2;
  *(void *)(a9 + v22[10]) = a3;
  *(unsigned char *)(a9 + v22[11]) = a4;
  uint64_t v23 = a9 + v22[12];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v24 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v23, a5, v24);
  *(unsigned char *)(a9 + v22[13]) = a6;
  *(unsigned char *)(a9 + v22[14]) = a7;
  *(unsigned char *)(a9 + v22[15]) = a8;
  uint64_t v25 = a9 + v22[16];
  *(void *)uint64_t v25 = a10;
  *(void *)(v25 + 8) = a11;
  *(unsigned char *)(v25 + 16) = a12;
  uint64_t result = sub_24D3F0BA0(a13, a9 + v22[17], qword_26B197140);
  *(void *)(a9 + v22[18]) = a14;
  *(void *)(a9 + v22[19]) = a15;
  return result;
}

uint64_t sub_24DB8BA58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v16 = type metadata accessor for ItemReconciliationHalf();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(a9, a1, v16);
  uint64_t v17 = (int *)type metadata accessor for ItemReconciliation();
  uint64_t v18 = a9 + v17[13];
  uint64_t v19 = type metadata accessor for ItemReconciliationHalf();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a2, v19);
  *(unsigned char *)(a9 + v17[14]) = a3;
  *(void *)(a9 + v17[15]) = a4;
  uint64_t v21 = (void *)(a9 + v17[16]);
  void *v21 = a5;
  v21[1] = a6;
  *(void *)(a9 + v17[17]) = a7;
  *(unsigned char *)(a9 + v17[18]) = a8;
  *(void *)(a9 + v17[19]) = a10;
  return result;
}

BOOL sub_24DB8BBBC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v86 = *(void *)(a1 + 24);
  uint64_t v87 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v85 = sub_24DCCA3F8();
  uint64_t v83 = *(void *)(v85 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v85);
  uint64_t v7 = (char *)&v73 - v6;
  uint64_t v8 = *(void *)(a1 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v5);
  uint64_t v75 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v74 = (char *)&v73 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v81 = (char *)&v73 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  unint64_t v80 = (char *)&v73 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v79 = (char *)&v73 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v78 = (char *)&v73 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v73 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v73 - v24;
  uint64_t v26 = *(void *)(a1 + 32);
  uint64_t v76 = *(void *)(a1 + 16);
  uint64_t v77 = v26;
  uint64_t v27 = swift_getAssociatedTypeWitness();
  uint64_t v28 = sub_24DCCA3F8();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v73 - v30;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))((char *)&v73 - v30, v2, v28);
  LODWORD(v27) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v31, 1, v27);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  char v32 = v2;
  uint64_t v88 = v8;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v33(v25, (uint64_t)v2, a1);
  if (v27 == 1
    && (uint64_t v34 = *(int *)(a1 + 52),
        uint64_t v35 = &v25[v34 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 64)],
        !v35[16]))
  {
    uint64_t v67 = *(void *)v35;
    uint64_t v82 = *(void (**)(char *, uint64_t))(v88 + 8);
    v82(v25, a1);
    if ((v67 & 2) != 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v82 = *(void (**)(char *, uint64_t))(v88 + 8);
    v82(v25, a1);
  }
  char v36 = &v2[*(int *)(a1 + 52)];
  uint64_t v37 = v83;
  uint64_t v38 = v85;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v7, &v32[*(int *)(a1 + 52)], v85);
  int v39 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v7, 1);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v38);
  uint64_t v40 = (void (*)(char *, char *, uint64_t))v33;
  v33(v23, (uint64_t)v32, a1);
  if (v39 == 1)
  {
    uint64_t v41 = &v23[*(int *)(a1 + 52)];
    uint64_t v42 = (int *)type metadata accessor for ItemReconciliationHalf();
    uint64_t v43 = *(void *)&v41[v42[9]];
    uint64_t v44 = v78;
    v40(v78, v23, a1);
    if ((v43 & 0x10) != 0)
    {
      uint64_t v56 = v82;
      v82(v44, a1);
      v56(v23, a1);
      return 0;
    }
    uint64_t v45 = *(void *)&v44[*(int *)(type metadata accessor for ItemReconciliationHalf() + 36)];
    uint64_t v46 = v44;
    uint64_t v47 = (void (*)(void))v82;
    v82(v46, a1);
    uint64_t v48 = v23;
    uint64_t v49 = v47;
    ((void (*)(char *, uint64_t))v47)(v48, a1);
    if ((v45 & 0x10) != 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v50 = v23;
    uint64_t v49 = (void (*)(void))v82;
    v82(v50, a1);
    uint64_t v42 = (int *)type metadata accessor for ItemReconciliationHalf();
  }
  uint64_t v51 = &v36[v42[16]];
  int v52 = v51[16];
  if (v52 == 3)
  {
    uint64_t v54 = v79;
    v40(v79, v32, a1);
    uint64_t v53 = v81;
LABEL_15:
    BOOL v58 = *(void *)&v54[*(int *)(a1 + 52) + v42[10]] != 0;
    goto LABEL_18;
  }
  uint64_t v53 = v81;
  uint64_t v54 = v79;
  if (v52 == 4)
  {
    unint64_t v55 = *(void *)v51 & 0xFFFFFFFFFFFFFFFELL | *((void *)v51 + 1);
    v40(v79, v32, a1);
    if (!v55) {
      goto LABEL_15;
    }
  }
  else
  {
    v40(v79, v32, a1);
  }
  BOOL v58 = 1;
LABEL_18:
  ((void (*)(char *, uint64_t))v49)(v54, a1);
  uint64_t v59 = v80;
  v40(v80, v32, a1);
  if (v58)
  {
    uint64_t v60 = v59;
LABEL_34:
    ((void (*)(char *, uint64_t))v49)(v60, a1);
    return 1;
  }
  uint64_t v61 = *(void *)&v59[*(int *)(a1 + 52) + v42[9]];
  ((void (*)(char *, uint64_t))v49)(v59, a1);
  if (!v61)
  {
    uint64_t v62 = (int *)type metadata accessor for ItemReconciliationHalf();
    uint64_t v63 = &v32[v62[16]];
    int v64 = v63[16];
    if (v64 != 3)
    {
      if (v64 == 4)
      {
        unint64_t v65 = *(void *)v63 & 0xFFFFFFFFFFFFFFFELL | *((void *)v63 + 1);
        v40(v53, v32, a1);
        uint64_t v66 = v74;
        if (!v65)
        {
LABEL_28:
          uint64_t v68 = *(void *)&v53[v62[10]];
          ((void (*)(char *, uint64_t))v49)(v53, a1);
          v40(v66, v32, a1);
          if (!v68)
          {
            uint64_t v69 = *(void *)&v66[v62[9]];
            ((void (*)(char *, uint64_t))v49)(v66, a1);
            uint64_t v70 = v75;
            v40(v75, v32, a1);
            uint64_t v60 = v70;
            if (!v69)
            {
              int v71 = v70[v62[11]];
              v49();
              return v71 == 0;
            }
            goto LABEL_34;
          }
          goto LABEL_33;
        }
      }
      else
      {
        v40(v53, v32, a1);
        uint64_t v66 = v74;
      }
      ((void (*)(char *, uint64_t))v49)(v53, a1);
      v40(v66, v32, a1);
LABEL_33:
      ((void (*)(char *, uint64_t))v49)(v66, a1);
      uint64_t v72 = v75;
      v40(v75, v32, a1);
      uint64_t v60 = v72;
      goto LABEL_34;
    }
    v40(v53, v32, a1);
    uint64_t v66 = v74;
    goto LABEL_28;
  }
  return 1;
}

void sub_24DB8C428(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v265 = a4;
  id v313 = a3;
  v308 = a2;
  uint64_t v259 = a1;
  v269 = a6;
  uint64_t v7 = sub_24DCC8288();
  MEMORY[0x270FA5388](v7 - 8);
  v255 = (char *)&v243 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC82A8();
  uint64_t v256 = *(void *)(v9 - 8);
  uint64_t v257 = v9;
  MEMORY[0x270FA5388](v9);
  v254 = (char *)&v243 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a5[5];
  uint64_t v12 = a5[3];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v315 = a5;
  uint64_t v14 = a5[4];
  uint64_t v15 = a5[2];
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v250 = v12;
  uint64_t v251 = v11;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v276 = v15;
  uint64_t v277 = v14;
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v319 = AssociatedTypeWitness;
  uint64_t v320 = v16;
  uint64_t v321 = AssociatedConformanceWitness;
  uint64_t v322 = v18;
  uint64_t v19 = type metadata accessor for ThrottlingKey();
  uint64_t v249 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  v282 = (char *)&v243 - v20;
  uint64_t v293 = v21;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v284 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  v252 = (char *)&v243 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v287 = (char *)&v243 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v310 = (char *)&v243 - v27;
  uint64_t v248 = v28;
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  v285 = (char *)&v243 - v30;
  uint64_t v274 = *(v315 - 1);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  v268 = (char *)&v243 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  v258 = (char *)&v243 - v33;
  uint64_t v304 = sub_24DCCA3F8();
  uint64_t v272 = *(void *)(v304 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v304);
  v273 = (char *)&v243 - v35;
  uint64_t v303 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v34);
  v302 = (char *)&v243 - v36;
  uint64_t v319 = v16;
  uint64_t v306 = AssociatedTypeWitness;
  uint64_t v320 = AssociatedTypeWitness;
  uint64_t v288 = v18;
  uint64_t v289 = AssociatedConformanceWitness;
  uint64_t v321 = v18;
  uint64_t v322 = AssociatedConformanceWitness;
  uint64_t v37 = type metadata accessor for ThrottlingKey();
  v314 = *(void (***)(void, void, void))(v37 - 8);
  MEMORY[0x270FA5388](v37);
  v292 = (char *)&v243 - v38;
  uint64_t v316 = v39;
  uint64_t v40 = swift_getTupleTypeMetadata2();
  v295 = *(char **)(v40 - 8);
  v296 = (char **)v40;
  uint64_t v41 = (char *)*((void *)v295 + 8);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  v275 = (char *)&v243 - ((unint64_t)(v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x270FA5388](v42);
  v253 = (char *)&v243 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  v297 = (char *)&v243 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  v294 = (char *)&v243 - v48;
  MEMORY[0x270FA5388](v47);
  v311 = (char *)&v243 - v49;
  uint64_t v50 = sub_24DCCA3F8();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v54 = (char *)&v243 - v53;
  unint64_t v55 = *(char **)(v16 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v57 = (char *)&v243 - v56;
  char v326 = 1;
  char v325 = 1;
  BOOL v58 = (char *)v305;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v54, (char *)v305, v50);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v55 + 6))(v54, 1, v16) == 1)
  {
    uint64_t v283 = v16;
    id v59 = v313;
    id v60 = v313;
    id v61 = v59;
    uint64_t v62 = v308;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v54, v50);
  }
  else
  {
    (*((void (**)(char *, char *, uint64_t))v55 + 4))(v57, v54, v16);
    id v63 = v313;
    id v64 = v313;
    id v65 = v63;
    if (!v308)
    {
      if (qword_26B199AA0 != -1) {
        goto LABEL_100;
      }
      goto LABEL_17;
    }
    uint64_t v66 = v308;
    uint64_t v67 = (void (*)(void, void))*((void *)v55 + 1);
    uint64_t v283 = v16;
    v67(v57, v16);
  }
  v270 = 0;
  v271 = 0;
  int v266 = 2;
  int v267 = 70;
  uint64_t v68 = v306;
  uint64_t v41 = v302;
  uint64_t v69 = v303;
  uint64_t v70 = v304;
  int v71 = v315;
  while (2)
  {
    uint64_t v72 = v58;
    uint64_t v73 = (uint64_t)&v58[*((int *)v71 + 13)];
    uint64_t v74 = v272;
    uint64_t v75 = v273;
    (*(void (**)(char *, char *, uint64_t))(v272 + 16))(v273, (char *)v73, v70);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v75, 1, v68) == 1)
    {

      (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v70);
LABEL_10:
      uint64_t v77 = 0;
      v295 = 0;
      char v78 = 2;
      char v79 = 70;
      unint64_t v80 = v72;
      unint64_t v55 = (char *)v315;
      goto LABEL_11;
    }
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v41, v75, v68);
    id v76 = v313;

    if (v76)
    {
      (*(void (**)(char *, uint64_t))(v69 + 8))(v41, v68);
      goto LABEL_10;
    }
    unint64_t v80 = v72;
    if (qword_26B199AA0 != -1) {
      swift_once();
    }
    uint64_t v98 = qword_26B1A24C8 | 0x10;
    uint64_t v99 = type metadata accessor for ItemReconciliationHalf();
    BOOL v100 = sub_24DB89D64(v98, 0, v99);
    uint64_t v101 = v274;
    int v102 = v72;
    unint64_t v55 = (char *)v315;
    (*(void (**)(char *, char *, void *))(v274 + 16))(v258, v102, v315);
    if (v100)
    {
      (*(void (**)(char *, char *))(v101 + 8))(v258, v55);
      uint64_t v103 = 70;
    }
    else
    {
      int v109 = v258[*(int *)(type metadata accessor for ItemReconciliationHalf() + 44)];
      (*(void (**)(void))(v101 + 8))();
      if (v109 == 3) {
        uint64_t v103 = 3;
      }
      else {
        uint64_t v103 = 70;
      }
    }
    uint64_t v110 = v306;
    uint64_t v111 = v286;
    uint64_t v112 = (*(uint64_t (**)(char *, uint64_t))(**(void **)(v259 + 24) + 336))(v41, v103);
    uint64_t v113 = v111;
    uint64_t v57 = (char *)TupleTypeMetadata2;
    if (v111)
    {
      (*(void (**)(char *, uint64_t))(v69 + 8))(v41, v110);
      uint64_t v97 = v308;
      id v96 = v313;
      goto LABEL_33;
    }
LABEL_74:
    uint64_t v286 = v113;
    v292 = (char *)v112;
    if (!MEMORY[0x253327DC0](v112, v57))
    {
      v275 = 0;
      id v313 = 0;
      v295 = 0;
      LODWORD(v279) = 2;
      LODWORD(v278) = 70;
LABEL_98:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v41, v306);
      char v78 = v279;
      char v79 = (char)v278;
      uint64_t v77 = v275;
LABEL_11:
      uint64_t v81 = v274;
      uint64_t v82 = v268;
      (*(void (**)(char *, char *, char *))(v274 + 16))(v268, v80, v55);
      uint64_t v83 = (uint64_t)v308;
      if (v308 || (v265 & 1) == 0)
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 8))(v82, v55, v277);
      }
      else
      {
        uint64_t v84 = *(int *)(type metadata accessor for ItemReconciliationHalf() + 76);
        uint64_t v85 = v82;
        uint64_t v86 = *(void *)&v82[v84];
        (*(void (**)(char *, char *))(v81 + 8))(v85, v55);
        if (v86)
        {
          sub_24DCC81B8();
          sub_24D5F77E0(MEMORY[0x263F8EE78]);
          sub_24D4A4604();
          uint64_t v87 = v77;
          uint64_t v88 = v254;
          uint64_t v89 = v257;
          sub_24DCC8808();
          uint64_t v83 = sub_24DCC8128();
          uint64_t v90 = v88;
          uint64_t v77 = v87;
          (*(void (**)(char *, uint64_t))(v256 + 8))(v90, v89);
        }
        else
        {
          uint64_t v83 = 0;
        }
      }
      uint64_t v104 = v295;
      char v105 = v326;
      char v106 = v325;
      int v107 = v269;
      int v108 = v270;
      uint64_t *v269 = v83;
      v107[1] = (uint64_t)v108;
      *((unsigned char *)v107 + 16) = v267;
      *((unsigned char *)v107 + 17) = v266;
      v107[3] = (uint64_t)v271;
      *((unsigned char *)v107 + 32) = v105;
      v107[5] = (uint64_t)v313;
      v107[6] = (uint64_t)v77;
      *((unsigned char *)v107 + 56) = v79;
      *((unsigned char *)v107 + 57) = v78;
      v107[8] = (uint64_t)v104;
      *((unsigned char *)v107 + 72) = v106;
      return;
    }
    uint64_t v16 = 0;
    v275 = 0;
    id v313 = 0;
    v290 = &v285[*((int *)v57 + 12)];
    v291 = (char *)(v284 + 16);
    v295 = 0;
    v296 = (char **)(v249 + 16);
    v294 = (char *)(v249 + 8);
    v280 = (char *)(v284 + 8);
    v281 = (void (**)(char *, char *, uint64_t))(v249 + 32);
    LODWORD(v279) = 2;
    LODWORD(v278) = 70;
    uint64_t v184 = v292;
    while (1)
    {
      char v187 = sub_24DCC9CB8();
      sub_24DCC9C68();
      unint64_t v188 = v57;
      if (v187)
      {
        uint64_t v57 = v285;
        (*(void (**)(char *, char *, char *))(v284 + 16))(v285, &v184[((*(unsigned __int8 *)(v284 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v284 + 80))+ *(void *)(v284 + 72) * v16], v188);
        uint64_t v41 = v310;
      }
      else
      {
        uint64_t v242 = sub_24DCCA778();
        uint64_t v41 = v310;
        uint64_t v57 = v285;
        if (v248 != 8) {
          goto LABEL_102;
        }
        uint64_t v319 = v242;
        (*(void (**)(char *, uint64_t *, char *))v291)(v285, &v319, v188);
        swift_unknownObjectRelease();
      }
      if (__OFADD__(v16, 1)) {
        break;
      }
      uint64_t v301 = v16 + 1;
      uint64_t v304 = v16;
      LODWORD(v299) = *v290;
      v314 = (void (**)(void, void, void))*((void *)v290 + 1);
      unint64_t v189 = (char *)*((void *)v290 + 3);
      v312 = (char *)*((void *)v290 + 2);
      v307 = v189;
      uint64_t v190 = (char *)*((void *)v290 + 5);
      v311 = (char *)*((void *)v290 + 4);
      uint64_t v191 = v311;
      v300 = v190;
      unsigned __int8 v192 = v290[48];
      int v327 = v192;
      uint64_t v193 = *((void *)v290 + 8);
      uint64_t v309 = *((void *)v290 + 7);
      uint64_t v316 = v193;
      uint64_t v194 = v57;
      unint64_t v195 = v188;
      uint64_t v196 = &v41[*((int *)v188 + 12)];
      uint64_t v197 = v293;
      (*v281)(v41, v194, v293);
      int v198 = v299;
      *uint64_t v196 = v299;
      unint64_t v199 = v312;
      *((void *)v196 + 1) = v314;
      *((void *)v196 + 2) = v199;
      *((void *)v196 + 3) = v189;
      *((void *)v196 + 4) = v191;
      uint64_t v200 = v300;
      *((void *)v196 + 5) = v300;
      v196[48] = v192;
      uint64_t v201 = v309;
      uint64_t v202 = v316;
      *((void *)v196 + 7) = v309;
      *((void *)v196 + 8) = v202;
      v203 = v287;
      unint64_t v204 = &v287[*((int *)v195 + 12)];
      v297 = *v296;
      ((void (*)(char *, char *, uint64_t))v297)(v287, v41, v197);
      *unint64_t v204 = v198;
      unint64_t v205 = v312;
      *((void *)v204 + 1) = v314;
      *((void *)v204 + 2) = v205;
      v206 = v311;
      *((void *)v204 + 3) = v307;
      *((void *)v204 + 4) = v206;
      uint64_t v207 = v316;
      *((void *)v204 + 5) = v200;
      v204[48] = v327;
      *((void *)v204 + 7) = v201;
      *((void *)v204 + 8) = v207;
      id v208 = v200;
      size_t v209 = *(char **)v294;
      swift_bridgeObjectRetain();
      uint64_t v210 = v197;
      ((void (*)(char *, uint64_t))v209)(v203, v197);
      if (v198 == 1)
      {
        uint64_t v211 = v282;
        uint64_t v212 = v310;
        uint64_t v213 = v297;
        ((void (*)(char *, char *, uint64_t))v297)(v282, v310, v210);
        uint64_t v319 = v306;
        uint64_t v320 = v283;
        uint64_t v321 = v289;
        uint64_t v322 = v288;
        uint64_t v214 = type metadata accessor for ReconciliationID();
        unsigned int v215 = v211[*(int *)(swift_getTupleTypeMetadata2() + 48)];
        if (v215 > 0x17 || ((1 << v215) & 0x80004F) == 0)
        {
          uint64_t v185 = (char *)TupleTypeMetadata2;
          (*(void (**)(char *, uint64_t))v280)(v212, TupleTypeMetadata2);

          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(*(void *)(v214 - 8) + 8))(v282, v214);
          goto LABEL_78;
        }
        uint64_t v216 = (void (*)(void, void, void))v213;
        uint64_t v217 = v209;
        (*(void (**)(char *, uint64_t))(*(void *)(v214 - 8) + 8))(v282, v214);
        uint64_t v185 = (char *)TupleTypeMetadata2;
        uint64_t v218 = v200;
        if (!v313)
        {
          uint64_t v219 = v216;
          v220 = v252;
          v221 = &v252[*(int *)(TupleTypeMetadata2 + 48)];
          uint64_t v222 = v293;
          v219(v252, v212, v293);
          char *v221 = 1;
          uint64_t v223 = v312;
          *((void *)v221 + 1) = v314;
          *((void *)v221 + 2) = v223;
          uint64_t v224 = v311;
          *((void *)v221 + 3) = v307;
          *((void *)v221 + 4) = v224;
          *((void *)v221 + 5) = v218;
          v221[48] = v327;
          uint64_t v225 = v316;
          *((void *)v221 + 7) = v309;
          *((void *)v221 + 8) = v225;
          if (v218)
          {
            id v226 = v218;
            ((void (*)(char *, uint64_t))v217)(v220, v222);
            swift_getErrorValue();
            if (sub_24D5030C8(v324))
            {
              uint64_t v185 = (char *)TupleTypeMetadata2;
              (*(void (**)(char *, uint64_t))v280)(v212, TupleTypeMetadata2);

              swift_bridgeObjectRelease();
              id v313 = 0;
            }
            else
            {
              id v227 = v218;

              uint64_t v228 = v287;
              uint64_t v229 = &v287[*(int *)(TupleTypeMetadata2 + 48)];
              v273 = v217;
              ((void (*)(char *, char *, uint64_t))v297)(v287, v212, v222);
              char *v229 = 1;
              uint64_t v230 = v312;
              *((void *)v229 + 1) = v314;
              *((void *)v229 + 2) = v230;
              uint64_t v231 = v307;
              uint64_t v232 = v311;
              *((void *)v229 + 3) = v307;
              *((void *)v229 + 4) = v232;
              *((void *)v229 + 5) = v218;
              v229[48] = v327;
              uint64_t v233 = v316;
              *((void *)v229 + 7) = v309;
              *((void *)v229 + 8) = v233;
              ((void (*)(char *, uint64_t))v217)(v228, v222);
              v234 = &v228[*(int *)(TupleTypeMetadata2 + 48)];
              ((void (*)(char *, char *, uint64_t))v297)(v228, v310, v222);
              char *v234 = 1;
              v235 = v312;
              *((void *)v234 + 1) = v314;
              *((void *)v234 + 2) = v235;
              v236 = v311;
              *((void *)v234 + 3) = v231;
              *((void *)v234 + 4) = v236;
              v237 = v218;
              *((void *)v234 + 5) = v218;
              v234[48] = v327;
              *((void *)v234 + 7) = v309;
              *((void *)v234 + 8) = v233;
              LODWORD(v278) = sub_24DA7BE30(v222);

              ((void (*)(char *, uint64_t))v273)(v228, v222);
              uint64_t v185 = (char *)TupleTypeMetadata2;
              v238 = &v228[*(int *)(TupleTypeMetadata2 + 48)];
              v239 = v310;
              ((void (*)(char *, char *, uint64_t))v297)(v228, v310, v222);
              (*(void (**)(char *, char *))v280)(v239, v185);

              uint64_t v240 = v316;
              swift_bridgeObjectRelease();
              LODWORD(v279) = 1;
              char *v238 = 1;
              *((void *)v238 + 1) = v314;
              *((void *)v238 + 2) = v235;
              v241 = v311;
              *((void *)v238 + 3) = v307;
              *((void *)v238 + 4) = v241;
              *((void *)v238 + 5) = v237;
              v238[48] = v327;
              *((void *)v238 + 7) = v309;
              *((void *)v238 + 8) = v240;
              char v325 = 0;
              ((void (*)(char *, uint64_t))v273)(v228, v222);
              v275 = v235;
              id v313 = v237;
              v295 = v241;
            }
          }
          else
          {
            (*(void (**)(char *, char *))v280)(v212, v185);

            swift_bridgeObjectRelease();
            ((void (*)(char *, uint64_t))v217)(v220, v222);
            id v313 = 0;
          }
          goto LABEL_78;
        }
        (*(void (**)(char *, uint64_t))v280)(v212, TupleTypeMetadata2);
      }
      else
      {
        uint64_t v185 = (char *)TupleTypeMetadata2;
        (*(void (**)(char *, uint64_t))v280)(v310, TupleTypeMetadata2);
      }
      swift_bridgeObjectRelease();
LABEL_78:
      uint64_t v184 = v292;
      uint64_t v186 = MEMORY[0x253327DC0](v292, v185);
      unint64_t v80 = (char *)v305;
      uint64_t v16 = v304 + 1;
      uint64_t v41 = v302;
      unint64_t v55 = (char *)v315;
      uint64_t v57 = v185;
      uint64_t v69 = v303;
      if (v301 == v186) {
        goto LABEL_98;
      }
    }
    __break(1u);
LABEL_100:
    swift_once();
LABEL_17:
    uint64_t v91 = qword_26B1A24C8 | 0x10;
    uint64_t v92 = type metadata accessor for ItemReconciliationHalf();
    if (sub_24DB89D64(v91, 0, v92)) {
      uint64_t v93 = 70;
    }
    else {
      uint64_t v93 = 3;
    }
    uint64_t v94 = v286;
    uint64_t v95 = (*(uint64_t (**)(char *, uint64_t))(**(void **)(v259 + 24) + 344))(v57, v93);
    if (v94)
    {
      (*((void (**)(char *, uint64_t))v55 + 1))(v57, v16);
      id v96 = v313;

      uint64_t v97 = 0;
LABEL_33:

      return;
    }
    uint64_t v69 = v95;
    v245 = v55;
    uint64_t v246 = v92;
    v244 = v57;
    uint64_t v283 = v16;
    BOOL v114 = v296;
    uint64_t v115 = MEMORY[0x253327DC0](v95, v296);
    uint64_t v286 = 0;
    if (!v115)
    {
      v270 = 0;
      v271 = 0;
      v308 = 0;
      int v266 = 2;
      int v267 = 70;
      uint64_t v70 = v304;
LABEL_96:
      swift_bridgeObjectRelease();
      (*((void (**)(char *, uint64_t))v245 + 1))(v244, v283);
      int v71 = v315;
      BOOL v58 = (char *)v305;
      uint64_t v68 = v306;
      uint64_t v41 = v302;
      uint64_t v69 = v303;
      continue;
    }
    break;
  }
  v243 = v41;
  unint64_t v80 = 0;
  v270 = 0;
  v271 = 0;
  v308 = 0;
  v261 = &v311[*((int *)v114 + 12)];
  unint64_t v55 = v294;
  v262 = (void (**)(char *, char *, uint64_t))(v314 + 4);
  v263 = (void (**)(char *, uint64_t *, char **))(v295 + 16);
  v291 = (char *)(v314 + 2);
  v281 = (void (**)(char *, char *, uint64_t))(v314 + 1);
  v260 = (void (**)(char *, char **))(v295 + 8);
  int v266 = 2;
  int v267 = 70;
  uint64_t v264 = v69;
  while (2)
  {
    uint64_t v113 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v113)
    {
      uint64_t v112 = (*((uint64_t (**)(char *, unint64_t, char **))v295 + 2))(v311, v69+ ((v295[80] + 32) & ~(unint64_t)v295[80])+ *((void *)v295 + 9) * (void)v80, v114);
      uint64_t v118 = (uint64_t)(v80 + 1);
      if (__OFADD__(v80, 1)) {
        goto LABEL_73;
      }
      goto LABEL_40;
    }
    uint64_t v183 = sub_24DCCA778();
    if (v243 == (char *)8)
    {
      uint64_t v113 = v183;
      uint64_t v319 = v183;
      (*v263)(v311, &v319, v114);
      uint64_t v112 = swift_unknownObjectRelease();
      uint64_t v118 = (uint64_t)(v80 + 1);
      if (__OFADD__(v80, 1))
      {
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
LABEL_40:
      v300 = v80;
      uint64_t v301 = v118;
      uint64_t v119 = v114;
      char v120 = *v261;
      LODWORD(v299) = *v261;
      uint64_t v121 = (char *)*((void *)v261 + 2);
      uint64_t v309 = *((void *)v261 + 1);
      uint64_t v122 = v309;
      uint64_t v123 = *((void *)v261 + 3);
      uint64_t v57 = (char *)*((void *)v261 + 4);
      v312 = (char *)*((void *)v261 + 5);
      int v327 = v261[48];
      unint64_t v124 = (char *)*((void *)v261 + 8);
      v314 = (void (**)(void, void, void))*((void *)v261 + 7);
      v307 = v124;
      uint64_t v125 = &v55[*((int *)v119 + 12)];
      (*v262)(v55, v311, v316);
      *uint64_t v125 = v120;
      *((void *)v125 + 1) = v122;
      *((void *)v125 + 2) = v121;
      *((void *)v125 + 3) = v123;
      *((void *)v125 + 4) = v57;
      *((void *)v125 + 5) = v312;
      char v126 = v327;
      v125[48] = v327;
      uint64_t v41 = v307;
      *((void *)v125 + 7) = v314;
      *((void *)v125 + 8) = v41;
      uint64_t v127 = *((int *)v119 + 12);
      uint64_t v128 = v297;
      unsigned int v129 = &v297[v127];
      v290 = *(char **)v291;
      ((void (*)(char *, char *, uint64_t))v290)(v297, v55, v316);
      int v130 = v299;
      char *v129 = v299;
      *((void *)v129 + 1) = v309;
      *((void *)v129 + 2) = v121;
      uint64_t v279 = v123;
      v280 = v121;
      *((void *)v129 + 3) = v123;
      *((void *)v129 + 4) = v57;
      v278 = v57;
      unsigned int v131 = v312;
      *((void *)v129 + 5) = v312;
      v129[48] = v126;
      *((void *)v129 + 7) = v314;
      *((void *)v129 + 8) = v41;
      uint64_t v132 = v41;
      unsigned int v133 = v131;
      uint64_t v134 = *v281;
      swift_bridgeObjectRetain();
      ((void (*)(char *, uint64_t))v134)(v128, v316);
      if (v130 != 1)
      {
        unint64_t v55 = v294;
        BOOL v114 = v296;
        (*v260)(v294, v296);

        swift_bridgeObjectRelease();
        uint64_t v69 = v264;
        uint64_t v116 = v300;
        goto LABEL_37;
      }
      uint64_t v41 = v131;
      BOOL v114 = v296;
      uint64_t v57 = v291;
      BOOL v135 = v292;
      unint64_t v55 = v294;
      uint64_t v136 = (void (*)(void))v290;
      ((void (*)(char *, char *, uint64_t))v290)(v292, v294, v316);
      uint64_t v319 = v283;
      uint64_t v320 = v306;
      uint64_t v321 = v288;
      uint64_t v322 = v289;
      uint64_t v299 = type metadata accessor for ReconciliationID();
      unsigned int v137 = v135[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      if (v137 >= 4 && v137 != 6)
      {
        v247 = v134;
        size_t v138 = v253;
        uint64_t v116 = v300;
        uint64_t v139 = v41;
        if (v137 != 23)
        {
          ((void (*)(char *, char **, uint64_t))*v260)(v55, v114, v246);

          swift_bridgeObjectRelease();
          (*(void (**)(char *))(*(void *)(v299 - 8) + 8))(v292);
          goto LABEL_68;
        }
        if (!sub_24DB89D64(qword_26B1A24C8 | 0x10, 0, v246) || v308)
        {
          (*v260)(v55, v114);

          swift_bridgeObjectRelease();
          uint64_t v57 = v270;
          uint64_t v161 = v271;
          uint64_t v139 = v308;
          goto LABEL_67;
        }
        uint64_t v140 = &v138[*((int *)v114 + 12)];
        ((void (*)(char *, char *, uint64_t))v290)(v138, v55, v316);
        *uint64_t v140 = 1;
        int v141 = (void (**)(void, void))v280;
        *((void *)v140 + 1) = v309;
        *((void *)v140 + 2) = v141;
        uint64_t v142 = v278;
        *((void *)v140 + 3) = v279;
        *((void *)v140 + 4) = v142;
        *((void *)v140 + 5) = v41;
        v140[48] = v327;
        uint64_t v143 = v307;
        *((void *)v140 + 7) = v314;
        *((void *)v140 + 8) = v143;
        if (v41)
        {
          __int16 v144 = v41;
          ((void (*)(char *, uint64_t))v247)(v138, v316);
          uint64_t v41 = v297;
          if ((v265 & 2) != 0) {
            goto LABEL_52;
          }
          v323 = v139;
          uint64_t v145 = v139;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
          if (!swift_dynamicCast()) {
            goto LABEL_51;
          }
          sub_24D3F0BA0((uint64_t)&v319, (uint64_t)v317, (uint64_t *)&unk_26B192A40);
          sub_24D3F0BA0((uint64_t)v317, (uint64_t)v318, (uint64_t *)&unk_26B192A40);
          if (sub_24D5B3C48((uint64_t)v318))
          {
            sub_24D5B3AB4((uint64_t)v317);
LABEL_51:
            uint64_t v41 = v297;
LABEL_52:
            unint64_t v146 = v139;

            uint64_t v147 = &v41[*((int *)v114 + 12)];
            uint64_t v148 = v139;
            ((void (*)(char *, char *, uint64_t))v290)(v41, v55, v316);
            *uint64_t v147 = 1;
            int v149 = (void (**)(void, void))v280;
            *((void *)v147 + 1) = v309;
            *((void *)v147 + 2) = v149;
            int v150 = v278;
            *((void *)v147 + 3) = v279;
            *((void *)v147 + 4) = v150;
            *((void *)v147 + 5) = v139;
            v147[48] = v327;
            BOOL v151 = v307;
            *((void *)v147 + 7) = v314;
            *((void *)v147 + 8) = v151;
            uint64_t v152 = v316;
            ((void (*)(char *, uint64_t))v247)(v41, v316);
            long long v153 = &v41[*((int *)v114 + 12)];
            ((void (*)(char *, char *, uint64_t))v290)(v41, v55, v152);
            *long long v153 = 1;
            long long v154 = (void (**)(void, void))v280;
            *((void *)v153 + 1) = v309;
            *((void *)v153 + 2) = v154;
            long long v155 = v278;
            *((void *)v153 + 3) = v279;
            *((void *)v153 + 4) = v155;
            int v156 = v148;
            *((void *)v153 + 5) = v148;
            v153[48] = v327;
            uint64_t v157 = v307;
            *((void *)v153 + 7) = v314;
            *((void *)v153 + 8) = v157;
            int v267 = sub_24DA7BE30(v152);

            ((void (*)(char *, uint64_t))v247)(v41, v152);
            int v158 = &v41[*((int *)v114 + 12)];
            ((void (*)(char *, char *, uint64_t))v290)(v41, v55, v152);
            (*v260)(v55, v114);

            swift_bridgeObjectRelease();
            *int v158 = 1;
            uint64_t v159 = v280;
            *((void *)v158 + 1) = v309;
            *((void *)v158 + 2) = v159;
            uint64_t v160 = v278;
            *((void *)v158 + 3) = v279;
            *((void *)v158 + 4) = v160;
            *((void *)v158 + 5) = v156;
            v158[48] = v327;
            *((void *)v158 + 7) = v314;
            *((void *)v158 + 8) = v157;
            char v326 = 0;
            uint64_t v57 = v159;
            uint64_t v161 = v160;
            ((void (*)(char *, uint64_t))v247)(v41, v152);
            int v266 = 0;
            uint64_t v139 = v312;
LABEL_67:
            (*(void (**)(char *))(*(void *)(v299 - 8) + 8))(v292);
            v270 = v57;
            v271 = v161;
            v308 = v139;
LABEL_68:
            uint64_t v69 = v264;
LABEL_37:
            uint64_t v117 = MEMORY[0x253327DC0](v69, v114);
            unint64_t v80 = v116 + 1;
            uint64_t v70 = v304;
            if (v301 == v117) {
              goto LABEL_96;
            }
            continue;
          }
          nullsub_1(v318);

          swift_bridgeObjectRelease();
          sub_24D5B3AB4((uint64_t)v317);
          (*v260)(v55, v114);
          uint64_t v139 = 0;
        }
        else
        {
          (*v260)(v55, v114);

          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v247)(v138, v316);
        }
        uint64_t v57 = v270;
        uint64_t v161 = v271;
        goto LABEL_67;
      }
      (*(void (**)(char *))(*(void *)(v299 - 8) + 8))(v292);
      uint64_t v162 = &v275[*((int *)v114 + 12)];
      v136();
      *uint64_t v162 = 1;
      size_t v163 = (void (**)(void, void))v280;
      *((void *)v162 + 1) = v309;
      *((void *)v162 + 2) = v163;
      uint64_t v164 = v278;
      *((void *)v162 + 3) = v279;
      *((void *)v162 + 4) = v164;
      uint64_t v165 = v41;
      *((void *)v162 + 5) = v41;
      v162[48] = v327;
      *((void *)v162 + 7) = v314;
      *((void *)v162 + 8) = v132;
      uint64_t v116 = v300;
      if (!v41)
      {
        (*v260)(v55, v114);

        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v134)(v275, v316);
        goto LABEL_68;
      }
      char v166 = v41;
      v247 = v134;
      ((void (*)(char *, uint64_t))v134)(v275, v316);
      v323 = v41;
      uint64_t v167 = v41;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
      uint64_t v57 = (char *)&unk_26B192A40;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
      int v168 = swift_dynamicCast();
      uint64_t v69 = v264;
      if (v168)
      {
        sub_24D3F0BA0((uint64_t)&v319, (uint64_t)v317, (uint64_t *)&unk_26B192A40);
        sub_24D3F0BA0((uint64_t)v317, (uint64_t)v318, (uint64_t *)&unk_26B192A40);
        if (sub_24D5B3C48((uint64_t)v318) != 11)
        {
          sub_24D5B3AB4((uint64_t)v317);
          goto LABEL_57;
        }
      }
      else
      {
LABEL_57:
        if (!v308)
        {
          swift_getErrorValue();
          if (sub_24D5030C8(v318[17]))
          {
            (*v260)(v55, v114);

            swift_bridgeObjectRelease();
            v308 = 0;
          }
          else
          {
            uint64_t v41 = v297;
            unint64_t v169 = &v297[*((int *)v114 + 12)];
            uint64_t v170 = v316;
            ((void (*)(char *, char *, uint64_t))v290)(v297, v55, v316);
            *unint64_t v169 = 1;
            uint64_t v171 = (void (**)(void, void))v280;
            *((void *)v169 + 1) = v309;
            *((void *)v169 + 2) = v171;
            unint64_t v172 = v278;
            *((void *)v169 + 3) = v279;
            *((void *)v169 + 4) = v172;
            uint64_t v173 = v172;
            *((void *)v169 + 5) = v165;
            v169[48] = v327;
            uint64_t v174 = v307;
            *((void *)v169 + 7) = v314;
            *((void *)v169 + 8) = v174;
            uint64_t v175 = v165;
            ((void (*)(char *, uint64_t))v247)(v41, v170);
            int v176 = &v41[*((int *)v114 + 12)];
            ((void (*)(char *, char *, uint64_t))v290)(v41, v55, v170);
            char *v176 = 1;
            uint64_t v177 = (void (**)(void, void))v280;
            *((void *)v176 + 1) = v309;
            *((void *)v176 + 2) = v177;
            *((void *)v176 + 3) = v279;
            *((void *)v176 + 4) = v173;
            *((void *)v176 + 5) = v165;
            v176[48] = v327;
            char v178 = v307;
            *((void *)v176 + 7) = v314;
            *((void *)v176 + 8) = v178;
            int v267 = sub_24DA7BE30(v170);

            ((void (*)(char *, uint64_t))v247)(v41, v170);
            int v179 = &v41[*((int *)v114 + 12)];
            ((void (*)(char *, char *, uint64_t))v290)(v41, v55, v170);
            (*v260)(v55, v114);

            swift_bridgeObjectRelease();
            *int v179 = 1;
            uint64_t v180 = (void (**)(void, void))v280;
            *((void *)v179 + 1) = v309;
            *((void *)v179 + 2) = v180;
            uint64_t v57 = v278;
            *((void *)v179 + 3) = v279;
            *((void *)v179 + 4) = v57;
            *((void *)v179 + 5) = v165;
            v179[48] = v327;
            uint64_t v181 = v307;
            *((void *)v179 + 7) = v314;
            *((void *)v179 + 8) = v181;
            char v326 = 0;
            uint64_t v182 = v170;
            uint64_t v69 = v264;
            ((void (*)(char *, uint64_t))v247)(v41, v182);
            int v266 = 0;
            v270 = v280;
            v271 = v57;
            v308 = v165;
          }
          goto LABEL_37;
        }
      }
      (*v260)(v55, v114);

      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    break;
  }
  __break(1u);
LABEL_102:
  __break(1u);
}

uint64_t sub_24DB8E530(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v36 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v33 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v15 = *(void *)(v1 + v14[19]);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v16(v13, v1, a1);
  if ((v15 & 4) != 0)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v13, a1);
    return 2;
  }
  uint64_t v17 = &v13[*(int *)(a1 + 52)];
  uint64_t v35 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v18 = *(void *)&v17[v35[19]];
  uint64_t v34 = *(void (**)(char *, uint64_t))(v3 + 8);
  v34(v13, a1);
  if ((v18 & 4) != 0) {
    return 2;
  }
  uint64_t v19 = *(int *)(a1 + 56);
  if (*(unsigned char *)(v1 + v19) != 1 && (*(unsigned char *)(v1 + v14[10]) & 8) != 0 && *(unsigned char *)(v1 + v14[14]))
  {
    uint64_t v20 = (uint64_t *)(v1 + v14[16]);
    int v21 = *((unsigned __int8 *)v20 + 16);
    uint64_t v33 = v20;
    if (v21)
    {
      v16(v11, v1, a1);
    }
    else
    {
      uint64_t v23 = *v20;
      v16(v11, v1, a1);
      if ((v23 & 0x40000) != 0)
      {
        v34(v11, a1);
        goto LABEL_17;
      }
    }
    uint64_t v24 = *(void *)&v11[v14[9]];
    v34(v11, a1);
    if ((v24 & 0x10) == 0)
    {
      int v25 = *((unsigned __int8 *)v33 + 16);
      v16(v8, v1, a1);
      if (v25 != 2)
      {
        v34(v8, a1);
        return 0;
      }
      uint64_t v26 = *(void *)&v8[v14[10]];
      v34(v8, a1);
      if (!v26) {
        return 0;
      }
    }
  }
LABEL_17:
  if (*(unsigned __int8 *)(v1 + v19) - 1 < 4) {
    return 2;
  }
  uint64_t v27 = v1 + *(int *)(a1 + 52);
  if ((*(unsigned char *)(v27 + v35[10]) & 8) == 0 || !*(unsigned char *)(v27 + v35[13])) {
    return 2;
  }
  BOOL v28 = sub_24DB86F3C(a1);
  uint64_t v29 = v36;
  v16(v36, v1, a1);
  if (!v28)
  {
    uint64_t v30 = &v29[*(int *)(a1 + 52) + (uint64_t)v35[16]];
    if (!v30[16])
    {
      uint64_t v32 = *(void *)v30;
      v34(v29, a1);
      if (v32 != 2) {
        goto LABEL_23;
      }
      return 2;
    }
  }
  v34(v29, a1);
LABEL_23:
  uint64_t v31 = v27 + v35[16];
  if (!*(unsigned char *)(v31 + 16) && (*(unsigned char *)(v31 + 2) & 4) != 0) {
    return 2;
  }
  return 1;
}

uint64_t sub_24DB8E8F4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v77 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  id v76 = (char *)&v64 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v64 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v64 - v12;
  uint64_t v15 = *(void *)(v14 + 40);
  unint64_t v80 = *(const char **)(v14 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = sub_24DCCA3F8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v64 - v19;
  int v21 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v81 = v2;
  v21((char *)&v64 - v19, v2, v17);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48);
  unint64_t v78 = AssociatedTypeWitness;
  LODWORD(AssociatedTypeWitness) = v22(v20, 1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (AssociatedTypeWitness == 1)
  {
    uint64_t v23 = v81 + *(int *)(a1 + 52);
    uint64_t v79 = *(void *)(a1 + 24);
    uint64_t v24 = v23 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 64);
    if (!*(unsigned char *)(v24 + 16) && *(void *)v24 == 2)
    {
      uint64_t v68 = 0;
      int v74 = 0;
      uint64_t v73 = "🔍";
      int v69 = 2;
      uint64_t v72 = 4;
      uint64_t v67 = "";
      uint64_t v25 = v78;
      goto LABEL_23;
    }
  }
  uint64_t v26 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v27 = *(void *)(v81 + *(int *)(v26 + 36)) & 0x51;
  BOOL v28 = *(void (**)(char *))(v4 + 16);
  v28(v13);
  uint64_t v64 = v15;
  if (v27) {
    LOBYTE(v27) = sub_24DB86F3C(a1);
  }
  uint64_t v29 = v76;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v4 + 8);
  v30(v13, a1);
  ((void (*)(char *, uint64_t, uint64_t))v28)(v11, v81, a1);
  if (v27)
  {
    v30(v11, a1);
    int v74 = 0;
    uint64_t v72 = 6;
    uint64_t v73 = "⬆︎";
  }
  else
  {
    uint64_t v31 = *(void *)&v11[*(int *)(v26 + 40)];
    v30(v11, a1);
    uint64_t v32 = "⬆︎";
    uint64_t v33 = 6;
    if (v31) {
      int v34 = 0;
    }
    else {
      int v34 = 2;
    }
    int v74 = v34;
    if (!v31)
    {
      uint64_t v33 = 1;
      uint64_t v32 = " ";
    }
    uint64_t v72 = v33;
    uint64_t v73 = v32;
  }
  uint64_t v35 = v81;
  uint64_t v36 = v81 + *(int *)(a1 + 52);
  uint64_t v79 = *(void *)(a1 + 24);
  uint64_t v37 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v38 = *(void *)(v36 + *(int *)(v37 + 36)) & 0x51;
  ((void (*)(char *, uint64_t, uint64_t))v28)(v29, v35, a1);
  if (v38)
  {
    BOOL v39 = sub_24DB86F3C(a1);
    v30(v29, a1);
    uint64_t v40 = v77;
    ((void (*)(char *, uint64_t, uint64_t))v28)(v77, v81, a1);
    uint64_t v41 = v40;
    uint64_t v25 = v78;
    if (v39)
    {
      v30(v40, a1);
      goto LABEL_20;
    }
  }
  else
  {
    v30(v29, a1);
    uint64_t v42 = v77;
    ((void (*)(char *, uint64_t, uint64_t))v28)(v77, v81, a1);
    uint64_t v41 = v42;
    uint64_t v25 = v78;
  }
  uint64_t v43 = *(void *)&v41[*(int *)(a1 + 52) + *(int *)(v37 + 40)];
  ((void (*)(char *))v30)(v41);
  if (!v43)
  {
    uint64_t v67 = " ";
    int v69 = 2;
    uint64_t v44 = 1;
    goto LABEL_22;
  }
LABEL_20:
  int v69 = 0;
  uint64_t v67 = "⬇︎";
  uint64_t v44 = 6;
LABEL_22:
  uint64_t v68 = v44;
LABEL_23:
  uint64_t v45 = v81;
  uint64_t v84 = *(void *)(v81 + *(int *)(a1 + 60));
  uint64_t v46 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v48 = swift_getAssociatedConformanceWitness();
  uint64_t v86 = v25;
  unint64_t v87 = v46;
  uint64_t v88 = AssociatedConformanceWitness;
  uint64_t v89 = v48;
  type metadata accessor for ReconciliationID();
  sub_24DCC9D48();
  swift_getWitnessTable();
  int v49 = sub_24DCC9FE8();
  int v50 = *(unsigned __int8 *)(v45 + *(int *)(a1 + 56));
  int v75 = v49;
  if (v50 == 4)
  {
    uint64_t v65 = 0;
    unint64_t v51 = 0xE000000000000000;
  }
  else
  {
    uint64_t v86 = 32;
    unint64_t v87 = 0xE100000000000000;
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    uint64_t v65 = v86;
    unint64_t v51 = v87;
  }
  unint64_t v66 = v51;
  unint64_t v52 = *(void *)(v81 + *(int *)(a1 + 76));
  if (v52)
  {
    uint64_t v86 = 0x3A636570733C20;
    unint64_t v87 = 0xE700000000000000;
    sub_24D97BCC8(v52);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v71 = v86;
    unint64_t v53 = v87;
  }
  else
  {
    uint64_t v71 = 0;
    unint64_t v53 = 0xE000000000000000;
  }
  unint64_t v70 = v53;
  uint64_t v86 = 0;
  unint64_t v87 = 0xE000000000000000;
  uint64_t v54 = *(void *)(v81 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 76));
  if ((v54 & 3) != 0) {
    sub_24DCC9968();
  }
  if ((v54 & 4) != 0) {
    sub_24DCC9968();
  }
  if ((v54 & 8) != 0) {
    sub_24DCC9968();
  }
  uint64_t v55 = v81;
  LODWORD(v77) = sub_24DB8F450(a1);
  LODWORD(v76) = *(unsigned __int8 *)(v55 + *(int *)(a1 + 72));
  uint64_t v56 = "🙋‍♂️";
  unint64_t v78 = v52 & 2;
  if ((v52 & 2) == 0) {
    uint64_t v56 = "";
  }
  unint64_t v80 = v56;
  uint64_t v84 = sub_24DCCA768();
  unint64_t v85 = v57;
  sub_24DCCA768();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCCA768();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v58 = v84;
  unint64_t v59 = v85;
  uint64_t v84 = 0;
  unint64_t v85 = 0xE000000000000000;
  sub_24DCCA728();
  sub_24DCC9968();
  swift_getWitnessTable();
  sub_24DCCADC8();
  sub_24DCC9968();
  type metadata accessor for ItemReconciliationHalf();
  swift_getWitnessTable();
  sub_24DCCADC8();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v82 = sub_24D7C000C(*(void *)(v55 + *(int *)(a1 + 64)));
  uint64_t v83 = v60;
  sub_24DCC9968();
  sub_24DCC9E38();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v82 = *(void *)(v55 + *(int *)(a1 + 68));
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  uint64_t v84 = v58;
  unint64_t v85 = v59;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v62 = v84;
  unint64_t v61 = v85;
  uint64_t v84 = v71;
  unint64_t v85 = v70;
  sub_24DCCA768();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCCA768();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCCA768();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  uint64_t v84 = v62;
  unint64_t v85 = v61;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v84;
}

BOOL sub_24DB8F450(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_24DCCA3F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v14 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v14 - v10, v2 + *(int *)(a1 + 52), v8);
  LODWORD(AssociatedTypeWitness) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8)
                                                                                       + 48))(v11, 1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
  BOOL v12 = AssociatedTypeWitness != 1 && sub_24DB8BBBC(a1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  return v12;
}

void sub_24DB8F664()
{
  qword_26B1A2278 = (uint64_t)&unk_26FFA2408;
}

void sub_24DB8F678()
{
  qword_26B1A2340 = (uint64_t)&unk_26FFA2458;
}

unint64_t sub_24DB8F68C(uint64_t a1)
{
  unint64_t result = 0;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C46646572616873;
      break;
    case 2:
      unint64_t result = 0x766973756C637865;
      break;
    case 4:
      unint64_t result = 0x73756150636E7973;
      break;
    case 8:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24DB8F760()
{
  return sub_24DB8F68C(*v0);
}

uint64_t sub_24DB8F768()
{
  return sub_24D97BA84(*v0);
}

uint64_t sub_24DB8F770()
{
  return sub_24DA6054C(*v0);
}

uint64_t sub_24DB8F778(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  uint64_t result = 0;
  switch(v1)
  {
    case 0:
      uint64_t result = 0x7964616572;
      break;
    case 1:
      uint64_t result = 0x7669737275636572;
      break;
    case 2:
    case 4:
    case 5:
    case 6:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
      return result;
    case 3:
      uint64_t result = 0x7974706D45746F6ELL;
      break;
    case 7:
      uint64_t result = 0x676E696E6E7572;
      break;
    case 15:
      uint64_t result = 0x6465726F6E6769;
      break;
    case 31:
      uint64_t result = 0x6544746E65726170;
      break;
    case 63:
      uint64_t result = 0x64657463656A6572;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_24DB8F990()
{
  return sub_24DB8F778(*v0);
}

uint64_t sub_24DB8F998()
{
  return sub_24D97B6C4(*v0);
}

uint64_t sub_24DB8F9A0()
{
  return sub_24DA60534(*v0);
}

unint64_t sub_24DB8F9A8(uint64_t a1)
{
  unint64_t v1 = 0xD000000000000014;
  if (a1 != 1) {
    unint64_t v1 = 0;
  }
  if (a1 == 2) {
    return 0xD000000000000010;
  }
  else {
    return v1;
  }
}

unint64_t sub_24DB8F9F0()
{
  return sub_24DB8F9A8(*v0);
}

unint64_t sub_24DB8F9F8()
{
  return sub_24D97BCC8(*v0);
}

uint64_t sub_24DB8FA00()
{
  return sub_24DA60558(*v0);
}

unint64_t sub_24DB8FA08(char a1)
{
  unint64_t result = 0x7265746E49746F6ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746F687370616E73;
      break;
    case 2:
      unint64_t result = 0x676E696863746177;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24DB8FAD8()
{
  return sub_24DB8FA08(*v0);
}

uint64_t sub_24DB8FAE0()
{
  unint64_t v1 = 0x7463697665;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000013;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C6169726574616DLL;
  }
}

uint64_t sub_24DB8FB44(uint64_t a1)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v59 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v61 = swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for FileItemVersion();
  uint64_t v6 = sub_24DCCA3F8();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v47 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v45 = (char *)&v42 - v8;
  uint64_t v48 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v42 - v9;
  uint64_t v44 = v3;
  swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_24DCCA3F8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t AssociatedTypeWitness = 0;
  uint64_t v59 = 0xE000000000000000;
  unint64_t v51 = (int *)a1;
  uint64_t v52 = v1;
  uint64_t v15 = v1 + *(int *)(a1 + 64);
  uint64_t v16 = *(void **)v15;
  uint64_t v17 = *(void **)(v15 + 8);
  char v18 = *(unsigned char *)(v15 + 16);
  uint64_t v49 = v5;
  uint64_t v50 = v15;
  uint64_t v43 = v10;
  switch(v18)
  {
    case 1:
      if (v16) {
        goto LABEL_3;
      }
      break;
    case 2:
      swift_retain();
      break;
    case 3:
      id v19 = v16;
      break;
    case 4:
      break;
    default:
LABEL_3:
      swift_retain();
      break;
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24D3E380C(v16, v17, v18);
  sub_24DCC9968();
  uint64_t v20 = v52;
  uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v52, v11);
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = v44;
  *(&v42 - 2) = v4;
  *(&v42 - 1) = v22;
  sub_24DB86C94((void (*)(char *, char *))sub_24DB92354, (uint64_t)(&v42 - 4), MEMORY[0x263F8E628], MEMORY[0x263F8D310], v23, (uint64_t)&v56);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  uint64_t v24 = v51;
  unint64_t v25 = *(void *)(v20 + v51[9]);
  if (v25)
  {
    uint64_t v56 = 0x3A6574656C656420;
    unint64_t v57 = 0xE800000000000000;
    sub_24D97B6C4(v25);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  uint64_t v26 = *(void *)(v20 + v24[10]);
  uint64_t v28 = v48;
  uint64_t v27 = v49;
  uint64_t v30 = v46;
  uint64_t v29 = v47;
  uint64_t v31 = v45;
  if (v26)
  {
    uint64_t v56 = 0x3A73646C65696620;
    unint64_t v57 = 0xE800000000000000;
    sub_24D97C4E0(v26);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  int v32 = *(unsigned __int8 *)(v20 + v24[11]);
  if (v32 != 3)
  {
    uint64_t v56 = 32;
    unint64_t v57 = 0xE100000000000000;
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  switch(*(unsigned char *)(v20 + v24[13]))
  {
    case 1:
    case 2:
    case 3:
    case 4:
      sub_24DCC9968();
      break;
    default:
      break;
  }
  if (*(unsigned char *)(v20 + v24[14]) != 6)
  {
    uint64_t v56 = 0x3A74726F706D6920;
    unint64_t v57 = 0xE800000000000000;
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  if (*(unsigned char *)(v20 + v24[15]) == 1) {
    sub_24DCC9968();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v31, v20 + v24[12], v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v31, 1, v27) == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v29);
  }
  else
  {
    uint64_t v33 = v43;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v43, v31, v27);
    uint64_t v56 = 0;
    unint64_t v57 = 0xE000000000000000;
    sub_24DCC9968();
    swift_getWitnessTable();
    sub_24DCCADC8();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v33, v27);
  }
  int v34 = *(void **)(v20 + v24[18]);
  if (v34)
  {
    uint64_t v56 = 0x3A7265766D6F6420;
    unint64_t v57 = 0xE800000000000000;
    id v35 = v34;
    id v36 = objc_msgSend(v35, sel_description);
    sub_24DCC97E8();

    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();

    swift_bridgeObjectRelease();
  }
  uint64_t v37 = (uint64_t *)(v20 + v24[17]);
  unint64_t v38 = v37[2];
  if (v38 >> 60 != 11)
  {
    uint64_t v40 = *v37;
    uint64_t v39 = v37[1];
    uint64_t v56 = 0;
    unint64_t v57 = 0xE000000000000000;
    sub_24D416048(v39, v38);
    sub_24DCC9968();
    uint64_t v54 = 677669222;
    unint64_t v55 = 0xE400000000000000;
    uint64_t v53 = v40;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24D3E3850(v40, v39, v38);
  }
  uint64_t v56 = AssociatedTypeWitness;
  unint64_t v57 = v59;
  sub_24DC0F228(*(void **)v50, *(id *)(v50 + 8), *(unsigned char *)(v50 + 16));
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return v56;
}

uint64_t sub_24DB905B4@<X0>(void *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = sub_24DCCADC8();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_24DB90670(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  if (a4 == 70)
  {
    uint64_t v9 = v8 + *(int *)(a8 + 64);
    unsigned int v10 = *(unsigned __int8 *)(v9 + 16);
    if (v10 > 1)
    {
      return 0;
    }
    else
    {
      sub_24D3E380C(*(void **)v9, *(id *)(v9 + 8), v10);
      uint64_t result = 0;
      *(_OWORD *)uint64_t v9 = xmmword_24DCD4920;
      *(unsigned char *)(v9 + 16) = 4;
    }
  }
  else
  {
    uint64_t v12 = a6;
    if (a1 != 70 && qword_24DCE81A0[a4] == qword_24DCE81A0[a1])
    {
      uint64_t v13 = v8 + *(int *)(a8 + 64);
      if (*(unsigned char *)(v13 + 16) == 1)
      {
        unint64_t v14 = a6 & ~a3;
        if ((a6 & a3) == 0) {
          unint64_t v14 = a6;
        }
      }
      else
      {
        unint64_t v14 = a6;
        if (!*(unsigned char *)(v13 + 16))
        {
          uint64_t v15 = a3 & ~*(void *)v13;
          unint64_t v14 = a6;
          if ((v15 & a6) != 0) {
            unint64_t v14 = a6 & ~v15;
          }
        }
      }
      BOOL v16 = (a7 & 2) == 0;
      if ((a6 & 2) == 0) {
        BOOL v16 = 1;
      }
      if (!(v16 | (v14 >> 1) & 1)) {
        v14 |= 2uLL;
      }
      BOOL v17 = (a7 & 3) == 0;
      if ((a6 & 0x400) == 0) {
        BOOL v17 = 1;
      }
      if (v17 | (v14 >> 10) & 1) {
        uint64_t v12 = v14;
      }
      else {
        uint64_t v12 = v14 | 0x400;
      }
    }
    uint64_t v18 = v8 + *(int *)(a8 + 64);
    id v19 = *(void **)(v18 + 8);
    uint64_t result = 0;
    switch(*(unsigned char *)(v18 + 16))
    {
      case 1:
      case 3:
        sub_24D3E380C(*(void **)v18, v19, *(unsigned char *)(v18 + 16));
        goto LABEL_24;
      case 2:
        return result;
      case 4:
LABEL_24:
        if (v12)
        {
          *(void *)uint64_t v18 = v12;
          *(void *)(v18 + 8) = 0;
          uint64_t result = 1;
          *(unsigned char *)(v18 + 16) = 0;
        }
        else
        {
          *(void *)uint64_t v18 = 0;
          *(void *)(v18 + 8) = 0;
          uint64_t result = 1;
          *(unsigned char *)(v18 + 16) = 1;
        }
        break;
      default:
        sub_24D3E380C(*(void **)v18, v19, 0);
        uint64_t result = 0;
        if (v12)
        {
          *(void *)uint64_t v18 = v12;
          *(void *)(v18 + 8) = 0;
          *(unsigned char *)(v18 + 16) = 0;
        }
        else
        {
          *(void *)uint64_t v18 = 0;
          *(void *)(v18 + 8) = 0;
          *(unsigned char *)(v18 + 16) = 1;
        }
        break;
    }
  }
  return result;
}

BOOL sub_24DB90838(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_24DCCA3F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v9 - v6, v1, v4);
  LODWORD(AssociatedTypeWitness) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8)
                                                                                       + 48))(v7, 1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return AssociatedTypeWitness != 1 && *(unsigned char *)(v1 + *(int *)(a1 + 64) + 16) == 1;
}

BOOL sub_24DB9099C(uint64_t a1, unint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v149 = a1;
  unint64_t v150 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v151 = AssociatedTypeWitness;
  uint64_t v152 = swift_getAssociatedTypeWitness();
  uint64_t v128 = v152;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v153 = AssociatedConformanceWitness;
  uint64_t v154 = swift_getAssociatedConformanceWitness();
  uint64_t v126 = v154;
  uint64_t v6 = type metadata accessor for FileItemVersion();
  uint64_t v132 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v125 = (char *)&v122 - v7;
  uint64_t v136 = v8;
  uint64_t v9 = sub_24DCCA3F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v131 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v134 = (char *)&v122 - v11;
  uint64_t v135 = v9;
  uint64_t v138 = *(void *)(v9 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  int v130 = (char *)&v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unsigned int v137 = (char *)&v122 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v139 = (char *)&v122 - v16;
  uint64_t v142 = a3;
  uint64_t v143 = a4;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v140 = (char *)&v122 - v19;
  uint64_t v20 = sub_24DCCA3F8();
  uint64_t v21 = swift_getTupleTypeMetadata2();
  uint64_t v144 = *(void *)(v21 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v122 - v23;
  uint64_t v25 = *(void *)(v20 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v22);
  uint64_t v148 = (char *)&v122 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v122 - v29;
  MEMORY[0x270FA5388](v28);
  int v32 = (char *)&v122 - v31;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v33((char *)&v122 - v31, v149, v20);
  v33(v30, v150, v20);
  uint64_t v145 = v21;
  int v34 = &v24[*(int *)(v21 + 48)];
  v33(v24, (uint64_t)v32, v20);
  unint64_t v146 = v34;
  v33(v34, (uint64_t)v30, v20);
  uint64_t v141 = v18;
  id v35 = *(unsigned int (**)(char *, uint64_t, int *))(v18 + 48);
  uint64_t v147 = (int *)v17;
  if (v35(v24, 1, (int *)v17) == 1)
  {
    id v36 = *(void (**)(char *, uint64_t))(v25 + 8);
    v36(v30, v20);
    v36(v32, v20);
    if (v35(v146, 1, v147) == 1)
    {
      v36(v24, v20);
      goto LABEL_8;
    }
LABEL_6:
    (*(void (**)(char *, uint64_t))(v144 + 8))(v24, v145);
    return 0;
  }
  uint64_t v123 = v30;
  unint64_t v124 = v32;
  v33(v148, (uint64_t)v24, v20);
  uint64_t v37 = v146;
  unint64_t v38 = v147;
  if (v35(v146, 1, v147) == 1)
  {
    uint64_t v39 = *(void (**)(char *, uint64_t))(v25 + 8);
    v39(v123, v20);
    v39(v124, v20);
    (*(void (**)(char *, int *))(v141 + 8))(v148, v38);
    goto LABEL_6;
  }
  uint64_t v40 = v140;
  uint64_t v41 = v141;
  (*(void (**)(char *, char *, int *))(v141 + 32))(v140, v37, v38);
  swift_getAssociatedConformanceWitness();
  LODWORD(v146) = sub_24DCC9798();
  uint64_t v42 = *(void (**)(char *, int *))(v41 + 8);
  v42(v40, v38);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v25 + 8);
  v43(v123, v20);
  v43(v124, v20);
  v42(v148, v38);
  v43(v24, v20);
  if ((v146 & 1) == 0) {
    return 0;
  }
LABEL_8:
  uint64_t v44 = (int *)type metadata accessor for ItemReconciliationHalf();
  if (*(void *)(v149 + v44[9]) != *(void *)(v150 + v44[9])) {
    return 0;
  }
  uint64_t v45 = v44;
  if (*(void *)(v149 + v44[10]) != *(void *)(v150 + v44[10])) {
    return 0;
  }
  uint64_t v46 = v44[11];
  int v47 = *(unsigned __int8 *)(v149 + v46);
  int v48 = *(unsigned __int8 *)(v150 + v46);
  if (v47 == 3)
  {
    uint64_t v50 = v135;
    uint64_t v49 = v136;
    unint64_t v51 = v134;
    uint64_t v53 = v138;
    uint64_t v52 = v139;
    uint64_t v54 = v137;
    if (v48 != 3) {
      return 0;
    }
  }
  else
  {
    BOOL result = 0;
    uint64_t v50 = v135;
    uint64_t v49 = v136;
    unint64_t v51 = v134;
    uint64_t v53 = v138;
    uint64_t v52 = v139;
    uint64_t v54 = v137;
    if (v48 == 3 || v47 != v48) {
      return result;
    }
  }
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  unint64_t v57 = v45;
  v56(v52, v149 + v45[12], v50);
  uint64_t v147 = v57;
  v56(v54, v150 + v57[12], v50);
  uint64_t v58 = &v51[*(int *)(TupleTypeMetadata2 + 48)];
  v56(v51, (uint64_t)v52, v50);
  uint64_t v148 = v58;
  v56(v58, (uint64_t)v54, v50);
  uint64_t v59 = v132;
  uint64_t v60 = v54;
  uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48);
  if (v61(v51, 1, v49) == 1)
  {
    uint64_t v62 = *(void (**)(char *, uint64_t))(v53 + 8);
    v62(v60, v50);
    v62(v139, v50);
    if (v61(v148, 1, v49) == 1)
    {
      v62(v51, v50);
      goto LABEL_22;
    }
LABEL_20:
    (*(void (**)(char *, uint64_t))(v131 + 8))(v51, TupleTypeMetadata2);
    return 0;
  }
  uint64_t v63 = (uint64_t)v130;
  v56(v130, (uint64_t)v51, v50);
  uint64_t v64 = v148;
  if (v61(v148, 1, v49) == 1)
  {
    uint64_t v65 = *(void (**)(char *, uint64_t))(v138 + 8);
    v65(v137, v50);
    v65(v139, v50);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v63, v49);
    goto LABEL_20;
  }
  uint64_t v66 = (uint64_t)v125;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v125, v64, v49);
  BOOL v67 = sub_24DB33B88(v63, v66);
  uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
  v68(v66, v49);
  int v69 = *(void (**)(char *, uint64_t))(v138 + 8);
  v69(v137, v50);
  v69(v139, v50);
  v68(v63, v49);
  v69(v51, v50);
  if (!v67) {
    return 0;
  }
LABEL_22:
  unint64_t v70 = v147;
  uint64_t v71 = v149;
  if (*(unsigned __int8 *)(v149 + v147[13]) != *(unsigned __int8 *)(v150 + v147[13])) {
    return 0;
  }
  uint64_t v72 = v147[14];
  int v73 = *(unsigned __int8 *)(v149 + v72);
  int v74 = *(unsigned __int8 *)(v150 + v72);
  if (v73 != 6)
  {
    BOOL result = 0;
    if (v74 == 6 || v73 != v74) {
      return result;
    }
    goto LABEL_28;
  }
  if (v74 != 6) {
    return 0;
  }
LABEL_28:
  if (*(unsigned __int8 *)(v149 + v147[15]) != *(unsigned __int8 *)(v150 + v147[15])) {
    return 0;
  }
  uint64_t v75 = v147[16];
  unint64_t v76 = *(void *)(v149 + v75);
  unint64_t v77 = *(void *)(v149 + v75 + 8);
  uint64_t v78 = *(unsigned __int8 *)(v149 + v75 + 16);
  uint64_t v79 = v150 + v75;
  unint64_t v80 = *(void *)v79;
  unint64_t v81 = *(void *)(v79 + 8);
  int v82 = *(unsigned __int8 *)(v79 + 16);
  switch(v78)
  {
    case 1:
      if (v82 != 1) {
        return 0;
      }
      goto LABEL_52;
    case 2:
      if (v82 != 2) {
        return 0;
      }
      goto LABEL_52;
    case 3:
      if (v82 != 3) {
        return 0;
      }
      uint64_t v151 = v76;
      sub_24D3F1C98((id)v76, (id)v77, 3);
      sub_24D3F1C98((id)v76, (id)v77, 3);
      sub_24D3F1C98((id)v80, (id)v81, 3);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
      uint64_t v83 = sub_24DCC9868();
      uint64_t v85 = v84;
      uint64_t v151 = v80;
      id v86 = (id)v80;
      if (v83 == sub_24DCC9868() && v85 == v87)
      {
        swift_bridgeObjectRelease_n();
        sub_24D3E380C((void *)v80, (id)v81, 3);
        sub_24D3E380C((void *)v76, (id)v77, 3);
        uint64_t v71 = v149;
        unint64_t v70 = v147;
        goto LABEL_52;
      }
      char v88 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24D3E380C((void *)v80, (id)v81, 3);
      sub_24D3E380C((void *)v76, (id)v77, 3);
      BOOL result = 0;
      uint64_t v71 = v149;
      unint64_t v70 = v147;
      if (v88) {
        goto LABEL_52;
      }
      return result;
    case 4:
      if (!(v76 | v77))
      {
        BOOL result = 0;
        if (v82 != 4 || v81 | v80) {
          return result;
        }
LABEL_52:
        uint64_t v89 = v70[17];
        uint64_t v90 = *(void *)(v71 + v89);
        uint64_t v91 = *(void *)(v71 + v89 + 8);
        unint64_t v92 = *(void *)(v71 + v89 + 16);
        uint64_t v93 = *(void *)(v71 + v89 + 24);
        uint64_t v95 = *(char **)(v71 + v89 + 32);
        uint64_t v94 = *(char **)(v71 + v89 + 40);
        id v96 = *(char **)(v71 + v89 + 48);
        uint64_t v97 = (uint64_t *)(v150 + v89);
        uint64_t v98 = *v97;
        uint64_t v99 = v97[1];
        unint64_t v100 = v97[2];
        uint64_t v101 = v97[3];
        int v102 = (char *)v97[4];
        uint64_t v103 = (char *)v97[5];
        uint64_t v104 = (char *)v97[6];
        unint64_t v105 = v100 & 0xF000000000000000;
        if (v92 >> 60 == 11)
        {
          if (v105 == 0xB000000000000000) {
            goto LABEL_54;
          }
LABEL_59:
          uint64_t v113 = v90;
          uint64_t v144 = v97[1];
          uint64_t v145 = v90;
          uint64_t v114 = v98;
          uint64_t v143 = v98;
          unint64_t v150 = v100;
          unint64_t v146 = v96;
          uint64_t v148 = v104;
          sub_24D3F1CDC(v113, v91, v92);
          uint64_t v115 = v99;
          unint64_t v116 = v150;
          sub_24D3F1CDC(v114, v115, v150);
          sub_24D3E3850(v145, v91, v92);
          sub_24D3E3850(v143, v144, v116);
          return 0;
        }
        if (v105 == 0xB000000000000000) {
          goto LABEL_59;
        }
        if (v90 != v98) {
          return 0;
        }
        uint64_t v148 = (char *)v97[6];
        uint64_t v117 = v90;
        uint64_t v118 = v99;
        uint64_t v142 = v95;
        uint64_t v143 = v93;
        uint64_t v140 = v102;
        uint64_t v141 = v101;
        if (v92 >> 60 == 15)
        {
          unint64_t v119 = v100;
          if (v100 >> 60 == 15)
          {
            sub_24D416048(v118, v100);
            goto LABEL_69;
          }
        }
        else
        {
          unint64_t v119 = v100;
          if (v100 >> 60 != 15)
          {
            uint64_t v121 = v117;
            uint64_t v139 = v94;
            unint64_t v146 = v96;
            sub_24D3F1CDC(v117, v91, v92);
            unsigned int v137 = v103;
            sub_24D3F1CDC(v121, v118, v119);
            LODWORD(v138) = sub_24D401DDC(v91, v92, v118, v119);
            sub_24D3E3850(v121, v118, v119);
            sub_24D3E3850(v121, v91, v92);
            if ((v138 & 1) == 0) {
              return 0;
            }
LABEL_69:
            if (v94)
            {
              uint64_t v71 = v149;
              unint64_t v70 = v147;
              if ((v103 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              BOOL result = 0;
              if (v103) {
                return result;
              }
              if (v143 != v141) {
                return result;
              }
              uint64_t v71 = v149;
              unint64_t v70 = v147;
              if (v142 != v140) {
                return result;
              }
            }
LABEL_54:
            uint64_t v106 = v70[18];
            int v107 = *(void **)(v71 + v106);
            unint64_t v108 = v150;
            int v109 = *(void **)(v150 + v106);
            if (v107)
            {
              if (!v109) {
                return 0;
              }
              sub_24D71C2F4();
              id v110 = v109;
              id v111 = v107;
              char v112 = sub_24DCCA398();

              if ((v112 & 1) == 0) {
                return 0;
              }
            }
            else if (v109)
            {
              return 0;
            }
            return *(void *)(v149 + v147[19]) == *(void *)(v108 + v147[19]);
          }
        }
        uint64_t v120 = v117;
        sub_24D3F1CDC(v117, v91, v92);
        sub_24D3F1CDC(v120, v118, v119);
        sub_24D416034(v91, v92);
        sub_24D416034(v118, v119);
        return 0;
      }
      if (v82 != 4) {
        return 0;
      }
      BOOL result = 0;
      if (v80 == 1 && !v81) {
        goto LABEL_52;
      }
      return result;
    default:
      BOOL result = 0;
      if (v82 || v76 != v80) {
        return result;
      }
      goto LABEL_52;
  }
}

BOOL sub_24DB91960(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_24DB9099C(a1, a2, *(char **)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_24DB91970@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = (int8x16_t *)type metadata accessor for ReconciliationID();
  return sub_24D95FD44(v2, a1);
}

BOOL sub_24DB91A70(uint64_t a1, unint64_t a2, char *a3, char *a4, uint64_t a5, uint64_t a6)
{
  if (!sub_24DB9099C(a1, a2, a3, a5)) {
    return 0;
  }
  uint64_t v10 = (int *)type metadata accessor for ItemReconciliation();
  if (!sub_24DB9099C(a1 + v10[13], a2 + v10[13], a4, a6)) {
    return 0;
  }
  uint64_t v11 = v10[14];
  uint64_t v12 = *(char *)(a1 + v11);
  uint64_t v13 = *(char *)(a2 + v11);
  if (v12 == 4)
  {
    if (v13 != 4) {
      return 0;
    }
  }
  else if (v13 == 4 || qword_24DCE83D0[v12] != qword_24DCE83D0[v13])
  {
    return 0;
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  swift_getWitnessTable();
  if ((sub_24DCC9D68() & 1) == 0) {
    return 0;
  }
  BOOL result = 0;
  uint64_t v15 = v10[16];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  if (v17 == *v18 && *(void *)(v16 + 8) == v18[1])
  {
    if (*(void *)(a1 + v10[17]) == *(void *)(a2 + v10[17])
      && *(unsigned __int8 *)(a1 + v10[18]) == *(unsigned __int8 *)(a2 + v10[18]))
    {
      return *(void *)(a1 + v10[19]) == *(void *)(a2 + v10[19]);
    }
    return 0;
  }
  return result;
}

BOOL sub_24DB91C9C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_24DB91A70(a1, a2, *(char **)(a3 + 16), *(char **)(a3 + 24), *(void *)(a3 + 32), *(void *)(a3 + 40));
}

uint64_t sub_24DB91CB0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (!(a1 >> 62))
  {
    id v6 = (id)a3;
    sub_24DCCA728();
    sub_24DCC9968();
    sub_24DCCA948();
    sub_24DCC9968();
    sub_24D97C4E0(a2);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    if (a3)
    {
LABEL_6:
      id v7 = objc_msgSend(v6, sel_description);
      sub_24DCC97E8();
    }
LABEL_10:
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24D4A434C(a1);
    return 0;
  }
  if (a1 >> 62 == 1)
  {
    id v6 = (id)a3;
    sub_24DCCA728();
    sub_24DCC9968();
    sub_24DCCA948();
    sub_24DCC9968();
    sub_24D97C4E0(a2);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    if (a3) {
      goto LABEL_6;
    }
    goto LABEL_10;
  }
  unint64_t v8 = a3 | a2;
  if (a1 == 0x8000000000000000 && !v8) {
    return 0x54676E6968746F6ELL;
  }
  if (a1 == 0x8000000000000001 && v8 == 0) {
    return 0x4279646165726C61;
  }
  return 0xD000000000000014;
}

uint64_t sub_24DB91F78()
{
  return sub_24DB91CB0(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

unint64_t sub_24DB91F84()
{
  return sub_24DA8962C(*(void *)v0, *(void *)(v0 + 8), *(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_24DB91FA0(uint64_t a1, int *a2)
{
  uint64_t v31 = a1;
  uint64_t v4 = *((void *)a2 - 1);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  int v32 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v27 - v7;
  uint64_t v10 = (void (*)(char *, int *))(v2 + *(int *)(v9 + 52));
  uint64_t v11 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v12 = *(void *)((unsigned char *)v10 + v11[19]) & 3;
  uint64_t v13 = *(void (**)(char *, uint64_t, int *))(v4 + 16);
  v13(v8, v2, a2);
  if (v12)
  {
    (*(void (**)(char *, int *))(v4 + 8))(v8, a2);
    return 0;
  }
  uint64_t v28 = v13;
  uint64_t v29 = v10;
  uint64_t v30 = v2;
  uint64_t v14 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v15 = *(void *)&v8[v14[19]];
  uint64_t v16 = *(void (**)(char *, int *))(v4 + 8);
  v16(v8, a2);
  if ((v15 & 2) != 0) {
    return 0;
  }
  uint64_t v17 = (uint64_t *)(v30 + v14[16]);
  uint64_t v18 = *v17;
  uint64_t result = 0;
  uint64_t v20 = v33;
  switch(*((unsigned char *)v17 + 16))
  {
    case 1:
      if (*((unsigned char *)v29 + v11[16] + 16) == 2) {
        return 0xD000000000000034;
      }
      uint64_t v29 = v16;
      BOOL v21 = sub_24DB86F3C((uint64_t)a2);
      uint64_t v22 = v32;
      v28(v32, v30, a2);
      if (v21)
      {
        int v23 = v22[a2[13] + v11[13]];
        v29(v22, a2);
        uint64_t v24 = v31;
        if (v23 == 1) {
          return 0xD00000000000002ALL;
        }
      }
      else
      {
        v29(v22, a2);
        uint64_t v24 = v31;
      }
      uint64_t result = sub_24DB88314(v24, a2);
      if (!v20)
      {
        if (result == 70)
        {
          uint64_t result = 0;
        }
        else
        {
          uint64_t v25 = result;
          id v26 = *(id *)(v30 + v14[18]);
          uint64_t result = v25;
        }
      }
      break;
    case 2:
      return 0xD000000000000020;
    case 3:
    case 4:
      return result;
    default:
      uint64_t result = 0;
      if (v18 != 4096 && v18 != 0x2000 && v18 != 0x4000) {
        return 0xD000000000000016;
      }
      return result;
  }
  return result;
}

uint64_t sub_24DB92354@<X0>(void *a1@<X8>)
{
  return sub_24DB905B4(a1);
}

uint64_t sub_24DB92374@<X0>(uint64_t a1@<X8>)
{
  return sub_24DB91970(a1);
}

uint64_t type metadata accessor for ItemReconciliation.PropagationStatus()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for GatherTransferExtraErrors()
{
  return &type metadata for GatherTransferExtraErrors;
}

uint64_t destroy for ReconciledPropagationStatus(uint64_t *a1)
{
  return sub_24D4A434C(*a1);
}

unint64_t *_s9libfssync27ReconciledPropagationStatusOwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = (void *)a2[2];
  sub_24D4A4340(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = (unint64_t)v5;
  return a1;
}

uint64_t *assignWithCopy for ReconciledPropagationStatus(uint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = (void *)a2[2];
  sub_24D4A4340(*a2, v4, v5);
  uint64_t v6 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = (uint64_t)v5;
  sub_24D4A434C(v6);
  return a1;
}

uint64_t *assignWithTake for ReconciledPropagationStatus(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_24D4A434C(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReconciledPropagationStatus(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)a1 >> 7;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for ReconciledPropagationStatus(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)uint64_t result = (unint64_t)-a2 << 7;
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_24DB92554(uint64_t a1)
{
  uint64_t v1 = *(void *)a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*(void *)a1 & 0x7F | (*(_DWORD *)(a1 + 8) << 7)) + 2;
  }
}

void *sub_24DB92574(void *result, uint64_t a2)
{
  if (a2 < 2)
  {
    *uint64_t result = *result & 0x7FLL | (a2 << 62);
  }
  else
  {
    result[1] = (unint64_t)(a2 - 2) >> 7;
    result[2] = 0;
    *uint64_t result = ((_BYTE)a2 - 2) & 0x7F | 0x8000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReconciledPropagationStatus()
{
  return &type metadata for ReconciledPropagationStatus;
}

uint64_t sub_24DB925B8(uint64_t a1)
{
  return sub_24DA89DC8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_24DB925CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_24DAFF16C(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t sub_24DB9262C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_24DAFF16C(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_24DA89DC8(v7, v8, v9, v10);
  return a1;
}

uint64_t sub_24DB9269C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_24DA89DC8(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_24DB926EC(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 24) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 24) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_24DB92740(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_24DB9279C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 24);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_24DB927BC(uint64_t result)
{
  *(unsigned char *)(result + 24) &= 0x3Fu;
  return result;
}

uint64_t sub_24DB927CC(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(unsigned char *)(result + 24) = *(unsigned char *)(result + 24) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 2;
    *(unsigned char *)(result + 24) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeletionStatus()
{
  return &type metadata for DeletionStatus;
}

ValueMetadata *type metadata accessor for PolicyContentStatus()
{
  return &type metadata for PolicyContentStatus;
}

ValueMetadata *type metadata accessor for MaterializationStatus()
{
  return &type metadata for MaterializationStatus;
}

unsigned char *storeEnumTagSinglePayload for ContentStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24DB92920);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentStatus()
{
  return &type metadata for ContentStatus;
}

ValueMetadata *type metadata accessor for SyncPausedStatus()
{
  return &type metadata for SyncPausedStatus;
}

unint64_t sub_24DB9296C()
{
  unint64_t result = qword_269870878;
  if (!qword_269870878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870878);
  }
  return result;
}

unint64_t sub_24DB929C4()
{
  unint64_t result = qword_269870880;
  if (!qword_269870880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870880);
  }
  return result;
}

uint64_t sub_24DB92A18()
{
  return sub_24DA27C30(&qword_269870888, &qword_269870890);
}

unint64_t sub_24DB92A44()
{
  unint64_t result = qword_269870898;
  if (!qword_269870898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870898);
  }
  return result;
}

unint64_t sub_24DB92A9C()
{
  unint64_t result = qword_2698708A0;
  if (!qword_2698708A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698708A0);
  }
  return result;
}

uint64_t sub_24DB92AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24DB93300(a1, a2, a3, (uint64_t (*)(void))sub_24DB92B1C, (uint64_t (*)(void))sub_24DB92B70);
}

unint64_t sub_24DB92B1C()
{
  unint64_t result = qword_2698708A8;
  if (!qword_2698708A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698708A8);
  }
  return result;
}

unint64_t sub_24DB92B70()
{
  unint64_t result = qword_2698708B0;
  if (!qword_2698708B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698708B0);
  }
  return result;
}

uint64_t sub_24DB92BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24DB93300(a1, a2, a3, (uint64_t (*)(void))sub_24DB92BF0, (uint64_t (*)(void))sub_24DB92C44);
}

unint64_t sub_24DB92BF0()
{
  unint64_t result = qword_2698708B8;
  if (!qword_2698708B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698708B8);
  }
  return result;
}

unint64_t sub_24DB92C44()
{
  unint64_t result = qword_2698708C0;
  if (!qword_2698708C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698708C0);
  }
  return result;
}

unint64_t sub_24DB92C9C()
{
  unint64_t result = qword_2698708C8;
  if (!qword_2698708C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698708C8);
  }
  return result;
}

unint64_t sub_24DB92CF4()
{
  unint64_t result = qword_2698708D0;
  if (!qword_2698708D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698708D0);
  }
  return result;
}

unint64_t sub_24DB92D4C()
{
  unint64_t result = qword_2698708D8;
  if (!qword_2698708D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698708D8);
  }
  return result;
}

unint64_t sub_24DB92DA4()
{
  unint64_t result = qword_2698708E0;
  if (!qword_2698708E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698708E0);
  }
  return result;
}

uint64_t sub_24DB92DF8()
{
  return sub_24DA27C30(&qword_2698708E8, &qword_2698708F0);
}

unint64_t sub_24DB92E24()
{
  unint64_t result = qword_2698708F8;
  if (!qword_2698708F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698708F8);
  }
  return result;
}

unint64_t sub_24DB92E7C()
{
  unint64_t result = qword_269870900;
  if (!qword_269870900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870900);
  }
  return result;
}

uint64_t sub_24DB92ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24DB93300(a1, a2, a3, (uint64_t (*)(void))sub_24DB92EFC, (uint64_t (*)(void))sub_24DB92F50);
}

unint64_t sub_24DB92EFC()
{
  unint64_t result = qword_269870908;
  if (!qword_269870908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870908);
  }
  return result;
}

unint64_t sub_24DB92F50()
{
  unint64_t result = qword_269870910;
  if (!qword_269870910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870910);
  }
  return result;
}

uint64_t sub_24DB92FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24DB93300(a1, a2, a3, (uint64_t (*)(void))sub_24DB92FD0, (uint64_t (*)(void))sub_24DB93024);
}

unint64_t sub_24DB92FD0()
{
  unint64_t result = qword_269870918;
  if (!qword_269870918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870918);
  }
  return result;
}

unint64_t sub_24DB93024()
{
  unint64_t result = qword_269870920;
  if (!qword_269870920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870920);
  }
  return result;
}

unint64_t sub_24DB9307C()
{
  unint64_t result = qword_269870928;
  if (!qword_269870928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870928);
  }
  return result;
}

unint64_t sub_24DB930D4()
{
  unint64_t result = qword_269870930;
  if (!qword_269870930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870930);
  }
  return result;
}

uint64_t sub_24DB93128()
{
  return sub_24DA27C30(&qword_269870938, &qword_269870940);
}

unint64_t sub_24DB93154()
{
  unint64_t result = qword_269870948;
  if (!qword_269870948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870948);
  }
  return result;
}

unint64_t sub_24DB931AC()
{
  unint64_t result = qword_269870950;
  if (!qword_269870950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870950);
  }
  return result;
}

uint64_t sub_24DB93200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24DB93300(a1, a2, a3, (uint64_t (*)(void))sub_24DB9322C, (uint64_t (*)(void))sub_24DB93280);
}

unint64_t sub_24DB9322C()
{
  unint64_t result = qword_269870958;
  if (!qword_269870958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870958);
  }
  return result;
}

unint64_t sub_24DB93280()
{
  unint64_t result = qword_269870960;
  if (!qword_269870960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870960);
  }
  return result;
}

uint64_t sub_24DB932D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24DB93300(a1, a2, a3, (uint64_t (*)(void))sub_24DB9333C, (uint64_t (*)(void))sub_24DB93390);
}

uint64_t sub_24DB93300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24DB9333C()
{
  unint64_t result = qword_269870968;
  if (!qword_269870968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870968);
  }
  return result;
}

unint64_t sub_24DB93390()
{
  unint64_t result = qword_269870970;
  if (!qword_269870970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870970);
  }
  return result;
}

unint64_t sub_24DB933E8()
{
  unint64_t result = qword_269870978;
  if (!qword_269870978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870978);
  }
  return result;
}

unint64_t sub_24DB93440()
{
  unint64_t result = qword_269870980;
  if (!qword_269870980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870980);
  }
  return result;
}

unint64_t sub_24DB93498()
{
  unint64_t result = qword_269870988;
  if (!qword_269870988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870988);
  }
  return result;
}

unint64_t sub_24DB934F0()
{
  unint64_t result = qword_269870990[0];
  if (!qword_269870990[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269870990);
  }
  return result;
}

uint64_t sub_24DB93544(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v36 = a3;
  sub_24DB93950((uint64_t)&v31);
  uint64_t v4 = v31;
  uint64_t v5 = v32;
  unint64_t v6 = v33;
  uint64_t v7 = v35;
  if (v34) {
    unint64_t v6 = 0;
  }
  unint64_t v28 = v6;
  unint64_t v8 = (unint64_t)objc_msgSend(self, sel_fp_maximumBounceLevel);
  if ((v8 & 0x8000000000000000) != 0)
  {
LABEL_26:
    uint64_t result = sub_24DCCA968();
    __break(1u);
  }
  else
  {
    unint64_t v9 = v8;
    char v10 = 0;
    do
    {
      char v29 = v10;
      if (v10)
      {
        id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
        objc_msgSend(v11, sel_setDateStyle_, 1);
        uint64_t v27 = v11;
        objc_msgSend(v11, sel_setTimeStyle_, 2);
        uint64_t v12 = (void *)sub_24DCC8C38();
        id v13 = objc_msgSend(v11, sel_stringFromDate_, v12);

        uint64_t v14 = sub_24DCC97E8();
        uint64_t v26 = v4;
        uint64_t v16 = v15;

        uint64_t v31 = v14;
        uint64_t v32 = v16;
        sub_24D3F0EB8();
        uint64_t v17 = sub_24DCCA478();
        uint64_t v19 = v18;
        swift_bridgeObjectRelease();
        uint64_t v31 = v17;
        uint64_t v32 = v19;
        sub_24DCCA478();
        swift_bridgeObjectRelease();
        uint64_t v31 = v26;
        uint64_t v32 = v5;
        sub_24DCC9968();
        sub_24DCC9968();

        swift_bridgeObjectRelease();
        uint64_t v4 = v31;
        uint64_t v5 = v32;
      }
      unint64_t v20 = v28;
      if (v28 < v9)
      {
        while (1)
        {
          if (v20 == 1) {
            goto LABEL_16;
          }
          if (v20) {
            break;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v21 = v4;
          uint64_t v22 = v5;
          if (v7) {
            goto LABEL_12;
          }
LABEL_13:
          char v23 = a2(v21, v22);
          if (v3)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v21;
          }
          if (v23)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v21;
          }
          swift_bridgeObjectRelease();
LABEL_16:
          if (v9 == v20) {
            goto LABEL_5;
          }
          if (__CFADD__(v20++, 1))
          {
            __break(1u);
            goto LABEL_26;
          }
        }
        uint64_t v31 = v4;
        uint64_t v32 = v5;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24DCC9968();
        sub_24DCCAD78();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        uint64_t v21 = v31;
        uint64_t v22 = v32;
        if (!v7) {
          goto LABEL_13;
        }
LABEL_12:
        uint64_t v31 = v21;
        uint64_t v32 = v22;
        sub_24DCC9968();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        uint64_t v21 = v31;
        uint64_t v22 = v32;
        goto LABEL_13;
      }
LABEL_5:
      char v10 = 1;
    }
    while ((v29 & 1) == 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

void sub_24DB93950(uint64_t a1@<X8>)
{
  v16[1] = *MEMORY[0x263EF8340];
  int v2 = (void *)sub_24DCC97B8();
  uint64_t v15 = 0;
  v16[0] = 0;
  id v3 = objc_msgSend(v2, sel_fp_stringByDeletingPathBounceNo_andPathExtension_isFolder_, v16, &v15, 0);

  uint64_t v5 = v15;
  uint64_t v4 = (void *)v16[0];
  uint64_t v6 = sub_24DCC97E8();
  uint64_t v8 = v7;
  id v9 = v4;
  id v10 = v5;

  if (!v9)
  {
    id v11 = 0;
    if (v10) {
      goto LABEL_3;
    }
LABEL_5:

    uint64_t v12 = 0;
    uint64_t v14 = 0;
    goto LABEL_6;
  }
  id v11 = objc_msgSend(v9, sel_unsignedIntegerValue);
  if (!v10) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v12 = sub_24DCC97E8();
  uint64_t v14 = v13;

LABEL_6:
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v11;
  *(unsigned char *)(a1 + 24) = v9 == 0;
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = v14;
}

uint64_t sub_24DB93A7C(uint64_t a1)
{
  sub_24DB93950((uint64_t)&v3);
  if (v4 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    a1 = v3;
    if (v5)
    {
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  return a1;
}

uint64_t sub_24DB93B3C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_24DB93950((uint64_t)&v39);
  uint64_t v4 = v40;
  uint64_t v44 = v39;
  unint64_t v5 = v41;
  uint64_t v6 = v43;
  if (v42) {
    unint64_t v5 = 0;
  }
  unint64_t v36 = v5;
  unint64_t v7 = (unint64_t)objc_msgSend(self, sel_fp_maximumBounceLevel);
  if ((v7 & 0x8000000000000000) != 0)
  {
LABEL_30:

    uint64_t result = sub_24DCCA968();
    __break(1u);
    return result;
  }
  unint64_t v8 = v7;
  char v9 = 0;
  do
  {
    char v37 = v9;
    if (v9)
    {
      id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
      objc_msgSend(v10, sel_setDateStyle_, 1);
      objc_msgSend(v10, sel_setTimeStyle_, 2);
      id v11 = (void *)sub_24DCC8C38();
      id v12 = objc_msgSend(v10, sel_stringFromDate_, v11);

      uint64_t v13 = sub_24DCC97E8();
      uint64_t v15 = v14;

      uint64_t v39 = v13;
      uint64_t v40 = v15;
      unint64_t v16 = sub_24D3F0EB8();
      uint64_t v17 = MEMORY[0x263F8D310];
      uint64_t v18 = sub_24DCCA478();
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      uint64_t v39 = v18;
      uint64_t v40 = v20;
      unint64_t v34 = v16;
      unint64_t v35 = v16;
      uint64_t v32 = v17;
      unint64_t v33 = v16;
      sub_24DCCA478();
      swift_bridgeObjectRelease();
      uint64_t v39 = v44;
      uint64_t v40 = v4;
      sub_24DCC9968();
      sub_24DCC9968();

      swift_bridgeObjectRelease();
      uint64_t v4 = v40;
      uint64_t v44 = v39;
    }
    if (v36 < v8)
    {
      unint64_t v21 = v36;
      while (v21 == 1)
      {
LABEL_22:
        if (v8 == v21) {
          goto LABEL_5;
        }
        if (__CFADD__(v21++, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
      }
      if (v21)
      {
        uint64_t v39 = v44;
        uint64_t v40 = v4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24DCC9968();
        sub_24DCCAD78();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        uint64_t v22 = v39;
        uint64_t v23 = v40;
        if (!v6) {
          goto LABEL_14;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v22 = v44;
        uint64_t v23 = v4;
        if (!v6)
        {
LABEL_14:
          id v24 = objc_msgSend(a4, sel_filename, v32, v33, v34, v35);
          uint64_t v25 = sub_24DCC97E8();
          uint64_t v27 = v26;

          if (v22 == v25 && v23 == v27)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v29 = sub_24DCCAE28();
            swift_bridgeObjectRelease();
            if ((v29 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v22;
            }
          }
          swift_bridgeObjectRelease();
          goto LABEL_22;
        }
      }
      uint64_t v39 = v22;
      uint64_t v40 = v23;
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v22 = v39;
      uint64_t v23 = v40;
      goto LABEL_14;
    }
LABEL_5:
    char v9 = 1;
  }
  while ((v37 & 1) == 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_24DB93F6C()
{
}

void sub_24DB93FC8()
{
}

void sub_24DB94024()
{
}

void sub_24DB94080()
{
}

void sub_24DB940DC()
{
}

void sub_24DB94138()
{
}

void sub_24DB94194()
{
}

uint64_t sub_24DB941F0(uint64_t a1, unint64_t a2, uint64_t a3, const void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a7;
  uint64_t v13 = sub_24DCC8A58();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a3, v13);
  uint64_t v17 = sub_24DCABAEC(a1, a2, (uint64_t)v16, a4, a5 & 0x1FFFFFFFFLL, a6, v20);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a3, v13);
  return v17;
}

uint64_t sub_24DB9433C()
{
  sub_24DCA83F4();

  return swift_deallocClassInstance();
}

uint64_t sub_24DB94390()
{
  return type metadata accessor for ReadOnlyWharf();
}

uint64_t type metadata accessor for ReadOnlyWharf()
{
  uint64_t result = qword_26B191308;
  if (!qword_26B191308) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24DB943E4()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_24DB9441C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    type metadata accessor for Bouncing.BouncingContext();
    uint64_t v2 = sub_24DCCA3F8();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getAssociatedConformanceWitness();
      type metadata accessor for ItemState();
      uint64_t AssociatedTypeWitness = sub_24DCCA3F8();
      if (v4 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        swift_getAssociatedTypeWitness();
        swift_getAssociatedConformanceWitness();
        swift_getAssociatedConformanceWitness();
        type metadata accessor for FileItemVersion();
        uint64_t AssociatedTypeWitness = sub_24DCCA3F8();
        if (v5 <= 0x3F) {
          return swift_initClassMetadata2();
        }
      }
    }
  }
  return AssociatedTypeWitness;
}

uint64_t sub_24DB946C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t sub_24DB94798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);
  v9(a5, a1, AssociatedTypeWitness);
  uint64_t v10 = type metadata accessor for Bouncing.BouncingContext();
  id v11 = (void *)(a5 + *(int *)(v10 + 52));
  *id v11 = a2;
  v11[1] = a3;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(a5 + *(int *)(v10 + 56), a4, AssociatedTypeWitness);
}

unint64_t sub_24DB94890(unint64_t result)
{
  if (result >= 3) {
    return 3;
  }
  return result;
}

uint64_t sub_24DB948A0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x800000024DD226B0 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024DD226D0 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024DD226F0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_24DB949E4(char a1)
{
  unint64_t result = 0xD000000000000016;
  if (!a1) {
    return 0xD000000000000014;
  }
  return result;
}

uint64_t sub_24DB94A3C()
{
  swift_getWitnessTable();

  return sub_24DCCAE98();
}

uint64_t sub_24DB94AB0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D6D8];

  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_24DB94B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D6D8];

  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_24DB94B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D6D8];

  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

unint64_t sub_24DB94BFC@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24DB94890(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_24DB94C34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24D908B68(*v1);
  *a1 = result;
  return result;
}

unint64_t sub_24DB94C68()
{
  return sub_24DB949E4(*v0);
}

uint64_t sub_24DB94C78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24DB948A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24DB94CAC()
{
  return sub_24D908B5C(*v0);
}

unint64_t sub_24DB94CD4@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24DB94890(a1);
  *a2 = result;
  return result;
}

uint64_t sub_24DB94D08(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24DB94D5C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24DB94DB0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  sub_24DCC9968();
  sub_24DCCADC8();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_24DCC97B8();
  id v1 = objc_msgSend(v0, sel_fp_obfuscatedFilename);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24DB94F20(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 40);
  uint64_t v20 = *(void *)(a2 + 16);
  uint64_t v16 = a2;
  long long v17 = *(_OWORD *)(a2 + 24);
  long long v21 = v17;
  uint64_t v22 = v3;
  type metadata accessor for Bouncing.BouncingContext.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_24DCCAD58();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0D8();
  LOBYTE(v20) = 0;
  swift_getAssociatedTypeWitness();
  uint64_t v8 = v4;
  uint64_t v9 = v18;
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = v19;
  sub_24DCCACF8();
  if (!v10)
  {
    id v11 = (uint64_t *)(v9 + *(int *)(v16 + 52));
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    uint64_t v20 = v13;
    *(void *)&long long v21 = v12;
    char v23 = 1;
    sub_24D4ED694();
    sub_24DCCACF8();
    LOBYTE(v20) = 2;
    sub_24DCCACF8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v8);
}

uint64_t sub_24DB95184@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v33 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v34 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v40 = (void (*)(char *, char *, uint64_t))((char *)&v30 - v13);
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v47 = a5;
  type metadata accessor for Bouncing.BouncingContext.CodingKeys();
  swift_getWitnessTable();
  uint64_t v41 = sub_24DCCAC08();
  uint64_t v35 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v37 = a3;
  uint64_t v38 = a5;
  uint64_t v46 = a4;
  uint64_t v47 = a5;
  uint64_t v16 = type metadata accessor for Bouncing.BouncingContext();
  uint64_t v32 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v30 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  char v42 = v15;
  uint64_t v19 = (uint64_t)v43;
  sub_24DCCB0B8();
  if (v19) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v21 = v35;
  uint64_t v20 = v36;
  uint64_t v30 = v16;
  uint64_t v31 = v18;
  uint64_t v43 = a1;
  LOBYTE(v44) = 0;
  uint64_t v22 = AssociatedTypeWitness;
  swift_getAssociatedConformanceWitness();
  sub_24DCCAB98();
  char v23 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v23(v31, (char *)v40, v22);
  char v48 = 1;
  sub_24D4ED88C();
  sub_24DCCAB98();
  uint64_t v40 = v23;
  uint64_t v24 = v45;
  uint64_t v25 = v31;
  uint64_t v26 = &v31[*(int *)(v30 + 52)];
  *(void *)uint64_t v26 = v44;
  *((void *)v26 + 1) = v24;
  LOBYTE(v44) = 2;
  sub_24DCCAB98();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v42, v41);
  uint64_t v27 = v30;
  v40(&v25[*(int *)(v30 + 56)], v34, v22);
  uint64_t v28 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v33, v25, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v25, v27);
}

uint64_t sub_24DB9562C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24DB95184(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_24DB95650(void *a1, uint64_t a2)
{
  return sub_24DB94F20(a1, a2);
}

uint64_t sub_24DB9566C()
{
  return 0x692D65636E756F62;
}

uint64_t sub_24DB9568C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 616);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 4;
  }
  else {
    return *(unsigned __int8 *)(v1 + *(int *)(v2 + 40));
  }
}

uint64_t sub_24DB957B8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 616);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 2;
  }
  uint64_t v4 = v1 + *(int *)(v2 + 40);
  return *(unsigned __int8 *)(v4 + *(int *)(type metadata accessor for ItemMetadata() + 108));
}

uint64_t sub_24DB958F4()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 616);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  uint64_t result = 0;
  if (!v3)
  {
    uint64_t v5 = v1 + *(int *)(v2 + 40);
    return *(void *)(v5 + *(int *)(type metadata accessor for ItemMetadata() + 100));
  }
  return result;
}

unint64_t sub_24DB95A38()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 616);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  unsigned __int8 v3 = 1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2))
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = v1 + *(int *)(v2 + 40);
    uint64_t v4 = *(unsigned int *)(v5 + 4);
    unsigned __int8 v3 = *(unsigned char *)(v5 + 8);
  }
  return v4 | ((unint64_t)v3 << 32);
}

uint64_t sub_24DB95B7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 616);
  swift_beginAccess();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for ItemState();
  uint64_t v6 = 1;
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5);
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  if (!v7)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v3, AssociatedTypeWitness);
    uint64_t v6 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v6, 1, AssociatedTypeWitness);
}

uint64_t sub_24DB95D0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  long long v3 = *(_OWORD *)(*v0 + 560);
  v13[0] = *(_OWORD *)(*v0 + 544);
  v13[1] = v3;
  long long v15 = v13[0];
  long long v16 = v3;
  type metadata accessor for Bouncing.BouncingContext();
  uint64_t v4 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v13 - v5, (uint64_t)v1 + *(void *)(v2 + 600), v4);
  sub_24DCC9868();
  *(void *)&long long v15 = 0;
  *((void *)&v15 + 1) = 0xE000000000000000;
  sub_24DCCA728();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  sub_24DCC9968();
  uint64_t v14 = *(uint64_t *)((char *)v1 + *(void *)(*v1 + 584));
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  int v7 = *(void **)((char *)v1 + *(void *)(*v1 + 608));
  if (v7)
  {
    id v8 = objc_msgSend(v7, sel_description);
    sub_24DCC97E8();
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  long long v9 = v15;
  *(void *)&long long v15 = 0;
  *((void *)&v15 + 1) = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  *(void *)&long long v15 = 3829620;
  *((void *)&v15 + 1) = 0xE300000000000000;
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_24DCC97B8();
  id v11 = objc_msgSend(v10, sel_fp_obfuscatedFilename);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  long long v15 = v9;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_24DB96114@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v3, AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24DB962A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v126 = a2;
  uint64_t v115 = a1;
  uint64_t v4 = *(char **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 544);
  uint64_t v6 = *(void *)(*(void *)v2 + 560);
  uint64_t v7 = type metadata accessor for JobLockRule();
  uint64_t v113 = *(void *)(v7 - 8);
  uint64_t v114 = v7;
  MEMORY[0x270FA5388](v7);
  char v112 = (char *)&v91 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = type metadata accessor for ItemState();
  uint64_t v11 = sub_24DCCA3F8();
  uint64_t v110 = *(void *)(v11 - 8);
  uint64_t v111 = v11;
  MEMORY[0x270FA5388](v11);
  int v109 = (char *)&v91 - v12;
  uint64_t v94 = sub_24DCCA3F8();
  uint64_t v93 = *(void *)(v94 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v94);
  uint64_t v98 = (char *)&v91 - v14;
  uint64_t v117 = AssociatedTypeWitness;
  uint64_t v116 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v92 = (char *)&v91 - v15;
  uint64_t v120 = v4;
  uint64_t v16 = *((void *)v4 + 69);
  uint64_t v17 = *((void *)v4 + 71);
  uint64_t v122 = v5;
  uint64_t v123 = v16;
  uint64_t v124 = v6;
  uint64_t v125 = v17;
  uint64_t v102 = type metadata accessor for Bouncing.BouncingContext();
  uint64_t v100 = sub_24DCCA3F8();
  uint64_t v118 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v101 = (char *)&v91 - v18;
  uint64_t v99 = swift_getAssociatedTypeWitness();
  uint64_t v97 = *(void *)(v99 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v99);
  uint64_t v95 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  id v96 = (char *)&v91 - v22;
  uint64_t v119 = v10;
  uint64_t v108 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v107 = (uint64_t)&v91 - v23;
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  uint64_t v122 = v24;
  uint64_t v123 = v25;
  uint64_t v124 = AssociatedConformanceWitness;
  uint64_t v125 = v27;
  uint64_t v104 = type metadata accessor for FileItemVersion();
  uint64_t v105 = sub_24DCCA3F8();
  uint64_t v106 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  char v29 = (char *)&v91 - v28;
  uint64_t v30 = type metadata accessor for SnapshotItem();
  uint64_t v31 = sub_24DCCA3F8();
  uint64_t v103 = *(void *)(v31 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  unint64_t v34 = (char *)&v91 - v33;
  uint64_t v35 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v37 = (char *)&v91 - v36;
  uint64_t v38 = v121;
  uint64_t v39 = &v2[*((void *)v120 + 72)];
  (*(void (**)(char *, void))(**(void **)(v126 + 32) + 248))(&v3[*((void *)v120 + 72)], *(void *)&v3[*((void *)v120 + 73)]);
  if (!v38)
  {
    uint64_t v91 = v39;
    uint64_t v120 = v37;
    uint64_t v121 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v34, 1, v30) == 1)
    {
      (*(void (**)(char *, uint64_t))(v103 + 8))(v34, v31);
      return 0;
    }
    uint64_t v103 = v35;
    uint64_t v40 = v120;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v120, v34, v30);
    uint64_t v41 = v104;
    uint64_t v42 = *(void *)(v104 - 8);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v29, &v40[*(int *)(v30 + 40)], v104);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v29, 0, 1, v41);
    uint64_t v43 = v3;
    uint64_t v44 = &v3[*(void *)(*(void *)v3 + 624)];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v106 + 40))(v44, v29, v105);
    swift_endAccess();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v46 = v107;
    uint64_t v106 = v30;
    sub_24D98B988(v30, WitnessTable, v107);
    char v47 = v3[140];
    uint64_t v49 = v118;
    uint64_t v48 = v119;
    uint64_t v50 = v110;
    if ((v47 & 1) == 0 && sub_24D8903D0())
    {
      uint64_t v51 = v46 + *(int *)(v48 + 40);
      uint64_t v52 = (int *)type metadata accessor for ItemMetadata();
      if ((*(unsigned char *)(v51 + v52[16]) & 1) == 0 && (*(unsigned char *)(v51 + v52[17]) & 1) == 0)
      {
        uint64_t v53 = (uint64_t *)(v51 + v52[14]);
        uint64_t v54 = v53[1];
        if (v54)
        {
          uint64_t v55 = *v53;
        }
        else
        {
          uint64_t v55 = *(void *)(v46 + *(int *)(v48 + 36));
          uint64_t v54 = swift_bridgeObjectRetain();
        }
        uint64_t *v53 = v55;
        v53[1] = v54;
      }
    }
    if (sub_24D8903D0())
    {
      uint64_t v56 = *(int *)(v48 + 40);
      uint64_t v57 = v46 + v56 + *(int *)(type metadata accessor for ItemMetadata() + 144);
      uint64_t v58 = v111;
      if ((*(unsigned char *)(v57 + 4) & 1) != 0 || *(_DWORD *)v57 < 2u) {
        goto LABEL_18;
      }
      uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
      uint64_t v60 = v101;
      uint64_t v61 = v100;
      v59(v101, &v43[*(void *)(*(void *)v43 + 600)], v100);
      uint64_t v62 = v102;
      uint64_t v63 = *(void *)(v102 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v60, 1, v102) == 1)
      {
        (*(void (**)(char *, uint64_t))(v118 + 8))(v60, v61);
      }
      else
      {
        unint64_t v81 = &v60[*(int *)(v62 + 56)];
        uint64_t v82 = v97;
        uint64_t v83 = v95;
        uint64_t v84 = v99;
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v95, v81, v99);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v101, v102);
        uint64_t v85 = v96;
        (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v96, v83, v84);
        id v86 = v98;
        uint64_t v87 = v121;
        (*(void (**)(char *))(**(void **)(v126 + 16) + 152))(v85);
        if (v87)
        {

          (*(void (**)(char *, uint64_t))(v82 + 8))(v85, v99);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56))(v86, 1, 1, v117);
          uint64_t v121 = 0;
        }
        else
        {
          uint64_t v121 = 0;
          (*(void (**)(char *, uint64_t))(v82 + 8))(v85, v99);
          uint64_t v89 = v116;
          uint64_t v88 = v117;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))(v86, 1, v117) != 1)
          {
            uint64_t v90 = v92;
            (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v92, v86, v88);
            (*(void (**)(uint64_t, char *, uint64_t))(v89 + 40))(v46, v90, v88);
            goto LABEL_18;
          }
        }
        (*(void (**)(char *, uint64_t))(v93 + 8))(v86, v94);
      }
    }
    else
    {
      uint64_t v58 = v111;
    }
LABEL_18:
    uint64_t v64 = (uint64_t *)&v43[*(void *)(*(void *)v43 + 592)];
    uint64_t v66 = *v64;
    uint64_t v65 = v64[1];
    uint64_t v67 = v46;
    uint64_t v68 = (void *)(v46 + *(int *)(v48 + 36));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v68 = v66;
    v68[1] = v65;
    uint64_t v69 = v108;
    unint64_t v70 = v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v109, v67, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v70, 0, 1, v48);
    uint64_t v71 = &v43[*(void *)(*(void *)v43 + 616)];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v50 + 40))(v71, v70, v58);
    swift_endAccess();
    swift_beginAccess();
    sub_24D73C78C((uint64_t)(v43 + 56), (uint64_t)&v122);
    uint64_t v72 = *((void *)v43 + 15);
    uint64_t v73 = v117;
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    uint64_t v75 = (uint64_t)v112;
    unint64_t v76 = &v112[*(int *)(TupleTypeMetadata3 + 48)];
    unint64_t v77 = &v112[*(int *)(TupleTypeMetadata3 + 64)];
    uint64_t v78 = *(void (**)(char *, unsigned char *, uint64_t))(v116 + 16);
    v78(v112, v91, v73);
    v78(v76, (unsigned char *)v67, v73);
    v78(v77, (unsigned char *)v67, v73);
    uint64_t v79 = v114;
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = sub_24D578CBC((uint64_t)&v122, v72, v75);
    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v75, v79);
    sub_24D73C7F4((uint64_t)&v122);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v120, v106);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v67, v119);
  }
  return v30;
}

uint64_t sub_24DB970F8(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v172 = a3;
  uint64_t v173 = a1;
  int v168 = a2;
  uint64_t v4 = *v3;
  uint64_t v5 = *(void *)(*v3 + 568);
  uint64_t v6 = *(void *)(*v3 + 552);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v175 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v177 = swift_getAssociatedConformanceWitness();
  uint64_t v133 = type metadata accessor for FileItemVersion();
  uint64_t v139 = sub_24DCCA3F8();
  uint64_t v138 = *(void *)(v139 - 8);
  MEMORY[0x270FA5388](v139);
  uint64_t v147 = (char *)&v124 - v7;
  uint64_t v146 = swift_getAssociatedTypeWitness();
  uint64_t v145 = *(void *)(v146 - 8);
  MEMORY[0x270FA5388](v146);
  uint64_t v144 = (char *)&v124 - v8;
  uint64_t v170 = v3;
  uint64_t v171 = v4;
  uint64_t v9 = *(void *)(v4 + 560);
  uint64_t v10 = *(void *)(v4 + 544);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v131 = swift_getAssociatedConformanceWitness();
  uint64_t v12 = type metadata accessor for ItemState();
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = swift_getAssociatedConformanceWitness();
  uint64_t v16 = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = v13;
  uint64_t v175 = v14;
  uint64_t AssociatedConformanceWitness = v15;
  uint64_t v177 = v16;
  uint64_t v17 = type metadata accessor for FileItemVersion();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v141 = TupleTypeMetadata2;
  uint64_t v19 = sub_24DCCB058();
  uint64_t v166 = *(void *)(v19 - 8);
  uint64_t v167 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v165 = (uint64_t *)((char *)&v124 - v20);
  uint64_t v129 = sub_24DCCA3F8();
  uint64_t v128 = *(void *)(v129 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v129);
  uint64_t v140 = (char *)&v124 - v22;
  uint64_t v160 = v11;
  uint64_t v161 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v21);
  int v130 = (char *)&v124 - v23;
  uint64_t AssociatedTypeWitness = v10;
  uint64_t v175 = v6;
  uint64_t v164 = v6;
  uint64_t v24 = v170;
  uint64_t AssociatedConformanceWitness = v9;
  uint64_t v177 = v5;
  uint64_t v163 = v5;
  uint64_t v25 = type metadata accessor for Bouncing.BouncingContext();
  uint64_t v150 = sub_24DCCA3F8();
  uint64_t v149 = *(void (**)(char *, char *, uint64_t))(v150 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v150);
  uint64_t v148 = (char *)&v124 - v27;
  uint64_t v154 = v25;
  uint64_t v152 = *(void *)(v25 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v143 = (char *)&v124 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v151 = (char *)&v124 - v30;
  uint64_t v157 = sub_24DCCA3F8();
  uint64_t v159 = *(void *)(v157 - 8);
  MEMORY[0x270FA5388](v157);
  int v156 = (char *)&v124 - v31;
  uint64_t v32 = sub_24DCCA3F8();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)&v124 - v35;
  uint64_t v37 = *(void *)(v17 - 8);
  uint64_t v38 = MEMORY[0x270FA5388](v34);
  uint64_t v136 = (char *)&v124 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  unint64_t v169 = (char *)&v124 - v41;
  uint64_t v135 = v42;
  uint64_t v43 = MEMORY[0x270FA5388](v40);
  uint64_t v153 = (char *)&v124 - v44;
  uint64_t v162 = v12;
  uint64_t v155 = *(void *)(v12 - 8);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v142 = (char *)&v124 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = v46;
  MEMORY[0x270FA5388](v45);
  int v158 = (char *)&v124 - v47;
  uint64_t v132 = *(void *)(v173 + 40);
  uint64_t v48 = (uint64_t)v24 + *(void *)(v171 + 624);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v36, v48, v32);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v36, 1, v17) == 1)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v32);
    uint64_t AssociatedTypeWitness = v10;
    uint64_t v175 = v164;
    uint64_t AssociatedConformanceWitness = v9;
    uint64_t v177 = v163;
    type metadata accessor for Propagation.PropagationError();
    swift_getWitnessTable();
    uint64_t v49 = (void *)swift_allocError();
    uint64_t v51 = v50;
    uint64_t v52 = v160;
    uint64_t v53 = swift_getTupleTypeMetadata2();
    uint64_t v54 = (void *)(v51 + *(int *)(v53 + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v161 + 16))(v51, (uint64_t)v24 + *(void *)(*v24 + 576), v52);
    *uint64_t v54 = 0xD000000000000011;
    v54[1] = 0x800000024DD06670;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v51, 0, 1, v53);
    swift_willThrow();
LABEL_5:
    uint64_t v70 = v167;
    uint64_t v69 = v168;
    uint64_t v71 = v165;
    *uint64_t v165 = (uint64_t)v49;
    swift_storeEnumTagMultiPayload();
    id v72 = v49;
    v69(v71);

    return (*(uint64_t (**)(uint64_t *, uint64_t))(v166 + 8))(v71, v70);
  }
  uint64_t v127 = v10;
  uint64_t v171 = v9;
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v55(v169, v36, v17);
  uint64_t v56 = v17;
  uint64_t v57 = (uint64_t)v24 + *(void *)(*v24 + 616);
  swift_beginAccess();
  uint64_t v58 = v156;
  uint64_t v59 = v57;
  uint64_t v60 = v157;
  (*(void (**)(char *, uint64_t, uint64_t))(v159 + 16))(v156, v59, v157);
  uint64_t v61 = v155;
  uint64_t v62 = v162;
  uint64_t v63 = v37;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 48))(v58, 1, v162) == 1)
  {
    (*(void (**)(char *, uint64_t))(v159 + 8))(v58, v60);
    uint64_t AssociatedTypeWitness = v127;
    uint64_t v175 = v164;
    uint64_t AssociatedConformanceWitness = v171;
    uint64_t v177 = v163;
    type metadata accessor for Propagation.PropagationError();
    swift_getWitnessTable();
    uint64_t v49 = (void *)swift_allocError();
    uint64_t v65 = v64;
    uint64_t v66 = v160;
    uint64_t v67 = swift_getTupleTypeMetadata2();
    uint64_t v68 = (void *)(v65 + *(int *)(v67 + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v161 + 16))(v65, (uint64_t)v24 + *(void *)(*v24 + 576), v66);
    *uint64_t v68 = 0xD000000000000012;
    v68[1] = 0x800000024DD22690;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v65, 0, 1, v67);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v169, v56);
    goto LABEL_5;
  }
  uint64_t v159 = v37;
  int v74 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
  int v156 = (char *)(v61 + 32);
  uint64_t v126 = v74;
  v74(v158, v58, v62);
  uint64_t v75 = v153;
  unint64_t v76 = v169;
  unint64_t v169 = (char *)v55;
  uint64_t v157 = v37 + 32;
  v55(v153, v76, v56);
  unint64_t v77 = v149;
  uint64_t v78 = v148;
  uint64_t v79 = v150;
  (*((void (**)(char *, char *, uint64_t))v149 + 2))(v148, (char *)v24 + *(void *)(*v24 + 600), v150);
  uint64_t v80 = v152;
  uint64_t v81 = v154;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v78, 1, v154) == 1)
  {
    (*((void (**)(char *, uint64_t))v77 + 1))(v78, v79);
    uint64_t v82 = v165;
    uint64_t v83 = (char *)v165 + *(int *)(v141 + 48);
    uint64_t v84 = v158;
    (*(void (**)(uint64_t *, char *, uint64_t))(v61 + 16))(v165, v158, v62);
    uint64_t v85 = v159;
    (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v83, v75, v56);
    uint64_t v86 = v167;
    swift_storeEnumTagMultiPayload();
    v168(v82);
    (*(void (**)(uint64_t *, uint64_t))(v166 + 8))(v82, v86);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v75, v56);
    return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v84, v62);
  }
  uint64_t v87 = v61;
  uint64_t v88 = v80 + 32;
  uint64_t v89 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
  uint64_t v90 = v151;
  v89(v151, v78, v81);
  uint64_t v91 = v140;
  (*(void (**)(char *))(**(void **)(v173 + 16) + 152))(v90);
  uint64_t v150 = v88;
  uint64_t v149 = v89;
  uint64_t v92 = v161;
  uint64_t v93 = v160;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48))(v91, 1, v160) == 1)
  {
    uint64_t v94 = v91;
    uint64_t v95 = v159;
    (*(void (**)(char *, uint64_t))(v128 + 8))(v94, v129);
    id v96 = v168;
    uint64_t v97 = v56;
  }
  else
  {
    uint64_t v98 = v130;
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v130, v91, v93);
    char v99 = sub_24DCC9798();
    uint64_t v97 = v56;
    uint64_t v95 = v159;
    if (v99)
    {
      type metadata accessor for FileTreeError();
      uint64_t v100 = v98;
      swift_getWitnessTable();
      uint64_t v101 = swift_allocError();
      swift_storeEnumTagMultiPayload();
      uint64_t v102 = v92;
      uint64_t v103 = v165;
      *uint64_t v165 = v101;
      uint64_t v104 = v167;
      swift_storeEnumTagMultiPayload();
      v168(v103);
      (*(void (**)(uint64_t *, uint64_t))(v166 + 8))(v103, v104);
      (*(void (**)(char *, uint64_t))(v102 + 8))(v100, v93);
      (*(void (**)(char *, uint64_t))(v152 + 8))(v151, v154);
      (*(void (**)(char *, uint64_t))(v95 + 8))(v153, v97);
      return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v158, v162);
    }
    (*(void (**)(char *, uint64_t))(v92 + 8))(v98, v93);
    id v96 = v168;
  }
  uint64_t v105 = v133;
  uint64_t v106 = v158;
  uint64_t v173 = *(void *)(v132 + 16);
  uint64_t v107 = v151;
  (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v144, v151, v146);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v147, 1, 1, v105);
  uint64_t v170 = *(uint64_t **)((char *)v24 + *(void *)(*v24 + 608));
  uint64_t v108 = v152;
  (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v143, v107, v154);
  uint64_t v109 = v87;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v142, v106, v162);
  uint64_t v110 = v136;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v136, v153, v97);
  unint64_t v111 = (*(unsigned __int8 *)(v108 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
  unint64_t v112 = (v137 + v111 + *(unsigned __int8 *)(v87 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  unint64_t v113 = (v134 + *(unsigned __int8 *)(v95 + 80) + v112) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
  uint64_t v114 = (char *)swift_allocObject();
  uint64_t v115 = v97;
  uint64_t v125 = v97;
  uint64_t v116 = v114;
  uint64_t v117 = v164;
  *((void *)v114 + 2) = v127;
  *((void *)v114 + 3) = v117;
  uint64_t v118 = v163;
  *((void *)v114 + 4) = v171;
  *((void *)v114 + 5) = v118;
  uint64_t v119 = &v114[v111];
  *((void *)v116 + 6) = v96;
  *((void *)v116 + 7) = v172;
  uint64_t v120 = v154;
  v149(v119, v143, v154);
  v126(&v116[v112], v142, v162);
  ((void (*)(char *, char *, uint64_t))v169)(&v116[v113], v110, v115);
  uint64_t v121 = *(void (**)(char *, char *, uint64_t *, void, uint64_t (*)(char *), void *))(*(void *)v173 + 136);
  swift_retain();
  uint64_t v122 = v144;
  uint64_t v123 = v147;
  v121(v144, v147, v170, 0, sub_24DBA11C8, v116);
  swift_release();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v123, v139);
  (*(void (**)(char *, uint64_t))(v145 + 8))(v122, v146);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v151, v120);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v153, v125);
  return (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v158, v162);
}

uint64_t sub_24DB98688(char *a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v111 = a6;
  uint64_t v110 = a5;
  uint64_t v119 = a4;
  uint64_t v125 = a3;
  uint64_t v126 = a2;
  uint64_t v127 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v113 = AssociatedTypeWitness;
  uint64_t v114 = v13;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v112 = (char *)&v104 - v14;
  uint64_t v128 = a7;
  uint64_t v129 = a8;
  uint64_t v130 = a9;
  uint64_t v131 = a10;
  uint64_t v117 = a10;
  uint64_t v118 = type metadata accessor for Bouncing.BouncingContext();
  uint64_t v116 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388](v118);
  uint64_t v115 = (char *)&v104 - v15;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v16 = type metadata accessor for ItemState();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v120 = a9;
  uint64_t v121 = a7;
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  uint64_t v128 = v17;
  uint64_t v129 = v18;
  uint64_t v130 = AssociatedConformanceWitness;
  uint64_t v131 = v20;
  uint64_t v21 = type metadata accessor for FileItemVersion();
  uint64_t v109 = v16;
  uint64_t v108 = v21;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v23 = sub_24DCCB058();
  uint64_t v123 = *(void *)(v23 - 8);
  uint64_t v124 = v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v122 = (uint64_t *)((char *)&v104 - v24);
  uint64_t v25 = sub_24DCCA3F8();
  uint64_t v26 = sub_24DCCB058();
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v104 - v28;
  uint64_t v30 = *(void *)(v25 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v27);
  uint64_t v33 = (char *)&v104 - v32;
  uint64_t v34 = *(void *)(a8 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v31);
  uint64_t v37 = (char *)&v104 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v39 = (char *)&v104 - v38;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v29, v127, v26);
  sub_24DB946C8(v26, (uint64_t)&v128, (uint64_t)v33);
  uint64_t v107 = v37;
  uint64_t v106 = TupleTypeMetadata2;
  uint64_t v127 = v39;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v33, 1, a8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v25);
    type metadata accessor for FileTreeError();
    swift_getWitnessTable();
    uint64_t v41 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = v122;
    uint64_t *v122 = v41;
    uint64_t v43 = v124;
    swift_storeEnumTagMultiPayload();
    v126(v42);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v123 + 8))(v42, v43);
  }
  uint64_t v104 = v34;
  uint64_t v45 = v127;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v127, v33, a8);
  uint64_t v46 = *(uint64_t (**)(uint64_t))(v117 + 80);
  uint64_t v105 = a8;
  uint64_t v47 = v46(a8);
  unint64_t v49 = v48;
  uint64_t v50 = (uint64_t *)(v119 + *(int *)(v118 + 52));
  uint64_t v52 = *v50;
  unint64_t v51 = v50[1];
  swift_bridgeObjectRetain();
  uint64_t v53 = v47;
  uint64_t v54 = sub_24D40114C(v47, v49);
  uint64_t v56 = v55;
  swift_bridgeObjectRelease();
  if (v56)
  {
    if (v54 == 12565487 && v56 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_9:
      swift_bridgeObjectRetain();
      unint64_t v58 = sub_24DCC9918();
      unint64_t v59 = sub_24D41824C(v58, v53, v49);
      uint64_t v61 = v60;
      uint64_t v63 = v62;
      uint64_t v65 = v64;
      swift_bridgeObjectRelease();
      uint64_t v66 = v63;
      uint64_t v45 = v127;
      uint64_t v53 = MEMORY[0x253327950](v59, v61, v66, v65);
      unint64_t v68 = v67;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    char v57 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v57) {
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v68 = v49;
LABEL_11:
  swift_bridgeObjectRetain();
  uint64_t v69 = sub_24D40114C(v52, v51);
  uint64_t v71 = v70;
  swift_bridgeObjectRelease();
  if (v71)
  {
    if (v69 == 12565487 && v71 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    char v72 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v72)
    {
LABEL_16:
      swift_bridgeObjectRetain();
      unint64_t v73 = sub_24DCC9918();
      unint64_t v74 = sub_24D41824C(v73, v52, v51);
      uint64_t v76 = v75;
      uint64_t v78 = v77;
      uint64_t v80 = v79;
      swift_bridgeObjectRelease();
      uint64_t v81 = v78;
      uint64_t v45 = v127;
      uint64_t v82 = MEMORY[0x253327950](v74, v76, v81, v80);
      unint64_t v51 = v83;
      swift_bridgeObjectRelease();
      if (v53 != v82) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRetain();
  if (v53 != v52)
  {
LABEL_21:
    char v84 = sub_24DCCAE28();
    goto LABEL_22;
  }
LABEL_19:
  if (v68 != v51) {
    goto LABEL_21;
  }
  char v84 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v85 = v104;
  uint64_t v86 = v107;
  uint64_t v87 = v105;
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v107, v45, v105);
  uint64_t v89 = v115;
  uint64_t v88 = v116;
  uint64_t v90 = v118;
  (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v115, v119, v118);
  if (v84)
  {
    uint64_t v91 = v87;
    uint64_t v92 = v112;
    uint64_t v93 = v90;
    (*(void (**)(uint64_t, uint64_t))(v117 + 72))(v87, v117);
    uint64_t v94 = v113;
    swift_getAssociatedConformanceWitness();
    char v95 = sub_24DCC9798();
    (*(void (**)(char *, uint64_t))(v114 + 8))(v92, v94);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v93);
    id v96 = *(void (**)(char *, uint64_t))(v85 + 8);
    v96(v86, v91);
    if (v95)
    {
      uint64_t v97 = v122;
      uint64_t v98 = (char *)v122 + *(int *)(v106 + 48);
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v109 - 8) + 16))(v122, v110);
      (*(void (**)(char *, uint64_t))(*(void *)(v108 - 8) + 16))(v98, v111);
      uint64_t v99 = v124;
      swift_storeEnumTagMultiPayload();
      v126(v97);
      (*(void (**)(uint64_t *, uint64_t))(v123 + 8))(v97, v99);
      return ((uint64_t (*)(char *, uint64_t))v96)(v127, v91);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v90);
    uint64_t v91 = v87;
    id v96 = *(void (**)(char *, uint64_t))(v85 + 8);
    v96(v86, v91);
  }
  uint64_t v100 = v122;
  uint64_t v101 = v127;
  type metadata accessor for FileTreeError();
  swift_getWitnessTable();
  uint64_t v102 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  *uint64_t v100 = v102;
  uint64_t v103 = v124;
  swift_storeEnumTagMultiPayload();
  v126(v100);
  (*(void (**)(uint64_t *, uint64_t))(v123 + 8))(v100, v103);
  return ((uint64_t (*)(char *, uint64_t))v96)(v101, v91);
}

uint64_t sub_24DB9923C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = v5;
  v11[4] = a4;
  v11[5] = a5;
  v11[6] = a3;
  v11[7] = v10;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24DB970F8(a1, (void (*)(uint64_t *))sub_24DBA0CB0, (uint64_t)v11);

  return swift_release();
}

void sub_24DB99304(char *a1, uint64_t *a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  uint64_t v111 = a7;
  uint64_t v122 = a5;
  uint64_t v123 = a6;
  uint64_t v121 = a4;
  uint64_t v124 = a1;
  uint64_t v125 = a3;
  uint64_t v8 = *a2;
  uint64_t v9 = *(void *)(*a2 + 96);
  uint64_t v10 = *(void *)(*a2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v99 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v98 = (char *)v93 - v12;
  uint64_t v13 = *(void *)(v8 + 88);
  uint64_t v14 = *(void *)(v8 + 104);
  uint64_t v130 = v10;
  uint64_t v113 = v14;
  uint64_t v114 = v13;
  uint64_t v131 = v13;
  uint64_t v132 = v9;
  uint64_t v133 = v14;
  uint64_t v102 = type metadata accessor for Bouncing.BouncingContext();
  uint64_t v106 = sub_24DCCA3F8();
  uint64_t v101 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  uint64_t v117 = (char *)v93 - v15;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v130 = v16;
  uint64_t v131 = v17;
  uint64_t v132 = AssociatedConformanceWitness;
  uint64_t v133 = v19;
  uint64_t v20 = type metadata accessor for FileItemVersion();
  uint64_t v118 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v109 = v22;
  uint64_t v110 = (char *)v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)v93 - v23;
  uint64_t v115 = v10;
  uint64_t v116 = v9;
  swift_getAssociatedConformanceWitness();
  uint64_t v100 = AssociatedTypeWitness;
  uint64_t v25 = type metadata accessor for ItemState();
  uint64_t v119 = *(void *)(v25 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v108 = (void **)((char *)v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v104 = (char *)v93 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)v93 - v31;
  uint64_t v107 = v33;
  MEMORY[0x270FA5388](v30);
  uint64_t v35 = (char *)v93 - v34;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v37 = sub_24DCCB058();
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = (void **)((char *)v93 - v38);
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))((char *)v93 - v38, v124, v37);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v41 = *v39;
    uint64_t v42 = swift_allocObject();
    uint64_t v44 = v121;
    uint64_t v43 = v122;
    *(void *)(v42 + 16) = v121;
    *(void *)(v42 + 24) = v43;
    uint64_t v45 = (void *)swift_allocObject();
    uint64_t v46 = (uint64_t)v125;
    v45[2] = v125;
    v45[3] = v41;
    uint64_t v47 = v123;
    v45[4] = a2;
    v45[5] = v47;
    v45[6] = v44;
    v45[7] = v43;
    swift_retain_n();
    swift_retain_n();
    id v48 = v41;
    uint64_t v49 = type metadata accessor for Continuation();
    swift_retain();
    swift_retain();
    sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D7B4A74, v46, (uint64_t)sub_24D732EF0, v42, (uint64_t)sub_24DBA1A7C, (uint64_t)v45, v49, MEMORY[0x263F8D310]);
    swift_release();
    swift_release();
    swift_release();

    return;
  }
  unint64_t v112 = a2;
  uint64_t v50 = (char *)v39 + *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v51 = v119;
  uint64_t v94 = *(void (**)(char *, void **, uint64_t))(v119 + 32);
  uint64_t v95 = v119 + 32;
  v94(v35, v39, v25);
  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v118 + 32);
  uint64_t v103 = v24;
  uint64_t v120 = v20;
  v93[0] = v52;
  v93[1] = v118 + 32;
  v52(v24, v50, v20);
  uint64_t v53 = *((void *)v125 + 17);
  uint64_t v105 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  v105(v32, v35, v25);
  if ((v53 & 0x100000000) != 0)
  {
    int v55 = 1;
  }
  else
  {
    uint64_t v54 = &v32[*(int *)(v25 + 40)];
    int v55 = v54[*(int *)(type metadata accessor for ItemMetadata() + 64)];
  }
  uint64_t v56 = v117;
  char v57 = *(void (**)(char *, uint64_t))(v51 + 8);
  v57(v32, v25);
  uint64_t v58 = (uint64_t)v104;
  uint64_t v124 = v35;
  v105(v104, v35, v25);
  id v96 = (void (*)(char *, char *))v57;
  uint64_t v97 = v51 + 8;
  if (v55)
  {
    v57((char *)v58, v25);
    uint64_t v59 = 0;
  }
  else
  {
    uint64_t v60 = v58 + *(int *)(v25 + 40);
    LODWORD(v60) = *(unsigned __int8 *)(v60 + *(int *)(type metadata accessor for ItemMetadata() + 68));
    v57((char *)v58, v25);
    uint64_t v59 = ~(8 * (int)v60) & 8;
  }
  uint64_t v61 = v103;
  uint64_t v117 = (char *)v25;
  uint64_t v62 = *(int *)(v25 + 40);
  uint64_t v63 = &v124[v62 + *(int *)(type metadata accessor for ItemMetadata() + 144)];
  uint64_t v64 = v106;
  if ((v63[4] & 1) == 0 && *(_DWORD *)v63 >= 2u)
  {
    uint64_t v65 = v56;
    if (sub_24D8903D0())
    {
      uint64_t v66 = v101;
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v56, &v125[*(void *)(*(void *)v125 + 600)], v64);
      uint64_t v67 = v102;
      uint64_t v68 = *(void *)(v102 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v65, 1, v102) != 1)
      {
        uint64_t v89 = (uint64_t *)&v65[*(int *)(v67 + 52)];
        uint64_t v90 = v89[1];
        uint64_t v104 = (char *)*v89;
        uint64_t v91 = *(void (**)(char *, uint64_t))(v68 + 8);
        swift_bridgeObjectRetain();
        v91(v65, v67);
        uint64_t v106 = v59 | 0x10;
        type metadata accessor for BouncingHardlinkStagedContext();
        uint64_t v92 = (uint64_t)v98;
        (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v98, v124, v100);
        uint64_t v104 = (char *)sub_24DB9A178(v92, (uint64_t)v104, v90);
        uint64_t v69 = 3;
        goto LABEL_15;
      }
      (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v64);
    }
  }
  uint64_t v106 = v59;
  type metadata accessor for StagedContext();
  uint64_t v104 = (char *)swift_allocObject();
  uint64_t v69 = 1;
LABEL_15:
  uint64_t v102 = v69;
  uint64_t v100 = *((void *)v111 + 2);
  uint64_t v70 = v125;
  uint64_t v71 = *(void *)v125;
  uint64_t v111 = (char *)v70 + *(void *)(*v70 + 576);
  v127[1] = 0;
  v127[0] = 0;
  v127[2] = 0xB000000000000000;
  long long v128 = 0u;
  long long v129 = 0u;
  uint64_t v101 = *(void *)&v125[*(void *)(v71 + 608)];
  sub_24D414684((uint64_t)v126);
  sub_24D5013B0((uint64_t)v126, (uint64_t)&v130);
  uint64_t v72 = v118;
  unint64_t v73 = v110;
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v110, v61, v120);
  unint64_t v74 = v108;
  v105((char *)v108, v124, (uint64_t)v117);
  unint64_t v75 = (*(unsigned __int8 *)(v72 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  unint64_t v76 = (v109 + v75 + *(unsigned __int8 *)(v119 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
  unint64_t v77 = (v107 + v76 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v78 = (char *)swift_allocObject();
  uint64_t v79 = v114;
  *((void *)v78 + 2) = v115;
  *((void *)v78 + 3) = v79;
  uint64_t v81 = v112;
  uint64_t v80 = v113;
  *((void *)v78 + 4) = v116;
  *((void *)v78 + 5) = v80;
  *((void *)v78 + 6) = v81;
  *((void *)v78 + 7) = v70;
  uint64_t v82 = &v78[v75];
  uint64_t v83 = v120;
  uint64_t v84 = v72;
  uint64_t v85 = v122;
  *((void *)v78 + 8) = v121;
  *((void *)v78 + 9) = v85;
  ((void (*)(char *, char *, uint64_t))v93[0])(v82, v73, v83);
  v94(&v78[v76], v74, (uint64_t)v117);
  *(void *)&v78[v77] = v123;
  uint64_t v86 = *(void (**)(char *, char *, uint64_t, uint64_t, void *, char *, uint64_t, uint64_t, uint64_t *, void, uint64_t (*)(uint64_t), char *))(*(void *)v100 + 624);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v87 = v124;
  uint64_t v88 = v103;
  v86(v111, v124, v102, (uint64_t)v104, v127, v103, v101, v106, &v130, 0, sub_24DBA1828, v78);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v88, v120);
  v96(v87, v117);
}

uint64_t sub_24DB99E80(uint64_t a1, void (*a2)(char *, uint64_t), void *a3, uint64_t a4, uint64_t (*a5)(void, void, void, void (*)(char *, uint64_t)), uint64_t a6)
{
  v18[1] = a6;
  uint64_t v19 = a5;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v7 = type metadata accessor for SnapshotItem();
  uint64_t v20 = sub_24DCCA3F8();
  uint64_t v8 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v10 = (char *)v18 - v9;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v11 = type metadata accessor for ItemState();
  uint64_t v12 = sub_24DCCA3F8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))((char *)v18 - v14, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v10, 1, 1, v7);
  uint64_t v16 = v23;
  sub_24DB9E104((uint64_t)v15, (uint64_t)v10, a2, v21, v22);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v20);
  if (v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v19(0, 0, 0, a2);
}

uint64_t *sub_24DB9A178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t *)swift_allocObject();
  uint64_t v7 = sub_24DBA0A34(a1, a2, a3, v6);
  swift_release();
  return v7;
}

uint64_t sub_24DB9A1E0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v62 = a8;
  uint64_t v63 = a4;
  uint64_t v57 = a6;
  uint64_t v58 = a7;
  uint64_t v64 = a5;
  uint64_t v60 = a2;
  uint64_t v61 = a3;
  uint64_t v56 = a1;
  uint64_t v59 = *a2;
  uint64_t v8 = *(void *)(v59 + 96);
  uint64_t v9 = *(void *)(v59 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = type metadata accessor for ItemState();
  uint64_t v50 = v10;
  uint64_t v65 = *(void *)(v10 - 8);
  uint64_t v55 = *(void *)(v65 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v45 - v11;
  uint64_t v51 = (char *)&v45 - v11;
  uint64_t v13 = v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v53 = v13;
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  uint64_t v66 = AssociatedTypeWitness;
  uint64_t v67 = v15;
  uint64_t v68 = AssociatedConformanceWitness;
  uint64_t v69 = v17;
  uint64_t v18 = type metadata accessor for FileItemVersion();
  uint64_t v48 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v52 = *(void *)(v19 + 64);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v45 - v20;
  uint64_t v49 = (char *)&v45 - v20;
  type metadata accessor for ItemPropagationResult();
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v22 = sub_24DCCB058();
  uint64_t v46 = v22;
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v45 - v25;
  uint64_t v47 = (char *)&v45 - v25;
  uint64_t v27 = swift_allocObject();
  uint64_t v54 = v27;
  uint64_t v28 = v64;
  *(void *)(v27 + 16) = v63;
  *(void *)(v27 + 24) = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v26, v56, v22);
  uint64_t v45 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v57, v18);
  uint64_t v29 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v12, v58, v10);
  unint64_t v30 = (*(unsigned __int8 *)(v23 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v31 = (v24 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (*(unsigned __int8 *)(v19 + 80) + v31 + 8) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v33 = (v52 + *(unsigned __int8 *)(v29 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  unint64_t v34 = (v55 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = (char *)swift_allocObject();
  uint64_t v37 = v59;
  *((void *)v36 + 2) = v9;
  uint64_t v38 = v60;
  *((void *)v36 + 3) = *(void *)(v37 + 88);
  *((void *)v36 + 4) = v53;
  *((void *)v36 + 5) = *(void *)(v37 + 104);
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v36[v30], v47, v46);
  uint64_t v39 = v61;
  *(void *)&v36[v31] = v61;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v36[v32], v49, v48);
  (*(void (**)(char *, char *, uint64_t))(v65 + 32))(&v36[v33], v51, v50);
  *(void *)&v36[v34] = v38;
  uint64_t v40 = v63;
  *(void *)&v36[v35] = v62;
  uint64_t v41 = &v36[(v35 + 15) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v42 = v64;
  *(void *)uint64_t v41 = v40;
  *((void *)v41 + 1) = v42;
  uint64_t v43 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D7B4A74, v39, (uint64_t)sub_24D73CC58, v54, (uint64_t)sub_24DBA20A0, (uint64_t)v36, v43, MEMORY[0x263F8D310]);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24DB9A7D4(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(void, uint64_t, uint64_t, void (*)(char *, uint64_t)), uint64_t a8)
{
  uint64_t v91 = a8;
  uint64_t v92 = a7;
  uint64_t v104 = a5;
  uint64_t v105 = a6;
  uint64_t v97 = a4;
  uint64_t v111 = a1;
  uint64_t v9 = *a2;
  uint64_t v10 = *(void *)(*a2 + 544);
  uint64_t v11 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v100 = (char *)v85 - v12;
  uint64_t v107 = a2;
  uint64_t v13 = *(void *)(v9 + 560);
  type metadata accessor for SnapshotItem();
  uint64_t v14 = sub_24DCCA3F8();
  uint64_t v102 = *(void *)(v14 - 8);
  uint64_t v103 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v101 = (char *)v85 - v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = (void (*)(char *, uint64_t))swift_getAssociatedConformanceWitness();
  uint64_t v96 = type metadata accessor for ItemState();
  uint64_t v17 = sub_24DCCA3F8();
  uint64_t v98 = *(void *)(v17 - 8);
  uint64_t v99 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v116 = (uint64_t)v85 - v19;
  uint64_t v94 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v85 - v20;
  uint64_t v110 = v10;
  uint64_t v112 = v13;
  uint64_t v22 = type metadata accessor for ItemPropagationResult();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v90 = (char *)v85 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v93 = (char *)v85 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v95 = (char *)v85 - v28;
  uint64_t v29 = sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v31 = sub_24DCCB058();
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  unint64_t v34 = (void (**)(char *, uint64_t))((char *)v85 - v33);
  uint64_t v114 = v29;
  uint64_t v113 = *(void *)(v29 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  uint64_t v37 = (char *)v85 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v39 = (char *)v85 - v38;
  (*(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v40 + 16))(v34, v111, v31);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v111 = v39;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t AssociatedConformanceWitness = *v34;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v39, 1, 1, v22);
    uint64_t v94 = 0;
    id v108 = 0;
    uint64_t v42 = v23;
    goto LABEL_11;
  }
  id v43 = *(void (**)(char *, uint64_t))((char *)v34 + *(int *)(TupleTypeMetadata2 + 48));
  int v44 = (*(uint64_t (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v23 + 48))(v34, 1, v22);
  id v108 = v43;
  if (v44 == 1)
  {
    uint64_t v39 = v111;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v111, 1, 1, v22);
    uint64_t AssociatedConformanceWitness = 0;
    uint64_t v42 = v23;
    if (v43)
    {
LABEL_5:
      strcpy((char *)v115, " domver:");
      BYTE1(v115[1]) = 0;
      WORD1(v115[1]) = 0;
      HIDWORD(v115[1]) = -402653184;
      id v45 = objc_msgSend(v43, sel_description);
      sub_24DCC97E8();

      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v94 = v115[0];
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v87 = v37;
    uint64_t v46 = v95;
    (*(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(v23 + 32))(v95, v34, v22);
    uint64_t v47 = v43;
    uint64_t v48 = v111;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v111, v46, v22);
    uint64_t v88 = v23;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v48, 0, 1, v22);
    uint64_t v49 = v21;
    uint64_t v50 = v112;
    uint64_t v51 = v112;
    uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v112 + 64);
    id v89 = v47;
    uint64_t v53 = v51 + 64;
    uint64_t v54 = v110;
    uint64_t v86 = v52;
    v85[1] = v53;
    v52(v110, v50);
    uint64_t v55 = (uint64_t)v107 + *(void *)(*v107 + 576);
    LOBYTE(v48) = sub_24DCC9798();
    uint64_t v56 = v94;
    (*(void (**)(char *, uint64_t))(v94 + 8))(v49, AssociatedTypeWitness);
    if (v48)
    {
      uint64_t v42 = v88;
      (*(void (**)(char *, uint64_t))(v88 + 8))(v95, v22);

      uint64_t AssociatedConformanceWitness = 0;
    }
    else
    {
      type metadata accessor for FileTreeError();
      swift_getWitnessTable();
      uint64_t AssociatedConformanceWitness = (void (*)(char *, uint64_t))swift_allocError();
      uint64_t v57 = v54;
      uint64_t v59 = v58;
      sub_24DCCA3F8();
      swift_getTupleTypeMetadata2();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v59, v55, AssociatedTypeWitness);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v59, 0, 1, AssociatedTypeWitness);
      uint64_t v60 = v95;
      v86(v57, v50);
      swift_storeEnumTagMultiPayload();

      uint64_t v42 = v88;
      (*(void (**)(char *, uint64_t))(v88 + 8))(v60, v22);
    }
    uint64_t v39 = v111;
    id v43 = v108;
    uint64_t v37 = v87;
    if (v108) {
      goto LABEL_5;
    }
  }
  uint64_t v94 = 0;
  id v108 = 0;
LABEL_11:
  uint64_t v62 = v113;
  uint64_t v61 = v114;
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v37, v39, v114);
  uint64_t v95 = *(char **)(v42 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v95)(v37, 1, v22) == 1)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v37, v61);
    uint64_t v63 = v42;
    if (AssociatedConformanceWitness)
    {
      swift_bridgeObjectRelease();
      uint64_t v64 = 0;
      uint64_t v65 = 0;
    }
    else
    {
      strcpy((char *)v115, "<actual:nil");
      HIDWORD(v115[1]) = -352321536;
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v64 = v115[0];
      uint64_t v65 = v115[1];
    }
  }
  else
  {
    uint64_t v66 = v93;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v93, v37, v22);
    v115[0] = 0;
    v115[1] = 0xE000000000000000;
    sub_24DCCA728();
    sub_24DCC9968();
    sub_24DCCADC8();
    sub_24DCC9968();
    sub_24D97C4E0(*(void *)&v66[*(int *)(v22 + 36)]);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v68 = v115[0];
    uint64_t v67 = v115[1];
    v115[0] = 0;
    v115[1] = 0xE000000000000000;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    strcpy((char *)v115, "shouldFetch:");
    BYTE5(v115[1]) = 0;
    HIWORD(v115[1]) = -5120;
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    v115[0] = v68;
    v115[1] = v67;
    swift_bridgeObjectRetain();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v64 = v115[0];
    uint64_t v65 = v115[1];
    uint64_t v63 = v42;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v66, v22);
  }
  uint64_t v69 = (uint64_t)v101;
  uint64_t v70 = v96;
  uint64_t v71 = *(void *)(v96 - 8);
  uint64_t v72 = v116;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 16))(v116, v97, v96);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v72, 0, 1, v70);
  unint64_t v73 = v111;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v95)(v111, 1, v22))
  {
    uint64_t v74 = v110;
    uint64_t v75 = *(void *)(v110 - 8);
    uint64_t v76 = 1;
    uint64_t v77 = (uint64_t)v100;
  }
  else
  {
    uint64_t v78 = v90;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v90, v73, v22);
    uint64_t v74 = v110;
    uint64_t v75 = *(void *)(v110 - 8);
    uint64_t v77 = (uint64_t)v100;
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v100, v78, v110);
    uint64_t v76 = 0;
  }
  uint64_t v79 = v112;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v77, v76, 1, v74);
  sub_24D97D6D0(v77, v74, v79, v69);
  uint64_t v80 = v116;
  uint64_t v81 = AssociatedConformanceWitness;
  uint64_t v82 = v106;
  sub_24DB9E104(v116, v69, AssociatedConformanceWitness, v104, v105);
  uint64_t v83 = (uint64_t (**)(char *, uint64_t))(v113 + 8);
  if (v82)
  {
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v69, v103);
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v80, v99);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v69, v103);
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v80, v99);
    v92(0, v64, v65, v81);

    swift_bridgeObjectRelease();
  }
  return (*v83)(v73, v114);
}

uint64_t sub_24DB9B600@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_getAssociatedTypeWitness();
  type metadata accessor for SnapshotItem();
  sub_24DCCA3F8();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v5 = a1 + TupleTypeMetadata[12];
  uint64_t v6 = (void *)(a1 + TupleTypeMetadata[16]);
  uint64_t v7 = TupleTypeMetadata[20];
  uint64_t v8 = (uint64_t)v1 + *(void *)(v3 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v8, AssociatedTypeWitness);
  uint64_t v10 = type metadata accessor for SnapshotItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  uint64_t v11 = *v1;
  uint64_t v12 = (uint64_t *)((char *)v1 + *(void *)(*v1 + 592));
  uint64_t v13 = v12[1];
  *uint64_t v6 = *v12;
  v6[1] = v13;
  *(void *)(a1 + v7) = *(uint64_t *)((char *)v1 + *(void *)(v11 + 584));
  type metadata accessor for DirectionalTestingOperation();
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = type metadata accessor for TestingOperation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 0, 1, v14);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24DB9B8CC()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 600);
  type metadata accessor for Bouncing.BouncingContext();
  uint64_t v4 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  uint64_t v5 = v0 + *(void *)(*(void *)v0 + 616);
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState();
  uint64_t v6 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + *(void *)(*(void *)v0 + 624);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v8 = sub_24DCCA3F8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_24DB9BBD4()
{
  uint64_t v0 = sub_24D98339C();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 600);
  type metadata accessor for Bouncing.BouncingContext();
  uint64_t v4 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  uint64_t v5 = v0 + *(void *)(*(void *)v0 + 616);
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState();
  uint64_t v6 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + *(void *)(*(void *)v0 + 624);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v8 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return v0;
}

uint64_t sub_24DB9BEE8()
{
  sub_24DB9BBD4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Bouncing.BounceItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24DB9BF54@<X0>(uint64_t a1@<X8>)
{
  sub_24DB96114(a1);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ReconciliationID();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t type metadata accessor for Bouncing.BouncingContext()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24DB9C0DC()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_24DCCA3F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24DB9C194(uint64_t a1)
{
  if (a1 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (a1) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_24DB9C1AC(char a1)
{
  return a1 & 1;
}

uint64_t sub_24DB9C1B8(char a1)
{
  return a1 & 1;
}

uint64_t sub_24DB9C1C0()
{
  swift_getWitnessTable();

  return sub_24DCCAE98();
}

uint64_t sub_24DB9C234(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D6D8];

  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_24DB9C2A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D6D8];

  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_24DB9C310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D6D8];

  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_24DB9C380@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24DB9C194(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_24DB9C3B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24DB9C1B8(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_24DB9C3E8()
{
  return sub_24DB9C1AC(*v0);
}

uint64_t sub_24DB9C410@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24DB9C194(a1);
  *a2 = result;
  return result;
}

uint64_t sub_24DB9C440(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24DB9C494(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24DB9C4E8(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_24DB9C538(a1);
  return v2;
}

void *sub_24DB9C538(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)*v1;
  uint64_t v5 = v4[15];
  uint64_t v6 = v4[14];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_24DCCA3F8();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v28 = (char *)&v25 - v9;
  uint64_t v36 = v6;
  uint64_t v37 = v5;
  type metadata accessor for BouncingHardlinkStagedContext.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v30 = sub_24DCCAC08();
  uint64_t v26 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = *(void (**)(void))(*(void *)(AssociatedTypeWitness - 8) + 56);
  uint64_t v31 = (char *)v2 + v4[16];
  uint64_t v27 = AssociatedTypeWitness;
  v12();
  uint64_t v13 = (void *)((char *)v2 + *(void *)(*v2 + 136));
  void *v13 = 0;
  v13[1] = 0;
  unint64_t v34 = a1;
  uint64_t v35 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_retain();
  uint64_t v29 = v11;
  uint64_t v14 = v39;
  sub_24DCCB0B8();
  if (v14)
  {
    swift_release();
    uint64_t v18 = v32;
    uint64_t v17 = v33;
    uint64_t v19 = v31;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v17);
    swift_bridgeObjectRelease();
    type metadata accessor for BouncingHardlinkStagedContext();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v40[0]) = 0;
    uint64_t v15 = v27;
    swift_getAssociatedConformanceWitness();
    uint64_t v16 = v28;
    sub_24DCCAB98();
    ((void (*)(char *, void, uint64_t, uint64_t))v12)(v16, 0, 1, v15);
    uint64_t v21 = v31;
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v32 + 40))(v21, v16, v33);
    swift_endAccess();
    char v41 = 1;
    sub_24D4ED88C();
    sub_24DCCAB98();
    uint64_t v22 = v40[1];
    uint64_t v23 = v35;
    *uint64_t v35 = v40[0];
    v23[1] = v22;
    swift_release();
    swift_bridgeObjectRelease();
    sub_24DCCAAB8();
    uint64_t v24 = (void (**)(char *, uint64_t))(v26 + 8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    (*v24)(v29, v30);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  }
  return v2;
}

uint64_t sub_24DB9CA14(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194920);
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v23 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v4 + 120);
  uint64_t v8 = *(void *)(v4 + 112);
  uint64_t v27 = v7;
  uint64_t v28 = v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v29 = sub_24DCCA3F8();
  uint64_t v26 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - v9;
  type metadata accessor for BouncingHardlinkStagedContext.CodingKeys();
  swift_getWitnessTable();
  uint64_t v11 = sub_24DCCAD58();
  uint64_t v30 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v23 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v14 = v26;
  sub_24DCCB0D8();
  uint64_t v15 = (uint64_t)v2 + *(void *)(*v2 + 128);
  swift_beginAccess();
  uint64_t v16 = v15;
  uint64_t v17 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v10, v16, v29);
  LOBYTE(v33) = 0;
  uint64_t v36 = *(void *)(swift_getAssociatedConformanceWitness() + 24);
  swift_getWitnessTable();
  uint64_t v18 = v32;
  sub_24DCCACF8();
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v13, v11);
  }
  else
  {
    uint64_t v20 = v14;
    uint64_t v21 = v30;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v17);
    long long v33 = *(_OWORD *)((char *)v2 + *(void *)(*v2 + 136));
    char v35 = 1;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B199BD0);
    sub_24DB9E090();
    sub_24DCCACF8();
    sub_24DCCAC28();
    __swift_project_boxed_opaque_existential_1(&v33, v34);
    sub_24D502B78();
    uint64_t v22 = v23;
    sub_24DCCB0D8();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v13, v11);
  }
}

uint64_t sub_24DB9CEA0()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 128);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_24DB9CF80()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 128);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24DB9D058()
{
  sub_24DB9CF80();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BouncingHardlinkStagedContext()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for Bouncing()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24DB9D0E0()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24DB9D190(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v7 + 16 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v7) + v6 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v11 = AssociatedTypeWitness;
    uint64_t v12 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    v12(a1, a2, AssociatedTypeWitness);
    uint64_t v13 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    void *v13 = *v14;
    v13[1] = v14[1];
    uint64_t v15 = ((unint64_t)v13 + v7 + 16) & ~v7;
    uint64_t v16 = ((unint64_t)v14 + v7 + 16) & ~v7;
    swift_bridgeObjectRetain();
    v12((uint64_t *)v15, (uint64_t *)v16, v11);
  }
  return a1;
}

uint64_t sub_24DB9D308(unint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v3 + 8);
  uint64_t v8 = v3 + 8;
  v7(a1, AssociatedTypeWitness);
  unint64_t v4 = (a1 + *(void *)(v8 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  unint64_t v5 = (v4 + *(unsigned __int8 *)(v8 + 72) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 72);

  return v7(v5, AssociatedTypeWitness);
}

uint64_t sub_24DB9D3DC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v7 = v5 + 16;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 48) + 7;
  uint64_t v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  uint64_t v11 = *(unsigned __int8 *)(v7 + 64);
  uint64_t v12 = ((unint64_t)v9 + v11 + 16) & ~v11;
  uint64_t v13 = ((unint64_t)v10 + v11 + 16) & ~v11;
  swift_bridgeObjectRetain();
  v6(v12, v13, AssociatedTypeWitness);
  return a1;
}

unint64_t sub_24DB9D4C8(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24);
  uint64_t v7 = v5 + 24;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 40) + 7;
  uint64_t v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6(((unint64_t)v9 + *(unsigned __int8 *)(v7 + 56) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 56), ((unint64_t)v10 + *(unsigned __int8 *)(v7 + 56) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 56), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_24DB9D5C0(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32);
  uint64_t v7 = v5 + 32;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 32) + 7;
  uint64_t v9 = (_OWORD *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (_OWORD *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v6(((unint64_t)v9 + *(unsigned __int8 *)(v7 + 48) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 48), ((unint64_t)v10 + *(unsigned __int8 *)(v7 + 48) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 48), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_24DB9D698(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40);
  uint64_t v7 = v5 + 40;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 24) + 7;
  uint64_t v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  v6(((unint64_t)v9 + *(unsigned __int8 *)(v7 + 40) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 40), ((unint64_t)v10 + *(unsigned __int8 *)(v7 + 40) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 40), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_24DB9D780(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + v8;
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((a2 - v7 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if (v6 < 0x7FFFFFFF)
      {
        unint64_t v16 = *(void *)((((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v16 >= 0xFFFFFFFF) {
          LODWORD(v16) = -1;
        }
        return (v16 + 1);
      }
      else
      {
        uint64_t v15 = *(uint64_t (**)(unsigned __int16 *))(v5 + 48);
        return v15(a1);
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_24DB9D988(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
      + v8;
  if (a3 <= v9)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v14))
    {
      int v11 = 4;
    }
    else if (v14 >= 0x100)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 > 1;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (v9 < a2)
  {
    unsigned int v12 = ~v9 + a2;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      if (v10)
      {
        int v15 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v10] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v13;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x24DB9DC24);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v17 = (void *)((unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            *uint64_t v17 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            v17[1] = (a2 - 1);
          }
        }
        else
        {
          unint64_t v16 = *(void (**)(unsigned char *, uint64_t))(v6 + 56);
          v16(a1, a2);
        }
      }
      return;
  }
}

uint64_t sub_24DB9DC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9 + *(void *)(*(void *)v9 + 616);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = type metadata accessor for ItemState();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
  uint64_t v13 = v9 + *(void *)(*(void *)v9 + 624);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v14 = type metadata accessor for FileItemVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v9 + *(void *)(*(void *)v9 + 576), a1, AssociatedTypeWitness);
  *(void *)(v9 + *(void *)(*(void *)v9 + 584)) = a2;
  int v15 = (void *)(v9 + *(void *)(*(void *)v9 + 592));
  void *v15 = a3;
  v15[1] = a4;
  uint64_t v16 = v9 + *(void *)(*(void *)v9 + 600);
  type metadata accessor for Bouncing.BouncingContext();
  uint64_t v17 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v16, a5, v17);
  *(void *)(v9 + *(void *)(*(void *)v9 + 608)) = a6;
  id v18 = a6;
  uint64_t v19 = sub_24D983344(a7, a8, a9);
  swift_retain();
  sub_24D8F94C4(0x2000);
  swift_release();
  return v19;
}

uint64_t sub_24DB9DFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_24DB9DC4C(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t type metadata accessor for Bouncing.BouncingContext.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for BouncingHardlinkStagedContext.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_24DB9E090()
{
  unint64_t result = qword_269870A98[0];
  if (!qword_269870A98[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B199BD0);
    sub_24D4ED694();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269870A98);
  }
  return result;
}

void sub_24DB9E104(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), void *a4, uint64_t a5)
{
  uint64_t v338 = a5;
  v310 = a4;
  char v326 = a3;
  uint64_t v309 = a2;
  uint64_t v304 = a1;
  uint64_t v6 = v5;
  unsigned int v7 = (void *)*v5;
  uint64_t v8 = v7[70];
  uint64_t v9 = v7[68];
  uint64_t v10 = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v343 = (ValueMetadata *)swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v345 = swift_getAssociatedConformanceWitness();
  uint64_t v268 = type metadata accessor for FileItemVersion();
  uint64_t v267 = sub_24DCCA3F8();
  uint64_t v266 = *(void *)(v267 - 8);
  MEMORY[0x270FA5388](v267);
  uint64_t v265 = (char *)&v258 - v11;
  uint64_t v270 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v274 = *(void *)(v270 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v270);
  uint64_t v264 = (char *)&v258 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v269 = (char *)&v258 - v14;
  uint64_t v336 = (uint64_t)v7;
  v339 = v10;
  int v15 = (ValueMetadata *)v7[69];
  uint64_t v16 = v7[71];
  uint64_t v263 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v260 = *(void *)(v263 - 8);
  MEMORY[0x270FA5388](v263);
  v262 = (char *)&v258 - v17;
  uint64_t AssociatedTypeWitness = v9;
  v343 = v15;
  uint64_t AssociatedConformanceWitness = v8;
  uint64_t v345 = v16;
  uint64_t v275 = type metadata accessor for ItemReconciliation();
  uint64_t v272 = sub_24DCCA3F8();
  uint64_t v276 = *(void *)(v272 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v272);
  v271 = (char *)&v258 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v259 = (char *)&v258 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  v261 = (char *)&v258 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v273 = (char *)&v258 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v277 = (char *)&v258 - v26;
  uint64_t v27 = type metadata accessor for ItemMetadata();
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v282 = (uint64_t)&v258 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = swift_getAssociatedTypeWitness();
  uint64_t v327 = swift_getAssociatedConformanceWitness();
  uint64_t v30 = v29;
  uint64_t v341 = v29;
  uint64_t v31 = type metadata accessor for ItemState();
  uint64_t v311 = *(void *)(v31 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v281 = (uint64_t)&v258 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  v285 = (char *)&v258 - v34;
  uint64_t v303 = v35;
  uint64_t v308 = sub_24DCCA3F8();
  uint64_t v301 = *(void *)(v308 - 8);
  uint64_t v36 = MEMORY[0x270FA5388](v308);
  uint64_t v284 = (char *)&v258 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  v298 = (char *)&v258 - v38;
  uint64_t v39 = type metadata accessor for SnapshotItem();
  uint64_t v318 = sub_24DCCA3F8();
  uint64_t v317 = *(void *)(v318 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v318);
  v305 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v258 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  v280 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v258 - v43);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  v307 = (char *)&v258 - v45;
  uint64_t v313 = v39;
  uint64_t v312 = *(void *)(v39 - 8);
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v306 = (char *)&v258 - v47;
  uint64_t v337 = *(void *)(v30 - 8);
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v279 = (char *)&v258 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v283 = (char *)&v258 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  v302 = (char *)&v258 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  v278 = (char *)&v258 - v55;
  MEMORY[0x270FA5388](v54);
  uint64_t v300 = (uint64_t)&v258 - v56;
  uint64_t v315 = type metadata accessor for FileTreeError();
  uint64_t v296 = *(void *)(v315 - 8);
  MEMORY[0x270FA5388](v315);
  uint64_t v316 = (char *)&v258 - v57;
  uint64_t AssociatedTypeWitness = v9;
  v343 = v15;
  uint64_t AssociatedConformanceWitness = v8;
  uint64_t v345 = v16;
  uint64_t v58 = v16;
  uint64_t v324 = type metadata accessor for ReconciliationMutation();
  uint64_t v328 = *(void *)(v324 - 8);
  MEMORY[0x270FA5388](v324);
  uint64_t v322 = (char *)&v258 - v59;
  v331 = (ValueMetadata *)v9;
  uint64_t v332 = v8;
  uint64_t AssociatedTypeWitness = v9;
  v343 = v15;
  uint64_t AssociatedConformanceWitness = v8;
  uint64_t v345 = v16;
  uint64_t v60 = type metadata accessor for Bouncing.BouncingContext();
  uint64_t v61 = sub_24DCCA3F8();
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  v294 = (char *)&v258 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v63);
  uint64_t v66 = (char *)&v258 - v65;
  uint64_t v67 = swift_getAssociatedTypeWitness();
  uint64_t v314 = *(void *)(v67 - 8);
  uint64_t v68 = MEMORY[0x270FA5388](v67);
  v287 = (char *)&v258 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = MEMORY[0x270FA5388](v68);
  uint64_t v72 = (char *)&v258 - v71;
  MEMORY[0x270FA5388](v70);
  uint64_t v74 = (char *)&v258 - v73;
  uint64_t v75 = v58;
  uint64_t v76 = v62;
  v329 = v15;
  uint64_t v330 = v75;
  uint64_t v77 = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = v341;
  v343 = (ValueMetadata *)v67;
  uint64_t AssociatedConformanceWitness = v327;
  uint64_t v345 = v77;
  uint64_t v78 = type metadata accessor for ReconciliationID();
  uint64_t v334 = *(void *)(v78 - 8);
  uint64_t v335 = v78;
  MEMORY[0x270FA5388](v78);
  uint64_t v80 = (char *)&v258 - v79;
  uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  v291 = (char *)v339 + *(void *)(v336 + 600);
  uint64_t v292 = v62 + 16;
  v290 = v81;
  ((void (*)(char *))v81)(v66);
  uint64_t v82 = *(void *)(v60 - 8);
  uint64_t v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48);
  uint64_t v289 = v82 + 48;
  uint64_t v288 = v83;
  unsigned int v84 = v83(v66, 1, v60);
  uint64_t v295 = v60;
  uint64_t v299 = v67;
  uint64_t v293 = v61;
  uint64_t v286 = v82;
  if (v84 == 1)
  {
    (*(void (**)(char *, uint64_t))(v76 + 8))(v66, v61);
    uint64_t v85 = v339;
    uint64_t v86 = v337;
    (*(void (**)(char *, char *, uint64_t))(v337 + 16))(v80, (char *)v85 + *(void *)(*v85 + 576), v341);
  }
  else
  {
    uint64_t v87 = v314;
    (*(void (**)(char *, char *, uint64_t))(v314 + 16))(v72, v66, v67);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v66, v60);
    uint64_t v88 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
    v88(v74, v72, v67);
    v88(v80, v74, v67);
    uint64_t v85 = v339;
    uint64_t v86 = v337;
  }
  v340 = v80;
  uint64_t v89 = v335;
  swift_storeEnumTagMultiPayload();
  uint64_t AssociatedTypeWitness = (uint64_t)v331;
  v343 = v329;
  uint64_t AssociatedConformanceWitness = v332;
  uint64_t v345 = v330;
  uint64_t v336 = type metadata accessor for JobResult();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v90 = (uint64_t)v322;
  uint64_t v91 = &v322[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v92 = *(unsigned int (**)(uint64_t, char *, uint64_t))(v334 + 16);
  uint64_t v320 = (void (*)(char *, uint64_t))(v334 + 16);
  uint64_t v321 = v92;
  v92((uint64_t)v322, v340, v89);
  uint64_t v333 = (uint64_t)v85 + *(void *)(*v85 + 576);
  uint64_t v93 = *(void (**)(char *))(v86 + 16);
  uint64_t v94 = v341;
  v93(v91);
  swift_storeEnumTagMultiPayload();
  uint64_t v95 = v324;
  swift_storeEnumTagMultiPayload();
  sub_24D907568(v338, v90);
  uint64_t v96 = v328 + 8;
  v323 = *(void (**)(uint64_t, uint64_t))(v328 + 8);
  v323(v90, v95);
  uint64_t v97 = v340;
  uint64_t v98 = v90 + *(int *)(TupleTypeMetadata2 + 48);
  TupleTypeMetadata2 = v86 + 16;
  v297 = v93;
  ((void (*)(uint64_t, uint64_t, uint64_t))v93)(v90, v333, v94);
  swift_storeEnumTagMultiPayload();
  uint64_t v99 = v97;
  v321(v98, v97, v89);
  uint64_t v100 = v338;
  swift_storeEnumTagMultiPayload();
  sub_24D907568(v100, v90);
  v323(v90, v95);
  uint64_t v101 = v337;
  uint64_t v102 = v326;
  if (!v326)
  {
    uint64_t v129 = v317;
    uint64_t v130 = v307;
    uint64_t v131 = v318;
    (*(void (**)(char *, uint64_t, uint64_t))(v317 + 16))(v307, v309, v318);
    uint64_t v132 = v312;
    uint64_t v133 = v313;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v312 + 48))(v130, 1, v313) == 1)
    {
      (*(void (**)(char *, uint64_t))(v129 + 8))(v130, v131);
LABEL_28:
      uint64_t v154 = v325;
      uint64_t v155 = v305;
      uint64_t v156 = (*(uint64_t (**)(void))(v132 + 56))();
      uint64_t v157 = v339[15];
      uint64_t v158 = v339[16];
      uint64_t v159 = (*(uint64_t (**)(uint64_t))(*(void *)v100 + 192))(v156);
      sub_24DBCB8D8(v155, v333, 0, 0, 0, v310, v157, v158, 4096, v159);
      if (!v154)
      {
        swift_release();
        (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v317 + 8))(v155, v318);
        uint64_t v161 = *(void (**)(char *, uint64_t))(v334 + 8);
        uint64_t v162 = v340;
        goto LABEL_33;
      }
      swift_release();
      (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v317 + 8))(v155, v318);
      goto LABEL_30;
    }
    uint64_t v328 = v96;
    uint64_t v134 = v306;
    (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v306, v130, v133);
    uint64_t v135 = v301;
    uint64_t v136 = v298;
    char v326 = *(void (**)(char *, uint64_t))(v301 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v326)(v298, v304, v308);
    uint64_t v137 = v311;
    uint64_t v138 = v303;
    uint64_t v321 = *(unsigned int (**)(uint64_t, char *, uint64_t))(v311 + 48);
    if (v321((uint64_t)v136, (char *)1, v303) == 1)
    {
      (*(void (**)(char *, uint64_t))(v135 + 8))(v136, v308);
      (*(void (**)(char *, uint64_t))(v132 + 8))(v134, v133);
LABEL_27:
      uint64_t v100 = v338;
      goto LABEL_28;
    }
    uint64_t v147 = v283;
    uint64_t v148 = v341;
    uint64_t v149 = (void (*)(char *, char *, uint64_t))v297;
    ((void (*)(char *, char *, uint64_t))v297)(v283, v136, v341);
    uint64_t v150 = *(void (**)(char *, uint64_t))(v137 + 8);
    uint64_t v311 = v137 + 8;
    uint64_t v320 = v150;
    v150(v136, v138);
    uint64_t v151 = v337;
    (*(void (**)(char *, char *, uint64_t))(v337 + 32))(v302, v147, v148);
    uint64_t v152 = v284;
    uint64_t v153 = v308;
    ((void (*)(char *, uint64_t, uint64_t))v326)(v284, v304, v308);
    if (v321((uint64_t)v152, (char *)1, v138) == 1)
    {
      (*(void (**)(char *, uint64_t))(v301 + 8))(v152, v153);
      (*(void (**)(char *, uint64_t))(v151 + 8))(v302, v148);
      uint64_t v132 = v312;
      (*(void (**)(char *, uint64_t))(v312 + 8))(v306, v313);
      goto LABEL_27;
    }
    uint64_t v166 = v138;
    uint64_t v167 = (uint64_t *)&v152[*(int *)(v138 + 36)];
    int v168 = v152;
    uint64_t v169 = *v167;
    uint64_t v170 = v167[1];
    swift_bridgeObjectRetain();
    v320(v168, v138);
    uint64_t v171 = (uint64_t)v279;
    v149(v279, v302, v148);
    uint64_t v172 = v313;
    uint64_t v173 = v306;
    uint64_t v174 = v282;
    sub_24D409F80((uint64_t)&v306[*(int *)(v313 + 48)], v282);
    sub_24D958E58(v171, v169, v170, v174, v148, (uint64_t)v285);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v176 = v281;
    sub_24D98B988(v172, WitnessTable, v281);
    uint64_t v327 = sub_24D958FB0(v176, 0, 1, v166);
    v320((char *)v176, v166);
    uint64_t v177 = v312;
    char v178 = v280;
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), char *, uint64_t))(v312 + 16))(v280, v173, v172);
    uint64_t v179 = (*(uint64_t (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v177 + 56))(v178, 0, 1, v172);
    uint64_t v180 = v339[15];
    uint64_t v181 = v339[16];
    uint64_t v182 = (*(uint64_t (**)(uint64_t))(*(void *)v338 + 192))(v179);
    uint64_t v183 = v333;
    uint64_t v184 = v325;
    sub_24DBCB8D8(v178, v333, 0, 0, 0, v310, v180, v181, 4096, v182);
    if (v184)
    {
      swift_release();
      (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v317 + 8))(v178, v318);
      v320(v285, v303);
      (*(void (**)(char *, uint64_t))(v337 + 8))(v302, v341);
      (*(void (**)(char *, uint64_t))(v177 + 8))(v306, v172);
LABEL_30:
      uint64_t v160 = v340;
LABEL_31:
      uint64_t v161 = *(void (**)(char *, uint64_t))(v334 + 8);
      uint64_t v162 = v160;
LABEL_33:
      v161(v162, v335);
      return;
    }
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v317 + 8))(v178, v318);
    swift_release();
    uint64_t v185 = (uint64_t)v277;
    sub_24D4759C8(v183, (uint64_t)v277);
    BOOL v186 = sub_24D8903D0();
    uint64_t v187 = v276;
    uint64_t v189 = v276 + 16;
    unint64_t v188 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v276 + 16);
    uint64_t v190 = v273;
    uint64_t v191 = v272;
    v188(v273, v185, v272);
    uint64_t v325 = 0;
    uint64_t v321 = (unsigned int (*)(uint64_t, char *, uint64_t))v188;
    if (v186)
    {
      unsigned __int8 v192 = *(void (**)(char *, uint64_t))(v187 + 8);
      v192(v190, v191);
      uint64_t v193 = 0;
      uint64_t v330 = 1;
      uint64_t v194 = v271;
      unint64_t v195 = v323;
      uint64_t v196 = v327;
      goto LABEL_51;
    }
    uint64_t v197 = v261;
    uint64_t v318 = v189;
    v188(v261, (uint64_t)v190, v191);
    uint64_t v198 = v275;
    uint64_t v199 = *(void *)(v275 - 8);
    uint64_t v317 = *(void *)(v199 + 48);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v317)(v197, 1, v275) == 1)
    {
      uint64_t v200 = *(void (**)(char *, uint64_t))(v187 + 8);
      v200(v190, v191);
      char v326 = v200;
      v200(v197, v191);
      uint64_t v201 = v263;
      uint64_t v202 = v262;
    }
    else
    {
      uint64_t v203 = v260;
      uint64_t v202 = v262;
      uint64_t v201 = v263;
      (*(void (**)(char *, char *, uint64_t))(v260 + 16))(v262, &v197[*(int *)(v198 + 52)], v263);
      (*(void (**)(char *, uint64_t))(v199 + 8))(v197, v198);
      uint64_t v204 = *(void *)&v202[*(int *)(v201 + 36)];
      (*(void (**)(char *, uint64_t))(v203 + 8))(v202, v201);
      char v326 = *(void (**)(char *, uint64_t))(v276 + 8);
      v326(v273, v191);
      if (v204)
      {
        uint64_t v193 = 0;
        uint64_t v330 = 1;
        uint64_t v194 = v271;
        unint64_t v195 = v323;
        goto LABEL_50;
      }
    }
    unint64_t v205 = v259;
    v321((uint64_t)v259, (char *)v185, v191);
    uint64_t v206 = v275;
    int v207 = ((uint64_t (*)(char *, uint64_t, uint64_t))v317)(v205, 1, v275);
    uint64_t v194 = v271;
    if (v207 == 1)
    {
      unsigned __int8 v192 = v326;
      v326(v205, v191);
      uint64_t v330 = 0;
      uint64_t v193 = 1;
      unint64_t v195 = v323;
      uint64_t v196 = v327;
      goto LABEL_51;
    }
    uint64_t v208 = v260;
    (*(void (**)(char *, char *, uint64_t))(v260 + 16))(v202, &v205[*(int *)(v206 + 52)], v201);
    (*(void (**)(char *, uint64_t))(v199 + 8))(v205, v206);
    uint64_t v209 = *(void *)&v202[*(int *)(v201 + 40)];
    (*(void (**)(char *, uint64_t))(v208 + 8))(v202, v201);
    if ((v209 & 3) != 0)
    {
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v210 = swift_getTupleTypeMetadata2();
      uint64_t v211 = (uint64_t)v322;
      uint64_t v212 = &v322[*(int *)(v210 + 48)];
      ((void (*)(char *, uint64_t, uint64_t))v297)(v322, v333, v341);
      swift_storeEnumTagMultiPayload();
      uint64_t v330 = 1;
      *(void *)uint64_t v212 = 1;
      *(_OWORD *)(v212 + 8) = *(_OWORD *)(v339 + 15);
      swift_storeEnumTagMultiPayload();
      uint64_t v213 = v324;
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v338, v211);
      unint64_t v195 = v323;
      v323(v211, v213);
      uint64_t v193 = 0;
    }
    else
    {
      uint64_t v330 = 0;
      uint64_t v193 = 1;
      unint64_t v195 = v323;
    }
LABEL_50:
    unsigned __int8 v192 = v326;
    uint64_t v196 = v327;
LABEL_51:
    unint64_t v214 = v193 | v196 & 0xFFFFFFFFFF7FFFEFLL;
    uint64_t v215 = v274;
    if (qword_26B199AA0 != -1) {
      swift_once();
    }
    uint64_t v216 = (qword_26B1A24C8 | 0x409000000C000) & v214;
    uint64_t v217 = (uint64_t)v277;
    char v326 = v192;
    if (v216)
    {
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v218 = swift_getTupleTypeMetadata2();
      uint64_t v219 = v194;
      v220 = v195;
      uint64_t v221 = v191;
      uint64_t v222 = (uint64_t)v322;
      uint64_t v223 = &v322[*(int *)(v218 + 48)];
      ((void (*)(char *, uint64_t, uint64_t))v297)(v322, v333, v341);
      uint64_t v217 = (uint64_t)v277;
      swift_storeEnumTagMultiPayload();
      *(void *)uint64_t v223 = v216;
      *(_OWORD *)(v223 + 8) = *(_OWORD *)(v339 + 15);
      swift_storeEnumTagMultiPayload();
      uint64_t v224 = v324;
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v338, v222);
      uint64_t v215 = v274;
      uint64_t v225 = v222;
      uint64_t v191 = v221;
      v220(v225, v224);
      uint64_t v194 = v219;
      unsigned __int8 v192 = v326;
    }
    v321((uint64_t)v194, (char *)v217, v191);
    uint64_t v226 = v275;
    uint64_t v227 = *(void *)(v275 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v227 + 48))(v194, 1, v275) == 1)
    {
      v192(v194, v191);
      uint64_t v228 = v325;
      uint64_t v160 = v340;
      uint64_t v229 = v324;
    }
    else
    {
      uint64_t v230 = v264;
      uint64_t v231 = v270;
      (*(void (**)(char *, char *, uint64_t))(v215 + 16))(v264, v194, v270);
      (*(void (**)(char *, uint64_t))(v227 + 8))(v194, v226);
      uint64_t v232 = v269;
      (*(void (**)(char *, char *, uint64_t))(v215 + 32))(v269, v230, v231);
      uint64_t v233 = v266;
      v234 = v265;
      uint64_t v235 = v267;
      (*(void (**)(char *, char *, uint64_t))(v266 + 16))(v265, &v232[*(int *)(v231 + 48)], v267);
      uint64_t v236 = *(void *)(v268 - 8);
      int v237 = (*(uint64_t (**)(char *, uint64_t))(v236 + 48))(v234, 1);
      (*(void (**)(char *, uint64_t))(v233 + 8))(v234, v235);
      uint64_t v228 = v325;
      uint64_t v160 = v340;
      if (v237 == 1)
      {
        (*(void (**)(char *, uint64_t))(v215 + 8))(v232, v231);
        uint64_t v229 = v324;
      }
      else
      {
        uint64_t v229 = v324;
        v238 = v322;
        if (v330)
        {
          type metadata accessor for ReconciliationSideMutation();
          uint64_t v239 = v215;
          uint64_t v240 = &v238[*(int *)(swift_getTupleTypeMetadata2() + 48)];
          ((void (*)(char *, uint64_t, uint64_t))v297)(v238, v333, v341);
          swift_storeEnumTagMultiPayload();
          uint64_t v241 = v268;
          TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
          uint64_t v243 = *(int *)(TupleTypeMetadata3 + 48);
          uint64_t v244 = *(int *)(TupleTypeMetadata3 + 64);
          uint64_t v245 = v241;
          uint64_t v246 = (uint64_t)v322;
          (*(void (**)(char *, char *, uint64_t))(v236 + 16))(v240, &v306[*(int *)(v313 + 40)], v245);
          v240[v243] = 0;
          uint64_t v160 = v340;
          v240[v244] = 1;
          uint64_t v228 = v325;
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          sub_24D907568(v338, v246);
          v323(v246, v229);
          (*(void (**)(char *, uint64_t))(v239 + 8))(v269, v270);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v215 + 8))(v269, v270);
        }
      }
      uint64_t v217 = (uint64_t)v277;
    }
    uint64_t v247 = (uint64_t)v285;
    uint64_t v248 = (void (*)(uint64_t, uint64_t))v320;
    if ((v327 & 3) != 0)
    {
      v326((char *)v217, v191);
      v248(v247, v303);
      (*(void (**)(char *, uint64_t))(v337 + 8))(v302, v341);
      (*(void (**)(char *, uint64_t))(v312 + 8))(v306, v313);
    }
    else
    {
      char v249 = (*(uint64_t (**)(uint64_t))(*(void *)v310[3] + 216))(v333);
      uint64_t v250 = v341;
      uint64_t v251 = v306;
      if (!v228 && (v249 & 1) != 0)
      {
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v252 = v335;
        uint64_t v253 = swift_getTupleTypeMetadata2();
        uint64_t v254 = v191;
        uint64_t v255 = (uint64_t)v322;
        uint64_t v256 = &v322[*(int *)(v253 + 48)];
        ((void (*)(char *, uint64_t, uint64_t))v297)(v322, v333, v250);
        swift_storeEnumTagMultiPayload();
        *(void *)uint64_t v256 = 1;
        *(_OWORD *)(v256 + 8) = *(_OWORD *)(v339 + 15);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_24D907568(v338, v255);
        v323(v255, v229);
        v326(v277, v254);
        v320((char *)v247, v303);
        (*(void (**)(char *, uint64_t))(v337 + 8))(v302, v250);
        (*(void (**)(char *, uint64_t))(v312 + 8))(v306, v313);
        (*(void (**)(char *, uint64_t))(v334 + 8))(v340, v252);
        return;
      }
      v326((char *)v217, v191);
      v320((char *)v247, v303);
      (*(void (**)(char *, uint64_t))(v337 + 8))(v302, v250);
      (*(void (**)(char *, uint64_t))(v312 + 8))(v251, v313);
    }
    goto LABEL_31;
  }
  v347 = v326;
  uint64_t v103 = v326;
  uint64_t v104 = v102;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
  uint64_t v105 = v316;
  uint64_t v106 = v315;
  if (!swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v334 + 8))(v99, v335);

    goto LABEL_36;
  }
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 10)
  {
    if (EnumCaseMultiPayload == 1)
    {
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      qmemcpy(&v258 - 6, " filename below syncability original", 36);
      strcpy(&v257[2], "alError ");
      uint64_t v108 = v341;
      uint64_t AssociatedTypeWitness = v341;
      v343 = &type metadata for Filename;
      uint64_t AssociatedConformanceWitness = v341;
      uint64_t v345 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26986BB30);
      uint64_t v346 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      swift_bridgeObjectRelease();
      uint64_t v110 = (unint64_t *)&v105[TupleTypeMetadata[20]];
      unint64_t v112 = *v110;
      unint64_t v111 = v110[1];

      uint64_t v113 = v300;
      (*(void (**)(uint64_t, char *, uint64_t))(v101 + 32))(v300, v105, v108);
      if (v112 < 0xFFFFFFFF00000000 || (v111 & 0xF000000000000007) != 0)
      {
        uint64_t v114 = v111;
        uint64_t v115 = (void (*)(char *, uint64_t, uint64_t))v297;
        if (!(v111 >> 62))
        {
LABEL_13:
          uint64_t v333 = v114;
          uint64_t v116 = v112;
          uint64_t v117 = v278;
          v115(v278, v113, v108);
          uint64_t v118 = v339[15];
          uint64_t v119 = v339[16];
          uint64_t v120 = v108;
          uint64_t v121 = v339[17] | 0x800000000;
          uint64_t AssociatedTypeWitness = (uint64_t)v331;
          v343 = v329;
          uint64_t AssociatedConformanceWitness = v332;
          uint64_t v345 = v330;
          type metadata accessor for Ingestion.TrackTemporaryItem();
          sub_24D5203A8(v116, v111);
          uint64_t v122 = sub_24D732E04(v117, v118, v119, v121);
          uint64_t v123 = *(void (**)(char *, uint64_t))(v337 + 8);
          uint64_t v124 = v120;
          uint64_t v125 = v300;
          v123(v117, v124);
          uint64_t v126 = *(void **)(v122 + 96);
          uint64_t v127 = *(void **)(v122 + 104);
          *(void *)(v122 + 96) = 256;
          *(void *)(v122 + 104) = v333;
          char v128 = *(unsigned char *)(v122 + 112);
          *(unsigned char *)(v122 + 112) = 0;
          sub_24D3E380C(v126, v127, v128);
          sub_24D85246C(v338, v122);
          swift_release();
          sub_24D4A479C(v116, v111);

LABEL_35:
          uint64_t v164 = &v316[TupleTypeMetadata[16]];
          uint64_t v165 = v341;
          v123((char *)v125, v341);
          (*(void (**)(char *, uint64_t))(v334 + 8))(v340, v335);
          v123(v164, v165);
          goto LABEL_36;
        }
        uint64_t v100 = v338;
        if (v111 >> 62 == 1)
        {
          uint64_t v114 = v111 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v115 = (void (*)(char *, uint64_t, uint64_t))v297;
          goto LABEL_13;
        }
      }
      uint64_t AssociatedTypeWitness = (uint64_t)v331;
      v343 = v329;
      uint64_t AssociatedConformanceWitness = v332;
      uint64_t v345 = v330;
      type metadata accessor for Ingestion.FetchItemMetadata();
      uint64_t v125 = v300;
      uint64_t v163 = sub_24DC0963C(v300, v339[15], v339[16], v339[17]);
      sub_24D85246C(v100, v163);
      swift_release();
      sub_24D4A479C(v112, v111);

      uint64_t v123 = *(void (**)(char *, uint64_t))(v337 + 8);
      goto LABEL_35;
    }
    (*(void (**)(char *, uint64_t))(v334 + 8))(v99, v335);

    (*(void (**)(char *, uint64_t))(v296 + 8))(v105, v106);
LABEL_36:

    return;
  }
  uint64_t v139 = v294;
  v290(v294, v291, v293);
  uint64_t v140 = v295;
  if (v288(v139, 1, v295) != 1)
  {
    uint64_t v141 = v314;
    uint64_t v142 = (uint64_t)v287;
    (*(void (**)(char *, char *, uint64_t))(v314 + 16))(v287, v139, v299);
    (*(void (**)(char *, uint64_t))(v286 + 8))(v139, v140);
    uint64_t v143 = v339[15];
    uint64_t v144 = v339[16];
    if ((~*((_DWORD *)v339 + 34) & 0x2140) != 0) {
      uint64_t v145 = v339[17] | 0x2140;
    }
    else {
      uint64_t v145 = v339[17];
    }
    uint64_t AssociatedTypeWitness = (uint64_t)v329;
    v343 = v331;
    uint64_t AssociatedConformanceWitness = v330;
    uint64_t v345 = v332;
    type metadata accessor for Ingestion.FetchItemMetadata();
    uint64_t v146 = sub_24DC0963C(v142, v143, v144, v145);
    (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v142, v299);
    sub_24D855694(v100, v146);
    swift_release();

    (*(void (**)(char *, uint64_t))(v334 + 8))(v340, v335);
    goto LABEL_36;
  }
  __break(1u);
}

uint64_t *sub_24DBA0A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v18 = a1;
  uint64_t v5 = *a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_24DCCA3F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = (uint64_t)a4 + *(void *)(v5 + 128);
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v13(v11, 1, 1, AssociatedTypeWitness);
  uint64_t v14 = (uint64_t *)((char *)a4 + *(void *)(*a4 + 136));
  *uint64_t v14 = 0;
  v14[1] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v10, v18, AssociatedTypeWitness);
  v13((uint64_t)v10, 0, 1, AssociatedTypeWitness);
  swift_beginAccess();
  int v15 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 40);
  swift_retain();
  v15(v11, v10, v7);
  swift_endAccess();
  uint64_t v16 = v20;
  *uint64_t v14 = v19;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a4;
}

uint64_t sub_24DBA0C58()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24DBA0CB0(char *a1)
{
  sub_24DB99304(a1, *(uint64_t **)(v1 + 16), *(char **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(char **)(v1 + 56));
}

uint64_t sub_24DBA0CC0()
{
  uint64_t v1 = (int *)(type metadata accessor for Bouncing.BouncingContext() - 8);
  unint64_t v20 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v2 = v20 + *(void *)(*(void *)v1 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v4 = (int *)(type metadata accessor for ItemState() - 8);
  unint64_t v24 = (v2 + *(unsigned __int8 *)(*(void *)v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
  uint64_t v21 = *(void *)(*(void *)v4 + 64);
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for FileItemVersion();
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  swift_release();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v0 + v20, v7);
  swift_bridgeObjectRelease();
  v8(v0 + v20 + v1[16], v7);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v24, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  unint64_t v9 = v0 + v24 + v4[12];
  uint64_t v10 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v11 = v9 + v10[7];
  uint64_t v12 = sub_24DCC8CE8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(unint64_t, uint64_t))(v13 + 8);
  v14(v11, v12);
  v14(v9 + v10[8], v12);
  swift_bridgeObjectRelease();
  unint64_t v15 = v9 + v10[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v12)) {
    v14(v15, v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t *)(v9 + v10[33]);
  unint64_t v17 = v16[1];
  if (v17 >> 60 != 15) {
    sub_24D400DCC(*v16, v17);
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = v0 + ((v24 + v21 + v6) & ~v6);
  (*(void (**)(uint64_t))(*(void *)(v22 - 8) + 8))(v18);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v23 - 8) + 8))(v18 + *(int *)(v5 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24DBA11C8(char *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v12 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(type metadata accessor for Bouncing.BouncingContext() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  return sub_24DB98688(a1, *(void (**)(uint64_t *))(v1 + 48), *(void *)(v1 + 56), v1 + v5, v1 + v8, v1 + ((v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v2, v14, v3, v12);
}

uint64_t sub_24DBA1408()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v1 = (int *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = v2 + *(void *)(*(void *)v1 + 64);
  uint64_t v4 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v5 = (int *)(type metadata accessor for ItemState() - 8);
  unint64_t v6 = (v3 + *(unsigned __int8 *)(*(void *)v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v5 + 80);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v2, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v0 + v2 + v1[16], v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v6, v4);
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v6 + v5[12];
  unint64_t v8 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v9 = v7 + v8[7];
  uint64_t v10 = sub_24DCC8CE8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  v12(v7 + v8[8], v10);
  swift_bridgeObjectRelease();
  unint64_t v13 = v7 + v8[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10)) {
    v12(v13, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = (uint64_t *)(v7 + v8[33]);
  unint64_t v15 = v14[1];
  if (v15 >> 60 != 15) {
    sub_24D400DCC(*v14, v15);
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24DBA1828(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (void *)v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = v1[9];
  uint64_t v12 = *(void *)((char *)v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24DB9A1E0(a1, v8, v9, v10, v11, (uint64_t)v1 + v4, (uint64_t)v1 + v7, v12);
}

uint64_t sub_24DBA1A24()
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DBA1A7C()
{
  return sub_24DB99E80(*(void *)(v0 + 16), *(void (**)(char *, uint64_t))(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(uint64_t (**)(void, void, void, void (*)(char *, uint64_t)))(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_24DBA1AA0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DBA1AD8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v25 = type metadata accessor for ItemPropagationResult();
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v24 = TupleTypeMetadata2;
  uint64_t v3 = sub_24DCCB058();
  uint64_t v29 = *(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v26 = (v29 + 48) & ~v29;
  unint64_t v4 = (*(void *)(*(void *)(v3 - 8) + 64) + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for FileItemVersion();
  uint64_t v28 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v8 = (v4 + v28 + 8) & ~v28;
  uint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v11 = type metadata accessor for ItemState();
  uint64_t v27 = *(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
  uint64_t v12 = (v8 + v9 + v27) & ~v27;
  unint64_t v13 = (id *)(v0 + v26);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    if (!(*(unsigned int (**)(id *, uint64_t))(*(void *)(v25 - 8) + 48))(v13, 1)) {
      (*(void (**)(id *, uint64_t))(*(void *)(v1 - 8) + 8))(v13, v1);
    }
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v8, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v8 + *(int *)(v7 + 56), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v12, v10);
  swift_bridgeObjectRelease();
  uint64_t v14 = v0 + v12 + *(int *)(v11 + 40);
  unint64_t v15 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v16 = v14 + v15[7];
  uint64_t v17 = sub_24DCC8CE8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v19(v16, v17);
  v19(v14 + v15[8], v17);
  swift_bridgeObjectRelease();
  uint64_t v20 = v14 + v15[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v20, 1, v17)) {
    v19(v20, v17);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = (uint64_t *)(v14 + v15[33]);
  unint64_t v22 = v21[1];
  if (v22 >> 60 != 15) {
    sub_24D400DCC(*v21, v22);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24DBA20A0()
{
  type metadata accessor for ItemPropagationResult();
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v1 = *(void *)(sub_24DCCB058() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24DB9A7D4((char *)(v0 + v2), *(uint64_t **)(v0 + v3), v0 + v5, v0 + v8, *(void **)(v0 + v9), *(void *)(v0 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(void, uint64_t, uint64_t, void (*)(char *, uint64_t)))(v0+ ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

unsigned char *sub_24DBA2374(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24DBA2440);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_24DBA2468(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24DBA2534);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_24DBA255C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DBA2578()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DBA2594()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DBA25B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DBA25CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DBA25E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DBA2608(uint64_t a1)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  unint64_t v8 = (void *)MEMORY[0x263F8EE78];
  while (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v7 << 6);
LABEL_22:
    sub_24D6D30BC(*(void *)(a1 + 56) + 16 * v10, (uint64_t)v21);
    sub_24D433924((uint64_t)v21, (uint64_t)v19);
    uint64_t v14 = MEMORY[0x25332B1A0](v19);
    uint64_t v15 = v20;
    uint64_t result = sub_24D6D30F8((uint64_t)v19);
    if (v14)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_24DA15538(0, v8[2] + 1, 1, v8);
        unint64_t v8 = (void *)result;
      }
      unint64_t v17 = v8[2];
      unint64_t v16 = v8[3];
      if (v17 >= v16 >> 1)
      {
        uint64_t result = (uint64_t)sub_24DA15538((void *)(v16 > 1), v17 + 1, 1, v8);
        unint64_t v8 = (void *)result;
      }
      v8[2] = v17 + 1;
      uint64_t v18 = &v8[2 * v17];
      v18[4] = v14;
      v18[5] = v15;
    }
  }
  int64_t v11 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v11 >= v5) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v22 + 8 * v11);
  ++v7;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 1;
  if (v11 + 1 >= v5) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v22 + 8 * v7);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 2;
  if (v11 + 2 >= v5) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v22 + 8 * v7);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 3;
  if (v11 + 3 >= v5) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v22 + 8 * v7);
  if (v12)
  {
LABEL_21:
    unint64_t v4 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
    goto LABEL_22;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v5)
  {
LABEL_28:
    swift_release();
    return (uint64_t)v8;
  }
  unint64_t v12 = *(void *)(v22 + 8 * v13);
  if (v12)
  {
    int64_t v7 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v7 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_28;
    }
    unint64_t v12 = *(void *)(v22 + 8 * v7);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_24DBA2828(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  unint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  uint64_t v6 = sub_24DCCAD98();
  if (v6)
  {
    int64_t v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    int64_t v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  unint64_t v9 = (void *)sub_24DCC8818();

  id v10 = objc_msgSend(v9, sel_fp_prettyDescription);
  return v10;
}

uint64_t sub_24DBA2990(void *a1, unsigned __int8 *a2)
{
  char v3 = sub_24DBB2184(a1, a2);

  return v3 & 1;
}

void sub_24DBA29D0(void *a1, void *a2, uint64_t a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  if (a2)
  {
    swift_beginAccess();
    uint64_t v6 = *(void **)a3;
    *(void *)a3 = a2;
    unsigned __int8 v7 = *(unsigned char *)(a3 + 8);
    *(unsigned char *)(a3 + 8) = 1;
    id v8 = a2;
    sub_24D4664DC(v6, v7);
  }
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
}

void sub_24DBA2ADC(void *a1, uint64_t a2, void *a3, char a4)
{
  char v8 = a4 & 1;
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    sub_24D46C814(a3, v8);
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  swift_beginAccess();
  unint64_t v9 = *(void **)a2;
  int v10 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v14 = a3;
  if (v10 == 255)
  {
    sub_24D46C820(a3, a4 & 1);
    int64_t v11 = a3;
  }
  else
  {
    char v8 = v10 & 1;
    int64_t v11 = *(void **)a2;
  }
  swift_beginAccess();
  uint64_t v12 = *(void **)a2;
  *(void *)a2 = v11;
  unsigned __int8 v13 = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a2 + 8) = v8;
  sub_24D466508(v9, v10);
  sub_24D4664DC(v12, v13);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    sub_24D46C814(v14, a4 & 1);
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  sub_24D46C814(v14, a4 & 1);
}

void sub_24DBA2C44(void *a1, void *a2, void *a3, void *a4)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_24D4F14F0((uint64_t)a2, (uint64_t)a3, a4);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
}

void sub_24DBA2D30(void *a1, void *a2, char a3, uint64_t *a4, void *a5, uint64_t *a6)
{
  char v11 = a3 & 1;
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    sub_24D4178C8(a2);

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_24D5AE0EC(a2, v11, a4, a5, a6);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    sub_24D4178C8(a2);

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  sub_24D4178C8(a2);
}

uint64_t sub_24DBA2E40(void *a1, uint64_t a2)
{
  return sub_24DBA2ED0(a1, a2, (void (*)(uint64_t, uint64_t))sub_24DBAED2C, (uint64_t)&unk_26FFD72C8, (uint64_t)sub_24DBB2088);
}

uint64_t sub_24DBA2E88(void *a1, uint64_t a2)
{
  return sub_24DBA2ED0(a1, a2, (void (*)(uint64_t, uint64_t))sub_24DBAEE9C, (uint64_t)&unk_26FFD7520, (uint64_t)sub_24DBB2088);
}

uint64_t sub_24DBA2ED0(void *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_24DBAF2B4(a2, a3, a4, a5);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_24DBA2FC0(void *a1, uint64_t a2)
{
  return sub_24D3ECEE4(a1, a2, (void (*)(uint64_t))sub_24D5DCFE8);
}

void sub_24DBA2FEC(void *a1, void *a2, unint64_t *a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_24D60D62C((uint64_t)a2, a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
}

uint64_t sub_24DBA30B8(void *a1, uint64_t a2, uint64_t a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    swift_release();
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  *(unsigned char *)(a2 + 152) = 3;
  *(void *)(a2 + 160) = a3;
  swift_retain();
  swift_release();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    swift_release();
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  swift_release();
  return swift_release();
}

void sub_24DBA31A4(void *a1, void *a2, char *a3)
{
}

void sub_24DBA31BC(void *a1, void *a2, uint64_t a3)
{
}

void sub_24DBA31FC(void *a1, void *a2, char *a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  uint64_t v6 = (unint64_t *)&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_runningEnumerator];
  swift_beginAccess();
  uint64_t v7 = swift_bridgeObjectRetain();
  char v8 = sub_24D8F1068(v7);
  swift_bridgeObjectRelease();
  *a2 = v8;
  swift_bridgeObjectRelease();
  *uint64_t v6 = sub_24D42FF5C(MEMORY[0x263F8EE78]);
  swift_bridgeObjectRelease();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
}

void sub_24DBA3320(void *a1, void *a2, void *a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_24D652994(a2, (uint64_t)a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
}

void sub_24DBA3404(void *a1, void *a2, uint64_t a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  long long v6 = xmmword_24DCD46F0;
  swift_beginAccess();
  sub_24D6EBB5C(&v6, a3);
  swift_endAccess();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
}

void sub_24DBA3500(void *a1, void *a2, void *a3)
{
}

void sub_24DBA3520(void *a1, void *a2, void *a3)
{
}

void sub_24DBA3540(void *a1, void *a2, void *a3, uint64_t a4)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  v8[1] = a4;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  sub_24D6EBB5C(v8, (uint64_t)a3);
  swift_endAccess();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
}

void sub_24DBA364C(void *a1, void **a2, void *a3)
{
}

void sub_24DBA3664(void *a1, void *a2, void *a3)
{
}

void sub_24DBA367C(void *a1, uint64_t a2, void *a3)
{
}

void sub_24DBA36A8(void *a1, uint64_t a2, void *a3, void (*a4)(uint64_t, void *))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  a4(a2, a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
}

void sub_24DBA377C(void *a1, void *a2, uint64_t a3)
{
}

void sub_24DBA37BC(void *a1, void *a2, uint64_t a3, void (*a4)(void *, uint64_t), void (*a5)(uint64_t))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    a5(a3);

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  a4(a2, a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    a5(a3);

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  a5(a3);
}

void sub_24DBA38C0(void *a1, void *a2, void *a3, unint64_t a4, void *a5, uint64_t *a6, uint64_t *a7, void *a8)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_24D4170B0(a4);
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_24D681318(a2, a3, a4, a5, a6, a7, a8);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_24D4170B0(a4);
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }

  sub_24D4170B0(a4);
}

void sub_24DBA3A20(void *a1, void *a2, uint64_t *a3, void *a4, uint64_t *a5, void *a6)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_24D682280(a2, a3, a4, a5, a6);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
}

void sub_24DBA3B30(void *a1, void *a2, void *a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  swift_beginAccess();
  id v6 = a3;
  MEMORY[0x253327CA0]();
  if (*(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_24DCC9C78();
  }
  sub_24DCC9CD8();
  sub_24DCC9C48();
  swift_endAccess();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
}

uint64_t sub_24DBA3C4C(void *a1, uint64_t a2, uint64_t a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  id v6 = (uint64_t *)(a3 + qword_26B1995D0);
  swift_beginAccess();
  uint64_t v7 = *v6;
  swift_retain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_24DBB1970(v7, a3);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
  }
  else
  {
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    sub_24D7864B8(v9);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_24D88FD24();
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = sub_24DBB1550(v11, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v13 = swift_bridgeObjectRelease_n();
    MEMORY[0x270FA5388](v13);
    type metadata accessor for VFSItem(0);
    sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
    sub_24D4192D0(&qword_26B190360, (void (*)(uint64_t))type metadata accessor for VFSItem);
    sub_24D9014CC();
    swift_getKeyPath();
    swift_retain();
    uint64_t v14 = sub_24DBB1374(v12);
    swift_bridgeObjectRelease();
    swift_release_n();
    sub_24D7864B8(v14);
  }
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_24DBA3FB8(void *a1, uint64_t a2)
{
  return sub_24DBA4038(a1, a2, sub_24D430A38, (uint64_t (*)(uint64_t))sub_24D42A7F0);
}

uint64_t sub_24DBA3FF8(void *a1, uint64_t a2)
{
  return sub_24DBA4038(a1, a2, (uint64_t (*)(void))sub_24D42A684, (uint64_t (*)(uint64_t))sub_24D42A7E4);
}

uint64_t sub_24DBA4038(void *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v9 = a3(MEMORY[0x263F8EE78]);
  swift_beginAccess();
  *(void *)(a2 + 16) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a4(v8);
  swift_beginAccess();
  *(void *)(a2 + 32) = v10;
  swift_bridgeObjectRelease();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_24DBA4168(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_24D96272C(a2, a3, a4, a5);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24DBA4270(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_24DBA42D8(a1, a2, a3, a4, a5, a6, (uint64_t)&qword_26B1995D0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24DBACF64);
}

uint64_t sub_24DBA42A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_24DBA42D8(a1, a2, a3, a4, a5, a6, (uint64_t)&qword_26B1995C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24DBAC5C4);
}

uint64_t sub_24DBA42D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_24D43DD74(a5);
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  swift_beginAccess();
  a8(a3, a4, a5, a6);
  swift_endAccess();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_24D43DD74(a5);
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_24D43DD74(a5);
}

uint64_t sub_24DBA4450(void *a1, uint64_t a2, char a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  *(unsigned char *)(a2 + 122) = a3 & 1;
  id v6 = *(void (**)(void))(a2 + 128);
  if (v6)
  {
    swift_retain();
    v6(a3 & 1);
    sub_24D43DD74((uint64_t)v6);
  }
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_24DBA4540(void *a1, uint64_t a2)
{
  return sub_24D3ECEE4(a1, a2, (void (*)(uint64_t))sub_24DBAE688);
}

uint64_t sub_24DBA456C(void *a1, uint64_t a2)
{
  return sub_24D3ECEE4(a1, a2, (void (*)(uint64_t))sub_24DBAE910);
}

uint64_t sub_24DBA4598(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24DBA468C(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_24DBAED2C);
}

uint64_t sub_24DBA45C4(void *a1, uint64_t a2)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_24DBAEB88(a2);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_24DBA468C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  a4(a2, a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

void sub_24DBA476C(void *a1, uint64_t *a2, unint64_t a3, void *a4)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_24DB49C00(a2, a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
}

void sub_24DBA484C(void *a1, void **a2, void *a3, unsigned char *a4)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  swift_beginAccess();
  uint64_t v8 = *a2;
  *a2 = a3;

  swift_beginAccess();
  *a4 = 0;
  id v9 = a3;
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
}

void sub_24DBA4954(void *a1, void **a2, void *a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  swift_beginAccess();
  id v6 = *a2;
  *a2 = a3;

  id v7 = a3;
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
}

void sub_24DBA4A38(void *a1, unsigned char *a2, uint64_t a3, void *a4, void **a5, NSObject *a6)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_24DC2E538(a2, a3, a4, a5, a6);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  swift_release();
}

uint64_t sub_24DBA4B54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DBA4BAC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_24DC6A8DC);
}

uint64_t sub_24DBA4B80(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DBA4BAC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_24DC6AD84);
}

uint64_t sub_24DBA4BAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  a5(a2, a3, a4);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_24DBA4C9C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  uint64_t v5 = (unint64_t *)(a2 + qword_26B1995D0);
  swift_beginAccess();
  unint64_t v22 = *v5;
  unint64_t v36 = v5[1];
  unint64_t v33 = v5[3];
  unint64_t v34 = v5[2];
  char v31 = *((unsigned char *)v5 + 48);
  char v32 = *((unsigned char *)v5 + 32);
  char v29 = *((unsigned char *)v5 + 50);
  char v30 = *((unsigned char *)v5 + 49);
  unint64_t v20 = v5[7];
  unint64_t v21 = v5[5];
  id v6 = (unint64_t *)(a2 + qword_26B1995C8);
  swift_beginAccess();
  unint64_t v18 = v6[1];
  unint64_t v19 = *v6;
  unint64_t v27 = v6[3];
  unint64_t v28 = v6[2];
  unint64_t v15 = v6[5];
  char v25 = *((unsigned char *)v6 + 48);
  char v26 = *((unsigned char *)v6 + 32);
  char v23 = *((unsigned char *)v6 + 50);
  char v24 = *((unsigned char *)v6 + 49);
  unint64_t v17 = v6[7];
  unint64_t v16 = sub_24D430260(MEMORY[0x263F8EE78]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = MEMORY[0x263F8EE78];
  unint64_t v8 = sub_24D42A0E8(MEMORY[0x263F8EE78]);
  uint64_t v9 = v7;
  unint64_t v10 = sub_24D43027C(v7);
  *uint64_t v5 = v16;
  v5[1] = v8;
  *((_OWORD *)v5 + 1) = xmmword_24DCDE190;
  *((unsigned char *)v5 + 32) = 0;
  v5[5] = v10;
  *((_WORD *)v5 + 24) = 0;
  *((unsigned char *)v5 + 50) = 0;
  v5[7] = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v11 = sub_24D429FAC(v7);
  unint64_t v12 = sub_24D42A0E8(v7);
  unint64_t v13 = sub_24D42A2DC(v9);
  *id v6 = v11;
  v6[1] = v12;
  *((_OWORD *)v6 + 1) = xmmword_24DCDE190;
  *((unsigned char *)v6 + 32) = 0;
  v6[5] = v13;
  *((_WORD *)v6 + 24) = 0;
  *((unsigned char *)v6 + 50) = 0;
  v6[7] = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a3 = v22;
  *(void *)(a3 + 8) = v36;
  *(void *)(a3 + 16) = v34;
  *(void *)(a3 + 24) = v33;
  *(unsigned char *)(a3 + 32) = v32;
  *(void *)(a3 + 40) = v21;
  *(unsigned char *)(a3 + 48) = v31;
  *(unsigned char *)(a3 + 49) = v30;
  *(unsigned char *)(a3 + 50) = v29;
  *(void *)(a3 + 56) = v20;
  *(void *)(a3 + 64) = v19;
  *(void *)(a3 + 72) = v18;
  *(void *)(a3 + 80) = v28;
  *(void *)(a3 + 88) = v27;
  *(unsigned char *)(a3 + 96) = v26;
  *(void *)(a3 + 104) = v15;
  *(unsigned char *)(a3 + 112) = v25;
  *(unsigned char *)(a3 + 113) = v24;
  *(unsigned char *)(a3 + 114) = v23;
  *(void *)(a3 + 120) = v17;
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

void sub_24DBA5000(void *a1@<X0>, void *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_24D651D74((uint64_t)a2, a3, a4);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  swift_release();
}

void sub_24DBA50E4(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  id v6 = a3;
  uint64_t v7 = a4;
  uint64_t v8 = a1;
  uint64_t v9 = a2;
  sub_24DBABE90((void (*)(id *))sub_24DBB01F4, v5, a3, a4, a5);
}

uint64_t sub_24DBA5124(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_defaultStore);
  id v3 = objc_msgSend(v2, sel_dynamicErrorSampleRatePerProvider);

  uint64_t v4 = sub_24DCC9C28();
  uint64_t v5 = sub_24DBB0338(a1, v4);
  if (v6)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    uint64_t v7 = v5;
    unint64_t v8 = sub_24DA7E9FC(0x64uLL);
    uint64_t result = swift_bridgeObjectRelease();
    if (__OFADD__(v8, 1)) {
      __break(1u);
    }
    else {
      return v7 >= (uint64_t)(v8 + 1);
    }
  }
  return result;
}

void sub_24DBA51F0(uint64_t a1)
{
  if (a1 >= 1)
  {
    objc_msgSend(v1, sel_doubleValue);
    double v4 = v3;
    uint64_t v5 = (*(void *)&v3 >> 52) & 0x7FFLL;
    if (!v5 || v5 == 2047)
    {
      objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 0);
      return;
    }
    id v6 = v1;
    BOOL v7 = 0;
    unsigned int v8 = *(unsigned __int8 *)objc_msgSend(v6, sel_objCType) - 99;
    if (v8 > 0x10)
    {
      BOOL v9 = 0;
LABEL_16:
      double v21 = log10(fabs(v4));
      double v22 = __exp10((double)a1 - floor(v21) + -1.0);
      double v23 = round(v4 * v22) / v22;
      if (v9)
      {
        objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v23);
        return;
      }
      double v24 = round(v23);
      if (!v7)
      {
        if ((*(void *)&v24 & 0x7FF0000000000000) != 0x7FF0000000000000)
        {
          if (v24 > -1.0)
          {
            if (v24 < 1.84467441e19)
            {
              objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedLongLong_, (unint64_t)v24);
              return;
            }
            goto LABEL_34;
          }
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          return;
        }
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      if ((*(void *)&v24 & 0x7FF0000000000000) == 0x7FF0000000000000)
      {
        __break(1u);
      }
      else if (v24 > -9.22337204e18)
      {
        if (v24 < 9.22337204e18)
        {
          objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, (uint64_t)v24);
          return;
        }
        goto LABEL_31;
      }
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (((1 << v8) & 0x14041) == 0)
    {
      BOOL v9 = 0;
      if (((1 << v8) & 0xA) == 0) {
        goto LABEL_16;
      }
      unint64_t v10 = objc_msgSend(v6, sel_objCType);
      id v11 = v6;
      BOOL v7 = v10[1] == 0;
      unsigned int v12 = ((v8 >> 1) | ((_BYTE)v8 << 7));
      BOOL v13 = v12 > 8;
      int v14 = (1 << v12) & 0x189;
      if (v13 || v14 == 0)
      {
        BOOL v19 = 0;
        goto LABEL_15;
      }
      id v16 = v11;
    }
    unint64_t v17 = objc_msgSend(v6, sel_objCType);
    id v18 = v6;
    BOOL v19 = v17[1] == 0;
LABEL_15:
    BOOL v9 = v7;
    id v20 = v6;
    BOOL v7 = v19;
    goto LABEL_16;
  }
}

unint64_t sub_24DBA5468(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v2 - 8);
  double v4 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24DCC8A58();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  BOOL v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  unsigned int v12 = (char *)v40 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v51 = (char *)v40 - v13;
  sub_24D411FF8((uint64_t)v40 - v13);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v41 = v6;
  uint64_t v42 = a1;
  if (v14)
  {
    uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v53 = v6 + 16;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v44 = *(void *)(v6 + 72);
    uint64_t v47 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    uint64_t v48 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v49 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
    swift_bridgeObjectRetain();
    uint64_t v50 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v40[1] = (v6 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v45 = v4;
    uint64_t v46 = v9;
    id v16 = v48;
    while (1)
    {
      v52(v4, v15, v5);
      unint64_t v17 = *v50;
      (*v50)(v4, 0, 1, v5);
      if ((*v49)(v4, 1, v5) == 1) {
        break;
      }
      (*v47)(v12, v4, v5);
      uint64_t v18 = sub_24DCC8A18();
      unint64_t v20 = v19;
      char v21 = sub_24DCC9A08();
      uint64_t v43 = v17;
      if (v21)
      {
        unint64_t result = sub_24DCC9948();
        uint64_t v23 = HIBYTE(v20) & 0xF;
        if ((v20 & 0x2000000000000000) == 0) {
          uint64_t v23 = v18 & 0xFFFFFFFFFFFFLL;
        }
        if (4 * v23 < result >> 14)
        {
          __break(1u);
          return result;
        }
        uint64_t v24 = sub_24DCC9A78();
        uint64_t v26 = v25;
        uint64_t v28 = v27;
        uint64_t v30 = v29;
        swift_bridgeObjectRelease();
        uint64_t v57 = v30;
        strcpy((char *)v58, "/private/var");
        HIBYTE(v58[6]) = 0;
        v58[7] = -5120;
        uint64_t v54 = v24;
        uint64_t v55 = v26;
        uint64_t v56 = v28;
        sub_24DBB1180();
        sub_24DCC9958();
        swift_bridgeObjectRelease();
        char v31 = self;
        char v32 = (void *)sub_24DCC97B8();
        swift_bridgeObjectRelease();
        id v33 = objc_msgSend(v31, sel_fileURLWithPath_, v32);

        unint64_t v34 = v46;
        sub_24DCC89E8();
      }
      else
      {
        unint64_t v34 = v46;
        v52(v46, (uint64_t)v12, v5);
        swift_bridgeObjectRelease();
      }
      uint64_t v35 = (void *)sub_24DCC8948();
      unint64_t v36 = *v16;
      (*v16)(v34, v5);
      uint64_t v37 = (void *)sub_24DCC8948();
      id v38 = objc_msgSend(v35, sel_fp_relationshipToItemAtURL_, v37);

      v36(v12, v5);
      if (v38 != (id)2)
      {
        swift_bridgeObjectRelease();
        v36(v51, v5);
        return 1;
      }
      double v4 = v45;
      v15 += v44;
      if (!--v14)
      {
        v43(v45, 1, 1, v5);
        break;
      }
    }
  }
  else
  {
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v39(v4, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v51, v5);
  return 0;
}

uint64_t sub_24DBA592C()
{
  uint64_t v1 = sub_24DCC9078();
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v2);
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v3 + 16))(*(void *)(v0 + 56), *(void *)(v0 + 64), v2, v3);
  unint64_t v6 = v5;
  if (v5 >> 60 != 15)
  {
    uint64_t v7 = result;
    sub_24DCC86D8();
    swift_allocObject();
    sub_24D3F9C18(v7, v6);
    sub_24DCC86C8();
    sub_24DBB20A4();
    sub_24DCC86B8();
    swift_beginAccess();
    *(unsigned char *)(v0 + 80) = v8;
    *(void *)(v0 + 88) = v9;
    *(unsigned char *)(v0 + 96) = v10;
    *(void *)(v0 + 104) = v11;
    *(unsigned char *)(v0 + 112) = v12;
    *(unsigned char *)(v0 + 72) = 1;
    sub_24D416034(v7, v6);
    swift_release();
    uint64_t result = sub_24D416034(v7, v6);
  }
  *(unsigned char *)(v0 + 72) = 0;
  return result;
}

uint64_t sub_24DBA5D38()
{
  uint64_t v1 = sub_24DCC9078();
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v2);
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v3 + 16))(*(void *)(v0 + 56), *(void *)(v0 + 64), v2, v3);
  unint64_t v6 = v5;
  if (v5 >> 60 != 15)
  {
    uint64_t v7 = result;
    sub_24DCC86D8();
    swift_allocObject();
    sub_24D3F9C18(v7, v6);
    sub_24DCC86C8();
    sub_24DBB23D0();
    sub_24DCC86B8();
    swift_beginAccess();
    *(void *)(v0 + 80) = v8;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v0 + 72) = 1;
    sub_24D416034(v7, v6);
    swift_release();
    uint64_t result = sub_24D416034(v7, v6);
  }
  *(unsigned char *)(v0 + 72) = 0;
  return result;
}

uint64_t sub_24DBA612C()
{
  uint64_t v1 = sub_24DCC9078();
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))();
  unint64_t v5 = v4;
  if (v4 >> 60 != 15)
  {
    uint64_t v6 = result;
    sub_24DCC86D8();
    swift_allocObject();
    sub_24D3F9C18(v6, v5);
    sub_24DCC86C8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986F9E8);
    sub_24D3E4A9C(&qword_269870BA8, &qword_26986F9E8);
    sub_24DCC86B8();
    swift_beginAccess();
    *(void *)(v0 + 80) = v7;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v0 + 72) = 1;
    sub_24D416034(v6, v5);
    swift_release();
    uint64_t result = sub_24D416034(v6, v5);
  }
  *(unsigned char *)(v0 + 72) = 0;
  return result;
}

uint64_t sub_24DBA653C()
{
  uint64_t v0 = sub_24DCC9078();
  MEMORY[0x270FA5388](v0);
  return sub_24DBC0E6C();
}

uint64_t sub_24DBA6814()
{
  uint64_t v1 = sub_24DCC9078();
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v2);
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v3 + 16))(*(void *)(v0 + 56), *(void *)(v0 + 64), v2, v3);
  unint64_t v6 = v5;
  if (v5 >> 60 != 15)
  {
    uint64_t v7 = result;
    sub_24DCC86D8();
    swift_allocObject();
    sub_24D3F9C18(v7, v6);
    sub_24DCC86C8();
    sub_24DBB2130();
    sub_24DCC86B8();
    swift_beginAccess();
    *(unsigned char *)(v0 + 80) = v8;
    *(void *)(v0 + 88) = v9;
    *(unsigned char *)(v0 + 96) = v10;
    *(void *)(v0 + 104) = v11;
    *(void *)(v0 + 112) = v12;
    *(unsigned char *)(v0 + 120) = v13;
    *(unsigned char *)(v0 + 72) = 1;
    sub_24D416034(v7, v6);
    swift_release();
    uint64_t result = sub_24D416034(v7, v6);
  }
  *(unsigned char *)(v0 + 72) = 0;
  return result;
}

uint64_t sub_24DBA6C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24DBB224C;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_24DBB26A4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24DBA9C30;
  aBlock[3] = &block_descriptor_35_4;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_24DCC9898();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DBA6DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24DBB113C;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_24DBB1158;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24DBA9C30;
  aBlock[3] = &block_descriptor_41;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_24DCC9898();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DBA6F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24DBB11E4;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_24DBB26A4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24DBA9C30;
  aBlock[3] = &block_descriptor_14_1;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_24DCC9898();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DBA713C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24DBB2460;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_24DBB26A4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24DBA9C30;
  aBlock[3] = &block_descriptor_57;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_24DCC9898();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DBA72F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24DBB248C;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_24DBB26A4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24DBA9C30;
  aBlock[3] = &block_descriptor_68_0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_24DCC9898();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DBA74A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24DBB2434;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_24DBB26A4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24DBA9C30;
  aBlock[3] = &block_descriptor_46_1;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_24DCC9898();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DBA7658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24DBB25E4;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_24DBB26A4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24DBA9C30;
  aBlock[3] = &block_descriptor_138_0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_24DCC9898();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DBA780C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24DBB258C;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_24DBB26A4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24DBA9C30;
  aBlock[3] = &block_descriptor_116;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_24DCC9898();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DBA79C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24DBB2538;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_24DBB26A4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24DBA9C30;
  aBlock[3] = &block_descriptor_94_3;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_24DCC9898();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DBA7B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24DBB2610;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_24DBB26A4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24DBA9C30;
  aBlock[3] = &block_descriptor_149_0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_24DCC9898();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DBA7D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24DBB25B8;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_24DBB26A4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24DBA9C30;
  aBlock[3] = &block_descriptor_127_1;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_24DCC9898();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DBA7EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24DBB248C;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_24DBB26A4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24DBA9C30;
  aBlock[3] = &block_descriptor_105_0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_24DCC9898();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DBA8090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v19 = a7;
  int v18 = a6;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24DBB24E0;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_24DBB26A4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24DBA9C30;
  aBlock[3] = &block_descriptor_83;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_24DCC9898();
  uint64_t v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DBA8244(uint64_t a1, unsigned char *a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6 = sub_24DCC8408();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v7);
  a3(&v9, a1);
  uint64_t result = 0;
  *a2 = 0;
  return result;
}

uint64_t sub_24DBA8484(uint64_t a1, unsigned char *a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6 = sub_24DCC8408();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v7);
  a3(&v9, a1);
  uint64_t result = 0;
  *a2 = v9;
  return result;
}

uint64_t sub_24DBA86C8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6 = sub_24DCC8408();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v7);
  a3(&v10, a1);
  uint64_t result = 0;
  unsigned __int8 v9 = v11;
  *(void *)a2 = v10;
  *(_WORD *)(a2 + 8) = v9;
  return result;
}

uint64_t sub_24DBA8918(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6 = sub_24DCC8408();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v7);
  a3(&v10, a1);
  uint64_t result = 0;
  int v9 = v10;
  *(unsigned char *)(a2 + 4) = BYTE4(v10);
  *(_DWORD *)a2 = v9;
  *(unsigned char *)(a2 + 5) = 0;
  return result;
}

uint64_t sub_24DBA8B68(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6 = sub_24DCC8408();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v7);
  a3(&v9, a1);
  uint64_t result = 0;
  *(_DWORD *)a2 = v9;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_24DBA8DB0(uint64_t a1, _WORD *a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6 = sub_24DCC8408();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v7);
  a3(&v9, a1);
  uint64_t result = 0;
  *a2 = v9;
  return result;
}

uint64_t sub_24DBA8FF8(uint64_t a1, void **a2, void (*a3)(void **__return_ptr, uint64_t))
{
  uint64_t v6 = sub_24DCC8408();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v7);
  a3(&v10, a1);
  char v8 = *a2;
  *a2 = v10;
  sub_24D5D6F8C(v8);
  return 0;
}

uint64_t sub_24DBA9244(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6 = sub_24DCC8408();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v7);
  a3(&v9, a1);
  uint64_t result = 0;
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_24DBA948C(uint64_t a1, void **a2, void (*a3)(long long *__return_ptr, uint64_t))
{
  uint64_t v6 = sub_24DCC8408();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v7);
  a3(&v10, a1);
  char v8 = *a2;
  *(_OWORD *)a2 = v10;

  return 0;
}

uint64_t sub_24DBA96D8(uint64_t a1, uint64_t *a2, void (*a3)(long long *__return_ptr, uint64_t), uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v10 = sub_24DCC8408();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  MEMORY[0x270FA5388](v11);
  a3(&v15, a1);
  uint64_t v12 = *a2;
  uint64_t v13 = a2[1];
  *(_OWORD *)a2 = v15;
  a6(v12, v13);
  return 0;
}

uint64_t sub_24DBA992C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6 = sub_24DCC8408();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1912D8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(a1);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1912D0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
  sub_24D3E17AC((uint64_t)v10, a2, &qword_26B1912D8);
  return 0;
}

uint64_t sub_24DBA9C08(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_24DBA9C30(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2);
}

uint64_t sub_24DBA9C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_24DBAB1B8(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t))sub_24DBA6C20, (uint64_t (*)(uint64_t))sub_24DBB266C);
}

uint64_t sub_24DBA9CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_24DBAB894(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t))sub_24DBA6DD4, (uint64_t (*)(uint64_t))sub_24D7C4320);
}

uint64_t sub_24DBA9CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v30 = a7;
  int v29 = a6;
  uint64_t v15 = sub_24DCC8408();
  uint64_t v28 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v34 = 0;
  uint64_t v18 = v31;
  uint64_t v19 = sub_24DBA713C((uint64_t)&v34, a1, a2, a3, a4, a5, v29, v30, a8, a9);
  uint64_t v20 = v19;
  if (v18)
  {
LABEL_2:

    goto LABEL_3;
  }
  uint64_t v21 = v28;
  int v33 = v19;
  if (v34)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    uint64_t v23 = MEMORY[0x253327160]();
    if (!v23)
    {
      MEMORY[0x270FA5388](v23);
      uint64_t v26 = &v33;
      swift_bridgeObjectRelease();
      sub_24DA89268((uint64_t (*)(uint64_t))sub_24DBB266C, (uint64_t)(&v27 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    if (MEMORY[0x253327160]() == 9939393)
    {
      sub_24D5FBFBC((uint64_t)v32);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
      sub_24D3E4A9C((unint64_t *)&qword_26B192A30, (uint64_t *)&unk_26B192A40);
      swift_allocError();
      sub_24D3F0BA0((uint64_t)v32, v24, (uint64_t *)&unk_26B192A40);
    }
    else
    {
      if (MEMORY[0x253327160]() == 9939394)
      {
        objc_msgSend(self, sel_fp_errorForDataProtectionClass_, 2);
        swift_willThrow();
        goto LABEL_3;
      }
      MEMORY[0x253327160]();
      uint64_t v25 = sub_24DCC9098();
      if ((v25 & 0x100000000) != 0) {
        v32[0] = 22;
      }
      else {
        v32[0] = v25;
      }
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24D4192D0((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
      sub_24DCC8808();
      sub_24DCC83E8();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v15);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_24DBAA044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_24DBAB1B8(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t))sub_24DBA72F0, (uint64_t (*)(uint64_t))sub_24DBB266C);
}

uint64_t sub_24DBAA090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v30 = a7;
  int v29 = a6;
  uint64_t v15 = sub_24DCC8408();
  uint64_t v28 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v34 = 0;
  uint64_t v18 = v31;
  uint64_t v19 = sub_24DBA74A4((uint64_t)&v34, a1, a2, a3, a4, a5, v29, v30, a8, a9);
  uint64_t v20 = v19;
  if (v18)
  {
LABEL_2:

    goto LABEL_3;
  }
  uint64_t v21 = v28;
  int v33 = v19;
  if (v34)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    uint64_t v23 = MEMORY[0x253327160]();
    if (!v23)
    {
      MEMORY[0x270FA5388](v23);
      uint64_t v26 = &v33;
      swift_bridgeObjectRelease();
      sub_24DA89268((uint64_t (*)(uint64_t))sub_24DBB266C, (uint64_t)(&v27 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    if (MEMORY[0x253327160]() == 9939393)
    {
      sub_24D5FBFBC((uint64_t)v32);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
      sub_24D3E4A9C((unint64_t *)&qword_26B192A30, (uint64_t *)&unk_26B192A40);
      swift_allocError();
      sub_24D3F0BA0((uint64_t)v32, v24, (uint64_t *)&unk_26B192A40);
    }
    else
    {
      if (MEMORY[0x253327160]() == 9939394)
      {
        objc_msgSend(self, sel_fp_errorForDataProtectionClass_, 2);
        swift_willThrow();
        goto LABEL_3;
      }
      MEMORY[0x253327160]();
      uint64_t v25 = sub_24DCC9098();
      if ((v25 & 0x100000000) != 0) {
        v32[0] = 22;
      }
      else {
        v32[0] = v25;
      }
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24D4192D0((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
      sub_24DCC8808();
      sub_24DCC83E8();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v15);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_24DBAA3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v30 = a7;
  int v29 = a6;
  uint64_t v15 = sub_24DCC8408();
  uint64_t v28 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v34 = 0;
  uint64_t v18 = v31;
  uint64_t v19 = sub_24DBA7658((uint64_t)&v34, a1, a2, a3, a4, a5, v29, v30, a8, a9);
  uint64_t v20 = v19;
  if (v18)
  {
LABEL_2:

    goto LABEL_3;
  }
  uint64_t v21 = v28;
  int v33 = v19;
  if (v34)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    uint64_t v23 = MEMORY[0x253327160]();
    if (!v23)
    {
      MEMORY[0x270FA5388](v23);
      uint64_t v26 = &v33;
      swift_bridgeObjectRelease();
      sub_24DA89268((uint64_t (*)(uint64_t))sub_24DBB266C, (uint64_t)(&v27 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    if (MEMORY[0x253327160]() == 9939393)
    {
      sub_24D5FBFBC((uint64_t)v32);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
      sub_24D3E4A9C((unint64_t *)&qword_26B192A30, (uint64_t *)&unk_26B192A40);
      swift_allocError();
      sub_24D3F0BA0((uint64_t)v32, v24, (uint64_t *)&unk_26B192A40);
    }
    else
    {
      if (MEMORY[0x253327160]() == 9939394)
      {
        objc_msgSend(self, sel_fp_errorForDataProtectionClass_, 2);
        swift_willThrow();
        goto LABEL_3;
      }
      MEMORY[0x253327160]();
      uint64_t v25 = sub_24DCC9098();
      if ((v25 & 0x100000000) != 0) {
        v32[0] = 22;
      }
      else {
        v32[0] = v25;
      }
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24D4192D0((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
      sub_24DCC8808();
      sub_24DCC83E8();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v15);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_24DBAA730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v30 = a7;
  int v29 = a6;
  uint64_t v15 = sub_24DCC8408();
  uint64_t v28 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v34 = 0;
  uint64_t v18 = v31;
  uint64_t v19 = sub_24DBA780C((uint64_t)&v34, a1, a2, a3, a4, a5, v29, v30, a8, a9);
  uint64_t v20 = v19;
  if (v18)
  {
LABEL_2:

    goto LABEL_3;
  }
  uint64_t v21 = v28;
  int v33 = v19;
  if (v34)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    uint64_t v23 = MEMORY[0x253327160]();
    if (!v23)
    {
      MEMORY[0x270FA5388](v23);
      uint64_t v26 = &v33;
      swift_bridgeObjectRelease();
      sub_24DA89268((uint64_t (*)(uint64_t))sub_24DBB266C, (uint64_t)(&v27 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    if (MEMORY[0x253327160]() == 9939393)
    {
      sub_24D5FBFBC((uint64_t)v32);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
      sub_24D3E4A9C((unint64_t *)&qword_26B192A30, (uint64_t *)&unk_26B192A40);
      swift_allocError();
      sub_24D3F0BA0((uint64_t)v32, v24, (uint64_t *)&unk_26B192A40);
    }
    else
    {
      if (MEMORY[0x253327160]() == 9939394)
      {
        objc_msgSend(self, sel_fp_errorForDataProtectionClass_, 2);
        swift_willThrow();
        goto LABEL_3;
      }
      MEMORY[0x253327160]();
      uint64_t v25 = sub_24DCC9098();
      if ((v25 & 0x100000000) != 0) {
        v32[0] = 22;
      }
      else {
        v32[0] = v25;
      }
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24D4192D0((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
      sub_24DCC8808();
      sub_24DCC83E8();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v15);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_24DBAAA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v30 = a7;
  int v29 = a6;
  uint64_t v15 = sub_24DCC8408();
  uint64_t v28 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v34 = 0;
  uint64_t v18 = v31;
  uint64_t v19 = sub_24DBA79C0((uint64_t)&v34, a1, a2, a3, a4, a5, v29, v30, a8, a9);
  uint64_t v20 = v19;
  if (v18)
  {
LABEL_2:

    goto LABEL_3;
  }
  uint64_t v21 = v28;
  int v33 = v19;
  if (v34)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    uint64_t v23 = MEMORY[0x253327160]();
    if (!v23)
    {
      MEMORY[0x270FA5388](v23);
      uint64_t v26 = &v33;
      swift_bridgeObjectRelease();
      sub_24DA89268((uint64_t (*)(uint64_t))sub_24DBB266C, (uint64_t)(&v27 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    if (MEMORY[0x253327160]() == 9939393)
    {
      sub_24D5FBFBC((uint64_t)v32);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
      sub_24D3E4A9C((unint64_t *)&qword_26B192A30, (uint64_t *)&unk_26B192A40);
      swift_allocError();
      sub_24D3F0BA0((uint64_t)v32, v24, (uint64_t *)&unk_26B192A40);
    }
    else
    {
      if (MEMORY[0x253327160]() == 9939394)
      {
        objc_msgSend(self, sel_fp_errorForDataProtectionClass_, 2);
        swift_willThrow();
        goto LABEL_3;
      }
      MEMORY[0x253327160]();
      uint64_t v25 = sub_24DCC9098();
      if ((v25 & 0x100000000) != 0) {
        v32[0] = 22;
      }
      else {
        v32[0] = v25;
      }
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24D4192D0((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
      sub_24DCC8808();
      sub_24DCC83E8();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v15);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_24DBAADD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v30 = a7;
  int v29 = a6;
  uint64_t v15 = sub_24DCC8408();
  uint64_t v28 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v34 = 0;
  uint64_t v18 = v31;
  uint64_t v19 = sub_24DBA7B74((uint64_t)&v34, a1, a2, a3, a4, a5, v29, v30, a8, a9);
  uint64_t v20 = v19;
  if (v18)
  {
LABEL_2:

    goto LABEL_3;
  }
  uint64_t v21 = v28;
  int v33 = v19;
  if (v34)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    uint64_t v23 = MEMORY[0x253327160]();
    if (!v23)
    {
      MEMORY[0x270FA5388](v23);
      uint64_t v26 = &v33;
      swift_bridgeObjectRelease();
      sub_24DA89268((uint64_t (*)(uint64_t))sub_24DBB266C, (uint64_t)(&v27 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    if (MEMORY[0x253327160]() == 9939393)
    {
      sub_24D5FBFBC((uint64_t)v32);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
      sub_24D3E4A9C((unint64_t *)&qword_26B192A30, (uint64_t *)&unk_26B192A40);
      swift_allocError();
      sub_24D3F0BA0((uint64_t)v32, v24, (uint64_t *)&unk_26B192A40);
    }
    else
    {
      if (MEMORY[0x253327160]() == 9939394)
      {
        objc_msgSend(self, sel_fp_errorForDataProtectionClass_, 2);
        swift_willThrow();
        goto LABEL_3;
      }
      MEMORY[0x253327160]();
      uint64_t v25 = sub_24DCC9098();
      if ((v25 & 0x100000000) != 0) {
        v32[0] = 22;
      }
      else {
        v32[0] = v25;
      }
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24D4192D0((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
      sub_24DCC8808();
      sub_24DCC83E8();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v15);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_24DBAB120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_24DBAB1B8(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t))sub_24DBA7D28, (uint64_t (*)(uint64_t))sub_24DBB266C);
}

uint64_t sub_24DBAB16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_24DBAB1B8(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t))sub_24DBA7EDC, (uint64_t (*)(uint64_t))sub_24DBB266C);
}

uint64_t sub_24DBAB1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(id *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t), uint64_t (*a11)(uint64_t))
{
  uint64_t v32 = a7;
  unsigned int v30 = a5;
  unsigned int v31 = a6;
  uint64_t v16 = sub_24DCC8408();
  uint64_t v29 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v36 = 0;
  uint64_t v19 = v33;
  uint64_t v20 = a10(&v36, a1, a2, a3, a4, v30, v31, v32, a8, a9);
  uint64_t v21 = v20;
  if (v19)
  {
LABEL_2:

    goto LABEL_3;
  }
  uint64_t v22 = v29;
  int v35 = v20;
  if (v36)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v21;
  }
  if ((v20 & 0x80000000) != 0)
  {
    uint64_t v24 = MEMORY[0x253327160]();
    if (!v24)
    {
      MEMORY[0x270FA5388](v24);
      uint64_t v27 = &v35;
      swift_bridgeObjectRelease();
      sub_24DA89268(a11, (uint64_t)(&v28 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    if (MEMORY[0x253327160]() == 9939393)
    {
      sub_24D5FBFBC((uint64_t)v34);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
      sub_24D3E4A9C((unint64_t *)&qword_26B192A30, (uint64_t *)&unk_26B192A40);
      swift_allocError();
      sub_24D3F0BA0((uint64_t)v34, v25, (uint64_t *)&unk_26B192A40);
    }
    else
    {
      if (MEMORY[0x253327160]() == 9939394)
      {
        objc_msgSend(self, sel_fp_errorForDataProtectionClass_, 2);
        swift_willThrow();
        goto LABEL_3;
      }
      MEMORY[0x253327160]();
      uint64_t v26 = sub_24DCC9098();
      if ((v26 & 0x100000000) != 0) {
        v34[0] = 22;
      }
      else {
        v34[0] = v26;
      }
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24D4192D0((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
      sub_24DCC8808();
      sub_24DCC83E8();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v16);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_24DBAB4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v30 = a7;
  int v29 = a6;
  uint64_t v15 = sub_24DCC8408();
  uint64_t v28 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v34 = 0;
  uint64_t v18 = v31;
  uint64_t v19 = sub_24DBA8090((uint64_t)&v34, a1, a2, a3, a4, a5, v29, v30, a8, a9);
  uint64_t v20 = v19;
  if (v18)
  {
LABEL_2:

    goto LABEL_3;
  }
  uint64_t v21 = v28;
  int v33 = v19;
  if (v34)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    uint64_t v23 = MEMORY[0x253327160]();
    if (!v23)
    {
      MEMORY[0x270FA5388](v23);
      uint64_t v26 = &v33;
      swift_bridgeObjectRelease();
      sub_24DA89268((uint64_t (*)(uint64_t))sub_24DBB266C, (uint64_t)(&v27 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    if (MEMORY[0x253327160]() == 9939393)
    {
      sub_24D5FBFBC((uint64_t)v32);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
      sub_24D3E4A9C((unint64_t *)&qword_26B192A30, (uint64_t *)&unk_26B192A40);
      swift_allocError();
      sub_24D3F0BA0((uint64_t)v32, v24, (uint64_t *)&unk_26B192A40);
    }
    else
    {
      if (MEMORY[0x253327160]() == 9939394)
      {
        objc_msgSend(self, sel_fp_errorForDataProtectionClass_, 2);
        swift_willThrow();
        goto LABEL_3;
      }
      MEMORY[0x253327160]();
      uint64_t v25 = sub_24DCC9098();
      if ((v25 & 0x100000000) != 0) {
        v32[0] = 22;
      }
      else {
        v32[0] = v25;
      }
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24D4192D0((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
      sub_24DCC8808();
      sub_24DCC83E8();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v15);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_24DBAB848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_24DBAB894(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t))sub_24DBA6F88, (uint64_t (*)(uint64_t))sub_24DBB266C);
}

uint64_t sub_24DBAB894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(id *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t), uint64_t (*a11)(uint64_t))
{
  uint64_t v32 = a7;
  unsigned int v30 = a5;
  unsigned int v31 = a6;
  uint64_t v16 = sub_24DCC8408();
  uint64_t v29 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v36 = 0;
  uint64_t v19 = v33;
  uint64_t v20 = a10(&v36, a1, a2, a3, a4, v30, v31, v32, a8, a9);
  uint64_t v21 = v20;
  if (v19)
  {
LABEL_2:

    goto LABEL_3;
  }
  uint64_t v22 = v29;
  int v35 = v20;
  if (v36)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v21;
  }
  if ((v20 & 0x80000000) != 0)
  {
    uint64_t v24 = MEMORY[0x253327160]();
    if (!v24)
    {
      MEMORY[0x270FA5388](v24);
      uint64_t v27 = &v35;
      swift_bridgeObjectRelease();
      sub_24DA89268(a11, (uint64_t)(&v28 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    if (MEMORY[0x253327160]() == 9939393)
    {
      sub_24D5FBFBC((uint64_t)v34);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
      sub_24D3E4A9C((unint64_t *)&qword_26B192A30, (uint64_t *)&unk_26B192A40);
      swift_allocError();
      sub_24D3F0BA0((uint64_t)v34, v25, (uint64_t *)&unk_26B192A40);
    }
    else
    {
      if (MEMORY[0x253327160]() == 9939394)
      {
        objc_msgSend(self, sel_fp_errorForDataProtectionClass_, 2);
        swift_willThrow();
        goto LABEL_3;
      }
      MEMORY[0x253327160]();
      uint64_t v26 = sub_24DCC9098();
      if ((v26 & 0x100000000) != 0) {
        v34[0] = 22;
      }
      else {
        v34[0] = v26;
      }
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24D4192D0((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
      sub_24DCC8808();
      sub_24DCC83E8();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v16);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v21;
}

void *sub_24DBABBD4(void *(*a1)(void *__return_ptr, uint64_t))
{
  uint64_t v3 = sub_24DCC8408();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = a1(v13, v5);
  if (!v1)
  {
    uint64_t result = (void *)v13[0];
    uint64_t v14 = v13[0];
    if ((v13[0] & 0x8000000000000000) != 0)
    {
      uint64_t v9 = MEMORY[0x253327160]();
      if (!v9)
      {
        MEMORY[0x270FA5388](v9);
        *(&v12 - 2) = (uint64_t)&v14;
        sub_24DA89268((uint64_t (*)(uint64_t))sub_24DBB2554, (uint64_t)(&v12 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
      }
      if (MEMORY[0x253327160]() == 9939393)
      {
        sub_24D5FBFBC((uint64_t)v13);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
        sub_24D3E4A9C((unint64_t *)&qword_26B192A30, (uint64_t *)&unk_26B192A40);
        swift_allocError();
        sub_24D3F0BA0((uint64_t)v13, v10, (uint64_t *)&unk_26B192A40);
      }
      else
      {
        if (MEMORY[0x253327160]() == 9939394)
        {
          objc_msgSend(self, sel_fp_errorForDataProtectionClass_, 2);
          return (void *)swift_willThrow();
        }
        MEMORY[0x253327160]();
        uint64_t v11 = sub_24DCC9098();
        if ((v11 & 0x100000000) != 0) {
          LODWORD(v13[0]) = 22;
        }
        else {
          LODWORD(v13[0]) = v11;
        }
        sub_24D5F77E0(MEMORY[0x263F8EE78]);
        sub_24D4192D0((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
        sub_24DCC8808();
        sub_24DCC83E8();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      }
      return (void *)swift_willThrow();
    }
  }
  return result;
}

void sub_24DBABE90(void (*a1)(id *)@<X0>, char *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v51 = a2;
  uint64_t v49 = sub_24DCC8408();
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v47 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = a4;
  uint64_t v9 = *(void *)(a4 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v13 = (char *)v43 - v12;
  uint64_t v50 = *((void *)a3 - 1);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v43 - v17;
  id v55 = 0;
  uint64_t v19 = v53;
  v52(&v55);
  if (v19)
  {

    return;
  }
  v43[2] = v13;
  uint64_t v44 = v16;
  uint64_t v51 = v18;
  uint64_t v45 = v9;
  uint64_t v21 = v49;
  uint64_t v20 = v50;
  uint64_t v52 = (void (*)(id *))a3;
  uint64_t v53 = a5;
  if (v55)
  {
    swift_willThrow();
    (*(void (**)(uint64_t, void (*)(id *)))(v20 + 8))(v53, v52);
    return;
  }
  v43[1] = 0;
  uint64_t v22 = v52;
  if (sub_24DCCA508())
  {
    uint64_t v23 = v53;
    if (sub_24DCCA4F8() < 64)
    {
      uint64_t v24 = sub_24DCCA4E8();
      uint64_t v25 = v48;
      if (v24 < 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
    v54[0] = 0;
    sub_24D4E3A40();
    uint64_t v28 = v51;
    sub_24DCCA4B8();
    goto LABEL_13;
  }
  char v26 = sub_24DCCA508();
  uint64_t v27 = sub_24DCCA4F8();
  if ((v26 & 1) == 0)
  {
    uint64_t v25 = v48;
    if (v27 < 64)
    {
      uint64_t v22 = v52;
      uint64_t v23 = v53;
      uint64_t v24 = sub_24DCCA4E8();
      if (v24 < 0) {
        goto LABEL_23;
      }
    }
LABEL_17:
    uint64_t v24 = 0;
LABEL_18:

    return;
  }
  if (v27 > 64)
  {
    v54[0] = 0;
    sub_24D4E3A40();
    uint64_t v28 = v51;
    uint64_t v22 = v52;
    sub_24DCCA4B8();
    uint64_t v23 = v53;
LABEL_13:
    char v29 = sub_24DCC9718();
    (*(void (**)(char *, void (*)(id *)))(v50 + 8))(v28, v22);
    uint64_t v24 = 0;
    uint64_t v25 = v48;
    if ((v29 & 1) == 0) {
      goto LABEL_18;
    }
    goto LABEL_23;
  }
  unsigned int v30 = v52;
  swift_getAssociatedConformanceWitness();
  sub_24DCCAEE8();
  uint64_t v32 = v50;
  unsigned int v31 = v51;
  uint64_t v22 = v30;
  sub_24DCCADF8();
  uint64_t v33 = v53;
  LOBYTE(v30) = sub_24DCC9718();
  id v34 = *(uint64_t (**)(char *, void (*)(id *)))(v32 + 8);
  v34(v31, v22);
  int v35 = v44;
  (*(void (**)(char *, uint64_t, void (*)(id *)))(v32 + 16))(v44, v33, v22);
  if (v30)
  {
    uint64_t v24 = v34(v35, v22);
    uint64_t v23 = v53;
    uint64_t v25 = v48;
  }
  else
  {
    uint64_t v36 = sub_24DCCA4E8();
    uint64_t v24 = v34(v35, v22);
    uint64_t v23 = v53;
    uint64_t v25 = v48;
    if ((v36 & 0x8000000000000000) == 0)
    {
      uint64_t v24 = (uint64_t)v55;
      goto LABEL_18;
    }
  }
LABEL_23:
  uint64_t v37 = MEMORY[0x253327160](v24);
  if (!v37)
  {
    MEMORY[0x270FA5388](v37);
    uint64_t v42 = v46;
    v43[-4] = v22;
    v43[-3] = v42;
    v43[-2] = v23;
    sub_24DA89268((uint64_t (*)(uint64_t))sub_24DBB262C, (uint64_t)&v43[-6], (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
  }
  int v38 = MEMORY[0x253327160]();
  uint64_t v39 = v47;
  if (v38 == 9939393)
  {
    sub_24D5FBFBC((uint64_t)v54);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
    sub_24D3E4A9C((unint64_t *)&qword_26B192A30, (uint64_t *)&unk_26B192A40);
    swift_allocError();
    sub_24D3F0BA0((uint64_t)v54, v40, (uint64_t *)&unk_26B192A40);
  }
  else if (MEMORY[0x253327160]() == 9939394)
  {
    objc_msgSend(self, sel_fp_errorForDataProtectionClass_, 2);
  }
  else
  {
    MEMORY[0x253327160]();
    uint64_t v41 = sub_24DCC9098();
    if ((v41 & 0x100000000) != 0) {
      LODWORD(v54[0]) = 22;
    }
    else {
      LODWORD(v54[0]) = v41;
    }
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D4192D0((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
    sub_24DCC8808();
    sub_24DCC83E8();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v39, v21);
  }
  swift_willThrow();

  (*(void (**)(uint64_t, void (*)(id *)))(v50 + 8))(v23, v22);
}

uint64_t sub_24DBAC5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v105 = a4;
  uint64_t v106 = a3;
  uint64_t v109 = type metadata accessor for SyncState();
  uint64_t v8 = MEMORY[0x270FA5388](v109);
  uint64_t v112 = (uint64_t)v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v110 = (uint64_t)v103 - v11;
  uint64_t result = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v103 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  unint64_t v111 = (char *)v103 - v14;
  uint64_t v107 = a2;
  if (v16)
  {
    uint64_t v104 = v13;
    swift_bridgeObjectRetain();
    v103[1] = a1;
    uint64_t v17 = (unsigned char *)(a1 + 56);
    while (2)
    {
      unint64_t v21 = *((void *)v17 - 3);
      unint64_t v22 = *((void *)v17 - 2);
      uint64_t v23 = *(v17 - 8);
      uint64_t v24 = *((void *)v17 - 1);
      switch(*v17)
      {
        case 1:
          sub_24D903C38(*((id *)v17 - 3), *((void **)v17 - 2), v24, 1);
          id v57 = (id)v21;
          swift_bridgeObjectRetain();
          unint64_t v58 = sub_24D4060A4(v57);
          char v60 = v59;
          swift_bridgeObjectRelease();
          if (v60)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v62 = *(void *)v5;
            uint64_t v113 = *(void **)v5;
            *(void *)uint64_t v5 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_24DC7AAF8();
              uint64_t v62 = (uint64_t)v113;
            }

            uint64_t v63 = *(void *)(v62 + 56) + 24 * v58;
            uint64_t v64 = *(void **)v63;
            uint64_t v65 = *(void **)(v63 + 8);
            sub_24DC75A8C(v58, v62);
            *(void *)uint64_t v5 = v62;

            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v15 = v111;
          }
          else
          {
          }
          goto LABEL_6;
        case 2:
          uint64_t v18 = *(unsigned __int8 *)(v5 + 16);
          uint64_t v19 = *(void *)(v5 + 24);
          char v20 = *(unsigned char *)(v5 + 32);
          if (v18 == 2)
          {
            uint64_t v19 = *((void *)v17 - 2);
            char v20 = *((void *)v17 - 1);
            LOBYTE(v18) = *((void *)v17 - 3);
          }
          *(void *)(v5 + 16) = v18 & 1;
          *(void *)(v5 + 24) = v19;
          *(unsigned char *)(v5 + 32) = v20 & 1;
          *(_WORD *)(v5 + 48) = 0;
          goto LABEL_6;
        case 3:
          sub_24D903C38(*((id *)v17 - 3), *((void **)v17 - 2), v24, 3);
          uint64_t v33 = (id)v21;
          char v47 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v113 = *(void **)(v5 + 40);
          uint64_t v36 = v113;
          *(void *)(v5 + 40) = 0x8000000000000000;
          unint64_t v49 = sub_24D4060A4(v33);
          uint64_t v50 = v36[2];
          BOOL v51 = (v48 & 1) == 0;
          uint64_t v52 = v50 + v51;
          if (__OFADD__(v50, v51)) {
            goto LABEL_87;
          }
          char v53 = v48;
          if (v36[3] >= v52)
          {
            if (v47)
            {
              uint64_t v56 = v113;
              if (v48) {
                goto LABEL_34;
              }
            }
            else
            {
              uint64_t v36 = &v113;
              sub_24DC7A940();
              uint64_t v56 = v113;
              if (v53) {
                goto LABEL_34;
              }
            }
          }
          else
          {
            sub_24D6FFE44(v52, v47);
            uint64_t v36 = v113;
            uint64_t v54 = sub_24D4060A4(v33);
            if ((v53 & 1) != (v55 & 1))
            {
LABEL_93:
              type metadata accessor for NSFileProviderItemIdentifier(0);
              sub_24DCCAF18();
              __break(1u);
              JUMPOUT(0x24DBACF2CLL);
            }
            unint64_t v49 = v54;
            uint64_t v56 = v113;
            if (v53)
            {
LABEL_34:
              uint64_t v66 = v56[7] + 16 * v49;
              *(void *)uint64_t v66 = v22;
              *(unsigned char *)(v66 + 8) = v23 & 1;
              goto LABEL_49;
            }
          }
          v56[(v49 >> 6) + 8] |= 1 << v49;
          *(void *)(v56[6] + 8 * v49) = v33;
          uint64_t v75 = v56[7] + 16 * v49;
          *(void *)uint64_t v75 = v22;
          *(unsigned char *)(v75 + 8) = v23 & 1;
          uint64_t v76 = v56[2];
          BOOL v77 = __OFADD__(v76, 1);
          uint64_t v78 = v76 + 1;
          if (v77) {
            goto LABEL_89;
          }
          v56[2] = v78;
          uint64_t v79 = v33;
LABEL_49:
          *(void *)(v5 + 40) = v56;

          goto LABEL_54;
        case 4:
          if (v24 | v22 | v21)
          {
            if (v21 == 1 && (v24 | v22) == 0) {
              *(unsigned char *)(v5 + 49) = 1;
            }
            else {
              *(unsigned char *)(v5 + 50) = 1;
            }
          }
          else
          {
            *(unsigned char *)(v5 + 48) = 1;
          }
          goto LABEL_6;
        default:
          unint64_t v25 = ((unint64_t)*(unsigned int *)(v17 - 7) << 8) | ((unint64_t)(*(unsigned __int16 *)(v17 - 3) | (*(v17 - 1) << 16)) << 40) | v23;
          *(_WORD *)(v5 + 48) = 0;
          uint64_t v26 = *(void *)v5;
          uint64_t v27 = *(void *)(*(void *)v5 + 16);
          swift_retain();
          id v28 = (id)v21;
          id v29 = (id)v22;
          if (v27)
          {
            uint64_t v30 = sub_24D4060A4(v28);
            if ((v31 & 1) != 0 && !*(void *)(*(void *)(v26 + 56) + 24 * v30 + 8))
            {
              id v69 = v28;
              swift_bridgeObjectRetain();
              unint64_t v70 = sub_24D4060A4(v69);
              char v72 = v71;
              swift_bridgeObjectRelease();
              if (v72)
              {
                char v73 = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v74 = *(void *)(v5 + 40);
                uint64_t v113 = (void *)v74;
                *(void *)(v5 + 40) = 0x8000000000000000;
                if ((v73 & 1) == 0)
                {
                  sub_24DC7A940();
                  uint64_t v74 = (uint64_t)v113;
                }

                sub_24DC75FE0(v70, v74);
                *(void *)(v5 + 40) = v74;

                swift_bridgeObjectRelease();
              }
              else
              {
              }
              swift_release();
              goto LABEL_6;
            }
          }
          uint64_t v32 = v29;
          uint64_t v33 = (void *)v25;
          swift_retain();
          id v34 = v28;
          id v108 = v32;
          char v35 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v113 = *(void **)v5;
          uint64_t v36 = v113;
          *(void *)uint64_t v5 = 0x8000000000000000;
          unint64_t v38 = sub_24D4060A4(v34);
          uint64_t v39 = v36[2];
          BOOL v40 = (v37 & 1) == 0;
          uint64_t v41 = v39 + v40;
          if (__OFADD__(v39, v40)) {
            goto LABEL_88;
          }
          char v42 = v37;
          if (v36[3] >= v41)
          {
            if (v35)
            {
              uint64_t v45 = v113;
              if (v37) {
                goto LABEL_37;
              }
            }
            else
            {
              uint64_t v36 = &v113;
              sub_24DC7AAF8();
              uint64_t v45 = v113;
              if (v42) {
                goto LABEL_37;
              }
            }
          }
          else
          {
            sub_24D700180(v41, v35);
            uint64_t v36 = v113;
            uint64_t v43 = sub_24D4060A4(v34);
            if ((v42 & 1) != (v44 & 1)) {
              goto LABEL_93;
            }
            unint64_t v38 = v43;
            uint64_t v45 = v113;
            if (v42)
            {
LABEL_37:
              uint64_t v67 = v45[7] + 24 * v38;
              uint64_t v68 = *(void **)(v67 + 8);

              swift_release();
              *(void *)uint64_t v67 = v34;
              *(void *)(v67 + 8) = v22;
              *(void *)(v67 + 16) = v33;
              goto LABEL_53;
            }
          }
          v45[(v38 >> 6) + 8] |= 1 << v38;
          *(void *)(v45[6] + 8 * v38) = v34;
          uint64_t v80 = (void *)(v45[7] + 24 * v38);
          *uint64_t v80 = v34;
          v80[1] = v22;
          v80[2] = v33;
          uint64_t v81 = v45[2];
          BOOL v77 = __OFADD__(v81, 1);
          uint64_t v82 = v81 + 1;
          if (v77) {
            goto LABEL_90;
          }
          v45[2] = v82;
          id v83 = v34;
LABEL_53:
          *(void *)uint64_t v5 = v45;

          swift_release();
LABEL_54:
          swift_bridgeObjectRelease();
          uint64_t v15 = v111;
LABEL_6:
          v17 += 32;
          if (--v16) {
            continue;
          }
          uint64_t result = swift_bridgeObjectRelease();
          a2 = v107;
          uint64_t v13 = v104;
          break;
      }
      break;
    }
  }
  uint64_t v84 = *(void *)(a2 + 16);
  if (!v84) {
    goto LABEL_79;
  }
  uint64_t v33 = (void *)(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)));
  uint64_t v85 = *(void *)(v13 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_24D90F50C((uint64_t)v33, (uint64_t)v15);
    sub_24D90F50C((uint64_t)v15, v110);
    uint64_t v86 = 1;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        break;
      case 2u:
        sub_24D90DC2C(v110);
        uint64_t v86 = 2;
        break;
      case 3u:
        uint64_t v86 = 3;
        break;
      case 4u:
        uint64_t v87 = *(void **)(v110 + 8);

        uint64_t v86 = 4;
        break;
      case 5u:

        uint64_t v86 = 5;
        break;
      case 6u:
        uint64_t v86 = 6;
        break;
      case 7u:
        uint64_t v86 = 7;
        break;
      case 8u:
        uint64_t v86 = 8;
        break;
      default:
        sub_24D90DC2C(v110);
        uint64_t v86 = 0;
        break;
    }
    sub_24D90F50C((uint64_t)v15, v112);
    int v88 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v113 = *(void **)(v5 + 8);
    uint64_t v36 = v113;
    *(void *)(v5 + 8) = 0x8000000000000000;
    unint64_t v90 = sub_24D6AD9F4(v86);
    uint64_t v91 = v36[2];
    BOOL v92 = (v89 & 1) == 0;
    uint64_t v93 = v91 + v92;
    if (__OFADD__(v91, v92)) {
      break;
    }
    char v94 = v89;
    if (v36[3] >= v93)
    {
      if ((v88 & 1) == 0) {
        sub_24DC7A6C8();
      }
    }
    else
    {
      sub_24D6FF914(v93, v88);
      uint64_t v95 = sub_24D6AD9F4(v86);
      if ((v94 & 1) != (v96 & 1))
      {
        sub_24DCCAF18();
        __break(1u);
        goto LABEL_93;
      }
      unint64_t v90 = v95;
    }
    uint64_t v15 = v111;
    uint64_t v36 = v113;
    if (v94)
    {
      sub_24D718ED0(v112, v113[7] + v90 * v85);
    }
    else
    {
      v113[(v90 >> 6) + 8] |= 1 << v90;
      *(unsigned char *)(v36[6] + v90) = v86;
      sub_24DA76B8C(v112, v36[7] + v90 * v85);
      uint64_t v97 = v36[2];
      BOOL v77 = __OFADD__(v97, 1);
      uint64_t v98 = v97 + 1;
      if (v77) {
        goto LABEL_86;
      }
      v36[2] = v98;
    }
    *(void *)(v5 + 8) = v36;
    swift_bridgeObjectRelease();
    sub_24D90DC2C((uint64_t)v15);
    uint64_t v33 = (void *)((char *)v33 + v85);
    if (!--v84)
    {
      uint64_t result = swift_bridgeObjectRelease();
LABEL_79:
      uint64_t v99 = v106;
      if (v106)
      {
        uint64_t v36 = (void *)swift_allocObject();
        v36[2] = v99;
        v36[3] = v105;
        uint64_t v33 = *(void **)(v5 + 56);
        swift_retain();
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if (result) {
          goto LABEL_81;
        }
        goto LABEL_91;
      }
      return result;
    }
  }
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  uint64_t result = (uint64_t)sub_24DA148AC(0, v33[2] + 1, 1, v33);
  uint64_t v33 = (void *)result;
LABEL_81:
  unint64_t v101 = v33[2];
  unint64_t v100 = v33[3];
  if (v101 >= v100 >> 1)
  {
    uint64_t result = (uint64_t)sub_24DA148AC((void *)(v100 > 1), v101 + 1, 1, v33);
    uint64_t v33 = (void *)result;
  }
  v33[2] = v101 + 1;
  uint64_t v102 = &v33[2 * v101];
  v102[4] = sub_24D46A450;
  v102[5] = v36;
  *(void *)(v5 + 56) = v33;
  return result;
}

uint64_t sub_24DBACF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v128 = a4;
  uint64_t v130 = a3;
  uint64_t v147 = type metadata accessor for SyncState();
  uint64_t v129 = *(void *)(v147 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v147);
  uint64_t v150 = (uint64_t)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v149 = (uint64_t)&v127 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v127 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193630);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v138 = (uint64_t)&v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v134 = (char *)&v127 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v132 = (uint64_t)&v127 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(qword_26B193638);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v24 = (char *)&v127 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v136 = (uint64_t)&v127 - v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199BC0);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v131 = (uint64_t)&v127 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v146 = (uint64_t)&v127 - v29;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(qword_26B18FC00);
  uint64_t result = MEMORY[0x270FA5388](v30);
  id v34 = (char *)&v127 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = *(void *)(a1 + 16);
  uint64_t v148 = v13;
  uint64_t v133 = a2;
  if (v35)
  {
    uint64_t v36 = a1;
    char v37 = (void *)(a1 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80)));
    uint64_t v143 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
    uint64_t v137 = v15;
    uint64_t v135 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
    uint64_t v38 = *(void *)(v32 + 72);
    uint64_t v127 = v36;
    swift_bridgeObjectRetain();
    uint64_t v144 = v14;
    uint64_t v140 = v30;
    uint64_t v141 = v24;
    uint64_t v142 = v38;
    while (1)
    {
      sub_24D415FD0((uint64_t)v37, (uint64_t)v34, qword_26B18FC00);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          unint64_t v68 = sub_24D6AD5F8(*(void *)v34, v34[8]);
          if (v69)
          {
            unint64_t v70 = v68;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v72 = *(void *)v5;
            v151[0] = *(void *)v5;
            *(void *)uint64_t v5 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_24DC7AE80();
              uint64_t v72 = v151[0];
            }
            sub_24D3F0BA0(*(void *)(v72 + 56) + *(void *)(v137 + 72) * v70, (uint64_t)v24, &qword_26B193630);
            sub_24DC76400(v70, v72);
            *(void *)uint64_t v5 = v72;
            swift_bridgeObjectRelease();
            uint64_t v73 = 0;
          }
          else
          {
            uint64_t v73 = 1;
          }
          (*v143)(v24, v73, 1, v144);
          uint64_t v74 = (uint64_t)v24;
          uint64_t v75 = qword_26B193638;
          goto LABEL_29;
        case 2u:
          uint64_t v52 = (uint64_t *)(v34 + 8);
          char v53 = v34[16];
          uint64_t v54 = *(unsigned __int8 *)(v5 + 16);
          if (v54 != 2) {
            uint64_t v52 = (uint64_t *)(v5 + 24);
          }
          uint64_t v55 = *v52;
          if (v54 == 2) {
            LOBYTE(v54) = *v34;
          }
          else {
            char v53 = *(unsigned char *)(v5 + 32);
          }
          *(void *)(v5 + 16) = v54 & 1;
          *(void *)(v5 + 24) = v55;
          *(unsigned char *)(v5 + 32) = v53 & 1;
          *(_WORD *)(v5 + 48) = 0;
          goto LABEL_5;
        case 3u:
          uint64_t v139 = *((void *)v34 + 2);
          LODWORD(v145) = v34[24];
          uint64_t v56 = *(void *)v34;
          char v57 = v34[8];
          char v58 = swift_isUniquelyReferenced_nonNull_native();
          v151[0] = *(void *)(v5 + 40);
          char v59 = (void *)v151[0];
          *(void *)(v5 + 40) = 0x8000000000000000;
          unint64_t v61 = sub_24D6AD5F8(v56, v57);
          uint64_t v62 = v59[2];
          BOOL v63 = (v60 & 1) == 0;
          uint64_t v64 = v62 + v63;
          if (__OFADD__(v62, v63)) {
            goto LABEL_92;
          }
          char v65 = v60;
          if (v59[3] >= v64)
          {
            if ((v58 & 1) == 0)
            {
              char v59 = v151;
              sub_24DC7ACD0();
            }
          }
          else
          {
            sub_24D7004CC(v64, v58);
            char v59 = (void *)v151[0];
            unint64_t v66 = sub_24D6AD5F8(v56, v57);
            if ((v65 & 1) != (v67 & 1)) {
              goto LABEL_98;
            }
            unint64_t v61 = v66;
          }
          uint64_t v38 = v142;
          uint64_t v76 = (void *)v151[0];
          if (v65)
          {
            uint64_t v39 = *(void *)(v151[0] + 56) + 16 * v61;
            *(void *)uint64_t v39 = v139;
            *(unsigned char *)(v39 + 8) = v145;
          }
          else
          {
            *(void *)(v151[0] + 8 * (v61 >> 6) + 64) |= 1 << v61;
            uint64_t v77 = v76[6] + 16 * v61;
            *(void *)uint64_t v77 = v56;
            *(unsigned char *)(v77 + 8) = v57;
            uint64_t v78 = v76[7] + 16 * v61;
            *(void *)uint64_t v78 = v139;
            *(unsigned char *)(v78 + 8) = v145;
            uint64_t v79 = v76[2];
            BOOL v80 = __OFADD__(v79, 1);
            uint64_t v81 = v79 + 1;
            if (v80) {
              goto LABEL_94;
            }
            v76[2] = v81;
          }
          *(void *)(v5 + 40) = v76;
          swift_bridgeObjectRelease();
          uint64_t v13 = v148;
          uint64_t v24 = v141;
          goto LABEL_5;
        case 4u:
          *(unsigned char *)(v5 + 48) = 1;
          goto LABEL_5;
        case 5u:
          *(unsigned char *)(v5 + 49) = 1;
          goto LABEL_5;
        case 6u:
          *(unsigned char *)(v5 + 50) = 1;
          goto LABEL_5;
        default:
          uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B193EC0);
          uint64_t v41 = *(void *)&v34[*(int *)(v40 + 64)];
          uint64_t v42 = *(void *)v34;
          int v43 = v34[8];
          sub_24D3F0BA0((uint64_t)&v34[*(int *)(v40 + 48)], v146, (uint64_t *)&unk_26B199BC0);
          *(_WORD *)(v5 + 48) = 0;
          uint64_t v44 = *(void *)v5;
          uint64_t v45 = *(void *)(*(void *)v5 + 16);
          LODWORD(v145) = v43;
          if (v45)
          {
            unint64_t v46 = sub_24D6AD5F8(v42, v43);
            uint64_t v47 = v144;
            if (v48)
            {
              uint64_t v49 = *(void *)(v44 + 56);
              uint64_t v50 = v136;
              sub_24D415FD0(v49 + *(void *)(v137 + 72) * v46, v136, &qword_26B193630);
              uint64_t v51 = 0;
            }
            else
            {
              uint64_t v51 = 1;
              uint64_t v50 = v136;
            }
          }
          else
          {
            uint64_t v51 = 1;
            uint64_t v50 = v136;
            uint64_t v47 = v144;
          }
          (*v143)((char *)v50, v51, 1, v47);
          if ((*v135)(v50, 1, v47))
          {
            sub_24D415F74(v50, qword_26B193638);
LABEL_44:
            uint64_t v93 = (uint64_t)v134;
            sub_24D415FD0(v146, (uint64_t)&v134[*(int *)(v47 + 36)], (uint64_t *)&unk_26B199BC0);
            *(void *)uint64_t v93 = v42;
            char v94 = v145;
            *(unsigned char *)(v93 + 8) = v145;
            *(void *)(v93 + *(int *)(v47 + 40)) = v41;
            sub_24D3F0BA0(v93, v138, &qword_26B193630);
            swift_retain();
            int v95 = swift_isUniquelyReferenced_nonNull_native();
            v151[0] = *(void *)v5;
            char v59 = (void *)v151[0];
            *(void *)uint64_t v5 = 0x8000000000000000;
            unint64_t v97 = sub_24D6AD5F8(v42, v94);
            uint64_t v98 = v59[2];
            BOOL v99 = (v96 & 1) == 0;
            uint64_t v100 = v98 + v99;
            if (__OFADD__(v98, v99)) {
              goto LABEL_93;
            }
            char v101 = v96;
            if (v59[3] >= v100)
            {
              if (v95)
              {
                uint64_t v104 = (void *)v151[0];
                if ((v96 & 1) == 0) {
                  goto LABEL_55;
                }
              }
              else
              {
                char v59 = v151;
                sub_24DC7AE80();
                uint64_t v104 = (void *)v151[0];
                if ((v101 & 1) == 0) {
                  goto LABEL_55;
                }
              }
            }
            else
            {
              sub_24D70080C(v100, v95);
              char v59 = (void *)v151[0];
              unint64_t v102 = sub_24D6AD5F8(v42, v145);
              if ((v101 & 1) != (v103 & 1))
              {
LABEL_98:
                sub_24DCCAF18();
                __break(1u);
                JUMPOUT(0x24DBADCC4);
              }
              unint64_t v97 = v102;
              uint64_t v104 = (void *)v151[0];
              if ((v101 & 1) == 0)
              {
LABEL_55:
                v104[(v97 >> 6) + 8] |= 1 << v97;
                uint64_t v105 = v104[6] + 16 * v97;
                *(void *)uint64_t v105 = v42;
                *(unsigned char *)(v105 + 8) = v145;
                sub_24D3F0BA0(v138, v104[7] + *(void *)(v137 + 72) * v97, &qword_26B193630);
                uint64_t v106 = v104[2];
                BOOL v80 = __OFADD__(v106, 1);
                uint64_t v107 = v106 + 1;
                if (v80) {
                  goto LABEL_95;
                }
                v104[2] = v107;
                goto LABEL_57;
              }
            }
            sub_24D3E17AC(v138, v104[7] + *(void *)(v137 + 72) * v97, &qword_26B193630);
LABEL_57:
            *(void *)uint64_t v5 = v104;
            swift_release();
            swift_bridgeObjectRelease();
            sub_24D415F74(v146, (uint64_t *)&unk_26B199BC0);
            uint64_t v13 = v148;
            uint64_t v24 = v141;
            uint64_t v38 = v142;
            goto LABEL_5;
          }
          uint64_t v139 = v41;
          uint64_t v82 = v132;
          sub_24D415FD0(v50, v132, &qword_26B193630);
          sub_24D415F74(v50, qword_26B193638);
          uint64_t v83 = v82 + *(int *)(v47 + 36);
          uint64_t v84 = v131;
          sub_24D415FD0(v83, v131, (uint64_t *)&unk_26B199BC0);
          uint64_t v85 = type metadata accessor for VFSItem(0);
          int v86 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 48))(v84, 1, v85);
          uint64_t v87 = v84;
          uint64_t v47 = v144;
          sub_24D415F74(v87, (uint64_t *)&unk_26B199BC0);
          uint64_t v88 = v82;
          uint64_t v41 = v139;
          sub_24D415F74(v88, &qword_26B193630);
          if (v86 != 1) {
            goto LABEL_44;
          }
          unint64_t v89 = sub_24D6AD5F8(v42, v145);
          if (v90)
          {
            unint64_t v145 = v89;
            char v91 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v92 = *(void *)(v5 + 40);
            v151[0] = v92;
            *(void *)(v5 + 40) = 0x8000000000000000;
            uint64_t v24 = v141;
            uint64_t v38 = v142;
            if ((v91 & 1) == 0)
            {
              sub_24DC7ACD0();
              uint64_t v92 = v151[0];
            }
            sub_24DC761DC(v145, v92);
            *(void *)(v5 + 40) = v92;
            swift_bridgeObjectRelease();
            swift_release();
          }
          else
          {
            swift_release();
            uint64_t v24 = v141;
            uint64_t v38 = v142;
          }
          uint64_t v74 = v146;
          uint64_t v75 = (uint64_t *)&unk_26B199BC0;
LABEL_29:
          sub_24D415F74(v74, v75);
LABEL_5:
          char v37 = (void *)((char *)v37 + v38);
          if (!--v35)
          {
            uint64_t result = swift_bridgeObjectRelease();
            a2 = v133;
            goto LABEL_59;
          }
          break;
      }
    }
  }
LABEL_59:
  uint64_t v108 = *(void *)(a2 + 16);
  if (v108)
  {
    char v37 = (void *)(a2 + ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80)));
    uint64_t v109 = *(void *)(v129 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_24D90F50C((uint64_t)v37, (uint64_t)v13);
      sub_24D90F50C((uint64_t)v13, v149);
      uint64_t v110 = 1;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          break;
        case 2u:
          sub_24D90DC2C(v149);
          uint64_t v110 = 2;
          break;
        case 3u:
          uint64_t v110 = 3;
          break;
        case 4u:
          unint64_t v111 = *(void **)(v149 + 8);

          uint64_t v110 = 4;
          break;
        case 5u:

          uint64_t v110 = 5;
          break;
        case 6u:
          uint64_t v110 = 6;
          break;
        case 7u:
          uint64_t v110 = 7;
          break;
        case 8u:
          uint64_t v110 = 8;
          break;
        default:
          sub_24D90DC2C(v149);
          uint64_t v110 = 0;
          break;
      }
      sub_24D90F50C((uint64_t)v13, v150);
      int v112 = swift_isUniquelyReferenced_nonNull_native();
      v151[0] = *(void *)(v5 + 8);
      char v59 = (void *)v151[0];
      *(void *)(v5 + 8) = 0x8000000000000000;
      unint64_t v114 = sub_24D6AD9F4(v110);
      uint64_t v115 = v59[2];
      BOOL v116 = (v113 & 1) == 0;
      uint64_t v117 = v115 + v116;
      if (__OFADD__(v115, v116))
      {
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        uint64_t result = (uint64_t)sub_24DA148AC(0, v37[2] + 1, 1, v37);
        char v37 = (void *)result;
LABEL_86:
        unint64_t v125 = v37[2];
        unint64_t v124 = v37[3];
        if (v125 >= v124 >> 1)
        {
          uint64_t result = (uint64_t)sub_24DA148AC((void *)(v124 > 1), v125 + 1, 1, v37);
          char v37 = (void *)result;
        }
        v37[2] = v125 + 1;
        uint64_t v126 = &v37[2 * v125];
        v126[4] = sub_24D475708;
        v126[5] = v59;
        *(void *)(v5 + 56) = v37;
        return result;
      }
      char v118 = v113;
      if (v59[3] >= v117)
      {
        if (v112)
        {
          char v59 = (void *)v151[0];
          if ((v113 & 1) == 0) {
            goto LABEL_79;
          }
        }
        else
        {
          sub_24DC7A6C8();
          char v59 = (void *)v151[0];
          if ((v118 & 1) == 0) {
            goto LABEL_79;
          }
        }
      }
      else
      {
        sub_24D6FF914(v117, v112);
        uint64_t v119 = sub_24D6AD9F4(v110);
        if ((v118 & 1) != (v120 & 1))
        {
          sub_24DCCAF18();
          __break(1u);
          goto LABEL_98;
        }
        unint64_t v114 = v119;
        char v59 = (void *)v151[0];
        if ((v118 & 1) == 0)
        {
LABEL_79:
          v59[(v114 >> 6) + 8] |= 1 << v114;
          *(unsigned char *)(v59[6] + v114) = v110;
          sub_24DA76B8C(v150, v59[7] + v114 * v109);
          uint64_t v121 = v59[2];
          BOOL v80 = __OFADD__(v121, 1);
          uint64_t v122 = v121 + 1;
          if (v80) {
            goto LABEL_91;
          }
          v59[2] = v122;
          goto LABEL_62;
        }
      }
      sub_24D718ED0(v150, v59[7] + v114 * v109);
LABEL_62:
      *(void *)(v5 + 8) = v59;
      swift_bridgeObjectRelease();
      uint64_t v13 = v148;
      sub_24D90DC2C((uint64_t)v148);
      char v37 = (void *)((char *)v37 + v109);
      if (!--v108)
      {
        uint64_t result = swift_bridgeObjectRelease();
        break;
      }
    }
  }
  uint64_t v123 = v130;
  if (v130)
  {
    char v59 = (void *)swift_allocObject();
    v59[2] = v123;
    v59[3] = v128;
    char v37 = *(void **)(v5 + 56);
    swift_retain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      goto LABEL_96;
    }
    goto LABEL_86;
  }
  return result;
}

id sub_24DBADD04@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = sub_24DCC9078();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)sub_24D8A0EFC((uint64_t)a1);
  if (!v4)
  {
    unint64_t v17 = v14;
    uint64_t v53 = v9;
    uint64_t v54 = v10;
    if (v16 == 2)
    {
      char v48 = a4;
      uint64_t v18 = v15;
      uint64_t v19 = (uint64_t)result;
      id v20 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      swift_retain_n();
      uint64_t v49 = a1;
      id v21 = a1;
      id v22 = a2;
      id v23 = v21;
      id v24 = v22;
      uint64_t v50 = v19;
      id v51 = v24;
      uint64_t v52 = v18;
      sub_24D903CB0(v19, v17, v18, 2);
      uint64_t v25 = sub_24DCC9068();
      os_log_type_t v26 = sub_24DCCA118();
      int v47 = v26;
      BOOL v27 = os_log_type_enabled(v25, v26);
      uint64_t v28 = v54;
      if (v27)
      {
        uint64_t v29 = swift_slowAlloc();
        uint64_t v46 = swift_slowAlloc();
        uint64_t v56 = v46;
        *(_DWORD *)uint64_t v29 = 136315394;
        uint64_t v44 = v29 + 4;
        uint64_t v30 = sub_24D80897C((uint64_t)v23, a2, a3);
        os_log_t v45 = v25;
        unint64_t v32 = v31;
        swift_release();
        id v33 = v51;

        uint64_t v55 = sub_24D418FB4(v30, v32, &v56);
        sub_24DCCA428();
        swift_release();

        swift_bridgeObjectRelease();
        id v34 = (uint8_t *)v29;
        *(_WORD *)(v29 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v35 = v50;
        uint64_t v55 = sub_24D418FB4(v50, v17, &v56);
        sub_24DCCA428();
        uint64_t v36 = v52;
        sub_24D903D70(v35, v17, v52, 2);
        sub_24D903D70(v35, v17, v36, 2);
        swift_bridgeObjectRelease();
        os_log_t v37 = v45;
        _os_log_impl(&dword_24D3D0000, v45, (os_log_type_t)v47, "fetch metadata for pending event: %s, reason: %s", v34, 0x16u);
        uint64_t v38 = v46;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v38, -1, -1);
        MEMORY[0x25332B030](v34, -1, -1);

        (*(void (**)(char *, uint64_t))(v54 + 8))(v12, v53);
      }
      else
      {
        swift_release_n();
        id v40 = v51;

        uint64_t v41 = v50;
        uint64_t v42 = v52;
        sub_24D903D70(v50, v17, v52, 2);
        sub_24D903D70(v41, v17, v42, 2);

        (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v53);
      }
      a4 = v48;
      void *v48 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1930A8);
      swift_storeEnumTagMultiPayload();
      a1 = v49;
    }
    else
    {
      sub_24D903D70((uint64_t)result, v14, v15, v16);
      *a4 = a1;
      a4[1] = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1930A8);
      swift_storeEnumTagMultiPayload();
      id v39 = a2;
    }
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1930A8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(a4, 0, 1, v43);
    return a1;
  }
  return result;
}

unint64_t sub_24DBAE18C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193630);
  uint64_t v4 = v3 - 8;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v46 - v8;
  uint64_t v10 = sub_24DCC9078();
  uint64_t v54 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1 + *(int *)(v4 + 44);
  uint64_t v14 = *(void *)a1;
  char v15 = *(unsigned char *)(a1 + 8);
  uint64_t v16 = v56;
  unint64_t result = sub_24D8A26A0(*(void *)a1);
  if (!v16)
  {
    uint64_t v53 = v7;
    uint64_t v56 = v10;
    if (v20 == 2)
    {
      unint64_t v51 = result;
      uint64_t v52 = v19;
      uint64_t v50 = 0;
      unint64_t v21 = v18;
      id v22 = (id)fpfs_current_or_default_log();
      id v23 = v12;
      sub_24DCC9088();
      uint64_t v24 = a1;
      sub_24D415FD0(a1, (uint64_t)v9, &qword_26B193630);
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_24DCC9068();
      os_log_type_t v26 = sub_24DCCA118();
      int v27 = v26;
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v28 = swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        uint64_t v58 = v49;
        *(_DWORD *)uint64_t v28 = 136315394;
        uint64_t v46 = v28 + 4;
        os_log_t v48 = v25;
        int v47 = v27;
        uint64_t v29 = (uint64_t)v53;
        sub_24D415FD0((uint64_t)v9, (uint64_t)v53, &qword_26B193630);
        sub_24D415F74((uint64_t)v9, &qword_26B193630);
        uint64_t v30 = sub_24D808BAC();
        unint64_t v32 = v31;
        sub_24D415F74(v29, &qword_26B193630);
        uint64_t v57 = sub_24D418FB4(v30, v32, &v58);
        id v33 = v23;
        sub_24DCCA428();
        uint64_t v24 = a1;
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 12) = 2080;
        id v34 = (uint8_t *)v28;
        swift_bridgeObjectRetain();
        uint64_t v35 = v51;
        uint64_t v57 = sub_24D418FB4(v51, v21, &v58);
        sub_24DCCA428();
        uint64_t v36 = v52;
        sub_24D903D70(v35, v21, v52, 2);
        sub_24D903D70(v35, v21, v36, 2);
        swift_bridgeObjectRelease();
        os_log_t v37 = v48;
        _os_log_impl(&dword_24D3D0000, v48, (os_log_type_t)v47, "fetch metadata for pending event: %s, reason: %s", v34, 0x16u);
        uint64_t v38 = v49;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v38, -1, -1);
        MEMORY[0x25332B030](v34, -1, -1);

        (*(void (**)(char *, uint64_t))(v54 + 8))(v33, v56);
      }
      else
      {
        sub_24D415F74((uint64_t)v9, &qword_26B193630);
        uint64_t v43 = v51;
        uint64_t v42 = v52;
        sub_24D903D70(v51, v21, v52, 2);
        sub_24D903D70(v43, v21, v42, 2);

        (*(void (**)(char *, uint64_t))(v54 + 8))(v23, v56);
      }
      char v44 = *(unsigned char *)(v24 + 8);
      id v40 = v55;
      *uint64_t v55 = *(void *)v24;
      *((unsigned char *)v40 + 8) = v44;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      sub_24D903D70(result, v18, v19, v20);
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C660);
      id v40 = v55;
      uint64_t v41 = (uint64_t)v55 + *(int *)(v39 + 48);
      *uint64_t v55 = v14;
      *((unsigned char *)v40 + 8) = v15;
      sub_24D415FD0(v13, v41, (uint64_t *)&unk_26B199BC0);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
    return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v40, 0, 1, v45);
  }
  return result;
}

uint64_t sub_24DBAE688(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = a1 + qword_26B1995D0;
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v22 = v1;
    sub_24D71E6DC();
    swift_bridgeObjectRetain();
    uint64_t v5 = v3 + 40;
    do
    {
      uint64_t v6 = *(void (**)(void **))(v5 - 8);
      uint64_t v7 = (void *)swift_allocError();
      id v23 = v7;
      swift_retain();
      v6(&v23);

      swift_release();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v1 = v22;
  }
  uint64_t v8 = MEMORY[0x263F8EE78];
  unint64_t v9 = sub_24D430260(MEMORY[0x263F8EE78]);
  unint64_t v10 = sub_24D42A0E8(v8);
  unint64_t v11 = sub_24D43027C(v8);
  *(void *)uint64_t v2 = v9;
  *(void *)(v2 + 8) = v10;
  *(_OWORD *)(v2 + 16) = xmmword_24DCDE190;
  *(unsigned char *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = v11;
  *(_WORD *)(v2 + 48) = 0;
  *(unsigned char *)(v2 + 50) = 0;
  *(void *)(v2 + 56) = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v1 + qword_26B1995C8;
  swift_beginAccess();
  uint64_t v13 = *(void *)(v12 + 56);
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    sub_24D71E6DC();
    swift_bridgeObjectRetain();
    uint64_t v15 = v13 + 40;
    do
    {
      uint64_t v16 = *(void (**)(void **))(v15 - 8);
      unint64_t v17 = (void *)swift_allocError();
      uint64_t v24 = v17;
      swift_retain();
      v16(&v24);

      swift_release();
      v15 += 16;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x263F8EE78];
  }
  unint64_t v18 = sub_24D429FAC(v8);
  unint64_t v19 = sub_24D42A0E8(v8);
  unint64_t v20 = sub_24D42A2DC(v8);
  *(void *)uint64_t v12 = v18;
  *(void *)(v12 + 8) = v19;
  *(_OWORD *)(v12 + 16) = xmmword_24DCDE190;
  *(unsigned char *)(v12 + 32) = 0;
  *(void *)(v12 + 40) = v20;
  *(_WORD *)(v12 + 48) = 0;
  *(unsigned char *)(v12 + 50) = 0;
  *(void *)(v12 + 56) = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24DBAE910(void *a1)
{
  uint64_t v3 = (char *)a1 + qword_26B1995D0;
  swift_beginAccess();
  long long v4 = *((_OWORD *)v3 + 1);
  v24[0] = *(_OWORD *)v3;
  v24[1] = v4;
  long long v5 = *((_OWORD *)v3 + 3);
  v24[2] = *((_OWORD *)v3 + 2);
  v24[3] = v5;
  sub_24D824B10((uint64_t)v24);
  sub_24D8A3F2C(a1);
  uint64_t result = sub_24D824B68((uint64_t)v24);
  if (!v1)
  {
    swift_beginAccess();
    *((_OWORD *)v3 + 1) = xmmword_24DCDE190;
    v3[32] = 0;
    *((_WORD *)v3 + 24) = 0;
    v3[50] = 0;
    uint64_t v7 = MEMORY[0x263F8EE78];
    *((void *)v3 + 1) = sub_24D42A0E8(MEMORY[0x263F8EE78]);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v8 = *((void *)v3 + 7);
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = v8 + 40;
      do
      {
        unint64_t v11 = *(void (**)(void *))(v10 - 8);
        v22[0] = 0;
        swift_retain();
        v11(v22);
        swift_release();
        v10 += 16;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
    }
    *((void *)v3 + 7) = v7;
    swift_bridgeObjectRelease();
    uint64_t v12 = (char *)a1 + qword_26B1995C8;
    swift_beginAccess();
    long long v13 = *((_OWORD *)v12 + 1);
    v23[0] = *(_OWORD *)v12;
    v23[1] = v13;
    long long v14 = *((_OWORD *)v12 + 3);
    v23[2] = *((_OWORD *)v12 + 2);
    v23[3] = v14;
    sub_24D824B10((uint64_t)v23);
    uint64_t v15 = (void *)sub_24D88FD24();
    sub_24D8A5DEC(v15);
    swift_release();
    sub_24D824B68((uint64_t)v23);
    swift_beginAccess();
    *((_OWORD *)v12 + 1) = xmmword_24DCDE190;
    v12[32] = 0;
    *((_WORD *)v12 + 24) = 0;
    v12[50] = 0;
    uint64_t v16 = MEMORY[0x263F8EE78];
    *((void *)v12 + 1) = sub_24D42A0E8(MEMORY[0x263F8EE78]);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v17 = *((void *)v12 + 7);
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = v17 + 40;
      do
      {
        unint64_t v20 = *(void (**)(void *))(v19 - 8);
        v21[0] = 0;
        swift_retain();
        v20(v21);
        swift_release();
        v19 += 16;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
    }
    *((void *)v12 + 7) = v16;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24DBAEB88(uint64_t result)
{
  uint64_t v1 = qword_26B1A2770;
  if (*(unsigned char *)(result + qword_26B1A2770 + 8)) {
    uint64_t v1 = qword_26B1A2768;
  }
  uint64_t v2 = *(void *)(result + v1);
  uint64_t v3 = qword_26B1A2760;
  if (*(unsigned char *)(result + qword_26B1A2760 + 8)) {
    uint64_t v3 = qword_26B1A2758;
  }
  uint64_t v4 = *(void *)(result + v3);
  long long v5 = (uint64_t *)(result + qword_26B1A27F0);
  if (*(unsigned char *)(result + qword_26B1A27F0 + 8) == 1)
  {
    if (*(unsigned char *)(result + 152))
    {
LABEL_22:
      *(void *)(result + qword_26B1A2820) = v2;
      *(void *)(result + qword_26B1A2828) = v4;
      return result;
    }
    long long v5 = (uint64_t *)(result + 144);
  }
  uint64_t v6 = qword_26B1A2800;
  if (*(unsigned char *)(result + qword_26B1A2800 + 8)) {
    uint64_t v6 = qword_26B1A27F8;
  }
  double v7 = (double)*v5;
  double v8 = *(double *)(result + v6) * v7;
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v2 <= (uint64_t)v8) {
    uint64_t v2 = (uint64_t)v8;
  }
  uint64_t v9 = qword_26B1A2780;
  if (*(unsigned char *)(result + qword_26B1A2780 + 8)) {
    uint64_t v9 = qword_26B1A2778;
  }
  double v10 = *(double *)(result + v9) * v7;
  if ((~*(void *)&v10 & 0x7FF0000000000000) == 0) {
    goto LABEL_26;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v10 < 9.22337204e18)
  {
    if (v4 <= (uint64_t)v10) {
      uint64_t v4 = (uint64_t)v10;
    }
    goto LABEL_22;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24DBAED2C(uint64_t a1, void *a2)
{
  uint64_t v3 = a1 + qword_26B199A80;
  swift_beginAccess();
  uint64_t v4 = *(void *)v3 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(*(void *)v3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(*(void *)v3 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = *(void *)(*(void *)(result + 56) + 8 * i);
    BOOL v17 = __OFADD__(*a2, v16);
    uint64_t v18 = *a2 + v16;
    if (v17)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *a2 = v18;
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v8) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v4 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v14 = *(void *)(v4 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v7 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v8) {
    return swift_release();
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24DBAEE9C(uint64_t a1, void *a2)
{
  uint64_t v3 = (uint64_t *)(a1 + qword_26B199A80);
  uint64_t result = swift_beginAccess();
  int64_t v5 = 0;
  uint64_t v6 = *v3;
  uint64_t v7 = *v3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(*v3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(*v3 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    uint64_t v17 = *(void *)(*(void *)(v6 + 56) + 8 * i);
    BOOL v18 = __OFADD__(*a2, v17);
    uint64_t v19 = *a2 + v17;
    if (v18)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *a2 = v19;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_24;
    }
    if (v14 >= v11) {
      return result;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v11) {
        return result;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v11) {
          return result;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    return result;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v11) {
      return result;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

ssize_t sub_24DBAF004()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24DCC9078();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t *)(v1 + qword_26B19A1A0);
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  uint64_t v8 = (const char *)objc_msgSend(v7, sel_fileSystemRepresentation);
  id v9 = v7;
  ssize_t result = getxattr(v8, "com.apple.fileprovider.testing.failSpeculativeDownload", 0, 0, 0, 1);
  if (result >= 1)
  {
    *(unsigned char *)(v1 + qword_26B1A2750) = 1;
    id v11 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    swift_retain();
    unint64_t v12 = sub_24DCC9068();
    os_log_type_t v13 = sub_24DCCA118();
    if (os_log_type_enabled(v12, v13))
    {
      int64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v20 = v2;
      uint64_t v16 = v15;
      uint64_t v22 = v15;
      uint64_t v19 = v3;
      *(_DWORD *)int64_t v14 = 136315138;
      uint64_t v18 = *v6;
      unint64_t v17 = v6[1];
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_24D418FB4(v18, v17, &v22);
      sub_24DCCA428();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D3D0000, v12, v13, "💾 marking SpeculativeDownloadsDiskManagement as ailDownloadsWithInsufficiantStorage: for root %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v16, -1, -1);
      MEMORY[0x25332B030](v14, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v5, v20);
    }
    else
    {

      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  return result;
}

uint64_t sub_24DBAF2B4(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a2;
  v32[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v7 = (void (*)(uint64_t, uint64_t))sub_24DCC9078();
  uint64_t v30 = *((void *)v7 - 1);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DBA592C();
  unint64_t v10 = *(void **)(a1 + 120);
  swift_bridgeObjectRetain();
  id v11 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  v32[0] = 0;
  unsigned int v12 = objc_msgSend(v10, sel_setupForPath_error_, v11, v32);

  if (v12)
  {
    id v13 = v32[0];
    id v14 = objc_msgSend(v10, sel_totalSize);
    uint64_t v15 = v14;
    if (v14)
    {
      id v16 = objc_msgSend(v14, sel_longLongValue);
    }
    else
    {
      id v16 = 0;
    }
    *(void *)(a1 + 144) = v16;
    *(unsigned char *)(a1 + 152) = v15 == 0;
    if (os_variant_has_internal_content()) {
      sub_24DBAF004();
    }
    int v27 = (void *)swift_retain();
    sub_24DBA45C4(v27, a1);
    sub_24DBAFC70(v29, a3, a4);
    return sub_24DBAF640(a3, a4);
  }
  else
  {
    id v17 = v32[0];
    uint64_t v18 = (void *)sub_24DCC8828();

    swift_willThrow();
    id v19 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v20 = v18;
    uint64_t v21 = sub_24DCC9068();
    int v22 = sub_24DCCA138();
    if (os_log_type_enabled(v21, (os_log_type_t)v22))
    {
      uint64_t v29 = v7;
      id v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      *(_DWORD *)id v23 = 138412290;
      swift_getErrorValue();
      id v25 = sub_24DBA2828(v31);
      v32[0] = v25;
      uint64_t v7 = v29;
      sub_24DCCA428();
      void *v24 = v25;

      _os_log_impl(&dword_24D3D0000, v21, (os_log_type_t)v22, "💾 failed to register root path for speculative downloader: %@", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v24, -1, -1);
      MEMORY[0x25332B030](v23, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, void))(v30 + 8))(v9, v7);
  }
}

uint64_t sub_24DBAF640(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  uint64_t v3 = v2;
  uint64_t v4 = sub_24DCC9398();
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24DCCA248();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC8CE8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = qword_26B1A27E8;
  if (*(unsigned char *)(v3 + qword_26B1A27E8 + 8)) {
    uint64_t v15 = qword_26B1A27E0;
  }
  uint64_t v16 = *(void *)(v3 + v15);
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(v3 + 80) != 1 || (*(unsigned char *)(v3 + 96) & 1) != 0) {
    return result;
  }
  uint64_t v18 = *(void *)(v3 + 88);
  BOOL v19 = __OFADD__(v18, v16);
  uint64_t v20 = v18 + v16;
  if (v19)
  {
    __break(1u);
    goto LABEL_18;
  }
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v22 = v21;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  double v23 = v22 * 1000000000.0;
  if ((~COERCE__INT64(v22 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v23 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v20 > (uint64_t)v23)
  {
    uint64_t v34 = (uint64_t)v23;
    uint64_t v24 = qword_26B1A2840;
    uint64_t v25 = *(void *)(v3 + qword_26B1A2840);
    uint64_t v35 = v20;
    if (v25)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_24DCCA2B8();
      swift_unknownObjectRelease();
      if (*(void *)(v3 + v24))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_24DCCA288();
        swift_unknownObjectRelease();
      }
    }
    *(void *)(v3 + v24) = 0;
    swift_unknownObjectRelease();
    uint64_t v26 = sub_24D3FB6F8(0, (unint64_t *)&qword_26B199E30);
    v33[1] = *(void *)(v3 + qword_26B19A1A8);
    v33[2] = v26;
    uint64_t v39 = MEMORY[0x263F8EE78];
    sub_24D4192D0((unint64_t *)&qword_26B194030, MEMORY[0x263F8F148]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B193FA0);
    sub_24D3E4A9C((unint64_t *)&qword_26B193FB0, (uint64_t *)&unk_26B193FA0);
    sub_24DCCA5B8();
    uint64_t v27 = sub_24DCCA258();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *(void *)(v3 + v24) = v27;
    uint64_t result = swift_unknownObjectRelease();
    uint64_t v29 = v34;
    uint64_t v28 = v35;
    if (*(void *)(v3 + v24))
    {
      swift_getObjectType();
      uint64_t v30 = swift_allocObject();
      swift_weakInit();
      swift_unknownObjectRetain();
      swift_retain();
      sub_24D82F614();
      sub_24D3D6620(0, (uint64_t)v6, v37, v30);
      swift_release();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v4);
      uint64_t result = swift_release();
      if (!__OFSUB__(v28, v29))
      {
        dispatch_time_t v31 = dispatch_time(0x8000000000000000, 0);
        dispatch_time_t v32 = dispatch_time(v31, v28 - v29);
        sub_24DA289F8(v32);
        sub_24DCCA298();
        return swift_unknownObjectRelease();
      }
LABEL_21:
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_24DBAFB2C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = qword_26B1A2840;
    if (*(void *)(result + qword_26B1A2840))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_24DCCA2B8();
      swift_unknownObjectRelease();
      if (*(void *)(v1 + v2))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_24DCCA288();
        swift_unknownObjectRelease();
      }
    }
    *(void *)(v1 + v2) = 0;
    swift_unknownObjectRelease();
    uint64_t v3 = *(void (**)(uint64_t))(v1 + qword_26B1A2830);
    if (v3)
    {
      swift_retain();
      v3(1);
      sub_24D43DD74((uint64_t)v3);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_24DBAFC3C()
{
  return sub_24DBAFC70((void (*)(uint64_t, uint64_t))sub_24DBAED2C, (uint64_t)&unk_26FFD72C8, (uint64_t)sub_24DBB2088);
}

uint64_t sub_24DBAFC70(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3;
  uint64_t v8 = sub_24DCC8CE8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24DBAFF08(0);
  if (v13)
  {
    id v17 = (unsigned __int8 *)(v3 + 80);
    swift_beginAccess();
    return *v17;
  }
  uint64_t v14 = v12;
  v26[0] = 0;
  uint64_t v15 = (void *)swift_retain();
  sub_24DBA468C(v15, v7, (uint64_t)v26, a1);
  uint64_t v16 = v26[0];
  id v17 = (unsigned __int8 *)(v7 + 80);
  uint64_t result = swift_beginAccess();
  uint64_t v19 = v14 - v16;
  BOOL v20 = __OFSUB__(v14, v16);
  if (*(unsigned char *)(v7 + 80))
  {
    if (!v20)
    {
      if (v19 < *(void *)(v7 + qword_26B1A2820))
      {
        *(unsigned char *)(v7 + 80) = 0;
        *(unsigned char *)(v7 + 72) = 1;
        sub_24D850B38();
        double v21 = *(void (**)(void))(v7 + qword_26B1A2830);
        if (v21)
        {
          swift_retain();
          v21(0);
          sub_24D43DD74((uint64_t)v21);
        }
      }
      return *v17;
    }
    __break(1u);
    goto LABEL_19;
  }
  if (v20)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (*(void *)(v7 + qword_26B1A2828) >= v19) {
    return *v17;
  }
  *(unsigned char *)(v7 + 80) = 1;
  *(unsigned char *)(v7 + 72) = 1;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v23 = v22;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  double v24 = v23 * 1000000000.0;
  if ((~COERCE__INT64(v23 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v24 < 9.22337204e18)
  {
    *(void *)(v7 + 88) = (uint64_t)v24;
    *(unsigned char *)(v7 + 96) = 0;
    *(unsigned char *)(v7 + 72) = 1;
    sub_24D850B38();
    sub_24DBAF640(a2, a3);
    return *v17;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_24DBAFF08(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24DCC93E8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v25 - v10;
  MEMORY[0x270FA5388](v9);
  char v13 = (char *)&v25 - v12;
  uint64_t v14 = v2 + qword_26B1A2788;
  if (*(unsigned char *)(v2 + qword_26B1A2788 + 8) == 1)
  {
    uint64_t v15 = v2 + qword_26B199A90;
    swift_beginAccess();
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v26 = v15;
    v16(v13, v15, v4);
    sub_24DCC93D8();
    sub_24DCC93C8();
    char v17 = sub_24DCC93B8();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v8, v4);
    v18(v11, v4);
    if (a1 & 1) == 0 || (v17)
    {
      id v19 = objc_msgSend(*(id *)(v2 + 120), sel_freeSize);
      if (v19)
      {
        BOOL v20 = v19;
        double v21 = (uint64_t *)(v2 + qword_26B1A27F0);
        if (*(unsigned char *)(v2 + qword_26B1A27F0 + 8))
        {
          if (*(unsigned char *)(v2 + 152))
          {
            v18(v13, v4);

LABEL_14:
            uint64_t v14 = v2 + 128;
            return *(void *)v14;
          }
          double v21 = (uint64_t *)(v2 + 144);
        }
        uint64_t v22 = *v21;
        *(void *)(v2 + 128) = objc_msgSend(v19, sel_longLongValue);
        *(unsigned char *)(v2 + 136) = 0;
        if (v22 < (uint64_t)objc_msgSend(v20, sel_longLongValue))
        {
          *(void *)(v2 + 128) = v22;
          *(unsigned char *)(v2 + 136) = 0;
        }
        sub_24DCC93C8();

        v18(v13, v4);
        uint64_t v23 = v26;
        swift_beginAccess();
        (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v23, v11, v4);
        swift_endAccess();
        goto LABEL_14;
      }
    }
    v18(v13, v4);
    goto LABEL_14;
  }
  return *(void *)v14;
}

uint64_t sub_24DBB01F4()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_24DBB021C()
{
  return 0;
}

uint64_t sub_24DBB02D0()
{
  return sub_24DBB0904();
}

void sub_24DBB02E4()
{
  uint64_t v0 = (void *)sub_24DCC97B8();
  int v1 = MGGetSInt32Answer();

  dword_26B1A2798 = v1;
}

uint64_t sub_24DBB0338(uint64_t a1, uint64_t a2)
{
  uint64_t v55 = a1;
  uint64_t v57 = *(void *)(a2 + 16);
  if (!v57) {
    return 0;
  }
  uint64_t v56 = a2 + 32;
  unint64_t v51 = (char *)&v59 + 2;
  uint64_t v52 = (char *)&v59 + 3;
  uint64_t v53 = a2;
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  long long v54 = xmmword_24DCCECE0;
  while (1)
  {
    uint64_t v58 = v3;
    uint64_t v4 = (uint64_t *)(v56 + 16 * v3);
    uint64_t v6 = *v4;
    unint64_t v5 = v4[1];
    uint64_t v59 = 58;
    uint64_t v60 = 0xE100000000000000;
    MEMORY[0x270FA5388](v2);
    v50[2] = &v59;
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_24DC72A9C(0x7FFFFFFFFFFFFFFFLL, 1, sub_24D6DEE88, (uint64_t)v50, v6, v5);
    swift_bridgeObjectRelease();
    int64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      uint64_t v59 = MEMORY[0x263F8EE78];
      sub_24D3E4C28(0, v8, 0);
      uint64_t v9 = (void *)v59;
      uint64_t v10 = (uint64_t *)(v7 + 56);
      do
      {
        uint64_t v11 = *(v10 - 3);
        uint64_t v12 = *(v10 - 2);
        uint64_t v13 = *(v10 - 1);
        uint64_t v14 = *v10;
        swift_bridgeObjectRetain();
        uint64_t v15 = MEMORY[0x253327950](v11, v12, v13, v14);
        uint64_t v17 = v16;
        swift_bridgeObjectRelease();
        uint64_t v59 = (uint64_t)v9;
        unint64_t v19 = v9[2];
        unint64_t v18 = v9[3];
        if (v19 >= v18 >> 1)
        {
          sub_24D3E4C28(v18 > 1, v19 + 1, 1);
          uint64_t v9 = (void *)v59;
        }
        v9[2] = v19 + 1;
        BOOL v20 = &v9[2 * v19];
        v20[4] = v15;
        v20[5] = v17;
        v10 += 4;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = (void *)MEMORY[0x263F8EE78];
    }
    if (v9[2] == 2) {
      break;
    }
    uint64_t v2 = swift_bridgeObjectRelease();
LABEL_4:
    uint64_t v3 = v58 + 1;
    if (v58 + 1 == v57)
    {
      uint64_t v41 = 0;
LABEL_71:
      swift_bridgeObjectRelease();
      return v41;
    }
  }
  uint64_t v22 = v9[4];
  uint64_t v21 = v9[5];
  uint64_t v24 = v9[6];
  unint64_t v23 = v9[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v26 = HIBYTE(v23) & 0xF;
  uint64_t v27 = v24 & 0xFFFFFFFFFFFFLL;
  if ((v23 & 0x2000000000000000) != 0) {
    uint64_t v28 = HIBYTE(v23) & 0xF;
  }
  else {
    uint64_t v28 = v24 & 0xFFFFFFFFFFFFLL;
  }
  if (!v28)
  {
    swift_bridgeObjectRelease();
    uint64_t v41 = 0;
    goto LABEL_59;
  }
  if ((v23 & 0x1000000000000000) != 0)
  {
    uint64_t v30 = (uint64_t)sub_24DBB0D0C(v24, v23, 10);
    LOBYTE(v24) = v49;
LABEL_56:
    swift_bridgeObjectRelease();
    if (v24) {
      uint64_t v41 = 0;
    }
    else {
      uint64_t v41 = v30;
    }
LABEL_59:
    sub_24D3FB6F8(0, &qword_26B1947F8);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = v54;
    *(void *)(v42 + 56) = MEMORY[0x263F8D310];
    *(void *)(v42 + 64) = sub_24D3F7B98();
    *(void *)(v42 + 32) = v22;
    *(void *)(v42 + 40) = v21;
    uint64_t v43 = (void *)sub_24DCCA0B8();
    sub_24DCC97E8();
    char v44 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    unsigned __int8 v45 = objc_msgSend(v43, sel_evaluateWithObject_, v44);

    if (v45) {
      goto LABEL_71;
    }
    goto LABEL_4;
  }
  if ((v23 & 0x2000000000000000) == 0)
  {
    if ((v24 & 0x1000000000000000) != 0) {
      uint64_t v29 = (unsigned __int8 *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v29 = (unsigned __int8 *)sub_24DCCA7E8();
    }
    uint64_t v30 = (uint64_t)sub_24DBB0DF4(v29, v27, 10);
    LOBYTE(v24) = v31 & 1;
    goto LABEL_56;
  }
  uint64_t v59 = v24;
  uint64_t v60 = v23 & 0xFFFFFFFFFFFFFFLL;
  if (v24 == 43)
  {
    if (!v26) {
      goto LABEL_75;
    }
    if (v26 == 1 || (BYTE1(v24) - 48) > 9u) {
      goto LABEL_43;
    }
    uint64_t v30 = (BYTE1(v24) - 48);
    if (v26 != 2)
    {
      if ((BYTE2(v24) - 48) > 9u) {
        goto LABEL_43;
      }
      uint64_t v30 = 10 * (BYTE1(v24) - 48) + (BYTE2(v24) - 48);
      uint64_t v32 = v26 - 3;
      if (v32)
      {
        id v33 = (unsigned __int8 *)v52;
        while (1)
        {
          unsigned int v34 = *v33 - 48;
          if (v34 > 9) {
            goto LABEL_43;
          }
          uint64_t v35 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63) {
            goto LABEL_43;
          }
          uint64_t v30 = v35 + v34;
          if (__OFADD__(v35, v34)) {
            goto LABEL_43;
          }
          LOBYTE(v24) = 0;
          ++v33;
          if (!--v32) {
            goto LABEL_56;
          }
        }
      }
    }
LABEL_55:
    LOBYTE(v24) = 0;
    goto LABEL_56;
  }
  if (v24 != 45)
  {
    if (!v26 || (v24 - 48) > 9u) {
      goto LABEL_43;
    }
    uint64_t v30 = (v24 - 48);
    if (v26 != 1)
    {
      if ((BYTE1(v24) - 48) > 9u) {
        goto LABEL_43;
      }
      uint64_t v30 = 10 * (v24 - 48) + (BYTE1(v24) - 48);
      uint64_t v36 = v26 - 2;
      if (v36)
      {
        uint64_t v37 = (unsigned __int8 *)v51;
        while (1)
        {
          unsigned int v38 = *v37 - 48;
          if (v38 > 9) {
            goto LABEL_43;
          }
          uint64_t v39 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63) {
            goto LABEL_43;
          }
          uint64_t v30 = v39 + v38;
          if (__OFADD__(v39, v38)) {
            goto LABEL_43;
          }
          LOBYTE(v24) = 0;
          ++v37;
          if (!--v36) {
            goto LABEL_56;
          }
        }
      }
    }
    goto LABEL_55;
  }
  if (v26)
  {
    if (v26 != 1 && (BYTE1(v24) - 48) <= 9u)
    {
      if (v26 == 2)
      {
        LOBYTE(v24) = 0;
        uint64_t v30 = -(uint64_t)(BYTE1(v24) - 48);
        goto LABEL_56;
      }
      if ((BYTE2(v24) - 48) <= 9u)
      {
        uint64_t v30 = -10 * (BYTE1(v24) - 48) - (BYTE2(v24) - 48);
        uint64_t v40 = v26 - 3;
        if (!v40) {
          goto LABEL_55;
        }
        uint64_t v46 = (unsigned __int8 *)v52;
        while (1)
        {
          unsigned int v47 = *v46 - 48;
          if (v47 > 9) {
            break;
          }
          uint64_t v48 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63) {
            break;
          }
          uint64_t v30 = v48 - v47;
          if (__OFSUB__(v48, v47)) {
            break;
          }
          LOBYTE(v24) = 0;
          ++v46;
          if (!--v40) {
            goto LABEL_56;
          }
        }
      }
    }
LABEL_43:
    uint64_t v30 = 0;
    LOBYTE(v24) = 1;
    goto LABEL_56;
  }
  __break(1u);
LABEL_75:
  __break(1u);
  return result;
}

uint64_t sub_24DBB08F0()
{
  return sub_24DBB0904();
}

uint64_t sub_24DBB0904()
{
  return 0;
}

uint64_t sub_24DBB09A4(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_24DBB0AFC((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_24DBB0AFC((uint64_t)v7, v4, v2);
    MEMORY[0x25332B030](v7, -1, -1);
  }
  return v2;
}

uint64_t sub_24DBB0AFC(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v19 = (unint64_t *)result;
  uint64_t v24 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_5:
    uint64_t v12 = *(void *)(*(void *)(a3 + 48) + 8 * v11);
    sub_24D6D30BC(*(void *)(a3 + 56) + 16 * v11, (uint64_t)v23);
    uint64_t v21 = v12;
    sub_24D6D30BC((uint64_t)v23, (uint64_t)v22);
    sub_24D6D30BC((uint64_t)v22, (uint64_t)v20);
    uint64_t v13 = MEMORY[0x25332B1A0](v20);
    sub_24D415F74((uint64_t)&v21, &qword_269870BB0);
    sub_24D6D30F8((uint64_t)v20);
    if (v13)
    {
      swift_unknownObjectRelease();
      uint64_t result = sub_24D6D30F8((uint64_t)v23);
      *(unint64_t *)((char *)v19 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
        return sub_24DC86868(v19, a2, v24, a3);
      }
    }
    else
    {
      uint64_t result = sub_24D6D30F8((uint64_t)v23);
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v14 >= v9) {
    return sub_24DC86868(v19, a2, v24, a3);
  }
  unint64_t v15 = *(void *)(v5 + 8 * v14);
  ++v4;
  if (v15) {
    goto LABEL_21;
  }
  int64_t v4 = v14 + 1;
  if (v14 + 1 >= v9) {
    return sub_24DC86868(v19, a2, v24, a3);
  }
  unint64_t v15 = *(void *)(v5 + 8 * v4);
  if (v15) {
    goto LABEL_21;
  }
  int64_t v4 = v14 + 2;
  if (v14 + 2 >= v9) {
    return sub_24DC86868(v19, a2, v24, a3);
  }
  unint64_t v15 = *(void *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_21:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_5;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v9) {
    return sub_24DC86868(v19, a2, v24, a3);
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v9) {
      return sub_24DC86868(v19, a2, v24, a3);
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

unsigned __int8 *sub_24DBB0D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_24DCC9A68();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_24DC879D8();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_24DCCA7E8();
  }
LABEL_7:
  unint64_t v11 = sub_24DBB0DF4(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_24DBB0DF4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_24DBB1070()
{
  return 0;
}

uint64_t sub_24DBB112C()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB113C(uint64_t a1)
{
  return sub_24DBA8244(a1, *(unsigned char **)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_24DBB1148()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB1158()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_24DBB1180()
{
  unint64_t result = qword_26B1907C8;
  if (!qword_26B1907C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1907C8);
  }
  return result;
}

uint64_t sub_24DBB11D4()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB11E4(uint64_t a1)
{
  return sub_24DBA8484(a1, *(unsigned char **)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_24DBB11F0()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB1200()
{
  return 0;
}

uint64_t sub_24DBB12BC(void *a1, uint64_t a2)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  uint64_t v4 = *(void *)(a2 + 160);
  swift_retain();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return v4;
}

uint64_t sub_24DBB1374(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  unsigned __int8 v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    v15[1] = v1;
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_24D7C7254(0, v7, 0);
    uint64_t v8 = v16;
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1930A8) - 8);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    do
    {
      swift_getAtKeyPath();
      uint64_t v16 = v8;
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_24D7C7254(v12 > 1, v13 + 1, 1);
        uint64_t v8 = v16;
      }
      *(void *)(v8 + 16) = v13 + 1;
      sub_24D3F0BA0((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v13, &qword_26B18FF40);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_24DBB1550(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v43 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1930B8);
  MEMORY[0x270FA5388](v5 - 8);
  int64_t v7 = (uint64_t *)((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1930A8);
  uint64_t v8 = MEMORY[0x270FA5388](v42);
  uint64_t v38 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v36 = (uint64_t)&v36 - v11;
  uint64_t v37 = v10;
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v40 = a1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v16 = (unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v44 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  unint64_t v39 = MEMORY[0x263F8EE78];
  while (1)
  {
    if (v15)
    {
      unint64_t v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v20 = v19 | (v18 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v18 >= v41) {
      goto LABEL_32;
    }
    unint64_t v22 = *(void *)(v40 + 8 * v18);
    if (!v22) {
      break;
    }
LABEL_18:
    unint64_t v15 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_19:
    uint64_t v24 = *(void *)(v44 + 56) + 24 * v20;
    uint64_t v25 = *(void **)v24;
    unsigned int v26 = *(void **)(v24 + 8);
    char v27 = *(void **)(v24 + 16);
    swift_retain();
    id v28 = v25;
    id v29 = v26;
    sub_24DBADD04(v28, v26, v27, v7);
    if (v3)
    {
      unint64_t v35 = v39;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      return v35;
    }
    swift_release();

    if ((*v16)(v7, 1, v42) == 1)
    {
      uint64_t result = sub_24D415F74((uint64_t)v7, (uint64_t *)&unk_26B1930B8);
    }
    else
    {
      uint64_t v30 = v36;
      sub_24D3F0BA0((uint64_t)v7, v36, (uint64_t *)&unk_26B1930A8);
      sub_24D3F0BA0(v30, v38, (uint64_t *)&unk_26B1930A8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v39 = sub_24DA158C8(0, *(void *)(v39 + 16) + 1, 1, v39);
      }
      unint64_t v32 = *(void *)(v39 + 16);
      unint64_t v31 = *(void *)(v39 + 24);
      if (v32 >= v31 >> 1) {
        unint64_t v39 = sub_24DA158C8(v31 > 1, v32 + 1, 1, v39);
      }
      uint64_t v33 = v38;
      unint64_t v34 = v39;
      *(void *)(v39 + 16) = v32 + 1;
      uint64_t result = sub_24D3F0BA0(v33, v34+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v32, (uint64_t *)&unk_26B1930A8);
    }
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v41) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v40 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 2;
  if (v18 + 2 >= v41) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v40 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 3;
  if (v18 + 3 >= v41) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v40 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 4;
  if (v18 + 4 >= v41)
  {
LABEL_32:
    unint64_t v35 = v39;
    swift_release();
    return v35;
  }
  unint64_t v22 = *(void *)(v40 + 8 * v23);
  if (v22)
  {
LABEL_17:
    int64_t v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v41) {
      goto LABEL_32;
    }
    unint64_t v22 = *(void *)(v40 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_18;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_24DBB1970(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1930A0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  uint64_t v7 = *(void *)(v45 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v45);
  uint64_t v41 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v40 = (uint64_t)&v37 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193630);
  uint64_t v46 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v37 - v15;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v43 = a1 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v44 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v39 = v7;
  uint64_t v21 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v22 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v24 = 0;
  unint64_t v42 = MEMORY[0x263F8EE78];
  while (1)
  {
    if (v20)
    {
      unint64_t v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v26 = v25 | (v24 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v24++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v24 >= v44) {
      goto LABEL_32;
    }
    unint64_t v28 = *(void *)(v43 + 8 * v24);
    if (!v28) {
      break;
    }
LABEL_18:
    unint64_t v20 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v24 << 6);
LABEL_19:
    sub_24D415FD0(*(void *)(v22 + 56) + *(void *)(v46 + 72) * v26, (uint64_t)v16, &qword_26B193630);
    sub_24D3F0BA0((uint64_t)v16, (uint64_t)v14, &qword_26B193630);
    sub_24DBAE18C((uint64_t)v14, v6);
    if (v2)
    {
      sub_24D415F74((uint64_t)v14, &qword_26B193630);
      unint64_t v36 = v42;
      swift_bridgeObjectRelease();
LABEL_33:
      swift_release();
      return v36;
    }
    sub_24D415F74((uint64_t)v14, &qword_26B193630);
    if ((*v21)(v6, 1, v45) == 1)
    {
      uint64_t result = sub_24D415F74((uint64_t)v6, &qword_26B1930A0);
    }
    else
    {
      sub_24D3F0BA0((uint64_t)v6, v40, &qword_26B18FF40);
      sub_24D3F0BA0(v40, v41, &qword_26B18FF40);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v42 = sub_24DA158DC(0, *(void *)(v42 + 16) + 1, 1, v42);
      }
      unint64_t v31 = *(void *)(v42 + 16);
      unint64_t v30 = *(void *)(v42 + 24);
      unint64_t v32 = v31 + 1;
      if (v31 >= v30 >> 1)
      {
        unint64_t v37 = *(void *)(v42 + 16);
        unint64_t v38 = v31 + 1;
        uint64_t v35 = sub_24DA158DC(v30 > 1, v31 + 1, 1, v42);
        unint64_t v31 = v37;
        unint64_t v32 = v38;
        unint64_t v42 = v35;
      }
      uint64_t v33 = v41;
      unint64_t v34 = v42;
      *(void *)(v42 + 16) = v32;
      uint64_t result = sub_24D3F0BA0(v33, v34+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v31, &qword_26B18FF40);
    }
  }
  int64_t v29 = v24 + 1;
  if (v24 + 1 >= v44) {
    goto LABEL_32;
  }
  unint64_t v28 = *(void *)(v43 + 8 * v29);
  if (v28) {
    goto LABEL_17;
  }
  int64_t v29 = v24 + 2;
  if (v24 + 2 >= v44) {
    goto LABEL_32;
  }
  unint64_t v28 = *(void *)(v43 + 8 * v29);
  if (v28) {
    goto LABEL_17;
  }
  int64_t v29 = v24 + 3;
  if (v24 + 3 >= v44) {
    goto LABEL_32;
  }
  unint64_t v28 = *(void *)(v43 + 8 * v29);
  if (v28) {
    goto LABEL_17;
  }
  int64_t v29 = v24 + 4;
  if (v24 + 4 >= v44)
  {
LABEL_32:
    unint64_t v36 = v42;
    goto LABEL_33;
  }
  unint64_t v28 = *(void *)(v43 + 8 * v29);
  if (v28)
  {
LABEL_17:
    int64_t v24 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v24 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v24 >= v44) {
      goto LABEL_32;
    }
    unint64_t v28 = *(void *)(v43 + 8 * v24);
    ++v29;
    if (v28) {
      goto LABEL_18;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

void *sub_24DBB1E14(void *a1, uint64_t a2)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  uint64_t v4 = *(void **)(a2 + qword_26B199590);
  id v5 = v4;
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return v4;
}

uint64_t sub_24DBB1ED0(void *a1)
{
  return sub_24DBB1EE8(a1);
}

uint64_t sub_24DBB1EE8(void *a1)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return 0x202092949FF0;
}

uint64_t sub_24DBB2050()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_24DBB2088()
{
  return sub_24DBAFB2C();
}

unint64_t sub_24DBB20A4()
{
  unint64_t result = qword_269870BA0;
  if (!qword_269870BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870BA0);
  }
  return result;
}

uint64_t sub_24DBB20F8()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_24DBB2130()
{
  unint64_t result = qword_26B195C70[0];
  if (!qword_26B195C70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B195C70);
  }
  return result;
}

uint64_t sub_24DBB2184(void *a1, unsigned __int8 *a2)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  uint64_t v4 = a2[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_invalidated];
  a2[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_invalidated] = 1;
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return v4;
}

uint64_t sub_24DBB223C()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB224C(uint64_t a1)
{
  return sub_24DBA96D8(a1, *(uint64_t **)(v1 + 16), *(void (**)(long long *__return_ptr, uint64_t))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (void (*)(uint64_t, uint64_t))sub_24D70694C);
}

uint64_t sub_24DBB2280()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB2290(void *a1, char *a2)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  uint64_t v4 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_runningEnumerator];
  swift_beginAccess();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_24DBA2608(v5);
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) != *(void *)(*(void *)v4 + 16))
  {
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = sub_24DBB09A4(v7);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v8;
    swift_bridgeObjectRelease();
  }
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return v6;
}

unint64_t sub_24DBB23D0()
{
  unint64_t result = qword_269870BB8;
  if (!qword_269870BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870BB8);
  }
  return result;
}

uint64_t sub_24DBB2424()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB2434(uint64_t a1)
{
  return sub_24DBA8918(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_24DBB2440()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB2450()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB2460(uint64_t a1)
{
  return sub_24DBA86C8(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_24DBB246C()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB247C()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB248C(uint64_t a1)
{
  return sub_24DBA96D8(a1, *(uint64_t **)(v1 + 16), *(void (**)(long long *__return_ptr, uint64_t))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (void (*)(uint64_t, uint64_t))sub_24D4FFE40);
}

uint64_t sub_24DBB24C0()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB24D0()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB24E0(uint64_t a1)
{
  return sub_24DBA992C(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_24DBB24EC()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB2500()
{
  return 32;
}

__n128 sub_24DBB250C(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_24DBB2528()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB2538(uint64_t a1)
{
  return sub_24DBA8FF8(a1, *(void ***)(v1 + 16), *(void (**)(void **__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_24DBB2544()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB2554()
{
  return sub_24DBB1200();
}

uint64_t sub_24DBB255C()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB256C()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB257C()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB258C(uint64_t a1)
{
  return sub_24DBA8DB0(a1, *(_WORD **)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_24DBB2598()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB25A8()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB25B8(uint64_t a1)
{
  return sub_24DBA948C(a1, *(void ***)(v1 + 16), *(void (**)(long long *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_24DBB25C4()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB25D4()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB25E4(uint64_t a1)
{
  return sub_24DBA8B68(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_24DBB25F0()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB2600()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB2610(uint64_t a1)
{
  return sub_24DBA9244(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_24DBB261C()
{
  return swift_deallocObject();
}

uint64_t sub_24DBB262C()
{
  return sub_24DBB021C();
}

uint64_t sub_24DBB26A8()
{
  uint64_t result = type metadata accessor for SnapshotCounters();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24DBB275C()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 96))();
}

uint64_t sub_24DBB27A0()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 104))();
}

uint64_t sub_24DBB27E4@<X0>(void (*a1)(unsigned char *)@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_24DCCB058();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v11[-v8];
  a1(v5);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v7 + 32))(a2, v9, v6);
}

uint64_t sub_24DBB2998()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986C648);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24DCD57D0;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24DCCECD0;
  uint64_t v3 = MEMORY[0x263F8D310];
  *(void *)(v2 + 32) = 0x6F43657461657263;
  *(void *)(v2 + 40) = 0xEB00000000746E75;
  uint64_t v4 = *v0;
  uint64_t v5 = MEMORY[0x263F8E970];
  *(void *)(v2 + 88) = MEMORY[0x263F8E970];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986BE60);
  *(void *)(v1 + 56) = v6;
  *(void *)(v1 + 32) = v2;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24DCCECD0;
  *(void *)(v7 + 32) = 0x6F43657461647075;
  *(void *)(v7 + 40) = 0xEB00000000746E75;
  uint64_t v8 = v0[1];
  *(void *)(v7 + 88) = v5;
  *(void *)(v7 + 56) = v3;
  *(void *)(v7 + 64) = v8;
  *(void *)(v1 + 88) = v6;
  *(void *)(v1 + 64) = v7;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24DCCECD0;
  *(void *)(v9 + 32) = 0x6F436574656C6564;
  *(void *)(v9 + 40) = 0xEB00000000746E75;
  uint64_t v10 = v0[2];
  *(void *)(v9 + 88) = v5;
  *(void *)(v9 + 56) = v3;
  *(void *)(v9 + 64) = v10;
  *(void *)(v1 + 120) = v6;
  *(void *)(v1 + 96) = v9;
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24DCCECD0;
  *(void *)(v11 + 56) = v3;
  *(void *)(v11 + 32) = 0x7461447465736572;
  *(void *)(v11 + 40) = 0xE900000000000065;
  uint64_t v12 = (char *)v0 + *(int *)(type metadata accessor for SnapshotCounters() + 28);
  uint64_t v13 = sub_24DCC8CE8();
  *(void *)(v11 + 88) = v13;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v11 + 64));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(boxed_opaque_existential_0, v12, v13);
  *(void *)(v1 + 152) = v6;
  *(void *)(v1 + 128) = v11;
  return v1;
}

uint64_t sub_24DBB2B9C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  uint64_t v5 = *(void *)(*(void *)v1 + 88);
  uint64_t v6 = *(void *)v1;
  uint64_t v7 = *(ValueMetadata **)(*(void *)v1 + 96);
  uint64_t v8 = *(void *)(v6 + 104);
  uint64_t v119 = v4;
  uint64_t v120 = v5;
  uint64_t v96 = v5;
  uint64_t v121 = v7;
  uint64_t v122 = v8;
  uint64_t v95 = v8;
  uint64_t v99 = type metadata accessor for PersistenceTrigger();
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  unint64_t v97 = (char *)v89 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v114 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v115 = AssociatedTypeWitness;
  uint64_t v11 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  char v113 = (char *)v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unint64_t v102 = (char *)v89 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  char v101 = (char *)v89 - v16;
  MEMORY[0x270FA5388](v15);
  char v103 = (char *)v89 - v17;
  uint64_t v18 = type metadata accessor for SnapshotItem();
  uint64_t v104 = *(void *)(v18 - 8);
  uint64_t v105 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v106 = (char *)v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v100 = (char *)v89 - v21;
  uint64_t v94 = v4;
  uint64_t v93 = v7;
  uint64_t v22 = type metadata accessor for SnapshotMutation();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  int v112 = (char *)v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v107 = (char *)v89 - v27;
  MEMORY[0x270FA5388](v26);
  int64_t v29 = (char *)v89 - v28;
  uint64_t v30 = sub_24DCC9078();
  uint64_t v109 = *(void *)(v30 - 8);
  uint64_t v110 = v30;
  MEMORY[0x270FA5388](v30);
  unint64_t v32 = (char *)v89 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v33 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  os_log_type_t v34 = sub_24D9BE1D0(v22);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  uint64_t v111 = a1;
  uint64_t v116 = v23 + 16;
  v35(v29, a1, v22);
  uint64_t v117 = v2;
  swift_retain();
  uint64_t v108 = v32;
  unint64_t v36 = sub_24DCC9068();
  int v37 = v34;
  if (os_log_type_enabled(v36, v34))
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v92 = swift_slowAlloc();
    uint64_t v119 = v92;
    *(_DWORD *)uint64_t v38 = 136446466;
    int v91 = v37;
    if (v117[32]) {
      uint64_t v39 = 20550;
    }
    else {
      uint64_t v39 = 21318;
    }
    os_log_t v90 = v36;
    uint64_t v123 = sub_24D418FB4(v39, 0xE200000000000000, &v119);
    v89[1] = &v124;
    sub_24DCCA428();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2082;
    v89[0] = v38 + 14;
    uint64_t v40 = v107;
    v35(v107, (uint64_t)v29, v22);
    uint64_t v41 = v35;
    unint64_t v42 = *(void (**)(char *, uint64_t))(v23 + 8);
    v42(v29, v22);
    uint64_t v43 = sub_24D9BD87C(v22);
    unint64_t v45 = v44;
    v42(v40, v22);
    uint64_t v123 = sub_24D418FB4(v43, v45, &v119);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    os_log_t v46 = v90;
    _os_log_impl(&dword_24D3D0000, v90, (os_log_type_t)v91, " ✍️  %{public}s snapshot mutation: %{public}s", (uint8_t *)v38, 0x16u);
    uint64_t v47 = v92;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v47, -1, -1);
    MEMORY[0x25332B030](v38, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v22);

    swift_release();
    uint64_t v41 = v35;
  }
  (*(void (**)(char *, uint64_t))(v109 + 8))(v108, v110);
  uint64_t v48 = v112;
  v41(v112, v111, v22);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v50 = v113;
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v89[-4], "from to  reason ");
      uint64_t v57 = v105;
      uint64_t v119 = v105;
      uint64_t v120 = v105;
      uint64_t v121 = &type metadata for Fields;
      uint64_t v122 = MEMORY[0x263F8D310];
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      uint64_t v59 = &v48[*(int *)(TupleTypeMetadata + 48)];
      uint64_t v60 = *(void *)&v48[*(int *)(TupleTypeMetadata + 64)];
      swift_bridgeObjectRelease();
      uint64_t v61 = v104;
      (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v106, v59, v57);
      uint64_t v62 = &v117[qword_26B1A24E0];
      swift_beginAccess();
      uint64_t v63 = *((void *)v62 + 1);
      BOOL v64 = __CFADD__(v63, 1);
      uint64_t v65 = v63 + 1;
      if (v64) {
        goto LABEL_22;
      }
      *((void *)v62 + 1) = v65;
      uint64_t v66 = v118;
      (*(void (**)(char *, uint64_t))(*(void *)v117 + 488))(v106, v60);
      uint64_t v118 = v66;
      char v67 = *(void (**)(char *, uint64_t))(v61 + 8);
      v67(v106, v57);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v67)(v48, v57);
      break;
    case 2:
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DF0);
      uint64_t v68 = v115;
      swift_getTupleTypeMetadata3();
      swift_bridgeObjectRelease();
      char v69 = v103;
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v103, v48, v68);
      unint64_t v70 = &v117[qword_26B1A24E0];
      swift_beginAccess();
      uint64_t v71 = *((void *)v70 + 2);
      BOOL v64 = __CFADD__(v71, 1);
      uint64_t v72 = v71 + 1;
      if (v64) {
        goto LABEL_23;
      }
      *((void *)v70 + 2) = v72;
      uint64_t v73 = v118;
      (*(void (**)(char *))(*(void *)v117 + 496))(v69);
LABEL_16:
      uint64_t v118 = v73;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v69, v115);
      break;
    case 3:
      uint64_t v74 = v115;
      swift_getTupleTypeMetadata2();
      swift_bridgeObjectRelease();
      uint64_t v75 = v101;
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v101, v48, v74);
      uint64_t v76 = v118;
      (*(void (**)(char *))(*(void *)v117 + 504))(v75);
      uint64_t v118 = v76;
      return (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v75, v115);
    case 4:
      uint64_t v77 = v115;
      uint64_t v78 = v48[*(int *)(swift_getTupleTypeMetadata3() + 48)];
      swift_bridgeObjectRelease();
      char v69 = v102;
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v102, v48, v77);
      uint64_t v73 = v118;
      (*(void (**)(char *, uint64_t))(*(void *)v117 + 512))(v69, v78);
      goto LABEL_16;
    case 5:
      uint64_t v79 = v115;
      swift_getTupleTypeMetadata2();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v50, v48, v79);
      uint64_t Strong = swift_weakLoadStrong();
      if (!Strong) {
        goto LABEL_24;
      }
      uint64_t v81 = Strong;
      uint64_t v82 = v114;
      uint64_t v83 = v115;
      uint64_t v84 = v97;
      (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v97, v50, v115);
      uint64_t v85 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v87 = swift_getAssociatedConformanceWitness();
      uint64_t v119 = v83;
      uint64_t v120 = v85;
      uint64_t v121 = (ValueMetadata *)AssociatedConformanceWitness;
      uint64_t v122 = v87;
      type metadata accessor for ReconciliationID();
      swift_storeEnumTagMultiPayload();
      uint64_t v88 = v99;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *))(*(void *)v81 + 312))(v84);
      swift_release();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v84, v88);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v113, v83);
      break;
    default:
      uint64_t v51 = v105;
      swift_getTupleTypeMetadata2();
      swift_bridgeObjectRelease();
      uint64_t v52 = v104;
      uint64_t v53 = v100;
      (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v100, v48, v51);
      long long v54 = &v117[qword_26B1A24E0];
      swift_beginAccess();
      if (*v54 == -1)
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        JUMPOUT(0x24DBB3928);
      }
      ++*v54;
      uint64_t v55 = v118;
      (*(void (**)(char *))(*(void *)v117 + 480))(v53);
      uint64_t v118 = v55;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v53, v51);
      break;
  }
  return result;
}

void sub_24DBB3940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 80);
  uint64_t v30 = *(void *)(*(void *)v3 + 96);
  uint64_t v32 = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = sub_24DCC8CE8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v37 = v3;
  sub_24DCC8CD8();
  uint64_t v15 = v44;
  uint64_t v16 = sub_24DB93544((uint64_t)v14, sub_24DBB8A64, (uint64_t)v33);
  uint64_t v44 = v15;
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    uint64_t v18 = v16;
    uint64_t v28 = a3;
    int64_t v29 = v10;
    uint64_t v19 = AssociatedTypeWitness;
    uint64_t v20 = v17;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    if (v20)
    {
      uint64_t v42 = v18;
      uint64_t v43 = v20;
      uint64_t v40 = 58;
      unint64_t v41 = 0xE100000000000000;
      uint64_t v38 = 47;
      unint64_t v39 = 0xE100000000000000;
      sub_24D3F0EB8();
      sub_24DCCA478();
      swift_bridgeObjectRelease();
    }
    else
    {
      type metadata accessor for FileTreeError();
      swift_getWitnessTable();
      uint64_t v21 = (void *)swift_allocError();
      uint64_t v23 = v22;
      *(void *)uint64_t v22 = a1;
      *((void *)v22 + 1) = a2;
      uint64_t v42 = v28;
      sub_24DCC9D48();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      uint64_t v24 = v29;
      sub_24DCC9FD8();
      uint64_t v25 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v24, 1, v19) == 1)
      {

        __break(1u);
      }
      else
      {
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v23[*(int *)(TupleTypeMetadata2 + 48)], v24, v19);
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
      }
    }
  }
}

uint64_t sub_24DBB3D08()
{
  swift_release();
  swift_weakDestroy();
  sub_24DBB8964(v0 + qword_26B1A24E0);
  return v0;
}

uint64_t sub_24DBB3D40(uint64_t a1)
{
  type metadata accessor for SnapshotItem();
  uint64_t v3 = 0;
  uint64_t v8 = sub_24DCC9C98();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 472);
  do
  {
    v4(a1, v3);
    uint64_t v6 = v5;
    sub_24DCC9D48();
    swift_getWitnessTable();
    sub_24DCC9CF8();
    swift_release();
    uint64_t v3 = v6;
  }
  while (v6);
  return v8;
}

uint64_t sub_24DBB3EB4()
{
  return 0x3A736C643CLL;
}

uint64_t sub_24DBB3FEC()
{
  return 0x3A6C6564213CLL;
}

uint64_t sub_24DBB40E8(void *a1, int a2)
{
  uint64_t v3 = v2;
  int v15 = a2;
  uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v2 + 632))();
  uint64_t v14 = 0;
  uint64_t v7 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  uint64_t v17 = 0x687370616E73202BLL;
  unint64_t v18 = 0xEB0000000020746FLL;
  sub_24DCC9878();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v16 = v5;
  sub_24D4E3A40();
  sub_24DCCA518();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D90FFEC(0x687370616E73202BLL, 0xEB0000000020746FLL, v7, v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(a1, v8);
  MEMORY[0x270FA5388](v10);
  v12[16] = v15 & 1;
  uint64_t v13 = v3;
  return sub_24D9100BC(8224, 0xE200000000000000, (void (*)(void *))sub_24DBB8A24, (uint64_t)v12, v8, MEMORY[0x263F8EE60] + 8, v9);
}

uint64_t sub_24DBB4338()
{
  return sub_24DBB3EB4();
}

uint64_t sub_24DBB4344()
{
  return sub_24DBB3FEC();
}

uint64_t sub_24DBB434C()
{
  return 0;
}

uint64_t sub_24DBB44F8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269870BD0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DBB8910();
  sub_24DCCB0D8();
  v8[15] = 0;
  sub_24DCCAD48();
  if (!v1)
  {
    v8[14] = 1;
    sub_24DCCAD48();
    v8[13] = 2;
    sub_24DCCAD48();
    type metadata accessor for SnapshotCounters();
    v8[12] = 3;
    sub_24DCC8CE8();
    sub_24D502BCC(&qword_26986BC68);
    sub_24DCCACF8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24DBB46EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v23 = sub_24DCC8CE8();
  uint64_t v21 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269870BC0);
  uint64_t v22 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SnapshotCounters();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v11 = 0;
  v11[1] = 0;
  v11[2] = 0;
  uint64_t v12 = (char *)v11 + *(int *)(v9 + 36);
  sub_24DCC8CB8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DBB8910();
  sub_24DCCB0B8();
  if (!v2)
  {
    uint64_t v20 = v12;
    uint64_t v14 = v22;
    uint64_t v13 = v23;
    uint64_t v15 = v24;
    char v29 = 0;
    *uint64_t v11 = sub_24DCCABE8();
    char v28 = 1;
    v11[1] = sub_24DCCABE8();
    char v27 = 2;
    v11[2] = sub_24DCCABE8();
    char v26 = 3;
    sub_24D502BCC(&qword_26986BCA0);
    uint64_t v19 = v5;
    uint64_t v17 = v25;
    sub_24DCCAB98();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v17);
    (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v20, v19, v13);
    sub_24DBB89C0((uint64_t)v11, v15);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24DBB8964((uint64_t)v11);
}

uint64_t sub_24DBB4A18()
{
  uint64_t result = 0x6F43657461657263;
  switch(*v0)
  {
    case 1:
      unsigned int v2 = 1633972341;
      goto LABEL_4;
    case 2:
      unsigned int v2 = 1701602660;
LABEL_4:
      uint64_t result = v2 | 0x6F43657400000000;
      break;
    case 3:
      uint64_t result = 0x7461447465736572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24DBB4AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24DBB8530(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24DBB4ACC(uint64_t a1)
{
  unint64_t v2 = sub_24DBB8910();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24DBB4B08(uint64_t a1)
{
  unint64_t v2 = sub_24DBB8910();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24DBB4B44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24DBB46EC(a1, a2);
}

uint64_t sub_24DBB4B5C(void *a1)
{
  return sub_24DBB44F8(a1);
}

void sub_24DBB4B78()
{
}

void sub_24DBB4BDC()
{
}

void sub_24DBB4C40()
{
}

void sub_24DBB4CA4()
{
}

void sub_24DBB4D08()
{
}

uint64_t sub_24DBB4D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for SnapshotItem();
  uint64_t v6 = sub_24DCCA3F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = v21;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 240))(a1, 1);
  if (!v10)
  {
    uint64_t v12 = v6;
    uint64_t v13 = *(void *)(v5 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8)
                                                                           + 56))(v20, 1, 1, AssociatedTypeWitness);
    }
    else
    {
      uint64_t v15 = &v9[*(int *)(v5 + 36)];
      uint64_t v16 = swift_getAssociatedTypeWitness();
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v18 = v20;
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v20, v15, v16);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v5);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v18, 0, 1, v16);
    }
  }
  return result;
}

uint64_t sub_24DBB505C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for SnapshotItem();
  uint64_t v6 = sub_24DCCA3F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - v8;
  (*(void (**)(uint64_t, uint64_t))(v4 + 240))(a1, 1);
  if (!v2)
  {
    LOBYTE(v5) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v9, 1, v5) != 1;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v5 & 1;
}

void sub_24DBB51FC()
{
}

void sub_24DBB5260()
{
}

void sub_24DBB52C4()
{
}

void sub_24DBB5328()
{
}

void sub_24DBB538C()
{
}

void sub_24DBB53F0()
{
}

void sub_24DBB5454()
{
}

void sub_24DBB54B8()
{
}

void sub_24DBB551C()
{
}

void sub_24DBB5580()
{
}

void sub_24DBB55E4()
{
}

void sub_24DBB5648()
{
}

void sub_24DBB56AC()
{
}

void sub_24DBB5710()
{
}

void sub_24DBB5774()
{
}

void sub_24DBB57D8()
{
}

void sub_24DBB583C()
{
}

void sub_24DBB58A0()
{
}

void sub_24DBB5904()
{
}

void sub_24DBB5968()
{
}

void sub_24DBB59CC()
{
}

void sub_24DBB5A30()
{
}

void sub_24DBB5A94()
{
}

void sub_24DBB5AF8()
{
}

void sub_24DBB5B5C()
{
}

void sub_24DBB5BC0()
{
}

void sub_24DBB5C24()
{
}

void sub_24DBB5C88()
{
}

void sub_24DBB5CEC()
{
}

void sub_24DBB5D50()
{
}

void sub_24DBB5DB4()
{
}

void sub_24DBB5E18()
{
}

void sub_24DBB5E7C()
{
}

void sub_24DBB5EE0()
{
}

void sub_24DBB5F44()
{
}

void sub_24DBB5FA8()
{
}

void sub_24DBB600C()
{
}

void sub_24DBB6070()
{
}

void sub_24DBB60D4()
{
}

void sub_24DBB6138()
{
}

uint64_t sub_24DBB619C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v5 = *v2;
  uint64_t v30 = type metadata accessor for SnapshotItem();
  uint64_t v6 = sub_24DCCA3F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 240))(a1, 1);
  if (!v3)
  {
    uint64_t v11 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v11 + 48))(v9, 1) == 1)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v13 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v15 = swift_getAssociatedConformanceWitness();
      uint64_t v26 = AssociatedTypeWitness;
      uint64_t v27 = v13;
      uint64_t v28 = AssociatedConformanceWitness;
      uint64_t v29 = v15;
      uint64_t v16 = type metadata accessor for FileItemVersion();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v25, 1, 1, v16);
    }
    else
    {
      uint64_t v24 = &v9[*(int *)(v30 + 40)];
      uint64_t v17 = swift_getAssociatedTypeWitness();
      uint64_t v18 = swift_getAssociatedTypeWitness();
      uint64_t v19 = swift_getAssociatedConformanceWitness();
      uint64_t v20 = swift_getAssociatedConformanceWitness();
      uint64_t v26 = v17;
      uint64_t v27 = v18;
      uint64_t v28 = v19;
      uint64_t v29 = v20;
      uint64_t v21 = type metadata accessor for FileItemVersion();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v23 = v25;
      (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v25, v24, v21);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v30);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v23, 0, 1, v21);
    }
  }
  return result;
}

uint64_t sub_24DBB6588(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for SnapshotItem();
  uint64_t v6 = sub_24DCCA3F8();
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v17 - v11;
  (*(void (**)(uint64_t, uint64_t))(v4 + 240))(a1, 1);
  if (!v2)
  {
    uint64_t v13 = v18;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v5);
      uint64_t v14 = &v12[*(int *)(v5 + 48)];
      uint64_t v6 = *(void *)&v14[*(int *)(type metadata accessor for ItemMetadata() + 100)];
      uint64_t WitnessTable = swift_getWitnessTable();
      sub_24D98BCC4(v5, WitnessTable);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v5);
    }
  }
  return v6;
}

void sub_24DBB6818()
{
}

void sub_24DBB6880()
{
}

void sub_24DBB68E4()
{
}

void sub_24DBB6948()
{
}

uint64_t sub_24DBB69AC()
{
  sub_24DBB3D08();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Snapshot()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for SnapshotCounters()
{
  uint64_t result = qword_26B1973F0;
  if (!qword_26B1973F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_24DBB6A68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v5 = *(int *)(a3 + 28);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_24DCC8CE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_24DBB6B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  uint64_t v3 = sub_24DCC8CE8();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t sub_24DBB6BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24DCC8CE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_24DBB6C28(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24DCC8CE8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_24DBB6CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24DCC8CE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_24DBB6D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24DCC8CE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_24DBB6DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24DBB6DD0);
}

uint64_t sub_24DBB6DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 28);
  uint64_t v5 = sub_24DCC8CE8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_24DBB6E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24DBB6E54);
}

uint64_t sub_24DBB6E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 28);
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_24DBB6EC8()
{
  uint64_t result = sub_24DCC8CE8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SnapshotFPRecursiveProperties()
{
  return &type metadata for SnapshotFPRecursiveProperties;
}

ValueMetadata *type metadata accessor for SnapshotFSRecursiveProperties()
{
  return &type metadata for SnapshotFSRecursiveProperties;
}

uint64_t sub_24DBB6F88()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DBB6FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v51 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v50 = sub_24DCCA3F8();
  uint64_t v12 = *(void *)(v50 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v50);
  uint64_t v52 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v20 = (char *)&v40 - v19;
  uint64_t v53 = a1;
  if (a1 == a3 && a2 == a4 || (uint64_t v40 = v18, v49 = v17, (sub_24DCCAE28() & 1) != 0))
  {
LABEL_4:
    char v21 = 0;
    return v21 & 1;
  }
  uint64_t v23 = swift_bridgeObjectRetain();
  if (!MEMORY[0x253327DC0](v23, AssociatedTypeWitness))
  {
LABEL_18:
    swift_bridgeObjectRelease();
    char v21 = 1;
    return v21 & 1;
  }
  uint64_t v24 = 0;
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)v51 + 256);
  uint64_t v43 = *(void *)v51 + 256;
  uint64_t v44 = v25;
  uint64_t v47 = a5;
  uint64_t v48 = (void (**)(char *, void *, uint64_t))(v52 + 16);
  unint64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56);
  uint64_t v42 = (void (**)(char *, char *, uint64_t))(v52 + 32);
  unint64_t v45 = (void (**)(uint64_t, uint64_t))(v12 + 8);
  os_log_t v46 = (void (**)(char *, uint64_t))(v52 + 8);
  while (1)
  {
    char v26 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v26)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v52 + 16))(v20, a5+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v24, AssociatedTypeWitness);
      uint64_t v27 = v24 + 1;
      if (__OFADD__(v24, 1)) {
        goto LABEL_17;
      }
      goto LABEL_10;
    }
    uint64_t result = sub_24DCCA778();
    if (v40 != 8) {
      break;
    }
    v59[0] = result;
    (*v48)(v20, v59, AssociatedTypeWitness);
    swift_unknownObjectRelease();
    uint64_t v27 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_10:
    uint64_t v54 = v27;
    uint64_t v28 = v20;
    (*v42)(v16, v20, AssociatedTypeWitness);
    v59[0] = v53;
    v59[1] = a2;
    uint64_t v29 = a2;
    uint64_t v57 = 58;
    unint64_t v58 = 0xE100000000000000;
    uint64_t v55 = 47;
    unint64_t v56 = 0xE100000000000000;
    sub_24D3F0EB8();
    uint64_t v30 = sub_24DCCA478();
    uint64_t v32 = v31;
    id v33 = v16;
    uint64_t v34 = v49;
    (*v41)(v49, 1, 1, AssociatedTypeWitness);
    uint64_t v35 = v60;
    uint64_t v36 = v44(v33, v30, v32, v34);
    if (v35)
    {
      swift_bridgeObjectRelease();
      (*v45)(v34, v50);
      (*v46)(v33, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      return v21 & 1;
    }
    uint64_t v37 = v36;
    uint64_t v60 = 0;
    (*v45)(v34, v50);
    swift_bridgeObjectRelease();
    v59[0] = v37;
    sub_24DCC9D48();
    swift_getWitnessTable();
    uint64_t v38 = sub_24DCC9FE8();
    swift_bridgeObjectRelease();
    (*v46)(v33, AssociatedTypeWitness);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    uint64_t v16 = v33;
    a5 = v47;
    uint64_t v39 = MEMORY[0x253327DC0](v47, AssociatedTypeWitness);
    ++v24;
    a2 = v29;
    uint64_t v20 = v28;
    if (v54 == v39) {
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24DBB74E4()
{
  return sub_24DBB275C();
}

uint64_t sub_24DBB7508()
{
  return sub_24DBB27A0();
}

uint64_t sub_24DBB752C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned char *))
{
  return sub_24DBB8730(a1, a5);
}

uint64_t sub_24DBB7558(uint64_t a1)
{
  return sub_24DBB3D40(a1);
}

uint64_t sub_24DBB757C(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for SnapshotItem();
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v42 - v13;
  if (a3 < 61)
  {
    if (*a4 <= 0)
    {
      uint64_t v20 = a2[3];
      uint64_t v21 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v20);
      sub_24D90FFEC(0xD00000000000001BLL, 0x800000024DD09470, v20, v21);
      return 0;
    }
    uint64_t v46 = *a4;
    uint64_t v47 = a4;
    uint64_t v44 = a3;
    uint64_t v45 = v11;
    uint64_t v48 = v12;
    (*(void (**)(char *, uint64_t))(v12 + 16))(v14, a1);
    swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
    uint64_t v19 = swift_checkMetadataState();
    if ((v18(v19, AssociatedConformanceWitness) & 1) != 0
      || ((*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v19, AssociatedConformanceWitness) & 1) != 0)
    {
      (*(void (**)(void *__return_ptr, char *))(*v4 + 264))(v52, v14);
      sub_24D5013B0((uint64_t)v52, (uint64_t)v49);
      sub_24D5013B0((uint64_t)v49, (uint64_t)&v50);
      uint64_t v23 = v45;
      uint64_t v24 = (uint64_t)&v14[*(int *)(v45 + 52)];
      sub_24D5013B0(v24, (uint64_t)v49);
      sub_24D472A7C((uint64_t)v49);
      sub_24D5013B0((uint64_t)&v50, v24);
      uint64_t v25 = *v5;
      if (v5[4])
      {
        uint64_t v26 = (*(uint64_t (**)(char *))(v25 + 320))(v14);
        uint64_t v43 = 0;
        uint64_t v29 = &v14[*(int *)(v23 + 60)];
        *(void *)uint64_t v29 = v26;
        *((void *)v29 + 1) = v30;
        v29[16] = v28 & 1;
      }
      else
      {
        uint64_t v27 = (*(uint64_t (**)(char *))(v25 + 312))(v14);
        uint64_t v43 = 0;
        uint64_t v32 = &v14[*(int *)(v23 + 56)];
        *(void *)uint64_t v32 = v27;
        *((void *)v32 + 1) = v33;
        *((void *)v32 + 2) = v34;
        v32[24] = v31 & 1;
      }
    }
    else
    {
      uint64_t v43 = 0;
      uint64_t v23 = v45;
    }
    uint64_t v36 = a2[3];
    uint64_t v35 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v36);
    uint64_t v50 = 0;
    uint64_t v51 = 0xE000000000000000;
    swift_getWitnessTable();
    sub_24DCCADC8();
    sub_24D90FFEC(v50, v51, v36, v35);
    swift_bridgeObjectRelease();
    uint64_t v37 = v47;
    *uint64_t v47 = v46 - 1;
    uint64_t WitnessTable = swift_getWitnessTable();
    if (sub_24D98BCC4(v23, WitnessTable) == 1)
    {
      uint64_t v39 = a2[3];
      uint64_t v40 = a2[4];
      unint64_t v41 = __swift_project_boxed_opaque_existential_1(a2, v39);
      MEMORY[0x270FA5388](v41);
      *(&v42 - 4) = (uint64_t)v5;
      *(&v42 - 3) = (uint64_t)v14;
      *(&v42 - 2) = v44;
      *(&v42 - 1) = (uint64_t)v37;
      sub_24D9100BC(32, 0xE100000000000000, (void (*)(void *))sub_24DBB8A44, (uint64_t)(&v42 - 6), v39, MEMORY[0x263F8EE60] + 8, v40);
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v23);
  }
  else
  {
    uint64_t v15 = a2[3];
    uint64_t v16 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v15);
    sub_24D90FFEC(0xD000000000000018, 0x800000024DD09450, v15, v16);
  }
  return 1;
}

void sub_24DBB7AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v35 = a1;
  uint64_t v36 = a5;
  uint64_t v33 = a4;
  uint64_t v7 = type metadata accessor for SnapshotItem();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v37 = (char *)&v29 - v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v16 = (char *)&v29 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v29 - v15, a3, AssociatedTypeWitness);
  uint64_t v17 = (*(uint64_t (**)(char *))(*(void *)a2 + 688))(v16);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, AssociatedTypeWitness);
  if (MEMORY[0x253327DC0](v17, v7))
  {
    uint64_t v18 = 0;
    uint64_t v32 = (uint64_t (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v30 = v33 + 1;
    BOOL v19 = __OFADD__(v33, 1);
    BOOL v31 = v19;
    uint64_t v33 = v8;
    uint64_t v34 = (void (**)(char *, uint64_t *, uint64_t))(v8 + 16);
    uint64_t v20 = (void (**)(char *, uint64_t))(v8 + 8);
    while (1)
    {
      uint64_t v21 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v21)
      {
        uint64_t v22 = v37;
        (*(void (**)(char *, unint64_t, uint64_t))(v33 + 16))(v37, v17+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v18, v7);
        uint64_t v23 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v28 = sub_24DCCA778();
        uint64_t v22 = v37;
        if (v29 != 8) {
          goto LABEL_19;
        }
        uint64_t v21 = v28;
        uint64_t v39 = v28;
        (*v34)(v37, &v39, v7);
        swift_unknownObjectRelease();
        uint64_t v23 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
      }
      uint64_t v24 = (*v32)(v11, v22, v7);
      uint64_t v25 = MEMORY[0x253329610](v24);
      if (v31) {
        break;
      }
      uint64_t v21 = v25;
      char v26 = sub_24DBB757C(v11, v35, v30, v36);
      if (v38) {
        goto LABEL_20;
      }
      char v27 = v26;
      (*v20)(v11, v7);
      if (v27)
      {
        ++v18;
        if (v23 != MEMORY[0x253327DC0](v17, v7)) {
          continue;
        }
      }
      goto LABEL_17;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_24DBB7EA8(void *a1, char a2, void **a3)
{
  uint64_t v54 = a1;
  uint64_t v6 = type metadata accessor for SnapshotCounters();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v50 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v55 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v49 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v45 - v11;
  uint64_t v13 = type metadata accessor for SnapshotItem();
  uint64_t v14 = sub_24DCCA3F8();
  uint64_t v56 = *(void *)(v14 - 8);
  uint64_t v57 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v53 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  BOOL v19 = (char *)&v45 - v18;
  uint64_t v20 = *(void *)(v13 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v17);
  uint64_t v46 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v45 - v24;
  uint64_t v26 = 3000;
  if ((a2 & 1) == 0) {
    uint64_t v26 = 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t v59 = v26;
  (*(void (**)(uint64_t))(*a3[2] + 96))(v23);
  char v27 = (void (*)(char *, uint64_t))(*a3)[30];
  uint64_t v51 = (uint64_t)(*a3 + 30);
  uint64_t v52 = v27;
  v27(v12, 1);
  uint64_t v47 = AssociatedTypeWitness;
  uint64_t v48 = v13;
  if (v3)
  {

    uint64_t v28 = v12;
    uint64_t v29 = *(void (**)(char *, uint64_t))(v55 + 8);
    v29(v28, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v19, 1, 1, v13);
    uint64_t v30 = v57;
    BOOL v31 = v49;
LABEL_7:
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v19, v30);
    goto LABEL_9;
  }
  uint64_t v45 = *(void (**)(char *, uint64_t))(v55 + 8);
  v45(v12, AssociatedTypeWitness);
  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v13);
  uint64_t v33 = v13;
  uint64_t v30 = v57;
  BOOL v31 = v49;
  if (v32 == 1)
  {
    uint64_t v29 = v45;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v19, v33);
  sub_24DBB757C((uint64_t)v25, v54, 1, &v59);
  uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v25, v33);
  uint64_t v29 = v45;
LABEL_9:
  (*(void (**)(uint64_t))(*a3[2] + 104))(v34);
  uint64_t v35 = v53;
  v52(v31, 1);
  v29(v31, v47);
  uint64_t v36 = v48;
  int v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v35, 1, v48);
  uint64_t v38 = (uint64_t)v50;
  uint64_t v39 = v54;
  if (v37 == 1)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v57);
  }
  else
  {
    uint64_t v40 = (uint64_t)v46;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v46, v35, v36);
    sub_24DBB757C(v40, v39, 1, &v59);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v40, v36);
  }
  uint64_t v41 = v39[3];
  uint64_t v42 = v39[4];
  __swift_project_boxed_opaque_existential_1(v39, v41);
  strcpy((char *)v58, "+ counters: ");
  BYTE5(v58[1]) = 0;
  HIWORD(v58[1]) = -5120;
  uint64_t v43 = (uint64_t)a3 + qword_26B1A24E0;
  swift_beginAccess();
  sub_24DBB89C0(v43, v38);
  sub_24DBB434C();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DBB8964(v38);
  sub_24D90FFEC(v58[0], v58[1], v41, v42);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24DBB8530(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F43657461657263 && a2 == 0xEB00000000746E75;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F43657461647075 && a2 == 0xEB00000000746E75 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F436574656C6564 && a2 == 0xEB00000000746E75 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461447465736572 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24DBB8730(uint64_t a1, void (*a2)(unsigned char *))
{
  type metadata accessor for SnapshotItem();
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v5 = sub_24DCCB058();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-v7];
  uint64_t v11 = v2;
  uint64_t v12 = a1;
  sub_24DBB27E4((void (*)(unsigned char *))sub_24DBB88B4, (uint64_t)&v10[-v7]);
  a2(v8);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24DBB88B4(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void, uint64_t))(**(void **)(v1 + 16) + 240))(*(void *)(v1 + 24), 1);
  if (v2) {
    *a1 = v2;
  }
  return result;
}

unint64_t sub_24DBB8910()
{
  unint64_t result = qword_269870BC8;
  if (!qword_269870BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870BC8);
  }
  return result;
}

uint64_t sub_24DBB8964(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SnapshotCounters();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24DBB89C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SnapshotCounters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24DBB8A24(void *a1)
{
  return sub_24DBB7EA8(a1, *(unsigned char *)(v1 + 16), *(void ***)(v1 + 24));
}

void sub_24DBB8A44(uint64_t a1)
{
  sub_24DBB7AC8(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_24DBB8A64(uint64_t a1, uint64_t a2)
{
  return sub_24DBB6FA4(a1, a2, v2[2], v2[3], v2[4], v2[5]) & 1;
}

unsigned char *storeEnumTagSinglePayload for SnapshotCounters.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24DBB8B54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SnapshotCounters.CodingKeys()
{
  return &type metadata for SnapshotCounters.CodingKeys;
}

unint64_t sub_24DBB8B90()
{
  unint64_t result = qword_269870BD8;
  if (!qword_269870BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870BD8);
  }
  return result;
}

unint64_t sub_24DBB8BE8()
{
  unint64_t result = qword_269870BE0;
  if (!qword_269870BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870BE0);
  }
  return result;
}

unint64_t sub_24DBB8C40()
{
  unint64_t result = qword_269870BE8;
  if (!qword_269870BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870BE8);
  }
  return result;
}

uint64_t sub_24DBB8C94()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24DBB8CE0(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(unsigned char *)(v3 + 32) = a3;
  return v3;
}

void sub_24DBB8CF0()
{
}

uint64_t sub_24DBB8D54()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Schedulable()
{
  return swift_getGenericMetadata();
}

BOOL sub_24DBB8D7C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a2 + 16);
  if (v3 < v2) {
    return 1;
  }
  return v2 == v3 && *(void *)(a1 + 24) < *(void *)(a2 + 24);
}

BOOL sub_24DBB8DAC(uint64_t *a1, uint64_t *a2)
{
  return sub_24DBB8D7C(*a1, *a2);
}

uint64_t sub_24DBB8DDC()
{
  return sub_24D42D714();
}

uint64_t sub_24DBB8DE4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DBB8E00(char a1, void *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      id v10 = objc_msgSend(a2, sel_bindBooleanParameter_, v2[*(int *)(type metadata accessor for ItemMetadata() + 80)]);
      goto LABEL_34;
    case 2:
      uint64_t v21 = *(int *)(type metadata accessor for ItemMetadata() + 100);
      return sub_24D5F1254(*(void *)&v2[v21], 0);
    case 3:
      id v10 = objc_msgSend(a2, sel_bindBooleanParameter_, v2[*(int *)(type metadata accessor for ItemMetadata() + 36)]);
      goto LABEL_34;
    case 4:
      id v10 = objc_msgSend(a2, sel_bindUnsignedShortParameter_, *((unsigned __int16 *)v2 + 5));
      goto LABEL_34;
    case 5:
      uint64_t v23 = *(int *)(type metadata accessor for ItemMetadata() + 28);
      goto LABEL_29;
    case 6:
      uint64_t v23 = *(int *)(type metadata accessor for ItemMetadata() + 32);
LABEL_29:
      uint64_t v28 = &v2[v23];
      uint64_t v29 = sub_24DCC8CE8();
      uint64_t v30 = *(void *)(v29 - 8);
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v7, v28, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v7, 0, 1, v29);
      uint64_t v11 = sub_24D5F1278((uint64_t)v7);
      sub_24D415F74((uint64_t)v7, (uint64_t *)&unk_26B196B10);
      return v11;
    case 7:
      uint64_t v22 = type metadata accessor for ItemMetadata();
      return sub_24D5F1278((uint64_t)&v2[*(int *)(v22 + 116)]);
    case 8:
      type metadata accessor for ItemMetadata();
      uint64_t v31 = swift_bridgeObjectRetain();
      uint64_t v15 = sub_24D5F14CC(v31);
      goto LABEL_38;
    case 9:
      uint64_t v16 = type metadata accessor for ItemMetadata();
      return sub_24D5F1678(*(void *)&v2[*(int *)(v16 + 124)], v2[*(int *)(v16 + 124) + 8]);
    case 10:
      id v10 = objc_msgSend(a2, sel_bindBooleanParameter_, v2[*(int *)(type metadata accessor for ItemMetadata() + 108)]);
      goto LABEL_34;
    case 11:
      id v10 = objc_msgSend(a2, sel_bindBooleanParameter_, v2[*(int *)(type metadata accessor for ItemMetadata() + 40)]);
      goto LABEL_34;
    case 12:
      id v10 = objc_msgSend(a2, sel_bindBooleanParameter_, v2[*(int *)(type metadata accessor for ItemMetadata() + 52)]);
      goto LABEL_34;
    case 13:
      uint64_t v27 = *((unsigned int *)v2 + 1);
      LOBYTE(v39[0]) = v2[8];
      return sub_24D5F1848(v27 | ((unint64_t)LOBYTE(v39[0]) << 32));
    case 14:
      goto LABEL_7;
    case 15:
      uint64_t v21 = *(int *)(type metadata accessor for ItemMetadata() + 104);
      return sub_24D5F1254(*(void *)&v2[v21], 0);
    case 16:
      uint64_t v9 = v2[*(int *)(type metadata accessor for ItemMetadata() + 84)];
      uint64_t v8 = MEMORY[0x263F8D6C8];
      goto LABEL_5;
    case 17:
      id v10 = objc_msgSend(a2, sel_bindBooleanParameter_, v2[*(int *)(type metadata accessor for ItemMetadata() + 44)]);
      goto LABEL_34;
    case 18:
      id v10 = objc_msgSend(a2, sel_bindBooleanParameter_, v2[*(int *)(type metadata accessor for ItemMetadata() + 48)]);
      goto LABEL_34;
    case 19:
      uint64_t v34 = (uint64_t *)&v2[*(int *)(type metadata accessor for ItemMetadata() + 56)];
      uint64_t v35 = *v34;
      uint64_t v36 = v34[1];
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_24D719BE4(v35, v36);
      goto LABEL_38;
    case 20:
      uint64_t v24 = (uint64_t *)&v2[*(int *)(type metadata accessor for ItemMetadata() + 132)];
      uint64_t v25 = *v24;
      unint64_t v26 = v24[1];
      sub_24D416048(*v24, v26);
      uint64_t v11 = sub_24D5F0D1C(v25, v26);
      sub_24D416034(v25, v26);
      return v11;
    case 21:
      id v10 = objc_msgSend(a2, sel_bindBooleanParameter_, v2[*(int *)(type metadata accessor for ItemMetadata() + 60)]);
      goto LABEL_34;
    case 22:
      id v10 = objc_msgSend(a2, sel_bindBooleanParameter_, v2[*(int *)(type metadata accessor for ItemMetadata() + 64)]);
      goto LABEL_34;
    case 23:
      type metadata accessor for ItemMetadata();
      int v37 = (void *)sub_24DCCB088();
      id v32 = objc_msgSend(a2, sel_bindObjectParameter_, v37);

      goto LABEL_35;
    case 24:
      uint64_t v18 = type metadata accessor for ItemMetadata();
      return sub_24D719CA0(*(void *)&v2[*(int *)(v18 + 136)], v2[*(int *)(v18 + 136) + 8]);
    case 25:
      uint64_t v19 = 0;
      if ((v2[*(int *)(type metadata accessor for ItemMetadata() + 144) + 4] & 1) == 0) {
        uint64_t v19 = sub_24DCCB078();
      }
      id v20 = objc_msgSend(a2, sel_bindObjectParameter_, v19);
      swift_unknownObjectRelease();
      uint64_t v11 = sub_24DCC97E8();

      return v11;
    case 26:
      if (*(void *)&v2[*(int *)(type metadata accessor for ItemMetadata() + 148) + 8]) {
        uint64_t v38 = sub_24DCC97B8();
      }
      else {
        uint64_t v38 = 0;
      }
      id v32 = objc_msgSend(a2, sel_bindObjectParameter_, v38);
      swift_unknownObjectRelease();
      goto LABEL_35;
    case 27:
      id v10 = objc_msgSend(a2, sel_bindBooleanParameter_, v2[*(int *)(type metadata accessor for ItemMetadata() + 72)]);
LABEL_34:
      id v32 = v10;
LABEL_35:
      uint64_t v11 = sub_24DCC97E8();

      break;
    default:
      uint64_t v8 = MEMORY[0x263F8D6C8];
      uint64_t v9 = qword_24DCE8DD8[*v2];
LABEL_5:
      v39[3] = v8;
      v39[0] = v9;
      uint64_t v11 = sub_24D3E3EB4((uint64_t)v39);
      uint64_t v13 = v12;
      sub_24D415F74((uint64_t)v39, qword_26B197F50);
      if (!v13)
      {
        sub_24DCCA978();
        __break(1u);
LABEL_7:
        type metadata accessor for ItemMetadata();
        uint64_t v14 = swift_bridgeObjectRetain();
        uint64_t v15 = sub_24D5F1A00(v14);
LABEL_38:
        uint64_t v11 = v15;
        swift_bridgeObjectRelease();
      }
      break;
  }
  return v11;
}

void sub_24DBB94F4(char a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_24DCC8CE8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
    case 3:
    case 10:
    case 11:
    case 12:
    case 17:
    case 18:
    case 21:
    case 22:
    case 27:
      unsigned __int8 v16 = objc_msgSend(a2, sel_BOOLAtIndex_, a3);
      *(void *)(a4 + 24) = MEMORY[0x263F8D4F8];
      goto LABEL_3;
    case 2:
    case 15:
      id v18 = objc_msgSend(a2, sel_longLongAtIndex_, a3);
      uint64_t v19 = (ValueMetadata *)MEMORY[0x263F8D6C8];
      goto LABEL_24;
    case 4:
      unsigned int v33 = objc_msgSend(a2, sel_intAtIndex_, a3);
      *(void *)(a4 + 24) = MEMORY[0x263F8E888];
      if ((v33 & 0x80000000) != 0 || v33 >= 0x10000) {
        goto LABEL_41;
      }
      *(_WORD *)a4 = v33;
      return;
    case 5:
    case 6:
    case 7:
      if (objc_msgSend(a2, sel_isNullAtIndex_, a3))
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v15, 1, 1, v9);
      }
      else
      {
        id v20 = objc_msgSend(a2, sel_dateAtIndex_, a3);
        sub_24DCC8CA8();

        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v21(v15, v12, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) != 1)
        {
          *(void *)(a4 + 24) = v9;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a4);
          v21((char *)boxed_opaque_existential_0, v15, v9);
          return;
        }
      }
      sub_24D415F74((uint64_t)v15, (uint64_t *)&unk_26B196B10);
LABEL_11:
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      return;
    case 8:
      if (objc_msgSend(a2, sel_isNullAtIndex_, a3)) {
        goto LABEL_11;
      }
      id v18 = (id)sub_24D5F2B04(a3);
      if (v4) {
        return;
      }
      uint64_t v19 = &type metadata for Tags;
LABEL_24:
      *(void *)(a4 + 24) = v19;
      *(void *)a4 = v18;
      return;
    case 9:
      if (objc_msgSend(a2, sel_isNullAtIndex_, a3)) {
        goto LABEL_11;
      }
      id v18 = objc_msgSend(a2, sel_unsignedLongLongAtIndex_, a3);
      uint64_t v19 = (ValueMetadata *)MEMORY[0x263F8E970];
      goto LABEL_24;
    case 13:
    case 25:
      if (objc_msgSend(a2, sel_isNullAtIndex_, a3)) {
        goto LABEL_11;
      }
      unsigned int v17 = objc_msgSend(a2, sel_unsignedIntAtIndex_, a3);
      *(void *)(a4 + 24) = MEMORY[0x263F8E8F8];
      *(_DWORD *)a4 = v17;
      return;
    case 14:
      if (objc_msgSend(a2, sel_isNullAtIndex_, a3)) {
        goto LABEL_11;
      }
      uint64_t v37 = sub_24D5F2980(a3);
      if (!v4)
      {
        uint64_t v38 = v37;
        *(void *)(a4 + 24) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197DA8);
        *(void *)a4 = v38;
      }
      return;
    case 16:
      *(void *)(a4 + 24) = &type metadata for EvictionUrgency;
      unsigned __int8 v16 = sub_24D78684C(a3);
      goto LABEL_29;
    case 19:
      if (objc_msgSend(a2, sel_isNullAtIndex_, a3)) {
        goto LABEL_11;
      }
      id v26 = objc_msgSend(a2, sel_stringAtIndex_, a3);
      uint64_t v27 = sub_24DCC97E8();
      uint64_t v29 = v28;

      uint64_t v30 = &type metadata for Filename;
      goto LABEL_35;
    case 20:
      if (objc_msgSend(a2, sel_isNullAtIndex_, a3)) {
        goto LABEL_11;
      }
      id v35 = objc_msgSend(a2, sel_dataAtIndex_, a3);
      uint64_t v27 = sub_24DCC8B68();
      uint64_t v29 = v36;

      uint64_t v30 = (ValueMetadata *)MEMORY[0x263F06F78];
      goto LABEL_35;
    case 23:
      unint64_t v34 = (unint64_t)objc_msgSend(a2, sel_longLongAtIndex_, a3);
      *(void *)(a4 + 24) = MEMORY[0x263F8E970];
      if ((v34 & 0x8000000000000000) != 0)
      {
LABEL_41:
        sub_24DCCA968();
        __break(1u);
        JUMPOUT(0x24DBB9B18);
      }
      *(void *)a4 = v34;
      return;
    case 24:
      if (objc_msgSend(a2, sel_isNullAtIndex_, a3)) {
        goto LABEL_11;
      }
      unint64_t v22 = (unint64_t)objc_msgSend(a2, sel_unsignedLongLongAtIndex_, a3);
      int v23 = v22;
      unint64_t v24 = HIDWORD(v22);
      type metadata accessor for NSFileProviderTypeAndCreator(0);
      *(void *)(a4 + 24) = v25;
      *(_DWORD *)a4 = v24;
      *(_DWORD *)(a4 + 4) = v23;
      return;
    case 26:
      if (objc_msgSend(a2, sel_isNullAtIndex_, a3)) {
        goto LABEL_11;
      }
      id v31 = objc_msgSend(a2, sel_stringAtIndex_, a3);
      uint64_t v27 = sub_24DCC97E8();
      uint64_t v29 = v32;

      uint64_t v30 = (ValueMetadata *)MEMORY[0x263F8D310];
LABEL_35:
      *(void *)(a4 + 24) = v30;
      *(void *)a4 = v27;
      *(void *)(a4 + 8) = v29;
      return;
    default:
      *(void *)(a4 + 24) = &type metadata for FileItemKind;
      unsigned __int8 v16 = sub_24D3FB058(a3);
LABEL_29:
      if (v4) {
        __swift_deallocate_boxed_opaque_existential_0(a4);
      }
      else {
LABEL_3:
      }
        *(unsigned char *)a4 = v16;
      return;
  }
}

uint64_t sub_24DBB9B88@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v86 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v56 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v56 - v13;
  LOBYTE(v105[0]) = 0;
  sub_24D71B65C(a1, (uint64_t)&type metadata for FileItemKind);
  uint64_t v87 = a1;
  uint64_t v88 = a2;
  uint64_t result = sub_24DA6D460((uint64_t)v105, (uint64_t)&type metadata for FileItemKind, a1, (uint64_t)&type metadata for FileItemKind, a2);
  if (!v3)
  {
    uint64_t v85 = v6;
    uint64_t v84 = v9;
    int v16 = v114;
    LOBYTE(v95[0]) = 2;
    uint64_t v18 = v87;
    uint64_t v17 = v88;
    sub_24DA6D460((uint64_t)v95, MEMORY[0x263F8D6C8], v87, MEMORY[0x263F8D6C8], v88);
    uint64_t v82 = v12;
    uint64_t v83 = v14;
    id v19 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v105[0]);
    uint64_t v20 = sub_24DCCAFA8();

    LOBYTE(v95[0]) = 15;
    sub_24DA6D460((uint64_t)v95, MEMORY[0x263F8D6C8], v18, MEMORY[0x263F8D6C8], v17);
    id v21 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v105[0]);
    uint64_t v22 = sub_24DCCAFA8();

    LOBYTE(v105[0]) = 13;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199EF0);
    sub_24D71B65C(v18, v23);
    sub_24DA6D460((uint64_t)v105, v23, v18, v23, v17);
    uint64_t v80 = v23;
    int v81 = v16;
    uint64_t v24 = v110;
    int v25 = v111;
    LOBYTE(v105[0]) = 4;
    uint64_t v26 = MEMORY[0x263F8E888];
    sub_24D71B65C(v18, MEMORY[0x263F8E888]);
    sub_24DA6D460((uint64_t)v105, v26, v18, v26, v17);
    int v78 = v25;
    uint64_t v79 = v24;
    LODWORD(v26) = v109;
    LOBYTE(v105[0]) = 5;
    uint64_t v27 = v85;
    sub_24D71B65C(v18, v85);
    sub_24DA6D460((uint64_t)v105, v27, v18, v27, v17);
    uint64_t v77 = v22;
    LOBYTE(v105[0]) = 6;
    sub_24DA6D460((uint64_t)v105, v27, v18, v27, v17);
    unsigned int v76 = v26;
    LOBYTE(v105[0]) = 3;
    uint64_t v28 = MEMORY[0x263F8D4F8];
    sub_24D71B65C(v18, MEMORY[0x263F8D4F8]);
    sub_24DA6D460((uint64_t)v105, v28, v18, v28, v17);
    LOBYTE(v27) = v113;
    LOBYTE(v105[0]) = 11;
    sub_24DA6D460((uint64_t)v105, MEMORY[0x263F8D4F8], v18, MEMORY[0x263F8D4F8], v17);
    LODWORD(v28) = v112;
    LOBYTE(v105[0]) = 12;
    sub_24DA6D460((uint64_t)v105, MEMORY[0x263F8D4F8], v18, MEMORY[0x263F8D4F8], v17);
    int v75 = v28;
    uint64_t v73 = v20;
    int v74 = v108;
    LOBYTE(v105[0]) = 7;
    sub_24DA6D460((uint64_t)v105, v85, v18, v85, v17);
    LOBYTE(v105[0]) = 8;
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(qword_26B197AA8);
    uint64_t v31 = v87;
    uint64_t v30 = v88;
    sub_24D71B65C(v87, v29);
    sub_24DA6D460((uint64_t)v105, v29, v31, v29, v30);
    uint64_t v85 = v107;
    LOBYTE(v105[0]) = 9;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B199F00);
    uint64_t v34 = v87;
    uint64_t v33 = v88;
    sub_24D71B65C(v87, v32);
    sub_24DA6D460((uint64_t)v105, v32, v34, v32, v33);
    uint64_t v72 = v105[3];
    LOBYTE(v18) = v106;
    LOBYTE(v105[0]) = 14;
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D70);
    sub_24DA6D460((uint64_t)v105, v35, v87, v35, v88);
    uint64_t v71 = v105[2];
    LOBYTE(v95[0]) = 20;
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B199088);
    uint64_t v38 = v87;
    uint64_t v37 = v88;
    sub_24D71B65C(v87, v36);
    sub_24DA6D460((uint64_t)v95, v36, v38, v36, v37);
    uint64_t v69 = v105[0];
    unint64_t v70 = v105[1];
    LOBYTE(v95[0]) = 23;
    uint64_t v39 = MEMORY[0x263F8E970];
    uint64_t v41 = v87;
    uint64_t v40 = v88;
    sub_24D71B65C(v87, MEMORY[0x263F8E970]);
    sub_24DA6D460((uint64_t)v95, v39, v41, v39, v40);
    uint64_t v68 = v104;
    LOBYTE(v95[0]) = 16;
    uint64_t v43 = v87;
    uint64_t v42 = v88;
    sub_24D71B65C(v87, (uint64_t)&type metadata for EvictionUrgency);
    sub_24DA6D460((uint64_t)v95, (uint64_t)&type metadata for EvictionUrgency, v43, (uint64_t)&type metadata for EvictionUrgency, v42);
    LOBYTE(v39) = v103;
    LOBYTE(v95[0]) = 21;
    sub_24DA6D460((uint64_t)v95, MEMORY[0x263F8D4F8], v87, MEMORY[0x263F8D4F8], v88);
    LOBYTE(v20) = v102;
    LOBYTE(v95[0]) = 22;
    sub_24DA6D460((uint64_t)v95, MEMORY[0x263F8D4F8], v87, MEMORY[0x263F8D4F8], v88);
    int v67 = v101;
    LOBYTE(v95[0]) = 27;
    sub_24DA6D460((uint64_t)v95, MEMORY[0x263F8D4F8], v87, MEMORY[0x263F8D4F8], v88);
    int v66 = v100;
    LOBYTE(v95[0]) = 17;
    sub_24DA6D460((uint64_t)v95, MEMORY[0x263F8D4F8], v87, MEMORY[0x263F8D4F8], v88);
    int v65 = v99;
    LOBYTE(v95[0]) = 18;
    sub_24DA6D460((uint64_t)v95, MEMORY[0x263F8D4F8], v87, MEMORY[0x263F8D4F8], v88);
    int v64 = v98;
    LOBYTE(v95[0]) = 1;
    sub_24DA6D460((uint64_t)v95, MEMORY[0x263F8D4F8], v87, MEMORY[0x263F8D4F8], v88);
    int v63 = v97;
    LOBYTE(v95[0]) = 10;
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B199DF0);
    uint64_t v46 = v87;
    uint64_t v45 = v88;
    sub_24D71B65C(v87, v44);
    sub_24DA6D460((uint64_t)v95, v44, v46, v44, v45);
    int v62 = v96;
    LOBYTE(v90[0]) = 19;
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(qword_26B199BD0);
    uint64_t v49 = v87;
    uint64_t v48 = v88;
    sub_24D71B65C(v87, v47);
    sub_24DA6D460((uint64_t)v90, v47, v49, v47, v48);
    uint64_t v60 = v95[0];
    uint64_t v61 = v95[1];
    LOBYTE(v90[0]) = 24;
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E38);
    uint64_t v52 = v87;
    uint64_t v51 = v88;
    sub_24D71B65C(v87, v50);
    sub_24DA6D460((uint64_t)v90, v50, v52, v50, v51);
    uint64_t v59 = v93;
    int v58 = v94;
    LOBYTE(v90[0]) = 25;
    sub_24DA6D460((uint64_t)v90, v80, v87, v80, v88);
    uint64_t v80 = v91;
    int v57 = v92;
    v89[0] = 26;
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D80);
    uint64_t v55 = v87;
    uint64_t v54 = v88;
    sub_24D71B65C(v87, v53);
    sub_24DA6D460((uint64_t)v89, v53, v55, v53, v54);
    v89[0] = v57;
    return sub_24D41571C(v81, v73, v77, 0, v79 | ((unint64_t)v78 << 32), v76, (uint64_t)v83, (uint64_t)v82, v86, v27, v75, v74, (uint64_t)v84, v85, v72, v18, v71, v69, v70,
             v68,
             v39,
             v20,
             v67,
             v66,
             v65,
             v64,
             v63,
             v62,
             2,
             v60,
             v61,
             v59,
             v58,
             v80 | ((unint64_t)v57 << 32),
             0,
             v90[0],
             v90[1],
             0,
             0,
             0);
  }
  return result;
}

unint64_t sub_24DBBA7C4(char a1)
{
  unint64_t result = 1684957547;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C617461645F7369;
      break;
    case 2:
      unint64_t result = 1702521203;
      break;
    case 3:
      unint64_t result = 0x656B636F6C5F7369;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x6E6F697461657263;
      break;
    case 6:
      unint64_t result = 0xD000000000000019;
      break;
    case 7:
      unint64_t result = 0x6573755F7473616CLL;
      break;
    case 8:
      unint64_t result = 0x617461645F676174;
      break;
    case 9:
      unint64_t result = 0x657469726F766166;
      break;
    case 10:
      unint64_t result = 0x616B6361705F7369;
      break;
    case 11:
      unint64_t result = 0x65646469685F7369;
      break;
    case 12:
    case 13:
    case 23:
    case 27:
      unint64_t result = 0xD000000000000010;
      break;
    case 14:
      unint64_t result = 0xD000000000000013;
      break;
    case 15:
      unint64_t result = 0x6C61636973796870;
      break;
    case 16:
      unint64_t result = 0x74636976655F7369;
      break;
    case 17:
      unint64_t result = 0x656E6E69705F7369;
      break;
    case 18:
      unint64_t result = 0xD000000000000013;
      break;
    case 19:
      unint64_t result = 0xD000000000000016;
      break;
    case 20:
      unint64_t result = 0x69746E6172617571;
      break;
    case 21:
      unint64_t result = 0x72636E79735F7369;
      break;
    case 22:
      unint64_t result = 0x726F6E67695F7369;
      break;
    case 24:
      unint64_t result = 0x657079745F736FLL;
      break;
    case 25:
      unint64_t result = 0x756F635F6B6E696CLL;
      break;
    case 26:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24DBBAB48(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_24DBBA7C4(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_24DBBA7C4(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24DCCAE28();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24DBBABD4()
{
  char v1 = *v0;
  sub_24DCCAFF8();
  sub_24DBBA7C4(v1);
  sub_24DCC98F8();
  swift_bridgeObjectRelease();
  return sub_24DCCB048();
}

uint64_t sub_24DBBAC38()
{
  sub_24DBBA7C4(*v0);
  sub_24DCC98F8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24DBBAC8C()
{
  char v1 = *v0;
  sub_24DCCAFF8();
  sub_24DBBA7C4(v1);
  sub_24DCC98F8();
  swift_bridgeObjectRelease();
  return sub_24DCCB048();
}

uint64_t sub_24DBBACEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24DBBB198();
  *a1 = result;
  return result;
}

unint64_t sub_24DBBAD1C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_24DBBA7C4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_24DBBAD48()
{
  return sub_24DBBA7C4(*v0);
}

uint64_t sub_24DBBAD50(char *a1, void *a2)
{
  return sub_24DBB8E00(*a1, a2);
}

void sub_24DBBAD6C(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
}

uint64_t sub_24DBBAD88@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_24DBB9B88(a1, a2, a3);
}

unint64_t sub_24DBBADA0(uint64_t a1)
{
  unint64_t result = sub_24DBBADC8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24DBBADC8()
{
  unint64_t result = qword_269870BF0;
  if (!qword_269870BF0)
  {
    type metadata accessor for ItemMetadata();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870BF0);
  }
  return result;
}

uint64_t sub_24DBBAE24()
{
  return sub_24DBBB020(&qword_269870BF8);
}

uint64_t _s9SQLFieldsOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE5) {
    goto LABEL_17;
  }
  if (a2 + 27 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 27) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 27;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 27;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 27;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1C;
  int v8 = v6 - 28;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9SQLFieldsOwst_3(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 27 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 27) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE4)
  {
    unsigned int v6 = ((a2 - 229) >> 8) + 1;
    *unint64_t result = a2 + 27;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24DBBAFB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 27;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9SQLFieldsOMa_4()
{
  return &_s9SQLFieldsON_3;
}

uint64_t sub_24DBBAFEC()
{
  return sub_24DBBB020((unint64_t *)&qword_26986FD70);
}

uint64_t sub_24DBBB020(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197DC0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24DBBB06C()
{
  unint64_t result = qword_26B1929C8;
  if (!qword_26B1929C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1929C8);
  }
  return result;
}

unint64_t sub_24DBBB0C0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24DBBB0F0();
  unint64_t result = sub_24DBBB144();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24DBBB0F0()
{
  unint64_t result = qword_26B1929D0;
  if (!qword_26B1929D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1929D0);
  }
  return result;
}

unint64_t sub_24DBBB144()
{
  unint64_t result = qword_26B1929C0;
  if (!qword_26B1929C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1929C0);
  }
  return result;
}

uint64_t sub_24DBBB198()
{
  unint64_t v0 = sub_24DCCAEA8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1C) {
    return 28;
  }
  else {
    return v0;
  }
}

void sub_24DBBB1EC(uint64_t a1)
{
  uint64_t v75 = *MEMORY[0x263EF8340];
  uint64_t v64 = sub_24DCC9078();
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  unint64_t v67 = (unint64_t)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24DCC8A58();
  uint64_t v66 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  int v65 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  int v62 = (char *)&v58 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_24DCC8858();
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v71 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(self, sel_defaultManager);
  __swift_instantiateConcreteTypeFromMangledName(qword_269870C10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24DCCECD0;
  uint64_t v13 = (void *)*MEMORY[0x263F08060];
  *(void *)(inited + 32) = *MEMORY[0x263F08060];
  *(void *)(inited + 40) = 0x656C69626F6DLL;
  uint64_t v14 = (void *)*MEMORY[0x263F08028];
  *(void *)(inited + 48) = 0xE600000000000000;
  *(void *)(inited + 56) = v14;
  *(void *)(inited + 64) = 0x656C69626F6DLL;
  *(void *)(inited + 72) = 0xE600000000000000;
  id v15 = v13;
  id v16 = v14;
  unint64_t v17 = sub_24D42BC78(inited);
  sub_24DC33190(v17);
  type metadata accessor for FileAttributeKey(0);
  id v19 = v18;
  uint64_t v69 = sub_24DBC0A80(&qword_26986C720, type metadata accessor for FileAttributeKey);
  unint64_t v70 = v19;
  uint64_t v20 = (void *)sub_24DCC9558();
  swift_bridgeObjectRelease();
  uint64_t v21 = a1;
  sub_24DCC8A18();
  uint64_t v22 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  v73[0] = 0;
  unsigned int v23 = objc_msgSend(v11, sel_setAttributes_ofItemAtPath_error_, v20, v22, v73);

  if (!v23)
  {
    id v40 = v73[0];
    swift_bridgeObjectRelease();
    sub_24DCC8828();

    swift_willThrow();
    return;
  }
  id v24 = v73[0];
  int v25 = (void *)sub_24DCCA0F8();
  if (v25)
  {
    unint64_t v67 = v17;
    id v68 = v11;
    uint64_t v26 = v71;
    id v59 = v25;
    sub_24DCCA0C8();
    sub_24DCC8848();
    uint64_t v27 = v62;
    if (!v74)
    {
LABEL_13:
      (*(void (**)(char *, uint64_t))(v60 + 8))(v26, v61);

      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v28 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56);
    uint64_t v29 = (unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
    int v65 = (char *)(v66 + 32);
    v66 += 8;
    uint64_t v64 = (uint64_t)v29;
    uint64_t v63 = MEMORY[0x263F8EE58] + 8;
    while (1)
    {
      int v30 = swift_dynamicCast();
      uint64_t v31 = *v28;
      if (!v30) {
        break;
      }
      v31(v9, 0, 1, v3);
      if ((*v29)(v9, 1, v3) == 1) {
        goto LABEL_6;
      }
      uint64_t v32 = (*(uint64_t (**)(char *, char *, uint64_t))v65)(v27, v9, v3);
      uint64_t v33 = (void *)MEMORY[0x253329610](v32);
      sub_24DC33190(v67);
      uint64_t v34 = v3;
      uint64_t v35 = (void *)sub_24DCC9558();
      swift_bridgeObjectRelease();
      sub_24DCC8A18();
      uint64_t v36 = v27;
      uint64_t v37 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      id v72 = 0;
      unsigned int v38 = objc_msgSend(v68, sel_setAttributes_ofItemAtPath_error_, v35, v37, &v72);

      if (!v38)
      {
        id v57 = v72;
        sub_24DCC8828();

        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v71, v61);
        swift_bridgeObjectRelease();

        (*(void (**)(char *, uint64_t))v66)(v36, v34);
        return;
      }
      id v39 = v72;
      (*(void (**)(char *, uint64_t))v66)(v36, v34);
      uint64_t v3 = v34;
      uint64_t v27 = v36;
      uint64_t v26 = v71;
      uint64_t v29 = (unsigned int (**)(char *, uint64_t, uint64_t))v64;
LABEL_7:
      sub_24DCC8848();
      if (!v74) {
        goto LABEL_13;
      }
    }
    v31(v9, 1, 1, v3);
LABEL_6:
    sub_24D415F74((uint64_t)v9, (uint64_t *)&unk_26B199050);
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  id v41 = (id)fpfs_current_or_default_log();
  uint64_t v42 = v67;
  sub_24DCC9088();
  uint64_t v43 = v66;
  uint64_t v44 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v21, v3);
  uint64_t v45 = sub_24DCC9068();
  os_log_type_t v46 = sub_24DCCA128();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = swift_slowAlloc();
    id v68 = v11;
    uint64_t v48 = (uint8_t *)v47;
    uint64_t v71 = (char *)swift_slowAlloc();
    v73[0] = v71;
    *(_DWORD *)uint64_t v48 = 136315138;
    unint64_t v70 = v48 + 4;
    uint64_t v49 = (void *)sub_24DCC8948();
    id v50 = objc_msgSend(v49, sel_fp_shortDescription);

    uint64_t v51 = sub_24DCC97E8();
    uint64_t v69 = v3;
    unint64_t v53 = v52;

    id v72 = (id)sub_24D418FB4(v51, v53, (uint64_t *)v73);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v65, v69);
    _os_log_impl(&dword_24D3D0000, v45, v46, "Failed to get enumerator for %s", v48, 0xCu);
    uint64_t v54 = v71;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v54, -1, -1);
    MEMORY[0x25332B030](v48, -1, -1);

    uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
    uint64_t v56 = v67;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v3);
    uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
    uint64_t v56 = v42;
  }
  v55(v56, v64);
}

id sub_24DBBBB28(char *a1, char *a2)
{
  uint64_t v5 = sub_24DCC9078();
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  MEMORY[0x270FA5388](v5);
  id v59 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24DCC8A58();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v50 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v58 = (char *)&v48 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v48 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v48 - v19;
  uint64_t v21 = *(void (**)(void))(v11 + 16);
  unint64_t v52 = &v2[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_userURL];
  id v57 = a1;
  v21();
  uint64_t v51 = &v2[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_outputUserURL];
  v21();
  uint64_t v55 = v2;
  uint64_t v56 = a2;
  sub_24DCC8978();
  id v22 = objc_msgSend(self, sel_defaultManager);
  sub_24DCC8A18();
  unsigned int v23 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  unsigned int v24 = objc_msgSend(v22, sel_fileExistsAtPath_, v23);

  if (v24)
  {
    sub_24DCC8978();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    int v25 = v20;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      uint64_t v49 = v20;
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v26(v18, v9, v10);
      uint64_t v27 = v55;
      ((void (*)(char *, char *, uint64_t))v21)(&v55[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_destinationDirectoryURL], v18, v10);
      uint64_t v28 = v50;
      sub_24DCC8988();
      v26(&v27[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_backupManifestURL], v28, v10);

      uint64_t v29 = (objc_class *)type metadata accessor for FPFSSQLBackupEngine();
      v60.receiver = v27;
      v60.super_class = v29;
      id v30 = objc_msgSendSuper2(&v60, sel_init);
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v31((uint64_t)v56, v10);
      v31((uint64_t)v57, v10);
      v31((uint64_t)v18, v10);
      v31((uint64_t)v49, v10);
      return v30;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    int v25 = v20;
  }
  sub_24D415F74((uint64_t)v9, (uint64_t *)&unk_26B199050);
  id v32 = (id)fpfs_current_or_default_log();
  uint64_t v33 = v59;
  sub_24DCC9088();
  uint64_t v34 = v58;
  ((void (*)(char *, char *, uint64_t))v21)(v58, v25, v10);
  uint64_t v35 = sub_24DCC9068();
  os_log_type_t v36 = sub_24DCCA148();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v49 = v25;
    uint64_t v39 = v38;
    uint64_t v62 = v38;
    *(_DWORD *)uint64_t v37 = 136446210;
    id v50 = (char *)(v37 + 4);
    id v40 = (void *)sub_24DCC8948();
    id v41 = objc_msgSend(v40, sel_fp_shortDescription);

    uint64_t v42 = sub_24DCC97E8();
    unint64_t v44 = v43;

    uint64_t v61 = sub_24D418FB4(v42, v44, &v62);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    uint64_t v45 = *(void (**)(char *, uint64_t))(v11 + 8);
    v45(v58, v10);
    _os_log_impl(&dword_24D3D0000, v35, v36, "%{public}s does not exist. No need to back up.", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v39, -1, -1);
    MEMORY[0x25332B030](v37, -1, -1);

    v45(v56, v10);
    v45(v57, v10);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v59, v54);
    os_log_type_t v46 = v49;
  }
  else
  {

    uint64_t v45 = *(void (**)(char *, uint64_t))(v11 + 8);
    v45(v34, v10);
    v45(v56, v10);
    v45(v57, v10);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v54);
    os_log_type_t v46 = v25;
  }
  v45(v46, v10);
  v45(v52, v10);
  v45(v51, v10);

  type metadata accessor for FPFSSQLBackupEngine();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_24DBBC3AC()
{
  char v1 = v0;
  v35[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_24DCC9078();
  uint64_t v3 = *(uint64_t (***)(char *, uint64_t))(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(self, sel_defaultManager);
  uint64_t v7 = (void *)sub_24DCC8948();
  v35[0] = 0;
  unsigned int v8 = objc_msgSend(v6, sel_removeItemAtURL_error_, v7, v35);

  id v9 = v35[0];
  if (v8)
  {
    return v9;
  }
  else
  {
    id v32 = (uint64_t (**)(char *, uint64_t))v35[0];
    id v11 = v35[0];
    uint64_t v12 = (void *)sub_24DCC8828();

    swift_willThrow();
    id v13 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v14 = v1;
    id v15 = v12;
    id v16 = v14;
    id v17 = v12;
    uint64_t v18 = sub_24DCC9068();
    os_log_type_t v19 = sub_24DCCA128();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v29 = (void *)swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      v35[0] = v31;
      *(_DWORD *)uint64_t v20 = 136315394;
      id v32 = v3;
      uint64_t v21 = (void *)sub_24DCC8948();
      id v22 = objc_msgSend(v21, sel_fp_shortDescription);

      uint64_t v23 = sub_24DCC97E8();
      uint64_t v30 = v2;
      unint64_t v25 = v24;

      uint64_t v34 = sub_24D418FB4(v23, v25, (uint64_t *)v35);
      sub_24DCCA428();

      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2112;
      swift_getErrorValue();
      id v26 = sub_24DBA2828(v33);
      uint64_t v34 = (uint64_t)v26;
      sub_24DCCA428();
      uint64_t v27 = v29;
      *uint64_t v29 = v26;

      _os_log_impl(&dword_24D3D0000, v18, v19, "Failed to remove directory %s: %@", (uint8_t *)v20, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v27, -1, -1);
      uint64_t v28 = v31;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v28, -1, -1);
      MEMORY[0x25332B030](v20, -1, -1);

      return (id)v32[1](v5, v30);
    }
    else
    {

      return (id)v3[1](v5, v2);
    }
  }
}

id sub_24DBBC810()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FPFSSQLBackupEngine();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24DBBC934()
{
  return type metadata accessor for FPFSSQLBackupEngine();
}

uint64_t type metadata accessor for FPFSSQLBackupEngine()
{
  uint64_t result = qword_269870C00;
  if (!qword_269870C00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24DBBC988()
{
  uint64_t result = sub_24DCC8A58();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_24DBBCA1C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t result = sub_24DCC9938();
  if (v4) {
    uint64_t result = 15;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_12;
  }

  return sub_24DCC9A78();
}

unint64_t sub_24DBBCAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint8_t *a4@<X8>)
{
  id v162 = a3;
  uint64_t v161 = a2;
  uint64_t v164 = a4;
  uint64_t v167 = (void *)sub_24DCC8408();
  os_log_t v166 = (os_log_t)*(v167 - 1);
  MEMORY[0x270FA5388](v167);
  uint64_t v165 = (char *)v155 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24DCC8A58();
  uint64_t v172 = *(void *)(v6 - 8);
  uint64_t v173 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  int v168 = (uint64_t (**)(char *, uint64_t))((char *)v155 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v160 = (char *)v155 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v163 = (char *)v155 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v159 = (char *)v155 - v13;
  uint64_t v169 = sub_24DCC9078();
  uint64_t v170 = *(void *)(v169 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v169);
  uint64_t v174 = (char *)v155 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v155 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)v155 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)v155 - v22;
  uint64_t v24 = sub_24DCC8698();
  unint64_t v25 = *(uint64_t (***)(char *, uint64_t))(v24 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)v155 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)v155 - v29;
  uint64_t v31 = (void *)v171;
  sub_24DCC88D8();
  if (v31)
  {
    id v32 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v34 = v172;
    uint64_t v33 = v173;
    uint64_t v35 = v168;
    (*(void (**)(uint64_t (**)(char *, uint64_t), uint64_t, uint64_t))(v172 + 16))(v168, a1, v173);
    id v36 = v31;
    id v37 = v31;
    uint64_t v38 = sub_24DCC9068();
    os_log_type_t v39 = sub_24DCCA128();
    uint64_t v40 = v34;
    uint64_t v41 = v33;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v167 = (void *)swift_slowAlloc();
      uint64_t v171 = swift_slowAlloc();
      *(void *)&long long v180 = v171;
      *(_DWORD *)uint64_t v42 = 136315394;
      uint64_t v165 = (char *)(v42 + 4);
      os_log_t v166 = v38;
      unint64_t v43 = (void *)sub_24DCC8948();
      id v44 = objc_msgSend(v43, sel_fp_shortDescription);

      uint64_t v45 = sub_24DCC97E8();
      os_log_type_t v46 = v35;
      unint64_t v48 = v47;

      *(void *)&long long v178 = sub_24D418FB4(v45, v48, (uint64_t *)&v180);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t (**)(char *, uint64_t), uint64_t))(v40 + 8))(v46, v41);
      *(_WORD *)(v42 + 12) = 2112;
      swift_getErrorValue();
      id v49 = sub_24DBA2828(v181);
      *(void *)&long long v178 = v49;
      sub_24DCCA428();
      id v50 = v167;
      *uint64_t v167 = v49;

      os_log_t v51 = v166;
      _os_log_impl(&dword_24D3D0000, v166, v39, "Failed to fetch resource values for %s: %@", (uint8_t *)v42, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v50, -1, -1);
      uint64_t v52 = v171;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v52, -1, -1);
      MEMORY[0x25332B030](v42, -1, -1);
    }
    else
    {
      (*(void (**)(uint64_t (**)(char *, uint64_t), uint64_t))(v34 + 8))(v35, v33);
    }
    (*(void (**)(char *, uint64_t))(v170 + 8))(v174, v169);
    return swift_willThrow();
  }
  uint64_t v157 = v18;
  uint64_t v158 = v21;
  uint64_t v156 = v23;
  uint64_t v171 = a1;
  v155[1] = 0;
  uint64_t v53 = v172;
  ((void (*)(char *, char *, uint64_t))v25[4])(v30, v28, v24);
  uint64_t v54 = sub_24DCC8608();
  if (v55)
  {
    uint64_t v56 = v54;
    unint64_t v57 = v55;
    uint64_t v174 = v30;
    int v168 = v25;
    uint64_t v58 = sub_24DCC9908();
    uint64_t v59 = sub_24DCC9908();
    BOOL v60 = __OFSUB__(v58, v59);
    unint64_t result = v58 - v59;
    if (v60)
    {
      __break(1u);
    }
    else
    {
      unint64_t v62 = sub_24DBBCA1C(result, v56, v57);
      uint64_t v64 = v63;
      uint64_t v66 = v65;
      uint64_t v68 = v67;
      swift_bridgeObjectRelease();
      uint64_t v69 = MEMORY[0x253327950](v62, v64, v66, v68);
      uint64_t v71 = v70;
      swift_bridgeObjectRelease();
      unint64_t result = sub_24DCC85D8();
      if (*MEMORY[0x263EFFAD0])
      {
        unint64_t v72 = result;
        uint64_t v73 = v164;
        uint64_t v74 = v158;
        if (*(void *)(result + 16))
        {
          id v75 = (id)*MEMORY[0x263EFFAD0];
          uint64_t v76 = sub_24D4060A4(v75);
          if (v77)
          {
            sub_24D3F7E8C(*(void *)(v72 + 56) + 32 * v76, (uint64_t)&v178);
          }
          else
          {
            long long v178 = 0u;
            long long v179 = 0u;
          }
        }
        else
        {
          long long v178 = 0u;
          long long v179 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v179 + 1))
        {
          uint64_t v97 = v69;
          sub_24D3F7E7C(&v178, &v180);
          sub_24D3F7E8C((uint64_t)&v180, (uint64_t)&v178);
          sub_24D43E44C();
          if (swift_dynamicCast())
          {
            unsigned __int8 v98 = (void *)v176;
            id v162 = objc_msgSend((id)v176, sel_integerValue);

            uint64_t v99 = sub_24DCC8638();
            LODWORD(v161) = v100;
            unsigned __int8 v101 = (char *)sub_24DCC97B8();
            uint64_t v102 = sub_24DCC85D8();
            uint64_t v103 = *(void *)(v102 + 16);
            uint64_t v163 = v101;
            if (v103)
            {
              uint64_t v104 = v24;
              uint64_t v105 = v101;
              uint64_t v106 = sub_24D4060A4(v105);
              if (v107)
              {
                sub_24D3F7E8C(*(void *)(v102 + 56) + 32 * v106, (uint64_t)&v176);
              }
              else
              {
                long long v176 = 0u;
                long long v177 = 0u;
              }

              uint64_t v24 = v104;
              uint64_t v73 = v164;
            }
            else
            {
              long long v176 = 0u;
              long long v177 = 0u;
            }
            swift_bridgeObjectRelease();
            if (*((void *)&v177 + 1))
            {
              sub_24D3F7E7C(&v176, &v178);
              sub_24D3F7E8C((uint64_t)&v178, (uint64_t)&v176);
              char v130 = swift_dynamicCast();
              uint64_t v131 = v171;
              if (v130)
              {
                id v132 = v175;
                unsigned int v133 = objc_msgSend(v175, sel_unsignedIntValue);

                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v178);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v180);
                unint64_t result = v168[1](v174, v24);
                *(void *)uint64_t v73 = v97;
                *((void *)v73 + 1) = v71;
                *((void *)v73 + 2) = v162;
                *((void *)v73 + 3) = v99;
                v73[32] = v161 & 1;
                *((_DWORD *)v73 + 9) = v133;
                return result;
              }
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v178);
            }
            else
            {
              swift_bridgeObjectRelease();
              sub_24D415F74((uint64_t)&v176, qword_26B197F50);
              uint64_t v131 = v171;
            }
            id v134 = (id)fpfs_current_or_default_log();
            uint64_t v135 = v156;
            sub_24DCC9088();
            uint64_t v136 = v53;
            uint64_t v137 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
            uint64_t v138 = v159;
            uint64_t v139 = v173;
            v137(v159, v131, v173);
            uint64_t v140 = sub_24DCC9068();
            os_log_type_t v141 = sub_24DCCA128();
            if (os_log_type_enabled(v140, v141))
            {
              uint64_t v142 = (uint8_t *)swift_slowAlloc();
              uint64_t v143 = v136;
              uint64_t v171 = swift_slowAlloc();
              *(void *)&long long v178 = v171;
              *(_DWORD *)uint64_t v142 = 136315138;
              uint64_t v164 = v142 + 4;
              uint64_t v144 = (void *)sub_24DCC8948();
              uint64_t v145 = v24;
              id v146 = objc_msgSend(v144, sel_fp_shortDescription);

              uint64_t v147 = sub_24DCC97E8();
              unint64_t v149 = v148;

              uint64_t v24 = v145;
              *(void *)&long long v176 = sub_24D418FB4(v147, v149, (uint64_t *)&v178);
              sub_24DCCA428();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v143 + 8))(v159, v173);
              _os_log_impl(&dword_24D3D0000, v140, v141, "Failed to get gen count for %s", v142, 0xCu);
              uint64_t v150 = v171;
              swift_arrayDestroy();
              MEMORY[0x25332B030](v150, -1, -1);
              MEMORY[0x25332B030](v142, -1, -1);

              (*(void (**)(char *, uint64_t))(v170 + 8))(v156, v169);
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v136 + 8))(v138, v139);

              (*(void (**)(char *, uint64_t))(v170 + 8))(v135, v169);
            }
            uint64_t v151 = v167;
            os_log_t v152 = v166;
            uint64_t v153 = v165;
            uint64_t v126 = v168;
            uint64_t v154 = v163;
            LODWORD(v178) = 2;
            sub_24D5F77E0(MEMORY[0x263F8EE78]);
            sub_24DBC0A80((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
            sub_24DCC8808();
            sub_24DCC83E8();
            ((void (*)(char *, void *))v152[1].isa)(v153, v151);
            swift_willThrow();

            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v180);
            return v126[1](v174, v24);
          }
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v180);
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_24D415F74((uint64_t)&v178, qword_26B197F50);
        }
        uint64_t v108 = v171;
        id v109 = (id)fpfs_current_or_default_log();
        sub_24DCC9088();
        unsigned int v110 = v163;
        uint64_t v111 = v173;
        (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v163, v108, v173);
        unsigned __int8 v112 = sub_24DCC9068();
        os_log_type_t v113 = sub_24DCCA128();
        if (os_log_type_enabled(v112, v113))
        {
          unsigned __int8 v114 = (uint8_t *)swift_slowAlloc();
          uint64_t v115 = v53;
          uint64_t v171 = swift_slowAlloc();
          *(void *)&long long v180 = v171;
          *(_DWORD *)unsigned __int8 v114 = 136315138;
          uint64_t v164 = v114 + 4;
          uint64_t v116 = (void *)sub_24DCC8948();
          id v117 = objc_msgSend(v116, sel_fp_shortDescription);

          uint64_t v118 = sub_24DCC97E8();
          uint64_t v119 = v24;
          unint64_t v121 = v120;

          *(void *)&long long v178 = sub_24D418FB4(v118, v121, (uint64_t *)&v180);
          sub_24DCCA428();
          uint64_t v24 = v119;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v115 + 8))(v163, v173);
          _os_log_impl(&dword_24D3D0000, v112, v113, "Failed to get the inode for %s", v114, 0xCu);
          uint64_t v122 = v171;
          swift_arrayDestroy();
          MEMORY[0x25332B030](v122, -1, -1);
          MEMORY[0x25332B030](v114, -1, -1);

          (*(void (**)(char *, uint64_t))(v170 + 8))(v158, v169);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v53 + 8))(v110, v111);

          (*(void (**)(char *, uint64_t))(v170 + 8))(v74, v169);
        }
        uint64_t v123 = v167;
        os_log_t v124 = v166;
        unint64_t v125 = v165;
        uint64_t v126 = v168;
        LODWORD(v180) = 2;
        sub_24D5F77E0(MEMORY[0x263F8EE78]);
        sub_24DBC0A80((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
        sub_24DCC8808();
        sub_24DCC83E8();
        ((void (*)(char *, void *))v124[1].isa)(v125, v123);
        swift_willThrow();
        return v126[1](v174, v24);
      }
    }
    __break(1u);
    return result;
  }
  id v78 = (id)fpfs_current_or_default_log();
  uint64_t v79 = v157;
  sub_24DCC9088();
  uint64_t v80 = v53;
  int v81 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  uint64_t v82 = v160;
  uint64_t v83 = v173;
  v81(v160, v171, v173);
  uint64_t v84 = sub_24DCC9068();
  os_log_type_t v85 = sub_24DCCA128();
  int v86 = v85;
  if (os_log_type_enabled(v84, v85))
  {
    LODWORD(v174) = v86;
    uint64_t v87 = swift_slowAlloc();
    id v162 = (id)v24;
    uint64_t v88 = (uint8_t *)v87;
    uint64_t v171 = swift_slowAlloc();
    *(void *)&long long v180 = v171;
    uint64_t v164 = v88;
    *(_DWORD *)uint64_t v88 = 136315138;
    uint64_t v163 = (char *)(v88 + 4);
    unint64_t v89 = (void *)sub_24DCC8948();
    id v90 = objc_msgSend(v89, sel_fp_shortDescription);

    uint64_t v91 = sub_24DCC97E8();
    int v168 = v25;
    unsigned __int8 v92 = v30;
    unint64_t v94 = v93;

    uint64_t v24 = (uint64_t)v162;
    *(void *)&long long v178 = sub_24D418FB4(v91, v94, (uint64_t *)&v180);
    sub_24DCCA428();
    uint64_t v30 = v92;
    unint64_t v25 = v168;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v160, v83);
    uint64_t v95 = v164;
    _os_log_impl(&dword_24D3D0000, v84, (os_log_type_t)v174, "Failed to get canonical path for %s", v164, 0xCu);
    uint64_t v96 = v171;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v96, -1, -1);
    MEMORY[0x25332B030](v95, -1, -1);

    (*(void (**)(char *, uint64_t))(v170 + 8))(v157, v169);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v80 + 8))(v82, v83);

    (*(void (**)(char *, uint64_t))(v170 + 8))(v79, v169);
  }
  uint64_t v127 = v167;
  os_log_t v128 = v166;
  uint64_t v129 = v165;
  LODWORD(v180) = 2;
  sub_24D5F77E0(MEMORY[0x263F8EE78]);
  sub_24DBC0A80((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
  sub_24DCC8808();
  sub_24DCC83E8();
  ((void (*)(char *, void *))v128[1].isa)(v129, v127);
  swift_willThrow();
  return v25[1](v30, v24);
}

void sub_24DBBDD4C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v104 = a3;
  uint64_t v96 = a1;
  uint64_t v92 = sub_24DCC8408();
  uint64_t v91 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  id v90 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v5 - 8);
  unsigned __int8 v98 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_24DCC8858();
  uint64_t v86 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v102 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_24DCC8A58();
  uint64_t v97 = *(void *)(v101 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v101);
  uint64_t v87 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v88 = (char *)&v85 - v11;
  MEMORY[0x270FA5388](v10);
  unint64_t v93 = (char *)&v85 - v12;
  uint64_t v95 = (void *)sub_24DCC9078();
  uint64_t v94 = *(v95 - 1);
  uint64_t v13 = MEMORY[0x270FA5388](v95);
  unint64_t v89 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v85 - v15;
  uint64_t v17 = sub_24DCC8698();
  uint64_t v100 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B190940);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24DCCECE0;
  uint64_t v21 = (void *)*MEMORY[0x263EFF5E0];
  *(void *)(inited + 32) = *MEMORY[0x263EFF5E0];
  id v22 = v21;
  sub_24D3FB960(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  uint64_t v23 = v103;
  sub_24DCC88D8();
  if (v23)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v85 = a2;
  uint64_t v103 = v17;
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_24DCC8608();
  if (!v25)
  {
    id v40 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v41 = v97;
    uint64_t v42 = v93;
    uint64_t v43 = v101;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v93, v85, v101);
    id v44 = sub_24DCC9068();
    os_log_type_t v45 = sub_24DCCA128();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v102 = v16;
      unint64_t v47 = (uint8_t *)v46;
      uint64_t v99 = swift_slowAlloc();
      v105[0] = v99;
      *(_DWORD *)unint64_t v47 = 136315138;
      unsigned __int8 v98 = (char *)(v47 + 4);
      unint64_t v48 = (void *)sub_24DCC8948();
      id v49 = objc_msgSend(v48, sel_fp_shortDescription);
      uint64_t v96 = v19;
      uint64_t v50 = v41;
      id v51 = v49;

      uint64_t v52 = sub_24DCC97E8();
      unint64_t v54 = v53;

      uint64_t v109 = sub_24D418FB4(v52, v54, v105);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v93, v43);
      uint64_t v19 = v96;
      _os_log_impl(&dword_24D3D0000, v44, v45, "Could not get canonical path for %s", v47, 0xCu);
      uint64_t v55 = v99;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v55, -1, -1);
      MEMORY[0x25332B030](v47, -1, -1);

      (*(void (**)(char *, void *))(v94 + 8))(v102, v95);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);

      (*(void (**)(char *, void *))(v94 + 8))(v16, v95);
    }
    uint64_t v71 = v100;
    uint64_t v72 = v103;
    uint64_t v73 = v92;
    uint64_t v74 = v91;
    id v75 = v90;
    LODWORD(v105[0]) = 2;
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24DBC0A80((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
    sub_24DCC8808();
    sub_24DCC83E8();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v73);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v19, v72);
    goto LABEL_14;
  }
  uint64_t v26 = v25;
  uint64_t v92 = v24;
  unint64_t v93 = 0;
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_24DCD57D0;
  *(void *)(v27 + 32) = v22;
  uint64_t v28 = (void *)*MEMORY[0x263EFFAD0];
  uint64_t v29 = v101;
  if (!*MEMORY[0x263EFFAD0])
  {
    __break(1u);
    return;
  }
  uint64_t v30 = v27;
  uint64_t v31 = (void *)*MEMORY[0x263EFF620];
  *(void *)(v27 + 40) = v28;
  *(void *)(v27 + 48) = v31;
  id v32 = v22;
  id v33 = v31;
  id v34 = v28;
  *(void *)(v30 + 56) = sub_24DCC97B8();
  uint64_t v35 = swift_bridgeObjectRetain();
  sub_24D58F26C(v35);
  swift_bridgeObjectRelease();
  id v36 = objc_msgSend(self, sel_defaultManager);
  uint64_t v37 = (uint64_t)v96;
  uint64_t v38 = (void *)sub_24DCCA0F8();

  swift_bridgeObjectRelease();
  if (!v38)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v56 = (id)fpfs_current_or_default_log();
    unint64_t v57 = v89;
    sub_24DCC9088();
    uint64_t v58 = v97;
    uint64_t v59 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v88, v37, v29);
    BOOL v60 = sub_24DCC9068();
    os_log_type_t v61 = sub_24DCCA128();
    if (os_log_type_enabled(v60, v61))
    {
      unint64_t v62 = (uint8_t *)swift_slowAlloc();
      uint64_t v102 = (char *)swift_slowAlloc();
      v105[0] = (uint64_t)v102;
      *(_DWORD *)unint64_t v62 = 136315138;
      uint64_t v99 = (uint64_t)(v62 + 4);
      uint64_t v63 = (void *)sub_24DCC8948();
      id v64 = objc_msgSend(v63, sel_fp_shortDescription);
      uint64_t v96 = v19;
      id v65 = v64;

      uint64_t v66 = sub_24DCC97E8();
      uint64_t v67 = v29;
      unint64_t v69 = v68;

      uint64_t v109 = sub_24D418FB4(v66, v69, v105);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v88, v67);
      _os_log_impl(&dword_24D3D0000, v60, v61, "Failed to get enumerator for %s", v62, 0xCu);
      uint64_t v70 = v102;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v70, -1, -1);
      MEMORY[0x25332B030](v62, -1, -1);

      (*(void (**)(char *, void *))(v94 + 8))(v89, v95);
      (*(void (**)(char *, uint64_t))(v100 + 8))(v96, v103);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v29);
      (*(void (**)(char *, void *))(v94 + 8))(v57, v95);
      (*(void (**)(char *, uint64_t))(v100 + 8))(v19, v103);
    }
LABEL_14:
    swift_release();
    return;
  }
  os_log_type_t v39 = v93;
  sub_24DBBCAD8(v37, v92, v26, v107);
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v100 + 8))(v19, v103);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  sub_24D589668((uint64_t)v107);
  uint64_t v95 = v26;
  uint64_t v96 = v19;
  sub_24D58F9DC((uint64_t)v107);
  sub_24DCCA0C8();
  sub_24DCC8848();
  if (v106)
  {
    uint64_t v76 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 56);
    char v77 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
    uint64_t v94 = v97 + 32;
    v97 += 8;
    while (1)
    {
      uint64_t v79 = (uint64_t)v98;
      char v80 = swift_dynamicCast();
      int v81 = *v76;
      if (v80)
      {
        v81(v79, 0, 1, v29);
        if ((*v77)(v79, 1, v29) != 1)
        {
          uint64_t v82 = (uint64_t)v87;
          uint64_t v83 = (*(uint64_t (**)(void))v94)();
          uint64_t v84 = (void *)MEMORY[0x253329610](v83);
          sub_24DBBCAD8(v82, v92, v95, v108);
          sub_24D589668((uint64_t)v108);
          sub_24D58F9DC((uint64_t)v108);
          uint64_t v29 = v101;
          (*(void (**)(uint64_t, uint64_t))v97)(v82, v101);
          goto LABEL_21;
        }
      }
      else
      {
        v81(v79, 1, 1, v29);
      }
      sub_24D415F74(v79, (uint64_t *)&unk_26B199050);
LABEL_21:
      sub_24DCC8848();
      uint64_t v78 = v99;
      if (!v106) {
        goto LABEL_26;
      }
    }
  }
  uint64_t v78 = v99;
LABEL_26:

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v102, v78);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v96, v103);
  swift_release();
}

uint64_t sub_24DBBEC00(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = *MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v4 - 8);
  id v49 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24DCC8A58();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v36 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E90);
  unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v44 = *(void *)(v7 + 72);
  uint64_t v14 = v13 + v44;
  unint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_24DCCECE0;
  uint64_t v40 = a2;
  swift_retain();
  sub_24DCC8978();
  if (FPIsCloudDocsWithFPFSEnabled())
  {
    sub_24DCC8978();
    unint64_t v15 = sub_24DA14180(1, 2, 1, v15);
    *(void *)(v15 + 16) = 2;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v14, v12, v6);
  }
  uint64_t v16 = v8;
  uint64_t v17 = v6;
  uint64_t v18 = *(void *)(v15 + 16);
  unint64_t v38 = v15;
  if (v18)
  {
    uint64_t v39 = a1;
    unint64_t v19 = v15 + v13;
    uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
    uint64_t v20 = v16 + 16;
    unint64_t v47 = v21;
    os_log_type_t v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 32);
    uint64_t v42 = (uint64_t (**)(char *, char *, uint64_t))(v20 + 16);
    uint64_t v43 = (void (**)(char *, uint64_t))(v20 - 8);
    swift_bridgeObjectRetain();
    uint64_t v46 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 40);
    v36[1] = (v20 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    id v22 = v49;
    uint64_t v23 = v37;
    uint64_t v41 = v20;
    while (1)
    {
      v47(v22, v19, v17);
      uint64_t v24 = *v46;
      (*v46)(v22, 0, 1, v17);
      if ((*v45)(v22, 1, v17) == 1) {
        break;
      }
      uint64_t v25 = v17;
      uint64_t v26 = (*v42)(v23, v22, v17);
      uint64_t v27 = (void *)MEMORY[0x253329610](v26);
      id v28 = objc_msgSend(self, sel_defaultManager);
      sub_24DCC8A18();
      uint64_t v29 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      unsigned int v30 = objc_msgSend(v28, sel_fileExistsAtPath_, v29);

      if (v30)
      {
        uint64_t v31 = v40;
        swift_retain();
        uint64_t v32 = v31;
        uint64_t v33 = v48;
        sub_24DBBDD4C(v23, v39, v32);
        if (v33)
        {
          (*v43)(v23, v25);
          swift_release();
          return swift_bridgeObjectRelease_n();
        }
        uint64_t v48 = 0;
      }
      uint64_t v17 = v25;
      (*v43)(v23, v25);
      v19 += v44;
      --v18;
      id v22 = v49;
      if (!v18)
      {
        v24(v49, 1, 1, v25);
        break;
      }
    }
  }
  else
  {
    id v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    swift_bridgeObjectRetain();
    v34(v49, 1, 1, v6);
  }
  swift_bridgeObjectRelease_n();
  return swift_release();
}

uint64_t sub_24DBBF0A8(char *a1, uint64_t a2)
{
  uint64_t v159 = a2;
  v165[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v150 = (char *)&v139 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v151 = (char *)&v139 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v153 = (char *)&v139 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v154 = (id *)((char *)&v139 - v11);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unint64_t v148 = (char *)&v139 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v149 = (char *)&v139 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v145 = (char *)&v139 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  id v146 = (char *)&v139 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v143 = (char *)&v139 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v144 = (char *)&v139 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v140 = (uint64_t)&v139 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v139 - v26;
  uint64_t v161 = sub_24DCC8A58();
  uint64_t v160 = *(void *)(v161 - 8);
  MEMORY[0x270FA5388](v161);
  uint64_t v29 = (char *)&v139 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_24DCC9078();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v142 = (char *)&v139 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  os_log_type_t v141 = (char *)&v139 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v155 = (char *)&v139 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v147 = (char *)&v139 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  os_log_t v152 = (uint8_t *)&v139 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v44 = (char *)&v139 - v43;
  MEMORY[0x270FA5388](v42);
  uint64_t v46 = (char *)&v139 - v45;
  id v47 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v48 = sub_24DCC9068();
  os_log_type_t v49 = sub_24DCCA148();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v50 = 0;
    _os_log_impl(&dword_24D3D0000, v48, v49, "Starting backup...", v50, 2u);
    MEMORY[0x25332B030](v50, -1, -1);
  }

  id v51 = *(void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v157 = v30;
  uint64_t v158 = v31 + 8;
  uint64_t v156 = v51;
  v51(v46, v30);
  uint64_t v52 = self;
  id v53 = objc_msgSend(v52, sel_defaultManager);
  uint64_t v54 = (uint64_t)&a1[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_destinationDirectoryURL];
  sub_24DCC8A18();
  uint64_t v55 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  unsigned int v56 = objc_msgSend(v53, sel_fileExistsAtPath_, v55);

  if (v56)
  {
    id v57 = objc_msgSend(v52, sel_defaultManager);
    uint64_t v58 = (void *)sub_24DCC8948();
    v165[0] = 0;
    unsigned int v59 = objc_msgSend(v57, sel_removeItemAtURL_error_, v58, v165);

    if (!v59)
    {
      id v88 = v165[0];
      unint64_t v89 = (void *)sub_24DCC8828();

      swift_willThrow();
      uint64_t v90 = sub_24DCC8A18();
      unint64_t v92 = v91;
      id v93 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      id v94 = v89;
      id v95 = v89;
      swift_bridgeObjectRetain();
      uint64_t v96 = sub_24DCC9068();
      os_log_type_t v97 = sub_24DCCA128();
      if (os_log_type_enabled(v96, v97))
      {
        uint64_t v98 = swift_slowAlloc();
        uint64_t v99 = (void *)swift_slowAlloc();
        uint64_t v100 = (void *)swift_slowAlloc();
        v165[0] = v100;
        *(_DWORD *)uint64_t v98 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v164 = sub_24D418FB4(v90, v92, (uint64_t *)v165);
        sub_24DCCA428();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v98 + 12) = 2112;
        swift_getErrorValue();
        id v101 = sub_24DBA2828(v162);
        uint64_t v164 = (uint64_t)v101;
        sub_24DCCA428();
        *uint64_t v99 = v101;

        _os_log_impl(&dword_24D3D0000, v96, v97, "Unable to delete existing destination directory at %s: %@", (uint8_t *)v98, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v99, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v100, -1, -1);
        MEMORY[0x25332B030](v98, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      v156(v44, v157);
      uint64_t v113 = v161;
      uint64_t v114 = (uint64_t)v150;
      uint64_t v115 = v160;
      uint64_t v27 = v151;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v151, 1, 1, v161);
      sub_24D4FFDB8((uint64_t)v27, v114);
      int v116 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v114, 1, v113);
      id v117 = v89;
      if (v116 == 1)
      {
        uint64_t v118 = 0;
      }
      else
      {
        uint64_t v118 = (void *)sub_24DCC8948();
        (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v114, v113);
      }
      uint64_t v119 = (void *)sub_24DCC8818();
      (*(void (**)(uint64_t, void *, void *))(v159 + 16))(v159, v118, v119);

      uint64_t v109 = v89;
      goto LABEL_24;
    }
    id v60 = v165[0];
  }
  id v61 = objc_msgSend(v52, sel_defaultManager);
  unint64_t v62 = (void *)sub_24DCC8948();
  v165[0] = 0;
  unsigned int v63 = objc_msgSend(v61, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v62, 0, 0, v165);

  id v64 = v165[0];
  if (!v63)
  {
    id v67 = v165[0];
    unint64_t v68 = (void *)sub_24DCC8828();

    swift_willThrow();
    id v69 = (id)fpfs_current_or_default_log();
    uint64_t v70 = v152;
    sub_24DCC9088();
    uint64_t v71 = a1;
    uint64_t v72 = v70;
    uint64_t v73 = v71;
    id v74 = v68;
    id v75 = v73;
    id v76 = v68;
    char v77 = sub_24DCC9068();
    os_log_type_t v78 = sub_24DCCA128();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = swift_slowAlloc();
      uint64_t v151 = (char *)swift_slowAlloc();
      uint64_t v155 = (char *)swift_slowAlloc();
      v165[0] = v155;
      *(_DWORD *)uint64_t v79 = 136315394;
      char v80 = (void *)sub_24DCC8948();
      id v81 = objc_msgSend(v80, sel_fp_shortDescription);

      uint64_t v82 = sub_24DCC97E8();
      unint64_t v84 = v83;

      uint64_t v164 = sub_24D418FB4(v82, v84, (uint64_t *)v165);
      sub_24DCCA428();

      swift_bridgeObjectRelease();
      *(_WORD *)(v79 + 12) = 2112;
      swift_getErrorValue();
      id v85 = sub_24DBA2828(v163);
      uint64_t v164 = (uint64_t)v85;
      sub_24DCCA428();
      uint64_t v86 = v151;
      *(void *)uint64_t v151 = v85;

      _os_log_impl(&dword_24D3D0000, v77, v78, "Unable to create destination directory %s: %@", (uint8_t *)v79, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v86, -1, -1);
      uint64_t v87 = v155;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v87, -1, -1);
      MEMORY[0x25332B030](v79, -1, -1);
    }
    else
    {
    }
    v156((char *)v72, v157);
    uint64_t v102 = v160;
    uint64_t v27 = (char *)v154;
    uint64_t v103 = (uint64_t)v153;
    uint64_t v104 = v161;
    (*(void (**)(id *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v154, 1, 1, v161);
    sub_24D4FFDB8((uint64_t)v27, v103);
    int v105 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v103, 1, v104);
    id v106 = v68;
    if (v105 == 1)
    {
      char v107 = 0;
    }
    else
    {
      char v107 = (void *)sub_24DCC8948();
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v103, v104);
    }
    uint64_t v108 = (void *)sub_24DCC8818();
    (*(void (**)(uint64_t, void *, void *))(v159 + 16))(v159, v107, v108);

    uint64_t v109 = v68;
LABEL_24:

    return sub_24D415F74((uint64_t)v27, (uint64_t *)&unk_26B199050);
  }
  id v65 = *(void (**)(char *, char *, uint64_t))(v160 + 16);
  v65(v29, &a1[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_backupManifestURL], v161);
  type metadata accessor for SQLBackupManifest();
  swift_allocObject();
  id v66 = v64;
  unsigned int v110 = sub_24D587A24(v29);
  uint64_t v111 = (uint64_t)&a1[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_userURL];
  swift_retain();
  sub_24DBBEC00(v111, (uint64_t)v110);
  unsigned __int8 v112 = a1;
  uint64_t v154 = v110;
  swift_release();
  sub_24D58A124();
  sub_24DBBB1EC(v54);
  id v120 = (id)fpfs_current_or_default_log();
  unint64_t v121 = v141;
  sub_24DCC9088();
  id v122 = v112;
  uint64_t v123 = sub_24DCC9068();
  os_log_type_t v124 = sub_24DCCA148();
  int v125 = v124;
  if (os_log_type_enabled(v123, v124))
  {
    LODWORD(v155) = v125;
    uint64_t v126 = (uint8_t *)swift_slowAlloc();
    uint64_t v153 = (char *)swift_slowAlloc();
    v165[0] = v153;
    os_log_t v152 = v126;
    *(_DWORD *)uint64_t v126 = 136315138;
    uint64_t v151 = (char *)(v126 + 4);
    uint64_t v127 = (void *)sub_24DCC8948();
    id v128 = objc_msgSend(v127, sel_fp_shortDescription);

    uint64_t v129 = sub_24DCC97E8();
    unint64_t v131 = v130;

    uint64_t v132 = v161;
    uint64_t v164 = sub_24D418FB4(v129, v131, (uint64_t *)v165);
    sub_24DCCA428();

    swift_bridgeObjectRelease();
    unsigned int v133 = v152;
    _os_log_impl(&dword_24D3D0000, v123, (os_log_type_t)v155, "Calling completion handler with %s", v152, 0xCu);
    id v134 = v153;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v134, -1, -1);
    MEMORY[0x25332B030](v133, -1, -1);

    v156(v141, v157);
    uint64_t v135 = v160;
  }
  else
  {

    v156(v121, v157);
    uint64_t v135 = v160;
    uint64_t v132 = v161;
  }
  v65(v27, (char *)v54, v132);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v135 + 56))(v27, 0, 1, v132);
  uint64_t v137 = v140;
  sub_24D4FFDB8((uint64_t)v27, v140);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v137, 1, v132) == 1)
  {
    uint64_t v138 = 0;
  }
  else
  {
    uint64_t v138 = (void *)sub_24DCC8948();
    (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v137, v132);
  }
  (*(void (**)(uint64_t, void *, void))(v159 + 16))(v159, v138, 0);
  swift_release();

  return sub_24D415F74((uint64_t)v27, (uint64_t *)&unk_26B199050);
}

uint64_t sub_24DBC0A80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24DBC0AC8()
{
  uint64_t v2 = type metadata accessor for FPFeedbackManagerState();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v5);
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v6 + 16))(*(void *)(v0 + 56), *(void *)(v0 + 64), v5, v6);
  if (!v1)
  {
    unint64_t v9 = v8;
    if (v8 >> 60 != 15)
    {
      uint64_t v10 = result;
      sub_24DCC86D8();
      swift_allocObject();
      sub_24D3F9C18(v10, v9);
      sub_24DCC86C8();
      sub_24DBC82B8(&qword_269870CC0, (void (*)(uint64_t))type metadata accessor for FPFeedbackManagerState);
      sub_24DCC86B8();
      uint64_t v11 = v0 + *(void *)(*(void *)v0 + 136);
      swift_beginAccess();
      sub_24DBC80F4((uint64_t)v4, v11);
      swift_endAccess();
      sub_24DBC8074((uint64_t)v4);
      *(unsigned char *)(v0 + 72) = 1;
      sub_24D416034(v10, v9);
      swift_release();
      uint64_t result = sub_24D416034(v10, v9);
    }
    *(unsigned char *)(v0 + 72) = 0;
  }
  return result;
}

uint64_t sub_24DBC0CD0()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v2);
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v3 + 16))(*(void *)(v0 + 56), *(void *)(v0 + 64), v2, v3);
  if (!v1)
  {
    unint64_t v6 = v5;
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = result;
      sub_24DCC86D8();
      swift_allocObject();
      sub_24D3F9C18(v7, v6);
      sub_24DCC86C8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26986F9E8);
      sub_24D3E4A9C(&qword_269870BA8, &qword_26986F9E8);
      sub_24DCC86B8();
      swift_beginAccess();
      *(void *)(v0 + 80) = v8;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v0 + 72) = 1;
      sub_24D416034(v7, v6);
      swift_release();
      uint64_t result = sub_24D416034(v7, v6);
    }
    *(unsigned char *)(v0 + 72) = 0;
  }
  return result;
}

uint64_t sub_24DBC0E6C()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v2);
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v3 + 16))(*(void *)(v0 + 56), *(void *)(v0 + 64), v2, v3);
  if (!v1)
  {
    unint64_t v6 = v5;
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = result;
      sub_24DCC86D8();
      swift_allocObject();
      sub_24D3F9C18(v7, v6);
      sub_24DCC86C8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26986F690);
      sub_24D3E4A9C(&qword_269870D70, &qword_26986F690);
      sub_24DCC86B8();
      swift_beginAccess();
      *(void *)(v0 + 80) = v8;
      *(void *)(v0 + 88) = v9;
      *(void *)(v0 + 96) = v10;
      *(_OWORD *)(v0 + 104) = v11;
      *(unsigned char *)(v0 + 120) = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v0 + 72) = 1;
      sub_24D416034(v7, v6);
      swift_release();
      uint64_t result = sub_24D416034(v7, v6);
    }
    *(unsigned char *)(v0 + 72) = 0;
  }
  return result;
}

uint64_t sub_24DBC10B0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269870E00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DBC9F98();
  sub_24DCCB0D8();
  long long v9 = v3[1];
  long long v12 = *v3;
  long long v13 = v9;
  __int16 v14 = *((_WORD *)v3 + 16);
  v11[15] = 0;
  sub_24D43FD04();
  sub_24DCCACF8();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_24DCCACA8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24DBC1230()
{
  sub_24DCCAFF8();
  long long v3 = *(_OWORD *)(v0 + 16);
  __int16 v4 = *(_WORD *)(v0 + 32);
  sub_24D6D0A84((uint64_t)&v3 + 8, (uint64_t)v5);
  sub_24DCC98F8();
  sub_24DCCB008();
  sub_24D6D0A84((uint64_t)v5, (uint64_t)&v6);
  int v1 = v7;
  switch(v7)
  {
    case 0xFAu:
    case 0xFBu:
    case 0xFCu:
    case 0xFDu:
    case 0xFEu:
      goto LABEL_8;
    default:
      sub_24DCCB008();
      if (v1 == 255)
      {
        sub_24DCCB018();
      }
      else
      {
        sub_24DCCB018();
        if (v1)
        {
          if (v1 == 1)
          {
            sub_24DCCB008();
            sub_24DCCB038();
          }
          else
          {
LABEL_8:
            sub_24DCCB008();
          }
        }
        else
        {
          sub_24DCCB008();
          sub_24DCCB028();
        }
      }
      if (SHIBYTE(v4) == 70)
      {
        sub_24DCCB018();
      }
      else
      {
        sub_24DCCB018();
        sub_24DCCB008();
      }
      sub_24DCC98F8();
      return sub_24DCCB048();
  }
}

uint64_t sub_24DBC140C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269870D68);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DBC93A8();
  sub_24DCCB0D8();
  v12[0] = 0;
  sub_24DCCACA8();
  if (!v2)
  {
    v12[0] = 1;
    sub_24DCCACD8();
    sub_24D6D0A84(v3 + 24, (uint64_t)v14);
    sub_24D6D0A84((uint64_t)v14, (uint64_t)v12);
    char v11 = 2;
    sub_24D81C178();
    sub_24DCCACF8();
    sub_24DBC93FC(v3 + 33, (uint64_t)&v13);
    sub_24DBC93FC((uint64_t)&v13, (uint64_t)v12);
    char v11 = 3;
    sub_24D81C1CC();
    sub_24DCCAC58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24DBC160C()
{
  sub_24D6D0A84(v0 + 24, (uint64_t)v3);
  sub_24DCCAFF8();
  sub_24DCC98F8();
  sub_24DCCB008();
  sub_24D6D0A84((uint64_t)v3, (uint64_t)&v4);
  int v1 = v5;
  switch(v5)
  {
    case 0xFAu:
    case 0xFBu:
    case 0xFCu:
    case 0xFDu:
    case 0xFEu:
      goto LABEL_8;
    default:
      sub_24DCCB008();
      if (v1 == 255)
      {
        sub_24DCCB018();
      }
      else
      {
        sub_24DCCB018();
        if (v1)
        {
          if (v1 == 1)
          {
            sub_24DCCB008();
            sub_24DCCB038();
          }
          else
          {
LABEL_8:
            sub_24DCCB008();
          }
        }
        else
        {
          sub_24DCCB008();
          sub_24DCCB028();
        }
      }
      if (*(unsigned char *)(v0 + 33) == 70)
      {
        sub_24DCCB018();
      }
      else
      {
        sub_24DCCB018();
        sub_24DCCB008();
      }
      return sub_24DCCB048();
  }
}

uint64_t sub_24DBC17C8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269870D50);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DBC9354();
  sub_24DCCB0D8();
  v8[15] = 0;
  sub_24DCCACA8();
  if (!v1)
  {
    v8[14] = 1;
    sub_24DCCACC8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24DBC1944(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269870D30);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DBC9258();
  sub_24DCCB0D8();
  long long v9 = v3[1];
  long long v13 = *v3;
  long long v14 = v9;
  __int16 v15 = *((_WORD *)v3 + 16);
  char v12 = 0;
  sub_24D43FD04();
  sub_24DCCACF8();
  if (!v2)
  {
    long long v13 = *(long long *)((char *)v3 + 40);
    *(void *)&long long v14 = *((void *)v3 + 7);
    char v12 = 1;
    sub_24DBC9300();
    sub_24DCCACF8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24DBC1AE4()
{
  return 0x676E696C706D6173;
}

uint64_t sub_24DBC1B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x676E696C706D6173 && a2 == 0xEE00746C75736552)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24DCCAE28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24DBC1BC4(uint64_t a1)
{
  unint64_t v2 = sub_24DBC9FEC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24DBC1C00(uint64_t a1)
{
  unint64_t v2 = sub_24DBC9FEC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24DBC1C3C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269870DF0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DBC9FEC();
  sub_24DCCB0B8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_24DCCAB78();
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v10;
  return result;
}

uint64_t sub_24DBC1DA0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269870E08);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DBC9FEC();
  sub_24DCCB0D8();
  sub_24DCCACC8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24DBC1ED4()
{
  if (*v0) {
    return 0x6E6F6973726576;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_24DBC1F14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24DBC8430(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24DBC1F3C(uint64_t a1)
{
  unint64_t v2 = sub_24DBC9F98();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24DBC1F78(uint64_t a1)
{
  unint64_t v2 = sub_24DBC9F98();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24DBC1FB4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v2;
  __int16 v10 = *(_WORD *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  long long v5 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v5;
  __int16 v12 = *(_WORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  if (!sub_24DBC7850((uint64_t)v9, (uint64_t)v11)) {
    return 0;
  }
  if (v3 == v6 && v4 == v7) {
    return 1;
  }

  return sub_24DCCAE28();
}

double sub_24DBC206C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24DBC8520(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_24DBC20BC(void *a1)
{
  return sub_24DBC10B0(a1);
}

uint64_t sub_24DBC20D8()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  int v2 = *(char *)(v0 + 33);
  sub_24DCC98F8();
  sub_24DCCB008();
  switch(v1)
  {
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
      goto LABEL_11;
    default:
      sub_24DCCB008();
      if (v1 == 255)
      {
        sub_24DCCB018();
        if (v2 == 70) {
          goto LABEL_12;
        }
LABEL_10:
        sub_24DCCB018();
        sub_24DCCB008();
        goto LABEL_13;
      }
      sub_24DCCB018();
      if (v1)
      {
        if (v1 == 1)
        {
          sub_24DCCB008();
          sub_24DCCB038();
          if (v2 == 70) {
            goto LABEL_12;
          }
          goto LABEL_10;
        }
LABEL_11:
        sub_24DCCB008();
        if (v2 != 70) {
          goto LABEL_10;
        }
      }
      else
      {
        sub_24DCCB008();
        sub_24DCCB028();
        if (v2 != 70) {
          goto LABEL_10;
        }
      }
LABEL_12:
      sub_24DCCB018();
LABEL_13:
      return sub_24DCC98F8();
  }
}

uint64_t sub_24DBC225C()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  int v2 = *(char *)(v0 + 33);
  sub_24DCCAFF8();
  sub_24DCC98F8();
  sub_24DCCB008();
  switch(v1)
  {
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
      goto LABEL_8;
    default:
      sub_24DCCB008();
      if (v1 == 255)
      {
        sub_24DCCB018();
      }
      else
      {
        sub_24DCCB018();
        if (v1)
        {
          if (v1 == 1)
          {
            sub_24DCCB008();
            sub_24DCCB038();
          }
          else
          {
LABEL_8:
            sub_24DCCB008();
          }
        }
        else
        {
          sub_24DCCB008();
          sub_24DCCB028();
        }
      }
      sub_24DCCB018();
      if (v2 != 70) {
        sub_24DCCB008();
      }
      sub_24DCC98F8();
      return sub_24DCCB048();
  }
}

uint64_t sub_24DBC2420()
{
  uint64_t result = 0x6D6F44726F727265;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x646F43726F727265;
      break;
    case 2:
      uint64_t result = 0x726944726F727265;
      break;
    case 3:
      uint64_t result = 0x65646F43626F6ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24DBC24C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24DBC877C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24DBC24F0(uint64_t a1)
{
  unint64_t v2 = sub_24DBC93A8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24DBC252C(uint64_t a1)
{
  unint64_t v2 = sub_24DBC93A8();

  return MEMORY[0x270FA00B8](a1, v2);
}

BOOL sub_24DBC2568(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  __int16 v6 = *(_WORD *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  __int16 v8 = *(_WORD *)(a2 + 32);
  return sub_24DBC7850((uint64_t)v5, (uint64_t)v7);
}

double sub_24DBC25B4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24DBC8980(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_WORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_24DBC25FC(void *a1)
{
  return sub_24DBC140C(a1);
}

uint64_t sub_24DBC2638()
{
  return sub_24DBC160C();
}

uint64_t sub_24DBC2674()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  int v2 = *(char *)(v0 + 33);
  sub_24DCC98F8();
  sub_24DCCB008();
  switch(v1)
  {
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
      goto LABEL_11;
    default:
      sub_24DCCB008();
      if (v1 == 255)
      {
        sub_24DCCB018();
        if (v2 == 70) {
          return sub_24DCCB018();
        }
LABEL_10:
        sub_24DCCB018();
        return sub_24DCCB008();
      }
      sub_24DCCB018();
      if (v1)
      {
        if (v1 == 1)
        {
          sub_24DCCB008();
          sub_24DCCB038();
          if (v2 == 70) {
            return sub_24DCCB018();
          }
          goto LABEL_10;
        }
LABEL_11:
        sub_24DCCB008();
        if (v2 != 70) {
          goto LABEL_10;
        }
      }
      else
      {
        sub_24DCCB008();
        sub_24DCCB028();
        if (v2 != 70) {
          goto LABEL_10;
        }
      }
      return sub_24DCCB018();
  }
}

uint64_t sub_24DBC27D0()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  int v2 = *(char *)(v0 + 33);
  sub_24DCCAFF8();
  sub_24DCC98F8();
  sub_24DCCB008();
  switch(v1)
  {
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
      goto LABEL_8;
    default:
      sub_24DCCB008();
      if (v1 == 255)
      {
        sub_24DCCB018();
      }
      else
      {
        sub_24DCCB018();
        if (v1)
        {
          if (v1 == 1)
          {
            sub_24DCCB008();
            sub_24DCCB038();
          }
          else
          {
LABEL_8:
            sub_24DCCB008();
          }
        }
        else
        {
          sub_24DCCB008();
          sub_24DCCB028();
        }
      }
      sub_24DCCB018();
      if (v2 != 70) {
        sub_24DCCB008();
      }
      return sub_24DCCB048();
  }
}

uint64_t sub_24DBC2978()
{
  if (*v0) {
    return 0x676E696C706D6173;
  }
  else {
    return 0x6E6F6973726576;
  }
}

uint64_t sub_24DBC29BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24DBC8C14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24DBC29E4(uint64_t a1)
{
  unint64_t v2 = sub_24DBC9354();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24DBC2A20(uint64_t a1)
{
  unint64_t v2 = sub_24DBC9354();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_24DBC2A5C(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v6 = sub_24DBC8D20(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(double *)(a2 + 16) = v6;
  }
}

uint64_t sub_24DBC2A8C(void *a1)
{
  return sub_24DBC17C8(a1);
}

unint64_t sub_24DBC2AAC()
{
  if (*v0) {
    return 0xD000000000000015;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_24DBC2AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24DBC8F10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24DBC2B18(uint64_t a1)
{
  unint64_t v2 = sub_24DBC9258();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24DBC2B54(uint64_t a1)
{
  unint64_t v2 = sub_24DBC9258();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_24DBC2B90@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_24DBC8FFC(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_24DBC2BD4(void *a1)
{
  return sub_24DBC1944(a1);
}

uint64_t sub_24DBC2BEC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v4 - 8);
  long long v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24DCC8CE8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  __int16 v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D502A50(v2, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_24D419088((uint64_t)v6);
    uint64_t v11 = a1[3];
    uint64_t v12 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v11);
    sub_24D90FFEC(0xD00000000000001FLL, 0x800000024DD22A00, v11, v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v13 = a1[3];
    uint64_t v14 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v13);
    uint64_t v23 = 0;
    uint64_t v24 = 0xE000000000000000;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    uint64_t v23 = 0xD00000000000001CLL;
    uint64_t v24 = 0x800000024DD22A60;
    sub_24DBC82B8((unint64_t *)&unk_26B192340, MEMORY[0x263F07490]);
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24D90FFEC(v23, v24, v13, v14);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v15 = *(void *)(*(void *)(v2 + *(int *)(type metadata accessor for FPFeedbackManagerState() + 20)) + 16);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  if (!v15) {
    return sub_24D90FFEC(0xD000000000000018, 0x800000024DD22A40, v16, v17);
  }
  sub_24D90FFEC(0xD000000000000012, 0x800000024DD22A20, v16, v17);
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  uint64_t v20 = __swift_project_boxed_opaque_existential_1(a1, v18);
  MEMORY[0x270FA5388](v20);
  *(&v22 - 2) = v2;
  return sub_24D9100BC(8224, 0xE200000000000000, (void (*)(void *))sub_24DBC80D0, (uint64_t)(&v22 - 4), v18, MEMORY[0x263F8EE60] + 8, v19);
}

uint64_t sub_24DBC2F70()
{
  type metadata accessor for FPFeedbackManagerState();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_24DBC7A9C(v0, (void (*)(_OWORD *, double))sub_24DBC80EC);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24DBC2FF4(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[3];
  uint64_t v3 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v2);
  sub_24DCC9968();
  sub_24DCCA948();
  sub_24DCC9968();
  sub_24DCCA948();
  sub_24D90FFEC(0, 0xE000000000000000, v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24DBC30F8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269870CF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DBC8158();
  sub_24DCCB0D8();
  char v12 = 0;
  sub_24DCC8CE8();
  sub_24DBC82B8(&qword_26986BC68, MEMORY[0x263F07490]);
  sub_24DCCAC58();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + *(int *)(type metadata accessor for FPFeedbackManagerState() + 20));
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269870CD8);
    sub_24DBC8300(&qword_269870D00, (void (*)(void))sub_24DBC8388, (void (*)(void))sub_24DBC83DC);
    sub_24DCCACF8();
    v10[14] = 2;
    sub_24DCCAC98();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24DBC334C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v32 = (uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269870CC8);
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FPFeedbackManagerState();
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  __int16 v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC8CE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = *(int *)(v8 + 28);
  *(void *)&v10[v12] = sub_24D428E40(MEMORY[0x263F8EE78]);
  uint64_t v13 = &v10[*(int *)(v8 + 32)];
  *(void *)uint64_t v13 = 0;
  v13[8] = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DBC8158();
  uint64_t v30 = v6;
  uint64_t v14 = v33;
  sub_24DCCB0B8();
  if (v14)
  {
    uint64_t v24 = (uint64_t)a1;
  }
  else
  {
    uint64_t v26 = (uint64_t *)v13;
    uint64_t v27 = v12;
    uint64_t v33 = a1;
    uint64_t v15 = v29;
    char v37 = 0;
    sub_24DBC82B8(&qword_26986BCA0, MEMORY[0x263F07490]);
    uint64_t v16 = v30;
    sub_24DCCAB08();
    sub_24D4190E8(v32, (uint64_t)v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269870CD8);
    char v36 = 1;
    sub_24DBC8300(&qword_269870CE0, (void (*)(void))sub_24DBC81AC, (void (*)(void))sub_24DBC8200);
    sub_24DCCAB98();
    uint64_t v18 = v34;
    uint64_t v19 = v27;
    swift_bridgeObjectRelease();
    *(void *)&v10[v19] = v18;
    char v35 = 2;
    uint64_t v20 = sub_24DCCAB48();
    char v22 = v21;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v16, v31);
    uint64_t v23 = v26;
    *uint64_t v26 = v20;
    *((unsigned char *)v23 + 8) = v22 & 1;
    sub_24DBC8254((uint64_t)v10, v28);
    uint64_t v24 = (uint64_t)v33;
  }
  __swift_destroy_boxed_opaque_existential_1(v24);
  return sub_24DBC8074((uint64_t)v10);
}

unint64_t sub_24DBC371C()
{
  unint64_t v1 = 0x676E696C706D6173;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000001ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000018;
  }
}

uint64_t sub_24DBC3788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24DBC9E24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24DBC37B0(uint64_t a1)
{
  unint64_t v2 = sub_24DBC8158();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24DBC37EC(uint64_t a1)
{
  unint64_t v2 = sub_24DBC8158();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24DBC3828@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24DBC334C(a1, a2);
}

uint64_t sub_24DBC3840(void *a1)
{
  return sub_24DBC30F8(a1);
}

unint64_t sub_24DBC3858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24DCC8CE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 1, 1, v4);
  uint64_t v5 = *(int *)(a1 + 20);
  unint64_t result = sub_24D428E40(MEMORY[0x263F8EE78]);
  *(void *)(a2 + v5) = result;
  uint64_t v7 = a2 + *(int *)(a1 + 24);
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  return result;
}

uint64_t type metadata accessor for RandomSampling()
{
  return self;
}

uint64_t sub_24DBC3910()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24DBC3978()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24DCC8CE8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = type metadata accessor for FPFeedbackManagerState();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v0 + 112);
  sub_24DBC0AC8();
  if (!v1)
  {
    uint64_t v17 = v15 + *(void *)(*(void *)v15 + 136);
    swift_beginAccess();
    sub_24DBC8254(v17, (uint64_t)v14);
    sub_24D502A50((uint64_t)v14, (uint64_t)v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_24DBC8074((uint64_t)v14);
      sub_24D419088((uint64_t)v4);
      char v16 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
      sub_24DCC8CB8();
      char v18 = sub_24DCC8C48();
      uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
      v19(v9, v5);
      v19(v11, v5);
      sub_24DBC8074((uint64_t)v14);
      char v16 = v18 ^ 1;
    }
  }
  return v16 & 1;
}

uint64_t sub_24DBC3BF0(uint64_t a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(unsigned char **)(v1 + 112);
  uint64_t result = sub_24DBC0AC8();
  if (!v2)
  {
    uint64_t v9 = sub_24DCC8CE8();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v6, a1, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    uint64_t v11 = (uint64_t)&v7[*(void *)(*(void *)v7 + 136)];
    swift_beginAccess();
    sub_24D4190E8((uint64_t)v6, v11);
    swift_endAccess();
    v7[72] = 1;
    return sub_24D8505CC();
  }
  return result;
}

uint64_t sub_24DBC3D74(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  unsigned char v3[16] = a1;
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = sub_24DCC8DE8();
  v3[19] = v5;
  v3[20] = *(void *)(v5 - 8);
  v3[21] = swift_task_alloc();
  uint64_t v6 = sub_24DCC8DF8();
  v3[22] = v6;
  v3[23] = *(void *)(v6 - 8);
  v3[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  uint64_t v7 = sub_24DCC8CE8();
  v3[27] = v7;
  v3[28] = *(void *)(v7 - 8);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  v3[33] = v4[12];
  v3[34] = v4[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[35] = v4[13];
  v3[36] = v4[11];
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = swift_getAssociatedConformanceWitness();
  v3[2] = AssociatedTypeWitness;
  v3[3] = v9;
  v3[4] = AssociatedConformanceWitness;
  v3[5] = v11;
  v3[37] = type metadata accessor for ReconciliationID();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v3[38] = TupleTypeMetadata3;
  uint64_t v13 = sub_24DCCA3F8();
  v3[39] = v13;
  v3[40] = *(void *)(v13 - 8);
  v3[41] = swift_task_alloc();
  v3[42] = *(void *)(TupleTypeMetadata3 - 8);
  v3[43] = swift_task_alloc();
  v3[44] = swift_task_alloc();
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24DBC4180, v2, 0);
}

uint64_t sub_24DBC4180()
{
  if (!fpfs_supports_tap_to_feedback())
  {
    *(void *)(v0 + 104) = *(void *)(v0 + 128);
    uint64_t v3 = *(void *)(v0 + 288);
    uint64_t v2 = *(void *)(v0 + 296);
    uint64_t v5 = *(void *)(v0 + 272);
    uint64_t v4 = *(void *)(v0 + 280);
    uint64_t v6 = *(void *)(v0 + 264);
    uint64_t v7 = (void *)swift_task_alloc();
    _OWORD v7[2] = v5;
    v7[3] = v3;
    v7[4] = v6;
    v7[5] = v4;
    swift_getTupleTypeMetadata3();
    uint64_t v8 = sub_24DCC9D48();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v96 = sub_24D7854B0((void (*)(char *, char *))sub_24DBCA428, (uint64_t)v7, v8, v2, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v10);
    swift_task_dealloc();
    int v11 = 10;
LABEL_4:
    unsigned int v88 = v11;
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void, uint64_t))(v0 + 8);
    return v12(v88, v96);
  }
  char v1 = sub_24DBC3978();
  uint64_t v15 = *(void *)(v0 + 288);
  uint64_t v14 = *(void *)(v0 + 296);
  uint64_t v16 = *(void *)(v0 + 272);
  uint64_t v17 = *(void *)(v0 + 280);
  uint64_t v18 = *(void *)(v0 + 264);
  if (v1)
  {
    *(void *)(v0 + 120) = *(void *)(v0 + 128);
    uint64_t v19 = (void *)swift_task_alloc();
    v19[2] = v16;
    v19[3] = v15;
    v19[4] = v18;
    v19[5] = v17;
    swift_getTupleTypeMetadata3();
    uint64_t v20 = sub_24DCC9D48();
    uint64_t v21 = swift_getWitnessTable();
    uint64_t v96 = sub_24D7854B0((void (*)(char *, char *))sub_24DBC9534, (uint64_t)v19, v20, v14, MEMORY[0x263F8E628], v21, MEMORY[0x263F8E658], v22);
    swift_task_dealloc();
    unsigned int v88 = 0;
    goto LABEL_5;
  }
  uint64_t v23 = *(void *)(v0 + 144);
  *(void *)(v0 + 72) = *(void *)(v0 + 128);
  uint64_t v24 = (void *)swift_task_alloc();
  v24[2] = v16;
  v24[3] = v15;
  _OWORD v24[4] = v18;
  v24[5] = v17;
  v24[6] = sub_24DBC9464;
  v24[7] = v23;
  swift_getTupleTypeMetadata3();
  uint64_t v25 = sub_24DCC9D48();
  swift_getWitnessTable();
  uint64_t v26 = sub_24DCC9AA8();
  *(void *)(v0 + 376) = v26;
  uint64_t v92 = *(void *)(v0 + 336);
  uint64_t v89 = *(void *)(v0 + 328);
  uint64_t v83 = *(void *)(v0 + 304);
  uint64_t v27 = *(void *)(v0 + 280);
  uint64_t v28 = *(void *)(v0 + 288);
  uint64_t v95 = v25;
  uint64_t v29 = *(void *)(v0 + 264);
  uint64_t v30 = *(void *)(v0 + 272);
  uint64_t v31 = *(void *)(v0 + 128);
  uint64_t v32 = v26;
  swift_task_dealloc();
  *(void *)(v0 + 80) = v31;
  uint64_t v33 = (void *)swift_task_alloc();
  v33[2] = v30;
  void v33[3] = v28;
  v33[4] = v29;
  v33[5] = v27;
  uint64_t v96 = v32;
  v33[6] = v32;
  uint64_t v34 = (void *)swift_task_alloc();
  v34[2] = v30;
  v34[3] = v28;
  v34[4] = v29;
  v34[5] = v27;
  v34[6] = sub_24DBC94AC;
  v34[7] = v33;
  uint64_t v35 = sub_24DCC9AA8();
  *(void *)(v0 + 384) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)(v0 + 88) = v35;
  sub_24DCC9D48();
  swift_getWitnessTable();
  sub_24DCC9FD8();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v89, 1, v83) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 320) + 8))(*(void *)(v0 + 328), *(void *)(v0 + 312));
    int v11 = 3;
    goto LABEL_4;
  }
  uint64_t v36 = *(void *)(v0 + 368);
  uint64_t v37 = *(void *)(v0 + 328);
  uint64_t v38 = *(void *)(v0 + 304);
  uint64_t v39 = *(void *)(v0 + 144);
  uint64_t v40 = *(int *)(v38 + 48);
  uint64_t v41 = v36 + v40;
  uint64_t v42 = *(int *)(v38 + 64);
  uint64_t v43 = (uint64_t *)(v36 + v42);
  uint64_t v44 = (uint64_t *)(v37 + v40);
  uint64_t v45 = (uint64_t *)(v37 + v42);
  uint64_t v46 = *(void *)(*(void *)(v0 + 296) - 8);
  *(void *)(v0 + 392) = v46;
  (*(void (**)(void))(v46 + 32))();
  uint64_t v47 = *v44;
  *(void *)(v0 + 400) = *v44;
  uint64_t v48 = v44[1];
  *(void *)(v0 + 408) = v48;
  uint64_t v49 = v44[2];
  *(void *)(v0 + 416) = v49;
  uint64_t v50 = v44[3];
  *(void *)(v0 + 424) = v50;
  char v51 = *((unsigned char *)v44 + 32);
  *(unsigned char *)(v0 + 552) = v51;
  char v52 = *((unsigned char *)v44 + 33);
  *(unsigned char *)(v0 + 553) = v52;
  uint64_t v53 = v44[5];
  *(void *)(v0 + 432) = v53;
  uint64_t v54 = v44[6];
  *(void *)(v0 + 440) = v54;
  uint64_t v55 = v44[7];
  *(void *)(v0 + 448) = v55;
  *(void *)uint64_t v41 = v47;
  *(void *)(v41 + 8) = v48;
  *(void *)(v41 + 16) = v49;
  *(void *)(v41 + 24) = v50;
  *(unsigned char *)(v41 + 32) = v51;
  *(unsigned char *)(v41 + 33) = v52;
  *(void *)(v41 + 40) = v53;
  *(void *)(v41 + 48) = v54;
  *(void *)(v41 + 56) = v55;
  uint64_t v56 = *v45;
  *(void *)(v0 + 456) = *v45;
  uint64_t v57 = v45[1];
  *(void *)(v0 + 464) = v57;
  *uint64_t v43 = v56;
  v43[1] = v57;
  LOBYTE(v39) = *(unsigned char *)(v39 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v39 & 1) == 0 && !fp_shouldObfuscateFilenames())
  {
    uint64_t v94 = *(void *)(v0 + 368);
    uint64_t v73 = *(void *)(v0 + 336);
    uint64_t v91 = *(void *)(v0 + 304);
    uint64_t v74 = *(void *)(v0 + 288);
    uint64_t v75 = *(void *)(v0 + 272);
    uint64_t v85 = *(void *)(v0 + 280);
    uint64_t v87 = *(void *)(v0 + 296);
    uint64_t v76 = *(void *)(v0 + 264);
    uint64_t v77 = *(void *)(v0 + 128);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 96) = v77;
    os_log_type_t v78 = (void *)swift_task_alloc();
    v78[2] = v75;
    v78[3] = v74;
    v78[4] = v76;
    v78[5] = v85;
    uint64_t v79 = swift_getWitnessTable();
    uint64_t v96 = sub_24D7854B0((void (*)(char *, char *))sub_24DBCA428, (uint64_t)v78, v95, v87, MEMORY[0x263F8E628], v79, MEMORY[0x263F8E658], v80);
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v94, v91);
    swift_task_dealloc();
    int v11 = 11;
    goto LABEL_4;
  }
  uint64_t v58 = *(void *)(v0 + 144);
  if (*(unsigned char *)(v58 + 161))
  {
    uint64_t v93 = *(void *)(v0 + 368);
    uint64_t v59 = *(void *)(v0 + 336);
    uint64_t v90 = *(void *)(v0 + 304);
    uint64_t v60 = *(void *)(v0 + 288);
    uint64_t v61 = *(void *)(v0 + 272);
    uint64_t v84 = *(void *)(v0 + 280);
    uint64_t v86 = *(void *)(v0 + 296);
    uint64_t v62 = *(void *)(v0 + 264);
    uint64_t v63 = *(void *)(v0 + 128);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 112) = v63;
    id v64 = (void *)swift_task_alloc();
    v64[2] = v61;
    v64[3] = v60;
    v64[4] = v62;
    v64[5] = v84;
    uint64_t v65 = swift_getWitnessTable();
    uint64_t v96 = sub_24D7854B0((void (*)(char *, char *))sub_24DBCA428, (uint64_t)v64, v95, v86, MEMORY[0x263F8E628], v65, MEMORY[0x263F8E658], v66);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v93, v90);
    swift_task_dealloc();
    int v11 = 5;
    goto LABEL_4;
  }
  uint64_t v67 = *(void *)(v58 + 112);
  *(void *)(v0 + 472) = v67;
  uint64_t v68 = *(void *)(*(void *)v67 + 136);
  *(void *)(v0 + 480) = v68;
  uint64_t v69 = v67 + v68;
  swift_beginAccess();
  uint64_t v70 = type metadata accessor for FPFeedbackManagerState();
  *(void *)(v0 + 488) = v70;
  uint64_t v71 = v69 + *(int *)(v70 + 24);
  char v72 = (*(unsigned char *)(v71 + 8) & 1) == 0 && *(void *)v71 > 2uLL;
  id v81 = *(void **)(v0 + 136);
  *(unsigned char *)(v58 + 161) = 1;
  __swift_project_boxed_opaque_existential_1(v81, v81[3]);
  uint64_t v82 = (void *)swift_task_alloc();
  *(void *)(v0 + 496) = v82;
  void *v82 = v0;
  v82[1] = sub_24DBC4B3C;
  return sub_24D4281C4(v56, v57, v72);
}

uint64_t sub_24DBC4B3C(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 144);
  *(unsigned char *)(*(void *)v1 + 554) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24DBC4C54, v2, 0);
}

uint64_t sub_24DBC4C54()
{
  int v1 = *(unsigned __int8 *)(v0 + 554);
  uint64_t v2 = *(void *)(v0 + 488);
  *(unsigned char *)(*(void *)(v0 + 144) + 161) = 0;
  uint64_t v3 = *(int *)(v2 + 24);
  uint64_t v5 = *(void *)(v0 + 472);
  uint64_t v4 = *(void *)(v0 + 480);
  if (v1 == 1)
  {
    uint64_t v6 = (uint64_t *)(v5 + v4 + v3);
    if (v6[1])
    {
      uint64_t v7 = 1;
    }
    else
    {
      uint64_t v8 = *v6;
      BOOL v9 = __CFADD__(v8, 1);
      uint64_t v7 = v8 + 1;
      if (v9)
      {
        __break(1u);
        JUMPOUT(0x24DBC57A8);
      }
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v10 = *(void *)(v0 + 384);
  uint64_t v11 = v5 + v4 + v3;
  *(void *)uint64_t v11 = v7;
  *(unsigned char *)(v11 + 8) = 0;
  *(unsigned char *)(v5 + 72) = 1;
  sub_24D8505CC();
  if (v10)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 336) + 8))(*(void *)(v0 + 368), *(void *)(v0 + 304));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  else
  {
    switch(*(unsigned char *)(v0 + 554))
    {
      case 1:
      case 3:
      case 4:
      case 5:
        uint64_t v14 = *(void *)(v0 + 480);
        uint64_t v15 = *(void *)(v0 + 488);
        uint64_t v16 = *(void *)(v0 + 472);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v17 = v16 + v14 + *(int *)(v15 + 24);
        if ((*(unsigned char *)(v17 + 8) & 1) != 0 || *(void *)v17 != 1) {
          uint64_t v18 = &selRef_spsFeedbackBackoffAfterOtherResponses_MultipleAttempts_InSeconds;
        }
        else {
          uint64_t v18 = &selRef_spsFeedbackBackoffAfterOtherResponsesInSeconds;
        }
        uint64_t v19 = *(void *)(v0 + 240);
        uint64_t v20 = *(void *)(v0 + 224);
        uint64_t v21 = *(void *)(v0 + 208);
        uint64_t v22 = *(void *)(v0 + 192);
        uint64_t v88 = *(void *)(v0 + 216);
        uint64_t v92 = *(void *)(v0 + 184);
        uint64_t v23 = *(void *)(v0 + 168);
        uint64_t v94 = *(void *)(v0 + 176);
        uint64_t v24 = *(void *)(v0 + 152);
        uint64_t v25 = *(void *)(v0 + 160);
        id v26 = objc_msgSend(self, sel_defaultStore);
        [v26 *v18];

        sub_24DCC8DD8();
        (*(void (**)(uint64_t, void, uint64_t))(v25 + 104))(v23, *MEMORY[0x263F078C8], v24);
        sub_24DCC8CB8();
        sub_24DCC8DC8();
        uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
        v27(v19, v88);
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
        (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v22, v94);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v21, 1, v88) == 1)
        {
          uint64_t v28 = *(void *)(v0 + 368);
          uint64_t v29 = *(void *)(v0 + 336);
          uint64_t v30 = *(void *)(v0 + 304);
          uint64_t v31 = *(void *)(v0 + 208);
          swift_bridgeObjectRelease();
          sub_24D419088(v31);
          uint64_t v89 = sub_24DCC9C98();
          (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
          goto LABEL_17;
        }
        uint64_t v33 = *(void *)(v0 + 248);
        (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 224) + 32))(v33, *(void *)(v0 + 208), *(void *)(v0 + 216));
        sub_24DBC3BF0(v33);
        uint64_t v48 = *(void *)(v0 + 368);
        uint64_t v49 = *(void *)(v0 + 336);
        uint64_t v50 = *(void *)(v0 + 304);
        v27(*(void *)(v0 + 248), *(void *)(v0 + 216));
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
        uint64_t v89 = *(void *)(v0 + 376);
        int v32 = 7;
        goto LABEL_23;
      case 2:
        uint64_t v44 = *(void *)(v0 + 256);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24DCC8C08();
        sub_24DBC3BF0(v44);
        uint64_t v45 = *(void *)(v0 + 368);
        uint64_t v46 = *(void *)(v0 + 336);
        uint64_t v47 = *(void *)(v0 + 304);
        (*(void (**)(void, void))(*(void *)(v0 + 224) + 8))(*(void *)(v0 + 256), *(void *)(v0 + 216));
        uint64_t v89 = sub_24DCC9C98();
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
        int v32 = 8;
        goto LABEL_23;
      default:
        uint64_t v34 = *(void *)(v0 + 240);
        uint64_t v35 = *(void *)(v0 + 224);
        uint64_t v36 = *(void *)(v0 + 192);
        uint64_t v37 = *(void *)(v0 + 200);
        uint64_t v90 = *(void *)(v0 + 216);
        uint64_t v93 = *(void *)(v0 + 184);
        uint64_t v38 = *(void *)(v0 + 168);
        uint64_t v95 = *(void *)(v0 + 176);
        uint64_t v39 = *(void *)(v0 + 152);
        uint64_t v40 = *(void *)(v0 + 160);
        id v41 = objc_msgSend(self, sel_defaultStore);
        objc_msgSend(v41, sel_spsFeedbackBackoffAfterSayingYesInSeconds);

        sub_24DCC8DD8();
        (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))(v38, *MEMORY[0x263F078C8], v39);
        sub_24DCC8CB8();
        sub_24DCC8DC8();
        uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
        *(void *)(v0 + 504) = v42;
        *(void *)(v0 + 512) = (v35 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v42(v34, v90);
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
        (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v36, v95);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v37, 1, v90) == 1)
        {
          uint64_t v43 = *(void *)(v0 + 200);
          (*(void (**)(void, void))(*(void *)(v0 + 336) + 8))(*(void *)(v0 + 368), *(void *)(v0 + 304));
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24D419088(v43);
          uint64_t v89 = *(void *)(v0 + 376);
LABEL_17:
          int v32 = 4;
LABEL_23:
          unsigned int v86 = v32;
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v53 = *(uint64_t (**)(void, uint64_t))(v0 + 8);
          uint64_t result = v53(v86, v89);
        }
        else
        {
          uint64_t v51 = *(void *)(v0 + 232);
          (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 224) + 32))(v51, *(void *)(v0 + 200), *(void *)(v0 + 216));
          sub_24DBC3BF0(v51);
          uint64_t v52 = *(void *)(v0 + 464);
          uint64_t v85 = *(void *)(v0 + 456);
          uint64_t v54 = *(void *)(v0 + 448);
          uint64_t v55 = *(void *)(v0 + 432);
          uint64_t v82 = *(void *)(v0 + 440);
          char v84 = *(unsigned char *)(v0 + 553);
          char v56 = *(unsigned char *)(v0 + 552);
          uint64_t v58 = *(void *)(v0 + 416);
          uint64_t v57 = *(void *)(v0 + 424);
          uint64_t v60 = *(void *)(v0 + 400);
          uint64_t v59 = *(void *)(v0 + 408);
          uint64_t v80 = v59;
          uint64_t v96 = *(void *)(v0 + 392);
          uint64_t v91 = *(void *)(v0 + 368);
          uint64_t v75 = *(void *)(v0 + 360);
          uint64_t v81 = *(void *)(v0 + 352);
          uint64_t v61 = *(void *)(v0 + 304);
          uint64_t v83 = *(void *)(v0 + 296);
          os_log_type_t v78 = *(void **)(v0 + 136);
          uint64_t v79 = *(void *)(v0 + 344);
          uint64_t v62 = v75 + *(int *)(v61 + 48);
          uint64_t v76 = (void *)(v75 + *(int *)(v61 + 64));
          uint64_t v87 = *(void (**)(void))(v96 + 16);
          v87();
          *(void *)uint64_t v62 = v60;
          *(void *)(v62 + 8) = v59;
          *(void *)(v62 + 16) = v58;
          *(void *)(v62 + 24) = v57;
          *(unsigned char *)(v62 + 32) = v56;
          *(unsigned char *)(v62 + 33) = v84;
          *(void *)(v62 + 40) = v55;
          *(void *)(v62 + 48) = v82;
          *(void *)(v62 + 56) = v54;
          *uint64_t v76 = v85;
          v76[1] = v52;
          uint64_t v74 = v61;
          uint64_t v63 = v81 + *(int *)(v61 + 48);
          id v64 = (void *)(v81 + *(int *)(v61 + 64));
          v87();
          *(void *)uint64_t v63 = v60;
          *(void *)(v63 + 8) = v59;
          *(void *)(v63 + 16) = v58;
          *(void *)(v63 + 24) = v57;
          *(unsigned char *)(v63 + 32) = v56;
          *(unsigned char *)(v63 + 33) = v84;
          *(void *)(v63 + 40) = v55;
          *(void *)(v63 + 48) = v82;
          *(void *)(v63 + 56) = v54;
          *id v64 = v85;
          v64[1] = v52;
          id v65 = objc_allocWithZone(MEMORY[0x263F087E8]);
          swift_bridgeObjectRetain();
          uint64_t v66 = (void *)sub_24DCC97B8();
          swift_bridgeObjectRelease();
          id v77 = objc_msgSend(v65, sel_initWithDomain_code_userInfo_, v66, v58, 0);
          *(void *)(v0 + 520) = v77;

          uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
          v67(v81, v83);
          v67(v75, v83);
          __swift_project_boxed_opaque_existential_1(v78, v78[3]);
          uint64_t v68 = v79 + *(int *)(v74 + 48);
          uint64_t v69 = (void *)(v79 + *(int *)(v74 + 64));
          ((void (*)(uint64_t, uint64_t, uint64_t))v87)(v79, v91, v83);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)uint64_t v68 = v60;
          *(void *)(v68 + 8) = v80;
          *(void *)(v68 + 16) = v58;
          *(void *)(v68 + 24) = v57;
          *(unsigned char *)(v68 + 32) = v56;
          *(unsigned char *)(v68 + 33) = v84;
          *(void *)(v68 + 40) = v55;
          *(void *)(v68 + 48) = v82;
          *(void *)(v68 + 56) = v54;
          void *v69 = v85;
          v69[1] = v52;
          uint64_t v70 = sub_24D95FA80(v83);
          uint64_t v72 = v71;
          *(void *)(v0 + 528) = v71;
          v67(v79, v83);
          uint64_t v73 = (void *)swift_task_alloc();
          *(void *)(v0 + 536) = v73;
          *uint64_t v73 = v0;
          v73[1] = sub_24DBC57C0;
          uint64_t result = sub_24D42BD90(v70, v72, (uint64_t)v77);
        }
        break;
    }
  }
  return result;
}

uint64_t sub_24DBC57C0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 544) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 144);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_24DBC5A70;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 144);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_24DBC5918;
    uint64_t v5 = v6;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_24DBC5918()
{
  int v1 = *(void (**)(uint64_t, uint64_t))(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 216);

  v1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v9 = *(void *)(v0 + 376);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v7(6, v9);
}

uint64_t sub_24DBC5A70()
{
  int v1 = *(void (**)(uint64_t, uint64_t))(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 216);

  v1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_24DBC5BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v6;
  __int16 v15 = *(_WORD *)(a2 + 32);
  uint64_t result = sub_24DB4BF08((uint64_t)v14, *(void *)(a2 + 40), *(void *)(a2 + 48), *(double *)(a2 + 56));
  if (!v3)
  {
    char v8 = result;
    uint64_t v13 = a1;
    uint64_t v16 = a3;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    uint64_t v9 = v16;
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    if (v8)
    {
      uint64_t v10 = type metadata accessor for ReconciliationID();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    }
    else
    {
      uint64_t v11 = type metadata accessor for ReconciliationID();
      uint64_t v12 = *(void *)(v11 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v9, v13, v11);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return result;
}

uint64_t sub_24DBC5DE4(uint64_t a1, uint64_t (*a2)(uint64_t, long long *, void, void))
{
  *(void *)&long long v9 = swift_getAssociatedTypeWitness();
  *((void *)&v9 + 1) = swift_getAssociatedTypeWitness();
  *(void *)&long long v10 = swift_getAssociatedConformanceWitness();
  *((void *)&v10 + 1) = swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v4 = (long long *)(a1 + *(int *)(TupleTypeMetadata3 + 48));
  long long v5 = v4[1];
  long long v9 = *v4;
  long long v10 = v5;
  long long v6 = v4[3];
  long long v11 = v4[2];
  long long v12 = v6;
  return a2(a1, &v9, *(void *)(a1 + *(int *)(TupleTypeMetadata3 + 64)), *(void *)(a1 + *(int *)(TupleTypeMetadata3 + 64) + 8));
}

uint64_t sub_24DBC5F48@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for ReconciliationID();
  sub_24DCC9D48();
  swift_getWitnessTable();
  swift_getWitnessTable();
  char v8 = sub_24DCC9B18();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v10 = TupleTypeMetadata3;
  if (v8) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata3 - 8) + 56))(a5, 1, 1, TupleTypeMetadata3);
  }
  long long v12 = (_OWORD *)(a5 + *(int *)(TupleTypeMetadata3 + 48));
  uint64_t v13 = (void *)(a5 + *(int *)(TupleTypeMetadata3 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a5, a1, v7);
  long long v14 = a2[1];
  *long long v12 = *a2;
  v12[1] = v14;
  long long v15 = a2[3];
  v12[2] = a2[2];
  v12[3] = v15;
  void *v13 = a3;
  v13[1] = a4;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a5, 0, 1, v10);
  sub_24D43DD84((uint64_t)a2);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24DBC61C4(uint64_t a1, uint64_t (*a2)(uint64_t, long long *, void, void))
{
  *(void *)&long long v9 = swift_getAssociatedTypeWitness();
  *((void *)&v9 + 1) = swift_getAssociatedTypeWitness();
  *(void *)&long long v10 = swift_getAssociatedConformanceWitness();
  *((void *)&v10 + 1) = swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v4 = (long long *)(a1 + *(int *)(TupleTypeMetadata3 + 48));
  long long v5 = v4[1];
  long long v9 = *v4;
  long long v10 = v5;
  long long v6 = v4[3];
  long long v11 = v4[2];
  long long v12 = v6;
  return a2(a1, &v9, *(void *)(a1 + *(int *)(TupleTypeMetadata3 + 64)), *(void *)(a1 + *(int *)(TupleTypeMetadata3 + 64) + 8));
}

uint64_t sub_24DBC6328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v10 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = swift_getAssociatedConformanceWitness();
  uint64_t v3 = type metadata accessor for ReconciliationID();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  MEMORY[0x270FA5388](TupleTypeMetadata3 - 8);
  long long v6 = (char *)&v9 - v5;
  uint64_t v7 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v9 - v5, a1, v3);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v10, v6, v3);
}

uint64_t sub_24DBC64F0()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_24DBC6520()
{
  sub_24DBC64F0();

  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for FPFeedbackManager()
{
  return swift_getGenericMetadata();
}

uint64_t *sub_24DBC6564(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24DCC8CE8();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24DBC66F8(uint64_t a1)
{
  uint64_t v2 = sub_24DCC8CE8();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }

  return swift_bridgeObjectRelease();
}

char *sub_24DBC67C4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_24DBC6908(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void *)v14;
  v13[8] = v14[8];
  *(void *)uint64_t v13 = v15;
  return a1;
}

char *sub_24DBC6AC0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)int v10 = *(void *)v11;
  v10[8] = v11[8];
  return a1;
}

char *sub_24DBC6C00(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  return a1;
}

uint64_t sub_24DBC6DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24DBC6DC4);
}

uint64_t sub_24DBC6DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_24DBC6E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24DBC6E9C);
}

uint64_t sub_24DBC6E9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for FPFeedbackManagerState()
{
  uint64_t result = qword_269870CA0;
  if (!qword_269870CA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24DBC6FA8()
{
  sub_24D4EED00();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t initializeWithCopy for TargetedSPSErrorAndValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TargetedSPSErrorAndValue(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for TargetedSPSErrorAndValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for TargetedSPSErrorAndValue(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TargetedSPSErrorAndValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TargetedSPSErrorAndValue()
{
  return &type metadata for TargetedSPSErrorAndValue;
}

void *sub_24DBC724C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TargetedSPSErrorValue(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for TargetedSPSErrorValue(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for TargetedSPSErrorValue(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TargetedSPSErrorValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TargetedSPSErrorValue()
{
  return &type metadata for TargetedSPSErrorValue;
}

uint64_t initializeWithCopy for TargetedSPSError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TargetedSPSError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TargetedSPSError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TargetedSPSError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 34)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TargetedSPSError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 34) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TargetedSPSError()
{
  return &type metadata for TargetedSPSError;
}

unint64_t sub_24DBC7560()
{
  unint64_t result = qword_269870CB0;
  if (!qword_269870CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870CB0);
  }
  return result;
}

uint64_t sub_24DBC75B4()
{
  return v0;
}

uint64_t sub_24DBC75C0()
{
  return sub_24DBC75B4();
}

uint64_t sub_24DBC75DC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24DBC7684;
  return sub_24DBC3D74(a1, a2);
}

uint64_t sub_24DBC7684(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

uint64_t sub_24DBC7794(void *a1)
{
  return sub_24DBC7C50(a1);
}

uint64_t sub_24DBC77A4(uint64_t result, double a2, double a3)
{
  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  double v5 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t v7 = 0;
  unint64_t result = MEMORY[0x25332B050](&v7, 8);
  if (v5 * ((double)(v7 & 0x1FFFFFFFFFFFFFLL) * 1.11022302e-16) + a2 == a3) {
    return sub_24DBC77A4(v6, a2, a3);
  }
  return result;
}

BOOL sub_24DBC7850(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = sub_24DCCAE28(), result = 0, (v5 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
    {
      sub_24D6D0A84(a1 + 24, (uint64_t)v12);
      sub_24D6D0A84(a2 + 24, (uint64_t)v11);
      sub_24D6D0A84((uint64_t)v12, (uint64_t)&v13);
      int v7 = v14;
      switch(v14)
      {
        case 0xFAu:
          sub_24D6D0A84((uint64_t)v11, (uint64_t)&v15);
          if (v16 != 250) {
            return 0;
          }
          goto LABEL_21;
        case 0xFBu:
          sub_24D6D0A84((uint64_t)v11, (uint64_t)&v15);
          if (v16 != 251) {
            return 0;
          }
          goto LABEL_21;
        case 0xFCu:
          sub_24D6D0A84((uint64_t)v11, (uint64_t)&v15);
          if (v16 != 252) {
            return 0;
          }
          goto LABEL_21;
        case 0xFDu:
          sub_24D6D0A84((uint64_t)v11, (uint64_t)&v15);
          if (v16 != 253) {
            return 0;
          }
          goto LABEL_21;
        case 0xFEu:
          sub_24D6D0A84((uint64_t)v11, (uint64_t)&v15);
          if (v16 != 254) {
            return 0;
          }
          goto LABEL_21;
        default:
          uint64_t v8 = v13;
          sub_24D6D0A84((uint64_t)v11, (uint64_t)&v15);
          if ((v16 + 6) < 5u) {
            return 0;
          }
          if (v7 == 255)
          {
            if (v16 != 255) {
              return 0;
            }
          }
          else
          {
            if (v16 == 255) {
              return 0;
            }
            if (v7)
            {
              if (v7 == 1)
              {
                BOOL result = 0;
                if (v16 != 1 || v8 != v15) {
                  return result;
                }
              }
              else
              {
                BOOL result = 0;
                if (v8)
                {
                  if (v16 != 2 || v15 != 1) {
                    return result;
                  }
                }
                else if (v16 != 2 || v15)
                {
                  return result;
                }
              }
            }
            else
            {
              BOOL result = 0;
              if (v16 || v8 != v15) {
                return result;
              }
            }
          }
LABEL_21:
          uint64_t v9 = *(char *)(a1 + 33);
          uint64_t v10 = *(char *)(a2 + 33);
          if (v9 == 70) {
            return v10 == 70;
          }
          if (v10 != 70 && qword_24DCE9948[v9] == qword_24DCE9948[v10]) {
            return 1;
          }
          break;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_24DBC7A9C(uint64_t a1, void (*a2)(_OWORD *, double))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v8) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v4 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v20 = *(void *)(v4 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v20 = *(void *)(v4 + 8 * v10);
        if (!v20)
        {
          int64_t v10 = v19 + 3;
          if (v19 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v20 = *(void *)(v4 + 8 * v10);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v20 - 1) & v20;
    unint64_t v12 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = *(void *)(a1 + 56);
    uint64_t v14 = *(void *)(a1 + 48) + 56 * v12;
    long long v16 = *(_OWORD *)(v14 + 16);
    long long v15 = *(_OWORD *)(v14 + 32);
    long long v17 = *(_OWORD *)v14;
    uint64_t v23 = *(void *)(v14 + 48);
    v22[1] = v16;
    v22[2] = v15;
    v22[0] = v17;
    double v18 = *(double *)(v13 + 8 * v12);
    sub_24D43DD84((uint64_t)v22);
    a2(v22, v18);
    uint64_t result = sub_24D43E394((uint64_t)v22);
  }
  int64_t v21 = v19 + 4;
  if (v21 >= v8) {
    return swift_release();
  }
  unint64_t v20 = *(void *)(v4 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v4 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24DBC7C50(void *a1)
{
  uint64_t v2 = type metadata accessor for FPFeedbackManagerState();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 22;
  uint64_t v5 = type metadata accessor for GlobalResourceStore();
  swift_allocObject();
  uint64_t v6 = sub_24D7BF718();
  v14[3] = v5;
  v14[4] = &off_26FFC0B88;
  v14[0] = v6;
  sub_24D433858((uint64_t)v14, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986EF60);
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 72) = 0;
  sub_24D433858((uint64_t)v13, v7 + 16);
  uint64_t v8 = sub_24DCC8CE8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = *(int *)(v2 + 20);
  *(void *)&v4[v9] = sub_24D428E40(MEMORY[0x263F8EE78]);
  int64_t v10 = &v4[*(int *)(v2 + 24)];
  *(void *)int64_t v10 = 0;
  v10[8] = 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  sub_24DBC8010((uint64_t)v4, v7 + *(void *)(*(void *)v7 + 136));
  *(void *)(v7 + 56) = 0xD000000000000016;
  *(void *)(v7 + 64) = 0x800000024DCE8F10;
  swift_retain();
  sub_24DBC0AC8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  swift_release();
  swift_beginAccess();
  sub_24DBC2BEC(a1);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v7 + 16);
  swift_bridgeObjectRelease();
  sub_24DBC8074(v7 + *(void *)(*(void *)v7 + 136));
  return swift_deallocClassInstance();
}

uint64_t sub_24DBC8010(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FPFeedbackManagerState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24DBC8074(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FPFeedbackManagerState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24DBC80D0()
{
  return sub_24DBC2F70();
}

uint64_t sub_24DBC80EC(uint64_t a1)
{
  return sub_24DBC2FF4(a1, *(void **)(v1 + 16));
}

uint64_t sub_24DBC80F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FPFeedbackManagerState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_24DBC8158()
{
  unint64_t result = qword_269870CD0;
  if (!qword_269870CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870CD0);
  }
  return result;
}

unint64_t sub_24DBC81AC()
{
  unint64_t result = qword_269870CE8;
  if (!qword_269870CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870CE8);
  }
  return result;
}

unint64_t sub_24DBC8200()
{
  unint64_t result = qword_269870CF0;
  if (!qword_269870CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870CF0);
  }
  return result;
}

uint64_t sub_24DBC8254(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FPFeedbackManagerState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24DBC82B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24DBC8300(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269870CD8);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24DBC8388()
{
  unint64_t result = qword_269870D08;
  if (!qword_269870D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870D08);
  }
  return result;
}

unint64_t sub_24DBC83DC()
{
  unint64_t result = qword_269870D10;
  if (!qword_269870D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870D10);
  }
  return result;
}

uint64_t sub_24DBC8430(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000024DCFB630 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24DBC8520@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269870DE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DBC9F98();
  sub_24DCCB0B8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v27 = 0;
  sub_24D43FC08();
  sub_24DCCAB98();
  uint64_t v9 = v21;
  uint64_t v18 = v22;
  uint64_t v19 = v20;
  uint64_t v17 = v23;
  int v26 = v24;
  int v16 = v25;
  LOBYTE(v20) = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24DCCAB58();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v19;
  *(void *)(a2 + 8) = v9;
  uint64_t v14 = v17;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v14;
  *(unsigned char *)(a2 + 32) = v26;
  *(unsigned char *)(a2 + 33) = v16;
  *(void *)(a2 + 40) = v10;
  *(void *)(a2 + 48) = v12;
  return result;
}

uint64_t sub_24DBC877C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D6F44726F727265 && a2 == 0xEB000000006E6961;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726944726F727265 && a2 == 0xEE006E6F69746365 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65646F43626F6ALL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24DBC8980@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269870D58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DBC93A8();
  sub_24DCCB0B8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v25 = 0;
  uint64_t v9 = sub_24DCCAB58();
  uint64_t v11 = v10;
  char v24 = 1;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_24DCCAB88();
  char v23 = 2;
  sub_24D82621C();
  sub_24DCCAB98();
  uint64_t v17 = v19;
  int v16 = v20;
  char v21 = 3;
  sub_24D826270();
  sub_24DCCAB08();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v12 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  uint64_t v14 = v17;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v14;
  *(unsigned char *)(a2 + 32) = v16;
  *(unsigned char *)(a2 + 33) = v12;
  return result;
}

uint64_t sub_24DBC8C14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696C706D6173 && a2 == 0xEC00000065746152)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

double sub_24DBC8D20(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269870D40);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DBC9354();
  sub_24DCCB0B8();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    sub_24DCCAB58();
    char v11 = 1;
    swift_bridgeObjectRetain();
    sub_24DCCAB78();
    double v2 = v9;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_24DBC8F10(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000024DCFB630 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024DD22AC0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24DBC8FFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269870D18);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DBC9258();
  sub_24DCCB0B8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v21 = 0;
  sub_24D43FC08();
  sub_24DCCAB98();
  uint64_t v9 = v23;
  uint64_t v10 = v24;
  uint64_t v19 = v25;
  uint64_t v20 = v22;
  int v17 = v27;
  int v18 = v26;
  char v21 = 1;
  sub_24DBC92AC();
  swift_bridgeObjectRetain();
  sub_24DCCAB98();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v22;
  uint64_t v11 = v23;
  uint64_t v13 = v24;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v9;
  uint64_t v15 = v19;
  *(void *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v15;
  *(unsigned char *)(a2 + 32) = v18;
  *(unsigned char *)(a2 + 33) = v17;
  *(void *)(a2 + 40) = v12;
  *(void *)(a2 + 48) = v11;
  *(void *)(a2 + 56) = v13;
  return result;
}

unint64_t sub_24DBC9258()
{
  unint64_t result = qword_269870D20;
  if (!qword_269870D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870D20);
  }
  return result;
}

unint64_t sub_24DBC92AC()
{
  unint64_t result = qword_269870D28;
  if (!qword_269870D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870D28);
  }
  return result;
}

unint64_t sub_24DBC9300()
{
  unint64_t result = qword_269870D38;
  if (!qword_269870D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870D38);
  }
  return result;
}

unint64_t sub_24DBC9354()
{
  unint64_t result = qword_269870D48;
  if (!qword_269870D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870D48);
  }
  return result;
}

unint64_t sub_24DBC93A8()
{
  unint64_t result = qword_269870D60;
  if (!qword_269870D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870D60);
  }
  return result;
}

uint64_t sub_24DBC93FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B190350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24DBC9464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24DBC5BC0(a1, a2, a3);
}

uint64_t sub_24DBC9480(uint64_t a1)
{
  return sub_24DBC9508(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24DBC5DE4);
}

uint64_t sub_24DBC94AC@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_24DBC5F48(a1, a2, a3, a4, a5);
}

uint64_t sub_24DBC94DC(uint64_t a1)
{
  return sub_24DBC9508(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24DBC61C4);
}

uint64_t sub_24DBC9508(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_24DBC9534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24DBC6328(a1, a2);
}

unsigned char *storeEnumTagSinglePayload for TargetedSPSError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24DBC9624);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TargetedSPSError.CodingKeys()
{
  return &type metadata for TargetedSPSError.CodingKeys;
}

ValueMetadata *type metadata accessor for TargetedSPSErrorValue.CodingKeys()
{
  return &type metadata for TargetedSPSErrorValue.CodingKeys;
}

ValueMetadata *type metadata accessor for TargetedSPSErrorAndValue.CodingKeys()
{
  return &type metadata for TargetedSPSErrorAndValue.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FPFeedbackManagerState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24DBC974CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FPFeedbackManagerState.CodingKeys()
{
  return &type metadata for FPFeedbackManagerState.CodingKeys;
}

ValueMetadata *type metadata accessor for FPDiagnosticsSamplingResult()
{
  return &type metadata for FPDiagnosticsSamplingResult;
}

uint64_t _s9libfssync27TargetedSPSErrorWithVersionVwxx_0()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TargetedSPSErrorWithVersion(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TargetedSPSErrorWithVersion(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TargetedSPSErrorWithVersion(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TargetedSPSErrorWithVersion(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TargetedSPSErrorWithVersion(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TargetedSPSErrorWithVersion()
{
  return &type metadata for TargetedSPSErrorWithVersion;
}

unint64_t sub_24DBC99B0()
{
  unint64_t result = qword_269870D78;
  if (!qword_269870D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870D78);
  }
  return result;
}

unint64_t sub_24DBC9A08()
{
  unint64_t result = qword_269870D80;
  if (!qword_269870D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870D80);
  }
  return result;
}

unint64_t sub_24DBC9A60()
{
  unint64_t result = qword_269870D88;
  if (!qword_269870D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870D88);
  }
  return result;
}

unint64_t sub_24DBC9AB8()
{
  unint64_t result = qword_269870D90;
  if (!qword_269870D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870D90);
  }
  return result;
}

unint64_t sub_24DBC9B10()
{
  unint64_t result = qword_269870D98;
  if (!qword_269870D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870D98);
  }
  return result;
}

unint64_t sub_24DBC9B68()
{
  unint64_t result = qword_269870DA0;
  if (!qword_269870DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870DA0);
  }
  return result;
}

unint64_t sub_24DBC9BC0()
{
  unint64_t result = qword_269870DA8;
  if (!qword_269870DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870DA8);
  }
  return result;
}

unint64_t sub_24DBC9C18()
{
  unint64_t result = qword_269870DB0;
  if (!qword_269870DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870DB0);
  }
  return result;
}

unint64_t sub_24DBC9C70()
{
  unint64_t result = qword_269870DB8;
  if (!qword_269870DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870DB8);
  }
  return result;
}

unint64_t sub_24DBC9CC8()
{
  unint64_t result = qword_269870DC0;
  if (!qword_269870DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870DC0);
  }
  return result;
}

unint64_t sub_24DBC9D20()
{
  unint64_t result = qword_269870DC8;
  if (!qword_269870DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870DC8);
  }
  return result;
}

unint64_t sub_24DBC9D78()
{
  unint64_t result = qword_269870DD0;
  if (!qword_269870DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870DD0);
  }
  return result;
}

unint64_t sub_24DBC9DD0()
{
  unint64_t result = qword_269870DD8;
  if (!qword_269870DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870DD8);
  }
  return result;
}

uint64_t sub_24DBC9E24(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x800000024DD22A80 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696C706D6173 && a2 == 0xEF73746C75736552 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000024DD22AA0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_24DBC9F98()
{
  unint64_t result = qword_269870DE8;
  if (!qword_269870DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870DE8);
  }
  return result;
}

unint64_t sub_24DBC9FEC()
{
  unint64_t result = qword_269870DF8;
  if (!qword_269870DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870DF8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FPDiagnosticsSamplingResult.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24DBCA0DCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FPDiagnosticsSamplingResult.CodingKeys()
{
  return &type metadata for FPDiagnosticsSamplingResult.CodingKeys;
}

unsigned char *_s9libfssync21TargetedSPSErrorValueV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24DBCA1E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TargetedSPSErrorWithVersion.CodingKeys()
{
  return &type metadata for TargetedSPSErrorWithVersion.CodingKeys;
}

unint64_t sub_24DBCA21C()
{
  unint64_t result = qword_269870E10;
  if (!qword_269870E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870E10);
  }
  return result;
}

unint64_t sub_24DBCA274()
{
  unint64_t result = qword_269870E18;
  if (!qword_269870E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870E18);
  }
  return result;
}

unint64_t sub_24DBCA2CC()
{
  unint64_t result = qword_269870E20;
  if (!qword_269870E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870E20);
  }
  return result;
}

unint64_t sub_24DBCA324()
{
  unint64_t result = qword_269870E28;
  if (!qword_269870E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870E28);
  }
  return result;
}

unint64_t sub_24DBCA37C()
{
  unint64_t result = qword_269870E30;
  if (!qword_269870E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870E30);
  }
  return result;
}

unint64_t sub_24DBCA3D4()
{
  unint64_t result = qword_269870E38[0];
  if (!qword_269870E38[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269870E38);
  }
  return result;
}

uint64_t sub_24DBCA428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24DBC9534(a1, a2);
}

uint64_t sub_24DBCA448(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x2533276F0](&v16, a2, *v3, v6, MEMORY[0x263F8D6C8], *(void *)(v10 + 24));
  uint64_t v11 = v17;
  if (v17)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v12(v9, a2, v6);
    uint64_t v16 = MEMORY[0x253327D80](v3[1], v6);
    unsigned __int8 v17 = 0;
    sub_24DCC9638();
    sub_24DCC9668();
    sub_24DA604B8(v6, v6);
    swift_allocObject();
    uint64_t v13 = sub_24DCC9C58();
    v12(v14, a2, v6);
    sub_24D785484(v13);
    sub_24DCC9CC8();
    swift_bridgeObjectRelease();
    v12(a1, a2, v6);
  }
  else
  {
    sub_24DCC9D98();
  }
  return v11;
}

uint64_t sub_24DBCA63C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v4 = v3;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v27 - v15;
  MEMORY[0x2533276F0](&v33, v14, *v4, v6, MEMORY[0x263F8D6C8], *(void *)(v17 + 24));
  if (v34) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  }
  unsigned __int8 v27 = v10;
  uint64_t v29 = v16;
  uint64_t v30 = a3;
  uint64_t v19 = v33;
  sub_24DCC9D98();
  sub_24DCC9D48();
  sub_24DCC9D18();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v32 = v7 + 8;
  uint64_t v28 = v20;
  v20(v13, v6);
  sub_24DCC9638();
  sub_24DCC9598();
  uint64_t result = MEMORY[0x253327D80](v4[1], v6);
  if (result < v19)
  {
    __break(1u);
  }
  else
  {
    uint64_t v21 = result;
    uint64_t v31 = v7;
    if (v19 == result)
    {
LABEL_8:
      uint64_t v26 = v30;
      uint64_t v25 = v31;
      (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v30, v29, v6);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v6);
    }
    if (v19 < result)
    {
      uint64_t v22 = (void (**)(char *, char *, uint64_t))(v31 + 16);
      uint64_t v24 = v27;
      uint64_t v23 = v28;
      do
      {
        sub_24DCC9D98();
        (*v22)(v24, v13, v6);
        uint64_t v33 = v19;
        char v34 = 0;
        sub_24DCC9668();
        v23(v13, v6);
        ++v19;
      }
      while (v21 != v19);
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24DBCA91C()
{
  return sub_24DCC9D58();
}

uint64_t sub_24DBCA92C()
{
  return sub_24DCC9D68();
}

uint64_t sub_24DBCA944()
{
  uint64_t v0 = sub_24DCC9518();
  sub_24DCC9528();
  return v0;
}

uint64_t sub_24DBCA988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OrderedSet();
  sub_24DBCA448(v7, a1, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a3);
}

void sub_24DBCAA70()
{
}

uint64_t sub_24DBCAA7C()
{
  return sub_24DCC9D98();
}

uint64_t sub_24DBCAA88()
{
  return sub_24DCCB048();
}

void *sub_24DBCAAE8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFSUB__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result - 1;
  }
  return result;
}

void *sub_24DBCAB00(void *result)
{
  if (__OFSUB__(*result, 1)) {
    __break(1u);
  }
  else {
    --*result;
  }
  return result;
}

uint64_t sub_24DBCAB24()
{
  return sub_24DBCAA88();
}

uint64_t sub_24DBCAB30()
{
  return sub_24DBCA91C();
}

uint64_t sub_24DBCAB3C()
{
  return sub_24DCCB048();
}

uint64_t sub_24DBCAB84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24DBCB2B0();
  uint64_t v4 = v3;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  a1[1] = v4;
  return result;
}

void sub_24DBCABD0()
{
}

uint64_t sub_24DBCABF0(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

void (*sub_24DBCAC00(void *a1, uint64_t *a2, uint64_t a3))(void *a1)
{
  uint64_t v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[4] = sub_24DBCAC74(v7, *a2, *v3, v3[1], *(void *)(a3 + 16));
  return sub_24D6B57DC;
}

void (*sub_24DBCAC74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(void *a1)
{
  uint64_t v5 = *(void *)(a5 - 8);
  *a1 = a5;
  a1[1] = v5;
  a1[2] = malloc(*(void *)(v5 + 64));
  sub_24DCC9D98();
  return sub_24DBCAD30;
}

void sub_24DBCAD30(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

void sub_24DBCAD8C(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_24DBCAD9C()
{
  swift_getWitnessTable();

  return sub_24DCC96D8();
}

uint64_t sub_24DBCAE18()
{
  swift_getWitnessTable();

  return sub_24DCC96C8();
}

uint64_t sub_24DBCAE9C()
{
  swift_getWitnessTable();

  return sub_24DCC96E8();
}

uint64_t sub_24DBCAF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DBCB538(a1, a2, a3, a4, MEMORY[0x263F8D870], MEMORY[0x263F8D170]);
}

uint64_t sub_24DBCAF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DBCB538(a1, a2, a3, a4, MEMORY[0x263F8D1A0], MEMORY[0x263F8D180]);
}

void *sub_24DBCAF8C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

void *sub_24DBCAFA4(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

uint64_t sub_24DBCAFBC()
{
  return sub_24DBCA92C();
}

__n128 sub_24DBCAFD4@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_24DBCAFE4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9E108](a1, WitnessTable);
}

uint64_t sub_24DBCB038()
{
  swift_getWitnessTable();
  uint64_t v0 = sub_24DBCB2AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24DBCB0A0(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_24DCCA068();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v17 - v10;
  v17[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = sub_24DCC9728();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v9, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v9, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
    goto LABEL_5;
  }
  char v13 = sub_24DCC9728();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_24DBCB2B0()
{
  uint64_t v1 = sub_24DCC9518();
  sub_24DCC9528();
  sub_24DCC9D48();
  swift_getWitnessTable();
  sub_24DCC9AF8();
  return v1;
}

uint64_t sub_24DBCB374(uint64_t a1)
{
  return sub_24DBCA988(a1, *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t type metadata accessor for OrderedSet()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24DBCB3AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DBCB3C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DBCB3E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DBCB400()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DBCB41C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DBCB438()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DBCB454()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DBCB470()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DBCB4D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DBCB538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t v23 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v22 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v13);
  int v18 = (char *)&v22 - v17;
  char v19 = sub_24DCC9728();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_24DBCB7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DBCB7DC(a1, a2, a3, a4, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
}

uint64_t sub_24DBCB7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DBCB7DC(a1, a2, a3, a4, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
}

uint64_t sub_24DBCB7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, _OWORD *))
{
  uint64_t v6 = sub_24DC09748(a1, a2, a3, a4, a5);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v6;
}

uint64_t sub_24DBCB860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 144) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 160) = v9;
  *(_OWORD *)(v8 + 176) = *(_OWORD *)(a1 + 32);
  *(void *)(v8 + 192) = *(void *)(a1 + 48);
  return sub_24D983344(a2, a3, a4);
}

uint64_t sub_24DBCB8D8(uint64_t (*a1)(char *, uint64_t, uint64_t), uint64_t a2, int a3, int a4, int a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v110 = a7;
  uint64_t v111 = a8;
  int v109 = a5;
  LODWORD(v95) = a4;
  int v119 = a3;
  uint64_t v112 = a2;
  id v117 = a1;
  uint64_t v11 = *a6;
  uint64_t v12 = *(void *)(*a6 + 96);
  uint64_t v13 = *(void *)(*a6 + 80);
  uint64_t v107 = a9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v97 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v92 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v118 = (char *)&v89 - v16;
  uint64_t v114 = sub_24DCC9078();
  uint64_t v96 = *(void *)(v114 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v114);
  uint64_t v93 = (unint64_t *)((char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v17);
  uint64_t v108 = (char *)&v89 - v19;
  uint64_t v124 = v13;
  uint64_t v125 = v13;
  uint64_t v126 = v12;
  uint64_t v127 = v12;
  uint64_t v20 = type metadata accessor for ItemChange();
  uint64_t v91 = sub_24DCCA3F8();
  uint64_t v90 = *(void *)(v91 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v91);
  uint64_t v113 = (unint64_t *)((char *)&v89 - v22);
  uint64_t v115 = v20;
  uint64_t v102 = *(uint64_t (***)(uint64_t, uint64_t))(v20 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v120 = (uint64_t)&v89 - v23;
  uint64_t v24 = *(void *)(v11 + 88);
  uint64_t v25 = *(void *)(v11 + 104);
  uint64_t v124 = v13;
  uint64_t v125 = v24;
  uint64_t v126 = v12;
  uint64_t v127 = v25;
  uint64_t v26 = type metadata accessor for PersistenceTrigger();
  id v106 = *(unsigned int (***)(unint64_t *, uint64_t, uint64_t))(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v89 - v27;
  uint64_t v98 = v13;
  uint64_t v99 = v12;
  uint64_t v29 = type metadata accessor for SnapshotItem();
  uint64_t v30 = sub_24DCCA3F8();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v89 - v32;
  (*(void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v31 + 16))((char *)&v89 - v32, v117, v30);
  LODWORD(v29) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v33, 1, v29);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  if (v29 == 1)
  {
    uint64_t v34 = v107;
    if ((v107 & 0x80000000000) != 0)
    {
      uint64_t v35 = *(void (**)(uint64_t))(**(void **)(a6[4] + 16) + 848);
      uint64_t v36 = swift_retain();
      v35(v36);
      swift_release();
    }
  }
  else
  {
    int v105 = (void (**)(void, void, void))v26;
    uint64_t v34 = v107;
    if ((v107 & 0x80000000000) != 0)
    {
      uint64_t v37 = AssociatedTypeWitness;
      (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v28, v112, AssociatedTypeWitness);
      uint64_t v38 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v40 = swift_getAssociatedConformanceWitness();
      uint64_t v124 = v37;
      uint64_t v125 = v38;
      uint64_t v126 = AssociatedConformanceWitness;
      uint64_t v127 = v40;
      type metadata accessor for ReconciliationID();
      swift_storeEnumTagMultiPayload();
      id v41 = v105;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *))(*a6 + 312))(v28);
      ((void (*)(char *, void (**)(void, void, void)))v106[1])(v28, v41);
    }
  }
  uint64_t v128 = 0;
  swift_beginAccess();
  if (v128 > 1)
  {
    uint64_t v44 = v112;
LABEL_23:
    id v74 = (id)fpfs_current_or_default_log();
    uint64_t v75 = v44;
    uint64_t v76 = v93;
    sub_24DCC9088();
    uint64_t v77 = v97;
    os_log_type_t v78 = v92;
    uint64_t v79 = AssociatedTypeWitness;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v92, v75, AssociatedTypeWitness);
    uint64_t v80 = sub_24DCC9068();
    os_log_type_t v81 = sub_24DCCA128();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = (uint8_t *)swift_slowAlloc();
      uint64_t v120 = swift_slowAlloc();
      uint64_t v123 = v120;
      *(_DWORD *)uint64_t v82 = 136315138;
      swift_getAssociatedConformanceWitness();
      uint64_t v83 = sub_24DCCAD78();
      uint64_t v122 = sub_24D418FB4(v83, v84, &v123);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v79);
      _os_log_impl(&dword_24D3D0000, v80, v81, "Transform could not converge for item %s", v82, 0xCu);
      uint64_t v85 = v120;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v85, -1, -1);
      MEMORY[0x25332B030](v82, -1, -1);

      unsigned int v86 = *(uint64_t (**)(unint64_t *, uint64_t))(v96 + 8);
      uint64_t v87 = v93;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v79);

      unsigned int v86 = *(uint64_t (**)(unint64_t *, uint64_t))(v96 + 8);
      uint64_t v87 = v76;
    }
    uint64_t v88 = v114;
    return v86(v87, v88);
  }
  else
  {
    uint64_t v104 = a10;
    id v106 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v102 + 6);
    uint64_t v103 = (void (**)(uint64_t, unint64_t *, uint64_t))(v102 + 4);
    int v105 = (void (**)(void, void, void))(v97 + 16);
    id v101 = (void (**)(char *, uint64_t))(v97 + 8);
    uint64_t v100 = (void (**)(char *, uint64_t))(v96 + 8);
    ++v102;
    LODWORD(v107) = v95 & 1;
    *(void *)&long long v42 = 136315394;
    long long v95 = v42;
    uint64_t v94 = MEMORY[0x263F8EE58] + 8;
    uint64_t v44 = v112;
    uint64_t v43 = v113;
    uint64_t v45 = v115;
    while (1)
    {
      uint64_t v46 = v121;
      uint64_t result = sub_24DBE5C3C(v117, v44, v119, v107, v34, a6, v43);
      uint64_t v121 = v46;
      if (v46) {
        break;
      }
      if ((*v106)(v43, 1, v45) == 1)
      {
        unsigned int v86 = *(uint64_t (**)(unint64_t *, uint64_t))(v90 + 8);
        uint64_t v87 = v43;
        uint64_t v88 = v91;
        return v86(v87, v88);
      }
      (*v103)(v120, v43, v45);
      if ((v109 & 1) == 0)
      {
        uint64_t v48 = a6[4];
        uint64_t v49 = *(uint64_t (**)(uint64_t))(**(void **)(v48 + 16) + 304);
        uint64_t v50 = swift_retain();
        char v51 = v49(v50);
        uint64_t v52 = swift_release();
        if ((v51 & 1) != 0 && ((*(uint64_t (**)(uint64_t))(*a6 + 152))(v52) & 0x40) != 0)
        {
          uint64_t v53 = *(void (**)(void))(*(void *)(v48 + 16) + 16);
          if (v53)
          {
            type metadata accessor for FileTreeWriter.FileTreeChange();
            sub_24DCCAD88();
            swift_allocObject();
            swift_retain();
            uint64_t v54 = sub_24DCC9C58();
            (*v105)(v55, v112, AssociatedTypeWitness);
            uint64_t v44 = v112;
            swift_storeEnumTagMultiPayload();
            sub_24D785484(v54);
            v53();
            sub_24D43DD74((uint64_t)v53);
            swift_bridgeObjectRelease();
          }
        }
      }
      uint64_t v56 = v121;
      unsigned __int8 v57 = sub_24DBD6488(v120);
      uint64_t v121 = v56;
      if (v56) {
        return (*v102)(v120, v115);
      }
      unsigned __int8 v58 = v57;
      uint64_t result = (*(uint64_t (**)(void))(*a6 + 152))();
      if ((((result & 0x4000) != 0) & v58) == 0) {
        return (*v102)(v120, v115);
      }
      if (__OFADD__(v128, 1))
      {
        __break(1u);
        return result;
      }
      uint64_t v59 = v34;
      ++v128;
      uint64_t v60 = (*(uint64_t (**)(void))(*(void *)a6[2] + 504))();
      uint64_t v61 = (*(uint64_t (**)(uint64_t))(*(void *)a6[4] + 696))(v60);
      (*(void (**)(uint64_t))(*(void *)a6[5] + 696))(v61);
      id v62 = (id)fpfs_current_or_default_log();
      uint64_t v63 = v108;
      sub_24DCC9088();
      id v64 = v118;
      uint64_t v65 = AssociatedTypeWitness;
      (*v105)(v118, v44, AssociatedTypeWitness);
      uint64_t v66 = sub_24DCC9068();
      os_log_type_t v67 = sub_24DCCA108();
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v68 = swift_slowAlloc();
        uint64_t v69 = swift_slowAlloc();
        uint64_t v123 = v69;
        *(_DWORD *)uint64_t v68 = v95;
        swift_getAssociatedConformanceWitness();
        uint64_t v70 = sub_24DCCAD78();
        *(void *)(v68 + 4) = sub_24D418FB4(v70, v71, &v123);
        swift_bridgeObjectRelease();
        (*v101)(v118, v65);
        *(_WORD *)(v68 + 12) = 2048;
        *(void *)(v68 + 14) = v128;
        _os_log_impl(&dword_24D3D0000, v66, v67, "Ingesting %s, retries %ld", (uint8_t *)v68, 0x16u);
        swift_arrayDestroy();
        uint64_t v72 = v69;
        uint64_t v34 = v59;
        MEMORY[0x25332B030](v72, -1, -1);
        uint64_t v73 = v68;
        uint64_t v44 = v112;
        MEMORY[0x25332B030](v73, -1, -1);

        (*v100)(v63, v114);
        uint64_t v45 = v115;
        (*v102)(v120, v115);
      }
      else
      {

        (*v101)(v64, v65);
        (*v100)(v63, v114);
        uint64_t v45 = v115;
        (*v102)(v120, v115);
        uint64_t v34 = v59;
      }
      uint64_t v43 = v113;
      if (v128 >= 2) {
        goto LABEL_23;
      }
    }
  }
  return result;
}

uint64_t sub_24DBCC7C4(uint64_t a1, uint64_t a2, char *a3, void **a4, uint64_t a5, int a6)
{
  uint64_t v229 = a1;
  int v194 = a6;
  uint64_t v208 = a5;
  uint64_t v215 = a3;
  uint64_t v226 = a2;
  uint64_t v7 = *a4;
  uint64_t v8 = (*a4)[13];
  uint64_t v9 = (*a4)[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_24DCCA3F8();
  uint64_t v197 = *(void *)(v11 - 8);
  uint64_t v198 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  v220 = (char *)&v191 - v13;
  uint64_t v203 = AssociatedTypeWitness;
  uint64_t v199 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v193 = (char *)&v191 - v14;
  uint64_t v15 = v7[10];
  uint64_t v227 = a4;
  uint64_t v16 = v7[12];
  uint64_t v236 = v15;
  uint64_t v237 = v9;
  uint64_t v238 = v16;
  uint64_t v239 = v8;
  uint64_t v17 = type metadata accessor for ItemReconciliation();
  uint64_t v18 = sub_24DCCA3F8();
  uint64_t v195 = *(void *)(v18 - 8);
  uint64_t v196 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v221 = (char *)&v191 - v20;
  uint64_t v211 = v17;
  uint64_t v209 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v202 = (char *)&v191 - v21;
  uint64_t v236 = v15;
  uint64_t v212 = v9;
  uint64_t v213 = v8;
  uint64_t v237 = v9;
  uint64_t v238 = v16;
  uint64_t v239 = v8;
  uint64_t v22 = type metadata accessor for ReconciliationMutation();
  uint64_t v200 = *(void *)(v22 - 8);
  uint64_t v201 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v204 = (char *)&v191 - v23;
  uint64_t v207 = sub_24DCC8CE8();
  uint64_t v205 = *(void *)(v207 - 8);
  MEMORY[0x270FA5388](v207);
  uint64_t v206 = (char *)&v191 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = swift_getAssociatedTypeWitness();
  uint64_t v219 = *(void *)(v222 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v222);
  uint64_t v210 = (char *)&v191 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v216 = (uint64_t)&v191 - v27;
  uint64_t v217 = v16;
  uint64_t v218 = v15;
  uint64_t v28 = type metadata accessor for SnapshotItem();
  uint64_t v29 = sub_24DCCA3F8();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v191 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v191 - v34;
  uint64_t WitnessTable = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  WitnessTable((char *)&v191 - v34, v229, v29);
  uint64_t v36 = *(void *)(v28 - 8);
  uint64_t v224 = *(void *)(v36 + 48);
  int v37 = ((uint64_t (*)(char *, uint64_t, uint64_t))v224)(v35, 1, v28);
  uint64_t v214 = v30;
  if (v37 == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v29);
    uint64_t v223 = 0;
    uint64_t v38 = v28;
  }
  else
  {
    sub_24D3F0BA0((uint64_t)&v35[*(int *)(v28 + 52)], (uint64_t)v235, &qword_26B197970);
    sub_24D7334DC(v235, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401000);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v28);
    sub_24D3F0BA0((uint64_t)v235, (uint64_t)&v236, &qword_26B197970);
    uint64_t v38 = v28;
    if (sub_24D3F0D40((uint64_t)&v236) == 1)
    {
      uint64_t v223 = 0;
    }
    else
    {
      sub_24D7334DC(v235, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
      uint64_t v223 = v240;
    }
  }
  uint64_t v39 = (unsigned int (*)(char *, uint64_t, uint64_t))v224;
  WitnessTable(v33, v229, v29);
  if (v39(v33, 1, v38) == 1)
  {
    (*(void (**)(char *, uint64_t))(v214 + 8))(v33, v29);
    uint64_t v40 = v228;
    uint64_t v41 = v226;
  }
  else
  {
    sub_24D3F0BA0((uint64_t)&v33[*(int *)(v38 + 52)], (uint64_t)v235, &qword_26B197970);
    sub_24D7334DC(v235, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401000);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v33, v38);
    sub_24D3F0BA0((uint64_t)v235, (uint64_t)&v236, &qword_26B197970);
    int v42 = sub_24D3F0D40((uint64_t)&v236);
    uint64_t v41 = v226;
    if (v42 != 1)
    {
      sub_24D7334DC(v235, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
      uint64_t v229 = v241;
      goto LABEL_13;
    }
    uint64_t v40 = v228;
  }
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(*v227[4] + 328))(v41);
  if (v40) {
    return v44 & 1;
  }
  uint64_t v228 = 0;
  uint64_t v229 = v43;
LABEL_13:
  uint64_t v45 = v41 + *(int *)(v38 + 52);
  sub_24D3F0BA0(v45, (uint64_t)v235, &qword_26B197970);
  sub_24D3F0BA0((uint64_t)v235, (uint64_t)&v236, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)&v236) == 1) {
    uint64_t v46 = 0;
  }
  else {
    uint64_t v46 = *(void *)(v45 + 208);
  }
  char v47 = *v215;
  uint64_t v224 = v38;
  uint64_t v214 = v46;
  if ((v47 & 2) == 0)
  {
    uint64_t v48 = v229;
    uint64_t v50 = v220;
    uint64_t v49 = (uint64_t)v221;
    uint64_t v51 = v223;
    goto LABEL_21;
  }
  uint64_t v52 = *(int *)(v38 + 36);
  uint64_t v53 = v219;
  uint64_t v54 = *(void (**)(uint64_t))(v219 + 16);
  uint64_t v55 = v216;
  uint64_t WitnessTable = (void (*)(char *, uint64_t, uint64_t))(v41 + v52);
  uint64_t v56 = v222;
  v54(v216);
  unsigned __int8 v57 = v210;
  ((void (*)(char *, uint64_t, uint64_t))v54)(v210, v41, v56);
  swift_getAssociatedConformanceWitness();
  char v58 = sub_24DCC9798();
  uint64_t v59 = *(void (**)(char *, uint64_t))(v53 + 8);
  v59(v57, v56);
  v59((char *)v55, v56);
  if (v58)
  {
    uint64_t v48 = v229;
    uint64_t v51 = v223;
    uint64_t v38 = v224;
    uint64_t v50 = v220;
    uint64_t v49 = (uint64_t)v221;
LABEL_20:
    uint64_t v46 = v214;
    uint64_t v41 = v226;
    goto LABEL_21;
  }
  uint64_t v61 = v228;
  uint64_t v62 = (*(uint64_t (**)(void (*)(char *, uint64_t, uint64_t)))(*v227[4] + 336))(WitnessTable);
  if (v61) {
    return v44 & 1;
  }
  uint64_t v48 = v62;
  uint64_t v228 = 0;
  uint64_t v49 = (uint64_t)v221;
  uint64_t v51 = v223;
  if (v62 == v229)
  {
    uint64_t v48 = v229;
    uint64_t v38 = v224;
    uint64_t v50 = v220;
    goto LABEL_20;
  }
  sub_24D3F0BA0(v45, (uint64_t)v230, &qword_26B197970);
  sub_24D3F0BA0((uint64_t)v230, (uint64_t)&v231, &qword_26B197970);
  int v133 = sub_24D3F0D40((uint64_t)&v231);
  uint64_t v38 = v224;
  uint64_t v46 = v214;
  uint64_t v41 = v226;
  if (v133 != 1) {
    *(void *)(v45 + 216) = v48;
  }
  uint64_t v50 = v220;
  if ((*(void *)v215 & 0x400000000000000) == 0) {
    *(void *)v215 |= 0x400000000000000uLL;
  }
LABEL_21:
  uint64_t WitnessTable = (void (*)(char *, uint64_t, uint64_t))swift_getWitnessTable();
  if (sub_24D98BCC4(v38, (uint64_t)WitnessTable) != 1) {
    goto LABEL_44;
  }
  uint64_t v60 = v229;
  if (v51)
  {
    if (v51 == 500)
    {
      if (v229 > 2)
      {
        if (v229 == 3)
        {
          uint64_t v60 = 1002;
          goto LABEL_34;
        }
        if (v229 == 502)
        {
          uint64_t v60 = 1003;
          goto LABEL_34;
        }
      }
      else
      {
        if (v229 == 1)
        {
          uint64_t v60 = 1000;
          goto LABEL_34;
        }
        if (v229 == 2)
        {
          uint64_t v60 = 1001;
          goto LABEL_34;
        }
      }
      uint64_t v60 = 500;
    }
    else if (v51 == 501)
    {
      uint64_t v60 = v229;
    }
    else
    {
      uint64_t v60 = v51;
    }
  }
LABEL_34:
  uint64_t v63 = v48;
  switch(v46)
  {
    case 0:
      break;
    case 500:
      if (v48 > 2)
      {
        if (v48 == 3)
        {
          uint64_t v63 = 1002;
          break;
        }
        if (v48 == 502)
        {
          uint64_t v63 = 1003;
          break;
        }
      }
      else
      {
        if (v48 == 1)
        {
          uint64_t v63 = 1000;
          break;
        }
        if (v48 == 2)
        {
          uint64_t v63 = 1001;
          break;
        }
      }
      uint64_t v63 = 500;
      break;
    case 501:
      uint64_t v63 = v48;
      break;
    default:
      uint64_t v63 = v46;
      break;
  }
  if (v60 != v63)
  {
    uint64_t v87 = v41;
    if ((unint64_t)(v63 - 501) < 2 || v63 == 1003)
    {
      uint64_t v89 = v217;
      uint64_t v88 = v218;
      uint64_t v231 = v218;
      uint64_t v91 = v212;
      uint64_t v90 = v213;
      uint64_t v232 = v212;
      uint64_t v233 = v217;
      uint64_t v234 = v213;
      uint64_t v192 = type metadata accessor for JobResult();
      uint64_t v231 = v88;
      uint64_t v232 = v91;
      uint64_t v233 = v89;
      uint64_t v234 = v90;
      type metadata accessor for Maintenance.RefreshInheritedContentPolicy();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v219 + 16))(v216, v87, v222);
      uint64_t v92 = v206;
      sub_24DCC8CD8();
      sub_24DCC8C88();
      double v94 = v93;
      long long v95 = *(uint64_t (**)(char *, uint64_t))(v205 + 8);
      uint64_t result = v95(v92, v207);
      double v96 = v94 * 1000000000.0;
      if ((~COERCE__INT64(v94 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
LABEL_175:
        __break(1u);
        goto LABEL_176;
      }
      if (v96 <= -9.22337204e18)
      {
LABEL_176:
        __break(1u);
        goto LABEL_177;
      }
      uint64_t v215 = (char *)v48;
      if (v96 >= 9.22337204e18)
      {
LABEL_177:
        __break(1u);
        goto LABEL_178;
      }
      uint64_t v97 = v46;
      uint64_t v98 = v216;
      sub_24D732E04(v216, 0, (uint64_t)v96, 0);
      uint64_t v99 = *(void (**)(uint64_t, uint64_t))(v219 + 8);
      v99(v98, v222);
      uint64_t v100 = sub_24D8F94C4(0x800000);
      swift_retain();
      swift_release();
      sub_24D85246C(v208, v100);
      swift_release();
      if ((v194 & 1) == 0)
      {
        LODWORD(v192) = 1;
        uint64_t v41 = v226;
        uint64_t v50 = v220;
        uint64_t v49 = (uint64_t)v221;
        uint64_t v46 = v97;
        uint64_t v51 = v223;
        uint64_t v38 = v224;
        uint64_t v48 = (uint64_t)v215;
        goto LABEL_45;
      }
      uint64_t v231 = v218;
      uint64_t v232 = v212;
      uint64_t v233 = v217;
      uint64_t v234 = v213;
      type metadata accessor for Maintenance.PaceRefreshInheritedContentPolicy();
      sub_24DBB275C();
      id v101 = v206;
      sub_24DCC8CD8();
      sub_24DCC8C88();
      double v103 = v102;
      uint64_t result = v95(v101, v207);
      double v104 = v103 * 1000000000.0;
      if ((~COERCE__INT64(v103 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
LABEL_178:
        __break(1u);
        goto LABEL_179;
      }
      if (v104 <= -9.22337204e18)
      {
LABEL_179:
        __break(1u);
        goto LABEL_180;
      }
      uint64_t v49 = (uint64_t)v221;
      if (v104 >= 9.22337204e18)
      {
LABEL_180:
        __break(1u);
        goto LABEL_181;
      }
      uint64_t v46 = v97;
      uint64_t v105 = v216;
      sub_24D732E04(v216, 0, (uint64_t)v104, 0);
      v99(v105, v222);
      uint64_t v106 = sub_24D8F94C4(0x1000000);
      swift_retain();
      swift_release();
      sub_24D85246C(v208, v106);
      LODWORD(v192) = 1;
      uint64_t v41 = v226;
      uint64_t v51 = v223;
      uint64_t v48 = (uint64_t)v215;
    }
    else
    {
      uint64_t v124 = v217;
      uint64_t v123 = v218;
      uint64_t v231 = v218;
      uint64_t v126 = v212;
      uint64_t v125 = v213;
      uint64_t v232 = v212;
      uint64_t v233 = v217;
      uint64_t v234 = v213;
      uint64_t v215 = (char *)type metadata accessor for JobResult();
      uint64_t v231 = v123;
      uint64_t v232 = v126;
      uint64_t v233 = v124;
      uint64_t v234 = v125;
      type metadata accessor for Maintenance.RefreshInheritedContentPolicy();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v219 + 16))(v216, v87, v222);
      uint64_t v127 = v206;
      sub_24DCC8CD8();
      sub_24DCC8C88();
      double v129 = v128;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v205 + 8))(v127, v207);
      double v130 = v129 * 1000000000.0;
      if ((~COERCE__INT64(v129 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
LABEL_181:
        __break(1u);
        goto LABEL_182;
      }
      if (v130 <= -9.22337204e18)
      {
LABEL_182:
        __break(1u);
        goto LABEL_183;
      }
      uint64_t v49 = (uint64_t)v221;
      if (v130 >= 9.22337204e18)
      {
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
        goto LABEL_185;
      }
      uint64_t v131 = v216;
      uint64_t v132 = sub_24D732E04(v216, 0, (uint64_t)v130, 0);
      (*(void (**)(uint64_t, uint64_t))(v219 + 8))(v131, v222);
      sub_24D85246C(v208, v132);
      LODWORD(v192) = 0;
      uint64_t v41 = v87;
    }
    swift_release();
    uint64_t v38 = v224;
    uint64_t v50 = v220;
    goto LABEL_45;
  }
LABEL_44:
  LODWORD(v192) = 0;
LABEL_45:
  int v194 = ((uint64_t (*)(void))(*v227)[65])();
  if ((sub_24D98BCC4(v38, (uint64_t)WitnessTable) - 1) >= 2u)
  {
    uint64_t v215 = (char *)v48;
    id v64 = WitnessTable;
    uint64_t v65 = v41;
    unsigned __int8 v66 = sub_24D98BCC4(v38, (uint64_t)WitnessTable) == 1;
    char v67 = v194 & 1;
    int v68 = sub_24D95F954(v51, v229, v194 & 1, v66);
    uint64_t v69 = (uint64_t)v64;
    uint64_t v48 = (uint64_t)v215;
    unsigned __int8 v70 = sub_24D98BCC4(v224, v69) == 1;
    BOOL v134 = v68 == sub_24D95F954(v46, v48, v67, v70);
    uint64_t v41 = v65;
    if (!v134)
    {
      uint64_t v231 = v218;
      uint64_t v232 = v212;
      uint64_t v233 = v217;
      uint64_t v234 = v213;
      uint64_t v191 = type metadata accessor for JobResult();
      uint64_t v71 = v222;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v73 = v203;
      uint64_t v74 = swift_getAssociatedConformanceWitness();
      uint64_t v231 = v71;
      uint64_t v232 = v73;
      uint64_t v233 = AssociatedConformanceWitness;
      uint64_t v234 = v74;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v75 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      (*(void (**)(char *, uint64_t, uint64_t))(v219 + 16))(v204, v226, v71);
      swift_storeEnumTagMultiPayload();
      uint64_t v76 = v206;
      sub_24DCC8CD8();
      sub_24DCC8C88();
      double v78 = v77;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v205 + 8))(v76, v207);
      double v80 = v78 * 1000000000.0;
      if ((~COERCE__INT64(v78 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v80 > -9.22337204e18)
        {
          uint64_t v50 = v220;
          uint64_t v49 = (uint64_t)v221;
          uint64_t v51 = v223;
          uint64_t v48 = (uint64_t)v215;
          if (v80 < 9.22337204e18)
          {
            uint64_t v81 = (uint64_t)v204;
            uint64_t v82 = &v204[v75];
            *(_OWORD *)uint64_t v82 = xmmword_24DCDA460;
            *((void *)v82 + 2) = (uint64_t)v80;
            swift_storeEnumTagMultiPayload();
            uint64_t v83 = v201;
            swift_storeEnumTagMultiPayload();
            sub_24D907568(v208, v81);
            (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v81, v83);
            uint64_t v41 = v226;
            goto LABEL_51;
          }
          goto LABEL_174;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_174:
      __break(1u);
      goto LABEL_175;
    }
  }
LABEL_51:
  uint64_t v84 = v228;
  sub_24D4759C8(v41, v49);
  if (v84) {
    return v44 & 1;
  }
  uint64_t v228 = 0;
  uint64_t v85 = v209;
  uint64_t v86 = v211;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v209 + 48))(v49, 1, v211) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v195 + 8))(v49, v196);
LABEL_130:
    char v44 = v192;
    return v44 & 1;
  }
  uint64_t v223 = v51;
  uint64_t v107 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 32);
  uint64_t v108 = v202;
  v107(v202, v49, v86);
  int v109 = &v108[*(int *)(v86 + 52)];
  uint64_t v111 = v197;
  uint64_t v110 = v198;
  (*(void (**)(char *, char *, uint64_t))(v197 + 16))(v50, v109, v198);
  uint64_t v112 = v199;
  uint64_t v113 = v203;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v199 + 48))(v50, 1, v203) != 1)
  {
    uint64_t v118 = v193;
    (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v193, v50, v113);
    uint64_t v119 = v113;
    if (v109[*(int *)(type metadata accessor for ItemReconciliationHalf() + 56)] != 6)
    {
      (*(void (**)(char *, uint64_t))(v112 + 8))(v118, v113);
      (*(void (**)(char *, uint64_t))(v209 + 8))(v108, v211);
      goto LABEL_130;
    }
    uint64_t v120 = v112;
    uint64_t v121 = type metadata accessor for ItemReconciliationHalf();
    uint64_t v122 = v211;
    if (v108[*(int *)(v121 + 52)] == 2)
    {
      (*(void (**)(char *, uint64_t))(v112 + 8))(v118, v119);
      (*(void (**)(char *, uint64_t))(v209 + 8))(v108, v122);
      goto LABEL_130;
    }
    uint64_t v215 = (char *)v48;
    uint64_t v137 = *(void *)&v108[*(int *)(v211 + 76)];
    uint64_t v138 = v224;
    uint64_t v139 = WitnessTable;
    unsigned __int8 v140 = sub_24D98BCC4(v224, (uint64_t)WitnessTable) == 1;
    uint64_t v141 = sub_24D3FB354(v223, v229, 0, v194 & 1, v140, v137 != 0);
    char v142 = sub_24D98BCC4(v138, (uint64_t)v139);
    if (v141 > 999)
    {
      if ((unint64_t)(v141 - 1000) > 2)
      {
LABEL_165:
        BOOL v170 = v141 == 3;
        goto LABEL_141;
      }
    }
    else if (v141 != 500)
    {
      if (v141 == 501)
      {
        uint64_t v143 = v142;
        uint64_t v144 = &unk_24DCEA2A0;
        goto LABEL_146;
      }
      if (v141 == 502)
      {
        uint64_t v143 = v142;
        uint64_t v144 = &unk_24DCEA2C0;
LABEL_146:
        uint64_t v172 = v144[v143];
        goto LABEL_147;
      }
      goto LABEL_165;
    }
    BOOL v170 = v142 == 1;
LABEL_141:
    unsigned int v171 = v170;
    uint64_t v172 = 4 * v171;
LABEL_147:
    uint64_t v173 = v224;
    uint64_t v174 = WitnessTable;
    unsigned __int8 v175 = sub_24D98BCC4(v224, (uint64_t)WitnessTable) == 1;
    uint64_t v176 = sub_24D3FB354(v214, (uint64_t)v215, 0, v194 & 1, v175, v137 != 0);
    char v177 = sub_24D98BCC4(v173, (uint64_t)v174);
    uint64_t v229 = v172;
    if (v176 <= 501)
    {
      if (v176 == 3)
      {
        uint64_t v178 = 4;
        goto LABEL_168;
      }
      if (v176 != 500)
      {
        if (v176 == 501)
        {
          if ((v137 & 3) == 0 && v177 == 0) {
            uint64_t v178 = 16;
          }
          else {
            uint64_t v178 = 0;
          }
          long long v180 = v202;
          if ((v137 & 2) != 0)
          {
            uint64_t v231 = v218;
            uint64_t v232 = v212;
            uint64_t v233 = v217;
            uint64_t v234 = v213;
            uint64_t WitnessTable = (void (*)(char *, uint64_t, uint64_t))type metadata accessor for JobResult();
            uint64_t v181 = v222;
            uint64_t v182 = swift_getAssociatedConformanceWitness();
            uint64_t v119 = v203;
            uint64_t v183 = swift_getAssociatedConformanceWitness();
            uint64_t v231 = v181;
            uint64_t v232 = v119;
            uint64_t v233 = v182;
            uint64_t v234 = v183;
            type metadata accessor for ReconciliationID();
            TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
            uint64_t v185 = *(int *)(TupleTypeMetadata3 + 48);
            uint64_t v186 = *(int *)(TupleTypeMetadata3 + 64);
            uint64_t v187 = (uint64_t)v204;
            (*(void (**)(char *, uint64_t, uint64_t))(v219 + 16))(v204, v226, v181);
            long long v180 = v202;
            swift_storeEnumTagMultiPayload();
            *(void *)(v187 + v185) = 1;
            uint64_t v120 = v199;
            *(void *)(v187 + v186) = 0;
            uint64_t v188 = v201;
            swift_storeEnumTagMultiPayload();
            sub_24D907568(v208, v187);
            (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v187, v188);
          }
          goto LABEL_169;
        }
LABEL_167:
        uint64_t v178 = 0;
        goto LABEL_168;
      }
    }
    else if ((unint64_t)(v176 - 1000) >= 3)
    {
      if (v176 == 502)
      {
        if ((0xEu >> (v177 & 0xF)) & 1 | ((v137 & 2) != 0)) {
          uint64_t v178 = 0;
        }
        else {
          uint64_t v178 = 64;
        }
        goto LABEL_168;
      }
      goto LABEL_167;
    }
    uint64_t v178 = 4 * (v177 == 1);
LABEL_168:
    long long v180 = v202;
LABEL_169:
    uint64_t v189 = v228;
    uint64_t v190 = v193;
    (*(void (**)(char *, uint64_t, void))(*v227[3] + 392))(v193, (v178 ^ v229) & v229, v178 & (v178 ^ v229) & 0x3F);
    if (v189)
    {
      (*(void (**)(char *, uint64_t))(v120 + 8))(v190, v119);
      (*(void (**)(char *, uint64_t))(v209 + 8))(v180, v211);
      return v44 & 1;
    }
    (*(void (**)(char *, uint64_t))(v120 + 8))(v190, v119);
    (*(void (**)(char *, uint64_t))(v209 + 8))(v180, v211);
    goto LABEL_130;
  }
  (*(void (**)(char *, uint64_t))(v111 + 8))(v50, v110);
  char v114 = sub_24D98BCC4(v224, (uint64_t)WitnessTable);
  if (v223 > 999)
  {
    uint64_t v115 = v211;
    if ((unint64_t)(v223 - 1000) > 2)
    {
LABEL_131:
      BOOL v134 = v223 == 3;
      goto LABEL_92;
    }
  }
  else
  {
    uint64_t v115 = v211;
    if (v223 != 500)
    {
      if (v223 == 501)
      {
        uint64_t v116 = v114;
        id v117 = &unk_24DCEA2A0;
        goto LABEL_109;
      }
      if (v223 == 502)
      {
        uint64_t v116 = v114;
        id v117 = &unk_24DCEA2C0;
LABEL_109:
        uint64_t v136 = v117[v116];
        goto LABEL_110;
      }
      goto LABEL_131;
    }
  }
  BOOL v134 = v114 == 1;
LABEL_92:
  unsigned int v135 = v134;
  uint64_t v136 = 4 * v135;
LABEL_110:
  uint64_t v145 = *(void *)&v202[*(int *)(v115 + 76)];
  char v146 = sub_24D98BCC4(v224, (uint64_t)WitnessTable);
  if (v214 > 999)
  {
    uint64_t v147 = v209;
    if ((unint64_t)(v214 - 1000) >= 3)
    {
LABEL_138:
      BOOL v149 = v214 == 3;
      goto LABEL_119;
    }
LABEL_118:
    BOOL v149 = v146 == 1;
LABEL_119:
    unsigned int v150 = v149;
    uint64_t v148 = 4 * v150;
    goto LABEL_123;
  }
  uint64_t v147 = v209;
  if (v214 == 500) {
    goto LABEL_118;
  }
  if (v214 != 501)
  {
    if (v214 == 502)
    {
      uint64_t v148 = 64;
      if ((0xEu >> (v146 & 0xF)) & 1 | ((v145 & 2) != 0)) {
        uint64_t v148 = 0;
      }
      goto LABEL_123;
    }
    goto LABEL_138;
  }
  BOOL v169 = (v145 & 3) == 0 && (v146 & 0xF) == 0;
  uint64_t v148 = 16;
  if (!v169) {
    uint64_t v148 = 0;
  }
LABEL_123:
  uint64_t v151 = v226;
  if ((v148 & ~v136) == 0) {
    goto LABEL_129;
  }
  uint64_t v152 = v219;
  uint64_t v153 = *(void (**)(uint64_t, uint64_t, uint64_t))(v219 + 16);
  uint64_t v154 = v216;
  uint64_t v155 = v222;
  v153(v216, v226, v222);
  uint64_t v156 = v210;
  uint64_t v229 = v151 + *(int *)(v224 + 36);
  ((void (*)(char *))v153)(v210);
  swift_getAssociatedConformanceWitness();
  char v157 = sub_24DCC9798();
  uint64_t v158 = *(void (**)(char *, uint64_t))(v152 + 8);
  v158(v156, v155);
  uint64_t v219 = v152 + 8;
  v158((char *)v154, v155);
  uint64_t v147 = v209;
  if (v157) {
    goto LABEL_129;
  }
  uint64_t v160 = v217;
  uint64_t v159 = v218;
  uint64_t v231 = v218;
  uint64_t v162 = v212;
  uint64_t v161 = v213;
  uint64_t v232 = v212;
  uint64_t v233 = v217;
  uint64_t v234 = v213;
  type metadata accessor for JobResult();
  uint64_t v231 = v159;
  uint64_t v232 = v162;
  uint64_t v233 = v160;
  uint64_t v234 = v161;
  type metadata accessor for Materialization.BackgroundMaterializeParentHierarchy();
  v153(v216, v229, v222);
  uint64_t v163 = v206;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v165 = v164;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v205 + 8))(v163, v207);
  double v166 = v165 * 1000000000.0;
  if ((~COERCE__INT64(v165 * 1000000000.0) & 0x7FF0000000000000) == 0) {
    goto LABEL_184;
  }
  if (v166 <= -9.22337204e18)
  {
LABEL_185:
    __break(1u);
    goto LABEL_186;
  }
  uint64_t v167 = v216;
  if (v166 < 9.22337204e18)
  {
    uint64_t v168 = sub_24DC1BCF4(v216, 0, (uint64_t)v166, 0);
    v158((char *)v167, v222);
    sub_24D85246C(v208, v168);
    swift_release();
    uint64_t v147 = v209;
LABEL_129:
    (*(void (**)(char *, uint64_t))(v147 + 8))(v202, v211);
    goto LABEL_130;
  }
LABEL_186:
  __break(1u);
  return result;
}

unint64_t sub_24DBCE294(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  unint64_t result = sub_24DBE5040(a1, (uint64_t)a4);
  if (!v4)
  {
    if (result) {
      return 0;
    }
    else {
      return sub_24DBE533C(a2, a3, a4);
    }
  }
  return result;
}

uint64_t sub_24DBCE300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_24DC098B0(a1, a2, a3, a4);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v5;
}

uint64_t sub_24DBCE384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DBD15FC(a1, a2, a3, a4, (uint64_t (*)(void))sub_24DC09A04);
}

uint64_t sub_24DBCE39C(uint64_t a1, uint64_t *a2)
{
  uint64_t v123 = a1;
  uint64_t v3 = *a2;
  uint64_t v4 = *a2;
  uint64_t v5 = *(void *)(*a2 + 104);
  uint64_t v6 = *(void *)(*a2 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v110 = sub_24DCCA3F8();
  uint64_t v108 = *(void *)(v110 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v110);
  uint64_t v105 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v107 = (char *)&v101 - v11;
  uint64_t v111 = AssociatedTypeWitness;
  uint64_t v115 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v104 = (uint64_t)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v106 = (uint64_t)&v101 - v14;
  uint64_t v15 = *(void *)(v3 + 96);
  uint64_t v16 = *(void *)(v3 + 80);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v117 = sub_24DCCA3F8();
  uint64_t v119 = *(void *)(v117 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v117);
  uint64_t v112 = (char *)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  char v114 = (char *)&v101 - v21;
  uint64_t v120 = v17;
  uint64_t v118 = *(void *)(v17 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v116 = (uint64_t)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v109 = (uint64_t)&v101 - v24;
  uint64_t v124 = v16;
  uint64_t v125 = v6;
  uint64_t v121 = v6;
  uint64_t v122 = v5;
  uint64_t v126 = v15;
  uint64_t v127 = v5;
  uint64_t v25 = type metadata accessor for ItemReconciliation();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v113 = (char *)&v101 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v101 - v30;
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  uint64_t v34 = (char *)&v101 - v33;
  if (((*(uint64_t (**)(uint64_t))(v4 + 152))(v32) & 0x4000) == 0) {
    goto LABEL_5;
  }
  uint64_t v103 = v26;
  uint64_t v35 = v123;
  if (!sub_24DB86F3C(v25)) {
    goto LABEL_5;
  }
  uint64_t v36 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v37 = v35;
  uint64_t v38 = *(int *)(v36 + 36);
  uint64_t v39 = *(void *)(v35 + v38);
  uint64_t v40 = v103;
  double v102 = *(void (**)(char *, uint64_t, uint64_t))(v103 + 16);
  v102(v34, v37, v25);
  if ((v39 & 0x80) != 0)
  {
    id v101 = *(void (**)(char *, uint64_t))(v40 + 8);
    v101(v34, v25);
LABEL_8:
    if (sub_24D8903D0())
    {
      uint64_t v45 = *(void *)(v123 + v38);
      uint64_t v46 = v123;
      if ((v45 & 0x80) == 0)
      {
        uint64_t v47 = v128;
        goto LABEL_20;
      }
      v102(v31, v123, v25);
      if (v45)
      {
        v101(v31, v25);
        uint64_t v49 = v114;
      }
      else
      {
        uint64_t v48 = *(void *)&v31[*(int *)(v36 + 36)];
        v101(v31, v25);
        uint64_t v49 = v114;
        if ((v48 & 8) == 0) {
          goto LABEL_19;
        }
      }
      uint64_t v50 = v119;
      uint64_t v51 = v123;
      uint64_t v52 = v117;
      (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v49, v123, v117);
      uint64_t v53 = v118;
      uint64_t v54 = v120;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v49, 1, v120) == 1)
      {
        (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v52);
        uint64_t v47 = v128;
        uint64_t v46 = v51;
        goto LABEL_20;
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v109, v49, v54);
      uint64_t v56 = v107;
      uint64_t v55 = v108;
      (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v107, v51 + *(int *)(v25 + 52), v110);
      uint64_t v57 = v115;
      uint64_t v58 = v111;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v56, 1, v111) != 1)
      {
        uint64_t v76 = v106;
        uint64_t v77 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v57 + 32))(v106, v56, v58);
        double v78 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*a2 + 176))(v77);
        uint64_t v79 = v128;
        char v80 = sub_24D7B2C34(v76, v78);
        uint64_t v47 = v79;
        if (v79)
        {
          swift_release();
          uint64_t v75 = v111;
          uint64_t v82 = v115;
          uint64_t v66 = v120;
          uint64_t v70 = v118;
          uint64_t v83 = v106;
          uint64_t v84 = v109;
          goto LABEL_35;
        }
        char v87 = v80;
        uint64_t v88 = v81;
        swift_release();
        if (v87)
        {
          uint64_t v46 = v123;
          if (v88)
          {
            swift_retain();
            uint64_t v89 = v106;
            sub_24DBD5B10(a2, v106, v88);
            uint64_t v90 = v118;
            uint64_t v95 = v109;
            sub_24DBD5D60(a2, v109, v89);
            uint64_t v96 = v115;
            uint64_t v97 = v120;
            swift_release_n();
            (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v89, v111);
            (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v95, v97);
            char v43 = 1;
            return v43 & 1;
          }
        }
        else
        {
          swift_release();
          uint64_t v46 = v123;
        }
        (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v106, v111);
        (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v109, v120);
LABEL_20:
        if (!sub_24D8903D0()) {
          goto LABEL_24;
        }
        uint64_t v59 = v46 + *(int *)(v25 + 52);
        uint64_t v60 = type metadata accessor for ItemReconciliationHalf();
        uint64_t v61 = *(void *)(v59 + *(int *)(v60 + 36));
        if ((v61 & 0x80) == 0) {
          goto LABEL_24;
        }
        uint64_t v62 = v60;
        uint64_t v63 = v113;
        v102(v113, v46, v25);
        if (v61)
        {
          v101(v63, v25);
          uint64_t v65 = v119;
          uint64_t v66 = v120;
          uint64_t v67 = v116;
          int v68 = v112;
        }
        else
        {
          uint64_t v64 = *(void *)&v63[*(int *)(v25 + 52) + *(int *)(v62 + 36)];
          v101(v63, v25);
          uint64_t v65 = v119;
          uint64_t v66 = v120;
          uint64_t v67 = v116;
          int v68 = v112;
          if ((v64 & 8) == 0)
          {
LABEL_24:
            char v43 = 0;
            return v43 & 1;
          }
        }
        uint64_t v69 = v117;
        (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v68, v123, v117);
        uint64_t v70 = v118;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v68, 1, v66) == 1)
        {
          (*(void (**)(char *, uint64_t))(v65 + 8))(v68, v69);
LABEL_30:
          char v43 = 0;
          return v43 & 1;
        }
        (*(void (**)(uint64_t, char *, uint64_t))(v70 + 32))(v67, v68, v66);
        uint64_t v71 = v108;
        uint64_t v72 = v105;
        uint64_t v73 = v110;
        (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v105, v59, v110);
        uint64_t v74 = v115;
        uint64_t v75 = v111;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v72, 1, v111) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v116, v66);
          (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
          goto LABEL_30;
        }
        uint64_t v83 = v104;
        (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v104, v72, v75);
        uint64_t v84 = v116;
        char v85 = sub_24D7B2C34(v116, a2);
        if (!v47)
        {
          uint64_t v91 = v86;
          if (v85)
          {
            if (v86)
            {
              uint64_t v92 = *(uint64_t (**)(uint64_t))(*a2 + 176);
              uint64_t v93 = swift_retain();
              double v94 = (uint64_t *)v92(v93);
              sub_24DBD5B10(v94, v84, v91);
              uint64_t v98 = swift_release();
              uint64_t v99 = (void *)v92(v98);
              uint64_t v100 = v104;
              sub_24DBD5D60(v99, v104, v84);
              swift_release();
              swift_release_n();
              (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v100, v111);
              (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v84, v66);
              char v43 = 1;
              return v43 & 1;
            }
          }
          else
          {
            swift_release();
          }
          (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v83, v75);
          (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v84, v66);
          char v43 = 0;
          return v43 & 1;
        }
        uint64_t v82 = v115;
LABEL_35:
        (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v83, v75);
        (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v84, v66);
        return v43 & 1;
      }
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v109, v54);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v110);
    }
LABEL_19:
    uint64_t v47 = v128;
    uint64_t v46 = v123;
    goto LABEL_20;
  }
  uint64_t v41 = &v34[*(int *)(v25 + 52)];
  uint64_t v42 = *(void *)&v41[*(int *)(type metadata accessor for ItemReconciliationHalf() + 36)];
  id v101 = *(void (**)(char *, uint64_t))(v40 + 8);
  v101(v34, v25);
  if ((v42 & 0x80) != 0) {
    goto LABEL_8;
  }
LABEL_5:
  char v43 = 0;
  return v43 & 1;
}

uint64_t sub_24DBCF06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DBCF084(a1, a2, a3, a4, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.ReSnapshotChildren);
}

uint64_t sub_24DBCF084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, _OWORD *))
{
  uint64_t v6 = sub_24DC0966C(a1, a2, a3, a4, a5);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v6;
}

unint64_t sub_24DBCF108(void (*a1)(void, void, void), void (*a2)(char *, unint64_t), uint64_t a3, void *a4)
{
  uint64_t v269 = a3;
  v278 = a2;
  uint64_t v293 = a1;
  uint64_t v5 = *a4;
  uint64_t v6 = *(void *)(*a4 + 96);
  uint64_t v7 = *(void *)(*a4 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v271 = sub_24DCCA3F8();
  uint64_t v238 = *(void *)(v271 - 8);
  MEMORY[0x270FA5388](v271);
  uint64_t v240 = (char *)&v233 - v9;
  uint64_t v275 = type metadata accessor for JobLockRule();
  uint64_t v270 = *(void *)(v275 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v275);
  uint64_t v260 = (char *)&v233 - v11;
  unint64_t v279 = AssociatedTypeWitness;
  uint64_t v277 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v237 = (char *)&v233 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v244 = (char *)&v233 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v245 = (char *)&v233 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v243 = (char *)&v233 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v241 = (char *)&v233 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v246 = (char *)&v233 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v247 = (char *)&v233 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v258 = (char *)&v233 - v26;
  uint64_t v253 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v249 = *((void *)v253 - 1);
  MEMORY[0x270FA5388](v253);
  uint64_t v248 = (char *)&v233 - v27;
  uint64_t v284 = *(void *)(v5 + 88);
  uint64_t v28 = *(unsigned int (**)(void, void, void))(v5 + 104);
  uint64_t v286 = v7;
  uint64_t v287 = v284;
  uint64_t v288 = v6;
  uint64_t v289 = v28;
  uint64_t v29 = type metadata accessor for ItemReconciliation();
  uint64_t v30 = sub_24DCCA3F8();
  uint64_t v254 = *(void *)(v30 - 8);
  uint64_t v255 = v30;
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v242 = (uint64_t)&v233 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v250 = (char *)&v233 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v252 = (uint64_t)&v233 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v259 = (char *)&v233 - v38;
  uint64_t v256 = v29;
  uint64_t v257 = *(void *)(v29 - 8);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v239 = (char *)&v233 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v251 = (char *)&v233 - v42;
  uint64_t v276 = *(void *)(v7 - 8);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  v261 = (char *)&v233 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v43);
  uint64_t v264 = (uint64_t)&v233 - v45;
  uint64_t v46 = type metadata accessor for SnapshotItem();
  uint64_t v47 = sub_24DCCA3F8();
  TupleTypeMetadata2 = *(void *)(v47 - 8);
  uint64_t v263 = (void (*)(char *, void (*)(void, void), uint64_t))v47;
  uint64_t v48 = MEMORY[0x270FA5388](v47);
  uint64_t v267 = v46;
  uint64_t v268 = (char *)&v233 - v49;
  uint64_t v266 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v265 = (char *)&v233 - v50;
  uint64_t v51 = sub_24DCCA3F8();
  uint64_t v273 = *(void *)(v51 - 8);
  uint64_t v274 = v51;
  uint64_t v52 = MEMORY[0x270FA5388](v51);
  uint64_t v54 = (char *)&v233 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = MEMORY[0x270FA5388](v52);
  uint64_t v57 = (char *)&v233 - v56;
  uint64_t v58 = MEMORY[0x270FA5388](v55);
  uint64_t v60 = (char *)&v233 - v59;
  MEMORY[0x270FA5388](v58);
  uint64_t v62 = (char *)&v233 - v61;
  uint64_t v272 = a4;
  unint64_t v63 = a4[3];
  uint64_t v281 = v6;
  uint64_t v282 = v7;
  uint64_t v286 = v7;
  uint64_t v287 = v284;
  uint64_t v288 = v6;
  v280 = v28;
  uint64_t v289 = v28;
  uint64_t ItemMetadata = type metadata accessor for Ingestion.FetchItemMetadata();
  uint64_t v65 = *(uint64_t (**)(void, uint64_t, void))(*(void *)v63 + 288);
  unint64_t v66 = v63;
  uint64_t v67 = v283;
  char v68 = v65(v293, ItemMetadata, 0);
  if (v67) {
    return v66;
  }
  uint64_t v235 = v54;
  uint64_t v236 = v62;
  uint64_t v233 = v57;
  uint64_t v234 = v60;
  uint64_t v70 = v280;
  uint64_t v283 = 0;
  if (v68)
  {
    uint64_t v286 = 0;
    uint64_t v287 = 0xE000000000000000;
    sub_24DCCA728();
    sub_24DCC9968();
    swift_getAssociatedConformanceWitness();
    sub_24DCCADC8();
LABEL_5:
    unint64_t v66 = v286;
    sub_24D903CB0(v286, v287, 0, 2);
    swift_bridgeObjectRelease();
    return v66;
  }
  uint64_t v71 = v281;
  uint64_t v286 = v282;
  uint64_t v72 = v284;
  uint64_t v287 = v284;
  uint64_t v288 = v281;
  uint64_t v289 = v280;
  uint64_t v73 = type metadata accessor for Ingestion.DeleteFolderFromSnapshotIfEmpty();
  unint64_t v66 = v63;
  uint64_t v74 = v283;
  char v75 = v65(v293, v73, 0);
  if (v74) {
    return v66;
  }
  uint64_t v283 = 0;
  if (v75)
  {
    sub_24DCCAD88();
    swift_allocObject();
    uint64_t v76 = 1;
    uint64_t v77 = sub_24DCC9C58();
    uint64_t v79 = v78;
    unint64_t v80 = v279;
    uint64_t v81 = v78 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, void, unint64_t))(v277 + 16))(v79, v293, v80);
    uint64_t v82 = v236;
    (*(void (**)(char *, void (*)(char *, unint64_t), uint64_t))(v273 + 16))(v236, v278, v274);
    uint64_t v83 = v276;
    uint64_t v84 = v282;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v276 + 48))(v82, 1, v282) == 1)
    {
      uint64_t v83 = v273;
      uint64_t v85 = v274;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v281 + 72))(v84, v281);
      uint64_t v76 = 0;
      uint64_t v85 = v84;
    }
    (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v85);
    (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v277 + 56))(v81, v76, 1, v279);
    swift_storeEnumTagMultiPayload();
    uint64_t v91 = sub_24D785484(v77);
    uint64_t v92 = *(uint64_t (**)(uint64_t))(**(void **)(v272[4] + 16) + 304);
    uint64_t v93 = swift_retain();
    LOBYTE(v92) = v92(v93);
    swift_release();
    unint64_t v66 = sub_24DBE6988(v91, v269, v92 & 1);
    swift_bridgeObjectRelease();
    return v66;
  }
  uint64_t v86 = *(unsigned int (**)(void (*)(void, void), uint64_t, uint64_t))(v276 + 48);
  uint64_t v87 = v282;
  if (v86((void (*)(void, void))v278, 1, v282) == 1)
  {
    uint64_t v286 = v87;
    uint64_t v287 = v72;
    uint64_t v288 = v71;
    uint64_t v289 = v70;
    type metadata accessor for Propagation.DeleteItem();
    uint64_t v88 = sub_24DB17B64();
    unint64_t v66 = v63;
    uint64_t v89 = v283;
    char v90 = (*(uint64_t (**)(uint64_t, void))(*(void *)v63 + 240))(v88, 0);
    if (v89) {
      return v66;
    }
    if (v90)
    {
      unint64_t v66 = 0xD000000000000041;
      sub_24D903CB0(0xD000000000000041, 0x800000024DD0BB00, 0, 2);
      return v66;
    }
  }
  else
  {
    uint64_t v89 = v283;
  }
  unint64_t v94 = v272[4];
  unint64_t v66 = v94;
  (*(void (**)(void (*)(void, void, void), uint64_t))(*(void *)v94 + 240))(v293, 1);
  if (v89) {
    return v66;
  }
  uint64_t v283 = 0;
  uint64_t v95 = v266;
  uint64_t v96 = v267;
  uint64_t v97 = v268;
  int v98 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v266 + 48))(v268, 1, v267);
  uint64_t v99 = (char *)(v273 + 16);
  if (v98 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v265, v97, v96);
    uint64_t v112 = *(void (**)(char *, void (*)(void, void), uint64_t))v99;
    uint64_t v113 = v234;
    uint64_t v268 = v99;
    uint64_t v263 = v112;
    v112(v234, (void (*)(void, void))v278, v274);
    uint64_t v114 = v282;
    v280 = (unsigned int (*)(void, void, void))v86;
    unsigned int v115 = v86((void (*)(void, void))v113, 1, v282);
    uint64_t v116 = v276;
    uint64_t v117 = v277;
    if (v115 == 1)
    {
      uint64_t v284 = v94;
      (*(void (**)(char *, uint64_t))(v273 + 8))(v113, v274);
LABEL_24:
      uint64_t v118 = v270;
LABEL_25:
      sub_24DCCAD88();
      uint64_t v264 = *(void *)(v118 + 72);
      swift_allocObject();
      uint64_t v272 = (void *)sub_24DCC9C58();
      uint64_t v120 = v119;
      unint64_t v121 = v279;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v122 = v120 + *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v123 = *(void (**)(void))(v117 + 16);
      uint64_t v124 = v293;
      ((void (*)(uint64_t, void, unint64_t))v123)(v120, v293, v121);
      v261 = &v265[*(int *)(v267 + 36)];
      v123(v122);
      uint64_t v270 = *(void *)(v117 + 56);
      uint64_t v271 = v117 + 56;
      ((void (*)(uint64_t, void, uint64_t, unint64_t))v270)(v122, 0, 1, v121);
      swift_storeEnumTagMultiPayload();
      uint64_t v125 = v120 + v264;
      v264 += v120 + *(int *)(TupleTypeMetadata2 + 48);
      ((void (*)(uint64_t, void, unint64_t))v123)(v125, v124, v121);
      uint64_t v126 = v233;
      v263(v233, (void (*)(void, void))v278, v274);
      uint64_t v127 = v282;
      if (v280(v126, 1, v282) == 1)
      {
        (*(void (**)(char *, uint64_t))(v273 + 8))(v126, v274);
        uint64_t v128 = v264;
        ((void (*)(uint64_t, char *, unint64_t))v123)(v264, v261, v121);
      }
      else
      {
        uint64_t v136 = v258;
        (*(void (**)(uint64_t, uint64_t))(v281 + 72))(v127, v281);
        unint64_t v121 = v279;
        (*(void (**)(char *, uint64_t))(v276 + 8))(v126, v127);
        uint64_t v128 = v264;
        (*(void (**)(uint64_t, char *, unint64_t))(v277 + 32))(v264, v136, v121);
      }
      ((void (*)(uint64_t, void, uint64_t, unint64_t))v270)(v128, 0, 1, v121);
      swift_storeEnumTagMultiPayload();
      uint64_t v137 = sub_24D785484((uint64_t)v272);
      uint64_t v138 = *(uint64_t (**)(uint64_t))(**(void **)(v284 + 16) + 304);
      uint64_t v139 = swift_retain();
      LOBYTE(v138) = v138(v139);
      swift_release();
      unint64_t v66 = sub_24DBE6988(v137, v269, v138 & 1);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v266 + 8))(v265, v267);
      return v66;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v276 + 32))(v264, v113, v114);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v71 + 120))(v290, v114, v71);
    sub_24D7334DC(v290, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
    sub_24D3F0BA0((uint64_t)v290, (uint64_t)v292, &qword_26B197970);
    if (sub_24D3F0D40((uint64_t)v292) == 1)
    {
      int v133 = v283;
      BOOL v134 = v293;
      uint64_t v135 = (uint64_t)v259;
    }
    else
    {
      uint64_t v140 = (uint64_t)&v265[*(int *)(v96 + 52)];
      sub_24D3F0BA0(v140, (uint64_t)v285, &qword_26B197970);
      sub_24D3F0BA0((uint64_t)v285, (uint64_t)&v286, &qword_26B197970);
      int v141 = sub_24D3F0D40((uint64_t)&v286);
      BOOL v134 = v293;
      uint64_t v135 = (uint64_t)v259;
      if (v141 == 1)
      {
        int v133 = v283;
        (*(void (**)(void *__return_ptr, void (*)(void, void, void)))(*(void *)v94
                                                                                                  + 264))(v291, v293);
        unint64_t v66 = (unint64_t)v133;
        if (v133)
        {
          (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v264, v114);
          (*(void (**)(char *, uint64_t))(v266 + 8))(v265, v267);
          return v66;
        }
        sub_24D3F0BA0((uint64_t)v291, v140, &qword_26B197970);
      }
      else
      {
        int v133 = v283;
      }
    }
    unint64_t v146 = v272[2];
    unint64_t v66 = v146;
    sub_24D4759C8((uint64_t)v134, v135);
    uint64_t v283 = v133;
    if (v133)
    {
      (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v264, v114);
      uint64_t v147 = v265;
      uint64_t v148 = *(void (**)(char *, uint64_t))(v266 + 8);
    }
    else
    {
      uint64_t v284 = v94;
      uint64_t v149 = v256;
      uint64_t v150 = v257;
      uint64_t v151 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v257 + 48);
      uint64_t v272 = (void *)(v257 + 48);
      TupleTypeMetadata2 = (uint64_t)v151;
      if (v151(v135, 1, v256) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v254 + 8))(v135, v255);
        uint64_t v152 = v265;
      }
      else
      {
        uint64_t v153 = v251;
        (*(void (**)(char *, uint64_t, uint64_t))(v150 + 32))(v251, v135, v149);
        char v154 = v153[v253[19]];
        uint64_t v152 = v265;
        uint64_t v155 = &v265[*(int *)(v267 + 48)];
        uint64_t v156 = type metadata accessor for ItemMetadata();
        uint64_t v157 = v149;
        uint64_t v158 = v156;
        v155[*(int *)(v156 + 92)] = (v154 & 4) != 0;
        (*(void (**)(char *, uint64_t))(v257 + 8))(v153, v157);
        v155[*(int *)(v158 + 96)] = (v154 & 8) != 0;
        uint64_t v116 = v276;
      }
      swift_getWitnessTable();
      uint64_t v159 = v264;
      uint64_t v160 = v282;
      if (sub_24D98C5F4(v264))
      {
        (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v159, v160);
        uint64_t v118 = v270;
        uint64_t v117 = v277;
        goto LABEL_25;
      }
      uint64_t v161 = v252;
      unint64_t v66 = v146;
      uint64_t v162 = v283;
      sub_24D4759C8((uint64_t)v293, v252);
      uint64_t v283 = v162;
      if (!v162)
      {
        uint64_t v163 = v254;
        double v164 = v250;
        (*(void (**)(char *, uint64_t, uint64_t))(v254 + 16))(v250, v161, v255);
        uint64_t v165 = v256;
        if (((unsigned int (*)(char *, uint64_t, uint64_t))TupleTypeMetadata2)(v164, 1, v256) == 1)
        {
          double v166 = *(void (**)(uint64_t, uint64_t))(v163 + 8);
          uint64_t v167 = v255;
          v166(v252, v255);
          (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v264, v282);
          v166((uint64_t)v164, v167);
        }
        else
        {
          uint64_t v172 = v248;
          uint64_t v171 = v249;
          uint64_t v173 = v253;
          (*(void (**)(char *, char *, int *))(v249 + 16))(v248, v164, v253);
          (*(void (**)(char *, uint64_t))(v257 + 8))(v164, v165);
          uint64_t v174 = *(void *)&v172[v173[9]];
          (*(void (**)(char *, int *))(v171 + 8))(v172, v173);
          (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v252, v255);
          (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v264, v282);
          if (v174)
          {
            uint64_t v117 = v277;
            goto LABEL_24;
          }
        }
        (*(void (**)(char *, uint64_t))(v266 + 8))(v265, v267);
        return 0;
      }
      (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v264, v282);
      uint64_t v148 = *(void (**)(char *, uint64_t))(v266 + 8);
      uint64_t v147 = v152;
    }
    v148(v147, v267);
    return v66;
  }
  uint64_t v284 = v94;
  (*(void (**)(char *, void (*)(char *, void (*)(void, void), uint64_t)))(TupleTypeMetadata2 + 8))(v97, v263);
  uint64_t v100 = v235;
  uint64_t v101 = v274;
  (*(void (**)(char *, void (*)(char *, unint64_t), uint64_t))v99)(v235, v278, v274);
  uint64_t v102 = v282;
  unsigned int v103 = v86((void (*)(void, void))v100, 1, v282);
  uint64_t v104 = v276;
  uint64_t v105 = v277;
  if (v103 == 1)
  {
    uint64_t v106 = (*(uint64_t (**)(char *, uint64_t))(v273 + 8))(v100, v101);
    (*(void (**)(uint64_t))(*v272 + 216))(v106);
    unint64_t v107 = v279;
    uint64_t v108 = swift_getTupleTypeMetadata2();
    uint64_t v109 = v260;
    uint64_t v110 = &v260[*(int *)(v108 + 48)];
    (*(void (**)(char *, void, unint64_t))(v105 + 16))(v260, v293, v107);
    (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v105 + 56))(v110, 1, 1, v107);
    uint64_t v111 = v275;
    swift_storeEnumTagMultiPayload();
    LOBYTE(v110) = sub_24D57A5E4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v270 + 8))(v109, v111);
    if ((v110 & 1) == 0) {
      return 0xD000000000000018;
    }
    uint64_t v286 = 0;
    uint64_t v287 = 0xE000000000000000;
    sub_24DCCA728();
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  double v129 = v261;
  (*(void (**)(char *, char *, uint64_t))(v276 + 32))(v261, v100, v102);
  uint64_t v130 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 144))(v102, v71);
  unsigned int v132 = v130;
  if (!(v131 >> 62))
  {
    sub_24D466534(v130, v131);
    uint64_t v286 = 0;
    uint64_t v287 = 0xE000000000000000;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    uint64_t v286 = 0xD000000000000019;
    uint64_t v287 = 0x800000024DD0BB90;
    sub_24D7CE9A0(v132);
    sub_24DCC9968();
LABEL_63:
    swift_bridgeObjectRelease();
    unint64_t v66 = v286;
    (*(void (**)(char *, uint64_t))(v104 + 8))(v129, v102);
    return v66;
  }
  if (v131 >> 62 == 1)
  {
    (*(void (**)(char *, uint64_t))(v104 + 8))(v129, v102);
    return v132;
  }
  char v142 = *(uint64_t (**)(uint64_t, uint64_t))(v71 + 80);
  uint64_t v144 = v142(v102, v71);
  uint64_t v145 = v143;
  if (v144 == 11822 && v143 == 0xE200000000000000
    || (sub_24DCCAE28() & 1) != 0
    || v144 == 46 && v145 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_62:
    uint64_t v286 = 0;
    uint64_t v287 = 0xE000000000000000;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    uint64_t v286 = 0xD00000000000001ELL;
    uint64_t v287 = 0x800000024DD0BAE0;
    v142(v102, v71);
    BOOL v169 = (void *)sub_24DCC97B8();
    id v170 = objc_msgSend(v169, sel_fp_obfuscatedFilename);

    sub_24DCC97E8();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    goto LABEL_63;
  }
  char v168 = sub_24DCCAE28();
  swift_bridgeObjectRelease();
  if (v168) {
    goto LABEL_62;
  }
  unsigned __int8 v175 = v247;
  uint64_t v274 = *(void *)(v71 + 64);
  ((void (*)(uint64_t, uint64_t))v274)(v102, v71);
  unint64_t v176 = v279;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  char v178 = (*(uint64_t (**)(unint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v176, AssociatedConformanceWitness);
  long long v179 = *(void (**)(char *, unint64_t))(v277 + 8);
  v280 = (unsigned int (*)(void, void, void))(v277 + 8);
  v278 = v179;
  v179(v175, v176);
  if ((v178 & 1) != 0 && sub_24D8903D0())
  {
    unint64_t v66 = 0xD000000000000024;
    long long v180 = "item is root and not in the snapshot";
LABEL_73:
    sub_24D903CB0(v66, (unint64_t)(v180 - 32) | 0x8000000000000000, 0, 2);
    (*(void (**)(char *, uint64_t))(v276 + 8))(v261, v282);
    return v66;
  }
  uint64_t v181 = v246;
  ((void (*)(uint64_t, uint64_t))v274)(v282, v281);
  unint64_t v182 = v279;
  char v183 = (*(uint64_t (**)(unint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v279, AssociatedConformanceWitness);
  v278(v181, v182);
  if ((v183 & 1) != 0 && sub_24D8903D0())
  {
    unint64_t v66 = 0xD000000000000025;
    long long v180 = "item is trash and not in the snapshot";
    goto LABEL_73;
  }
  uint64_t v184 = *(uint64_t (**)(uint64_t))(**(void **)(v284 + 16) + 304);
  uint64_t v185 = swift_retain();
  char v186 = v184(v185);
  uint64_t v187 = swift_release();
  if (v186) {
    goto LABEL_79;
  }
  if (!v269) {
    goto LABEL_79;
  }
  unint64_t v188 = v279;
  uint64_t v189 = swift_getTupleTypeMetadata2();
  uint64_t v190 = v260;
  uint64_t v191 = &v260[*(int *)(v189 + 48)];
  uint64_t v192 = v277;
  (*(void (**)(char *, void, unint64_t))(v277 + 16))(v260, v293, v188);
  uint64_t v273 = *(void *)(v281 + 72);
  ((void (*)(uint64_t))v273)(v282);
  (*(void (**)(char *, void, uint64_t, unint64_t))(v192 + 56))(v191, 0, 1, v188);
  uint64_t v193 = v275;
  swift_storeEnumTagMultiPayload();
  char v194 = sub_24D57562C();
  uint64_t v187 = (*(uint64_t (**)(char *, uint64_t))(v270 + 8))(v190, v193);
  if (v194)
  {
    uint64_t v286 = 0;
    uint64_t v287 = 0xE000000000000000;
    sub_24DCCA728();
    sub_24DCC9968();
    uint64_t v195 = v241;
    uint64_t v196 = v261;
    uint64_t v197 = v282;
    ((void (*)(uint64_t, uint64_t))v273)(v282, v281);
    unint64_t v198 = v279;
    sub_24DCCADC8();
    v278(v195, v198);
    unint64_t v66 = v286;
    sub_24D903CB0(v286, v287, 0, 2);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v276 + 8))(v196, v197);
  }
  else
  {
LABEL_79:
    if (((*(uint64_t (**)(uint64_t))(*v272 + 256))(v187) & 1) != 0 && sub_24D8903D0())
    {
      unint64_t v199 = v272[2];
      uint64_t v200 = *(void (**)(uint64_t))(v281 + 72);
      uint64_t v201 = (uint64_t)v243;
      v200(v282);
      unint64_t v66 = v199;
      uint64_t v202 = v283;
      sub_24D4759C8(v201, v242);
      uint64_t v283 = v202;
      if (v202)
      {
        v278(v243, v279);
        (*(void (**)(char *, uint64_t))(v276 + 8))(v261, v282);
        return v66;
      }
      v278(v243, v279);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v257 + 48))(v242, 1, v256) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v254 + 8))(v242, v255);
      }
      else
      {
        uint64_t v203 = v239;
        (*(void (**)(char *, uint64_t, uint64_t))(v257 + 32))(v239, v242, v256);
        if (v203[v253[14]] == 3 && v239[v253[13]] != 2)
        {
          uint64_t v286 = 0;
          uint64_t v287 = 0xE000000000000000;
          sub_24DCCA728();
          sub_24DCC9968();
          uint64_t v204 = v241;
          uint64_t v205 = v261;
          uint64_t v206 = v282;
          ((void (*)(uint64_t, uint64_t))v200)(v282, v281);
          unint64_t v207 = v279;
          sub_24DCCADC8();
          v278(v204, v207);
          sub_24DCC9968();
          unint64_t v66 = v286;
          (*(void (**)(char *, uint64_t))(v257 + 8))(v239, v256);
          (*(void (**)(char *, uint64_t))(v276 + 8))(v205, v206);
          return v66;
        }
        (*(void (**)(char *, uint64_t))(v257 + 8))(v239, v256);
      }
    }
    uint64_t v208 = (uint64_t)v245;
    uint64_t v210 = v281;
    uint64_t v209 = v282;
    ((void (*)(uint64_t, uint64_t))v274)(v282, v281);
    uint64_t v211 = (uint64_t)v244;
    (*(void (**)(uint64_t, uint64_t))(v210 + 72))(v209, v210);
    uint64_t v212 = v283;
    unint64_t v213 = sub_24DBCE294(v208, v211, 0, v272);
    if (v212)
    {
      unint64_t v66 = v279;
      uint64_t v215 = v278;
      v278(v244, v279);
      v215(v245, v66);
      (*(void (**)(char *, uint64_t))(v276 + 8))(v261, v282);
    }
    else
    {
      unint64_t v66 = v213;
      uint64_t v216 = v214;
      unint64_t v217 = v279;
      uint64_t v218 = v278;
      v278(v244, v279);
      v218(v245, v217);
      if (v216)
      {
        (*(void (**)(char *, uint64_t))(v276 + 8))(v261, v282);
      }
      else
      {
        uint64_t v286 = sub_24DCC9C98();
        unint64_t v219 = v279;
        uint64_t v274 = swift_getTupleTypeMetadata2();
        v220 = &v260[*(int *)(v274 + 48)];
        uint64_t v221 = v277;
        uint64_t v222 = v293;
        uint64_t v293 = *(void (**)(void, void, void))(v277 + 16);
        v293(v260, v222, v219);
        uint64_t v283 = *(void (**)(void, void, void, void))(v221 + 56);
        v283(v220, 1, 1, v219);
        swift_storeEnumTagMultiPayload();
        uint64_t v273 = sub_24DCC9D48();
        sub_24DCC9D08();
        uint64_t v223 = *(void (**)(char *, uint64_t, uint64_t))(**(void **)(v284 + 16) + 512);
        swift_retain();
        uint64_t v224 = v240;
        v223(v261, v282, v281);
        swift_release();
        if ((*(unsigned int (**)(char *, uint64_t, unint64_t))(v221 + 48))(v224, 1, v219) == 1)
        {
          (*(void (**)(char *, uint64_t))(v238 + 8))(v240, v271);
        }
        else
        {
          uint64_t v225 = v237;
          unint64_t v226 = v279;
          (*(void (**)(char *, char *, unint64_t))(v277 + 32))(v237, v240, v279);
          uint64_t v227 = &v260[*(int *)(v274 + 48)];
          v293(v260, v225, v226);
          v283(v227, 1, 1, v226);
          swift_storeEnumTagMultiPayload();
          sub_24DCC9D08();
          v278(v225, v226);
        }
        uint64_t v228 = v286;
        uint64_t v229 = *(uint64_t (**)(uint64_t))(**(void **)(v284 + 16) + 304);
        uint64_t v230 = swift_retain();
        char v231 = v229(v230);
        swift_release();
        uint64_t v232 = v282;
        unint64_t v66 = sub_24DBE6988(v228, v269, v231 & 1);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v276 + 8))(v261, v232);
      }
    }
  }
  return v66;
}

uint64_t sub_24DBD15CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DBCF084(a1, a2, a3, a4, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.DeferredRescan);
}

uint64_t sub_24DBD15E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DBD15FC(a1, a2, a3, a4, (uint64_t (*)(void))sub_24DC095D4);
}

uint64_t sub_24DBD15FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v6;
}

uint64_t sub_24DBD1684(NSObject *a1, int a2, NSObject *a3, void *a4)
{
  uint64_t v341 = a1;
  v331 = a4;
  LODWORD(v330) = a2;
  isa = a3->isa;
  uint64_t v4 = (uint8_t *)isa[10];
  uint64_t v324 = a3;
  uint64_t v5 = (uint8_t *)isa[12];
  type metadata accessor for SnapshotItem();
  uint64_t v308 = sub_24DCCA3F8();
  uint64_t v307 = *(void *)(v308 - 8);
  MEMORY[0x270FA5388](v308);
  uint64_t v320 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v287 - v6);
  uint64_t v303 = type metadata accessor for JobLockRule();
  uint64_t v300 = *(void *)(v303 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v303);
  uint64_t v299 = (char *)&v287 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v298 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v304 = (char *)&v287 - v9;
  uint64_t v327 = sub_24DCC8CE8();
  uint64_t v326 = *(void *)(v327 - 8);
  MEMORY[0x270FA5388](v327);
  uint64_t v325 = (char *)&v287 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC9078();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v328 = v11;
  uint64_t v329 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v321 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v287 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v317 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v287 - v16);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v319 = (char *)&v287 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v315 = (char *)&v287 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v305 = (char *)&v287 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v318 = (uint8_t *)&v287 - v23;
  uint64_t v24 = type metadata accessor for FileTreeWriter.FileTreeChange();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 64);
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v313 = (char *)&v287 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v312 = (char *)&v287 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v309 = (char *)&v287 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v301 = (char *)&v287 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  v323 = (char *)&v287 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v311 = (char *)&v287 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v287 - v38);
  uint64_t v40 = sub_24DCCA3F8();
  uint64_t v334 = *(void *)(v40 - 8);
  uint64_t v335 = v40;
  uint64_t v41 = MEMORY[0x270FA5388](v40);
  uint64_t v306 = (char *)&v287 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v316 = (char *)&v287 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  v310 = (char *)&v287 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  v302 = (char *)&v287 - v48;
  MEMORY[0x270FA5388](v47);
  uint64_t v336 = (char *)&v287 - v49;
  uint64_t v332 = v5;
  uint64_t v333 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v337 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v338 = AssociatedTypeWitness;
  uint64_t v51 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v314 = (char *)&v287 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v55 = (char *)&v287 - v54;
  uint64_t v56 = MEMORY[0x270FA5388](v53);
  uint64_t v58 = (char *)&v287 - v57;
  uint64_t v59 = MEMORY[0x270FA5388](v56);
  uint64_t v61 = (char *)&v287 - v60;
  MEMORY[0x270FA5388](v59);
  v339 = (char *)&v287 - v62;
  uint64_t v63 = v25;
  unint64_t v66 = *(void (**)(char *, NSObject *, uint64_t))(v25 + 16);
  uint64_t v64 = v25 + 16;
  uint64_t v65 = v66;
  v66((char *)v39, v341, v24);
  v340 = v39;
  if (swift_getEnumCaseMultiPayload()) {
    return (*(uint64_t (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v63 + 8))(v340, v24);
  }
  v291 = v55;
  uint64_t v293 = v58;
  uint64_t v292 = v61;
  uint64_t v290 = v26;
  v297 = v65;
  uint64_t v294 = v64;
  uint64_t v296 = v24;
  uint64_t v295 = v63;
  type metadata accessor for JobLockAggregator();
  sub_24DCCA3F8();
  uint64_t v68 = v335;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v70 = v339;
  uint64_t v71 = (char *)v340 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v72 = *(void *)((char *)v340 + *(int *)(TupleTypeMetadata3 + 64));
  (*(void (**)(char *))(v337 + 32))(v339);
  uint64_t v73 = v334;
  uint64_t v74 = (void (*)(char *, unint64_t))v336;
  (*(void (**)(char *, char *, uint64_t))(v334 + 32))(v336, v71, v68);
  char v75 = v70;
  uint64_t v76 = v331;
  uint64_t v77 = v342;
  unint64_t v78 = sub_24DBCF108((void (*)(void, void, void))v75, v74, v72, v331);
  uint64_t v82 = v73;
  uint64_t v83 = v68;
  if (v77)
  {
    swift_release();
    uint64_t v84 = v338;
    uint64_t v85 = (uint64_t)v339;
    uint64_t v86 = v336;
LABEL_5:
    (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v337 + 8))(v85, v84);
  }
  uint64_t v87 = v78;
  unint64_t v88 = v79;
  uint64_t v89 = (uint64_t)v80;
  uint64_t v90 = v296;
  uint64_t v91 = v297;
  switch(v81)
  {
    case 1:
      uint64_t v109 = v295;
      uint64_t v342 = 0;
      uint64_t v289 = v72;
      if (!v79) {
        goto LABEL_36;
      }
      if ((v330 & 1) == 0)
      {
        uint64_t v110 = *(uint64_t (**)(void))(*v76 + 152);
        v340 = (uint64_t (*)(char *, uint64_t, uint64_t))v78;
        char v111 = v110();
        uint64_t v87 = (uint64_t)v340;
        if ((v111 & 4) == 0)
        {
          uint64_t v330 = (uint8_t *)v89;
          id v112 = (id)fpfs_current_or_default_log();
          sub_24DCC9088();
          uint64_t v113 = v301;
          uint64_t v114 = (void (*)(char *, char *, uint64_t))v297;
          v297(v301, v341, v90);
          swift_bridgeObjectRetain();
          unsigned int v115 = sub_24DCC9068();
          os_log_type_t v116 = sub_24DCCA108();
          uint64_t v324 = v115;
          LODWORD(v321) = v116;
          if (os_log_type_enabled(v115, v116))
          {
            uint64_t v117 = swift_slowAlloc();
            uint64_t v320 = (uint64_t (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
            v343 = v320;
            *(_DWORD *)uint64_t v117 = 136446466;
            uint64_t v319 = (char *)(v117 + 4);
            uint64_t v118 = v323;
            v114(v323, v113, v90);
            uint64_t v119 = *(void (**)(char *, uint64_t))(v295 + 8);
            v119(v113, v90);
            unint64_t v120 = sub_24D7CEE50(v90);
            unint64_t v122 = v121;
            v119(v118, v90);
            uint64_t v109 = v295;
            uint64_t v347 = sub_24D418FB4(v120, v122, (uint64_t *)&v343);
            sub_24DCCA428();
            swift_bridgeObjectRelease();
            *(_WORD *)(v117 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v123 = (uint64_t)v340;
            uint64_t v347 = sub_24D418FB4((uint64_t)v340, v88, (uint64_t *)&v343);
            sub_24DCCA428();
            uint64_t v124 = v330;
            sub_24DC0A088(v123, v88, (uint64_t)v330, 1);
            sub_24DC0A088(v123, v88, (uint64_t)v124, 1);
            swift_bridgeObjectRelease();
            uint64_t v125 = v324;
            _os_log_impl(&dword_24D3D0000, v324, (os_log_type_t)v321, "defer ingestion of %{public}s: %s", (uint8_t *)v117, 0x16u);
            uint64_t v126 = v320;
            swift_arrayDestroy();
            MEMORY[0x25332B030](v126, -1, -1);
            MEMORY[0x25332B030](v117, -1, -1);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v109 + 8))(v113, v90);
            uint64_t v254 = (uint64_t)v340;
            uint64_t v255 = v330;
            sub_24DC0A088((uint64_t)v340, v88, (uint64_t)v330, 1);
            sub_24DC0A088(v254, v88, (uint64_t)v255, 1);
          }
          (*(void (**)(char *, uint64_t))(v329 + 8))(v305, v328);
          uint64_t v256 = v337;
          uint64_t v257 = v327;
          uint64_t v258 = v326;
          uint64_t v259 = v325;
          uint64_t v260 = v302;
          sub_24DCC8CD8();
          sub_24DCC8C88();
          double v262 = v261;
          (*(void (**)(char *, uint64_t))(v258 + 8))(v259, v257);
          double v263 = v262 * 1000000000.0;
          uint64_t v264 = v303;
          uint64_t v265 = (uint64_t)v304;
          if ((~COERCE__INT64(v262 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            if (v263 > -9.22337204e18)
            {
              if (v263 < 9.22337204e18)
              {
                v340 = (uint64_t (*)(char *, uint64_t, uint64_t))(uint64_t)v263;
                uint64_t v266 = v338;
                sub_24DCCA3F8();
                uint64_t v267 = (uint8_t *)(v265 + *(int *)(swift_getTupleTypeMetadata2() + 48));
                (*(void (**)(uint64_t, char *, uint64_t))(v256 + 16))(v265, v339, v266);
                (*(void (**)(char *, char *, uint64_t))(v334 + 16))(v260, v336, v335);
                uint64_t v268 = *((void *)v333 - 1);
                uint64_t v269 = 1;
                if ((*(unsigned int (**)(char *, uint64_t))(v268 + 48))(v260, 1) == 1)
                {
                  uint64_t v268 = v334;
                  uint64_t v270 = (uint8_t *)v335;
                }
                else
                {
                  uint64_t v271 = (void (*)(uint8_t *))*((void *)v332 + 9);
                  uint64_t v330 = v267;
                  uint64_t v272 = v264;
                  uint64_t v273 = v256;
                  uint64_t v274 = v333;
                  v271(v333);
                  uint64_t v269 = 0;
                  uint64_t v270 = v274;
                  uint64_t v256 = v273;
                  uint64_t v264 = v272;
                  uint64_t v267 = v330;
                }
                (*(void (**)(char *, uint8_t *))(v268 + 8))(v260, v270);
                (*(void (**)(uint8_t *, uint64_t, uint64_t, uint64_t))(v256 + 56))(v267, v269, 1, v338);
                uint64_t v275 = swift_storeEnumTagMultiPayload();
                uint64_t v276 = v331;
                (*(void (**)(uint64_t))(*v331 + 216))(v275);
                sub_24D579DF8(v265);
                swift_release();
                LODWORD(v330) = *(unsigned __int8 *)(v276[4] + 32);
                uint64_t v277 = v265;
                uint64_t v278 = v300;
                unint64_t v279 = v299;
                (*(void (**)(char *, uint64_t, uint64_t))(v300 + 16))(v299, v277, v264);
                v297(v323, v341, v90);
                unint64_t v280 = (*(unsigned __int8 *)(v278 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v278 + 80);
                unint64_t v281 = (v298 + *(unsigned __int8 *)(v109 + 80) + v280) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
                unint64_t v282 = (v290 + v281 + 7) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v283 = (char *)swift_allocObject();
                *((void *)v283 + 2) = v333;
                uint64_t v284 = isa;
                v285 = v332;
                *((void *)v283 + 3) = isa[11];
                *((void *)v283 + 4) = v285;
                *((void *)v283 + 5) = v284[13];
                *((void *)v283 + 6) = v276;
                (*(void (**)(char *, char *, uint64_t))(v278 + 32))(&v283[v280], v279, v264);
                (*(void (**)(char *, char *, uint64_t))(v109 + 32))(&v283[v281], v323, v296);
                *(void *)&v283[v282] = v340;
                uint64_t v286 = *(void (**)(const char *, uint64_t, uint64_t, void, uint64_t, uint64_t (*)(void), void, uint64_t (*)(), char *))(*v276 + 424);
                swift_retain();
                v286("ingest(itemChange:ignoreAfterFlush:result:db:)", 46, 2, v330, 1, nullsub_1, 0, sub_24DC0A610, v283);
                swift_release();
                swift_release();
                (*(void (**)(char *, uint64_t))(v278 + 8))(v304, v264);
                (*(void (**)(char *, uint64_t))(v334 + 8))(v336, v335);
                return (*(uint64_t (**)(char *, uint64_t))(v337 + 8))(v339, v338);
              }
LABEL_69:
              __break(1u);
              JUMPOUT(0x24DBD3AA4);
            }
LABEL_68:
            __break(1u);
            goto LABEL_69;
          }
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
      }
      sub_24DC0A088(v87, v88, v89, 1);
      uint64_t v91 = v297;
LABEL_36:
      id v206 = (id)fpfs_current_or_default_log();
      unint64_t v207 = v315;
      sub_24DCC9088();
      uint64_t v208 = v309;
      v91(v309, v341, v90);
      uint64_t v209 = sub_24DCC9068();
      os_log_type_t v210 = sub_24DCCA108();
      if (os_log_type_enabled(v209, v210))
      {
        uint64_t v341 = v209;
        uint64_t v211 = (uint8_t *)swift_slowAlloc();
        v340 = (uint64_t (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
        v343 = v340;
        uint64_t v330 = v211;
        *(_DWORD *)uint64_t v211 = 136446210;
        isa = v211 + 4;
        uint64_t v212 = v323;
        v91(v323, v208, v90);
        uint64_t v213 = v90;
        uint64_t v214 = *(void (**)(char *, uint64_t))(v109 + 8);
        v214(v208, v90);
        unint64_t v215 = sub_24D7CEE50(v90);
        unint64_t v217 = v216;
        v214(v212, v213);
        uint64_t v347 = sub_24D418FB4(v215, v217, (uint64_t *)&v343);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        uint64_t v218 = v341;
        unint64_t v219 = v330;
        _os_log_impl(&dword_24D3D0000, v341, v210, "%{public}s", v330, 0xCu);
        uint64_t v220 = (uint64_t)v340;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v220, -1, -1);
        MEMORY[0x25332B030](v219, -1, -1);

        (*(void (**)(char *, uint64_t))(v329 + 8))(v315, v328);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v109 + 8))(v208, v90);

        (*(void (**)(char *, uint64_t))(v329 + 8))(v207, v328);
      }
      uint64_t v84 = v338;
      uint64_t v85 = (uint64_t)v339;
      uint64_t v86 = v336;
      uint64_t v221 = (uint64_t)v332;
      uint64_t v222 = v333;
      uint64_t v223 = v327;
      uint64_t v224 = v326;
      uint64_t v225 = v325;
      uint64_t v226 = (uint64_t)v310;
      (*(void (**)(char *, char *, uint64_t))(v334 + 16))(v310, v336, v335);
      sub_24D97D6D0(v226, (uint64_t)v222, v221, (uint64_t)v320);
      sub_24DCC8CD8();
      sub_24DCC8C88();
      double v228 = v227;
      (*(void (**)(char *, uint64_t))(v224 + 8))(v225, v223);
      double v229 = v228 * 1000000000.0;
      if ((~COERCE__INT64(v228 * 1000000000.0) & 0x7FF0000000000000) == 0) {
        goto LABEL_64;
      }
      uint64_t v230 = v308;
      uint64_t v231 = v307;
      if (v229 <= -9.22337204e18) {
        goto LABEL_65;
      }
      uint64_t v82 = v334;
      uint64_t v83 = v335;
      uint64_t v232 = v320;
      if (v229 < 9.22337204e18)
      {
        sub_24DBCB8D8(v320, v85, 0, 0, 0, v331, 0x2000000000000000, (uint64_t)v229, 2048, (uint64_t)v324);
        swift_release();
        (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v231 + 8))(v232, v230);
        goto LABEL_5;
      }
      goto LABEL_66;
    case 2:
      v340 = (uint64_t (*)(char *, uint64_t, uint64_t))v78;
      uint64_t v342 = 0;
      id v127 = (id)fpfs_current_or_default_log();
      uint64_t v128 = v318;
      sub_24DCC9088();
      double v129 = v311;
      v91(v311, v341, v90);
      swift_bridgeObjectRetain();
      uint64_t v130 = sub_24DCC9068();
      os_log_type_t v131 = sub_24DCCA108();
      uint64_t v341 = v130;
      LODWORD(v331) = v131;
      BOOL v132 = os_log_type_enabled(v130, v131);
      uint64_t v289 = v72;
      if (v132)
      {
        uint64_t v133 = swift_slowAlloc();
        uint64_t v321 = (uint64_t (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
        v343 = v321;
        *(_DWORD *)uint64_t v133 = 136446466;
        uint64_t v320 = (uint64_t (*)(char *, uint64_t, uint64_t))(v133 + 4);
        BOOL v134 = v323;
        v91(v323, v129, v90);
        uint64_t v135 = v90;
        uint64_t v136 = *(void (**)(char *, uint64_t))(v295 + 8);
        v136(v129, v135);
        unint64_t v137 = sub_24D7CEE50(v135);
        uint64_t v330 = (uint8_t *)v89;
        unint64_t v139 = v138;
        v136(v134, v135);
        uint64_t v347 = sub_24D418FB4(v137, v139, (uint64_t *)&v343);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        *(_WORD *)(v133 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v140 = (uint64_t)v340;
        uint64_t v347 = sub_24D418FB4((uint64_t)v340, v88, (uint64_t *)&v343);
        uint64_t v89 = (uint64_t)v330;
        sub_24DCCA428();
        sub_24DC0A088(v140, v88, v89, 2);
        sub_24DC0A088(v140, v88, v89, 2);
        swift_bridgeObjectRelease();
        int v141 = v341;
        _os_log_impl(&dword_24D3D0000, v341, (os_log_type_t)v331, "%{public}s force fetch: %{public}s", (uint8_t *)v133, 0x16u);
        char v142 = v321;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v142, -1, -1);
        MEMORY[0x25332B030](v133, -1, -1);

        (*(void (**)(uint8_t *, uint64_t))(v329 + 8))(v318, v328);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v295 + 8))(v129, v90);
        uint64_t v182 = (uint64_t)v340;
        sub_24DC0A088((uint64_t)v340, v88, v89, 2);
        sub_24DC0A088(v182, v88, v89, 2);

        (*(void (**)(uint8_t *, uint64_t))(v329 + 8))(v128, v328);
      }
      uint64_t v183 = v337;
      uint64_t v184 = v327;
      uint64_t v185 = v326;
      char v186 = v325;
      uint64_t v187 = (uint64_t)v292;
      (*(void (**)(char *, char *, uint64_t))(v337 + 16))(v292, v339, v338);
      sub_24DCC8CD8();
      sub_24DCC8C88();
      double v189 = v188;
      (*(void (**)(char *, uint64_t))(v185 + 8))(v186, v184);
      double v190 = v189 * 1000000000.0;
      if ((~COERCE__INT64(v189 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
        __break(1u);
        goto LABEL_59;
      }
      if (v190 <= -9.22337204e18)
      {
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      if (v190 >= 9.22337204e18) {
        goto LABEL_60;
      }
      uint64_t v191 = (uint64_t)v190;
      if ((v89 & 0xFFFFFFFFFFFFF7FFLL) != 0) {
        uint64_t v192 = v89 | 0x800;
      }
      else {
        uint64_t v192 = 2048;
      }
      uint64_t v193 = isa[11];
      uint64_t v194 = isa[13];
      uint64_t v196 = v332;
      uint64_t v195 = (uint64_t (*)(char *, uint64_t, uint64_t))v333;
      v343 = (uint64_t (*)(char *, uint64_t, uint64_t))v333;
      uint64_t v344 = v193;
      uint64_t v345 = v332;
      uint64_t v346 = v194;
      type metadata accessor for Ingestion.FetchItemMetadata();
      uint64_t v197 = sub_24DC09748(v187, 0x2000000000000000, v191, v192, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
      unint64_t v198 = *(void (**)(uint64_t, uint64_t))(v183 + 8);
      uint64_t v199 = v338;
      v198(v187, v338);
      uint64_t v200 = *(void **)(v197 + 96);
      uint64_t v201 = *(void **)(v197 + 104);
      *(_OWORD *)(v197 + 96) = xmmword_24DCDE090;
      char v202 = *(unsigned char *)(v197 + 112);
      *(unsigned char *)(v197 + 112) = 0;
      sub_24D3E380C(v200, v201, v202);
      v343 = v195;
      uint64_t v344 = v193;
      uint64_t v345 = v196;
      uint64_t v346 = v194;
      type metadata accessor for JobResult();
      sub_24D85246C((uint64_t)v324, v197);
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v334 + 8))(v336, v335);
      return ((uint64_t (*)(char *, uint64_t))v198)(v339, v199);
    case 3:
      v340 = (uint64_t (*)(char *, uint64_t, uint64_t))v78;
      uint64_t v330 = v80;
      uint64_t v289 = v72;
      uint64_t v342 = 0;
      id v143 = (id)fpfs_current_or_default_log();
      uint64_t v144 = v319;
      sub_24DCC9088();
      uint64_t v145 = v316;
      v323 = *(char **)(v82 + 16);
      ((void (*)(char *, char *, uint64_t))v323)(v316, v336, v83);
      uint64_t v146 = v337;
      uint64_t v147 = v338;
      uint64_t v148 = *(void **)(v337 + 16);
      uint64_t v149 = v293;
      uint64_t v341 = (v337 + 16);
      v331 = v148;
      ((void (*)(char *, char *, uint64_t))v148)(v293, v339, v338);
      uint64_t v150 = sub_24DCC9068();
      LODWORD(v321) = sub_24DCCA108();
      BOOL v151 = os_log_type_enabled(v150, (os_log_type_t)v321);
      unint64_t v288 = v88;
      if (!v151)
      {
        v323 = *(char **)(v82 + 8);
        ((void (*)(char *, uint64_t))v323)(v145, v335);
        uint64_t v203 = *(void (**)(char *, uint64_t))(v146 + 8);
        v203(v149, v147);

        (*(void (**)(char *, uint64_t))(v329 + 8))(v144, v328);
        uint64_t v204 = isa;
        uint64_t v205 = v147;
        goto LABEL_46;
      }
      uint64_t v320 = (uint64_t (*)(char *, uint64_t, uint64_t))v150;
      uint64_t v152 = (uint8_t *)swift_slowAlloc();
      uint64_t v317 = (uint64_t (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
      v343 = v317;
      uint64_t v318 = v152;
      *(_DWORD *)uint64_t v152 = 136315138;
      uint64_t v153 = v306;
      uint64_t v154 = v335;
      ((void (*)(char *, char *, uint64_t))v323)(v306, v145, v335);
      uint64_t v155 = v333;
      uint64_t v156 = *((void *)v333 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, uint8_t *))(v156 + 48))(v153, 1, v333) == 1)
      {
        (*(void (**)(char *, uint64_t))(v334 + 8))(v153, v154);
        uint64_t v157 = v291;
        uint64_t v158 = v293;
        uint64_t v159 = v338;
        ((void (*)(char *, char *, uint64_t))v331)(v291, v293, v338);
      }
      else
      {
        uint64_t v233 = sub_24DCCAD78();
        unint64_t v235 = v234;
        (*(void (**)(char *, uint8_t *))(v156 + 8))(v153, v155);
        uint64_t v157 = v291;
        uint64_t v158 = v293;
        uint64_t v159 = v338;
        ((void (*)(char *, char *, uint64_t))v331)(v291, v293, v338);
        if (v235) {
          goto LABEL_45;
        }
      }
      swift_getAssociatedConformanceWitness();
      uint64_t v233 = sub_24DCCAD78();
      unint64_t v235 = v236;
LABEL_45:
      uint64_t v237 = v318;
      uint64_t v203 = *(void (**)(char *, uint64_t))(v337 + 8);
      v203(v157, v159);
      uint64_t v347 = sub_24D418FB4(v233, v235, (uint64_t *)&v343);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      v323 = *(char **)(v334 + 8);
      ((void (*)(char *, uint64_t))v323)(v316, v335);
      v203(v158, v159);
      uint64_t v238 = v320;
      _os_log_impl(&dword_24D3D0000, (os_log_t)v320, (os_log_type_t)v321, "delay tracking of temporary item %s", v237, 0xCu);
      uint64_t v239 = v317;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v239, -1, -1);
      MEMORY[0x25332B030](v237, -1, -1);

      (*(void (**)(char *, uint64_t))(v329 + 8))(v319, v328);
      uint64_t v204 = isa;
      uint64_t v205 = v159;
LABEL_46:
      uint64_t v240 = v204[11];
      uint64_t v241 = v204[13];
      v343 = (uint64_t (*)(char *, uint64_t, uint64_t))v333;
      uint64_t v344 = v240;
      uint64_t v345 = v332;
      uint64_t v346 = v241;
      type metadata accessor for Ingestion.TrackTemporaryItem();
      uint64_t v242 = (uint64_t)v314;
      ((void (*)(char *, char *, uint64_t))v331)(v314, v339, v205);
      uint64_t v243 = v325;
      sub_24DCC8CD8();
      sub_24DCC8C88();
      double v245 = v244;
      (*(void (**)(char *, uint64_t))(v326 + 8))(v243, v327);
      double v246 = v245 * 1000000000.0;
      if ((~COERCE__INT64(v245 * 1000000000.0) & 0x7FF0000000000000) == 0) {
        goto LABEL_61;
      }
      if (v246 <= -9.22337204e18) {
        goto LABEL_62;
      }
      uint64_t v247 = v338;
      if (v246 >= 9.22337204e18) {
        goto LABEL_63;
      }
      uint64_t v248 = (uint64_t)v246;
      swift_allocObject();
      uint64_t v249 = sub_24D983960(v242, 0x2000000000000000, v248, 2048);
      v203((char *)v242, v247);
      uint64_t v251 = *(void **)(v249 + 96);
      uint64_t v250 = *(void **)(v249 + 104);
      *(void *)(v249 + 96) = 256;
      uint64_t v252 = v288;
      *(void *)(v249 + 104) = v288;
      char v253 = *(unsigned char *)(v249 + 112);
      *(unsigned char *)(v249 + 112) = 0;
      swift_retain();
      sub_24D3E380C(v251, v250, v253);
      v343 = (uint64_t (*)(char *, uint64_t, uint64_t))v333;
      uint64_t v344 = v240;
      uint64_t v345 = v332;
      uint64_t v346 = v241;
      type metadata accessor for JobResult();
      sub_24D85246C((uint64_t)v324, v249);
      swift_release();
      swift_release();
      sub_24DC0A088((uint64_t)v340, v252, (uint64_t)v330, 3);
      ((void (*)(char *, uint64_t))v323)(v336, v335);
      return ((uint64_t (*)(char *, uint64_t))v203)(v339, v247);
    case 4:
      id v160 = (id)fpfs_current_or_default_log();
      uint64_t v161 = v317;
      sub_24DCC9088();
      uint64_t v162 = v312;
      v91(v312, v341, v90);
      uint64_t v163 = sub_24DCC9068();
      os_log_type_t v164 = sub_24DCCA118();
      if (os_log_type_enabled(v163, v164))
      {
        uint64_t v341 = v163;
        uint64_t v165 = swift_slowAlloc();
        uint64_t v289 = v72;
        double v166 = (uint8_t *)v165;
        uint64_t v167 = (uint64_t (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
        uint64_t v342 = 0;
        v343 = v167;
        v340 = v167;
        *(_DWORD *)double v166 = 136315138;
        uint64_t v332 = v166 + 4;
        uint64_t v333 = v166;
        char v168 = v323;
        v91(v323, v162, v90);
        uint64_t v169 = v90;
        id v170 = *(void (**)(char *, uint64_t))(v295 + 8);
        v170(v162, v90);
        unint64_t v171 = sub_24D7CEE50(v90);
        unint64_t v173 = v172;
        v170(v168, v169);
        uint64_t v347 = sub_24D418FB4(v171, v173, (uint64_t *)&v343);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        uint64_t v174 = v341;
        unsigned __int8 v175 = v333;
        _os_log_impl(&dword_24D3D0000, v341, v164, "⛔️  already known %s", v333, 0xCu);
        uint64_t v176 = (uint64_t)v340;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v176, -1, -1);
        MEMORY[0x25332B030](v175, -1, -1);

        swift_release();
        char v177 = *(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v329 + 8);
        char v178 = &v348;
LABEL_23:
        uint64_t v181 = (uint64_t (*)(char *, uint64_t, uint64_t))*(v178 - 32);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v295 + 8))(v162, v90);

        swift_release();
        char v177 = *(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v329 + 8);
        uint64_t v181 = v161;
      }
      v177(v181, v328);
      (*(void (**)(char *, uint64_t))(v334 + 8))(v336, v335);
      return (*(uint64_t (**)(char *, uint64_t))(v337 + 8))(v339, v338);
    default:
      v340 = (uint64_t (*)(char *, uint64_t, uint64_t))v78;
      uint64_t v330 = v80;
      id v92 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      uint64_t v93 = v313;
      v91(v313, v341, v90);
      swift_bridgeObjectRetain();
      unint64_t v94 = v88;
      uint64_t v95 = sub_24DCC9068();
      os_log_type_t v96 = sub_24DCCA118();
      int v97 = v96;
      if (os_log_type_enabled(v95, v96))
      {
        uint64_t v98 = swift_slowAlloc();
        uint64_t v289 = v72;
        uint64_t v99 = v98;
        uint64_t v341 = swift_slowAlloc();
        uint64_t v342 = 0;
        v343 = (uint64_t (*)(char *, uint64_t, uint64_t))v341;
        *(_DWORD *)uint64_t v99 = 136315394;
        uint64_t v332 = (uint8_t *)(v99 + 4);
        LODWORD(v333) = v97;
        uint64_t v100 = v323;
        v91(v323, v93, v90);
        uint64_t v101 = v90;
        uint64_t v102 = *(void (**)(char *, uint64_t))(v295 + 8);
        v102(v93, v101);
        unint64_t v103 = sub_24D7CEE50(v101);
        unint64_t v105 = v104;
        v102(v100, v101);
        uint64_t v347 = sub_24D418FB4(v103, v105, (uint64_t *)&v343);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        *(_WORD *)(v99 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v106 = (uint64_t)v340;
        uint64_t v347 = sub_24D418FB4((uint64_t)v340, v94, (uint64_t *)&v343);
        sub_24DCCA428();
        unint64_t v107 = v330;
        sub_24DC0A088(v106, v94, (uint64_t)v330, 0);
        sub_24DC0A088(v106, v94, (uint64_t)v107, 0);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24D3D0000, v95, (os_log_type_t)v333, "⛔️  discarded %s: %s", (uint8_t *)v99, 0x16u);
        uint64_t v108 = v341;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v108, -1, -1);
        MEMORY[0x25332B030](v99, -1, -1);

        swift_release();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v295 + 8))(v93, v90);

        swift_release();
        uint64_t v179 = (uint64_t)v340;
        long long v180 = v330;
        sub_24DC0A088((uint64_t)v340, v94, (uint64_t)v330, 0);
        sub_24DC0A088(v179, v94, (uint64_t)v180, 0);
      }
      char v177 = *(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v329 + 8);
      char v178 = &v349;
      goto LABEL_23;
  }
}

id sub_24DBD3AB8()
{
  id result = sub_24DBD3AD8();
  qword_26B1A2490 = (uint64_t)result;
  return result;
}

id sub_24DBD3AD8()
{
  xpc_object_t v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81A0], 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81C0], *MEMORY[0x263EF81F0]);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF82A0], 0);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF8180], 0);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x263EF8280], (const char *)*MEMORY[0x263EF8290]);
  id v1 = objc_allocWithZone(MEMORY[0x263F3C6F0]);
  uint64_t v2 = (void *)sub_24DCC97B8();
  id v3 = objc_msgSend(v1, sel_initWithLabel_criteria_, v2, v0);

  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_24DBD3BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, ValueMetadata *a11)
{
  uint64_t v88 = a6;
  uint64_t v89 = a7;
  int v84 = a5;
  LODWORD(v86) = a4;
  uint64_t v85 = a3;
  id v92 = a9;
  uint64_t v93 = a1;
  uint64_t v90 = a8;
  uint64_t v91 = a11;
  uint64_t v12 = type metadata accessor for SnapshotItem();
  uint64_t v13 = *(char **)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v87 = (void (**)(char *, uint64_t))((char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v82 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v82 - v19;
  uint64_t v21 = sub_24DCCA3F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v23 = MEMORY[0x270FA5388](TupleTypeMetadata2 - 8);
  uint64_t v25 = (char *)&v82 - v24;
  uint64_t v26 = (char *)&v82 + *(int *)(v23 + 56) - v24;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
  v27((char *)&v82 - v24, v93, v21);
  uint64_t v28 = a2;
  uint64_t v29 = v13;
  v27(v26, v28, v21);
  uint64_t v30 = (uint64_t (*)(char *, uint64_t, uint64_t))*((void *)v13 + 6);
  LODWORD(v13) = v30(v25, 1, v12);
  uint64_t v93 = v12;
  int v31 = v30(v26, 1, v12);
  if (v13 != 1)
  {
    uint64_t v40 = v18;
    uint64_t v41 = (uint64_t)v87;
    uint64_t v42 = (void (*)(char *, char *, uint64_t))*((void *)v29 + 4);
    if (v31 != 1)
    {
      uint64_t v61 = v40;
      uint64_t v62 = v93;
      v42(v40, v25, v93);
      uint64_t v63 = v41;
      v42((char *)v41, v26, v62);
      swift_getWitnessTable();
      unint64_t v64 = sub_24D98C5F4(v41);
      if ((v64 == 0 || (v86 & 1) == 0) | (v64 >> 43) & 1) {
        uint64_t v65 = v64;
      }
      else {
        uint64_t v65 = v64 | 0x80000000000;
      }
      MEMORY[0x270FA5388](v64);
      strcpy((char *)&v82 - 48, "oldItem newItem diffs reason ");
      uint64_t v94 = v62;
      uint64_t v95 = v62;
      os_log_type_t v96 = &type metadata for Fields;
      int v97 = (ValueMetadata *)MEMORY[0x263F8D310];
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v67 = v92;
      uint64_t v68 = (char *)v92 + TupleTypeMetadata[12];
      uint64_t v69 = TupleTypeMetadata[16];
      uint64_t v70 = (void *)((char *)v92 + TupleTypeMetadata[20]);
      v42((char *)v92, v61, v62);
      v42(v68, (char *)v63, v62);
      *(void *)((char *)v67 + v69) = v65;
      uint64_t v71 = v89;
      void *v70 = v88;
      v70[1] = v71;
      uint64_t v94 = v90;
      uint64_t v95 = v90;
      os_log_type_t v96 = v91;
      int v97 = v91;
      type metadata accessor for ItemChange();
      goto LABEL_17;
    }
    uint64_t v87 = (void (**)(char *, uint64_t))v29;
    uint64_t v43 = v93;
    uint64_t v83 = v42;
    v42(v20, v25, v93);
    uint64_t v44 = v90;
    uint64_t v45 = v91;
    swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
    uint64_t v48 = swift_checkMetadataState();
    uint64_t v86 = v20;
    uint64_t v49 = v43;
    uint64_t v50 = v44;
    uint64_t v51 = v48;
    uint64_t v52 = v47(v48, AssociatedConformanceWitness);
    uint64_t v53 = v92;
    if (v52)
    {
      v87[1](v86, v49);
      void *v53 = 0xD00000000000001ALL;
      v53[1] = 0x800000024DD0B2F0;
      uint64_t v94 = v50;
      uint64_t v95 = v50;
      os_log_type_t v96 = v45;
      int v97 = v45;
      goto LABEL_8;
    }
    MEMORY[0x270FA5388](v52);
    strcpy((char *)&v82 - 32, "  isRecursive reason ");
    uint64_t v94 = v51;
    uint64_t v95 = v21;
    os_log_type_t v96 = (ValueMetadata *)MEMORY[0x263F8D4F8];
    int v97 = (ValueMetadata *)MEMORY[0x263F8D310];
    uint64_t v77 = (int *)swift_getTupleTypeMetadata();
    unint64_t v78 = (char *)v53 + v77[12];
    uint64_t v79 = v77[16];
    unint64_t v80 = (void *)((char *)v53 + v77[20]);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v53, v85, v51);
    v83(v78, v86, v49);
    ((void (*)(char *, void, uint64_t, uint64_t))v87[7])(v78, 0, 1, v49);
    *((unsigned char *)v53 + v79) = v84 & 1;
    uint64_t v81 = v89;
    *unint64_t v80 = v88;
    v80[1] = v81;
    uint64_t v94 = v50;
    uint64_t v95 = v50;
    os_log_type_t v96 = v45;
    int v97 = v45;
    goto LABEL_16;
  }
  if (v31 == 1)
  {
    uint64_t v33 = v90;
    uint64_t v32 = v91;
    swift_getAssociatedTypeWitness();
    uint64_t v34 = swift_getAssociatedConformanceWitness();
    uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 64);
    uint64_t v36 = swift_checkMetadataState();
    uint64_t v37 = v85;
    uint64_t v38 = v35(v36, v34);
    uint64_t v39 = v92;
    if (v38)
    {
      *id v92 = 0xD00000000000001ALL;
      v39[1] = 0x800000024DD0B2F0;
      uint64_t v94 = v33;
      uint64_t v95 = v33;
      os_log_type_t v96 = v32;
      int v97 = v32;
LABEL_8:
      type metadata accessor for ItemChange();
      return swift_storeEnumTagMultiPayload();
    }
    MEMORY[0x270FA5388](v38);
    strcpy((char *)&v82 - 32, "  isRecursive reason ");
    uint64_t v94 = v36;
    uint64_t v95 = v21;
    os_log_type_t v96 = (ValueMetadata *)MEMORY[0x263F8D4F8];
    int v97 = (ValueMetadata *)MEMORY[0x263F8D310];
    uint64_t v72 = (int *)swift_getTupleTypeMetadata();
    uint64_t v73 = (char *)v39 + v72[12];
    uint64_t v74 = v72[16];
    char v75 = (void *)((char *)v39 + v72[20]);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v39, v37, v36);
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v29 + 7))(v73, 1, 1, v93);
    *((unsigned char *)v39 + v74) = v84 & 1;
    uint64_t v76 = v89;
    void *v75 = v88;
    v75[1] = v76;
    uint64_t v94 = v33;
    uint64_t v95 = v33;
    os_log_type_t v96 = v32;
    int v97 = v32;
LABEL_16:
    type metadata accessor for ItemChange();
    goto LABEL_17;
  }
  uint64_t v55 = v93;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v57 = *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v58 = v92;
  uint64_t v59 = (void *)((char *)v92 + *(int *)(TupleTypeMetadata3 + 64));
  (*((void (**)(void *, char *, uint64_t))v29 + 4))(v92, v26, v55);
  *((unsigned char *)v58 + v57) = v86 & 1;
  uint64_t v60 = v89;
  void *v59 = v88;
  v59[1] = v60;
  uint64_t v94 = v90;
  uint64_t v95 = v90;
  os_log_type_t v96 = v91;
  int v97 = v91;
  type metadata accessor for ItemChange();
LABEL_17:
  swift_storeEnumTagMultiPayload();
  return swift_bridgeObjectRetain();
}

uint64_t sub_24DBD44A4(uint64_t a1, void *a2)
{
  uint64_t v153 = a1;
  uint64_t v2 = (void *)*a2;
  uint64_t v3 = sub_24DCC8CE8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v139 = v3;
  uint64_t v140 = v4;
  MEMORY[0x270FA5388](v3);
  unint64_t v138 = (char *)v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v2[12];
  uint64_t v7 = v2[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v145 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v146 = (uint64_t)v119 - v8;
  uint64_t v9 = v2[11];
  uint64_t v10 = v2[13];
  uint64_t v132 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v131 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  uint64_t v130 = (char *)v119 - v11;
  uint64_t v142 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v148 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  int v141 = (char *)v119 - v12;
  uint64_t v155 = v7;
  uint64_t v156 = v9;
  uint64_t v157 = v6;
  uint64_t v158 = v10;
  uint64_t v150 = type metadata accessor for ItemReconciliation();
  uint64_t v149 = sub_24DCCA3F8();
  uint64_t v151 = *(void *)(v149 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v149);
  id v127 = (char *)v119 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  double v129 = (char *)v119 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v128 = (char *)v119 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  id v143 = (char *)v119 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v133 = (char *)v119 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v144 = (char *)v119 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)v119 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v30 = (char *)v119 - v29;
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v33 = (char *)v119 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)v119 - v34;
  uint64_t v155 = v7;
  uint64_t v156 = v9;
  uint64_t v136 = v9;
  uint64_t v157 = v6;
  uint64_t v158 = v10;
  uint64_t v135 = v10;
  uint64_t v36 = type metadata accessor for Job();
  uint64_t v154 = sub_24DCC9C98();
  uint64_t v134 = v7;
  uint64_t v37 = v153;
  uint64_t v137 = v6;
  uint64_t v38 = type metadata accessor for SnapshotItem();
  uint64_t WitnessTable = swift_getWitnessTable();
  if (sub_24D98BCC4(v38, WitnessTable) != 1) {
    return v154;
  }
  uint64_t v40 = v152;
  sub_24D4759C8(v37, (uint64_t)v35);
  if (v40) {
    return swift_bridgeObjectRelease();
  }
  v119[1] = v36;
  uint64_t v42 = v151 + 16;
  uint64_t v43 = v149;
  uint64_t v125 = *(void (**)(char *, char *, uint64_t))(v151 + 16);
  v125(v33, v35, v149);
  uint64_t v44 = *(void *)(v150 - 8);
  uint64_t v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
  uint64_t v123 = v44 + 48;
  uint64_t v124 = v45;
  int v46 = ((uint64_t (*)(char *, uint64_t))v45)(v33, 1);
  uint64_t v126 = v35;
  uint64_t v152 = v42;
  uint64_t v122 = v44;
  if (v46 == 1)
  {
    uint64_t v47 = v151;
    (*(void (**)(char *, uint64_t))(v151 + 8))(v33, v43);
    uint64_t v48 = v150;
  }
  else
  {
    uint64_t v49 = v141;
    uint64_t v50 = v142;
    (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v141, v33, v142);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v33, v150);
    int v51 = v49[*(int *)(v50 + 56)];
    uint64_t v48 = v150;
    (*(void (**)(char *, uint64_t))(v148 + 8))(v49, v50);
    uint64_t v47 = v151;
    if (v51 != 6)
    {
      unint64_t v80 = v126;
      uint64_t v81 = v125;
      v125(v30, v126, v43);
      uint64_t v82 = *(void (**)(char *, uint64_t))(v47 + 8);
      v82(v30, v43);
      uint64_t v83 = v144;
      uint64_t v65 = v80;
      v81(v144, v80, v43);
      uint64_t v54 = v43;
      v82(v83, v43);
      goto LABEL_19;
    }
  }
  uint64_t v52 = v126;
  uint64_t v53 = v125;
  v125(v30, v126, v43);
  unint64_t v120 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  uint64_t v121 = v47 + 32;
  v120(v27, v30, v43);
  uint64_t v54 = v43;
  if (v124(v27, 1, v48) == 1)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v43);
    uint64_t v55 = v144;
    v53(v144, v52, v54);
    uint64_t v56 = v150;
    goto LABEL_13;
  }
  uint64_t v57 = v148;
  uint64_t v58 = v141;
  uint64_t v59 = v142;
  (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v141, v27, v142);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v27, v150);
  int v60 = v58[*(int *)(v59 + 52)];
  uint64_t v61 = *(void (**)(char *, uint64_t))(v57 + 8);
  uint64_t v62 = v58;
  uint64_t v53 = v125;
  uint64_t v56 = v150;
  v61(v62, v59);
  uint64_t v63 = v144;
  v53(v144, v52, v54);
  BOOL v64 = v60 == 3;
  uint64_t v55 = v63;
  if (v64)
  {
    uint64_t v65 = v126;
    (*(void (**)(char *, uint64_t))(v151 + 8))(v63, v54);
LABEL_19:
    uint64_t v67 = v65;
    uint64_t v53 = v125;
    goto LABEL_20;
  }
LABEL_13:
  unint64_t v66 = v133;
  v120(v133, v55, v54);
  if (v124(v66, 1, v56) == 1)
  {
    (*(void (**)(char *, uint64_t))(v151 + 8))(v66, v54);
    uint64_t v67 = v126;
    goto LABEL_16;
  }
  uint64_t v68 = &v66[*(int *)(v56 + 52)];
  uint64_t v69 = v131;
  uint64_t v70 = v56;
  uint64_t v71 = v130;
  uint64_t v72 = v66;
  uint64_t v73 = v132;
  (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v130, v68, v132);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v72, v70);
  LODWORD(v72) = v71[*(int *)(v73 + 56)];
  uint64_t v74 = v69;
  uint64_t v53 = v125;
  char v75 = v71;
  uint64_t v56 = v70;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v73);
  uint64_t v67 = v126;
  if (v72 != 6)
  {
LABEL_20:
    int v84 = v143;
    v53(v143, v67, v54);
    uint64_t v85 = *(void (**)(char *, uint64_t))(v151 + 8);
    v85(v84, v54);
    v85(v67, v54);
    return v154;
  }
LABEL_16:
  uint64_t v76 = v143;
  v53(v143, v67, v54);
  uint64_t v77 = v128;
  v120(v128, v76, v54);
  if (v124(v77, 1, v56) == 1)
  {
    (*(void (**)(char *, uint64_t))(v151 + 8))(v77, v54);
    uint64_t v78 = v145;
    uint64_t v79 = v129;
    goto LABEL_23;
  }
  uint64_t v86 = &v77[*(int *)(v56 + 52)];
  uint64_t v87 = v77;
  uint64_t v88 = v131;
  uint64_t v89 = v56;
  uint64_t v90 = v130;
  uint64_t v91 = v132;
  (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v130, v86, v132);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v87, v89);
  LODWORD(v87) = v90[*(int *)(v91 + 52)];
  id v92 = v90;
  uint64_t v56 = v89;
  (*(void (**)(char *, uint64_t))(v88 + 8))(v92, v91);
  uint64_t v78 = v145;
  uint64_t v79 = v129;
  if (v87 == 3)
  {
    (*(void (**)(char *, uint64_t))(v151 + 8))(v126, v54);
    return v154;
  }
LABEL_23:
  uint64_t v155 = v134;
  uint64_t v156 = v136;
  uint64_t v157 = v137;
  uint64_t v158 = v135;
  type metadata accessor for Ingestion.ReSnapshotChildren();
  uint64_t v144 = *(char **)(v78 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v144)(v146, v153, AssociatedTypeWitness);
  uint64_t v93 = v138;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v95 = v94;
  uint64_t v96 = v140 + 8;
  id v143 = *(char **)(v140 + 8);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v143)(v93, v139);
  double v97 = v95 * 1000000000.0;
  if ((~COERCE__INT64(v95 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v97 <= -9.22337204e18)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v140 = v96;
  if (v97 >= 9.22337204e18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v98 = v146;
  uint64_t v99 = sub_24DC0966C(v146, 0, (uint64_t)v97, 0x8000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.ReSnapshotChildren);
  uint64_t v100 = *(char **)(v78 + 8);
  uint64_t v145 = v78 + 8;
  uint64_t v133 = v100;
  ((void (*)(uint64_t, uint64_t))v100)(v98, AssociatedTypeWitness);
  uint64_t v155 = v99;
  sub_24DCC9D48();
  sub_24DCC9D08();
  BOOL v101 = sub_24D8903D0();
  uint64_t v102 = v149;
  v125(v79, v126, v149);
  if (v101)
  {
    uint64_t v103 = v151;
    uint64_t v104 = v153;
LABEL_30:
    (*(void (**)(char *, uint64_t))(v103 + 8))(v79, v149);
    goto LABEL_31;
  }
  unint64_t v105 = v127;
  v120(v127, v79, v102);
  unsigned int v106 = v124(v105, 1, v56);
  uint64_t v104 = v153;
  if (v106 == 1)
  {
    uint64_t v79 = v105;
    uint64_t v103 = v151;
    goto LABEL_30;
  }
  uint64_t v114 = v56;
  uint64_t v115 = v148;
  uint64_t v117 = v141;
  uint64_t v116 = v142;
  (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v141, v105, v142);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v105, v114);
  int v118 = v117[*(int *)(v116 + 52)];
  (*(void (**)(char *, uint64_t))(v115 + 8))(v117, v116);
  uint64_t v103 = v151;
  if (!v118)
  {
    (*(void (**)(char *, uint64_t))(v151 + 8))(v126, v149);
    return v154;
  }
LABEL_31:
  uint64_t v155 = v134;
  uint64_t v156 = v136;
  uint64_t v157 = v137;
  uint64_t v158 = v135;
  type metadata accessor for Ingestion.FetchChildrenMetadata();
  ((void (*)(uint64_t, uint64_t, uint64_t))v144)(v146, v104, AssociatedTypeWitness);
  unint64_t v107 = v138;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v109 = v108;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v143)(v107, v139);
  double v110 = v109 * 1000000000.0;
  if ((~COERCE__INT64(v109 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v111 = v149;
  if (v110 <= -9.22337204e18)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v110 < 9.22337204e18)
  {
    uint64_t v112 = v146;
    uint64_t v113 = sub_24DC09748(v146, 0, (uint64_t)v110, 0x8000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
    ((void (*)(uint64_t, uint64_t))v133)(v112, AssociatedTypeWitness);
    uint64_t v155 = v113;
    sub_24DCC9D08();
    (*(void (**)(char *, uint64_t))(v103 + 8))(v126, v111);
    return v154;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_24DBD547C(void (*a1)(char *), void *a2, uint64_t a3)
{
  uint64_t v49 = a1;
  uint64_t v50 = a3;
  uint64_t v45 = (void *)*a2;
  uint64_t v52 = sub_24DCC8CE8();
  uint64_t v5 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  int v51 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void (**)(uint64_t, char *, uint64_t))v45[12];
  int v46 = (uint64_t (**)(char *, uint64_t))v45[10];
  uint64_t v47 = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v54 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (char *)&v41 - v12;
  uint64_t v13 = sub_24DCCA3F8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v41 - v15;
  uint64_t v17 = a2[4];
  uint64_t result = sub_24D8903D0();
  if (result)
  {
    uint64_t v42 = v10;
    uint64_t v43 = v5;
    uint64_t v19 = type metadata accessor for SnapshotItem();
    uint64_t v48 = (char *)v49 + *(int *)(v19 + 36);
    uint64_t v20 = (uint64_t *)((char *)v49 + *(int *)(v19 + 44));
    uint64_t v21 = *v20;
    uint64_t ItemMetadata = v20[1];
    uint64_t v49 = *(void (**)(char *))(v9 + 16);
    v49(v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, AssociatedTypeWitness);
    uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t, char *))(*(void *)v17 + 256))(v48, v21, ItemMetadata, v16);
    if (v3)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
    else
    {
      uint64_t v23 = v22;
      uint64_t v48 = (char *)(v9 + 16);
      uint64_t v41 = 0;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      if (MEMORY[0x253327DC0](v23, AssociatedTypeWitness))
      {
        uint64_t v24 = v46;
        uint64_t v25 = v45[11];
        uint64_t v26 = v45[13];
        uint64_t v55 = (uint64_t (**)(void, uint64_t))v46;
        uint64_t v56 = v25;
        uint64_t v27 = v47;
        uint64_t v57 = v47;
        uint64_t v58 = v26;
        uint64_t v45 = (void *)type metadata accessor for JobResult();
        uint64_t v55 = (uint64_t (**)(void, uint64_t))v24;
        uint64_t v56 = v25;
        uint64_t v57 = v27;
        uint64_t v58 = v26;
        uint64_t ItemMetadata = type metadata accessor for Ingestion.FetchItemMetadata();
        uint64_t v28 = 0;
        int v46 = (uint64_t (**)(char *, uint64_t))(v43 + 8);
        uint64_t v47 = (void (**)(uint64_t, char *, uint64_t))(v9 + 32);
        uint64_t v29 = (void (**)(uint64_t, uint64_t))(v9 + 8);
        while (1)
        {
          char v30 = sub_24DCC9CB8();
          sub_24DCC9C68();
          if (v30)
          {
            uint64_t v31 = v9;
            uint64_t v32 = v53;
            ((void (*)(char *, unint64_t, uint64_t))v49)(v53, v23+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v28, AssociatedTypeWitness);
            uint64_t v33 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_17;
            }
          }
          else
          {
            uint64_t result = sub_24DCCA778();
            uint64_t v32 = v53;
            if (v42 != 8) {
              goto LABEL_23;
            }
            uint64_t v31 = v9;
            uint64_t v55 = (uint64_t (**)(void, uint64_t))result;
            ((void (*)(char *, uint64_t (***)(void, uint64_t), uint64_t))v49)(v53, &v55, AssociatedTypeWitness);
            swift_unknownObjectRelease();
            uint64_t v33 = v28 + 1;
            if (__OFADD__(v28, 1))
            {
LABEL_17:
              __break(1u);
              return swift_bridgeObjectRelease();
            }
          }
          (*v47)(v54, v32, AssociatedTypeWitness);
          uint64_t v34 = v51;
          sub_24DCC8CD8();
          sub_24DCC8C88();
          double v36 = v35;
          uint64_t result = (*v46)(v34, v52);
          double v37 = v36 * 1000000000.0;
          if ((~COERCE__INT64(v36 * 1000000000.0) & 0x7FF0000000000000) == 0) {
            break;
          }
          if (v37 <= -9.22337204e18) {
            goto LABEL_21;
          }
          if (v37 >= 9.22337204e18) {
            goto LABEL_22;
          }
          uint64_t v38 = v54;
          uint64_t v39 = sub_24DC09748(v54, 0x2000000000000000, (uint64_t)v37, 0, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
          (*v29)(v38, AssociatedTypeWitness);
          sub_24D85246C(v50, v39);
          swift_release();
          ++v28;
          BOOL v40 = v33 == MEMORY[0x253327DC0](v23, AssociatedTypeWitness);
          uint64_t v9 = v31;
          if (v40) {
            return swift_bridgeObjectRelease();
          }
        }
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
      }
      else
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

BOOL sub_24DBD5A48(uint64_t a1, uint64_t a2, int a3)
{
  if (!sub_24D8903D0()) {
    return 0;
  }
  uint64_t v5 = a2 + *(int *)(type metadata accessor for SnapshotItem() + 48);
  uint64_t v6 = (int *)type metadata accessor for ItemMetadata();
  return (*(unsigned char *)(v5 + v6[20]) & 1) == 0
      && !*(unsigned char *)(v5 + v6[21])
      && (*(unsigned char *)(v5 + v6[16]) & 1) == 0
      && (*(unsigned char *)(v5 + v6[17]) & 1) == 0
      && (*(void *)&a3 & 0x10008) == 0x10000;
}

uint64_t sub_24DBD5B10(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v7 = *a1;
  uint64_t v8 = sub_24DCC8CE8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1[5] + 368))(a2, 1);
  if (!v3 && (result & 1) != 0)
  {
    long long v13 = *(_OWORD *)(v7 + 96);
    v18[0] = *(_OWORD *)(v7 + 80);
    v18[1] = v13;
    type metadata accessor for Propagation.DeletionAcked();
    uint64_t v14 = sub_24D732E04(a2, a3[15], a3[16], a3[17]);
    (*(void (**)(void))(*a1 + 176))();
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v16 = v15;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    double v17 = v16 * 1000000000.0;
    if ((~COERCE__INT64(v16 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v17 > -9.22337204e18)
      {
        if (v17 < 9.22337204e18)
        {
          sub_24D912448(v14);
          swift_release();
          return swift_release();
        }
LABEL_10:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_24DBD5D60(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v57 = a3;
  uint64_t v60 = a2;
  uint64_t v4 = (void *)*a1;
  uint64_t v5 = sub_24DCC8CE8();
  uint64_t v65 = *(void *)(v5 - 8);
  uint64_t v66 = v5;
  MEMORY[0x270FA5388](v5);
  BOOL v64 = &v47[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = v4[10];
  uint64_t v8 = v4[12];
  uint64_t v9 = type metadata accessor for SnapshotMutation();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v62 = v9;
  uint64_t v63 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v59 = &v47[-v11];
  uint64_t v61 = a1;
  uint64_t v12 = v4[11];
  uint64_t v13 = v4[13];
  uint64_t v56 = type metadata accessor for SnapshotMutation();
  uint64_t v58 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v55 = &v47[-v14];
  uint64_t v69 = v12;
  uint64_t v70 = v7;
  uint64_t v71 = v13;
  uint64_t v72 = v8;
  uint64_t v15 = type metadata accessor for ReconciliationMutation();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v67 = v15;
  uint64_t v68 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = &v47[-v17];
  uint64_t v69 = v12;
  uint64_t v70 = v7;
  uint64_t v71 = v13;
  uint64_t v72 = v8;
  type metadata accessor for ConcreteJobResult();
  uint64_t v53 = (void *)sub_24D907530();
  uint64_t v69 = v12;
  uint64_t v70 = v7;
  uint64_t v71 = v13;
  uint64_t v72 = v8;
  uint64_t v52 = type metadata accessor for JobResult();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v54 = v20;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  uint64_t v69 = AssociatedTypeWitness;
  uint64_t v70 = v20;
  uint64_t v71 = AssociatedConformanceWitness;
  uint64_t v72 = v22;
  uint64_t v51 = type metadata accessor for ReconciliationID();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v23 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v48 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  uint64_t v24 = v57;
  v48(v18, v57, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  *(void *)&v18[v23] = 0;
  uint64_t v25 = v67;
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = v53;
  sub_24D907568((uint64_t)v53, (uint64_t)v18);
  uint64_t v27 = *(void (**)(unsigned char *, uint64_t))(v68 + 8);
  v68 += 8;
  uint64_t v49 = v27;
  v27(v18, v25);
  uint64_t v28 = swift_getTupleTypeMetadata2();
  uint64_t v29 = (uint64_t)v55;
  char v30 = &v55[*(int *)(v28 + 48)];
  v48(v55, v24, AssociatedTypeWitness);
  strcpy(v30, "lazily deleted");
  v30[15] = -18;
  uint64_t v31 = v56;
  swift_storeEnumTagMultiPayload();
  sub_24D9075B0((uint64_t)v26, v29);
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v29, v31);
  uint64_t v32 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v33 = v54;
  uint64_t v34 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16);
  uint64_t v35 = v60;
  v34(v18, v60, v54);
  swift_storeEnumTagMultiPayload();
  *(void *)&v18[v32] = 2;
  uint64_t v36 = v67;
  swift_storeEnumTagMultiPayload();
  sub_24D907568((uint64_t)v26, (uint64_t)v18);
  v49(v18, v36);
  uint64_t v37 = swift_getTupleTypeMetadata2();
  uint64_t v38 = (uint64_t)v59;
  uint64_t v39 = &v59[*(int *)(v37 + 48)];
  v34(v59, v35, v33);
  strcpy(v39, "lazily deleted");
  v39[15] = -18;
  uint64_t v40 = v62;
  swift_storeEnumTagMultiPayload();
  sub_24D9075F8((uint64_t)v26, v38);
  uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8))(v38, v40);
  (*(void (**)(uint64_t))(*v61 + 176))(v41);
  uint64_t v42 = v64;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v44 = v43;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v65 + 8))(v42, v66);
  double v46 = v44 * 1000000000.0;
  if ((~COERCE__INT64(v44 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v46 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v46 < 9.22337204e18)
  {
    sub_24D9126EC(v26, (uint64_t)v46);
    swift_release();
    return swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_24DBD6488(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x270FA5388](a1);
  uint64_t ItemMetadata = v1;
  v1831 = v3;
  uint64_t v1784 = v4;
  uint64_t v1808 = v5;
  unint64_t v1807 = v6;
  uint64_t v8 = v7;
  v1833 = v9;
  uint64_t v1830 = v2;
  uint64_t v10 = (void *)*v7;
  LODWORD(v1827) = v11;
  v1797 = (int *)type metadata accessor for ItemMetadata();
  MEMORY[0x270FA5388](v1797);
  uint64_t v1664 = (uint64_t)&v1663 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v10[12];
  uint64_t v14 = v10[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1682 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  v1681 = (char *)&v1663 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  v1684 = (char *)&v1663 - v18;
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v1845 = v19;
  uint64_t v1713 = AssociatedTypeWitness;
  *((void *)&v1845 + 1) = AssociatedTypeWitness;
  uint64_t v1707 = AssociatedConformanceWitness;
  uint64_t v1708 = v21;
  *(void *)&long long v1846 = AssociatedConformanceWitness;
  *((void *)&v1846 + 1) = v21;
  v1744 = (int *)type metadata accessor for FileItemVersion();
  uint64_t v22 = sub_24DCCA3F8();
  uint64_t v1696 = *(void *)(v22 - 8);
  uint64_t v1697 = v22;
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  v1693 = (char *)&v1663 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v1692 = (char *)&v1663 - v26;
  uint64_t v1712 = v19;
  uint64_t v1680 = *(void *)(v19 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  v1677 = (char *)&v1663 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  v1683 = (char *)&v1663 - v29;
  uint64_t v1934 = swift_getAssociatedTypeWitness();
  uint64_t v30 = sub_24DCCA3F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v1691 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  v1725 = (char *)&v1663 - v31;
  v1841 = v8;
  uint64_t v32 = (void (*)(void, void))v10[11];
  uint64_t v33 = v10[13];
  uint64_t v34 = type metadata accessor for SnapshotItem();
  uint64_t v1723 = sub_24DCCA3F8();
  uint64_t v1698 = *(void *)(v1723 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v1723);
  v1673 = (char *)&v1663 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v1667 = (char *)&v1663 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  v1674 = (char *)&v1663 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  v1736 = (char *)&v1663 - v42;
  uint64_t v1735 = v34;
  v1702 = *(char **)(v34 - 8);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  v1668 = (char *)&v1663 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  v1669 = (char *)&v1663 - v46;
  MEMORY[0x270FA5388](v45);
  v1722 = (char *)&v1663 - v47;
  uint64_t v48 = swift_getAssociatedTypeWitness();
  uint64_t v1768 = *(void *)(v48 - 8);
  uint64_t v49 = MEMORY[0x270FA5388](v48);
  v1703 = (char *)&v1663 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  v1666 = (char *)&v1663 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v1676 = (uint64_t)&v1663 - v54;
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  v1675 = (char *)&v1663 - v56;
  MEMORY[0x270FA5388](v55);
  v1740 = (char *)&v1663 - v57;
  v1745 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v1738 = *((void *)v1745 - 1);
  MEMORY[0x270FA5388](v1745);
  v1737 = (char *)&v1663 - v58;
  *(void *)&long long v1845 = v14;
  *((void *)&v1845 + 1) = v32;
  *(void *)&long long v1846 = v13;
  *((void *)&v1846 + 1) = v33;
  v1794 = (void *)type metadata accessor for PersistenceTrigger();
  uint64_t v1793 = *(v1794 - 1);
  MEMORY[0x270FA5388](v1794);
  v1792 = (char *)&v1663 - v59;
  v1818 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24DCC9078();
  uint64_t v1817 = *((void *)v1818 - 1);
  uint64_t v60 = MEMORY[0x270FA5388](v1818);
  v1809 = (uint64_t (*)(uint64_t))((char *)&v1663 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v62 = MEMORY[0x270FA5388](v60);
  v1806 = (char *)&v1663 - v63;
  MEMORY[0x270FA5388](v62);
  v1811 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v1663 - v64);
  uint64_t v1770 = sub_24DCCA3F8();
  uint64_t v1766 = *(void *)(v1770 - 8);
  uint64_t v65 = MEMORY[0x270FA5388](v1770);
  v1699 = (char *)&v1663 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  v1670 = (char *)&v1663 - v68;
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  v1687 = (char *)&v1663 - v70;
  uint64_t v71 = MEMORY[0x270FA5388](v69);
  v1689 = (char *)&v1663 - v72;
  uint64_t v73 = MEMORY[0x270FA5388](v71);
  v1741 = (char *)&v1663 - v74;
  MEMORY[0x270FA5388](v73);
  v1783 = (char *)&v1663 - v75;
  *(void *)&long long v1845 = v14;
  *((void *)&v1845 + 1) = v32;
  *(void *)&long long v1846 = v13;
  *((void *)&v1846 + 1) = v33;
  uint64_t v1825 = type metadata accessor for ReconciliationMutation();
  uint64_t v1829 = *(void *)(v1825 - 8);
  uint64_t v76 = MEMORY[0x270FA5388](v1825);
  v1730 = (char *)&v1663 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = MEMORY[0x270FA5388](v76);
  v1711 = (char *)&v1663 - v79;
  MEMORY[0x270FA5388](v78);
  v1824 = (char *)&v1663 - v80;
  uint64_t v1814 = type metadata accessor for SnapshotMutation();
  uint64_t v1813 = *(void *)(v1814 - 8);
  uint64_t v81 = MEMORY[0x270FA5388](v1814);
  v1812 = (char *)&v1663 - v82;
  uint64_t v1775 = v30;
  uint64_t v1705 = *(void *)(v30 - 8);
  uint64_t v1774 = v1705;
  uint64_t v83 = MEMORY[0x270FA5388](v81);
  v1706 = (char *)&v1663 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = MEMORY[0x270FA5388](v83);
  v1720 = (char *)&v1663 - v86;
  uint64_t v87 = MEMORY[0x270FA5388](v85);
  v1731 = (char *)&v1663 - v88;
  uint64_t v89 = MEMORY[0x270FA5388](v87);
  v1721 = (char *)&v1663 - v90;
  uint64_t v91 = MEMORY[0x270FA5388](v89);
  v1777 = (char *)&v1663 - v92;
  uint64_t v1835 = *(void *)(v1934 - 8);
  uint64_t v93 = MEMORY[0x270FA5388](v91);
  v1727 = (char *)&v1663 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = MEMORY[0x270FA5388](v93);
  v1758 = (char *)&v1663 - v96;
  uint64_t v97 = MEMORY[0x270FA5388](v95);
  v1749 = (char *)&v1663 - v98;
  uint64_t v99 = MEMORY[0x270FA5388](v97);
  v1795 = (char *)&v1663 - v100;
  uint64_t v101 = MEMORY[0x270FA5388](v99);
  v1822 = (uint64_t (**)(uint64_t))((char *)&v1663 - v102);
  MEMORY[0x270FA5388](v101);
  v1786 = (char *)&v1663 - v103;
  uint64_t v104 = (int *)type metadata accessor for SnapshotItem();
  v1826 = (void *)sub_24DCCA3F8();
  v1823 = (char *)*(v1826 - 1);
  uint64_t v105 = MEMORY[0x270FA5388](v1826);
  v1778 = (char *)&v1663 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = MEMORY[0x270FA5388](v105);
  v1799 = (char *)&v1663 - v108;
  uint64_t v109 = MEMORY[0x270FA5388](v107);
  v1804 = (void (*)(char *, char *, uint64_t))((char *)&v1663 - v110);
  uint64_t v111 = MEMORY[0x270FA5388](v109);
  v1789 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)&v1663 - v112);
  uint64_t v113 = MEMORY[0x270FA5388](v111);
  v1815 = (uint64_t *)((char *)&v1663 - v114);
  uint64_t v115 = MEMORY[0x270FA5388](v113);
  v1828 = (char *)&v1663 - v116;
  uint64_t v117 = MEMORY[0x270FA5388](v115);
  v1787 = (char *)&v1663 - v118;
  uint64_t v1816 = v119;
  MEMORY[0x270FA5388](v117);
  v1772 = (char *)&v1663 - v120;
  v1788 = (int *)type metadata accessor for ItemReconciliationHalf();
  v1782 = (void (**)(char *, char *, int *))*((void *)v1788 - 1);
  uint64_t v121 = MEMORY[0x270FA5388](v1788);
  v1679 = (char *)&v1663 - ((v122 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = MEMORY[0x270FA5388](v121);
  v1678 = (char *)&v1663 - v124;
  uint64_t v125 = MEMORY[0x270FA5388](v123);
  v1747 = (char *)&v1663 - v126;
  MEMORY[0x270FA5388](v125);
  v1781 = (char *)&v1663 - v127;
  *(void *)&long long v1845 = v14;
  v1836 = v32;
  *((void *)&v1845 + 1) = v32;
  *(void *)&long long v1846 = v13;
  uint64_t v1832 = v33;
  *((void *)&v1846 + 1) = v33;
  uint64_t v128 = type metadata accessor for ItemReconciliation();
  uint64_t v1801 = sub_24DCCA3F8();
  uint64_t v1800 = *(void *)(v1801 - 8);
  uint64_t v129 = MEMORY[0x270FA5388](v1801);
  v1739 = (char *)&v1663 - ((v130 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = MEMORY[0x270FA5388](v129);
  v1753 = (char *)&v1663 - v132;
  uint64_t v133 = MEMORY[0x270FA5388](v131);
  v1754 = (char *)&v1663 - v134;
  uint64_t v135 = MEMORY[0x270FA5388](v133);
  v1724 = (char *)&v1663 - v136;
  uint64_t v137 = MEMORY[0x270FA5388](v135);
  v1756 = (char *)&v1663 - v138;
  uint64_t v139 = MEMORY[0x270FA5388](v137);
  v1716 = (char *)&v1663 - v140;
  uint64_t v141 = MEMORY[0x270FA5388](v139);
  v1715 = (char *)&v1663 - v142;
  uint64_t v143 = MEMORY[0x270FA5388](v141);
  v1755 = (char *)&v1663 - v144;
  uint64_t v145 = MEMORY[0x270FA5388](v143);
  v1733 = (char *)&v1663 - v146;
  uint64_t v147 = MEMORY[0x270FA5388](v145);
  v1732 = (char *)&v1663 - v148;
  uint64_t v149 = MEMORY[0x270FA5388](v147);
  v1671 = (char *)&v1663 - v150;
  uint64_t v151 = MEMORY[0x270FA5388](v149);
  v1665 = (char *)&v1663 - v152;
  uint64_t v153 = MEMORY[0x270FA5388](v151);
  v1672 = (char *)&v1663 - v154;
  uint64_t v155 = MEMORY[0x270FA5388](v153);
  v1685 = (char *)&v1663 - v156;
  uint64_t v157 = MEMORY[0x270FA5388](v155);
  v1686 = (char *)&v1663 - v158;
  uint64_t v159 = MEMORY[0x270FA5388](v157);
  v1688 = (char *)&v1663 - v160;
  uint64_t v161 = MEMORY[0x270FA5388](v159);
  v1728 = (char *)&v1663 - v162;
  uint64_t v163 = MEMORY[0x270FA5388](v161);
  v1734 = (char *)&v1663 - v164;
  uint64_t v165 = MEMORY[0x270FA5388](v163);
  v1718 = (char *)&v1663 - v166;
  uint64_t v167 = MEMORY[0x270FA5388](v165);
  v1710 = (char *)&v1663 - v168;
  uint64_t v169 = MEMORY[0x270FA5388](v167);
  v1709 = (char *)&v1663 - v170;
  uint64_t v171 = MEMORY[0x270FA5388](v169);
  v1700 = (char *)&v1663 - v172;
  uint64_t v173 = MEMORY[0x270FA5388](v171);
  v1760 = (char *)&v1663 - v174;
  uint64_t v175 = MEMORY[0x270FA5388](v173);
  v1767 = (char *)&v1663 - v176;
  uint64_t v177 = MEMORY[0x270FA5388](v175);
  v1694 = (char *)&v1663 - v178;
  uint64_t v179 = MEMORY[0x270FA5388](v177);
  v1750 = (char *)&v1663 - v180;
  uint64_t v181 = MEMORY[0x270FA5388](v179);
  v1742 = (char *)&v1663 - v182;
  uint64_t v183 = MEMORY[0x270FA5388](v181);
  v1773 = (char *)&v1663 - v184;
  uint64_t v185 = MEMORY[0x270FA5388](v183);
  v1701 = (char *)&v1663 - v186;
  uint64_t v187 = MEMORY[0x270FA5388](v185);
  v1769 = (char *)&v1663 - v188;
  uint64_t v189 = MEMORY[0x270FA5388](v187);
  v1771 = (char *)&v1663 - v190;
  uint64_t v191 = MEMORY[0x270FA5388](v189);
  v1757 = (char *)&v1663 - v192;
  uint64_t v193 = MEMORY[0x270FA5388](v191);
  v1751 = (char *)&v1663 - v194;
  uint64_t v195 = MEMORY[0x270FA5388](v193);
  v1761 = (char *)&v1663 - v196;
  uint64_t v197 = MEMORY[0x270FA5388](v195);
  v1695 = (char *)&v1663 - v198;
  uint64_t v199 = MEMORY[0x270FA5388](v197);
  v1763 = (char *)&v1663 - v200;
  uint64_t v201 = MEMORY[0x270FA5388](v199);
  v1729 = (char *)&v1663 - v202;
  uint64_t v203 = MEMORY[0x270FA5388](v201);
  v1762 = (char *)&v1663 - v204;
  uint64_t v205 = MEMORY[0x270FA5388](v203);
  v1752 = (char *)&v1663 - v206;
  uint64_t v207 = MEMORY[0x270FA5388](v205);
  v1779 = (char *)&v1663 - v208;
  uint64_t v209 = MEMORY[0x270FA5388](v207);
  v1776 = (char *)&v1663 - v210;
  uint64_t v211 = MEMORY[0x270FA5388](v209);
  v1798 = (uint64_t)&v1663 - v212;
  uint64_t v213 = MEMORY[0x270FA5388](v211);
  v1803 = (uint64_t *)((char *)&v1663 - v214);
  uint64_t v215 = MEMORY[0x270FA5388](v213);
  uint64_t v1810 = (uint64_t)&v1663 - v216;
  uint64_t v217 = MEMORY[0x270FA5388](v215);
  v1780 = (void (**)(char *, uint64_t))((char *)&v1663 - v218);
  uint64_t v219 = MEMORY[0x270FA5388](v217);
  uint64_t v221 = (char *)&v1663 - v220;
  uint64_t v222 = MEMORY[0x270FA5388](v219);
  uint64_t v224 = (char *)&v1663 - v223;
  v1805 = (int *)v128;
  uint64_t v1802 = *(void *)(v128 - 8);
  uint64_t v225 = MEMORY[0x270FA5388](v222);
  v1743 = (char *)&v1663 - ((v226 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v227 = MEMORY[0x270FA5388](v225);
  v1748 = (char *)&v1663 - v228;
  uint64_t v229 = MEMORY[0x270FA5388](v227);
  v1726 = (char *)&v1663 - v230;
  uint64_t v231 = MEMORY[0x270FA5388](v229);
  v1717 = (char *)&v1663 - v232;
  uint64_t v233 = MEMORY[0x270FA5388](v231);
  v1704 = (char *)&v1663 - v234;
  uint64_t v235 = MEMORY[0x270FA5388](v233);
  v1719 = (char *)&v1663 - v236;
  uint64_t v237 = MEMORY[0x270FA5388](v235);
  v1690 = (char *)&v1663 - v238;
  uint64_t v239 = MEMORY[0x270FA5388](v237);
  v1764 = (char *)&v1663 - v240;
  uint64_t v241 = MEMORY[0x270FA5388](v239);
  v1765 = (char *)&v1663 - v242;
  uint64_t v243 = MEMORY[0x270FA5388](v241);
  v1790 = (void (**)(char *, uint64_t))((char *)&v1663 - v244);
  uint64_t v245 = MEMORY[0x270FA5388](v243);
  v1759 = (char *)&v1663 - v246;
  uint64_t v247 = MEMORY[0x270FA5388](v245);
  uint64_t v249 = (char *)&v1663 - v248;
  v1837 = v104;
  uint64_t v1834 = *((void *)v104 - 1);
  uint64_t v250 = MEMORY[0x270FA5388](v247);
  v1746 = (char *)&v1663 - ((v251 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v252 = MEMORY[0x270FA5388](v250);
  v1819 = (char *)&v1663 - v253;
  uint64_t v254 = MEMORY[0x270FA5388](v252);
  uint64_t v1821 = (uint64_t)&v1663 - v255;
  uint64_t v256 = MEMORY[0x270FA5388](v254);
  v1791 = (char *)&v1663 - v257;
  uint64_t v258 = MEMORY[0x270FA5388](v256);
  v1785 = (char *)&v1663 - v259;
  MEMORY[0x270FA5388](v258);
  v1820 = (char *)&v1663 - v260;
  *(void *)&long long v1845 = v14;
  uint64_t v1839 = v14;
  *((void *)&v1845 + 1) = v14;
  *(void *)&long long v1846 = v13;
  uint64_t v1838 = v13;
  *((void *)&v1846 + 1) = v13;
  uint64_t v261 = type metadata accessor for ItemChange();
  MEMORY[0x270FA5388](v261);
  double v263 = (uint64_t *)((char *)&v1663 - v262);
  uint64_t v265 = v1841[3];
  uint64_t v264 = (void **)v1841[4];
  (*(void (**)(char *, uint64_t, uint64_t))(v266 + 16))((char *)&v1663 - v262, v1830, v261);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      v1796 = v264;
      uint64_t v1830 = v48;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v1663 - 32, "  isRecursive reason ");
      uint64_t v304 = v1934;
      *(void *)&long long v1845 = v1934;
      v305 = v1826;
      *((void *)&v1845 + 1) = v1826;
      *(void *)&long long v1846 = MEMORY[0x263F8D4F8];
      *((void *)&v1846 + 1) = MEMORY[0x263F8D310];
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      uint64_t v307 = (char *)v263 + *(int *)(TupleTypeMetadata + 48);
      int v308 = *((unsigned __int8 *)v263 + *(int *)(TupleTypeMetadata + 64));
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t (**)(uint64_t), uint64_t *, uint64_t))(v1835 + 32))(v1822, v263, v304);
      uint64_t v309 = v1823;
      uint64_t v310 = (uint64_t)(v1823 + 32);
      uint64_t v311 = v1828;
      uint64_t v1814 = *((void *)v1823 + 4);
      ((void (*)(char *, char *, void *))v1814)(v1828, v307, v305);
      v1820 = (char *)(v310 - 16);
      uint64_t v1663 = v265;
      LODWORD(v1786) = v308;
      v1798 = v310;
      if (v308 == 1)
      {
        sub_24DA18988();
        uint64_t v312 = (unsigned int (*)(void, void, void))v1815;
        v1819 = (char *)*((void *)v309 + 2);
        ((void (*)(uint64_t *, char *, void *))v1819)(v1815, v311, v305);
        unint64_t v313 = v309[80];
        uint64_t v314 = (v313 + 48) & ~v313;
        v1795 = (char *)v313;
        uint64_t v315 = (void *)swift_allocObject();
        uint64_t v316 = v1836;
        v315[2] = v1839;
        v315[3] = v316;
        uint64_t v317 = v1832;
        v315[4] = v1838;
        v315[5] = v317;
        ((void (*)(char *, unsigned int (*)(void, void, void), void *))v1814)((char *)v315 + v314, v312, v305);
        uint64_t v318 = sub_24DCC9068();
        int v319 = sub_24DCCA118();
        uint64_t v320 = swift_allocObject();
        *(unsigned char *)(v320 + 16) = 32;
        uint64_t v321 = (unsigned char *)swift_allocObject();
        v321[16] = 8;
        uint64_t v322 = swift_allocObject();
        *(void *)(v322 + 16) = sub_24DC09A6C;
        *(void *)(v322 + 24) = v315;
        uint64_t v323 = swift_allocObject();
        *(void *)(v323 + 16) = sub_24D4B7DA8;
        *(void *)(v323 + 24) = v322;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EE8);
        uint64_t v324 = swift_allocObject();
        sub_24D719BBC(v324, 3);
        *uint64_t v325 = sub_24D4B7DCC;
        v325[1] = v320;
        v325[2] = sub_24D4B7DCC;
        v325[3] = v321;
        v325[4] = sub_24D4B7DC8;
        v325[5] = v323;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        LODWORD(v1821) = v319;
        if (os_log_type_enabled(v318, (os_log_type_t)v319))
        {
          uint64_t v326 = v318;
          uint64_t v327 = (uint8_t *)sub_24DA8985C();
          uint64_t v328 = swift_slowAlloc();
          v1843[0] = 0;
          v1842[0] = v328;
          uint64_t v1813 = (uint64_t)v327;
          *(_WORD *)uint64_t v327 = 258;
          uint64_t v329 = (int *)(v327 + 2);
          v1844[0] = (uint64_t)v329;
          *(void *)&long long v1845 = sub_24D4B7DCC;
          *((void *)&v1845 + 1) = v320;
          uint64_t v330 = ItemMetadata;
          sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1845, (uint64_t)v1844, (uint64_t)v1843, (uint64_t)v1842);
          v331 = v330;
          if (!v330)
          {
            swift_release();
            *(void *)&long long v1845 = sub_24D4B7DCC;
            *((void *)&v1845 + 1) = v321;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1845, (uint64_t)v1844, (uint64_t)v1843, (uint64_t)v1842);
            swift_release();
            *(void *)&long long v1845 = sub_24D4B7DC8;
            *((void *)&v1845 + 1) = v323;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1845, (uint64_t)v1844, (uint64_t)v1843, (uint64_t)v1842);
            uint64_t ItemMetadata = 0;
            swift_release();
            _os_log_impl(&dword_24D3D0000, v326, (os_log_type_t)v1821, "Recursive delete of %s", (uint8_t *)v1813, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x25332B030](v328, -1, -1);
            sub_24DA89864();
          }
          goto LABEL_723;
        }

        swift_release();
        swift_release();
        swift_release();
        v1787 = *(char **)(v1817 + 8);
        ((void (*)(uint64_t (*)(uint64_t, uint64_t), uint64_t (*)(uint64_t, uint64_t, uint64_t)))v1787)(v1811, v1818);
        *(void *)&long long v1845 = v1839;
        *((void *)&v1845 + 1) = v1836;
        *(void *)&long long v1846 = v1838;
        *((void *)&v1846 + 1) = v1832;
        uint64_t v1821 = type metadata accessor for JobResult();
        uint64_t v372 = v1934;
        uint64_t v373 = swift_getAssociatedConformanceWitness();
        uint64_t v374 = v1830;
        uint64_t v375 = swift_getAssociatedConformanceWitness();
        *(void *)&long long v1845 = v372;
        *((void *)&v1845 + 1) = v374;
        *(void *)&long long v1846 = v373;
        *((void *)&v1846 + 1) = v375;
        type metadata accessor for ReconciliationID();
        uint64_t v376 = type metadata accessor for ReconciliationSideMutation();
        v1812 = (char *)swift_getTupleTypeMetadata2();
        uint64_t v377 = (uint64_t)v1824;
        v378 = &v1824[*((int *)v1812 + 12)];
        uint64_t v1813 = *(void *)(v1835 + 16);
        ((void (*)(char *, void, uint64_t))v1813)(v1824, v1833, v372);
        swift_storeEnumTagMultiPayload();
        char *v378 = 1;
        swift_storeEnumTagMultiPayload();
        uint64_t v379 = v1825;
        swift_storeEnumTagMultiPayload();
        sub_24D907568((uint64_t)v1831, v377);
        v1811 = *(uint64_t (**)(uint64_t, uint64_t))(v1829 + 8);
        uint64_t v380 = v1811(v377, v379);
        uint64_t v381 = (*(uint64_t (**)(uint64_t))(*v1841 + 152))(v380);
        if (!sub_24D3F0C10(0x4000, v381)) {
          goto LABEL_33;
        }
        uint64_t v382 = v1829;
        uint64_t v383 = v1839;
        if (v1827 == 4 || !sub_24D8903D0())
        {
          v360 = v1836;
LABEL_37:
          *(void *)&long long v1845 = v383;
          *((void *)&v1845 + 1) = v360;
          *(void *)&long long v1846 = v1838;
          *((void *)&v1846 + 1) = v1832;
          uint64_t v1821 = type metadata accessor for JobResult();
          uint64_t v390 = v1934;
          uint64_t v391 = swift_getAssociatedConformanceWitness();
          uint64_t v392 = v1830;
          uint64_t v393 = swift_getAssociatedConformanceWitness();
          *(void *)&long long v1845 = v390;
          *((void *)&v1845 + 1) = v392;
          *(void *)&long long v1846 = v391;
          *((void *)&v1846 + 1) = v393;
          uint64_t v394 = type metadata accessor for ReconciliationID();
          uint64_t v395 = type metadata accessor for ReconciliationSideMutation();
          v1812 = (char *)swift_getTupleTypeMetadata2();
          uint64_t v396 = (uint64_t)v1824;
          v397 = &v1824[*((int *)v1812 + 12)];
          v398 = (uint64_t (*)(uint64_t, uint64_t))(v1835 + 16);
          v399 = *(uint64_t **)(v1835 + 16);
          ((void (*)(char *, void, uint64_t))v399)(v1824, v1833, v390);
          swift_storeEnumTagMultiPayload();
          char *v397 = 0;
          uint64_t v1830 = v395;
          swift_storeEnumTagMultiPayload();
          uint64_t v400 = v1825;
          swift_storeEnumTagMultiPayload();
          sub_24D907568((uint64_t)v1831, v396);
          v401 = *(uint8_t **)(v382 + 8);
          uint64_t v1829 = v382 + 8;
          uint64_t v1813 = (uint64_t)v401;
          ((void (*)(uint64_t, uint64_t))v401)(v396, v400);
          BOOL v402 = sub_24D8903D0();
          v403 = v1841;
          if (v402)
          {
            v404 = (void *)(v396 + *((int *)v1812 + 12));
            ((void (*)(uint64_t, void, uint64_t))v399)(v396, v1833, v1934);
            uint64_t v405 = swift_storeEnumTagMultiPayload();
            void *v404 = (*(uint64_t (**)(uint64_t))(*v403 + 272))(v405);
            uint64_t v406 = v1825;
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
            sub_24D907568((uint64_t)v1831, v396);
            ((void (*)(uint64_t, uint64_t))v1813)(v396, v406);
          }
          v1803 = v399;
          v1811 = v398;
          v1806 = (char *)v394;
          id v407 = ItemMetadata;
          uint64_t v408 = v1663;
          uint64_t v409 = v1810;
          if (v1827 == 4)
          {
            v410 = v1837;
            uint64_t v411 = v1834;
            v412 = v1826;
            v413 = v1809;
            v414 = v1836;
LABEL_41:
            uint64_t v415 = (uint64_t)v1804;
            ((void (*)(void, char *, void *))v1819)(v1804, v1828, v412);
            v1827 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v411 + 48);
            if (v1827(v415, 1, v410) == 1)
            {
              (*((void (**)(uint64_t, void *))v1823 + 1))(v415, v412);
            }
            else
            {
              uint64_t WitnessTable = swift_getWitnessTable();
              int v417 = sub_24D98BCC4((uint64_t)v410, WitnessTable);
              (*(void (**)(uint64_t, int *))(v411 + 8))(v415, v410);
              if (v417 == 1)
              {
                *(void *)&long long v1845 = v1839;
                *((void *)&v1845 + 1) = v414;
                *(void *)&long long v1846 = v1838;
                *((void *)&v1846 + 1) = v1832;
                type metadata accessor for Ingestion.ReSnapshotChildren();
                uint64_t v418 = sub_24DC0966C((uint64_t)v1822, v1807, v1808, 8, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.ReSnapshotChildren);
                v419 = v1831;
                sub_24D85246C((uint64_t)v1831, v418);
                swift_release();
                v420 = v1812;
                uint64_t v421 = (uint64_t)v1824;
                v422 = &v1824[*((int *)v1812 + 12)];
                v423 = (void (*)(uint64_t, void, uint64_t))v1803;
                ((void (*)(char *, void, uint64_t))v1803)(v1824, v1833, v1934);
                swift_storeEnumTagMultiPayload();
                char *v422 = (char)v1786;
                swift_storeEnumTagMultiPayload();
                uint64_t v424 = v1825;
                swift_storeEnumTagMultiPayload();
                sub_24D907568((uint64_t)v419, v421);
                v425 = (void (*)(uint64_t, uint64_t))v1813;
                ((void (*)(uint64_t, uint64_t))v1813)(v421, v424);
                v426 = (unsigned char *)(v421 + *((int *)v420 + 12));
                uint64_t v427 = v1934;
                v423(v421, v1833, v1934);
                swift_storeEnumTagMultiPayload();
                unsigned char *v426 = 1;
                swift_storeEnumTagMultiPayload();
                swift_storeEnumTagMultiPayload();
                v428 = v1831;
                sub_24D907568((uint64_t)v1831, v421);
                v425(v421, v424);
                *(void *)&long long v1845 = v1839;
                *((void *)&v1845 + 1) = v1836;
                *(void *)&long long v1846 = v1838;
                *((void *)&v1846 + 1) = v1832;
                type metadata accessor for Ingestion.DeleteFolderFromSnapshotIfEmpty();
                swift_allocObject();
                uint64_t v429 = (uint64_t)v1822;
                sub_24D983960((uint64_t)v1822, v1807, v1808, 8);
                uint64_t v430 = sub_24D8F94C4(8);
                swift_retain();
                swift_release();
                sub_24D85246C((uint64_t)v428, v430);
                swift_release();
                (*((void (**)(char *, void *))v1823 + 1))(v1828, v1826);
                (*(void (**)(uint64_t, uint64_t))(v1835 + 8))(v429, v427);
                goto LABEL_11;
              }
            }
            sub_24DA18988();
            v431 = (unsigned int (*)(void, void, void))v1815;
            ((void (*)(uint64_t *, char *, void *))v1819)(v1815, v1828, v412);
            unint64_t v432 = (v1795 + 48) & ~(unint64_t)v1795;
            v433 = (void *)swift_allocObject();
            v433[2] = v1839;
            v433[3] = v414;
            uint64_t v434 = v1832;
            v433[4] = v1838;
            v433[5] = v434;
            ((void (*)(char *, unsigned int (*)(void, void, void), void *))v1814)((char *)v433 + v432, v431, v412);
            v435 = sub_24DCC9068();
            LODWORD(v432) = sub_24DCCA118();
            uint64_t v436 = swift_allocObject();
            *(unsigned char *)(v436 + 16) = 32;
            uint64_t v437 = swift_allocObject();
            *(unsigned char *)(v437 + 16) = 8;
            uint64_t v438 = swift_allocObject();
            *(void *)(v438 + 16) = sub_24DC09A94;
            *(void *)(v438 + 24) = v433;
            v439 = v413;
            uint64_t v440 = swift_allocObject();
            *(void *)(v440 + 16) = sub_24D4B7DA8;
            *(void *)(v440 + 24) = v438;
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EE8);
            uint64_t v441 = swift_allocObject();
            sub_24D719BBC(v441, 3);
            void *v442 = sub_24D4B7DCC;
            v442[1] = v436;
            v442[2] = sub_24D4B7DCC;
            v442[3] = v437;
            v442[4] = sub_24D4B7DC8;
            v442[5] = v440;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            LODWORD(v1839) = v432;
            os_log_type_t v443 = v432;
            v444 = v435;
            if (!os_log_type_enabled(v435, v443))
            {

              swift_release();
              swift_release();
              swift_release();
              ((void (*)(uint64_t (*)(void), uint64_t (*)(uint64_t, uint64_t, uint64_t)))v1787)(v439, v1818);
              v448 = v1837;
              uint64_t v449 = (uint64_t)v1824;
              v450 = (unint64_t *)&v1824[*((int *)v1812 + 12)];
              v451 = (void (*)(void, void))v1803;
              ((void (*)(char *, void, uint64_t))v1803)(v1824, v1833, v1934);
              swift_storeEnumTagMultiPayload();
              uint64_t v452 = v1808;
              unint64_t *v450 = v1807;
              v450[1] = v452;
              swift_storeEnumTagMultiPayload();
              uint64_t v453 = v1825;
              swift_storeEnumTagMultiPayload();
              sub_24D907568((uint64_t)v1831, v449);
              ((void (*)(uint64_t, uint64_t))v1813)(v449, v453);
              v454 = v1799;
              v455 = v1828;
              v456 = v1826;
              ((void (*)(char *, char *, void *))v1819)(v1799, v1828, v1826);
              if (v1827((uint64_t)v454, 1, v448) == 1)
              {
                v457 = (void (*)(char *, void *))*((void *)v1823 + 1);
                v457(v455, v456);
                (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v1835 + 8))(v1822, v1934);
                v457(v454, v456);
              }
              else
              {
                v458 = v1791;
                (*(void (**)(void))(v1834 + 32))();
                uint64_t v459 = swift_getTupleTypeMetadata2();
                v460 = v1792;
                v461 = &v1792[*(int *)(v459 + 48)];
                uint64_t v462 = v1934;
                v451(v1792, v1833);
                swift_storeEnumTagMultiPayload();
                ((void (*)(char *, char *, uint64_t))v451)(v461, &v458[v448[9]], v462);
                swift_storeEnumTagMultiPayload();
                v463 = v1794;
                swift_storeEnumTagMultiPayload();
                (*(void (**)(char *))(*v1841 + 312))(v460);
                (*(void (**)(char *, void *))(v1793 + 8))(v460, v463);
                (*(void (**)(char *, int *))(v1834 + 8))(v458, v448);
                (*((void (**)(char *, void *))v1823 + 1))(v1828, v1826);
                (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v1835 + 8))(v1822, v462);
              }
              goto LABEL_11;
            }
            v445 = (uint8_t *)sub_24DA8985C();
            uint64_t v446 = swift_slowAlloc();
            v1843[0] = 0;
            v1842[0] = v446;
            *(_WORD *)v445 = 258;
            v1844[0] = (uint64_t)(v445 + 2);
            *(void *)&long long v1845 = sub_24D4B7DCC;
            *((void *)&v1845 + 1) = v436;
            v447 = ItemMetadata;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1845, (uint64_t)v1844, (uint64_t)v1843, (uint64_t)v1842);
            uint64_t v321 = v447;
            if (!v447)
            {
              swift_release();
              *(void *)&long long v1845 = sub_24D4B7DCC;
              *((void *)&v1845 + 1) = v437;
              sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1845, (uint64_t)v1844, (uint64_t)v1843, (uint64_t)v1842);
              swift_release();
              *(void *)&long long v1845 = sub_24D4B7DC8;
              *((void *)&v1845 + 1) = v440;
              sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1845, (uint64_t)v1844, (uint64_t)v1843, (uint64_t)v1842);
              uint64_t ItemMetadata = 0;
              swift_release();
              _os_log_impl(&dword_24D3D0000, v444, (os_log_type_t)v1839, "Mark reconciliation as needs delete because %s", v445, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x25332B030](v446, -1, -1);
              sub_24DA89864();
            }
LABEL_724:

            __break(1u);
            JUMPOUT(0x24DBE4DB4);
          }
          sub_24D4759C8((uint64_t)v1833, v1810);
          v410 = v1837;
          v414 = v1836;
          if (v407)
          {
            (*((void (**)(char *, void *))v1823 + 1))(v1828, v1826);
LABEL_45:
            (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v1835 + 8))(v1822, v1934);
            return v284 & 1;
          }
          uint64_t ItemMetadata = 0;
          uint64_t v465 = v1802;
          uint64_t v466 = (uint64_t)v1805;
          if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v1802 + 48))(v409, 1, v1805) == 1)
          {
            (*(void (**)(uint64_t, uint64_t))(v1800 + 8))(v409, v1801);
            uint64_t v411 = v1834;
            v412 = v1826;
            v413 = v1809;
            goto LABEL_41;
          }
          v471 = *(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v465 + 32);
          v472 = v1790;
          v471(v1790, v409, v466);
          if (sub_24DB86F3C(v466) || *((unsigned char *)v472 + v1788[16] + 16) != 2)
          {
            v475 = ItemMetadata;
            v412 = v1826;
            v413 = v1809;
          }
          else
          {
            v473 = ItemMetadata;
            uint64_t v474 = (*(uint64_t (**)(void (*)(void, void, void)))(*(void *)v408 + 256))(v1833);
            v475 = v473;
            if (v473)
            {
              (*(void (**)(void, int *))(v1802 + 8))(v1790, v1805);
              (*((void (**)(char *, void *))v1823 + 1))(v1828, v1826);
              goto LABEL_45;
            }
            v412 = v1826;
            v413 = v1809;
            if (v474)
            {
              *(void *)&long long v1845 = v1839;
              *((void *)&v1845 + 1) = v414;
              *(void *)&long long v1846 = v1838;
              *((void *)&v1846 + 1) = v1832;
              type metadata accessor for Propagation.CreateItem();
              uint64_t v708 = swift_dynamicCastClass();
              if (v708)
              {
                uint64_t v709 = *(void *)(v708 + 96);
                uint64_t v710 = *(void *)(v708 + 104);
                char v711 = *(unsigned char *)(v708 + 112);
                if (sub_24DC0F558(v709, v710, v711) || sub_24DC0F524(v709, v710, v711))
                {
                  swift_release();
                }
                else
                {
                  uint64_t v869 = sub_24D983A48();
                  swift_retain();
                  v870 = v1831;
                  sub_24D855694((uint64_t)v1831, v869);
                  swift_release();
                  uint64_t v871 = (uint64_t)v1824;
                  v872 = &v1824[*((int *)v1812 + 12)];
                  ((void (*)(char *, void, uint64_t))v1803)(v1824, v1833, v1934);
                  swift_storeEnumTagMultiPayload();
                  *(_OWORD *)v872 = xmmword_24DCD4920;
                  v872[16] = 4;
                  swift_storeEnumTagMultiPayload();
                  uint64_t v873 = v1825;
                  swift_storeEnumTagMultiPayload();
                  sub_24D907568((uint64_t)v870, v871);
                  swift_release();
                  ((void (*)(uint64_t, uint64_t))v1813)(v871, v873);
                }
                v410 = v1837;
                v403 = v1841;
                v414 = v1836;
              }
              else
              {
                swift_release();
                v410 = v1837;
              }
            }
            else
            {
              v410 = v1837;
            }
          }
          uint64_t v479 = (*(uint64_t (**)(void))(*v403 + 152))();
          if (sub_24D3F0C10(0x4000, v479) && !sub_24D8903D0())
          {
            v603 = v1790;
            char v604 = sub_24DBCE39C((uint64_t)v1790, v403);
            if (v475)
            {
              (*(void (**)(void, int *))(v1802 + 8))(v603, v1805);
              (*((void (**)(char *, void *))v1823 + 1))(v1828, v412);
              goto LABEL_45;
            }
            char v712 = v604;
            (*(void (**)(void, int *))(v1802 + 8))(v603, v1805);
            if (v712)
            {
              (*((void (**)(char *, void *))v1823 + 1))(v1828, v412);
              (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v1835 + 8))(v1822, v1934);
              char v284 = 1;
              return v284 & 1;
            }
            uint64_t ItemMetadata = 0;
          }
          else
          {
            uint64_t ItemMetadata = v475;
            (*(void (**)(void, int *))(v1802 + 8))(v1790, v1805);
          }
          uint64_t v411 = v1834;
          goto LABEL_41;
        }
        v1806 = (char *)v376;
        v384 = (char *)v1789;
        v385 = v1826;
        ((void (*)(unsigned int (**)(char *, uint64_t, uint64_t), char *, void *))v1819)(v1789, v1828, v1826);
        uint64_t v386 = v1834;
        v387 = v1837;
        int v388 = (*(uint64_t (**)(char *, uint64_t, int *))(v1834 + 48))(v384, 1, v1837);
        v389 = v1823;
        if (v388 == 1)
        {
          (*((void (**)(char *, void *))v1823 + 1))(v384, v385);
LABEL_33:
          uint64_t v382 = v1829;
          v360 = v1836;
LABEL_35:
          uint64_t v383 = v1839;
          goto LABEL_37;
        }
        v480 = v1785;
        (*(void (**)(char *, char *, int *))(v386 + 32))(v1785, v384, v387);
        v481 = &v480[v387[12]];
        if (v481[v1797[16]] == 1 && (v481[v1797[15]] & 1) != 0)
        {
          uint64_t v482 = v1834;
          uint64_t v483 = v1829;
LABEL_217:
          (*(void (**)(char *, int *))(v482 + 8))(v480, v1837);
LABEL_218:
          v360 = v1836;
          uint64_t v382 = v483;
          goto LABEL_35;
        }
        v485 = v1780;
        v486 = ItemMetadata;
        sub_24D4759C8((uint64_t)v1833, (uint64_t)v1780);
        uint64_t ItemMetadata = v486;
        uint64_t v487 = v1835;
        if (v486)
        {
          (*(void (**)(char *, int *))(v1834 + 8))(v480, v1837);
          (*((void (**)(char *, void *))v389 + 1))(v1828, v1826);
          (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v487 + 8))(v1822, v1934);
          return v284 & 1;
        }
        uint64_t v605 = v1802;
        uint64_t v606 = (uint64_t)v1805;
        int v607 = (*(uint64_t (**)(void (**)(char *, uint64_t), uint64_t, int *))(v1802 + 48))(v485, 1, v1805);
        v608 = v1826;
        if (v607 == 1)
        {
          (*(void (**)(void, uint64_t))(v1800 + 8))(v485, v1801);
          uint64_t v483 = v1829;
        }
        else
        {
          v701 = v1759;
          (*(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(v605 + 32))(v1759, v485, v606);
          BOOL v702 = sub_24D3F0C04(16, *(void *)&v701[v1788[9]]);
          uint64_t v703 = v606;
          BOOL v704 = v702;
          v705 = v701;
          v608 = v1826;
          (*(void (**)(char *, uint64_t))(v605 + 8))(v705, v703);
          uint64_t v483 = v1829;
          if (v704)
          {
LABEL_216:
            uint64_t v482 = v1834;
            v480 = v1785;
            goto LABEL_217;
          }
        }
        id v706 = ItemMetadata;
        char v707 = ((uint64_t (*)(void (*)(void, void, void)))(*v1796)[58])(v1833);
        if (v706)
        {
          (*(void (**)(char *, int *))(v1834 + 8))(v1785, v1837);
          (*((void (**)(char *, void *))v1823 + 1))(v1828, v608);
          (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v487 + 8))(v1822, v1934);
          return v284 & 1;
        }
        uint64_t ItemMetadata = 0;
        if ((v707 & 1) == 0)
        {
          uint64_t v754 = (uint64_t)v1824;
          v755 = &v1824[*((int *)v1812 + 12)];
          ((void (*)(char *, void, uint64_t))v1813)(v1824, v1833, v1934);
          swift_storeEnumTagMultiPayload();
          char *v755 = 1;
          swift_storeEnumTagMultiPayload();
          uint64_t v756 = v1825;
          swift_storeEnumTagMultiPayload();
          sub_24D907568((uint64_t)v1831, v754);
          v1811(v754, v756);
          (*(void (**)(char *, int *))(v1834 + 8))(v1785, v1837);
          goto LABEL_218;
        }
        goto LABEL_216;
      }
      v355 = v1806;
      sub_24DA18988();
      v356 = (unsigned int (*)(void, void, void))v1815;
      v1819 = (char *)*((void *)v309 + 2);
      ((void (*)(uint64_t *, char *, void *))v1819)(v1815, v311, v305);
      unint64_t v357 = v309[80];
      uint64_t v358 = (v357 + 48) & ~v357;
      v1795 = (char *)v357;
      v359 = (void *)swift_allocObject();
      v360 = v1836;
      v359[2] = v1839;
      v359[3] = v360;
      uint64_t v361 = v1832;
      v359[4] = v1838;
      v359[5] = v361;
      ((void (*)(char *, unsigned int (*)(void, void, void), void *))v1814)((char *)v359 + v358, v356, v305);
      uint64_t v329 = (int *)v355;
      v362 = sub_24DCC9068();
      int v363 = sub_24DCCA118();
      v331 = (unsigned char *)swift_allocObject();
      v331[16] = 32;
      uint64_t v364 = swift_allocObject();
      *(unsigned char *)(v364 + 16) = 8;
      uint64_t v365 = swift_allocObject();
      *(void *)(v365 + 16) = sub_24DC09A6C;
      *(void *)(v365 + 24) = v359;
      uint64_t v366 = swift_allocObject();
      *(void *)(v366 + 16) = sub_24D4A46C4;
      *(void *)(v366 + 24) = v365;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EE8);
      uint64_t v367 = swift_allocObject();
      sub_24D719BBC(v367, 3);
      void *v368 = sub_24D4A46AC;
      v368[1] = v331;
      v368[2] = sub_24D4B7DCC;
      v368[3] = v364;
      v368[4] = sub_24D4A46CC;
      v368[5] = v366;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(v362, (os_log_type_t)v363))
      {

        swift_release();
        swift_release();
        swift_release();
        v1787 = *(char **)(v1817 + 8);
        ((void (*)(int *, uint64_t (*)(uint64_t, uint64_t, uint64_t)))v1787)(v329, v1818);
        uint64_t v382 = v1829;
        goto LABEL_35;
      }
      LODWORD(v1821) = v363;
      uint64_t v321 = (unsigned char *)sub_24DA8985C();
      uint64_t v369 = swift_slowAlloc();
      v1843[0] = 0;
      v1842[0] = v369;
      *(_WORD *)uint64_t v321 = 258;
      v1844[0] = (uint64_t)(v321 + 2);
      *(void *)&long long v1845 = sub_24D4A46AC;
      *((void *)&v1845 + 1) = v331;
      v370 = (int *)ItemMetadata;
      sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1845, (uint64_t)v1844, (uint64_t)v1843, (uint64_t)v1842);
      v371 = v370;
      if (!v370)
      {
        swift_release();
        *(void *)&long long v1845 = sub_24D4B7DCC;
        *((void *)&v1845 + 1) = v364;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1845, (uint64_t)v1844, (uint64_t)v1843, (uint64_t)v1842);
        swift_release();
        *(void *)&long long v1845 = sub_24D4A46CC;
        *((void *)&v1845 + 1) = v366;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1845, (uint64_t)v1844, (uint64_t)v1843, (uint64_t)v1842);
        uint64_t ItemMetadata = 0;
        swift_release();
        _os_log_impl(&dword_24D3D0000, v362, (os_log_type_t)v1821, "Delete of %s", v321, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v369, -1, -1);
        sub_24DA89864();
      }
      goto LABEL_722;
    case 2:
      uint64_t v1663 = v265;
      uint64_t v1830 = v48;
      v285 = v1837;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      LODWORD(v1821) = *((unsigned __int8 *)v263 + *(int *)(TupleTypeMetadata3 + 48));
      uint64_t v287 = (char **)((char *)v263 + *(int *)(TupleTypeMetadata3 + 64));
      uint64_t v289 = *v287;
      unint64_t v288 = v287[1];
      v1819 = v289;
      v1828 = v288;
      uint64_t v290 = v1834;
      v291 = v1820;
      (*(void (**)(char *, uint64_t *, int *))(v1834 + 32))(v1820, v263, v285);
      uint64_t v292 = v1934;
      uint64_t v293 = swift_getAssociatedConformanceWitness();
      uint64_t v294 = *(uint64_t (**)(uint64_t))(v293 + 64);
      uint64_t v295 = v292;
      uint64_t v296 = v291;
      v1822 = (uint64_t (**)(uint64_t))v293;
      if ((v294(v295) & 1) != 0 || (v1822[9](v1934)) && !sub_24D8903D0() && v1827 != 4)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, int *))(v290 + 8))(v291, v1837);
        goto LABEL_11;
      }
      uint64_t v332 = (*(uint64_t (**)(void))(*v1841 + 152))();
      BOOL v333 = sub_24D3F0C10(0x4000, v332);
      id v334 = ItemMetadata;
      if (v333)
      {
        uint64_t v335 = v1837;
        if (v1827 != 4)
        {
          sub_24D4759C8((uint64_t)v1833, (uint64_t)v224);
          if (v334)
          {
LABEL_60:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, int *))(v1834 + 8))(v296, v335);
            return v284 & 1;
          }
          uint64_t v336 = v1802;
          uint64_t v337 = (uint64_t)v1805;
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v1802 + 48))(v224, 1, v1805) == 1)
          {
            (*(void (**)(char *, uint64_t))(v1800 + 8))(v224, v1801);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v336 + 32))(v249, v224, v337);
            uint64_t v484 = v337;
            char v586 = sub_24DBCE39C((uint64_t)v249, v1841);
            (*(void (**)(char *, uint64_t))(v336 + 8))(v249, v484);
            if (v586)
            {
              swift_bridgeObjectRelease();
              (*(void (**)(char *, int *))(v1834 + 8))(v1820, v335);
              char v284 = 1;
              return v284 & 1;
            }
          }
          id v334 = 0;
          uint64_t v296 = v1820;
        }
      }
      else
      {
        uint64_t v335 = v1837;
      }
      v1796 = v264;
      BOOL v467 = sub_24D8903D0();
      v468 = v1841;
      int v469 = (int)v1827;
      if (!v467) {
        goto LABEL_83;
      }
      v470 = v221;
      sub_24D4759C8((uint64_t)&v296[v335[9]], (uint64_t)v221);
      if (v334) {
        goto LABEL_60;
      }
      uint64_t ItemMetadata = 0;
      uint64_t v476 = v1802;
      uint64_t v477 = (uint64_t)v1805;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v1802 + 48))(v221, 1, v1805) == 1)
      {
        (*(void (**)(char *, uint64_t))(v1800 + 8))(v221, v1801);
        LODWORD(v1817) = 0;
        id v334 = ItemMetadata;
        uint64_t v296 = v1820;
      }
      else
      {
        v488 = v468;
        v489 = v1782;
        v490 = v1781;
        v491 = v470;
        v492 = v470;
        v493 = v1788;
        v1782[2](v1781, v491, v1788);
        (*(void (**)(char *, uint64_t))(v476 + 8))(v492, v477);
        uint64_t v494 = *(void *)&v490[v493[9]];
        ((void (*)(char *, int *))v489[1])(v490, v493);
        if (sub_24D3F0C04(16, v494))
        {
          id v334 = ItemMetadata;
          uint64_t v335 = v1837;
          v468 = v488;
          if (v469 == 3)
          {
            LODWORD(v1817) = 1;
            uint64_t v296 = v1820;
          }
          else
          {
            uint64_t v296 = v1820;
            if (v469 != 4)
            {
              swift_bridgeObjectRelease();
              (*(void (**)(char *, int *))(v1834 + 8))(v296, v335);
LABEL_154:
              char v284 = 0;
              return v284 & 1;
            }
LABEL_83:
            LODWORD(v1817) = 0;
          }
        }
        else
        {
          LODWORD(v1817) = 0;
          id v334 = ItemMetadata;
          uint64_t v296 = v1820;
          uint64_t v335 = v1837;
          v468 = v488;
        }
      }
      v495 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_getWitnessTable();
      char v496 = sub_24D98BCC4((uint64_t)v335, (uint64_t)v495);
      BOOL v497 = sub_24D5F0188(v496, 1);
      v1818 = v495;
      if (!v497) {
        goto LABEL_96;
      }
      if (v469 == 3)
      {
        if ((v1817 & 1) == 0 && (v296[v335[12] + v1797[20]] & 1) == 0)
        {
          v498 = v1772;
          ((void (*)(char *, uint64_t))(*v1796)[30])(&v296[v335[9]], 1);
          if (v334) {
            goto LABEL_60;
          }
          uint64_t v499 = v1834;
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v1834 + 48))(v498, 1, v335) == 1)
          {
            (*((void (**)(char *, void *))v1823 + 1))(v498, v1826);
LABEL_223:
            int v511 = 0;
            goto LABEL_138;
          }
          char v735 = sub_24D98BC10((uint64_t)v335, (uint64_t)v495);
          (*(void (**)(char *, int *))(v499 + 8))(v498, v335);
          if ((v735 & 1) == 0) {
            goto LABEL_223;
          }
          uint64_t v736 = v1839;
          *(void *)&long long v1845 = v1839;
          v737 = v1836;
          *((void *)&v1845 + 1) = v1836;
          uint64_t v738 = v1838;
          *(void *)&long long v1846 = v1838;
          uint64_t v739 = v1832;
          *((void *)&v1846 + 1) = v1832;
          type metadata accessor for JobResult();
          *(void *)&long long v1845 = v736;
          *((void *)&v1845 + 1) = v737;
          *(void *)&long long v1846 = v738;
          *((void *)&v1846 + 1) = v739;
          type metadata accessor for Ingestion.FaultDirectoryInTree();
          uint64_t v740 = sub_24D732E08((uint64_t)v1833, v1807, v1808, 0x10000);
          v512 = v1831;
          sub_24D85246C((uint64_t)v1831, v740);
          swift_release();
          int v511 = 0;
          v510 = v1841;
LABEL_99:
          if (sub_24D8903D0())
          {
            v513 = v1837;
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1941B0);
            uint64_t v514 = swift_allocObject();
            uint64_t v515 = sub_24D719BBC(v514, 2);
            _OWORD *v516 = xmmword_24DCDE0B0;
            uint64_t v517 = nullsub_1(v515);
            uint64_t v518 = sub_24D3F0DF4(v517);
            swift_bridgeObjectRelease();
            *(void *)&long long v1845 = v518;
            uint64_t v519 = v1834;
            uint64_t v520 = (uint64_t)v1787;
            v513 = v1837;
            (*(void (**)(char *, uint64_t, uint64_t, int *))(v1834 + 56))(v1787, 1, 1, v1837);
            sub_24DBCC7C4(v520, (uint64_t)v296, (char *)&v1845, (void **)v510, (uint64_t)v512, 1);
            if (v334)
            {
              swift_bridgeObjectRelease();
              (*((void (**)(uint64_t, void *))v1823 + 1))(v520, v1826);
              (*(void (**)(char *, int *))(v519 + 8))(v296, v513);
              return v284 & 1;
            }
            (*((void (**)(uint64_t, void *))v1823 + 1))(v520, v1826);
          }
          sub_24D739740((uint64_t)v296, (uint64_t)v510, v512);
          if (v334)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(char *, int *))(v1834 + 8))(v296, v513);
            return v284 & 1;
          }
          LODWORD(v1816) = v511;
          uint64_t ItemMetadata = 0;
          *(void *)&long long v1845 = v1839;
          *((void *)&v1845 + 1) = v1836;
          *(void *)&long long v1846 = v1838;
          *((void *)&v1846 + 1) = v1832;
          v527 = (char *)type metadata accessor for JobResult();
          uint64_t v528 = swift_getTupleTypeMetadata2();
          uint64_t v529 = (uint64_t)v1812;
          v530 = &v1812[*(int *)(v528 + 48)];
          (*(void (**)(char *, char *, int *))(v1834 + 16))(v1812, v296, v513);
          v531 = v1828;
          *(void *)v530 = v1819;
          *((void *)v530 + 1) = v531;
          uint64_t v532 = v1814;
          swift_storeEnumTagMultiPayload();
          sub_24D9075B0((uint64_t)v1831, v529);
          (*(void (**)(uint64_t, uint64_t))(v1813 + 8))(v529, v532);
          uint64_t v533 = v1830;
          uint64_t v534 = swift_getAssociatedConformanceWitness();
          v535 = v296;
          uint64_t v536 = v1934;
          *(void *)&long long v1845 = v1934;
          *((void *)&v1845 + 1) = v533;
          *(void *)&long long v1846 = v1822;
          *((void *)&v1846 + 1) = v534;
          v537 = (void (*)(void, void, void))type metadata accessor for ReconciliationID();
          uint64_t v538 = *(int *)(swift_getTupleTypeMetadata2() + 48);
          v539 = v1824;
          v540 = v535;
          uint64_t v541 = v536;
          v542 = v1831;
          v1828 = *(char **)(v1835 + 16);
          uint64_t v543 = v1835 + 16;
          ((void (*)(char *, char *, uint64_t))v1828)(v1824, v540, v541);
          v1833 = v537;
          swift_storeEnumTagMultiPayload();
          v539[v538] = sub_24D98BCC4((uint64_t)v513, (uint64_t)v1818);
          uint64_t v544 = (uint64_t)v539;
          uint64_t v545 = v1825;
          swift_storeEnumTagMultiPayload();
          sub_24D907568((uint64_t)v542, v544);
          v546 = *(void **)(v1829 + 8);
          v1829 += 8;
          v1826 = v546;
          ((void (*)(uint64_t, uint64_t))v546)(v544, v545);
          if (sub_24D8903D0())
          {
            type metadata accessor for ReconciliationSideMutation();
            v547 = &v1824[*(int *)(swift_getTupleTypeMetadata2() + 48)];
            ((void (*)(char *, char *, uint64_t))v1828)(v1824, v1820, v1934);
            uint64_t v548 = swift_storeEnumTagMultiPayload();
            *(void *)v547 = (*(uint64_t (**)(uint64_t))(*v1841 + 272))(v548);
            uint64_t v549 = v1825;
            uint64_t v550 = (uint64_t)v1824;
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
            sub_24D907568((uint64_t)v542, v550);
            ((void (*)(uint64_t, uint64_t))v1826)(v550, v549);
          }
          v1819 = v527;
          v1844[0] = *sub_24DA25BB4();
          int v551 = (int)v1827;
          int v552 = v1821;
          if (v1827 == 3) {
            int v552 = 0;
          }
          v553 = v1783;
          if (v552 == 1) {
            sub_24D3F0C88(&v1845, 0x80000000000);
          }
          uint64_t v554 = v1797[35];
          v1823 = &v1820[v1837[12]];
          id v555 = ItemMetadata;
          uint64_t v556 = v1832;
          if (v1823[v554] == 1) {
            sub_24D3F0C88(&v1845, 0x8000);
          }
          v557 = (void (*)(char *))v1820;
          char v558 = sub_24D98BCC4((uint64_t)v1837, (uint64_t)v1818);
          if (sub_24DA2530C(v558))
          {
            uint64_t v1835 = v543;
          }
          else
          {
            (*(void (**)(void (*)(void, void)))(*(void *)v1841[2] + 160))((void (*)(void, void))v557);
            if (v555) {
              goto LABEL_140;
            }
            int v691 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1768 + 48))(v553, 1, v1830);
            (*(void (**)(char *, uint64_t))(v1766 + 8))(v553, v1770);
            uint64_t ItemMetadata = 0;
            uint64_t v1835 = v543;
            if (v691 != 1) {
              sub_24D3F0CB8(8);
            }
          }
          uint64_t v559 = type metadata accessor for ReconciliationSideMutation();
          v1822 = (uint64_t (**)(uint64_t))swift_getTupleTypeMetadata2();
          uint64_t v560 = (uint64_t)v1824;
          v561 = &v1824[*((int *)v1822 + 12)];
          ((void (*)(char *, char *, uint64_t))v1828)(v1824, v1820, v1934);
          swift_storeEnumTagMultiPayload();
          unint64_t v562 = v1807;
          *(void *)v561 = v1844[0];
          *((void *)v561 + 1) = v562;
          *((void *)v561 + 2) = v1808;
          uint64_t v1830 = v559;
          swift_storeEnumTagMultiPayload();
          uint64_t v563 = v1825;
          swift_storeEnumTagMultiPayload();
          sub_24D907568((uint64_t)v1831, v560);
          v564 = (void (*)(uint64_t, uint64_t))v1826;
          ((void (*)(uint64_t, uint64_t))v1826)(v560, v563);
          unsigned int v565 = v551 - 3;
          if (v551 == 3 && ((v1817 | v1823[v1797[16]]) & 1) == 0)
          {
            uint64_t v692 = (uint64_t)v1824;
            v693 = &v1824[*((int *)v1822 + 12)];
            v694 = v1820;
            ((void (*)(char *, char *, uint64_t))v1828)(v1824, v1820, v1934);
            swift_storeEnumTagMultiPayload();
            *(_WORD *)v693 = 0;
            swift_storeEnumTagMultiPayload();
            uint64_t v695 = v1825;
            swift_storeEnumTagMultiPayload();
            sub_24D907568((uint64_t)v1831, v692);
            v564(v692, v695);
            if (v1823[v1797[20]] == 1)
            {
              uint64_t v696 = (uint64_t)v1824;
              ((void (*)(char *, char *, uint64_t))v1828)(v1824, v694, v1934);
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
              uint64_t v697 = v1825;
              swift_storeEnumTagMultiPayload();
              sub_24D907568((uint64_t)v1831, v696);
              v564(v696, v697);
            }
            char v698 = sub_24D98BCC4((uint64_t)v1837, (uint64_t)v1818);
            BOOL v699 = sub_24D3F0D94(v698);
            id v577 = ItemMetadata;
            v579 = v1831;
            uint64_t v578 = v1825;
            uint64_t v575 = (uint64_t)v1824;
            if (v699 || !sub_24D8903D0()) {
              goto LABEL_133;
            }
            v700 = (unsigned char *)(v575 + *((int *)v1822 + 12));
            ((void (*)(uint64_t, char *, uint64_t))v1828)(v575, v1820, v1934);
            swift_storeEnumTagMultiPayload();
            unsigned char *v700 = 2;
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            if (sub_24D8903D0() || (char v566 = sub_24D98BCC4((uint64_t)v1837, (uint64_t)v1818), !sub_24DA25B38(v566)))
            {
              uint64_t v567 = (uint64_t)v1824;
              v568 = &v1824[*((int *)v1822 + 12)];
              ((void (*)(char *, char *, uint64_t))v1828)(v1824, v1820, v1934);
              swift_storeEnumTagMultiPayload();
              char *v568 = 2;
              swift_storeEnumTagMultiPayload();
              uint64_t v569 = v1825;
              swift_storeEnumTagMultiPayload();
              sub_24D907568((uint64_t)v1831, v567);
              v564(v567, v569);
            }
            if (v565 >= 2
              && sub_24D8903D0()
              && (sub_24D98BC10((uint64_t)v1837, (uint64_t)v1818) & 1) != 0
              && (char v570 = sub_24D98BCC4((uint64_t)v1837, (uint64_t)v1818), sub_24DA2530C(v570))
              || v1817 && (sub_24D98BC10((uint64_t)v1837, (uint64_t)v1818) & 1) != 0)
            {
              *(void *)&long long v1845 = v1839;
              *((void *)&v1845 + 1) = v1836;
              *(void *)&long long v1846 = v1838;
              *((void *)&v1846 + 1) = v556;
              uint64_t v571 = type metadata accessor for Ingestion.DeleteRejectedItemInTree();
              uint64_t v572 = sub_24D7C043C(v571);
              uint64_t v574 = sub_24DC09A04((uint64_t)v1820, v572, v573, 0x10000000);
              sub_24D85246C((uint64_t)v1831, v574);
              swift_release();
            }
            uint64_t v575 = (uint64_t)v1824;
            v576 = &v1824[*((int *)v1822 + 12)];
            ((void (*)(char *, char *, uint64_t))v1828)(v1824, v1820, v1934);
            swift_storeEnumTagMultiPayload();
            char *v576 = 0;
            swift_storeEnumTagMultiPayload();
            id v577 = ItemMetadata;
          }
          uint64_t v578 = v1825;
          swift_storeEnumTagMultiPayload();
          v579 = v1831;
          sub_24D907568((uint64_t)v1831, v575);
          v564(v575, v578);
LABEL_133:
          v580 = (unsigned char *)(v575 + *((int *)v1822 + 12));
          v581 = (void (*)(char *))v1820;
          ((void (*)(uint64_t, char *, uint64_t))v1828)(v575, v1820, v1934);
          swift_storeEnumTagMultiPayload();
          unsigned char *v580 = v1823[v1797[16]];
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          v582 = (void (*)(uint64_t, uint64_t))v1826;
          sub_24D907568((uint64_t)v579, v575);
          v582(v575, v578);
          if (!v1816)
          {
            v557 = v581;
            goto LABEL_144;
          }
          sub_24DBD547C(v581, v1841, (uint64_t)v579);
          v557 = v581;
          if (!v577)
          {
LABEL_144:
            if (sub_24D3F0C10(1, v1784) && !sub_24D8903D0())
            {
              type metadata accessor for ReconciliationSideMutation();
              uint64_t v587 = swift_getTupleTypeMetadata2();
              uint64_t v588 = (uint64_t)v1824;
              v589 = &v1824[*(int *)(v587 + 48)];
              ((void (*)(char *, void (*)(char *), uint64_t))v1828)(v1824, v557, v1934);
              swift_storeEnumTagMultiPayload();
              *(_WORD *)v589 = 515;
              uint64_t v590 = v1808;
              *((void *)v589 + 1) = v1807;
              *((void *)v589 + 2) = v590;
              uint64_t v578 = v1825;
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
              sub_24D907568((uint64_t)v579, v588);
              ((void (*)(uint64_t, uint64_t))v1826)(v588, v578);
            }
            if (sub_24D3F0D84(v1823[v1797[22]], 2))
            {
              uint64_t v591 = swift_getTupleTypeMetadata3();
              uint64_t v592 = *(int *)(v591 + 48);
              uint64_t v593 = *(int *)(v591 + 64);
              uint64_t v594 = (uint64_t)v1824;
              ((void (*)(char *, void (*)(char *), uint64_t))v1828)(v1824, v557, v1934);
              swift_storeEnumTagMultiPayload();
              *(void *)(v594 + v592) = 2;
              uint64_t v595 = sub_24D6B1FA8(0);
              uint64_t v596 = sub_24D3F0DF4(v595);
              swift_bridgeObjectRelease();
              *(void *)(v594 + v593) = v596;
              uint64_t v578 = v1825;
              v579 = v1831;
              swift_storeEnumTagMultiPayload();
              sub_24D907568((uint64_t)v579, v594);
              ((void (*)(uint64_t, uint64_t))v1826)(v594, v578);
            }
            if (v1823[v1797[23]] == 1)
            {
              uint64_t v597 = swift_getTupleTypeMetadata2();
              uint64_t v598 = (uint64_t)v1824;
              v599 = &v1824[*(int *)(v597 + 48)];
              ((void (*)(char *, void (*)(char *), uint64_t))v1828)(v1824, v557, v1934);
              swift_storeEnumTagMultiPayload();
              *(void *)v599 = 4;
              v599[8] = 0;
              swift_storeEnumTagMultiPayload();
              sub_24D907568((uint64_t)v579, v598);
              ((void (*)(uint64_t, uint64_t))v1826)(v598, v578);
            }
            if (v1823[v1797[24]] == 1)
            {
              uint64_t v600 = swift_getTupleTypeMetadata2();
              uint64_t v601 = (uint64_t)v1824;
              v602 = &v1824[*(int *)(v600 + 48)];
              ((void (*)(char *, void (*)(char *), uint64_t))v1828)(v1824, v557, v1934);
              swift_storeEnumTagMultiPayload();
              *(void *)v602 = 8;
              v602[8] = 0;
              swift_storeEnumTagMultiPayload();
              sub_24D907568((uint64_t)v579, v601);
              ((void (*)(uint64_t, uint64_t))v1826)(v601, v578);
            }
            (*(void (**)(void (*)(char *), int *))(v1834 + 8))(v557, v1837);
            goto LABEL_154;
          }
LABEL_140:
          (*(void (**)(void (*)(char *), int *))(v1834 + 8))(v557, v1837);
          return v284 & 1;
        }
      }
      else
      {
        if (sub_24D8903D0())
        {
          if (v469 == 4) {
            goto LABEL_97;
          }
          uint64_t ItemMetadata = (unsigned char *)sub_24DAA2214(v1807, 0x2000000000000000uLL);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1941E0);
          uint64_t v500 = swift_allocObject();
          uint64_t v501 = sub_24D719BBC(v500, 2);
          void *v502 = v1784;
          v502[1] = 4;
          uint64_t v503 = nullsub_1(v501);
          uint64_t v504 = sub_24D3F0DF4(v503);
          swift_bridgeObjectRelease();
          v1844[0] = v504;
          if (v296[v1837[12] + v1797[15]] == 1)
          {
            sub_24D3F0C84(&v1845, 0x1000000000);
            uint64_t v504 = v1844[0];
          }
          uint64_t v505 = v1839;
          *(void *)&long long v1845 = v1839;
          v506 = v1836;
          *((void *)&v1845 + 1) = v1836;
          uint64_t v507 = v1838;
          *(void *)&long long v1846 = v1838;
          uint64_t v508 = v1832;
          *((void *)&v1846 + 1) = v1832;
          uint64_t v1816 = type metadata accessor for JobResult();
          *(void *)&long long v1845 = v505;
          *((void *)&v1845 + 1) = v506;
          *(void *)&long long v1846 = v507;
          *((void *)&v1846 + 1) = v508;
          type metadata accessor for Ingestion.FetchChildrenMetadata();
          uint64_t v509 = sub_24DC09748((uint64_t)v1833, (uint64_t)ItemMetadata, v1808, v504, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
          sub_24D85246C((uint64_t)v1831, v509);
          swift_release();
          uint64_t v335 = v1837;
          v468 = v1841;
          int v469 = (int)v1827;
        }
LABEL_96:
        if (!v469)
        {
          char v521 = sub_24D98BCC4((uint64_t)v335, (uint64_t)v495);
          if (!sub_24D5F0188(v521, 0))
          {
            int v511 = 1;
LABEL_138:
            v510 = v1841;
            goto LABEL_98;
          }
          v522 = *(void (**)(char *, int *, void *))(*v1796[2] + 512);
          swift_retain();
          v523 = v1777;
          v522(v296, v335, v495);
          swift_release();
          uint64_t v524 = v1835;
          uint64_t v525 = v1934;
          int v526 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1835 + 48))(v523, 1, v1934);
          v512 = v1831;
          if (v526 == 1)
          {
            (*(void (**)(char *, uint64_t))(v1774 + 8))(v523, v1775);
            int v511 = 1;
            v510 = v1841;
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v524 + 32))(v1786, v523, v525);
            *(void *)&long long v1845 = v1839;
            *((void *)&v1845 + 1) = v1836;
            *(void *)&long long v1846 = v1838;
            uint64_t v609 = v1832;
            *((void *)&v1846 + 1) = v1832;
            uint64_t v610 = type metadata accessor for ItemJob();
            uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
            sub_24DA604B8(MetatypeMetadata, MetatypeMetadata);
            swift_allocObject();
            uint64_t v612 = sub_24DCC9C58();
            *(void *)&long long v1845 = v1839;
            *((void *)&v1845 + 1) = v1836;
            *(void *)&long long v1846 = v1838;
            *((void *)&v1846 + 1) = v609;
            uint64_t *v613 = type metadata accessor for Ingestion.TrackTemporaryItem();
            uint64_t v614 = sub_24D785484(v612);
            uint64_t v615 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v1663 + 272))(v1786, v614);
            if (v334)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v524 + 8))(v1786, v1934);
              (*(void (**)(char *, int *))(v1834 + 8))(v296, v1837);
              return v284 & 1;
            }
            uint64_t v713 = v615;
            swift_bridgeObjectRelease();
            uint64_t v714 = MEMORY[0x253327DC0](v713, v610);
            v715 = v1786;
            uint64_t v716 = v713;
            if (v714)
            {
              uint64_t v717 = 0;
              uint64_t ItemMetadata = 0;
              while (1)
              {
                v718 = sub_24D4A445C(&v1845, v717, v716, v610);
                uint64_t v720 = *v719;
                swift_retain();
                ((void (*)(long long *, void))v718)(&v1845, 0);
                uint64_t v721 = v717 + 1;
                if (__OFADD__(v717, 1)) {
                  break;
                }
                if (*(unsigned __int8 *)(v720 + 112) <= 1u)
                {
                  *(void *)&long long v1845 = v1839;
                  *((void *)&v1845 + 1) = v1836;
                  *(void *)&long long v1846 = v1838;
                  *((void *)&v1846 + 1) = v1832;
                  type metadata accessor for JobResult();
                  uint64_t v722 = v610;
                  uint64_t v723 = v716;
                  uint64_t v724 = sub_24D983A48();
                  swift_retain();
                  id v334 = ItemMetadata;
                  sub_24D85246C((uint64_t)v1831, v724);
                  uint64_t v716 = v723;
                  uint64_t v610 = v722;
                  v715 = v1786;
                  swift_release();
                }
                swift_release();
                ++v717;
                if (v721 == MEMORY[0x253327DC0](v716, v610)) {
                  goto LABEL_208;
                }
              }
              __break(1u);
              goto LABEL_446;
            }
LABEL_208:
            v510 = v1841;
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v1835 + 8))(v715, v1934);
            int v511 = 1;
            v512 = v1831;
            uint64_t v296 = v1820;
          }
          goto LABEL_99;
        }
      }
LABEL_97:
      v510 = v468;
      int v511 = 0;
LABEL_98:
      v512 = v1831;
      goto LABEL_99;
    case 3:
      uint64_t v297 = *v263;
      uint64_t v298 = v263[1];
      *(void *)&long long v1845 = v1839;
      *((void *)&v1845 + 1) = v1836;
      *(void *)&long long v1846 = v1838;
      *((void *)&v1846 + 1) = v1832;
      type metadata accessor for JobResult();
      uint64_t v299 = v1934;
      uint64_t v300 = swift_getTupleTypeMetadata2();
      uint64_t v301 = (uint64_t)v1812;
      v302 = &v1812[*(int *)(v300 + 48)];
      (*(void (**)(char *, void, uint64_t))(v1835 + 16))(v1812, v1833, v299);
      *(void *)v302 = v297;
      *((void *)v302 + 1) = v298;
      uint64_t v303 = v1814;
      swift_storeEnumTagMultiPayload();
      sub_24D9075B0((uint64_t)v1831, v301);
      (*(void (**)(uint64_t, uint64_t))(v1813 + 8))(v301, v303);
      goto LABEL_11;
    default:
      uint64_t v1663 = v265;
      v1796 = v264;
      uint64_t v1830 = v48;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v1663 - 48, "oldItem newItem diffs reason ");
      uint64_t v268 = v1837;
      *(void *)&long long v1845 = v1837;
      *((void *)&v1845 + 1) = v1837;
      *(void *)&long long v1846 = &type metadata for Fields;
      *((void *)&v1846 + 1) = MEMORY[0x263F8D310];
      uint64_t v269 = (int *)swift_getTupleTypeMetadata();
      uint64_t v270 = (char *)v263 + v269[12];
      uint64_t v271 = *(uint64_t *)((char *)v263 + v269[16]);
      uint64_t v272 = (char **)((char *)v263 + v269[20]);
      uint64_t v273 = (uint64_t)v272[1];
      v1828 = *v272;
      uint64_t v274 = *(void (**)(uint64_t, uint64_t *, int *))(v1834 + 32);
      uint64_t v275 = v1821;
      v274(v1821, v263, v268);
      uint64_t v276 = v1819;
      v274((uint64_t)v1819, (uint64_t *)v270, v268);
      uint64_t v277 = v276;
      uint64_t v1862 = v271;
      uint64_t v278 = swift_getWitnessTable();
      LOBYTE(v274) = sub_24D98BCC4((uint64_t)v268, v278);
      char v279 = sub_24D98BCC4((uint64_t)v268, v278);
      if ((sub_24DA252B4(v279, (char)v274) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        if (v1827 != 4)
        {
          *(void *)&long long v1845 = 0;
          *((void *)&v1845 + 1) = 0xE000000000000000;
          sub_24DCCA728();
          sub_24DCCADD8();
          swift_getWitnessTable();
          sub_24DCCADC8();
          sub_24DCCADD8();
          sub_24DCCADC8();
          sub_24DCCADD8();
          uint64_t v338 = v1831;
          (*(void (**)(void, void))(*v1831 + 168))(v1845, *((void *)&v1845 + 1));
          swift_bridgeObjectRelease();
          uint64_t v339 = v1839;
          *(void *)&long long v1845 = v1839;
          v340 = v1836;
          *((void *)&v1845 + 1) = v1836;
          uint64_t v341 = v1838;
          *(void *)&long long v1846 = v1838;
          uint64_t v342 = v1832;
          *((void *)&v1846 + 1) = v1832;
          v1841 = (uint64_t *)type metadata accessor for JobResult();
          *(void *)&long long v1845 = v339;
          *((void *)&v1845 + 1) = v340;
          *(void *)&long long v1846 = v341;
          *((void *)&v1846 + 1) = v342;
          uint64_t ItemMetadata = (unsigned char *)type metadata accessor for Ingestion.FetchItemMetadata();
          uint64_t v343 = v1835;
          uint64_t v344 = (uint64_t)v1795;
          uint64_t v345 = v1934;
          (*(void (**)(char *, char *, uint64_t))(v1835 + 16))(v1795, v277, v1934);
          uint64_t v346 = sub_24D7C0440();
          uint64_t v348 = v347;
          uint64_t v349 = sub_24D6B1F9C(0);
          uint64_t v350 = sub_24D3F0DF4(v349);
          swift_bridgeObjectRelease();
          uint64_t v351 = v350;
          uint64_t v275 = v1821;
          uint64_t v352 = sub_24DC09748(v344, v346, v348, v351, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
          uint64_t v277 = v1819;
          (*(void (**)(uint64_t, uint64_t))(v343 + 8))(v344, v345);
          sub_24D85246C((uint64_t)v338, v352);
          swift_release();
        }
        type metadata accessor for FileTreeError();
        swift_getWitnessTable();
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        v353 = *(void (**)(uint64_t, int *))(v1834 + 8);
        v354 = v1837;
        v353(v275, v1837);
        v353((uint64_t)v277, v354);
        return v284 & 1;
      }
      v1822 = (uint64_t (**)(uint64_t))v273;
      unint64_t v280 = (uint64_t *)v1841[2];
      unint64_t v281 = &v277[v268[9]];
      id v282 = ItemMetadata;
      sub_24D4759C8((uint64_t)v281, (uint64_t)v1803);
      if (v282)
      {
        swift_bridgeObjectRelease();
        uint64_t v283 = *(void (**)(uint64_t, int *))(v1834 + 8);
        v283(v1821, v268);
        v283((uint64_t)v277, v268);
        return v284 & 1;
      }
      v1820 = v281;
      uint64_t v464 = v1798;
      sub_24D4759C8((uint64_t)v277, v1798);
      v1815 = v280;
      if (sub_24D8903D0())
      {
        uint64_t v1817 = v278;
        uint64_t v478 = (uint64_t)v1805;
      }
      else
      {
        uint64_t v583 = v1834;
        uint64_t v584 = (uint64_t)v1778;
        v585 = v1837;
        (*(void (**)(char *, uint64_t, int *))(v1834 + 16))(v1778, v1821, v1837);
        (*(void (**)(uint64_t, void, uint64_t, int *))(v583 + 56))(v584, 0, 1, v585);
        sub_24DBCC7C4(v584, (uint64_t)v1819, (char *)&v1862, (void **)v1841, (uint64_t)v1831, 1);
        uint64_t v478 = (uint64_t)v1805;
        uint64_t v1817 = v278;
        (*((void (**)(uint64_t, void *))v1823 + 1))(v584, v1826);
        uint64_t v464 = v1798;
      }
      v617 = (char *)(v1802 + 48);
      v1818 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1802 + 48);
      uint64_t v618 = v1818(v464, 1, v478);
      int v619 = (int)v1827;
      v1823 = v617;
      uint64_t ItemMetadata = 0;
      if (v618 == 1)
      {
        if ((v1827 - 3) >= 2
          && sub_24D8903D0()
          && (sub_24D98BC10((uint64_t)v1837, v1817) & 1) != 0)
        {
          char v620 = sub_24D98BCC4((uint64_t)v1837, v1817);
          if (sub_24DA2530C(v620))
          {
            swift_bridgeObjectRelease();
            uint64_t v621 = v1839;
            *(void *)&long long v1845 = v1839;
            v622 = v1836;
            *((void *)&v1845 + 1) = v1836;
            uint64_t v623 = v1838;
            *(void *)&long long v1846 = v1838;
            uint64_t v624 = v1832;
            *((void *)&v1846 + 1) = v1832;
            type metadata accessor for JobResult();
            v625 = v1837;
            *(void *)&long long v1845 = v621;
            *((void *)&v1845 + 1) = v622;
            *(void *)&long long v1846 = v623;
            *((void *)&v1846 + 1) = v624;
            uint64_t v626 = type metadata accessor for Ingestion.DeleteRejectedItemInTree();
            uint64_t v627 = sub_24D7C043C(v626);
            v628 = v1819;
            uint64_t v630 = sub_24DC09A04((uint64_t)v1819, v627, v629, 0x10000000);
            sub_24D85246C((uint64_t)v1831, v630);
            swift_release();
            v631 = *(void (**)(uint64_t, int *))(v1834 + 8);
            v632 = v625;
            v631(v1821, v625);
            v633 = *(void (**)(uint64_t, uint64_t))(v1800 + 8);
            uint64_t v634 = v1801;
            v633(v1798, v1801);
            v633((uint64_t)v1803, v634);
            v631((uint64_t)v628, v632);
            char v284 = 0;
            return v284 & 1;
          }
        }
        *(void *)&long long v1845 = v1839;
        *((void *)&v1845 + 1) = v1836;
        *(void *)&long long v1846 = v1838;
        *((void *)&v1846 + 1) = v1832;
        uint64_t v635 = type metadata accessor for JobResult();
        uint64_t v636 = v1934;
        uint64_t v637 = swift_getAssociatedConformanceWitness();
        uint64_t v638 = v1830;
        uint64_t v639 = swift_getAssociatedConformanceWitness();
        *(void *)&long long v1845 = v636;
        uint64_t v640 = v636;
        *((void *)&v1845 + 1) = v638;
        v1811 = (uint64_t (*)(uint64_t, uint64_t))v635;
        *(void *)&long long v1846 = v637;
        *((void *)&v1846 + 1) = v639;
        uint64_t v641 = type metadata accessor for ReconciliationID();
        uint64_t v642 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        v643 = (uint64_t (*)(void))(v1835 + 16);
        v1826 = *(void **)(v1835 + 16);
        uint64_t v644 = (uint64_t)v1824;
        v645 = v1819;
        ((void (*)(char *, char *, uint64_t))v1826)(v1824, v1819, v640);
        swift_storeEnumTagMultiPayload();
        *(unsigned char *)(v644 + v642) = sub_24D98BCC4((uint64_t)v1837, v1817);
        uint64_t v646 = v1825;
        swift_storeEnumTagMultiPayload();
        sub_24D907568((uint64_t)v1831, v644);
        uint64_t v1816 = *(void *)(v1829 + 8);
        ((void (*)(uint64_t, uint64_t))v1816)(v644, v646);
        uint64_t v647 = type metadata accessor for ReconciliationSideMutation();
        v1804 = (void (*)(char *, char *, uint64_t))swift_getTupleTypeMetadata2();
        v648 = (uint64_t *)(v644 + *((int *)v1804 + 12));
        v649 = v645;
        v650 = v1831;
        v1809 = v643;
        ((void (*)(uint64_t, char *, uint64_t))v1826)(v644, v649, v1934);
        uint64_t v1810 = v641;
        swift_storeEnumTagMultiPayload();
        uint64_t v651 = *sub_24DA25BB4();
        uint64_t v652 = sub_24D7C0440();
        uint64_t *v648 = v651;
        v648[1] = v652;
        v648[2] = v653;
        v1806 = (char *)v647;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_24D907568((uint64_t)v650, v644);
        uint64_t v654 = v646;
        uint64_t v655 = (uint64_t)v1804;
        ((void (*)(uint64_t, uint64_t))v1816)(v644, v654);
        if (sub_24D8903D0())
        {
          uint64_t v656 = (uint64_t)v1824;
          v657 = &v1824[*(int *)(v655 + 48)];
          ((void (*)(char *, char *, uint64_t))v1826)(v1824, v1819, v1934);
          uint64_t v658 = swift_storeEnumTagMultiPayload();
          *(void *)v657 = (*(uint64_t (**)(uint64_t))(*v1841 + 272))(v658);
          swift_storeEnumTagMultiPayload();
          uint64_t v659 = v1825;
          swift_storeEnumTagMultiPayload();
          sub_24D907568((uint64_t)v650, v656);
          ((void (*)(uint64_t, uint64_t))v1816)(v656, v659);
        }
        BOOL v660 = sub_24D8903D0();
        int v619 = (int)v1827;
        uint64_t v464 = v1798;
        if (v660 || (v661 = sub_24D98BCC4((uint64_t)v1837, v1817), uint64_t v618 = sub_24DA25B38(v661), (v618 & 1) == 0))
        {
          uint64_t v662 = *(int *)(v655 + 48);
          uint64_t v663 = (uint64_t)v1824;
          v664 = &v1824[v662];
          ((void (*)(char *, char *, uint64_t))v1826)(v1824, v1819, v1934);
          swift_storeEnumTagMultiPayload();
          char *v664 = 2;
          swift_storeEnumTagMultiPayload();
          uint64_t v665 = v1825;
          swift_storeEnumTagMultiPayload();
          sub_24D907568((uint64_t)v1831, v663);
          uint64_t v666 = v665;
          int v619 = (int)v1827;
          uint64_t v618 = ((uint64_t (*)(uint64_t, uint64_t))v1816)(v663, v666);
        }
      }
      v667 = v1841;
      v668 = *(uint64_t (**)(uint64_t))(*v1841 + 152);
      v1811 = (uint64_t (*)(uint64_t, uint64_t))(*v1841 + 152);
      uint64_t v669 = v668(v618);
      if (!sub_24D3F0C10(0x4000, v669)) {
        goto LABEL_177;
      }
      uint64_t v670 = v1800;
      v671 = v1776;
      uint64_t v672 = v464;
      uint64_t v673 = v1801;
      (*(void (**)(char *, uint64_t, uint64_t))(v1800 + 16))(v1776, v672, v1801);
      uint64_t v674 = (uint64_t)v1805;
      if (v1818((uint64_t)v671, 1, (uint64_t)v1805) == 1)
      {
        (*(void (**)(char *, uint64_t))(v670 + 8))(v671, v673);
LABEL_177:
        v675 = v1819;
      }
      else
      {
        v688 = v668;
        uint64_t v689 = v1802;
        uint64_t v690 = (uint64_t)v1765;
        (*(void (**)(char *, char *, uint64_t))(v1802 + 32))(v1765, v671, v674);
        if (v619 == 4)
        {
          (*(void (**)(uint64_t, uint64_t))(v689 + 8))(v690, v674);
        }
        else
        {
          id v725 = ItemMetadata;
          char v726 = sub_24DBCE39C(v690, v667);
          if (v725)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, int *))(v1802 + 8))(v690, v1805);
            v727 = *(void (**)(uint64_t, int *))(v1834 + 8);
            v728 = v1837;
            v727(v1821, v1837);
            uint64_t v729 = v673;
            v730 = *(void (**)(uint64_t, uint64_t))(v1800 + 8);
            v730(v1798, v729);
LABEL_644:
            v730((uint64_t)v1803, v729);
            v1470 = (void (*)(char *))v1819;
            goto LABEL_645;
          }
          char v757 = v726;
          (*(void (**)(uint64_t, int *))(v1802 + 8))(v690, v1805);
          v758 = (void (*)(void, void, void))v1803;
          v759 = v1837;
          if (v757)
          {
            swift_bridgeObjectRelease();
            v760 = *(void (**)(uint64_t, int *))(v1834 + 8);
            v760(v1821, v759);
            v761 = *(void (**)(uint64_t, uint64_t))(v1800 + 8);
            uint64_t v762 = v1801;
            v761(v1798, v1801);
            v761((uint64_t)v758, v762);
            v760((uint64_t)v1819, v759);
            char v284 = 1;
            return v284 & 1;
          }
          uint64_t ItemMetadata = 0;
        }
        v668 = v688;
        v675 = v1819;
      }
      uint64_t v1816 = swift_getAssociatedConformanceWitness();
      uint64_t v1810 = *(void *)(*(void *)(v1816 + 32) + 8);
      char v676 = sub_24DCC9798();
      v677 = v1779;
      if ((v676 & 1) != 0 || !sub_24D3F0C10(2, v1862)) {
        goto LABEL_240;
      }
      v1809 = v668;
      v678 = (void (*)(void, void, void))v1803;
      int v679 = v1818((uint64_t)v1803, 1, (uint64_t)v1805);
      uint64_t v680 = v1800;
      v681 = (char *)(v1800 + 16);
      v682 = *(void (**)(char *, void, uint64_t))(v1800 + 16);
      uint64_t v683 = v1801;
      v682(v677, (char *)v678, v1801);
      if (v679 == 1)
      {
        v684 = *(void (**)(char *, uint64_t))(v680 + 8);
        v684(v677, v683);
        v685 = v1762;
        v682(v1762, (char *)v678, v683);
        v686 = (void (*)(char *, char *, uint64_t))v682;
        v687 = v684;
        v684(v685, v683);
LABEL_232:
        v753 = v1763;
        v686(v1763, (char *)v678, v683);
        v668 = v1809;
        goto LABEL_233;
      }
      v1826 = v682;
      v1806 = v681;
      v731 = *(void (**)(char *, char *, uint64_t))(v680 + 32);
      v732 = v677;
      v733 = v1752;
      v731(v1752, v732, v683);
      if (v1818((uint64_t)v733, 1, (uint64_t)v1805) == 1)
      {
        v687 = *(void (**)(char *, uint64_t))(v680 + 8);
        v687(v733, v683);
        v734 = v1762;
        v678 = (void (*)(void, void, void))v1803;
        v686 = (void (*)(char *, char *, uint64_t))v1826;
        ((void (*)(char *, uint64_t *, uint64_t))v1826)(v1762, v1803, v683);
        v687(v734, v683);
        goto LABEL_232;
      }
      v1804 = v731;
      v741 = v1782;
      v742 = v1782[2];
      v743 = v1781;
      v744 = v1788;
      v742(v1781, v733, v1788);
      v745 = *(void **)(v1802 + 8);
      v1799 = (char *)(v1802 + 8);
      v1794 = v745;
      ((void (*)(char *, int *))v745)(v733, v1805);
      v746 = v741 + 1;
      v747 = (char *)v741[1];
      LOBYTE(v741) = v743[v744[13]];
      uint64_t v1793 = (uint64_t)v746;
      v1792 = v747;
      ((void (*)(char *, int *))v747)(v743, v744);
      LOBYTE(v741) = sub_24D3F0D84((char)v741, 2);
      v748 = v1762;
      ((void (*)(char *, uint64_t *, uint64_t))v1826)(v1762, v1803, v683);
      if ((v741 & 1) == 0)
      {
        v687 = *(void (**)(char *, uint64_t))(v1800 + 8);
        v678 = (void (*)(void, void, void))v1803;
        v686 = (void (*)(char *, char *, uint64_t))v1826;
        v687(v748, v683);
        goto LABEL_232;
      }
      v1791 = (char *)v742;
      v749 = v1729;
      v1804(v1729, v748, v683);
      uint64_t v750 = (uint64_t)v1805;
      int v751 = v1818((uint64_t)v749, 1, (uint64_t)v1805);
      v668 = v1809;
      if (v751 == 1)
      {
        v752 = v749;
        v687 = *(void (**)(char *, uint64_t))(v1800 + 8);
        v687(v752, v683);
        v753 = v1763;
        v686 = (void (*)(char *, char *, uint64_t))v1826;
        ((void (*)(char *, uint64_t *, uint64_t))v1826)(v1763, v1803, v683);
LABEL_233:
        v763 = v1761;
        v687(v753, v683);
LABEL_234:
        BOOL v764 = sub_24D8903D0();
        uint64_t v765 = v1801;
        v686(v763, (char *)v1798, v1801);
        if (v764)
        {
          v687(v763, v765);
LABEL_239:
          uint64_t v769 = v1839;
          *(void *)&long long v1845 = v1839;
          v770 = v1836;
          *((void *)&v1845 + 1) = v1836;
          uint64_t v771 = v1838;
          *(void *)&long long v1846 = v1838;
          uint64_t v772 = v1832;
          *((void *)&v1846 + 1) = v1832;
          type metadata accessor for JobResult();
          *(void *)&long long v1845 = v769;
          v675 = v1819;
          *((void *)&v1845 + 1) = v770;
          *(void *)&long long v1846 = v771;
          *((void *)&v1846 + 1) = v772;
          type metadata accessor for Materialization.MaterializeParentHierarchy();
          uint64_t v773 = sub_24D732E04(v1820, v1807, v1808, v1784);
          sub_24D85246C((uint64_t)v1831, v773);
          swift_release();
          goto LABEL_240;
        }
        v766 = v1751;
        v686(v1751, v763, v765);
        uint64_t v767 = (uint64_t)v1805;
        if (v1818((uint64_t)v766, 1, (uint64_t)v1805) == 1)
        {
          v687(v763, v765);
          v687(v766, v765);
          v675 = v1819;
          goto LABEL_240;
        }
        BOOL v768 = sub_24DB86F3C(v767);
        v687(v763, v765);
        (*(void (**)(char *, uint64_t))(v1802 + 8))(v766, v767);
        v675 = v1819;
        if (v768) {
          goto LABEL_239;
        }
        goto LABEL_240;
      }
      v874 = &v749[*(int *)(v750 + 52)];
      uint64_t v875 = v1738;
      v876 = v749;
      v877 = v1737;
      v878 = v1745;
      (*(void (**)(char *, char *, int *))(v1738 + 16))(v1737, v874, v1745);
      ((void (*)(char *, uint64_t))v1794)(v876, v750);
      v879 = *(void (**)(char *, int *))(v875 + 8);
      LOBYTE(v875) = v877[v878[13]];
      v879(v877, v878);
      LOBYTE(v875) = sub_24D3F0D84(v875, 2);
      v753 = v1763;
      v686 = (void (*)(char *, char *, uint64_t))v1826;
      ((void (*)(char *, uint64_t *, uint64_t))v1826)(v1763, v1803, v683);
      if ((v875 & 1) == 0)
      {
        v687 = *(void (**)(char *, uint64_t))(v1800 + 8);
        uint64_t v683 = v1801;
        goto LABEL_233;
      }
      v880 = v686;
      v881 = v1695;
      uint64_t v882 = v1801;
      v880(v1695, v753, v1801);
      v883 = v753;
      if (v1818((uint64_t)v881, 1, (uint64_t)v1805) == 1)
      {
        v884 = *(void (**)(char *, uint64_t))(v1800 + 8);
        v884(v753, v882);
        v884(v881, v882);
        v675 = v1819;
        v668 = v1809;
        goto LABEL_240;
      }
      v995 = v1781;
      v996 = v1788;
      ((void (*)(char *, char *, int *))v1791)(v1781, v881, v1788);
      ((void (*)(char *, int *))v1794)(v881, v1805);
      uint64_t v997 = *(void *)&v995[v996[9]];
      ((void (*)(char *, int *))v1792)(v995, v996);
      LOBYTE(v997) = sub_24D3F0C04(16, v997);
      v998 = v883;
      v687 = *(void (**)(char *, uint64_t))(v1800 + 8);
      v687(v998, v882);
      v675 = v1819;
      v668 = v1809;
      v763 = v1761;
      v686 = (void (*)(char *, char *, uint64_t))v1826;
      if (v997) {
        goto LABEL_234;
      }
LABEL_240:
      uint64_t v774 = v1821;
      v775 = v1831;
      id v776 = ItemMetadata;
      sub_24D73984C(v1821, (uint64_t)v675, &v1862, (uint64_t)v1841, v1831);
      if (v776)
      {
        swift_bridgeObjectRelease();
        v777 = *(void (**)(uint64_t, int *))(v1834 + 8);
        v778 = v1837;
        v777(v774, v1837);
        v779 = v675;
        goto LABEL_242;
      }
      v1809 = v668;
      uint64_t ItemMetadata = 0;
      *(void *)&long long v1845 = v1839;
      *((void *)&v1845 + 1) = v1836;
      *(void *)&long long v1846 = v1838;
      *((void *)&v1846 + 1) = v1832;
      v1826 = (void *)type metadata accessor for JobResult();
      MEMORY[0x270FA5388](v1826);
      strcpy((char *)&v1663 - 32, "from to  reason ");
      v782 = v1837;
      *(void *)&long long v1845 = v1837;
      *((void *)&v1845 + 1) = v1837;
      *(void *)&long long v1846 = &type metadata for Fields;
      *((void *)&v1846 + 1) = MEMORY[0x263F8D310];
      v783 = (int *)swift_getTupleTypeMetadata();
      uint64_t v784 = (uint64_t)v1812;
      v1806 = &v1812[v783[12]];
      uint64_t v785 = (uint64_t)v775;
      uint64_t v786 = v783[16];
      v787 = &v1812[v783[20]];
      v788 = (char *)(v1834 + 16);
      v789 = *(void (**)(char *, uint64_t, int *))(v1834 + 16);
      v789(v1812, v774, v782);
      v1799 = v788;
      v1794 = v789;
      v789(v1806, (uint64_t)v1819, v782);
      v790 = (void (*)(char *))v1819;
      *(void *)(v784 + v786) = v1862;
      uint64_t v791 = (uint64_t)v1822;
      *(void *)v787 = v1828;
      *((void *)v787 + 1) = v791;
      uint64_t v792 = v1814;
      swift_storeEnumTagMultiPayload();
      sub_24D9075B0(v785, v784);
      (*(void (**)(uint64_t, uint64_t))(v1813 + 8))(v784, v792);
      BOOL v793 = sub_24D8903D0();
      v794 = *(uint64_t (***)(uint64_t))(v1800 + 16);
      uint64_t v795 = v1801;
      v796 = (void (*)(void, void, void))v1803;
      v1828 = (char *)(v1800 + 16);
      v1822 = v794;
      v797 = v1771;
      if (v793)
      {
        v798 = v1757;
        ((void (*)(char *, char *, uint64_t))v794)(v1757, (char *)v1798, v1801);
        uint64_t v799 = (uint64_t)v1805;
        if (v1818((uint64_t)v798, 1, (uint64_t)v1805) != 1)
        {
          uint64_t v800 = (uint64_t)v790;
          v801 = (char *)v1782;
          v802 = v1747;
          uint64_t v803 = (uint64_t)v1788;
          v1782[2](v1747, v798, v1788);
          (*(void (**)(char *, uint64_t))(v1802 + 8))(v798, v799);
          if (qword_26B199AA0 == -1) {
            goto LABEL_247;
          }
          goto LABEL_696;
        }
        (*(void (**)(char *, uint64_t))(v1800 + 8))(v798, v795);
      }
      break;
  }
LABEL_249:
  ((void (*)(char *, void, uint64_t))v794)(v797, v796, v795);
  uint64_t v814 = (uint64_t)v1805;
  int v815 = v1818((uint64_t)v797, 1, (uint64_t)v1805);
  v816 = ItemMetadata;
  if (v815 == 1)
  {
    (*(void (**)(char *, uint64_t))(v1800 + 8))(v797, v795);
    v817 = v1837;
  }
  else
  {
    v818 = v1782;
    v819 = v1781;
    v820 = v1788;
    v1782[2](v1781, v797, v1788);
    (*(void (**)(char *, uint64_t))(v1802 + 8))(v797, v814);
    uint64_t v821 = *(void *)&v819[v820[9]];
    ((void (*)(char *, int *))v818[1])(v819, v820);
    BOOL v822 = sub_24D3F0C04(4, v821);
    v817 = v1837;
    if (v822)
    {
      uint64_t v823 = v1839;
      *(void *)&long long v1845 = v1839;
      v824 = v1836;
      *((void *)&v1845 + 1) = v1836;
      *(void *)&long long v1846 = v1838;
      uint64_t v825 = v1832;
      *((void *)&v1846 + 1) = v1832;
      uint64_t v826 = type metadata accessor for ItemJob();
      uint64_t v827 = swift_getMetatypeMetadata();
      sub_24DA604B8(v827, v827);
      swift_allocObject();
      uint64_t v828 = sub_24DCC9C58();
      *(void *)&long long v1845 = v823;
      v790 = (void (*)(char *))v1819;
      *((void *)&v1845 + 1) = v824;
      *(void *)&long long v1846 = v1838;
      *((void *)&v1846 + 1) = v825;
      uint64_t *v829 = type metadata accessor for Ingestion.DeleteFolderFromSnapshotIfEmpty();
      uint64_t v830 = sub_24D785484(v828);
      uint64_t v831 = (*(uint64_t (**)(void (*)(char *), uint64_t))(*(void *)v1663 + 272))(v790, v830);
      uint64_t ItemMetadata = v816;
      if (v816)
      {
        swift_bridgeObjectRelease();
        v727 = *(void (**)(uint64_t, int *))(v1834 + 8);
        v728 = v1837;
        v727(v1821, v1837);
        v832 = v790;
        uint64_t v833 = v1800;
        goto LABEL_627;
      }
      uint64_t v852 = v831;
      swift_bridgeObjectRelease();
      uint64_t v853 = MEMORY[0x253327DC0](v852, v826);
      v817 = v1837;
      if (v853)
      {
        uint64_t v854 = v826;
        uint64_t v855 = 0;
        uint64_t v1813 = v1835 + 16;
        v1812 = (char *)(v1829 + 8);
        v1806 = (char *)v826;
        v1804 = (void (*)(char *, char *, uint64_t))v852;
        v856 = v1831;
        uint64_t v857 = (uint64_t)v1824;
        do
        {
          v858 = sub_24D4A445C(&v1845, v855, v852, v854);
          uint64_t v860 = *v859;
          swift_retain();
          ((void (*)(long long *, void))v858)(&v1845, 0);
          uint64_t v1814 = v855 + 1;
          if (__OFADD__(v855, 1))
          {
            __break(1u);
            goto LABEL_665;
          }
          uint64_t v861 = sub_24D983A48();
          swift_retain();
          sub_24D85246C((uint64_t)v856, v861);
          swift_release();
          uint64_t v862 = v1830;
          uint64_t v863 = swift_getAssociatedConformanceWitness();
          uint64_t v864 = v1934;
          *(void *)&long long v1845 = v1934;
          *((void *)&v1845 + 1) = v862;
          *(void *)&long long v1846 = v1816;
          *((void *)&v1846 + 1) = v863;
          type metadata accessor for ReconciliationID();
          type metadata accessor for ReconciliationSideMutation();
          v865 = (unsigned char *)(v857 + *(int *)(swift_getTupleTypeMetadata2() + 48));
          (*(void (**)(uint64_t, uint64_t, uint64_t))v1813)(v857, v860 + *(void *)(*(void *)v860 + 576), v864);
          swift_storeEnumTagMultiPayload();
          unsigned char *v865 = 0;
          swift_storeEnumTagMultiPayload();
          uint64_t v866 = v1825;
          swift_storeEnumTagMultiPayload();
          sub_24D907568((uint64_t)v856, v857);
          swift_release();
          (*(void (**)(uint64_t, uint64_t))v1812)(v857, v866);
          uint64_t v852 = (uint64_t)v1804;
          v867 = v1806;
          uint64_t v868 = MEMORY[0x253327DC0](v1804, v1806);
          ++v855;
          uint64_t v854 = (uint64_t)v867;
        }
        while (v1814 != v868);
        swift_bridgeObjectRelease();
        v816 = ItemMetadata;
        v817 = v1837;
        uint64_t v795 = v1801;
        uint64_t v814 = (uint64_t)v1805;
        v790 = (void (*)(char *))v1819;
        v794 = v1822;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v795 = v1801;
        uint64_t v814 = (uint64_t)v1805;
        v794 = v1822;
        v816 = ItemMetadata;
      }
    }
    else
    {
      uint64_t v814 = (uint64_t)v1805;
      v794 = v1822;
      v790 = (void (*)(char *))v1819;
    }
  }
  v834 = v1769;
  ((void (*)(char *, char *, uint64_t))v794)(v1769, (char *)v1798, v795);
  if (v1818((uint64_t)v834, 1, v814) == 1)
  {
    uint64_t ItemMetadata = v816;
    (*(void (**)(char *, uint64_t))(v1800 + 8))(v834, v795);
    uint64_t v835 = v1784;
LABEL_298:
    v842 = v1773;
    goto LABEL_299;
  }
  v836 = v816;
  uint64_t v837 = v1802;
  v838 = v1764;
  (*(void (**)(char *, char *, uint64_t))(v1802 + 32))(v1764, v834, v814);
  uint64_t v839 = v1788[9];
  uint64_t v840 = v814;
  uint64_t v841 = *(void *)&v838[v839];
  if (!sub_24D3F0CDC(v841))
  {
    if (sub_24D3F0C04(4, v841))
    {
      uint64_t v1793 = v839;
      uint64_t v843 = v1839;
      *(void *)&long long v1845 = v1839;
      v844 = v1836;
      *((void *)&v1845 + 1) = v1836;
      uint64_t v845 = v1838;
      *(void *)&long long v1846 = v1838;
      uint64_t v846 = v1832;
      *((void *)&v1846 + 1) = v1832;
      uint64_t v1813 = type metadata accessor for ItemJob();
      uint64_t v847 = swift_getMetatypeMetadata();
      sub_24DA604B8(v847, v847);
      swift_allocObject();
      uint64_t v848 = sub_24DCC9C58();
      *(void *)&long long v1845 = v843;
      *((void *)&v1845 + 1) = v844;
      *(void *)&long long v1846 = v845;
      v779 = v1819;
      *((void *)&v1846 + 1) = v846;
      uint64_t *v849 = type metadata accessor for Ingestion.DeleteFolderFromSnapshotIfEmpty();
      uint64_t v850 = sub_24D785484(v848);
      uint64_t v851 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v1663 + 272))(v779, v850);
      if (v836)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, int *))(v1802 + 8))(v1764, v1805);
        v777 = *(void (**)(uint64_t, int *))(v1834 + 8);
        v778 = v1837;
        v777(v1821, v1837);
        goto LABEL_242;
      }
      uint64_t v885 = v851;
      uint64_t ItemMetadata = 0;
      swift_bridgeObjectRelease();
      uint64_t v886 = v1813;
      if (MEMORY[0x253327DC0](v885, v1813))
      {
        uint64_t v887 = v886;
        uint64_t v888 = 0;
        v1812 = (char *)(v1835 + 16);
        v1806 = (char *)(v1829 + 8);
        v1804 = (void (*)(char *, char *, uint64_t))v885;
        v889 = v1831;
        uint64_t v890 = (uint64_t)v1824;
        do
        {
          v891 = sub_24D4A445C(&v1845, v888, v885, v887);
          uint64_t v860 = *v892;
          swift_retain();
          ((void (*)(long long *, void))v891)(&v1845, 0);
          uint64_t v1814 = v888 + 1;
          if (__OFADD__(v888, 1))
          {
            __break(1u);
            goto LABEL_686;
          }
          uint64_t v893 = sub_24D983A48();
          swift_retain();
          sub_24D85246C((uint64_t)v889, v893);
          swift_release();
          uint64_t v894 = v1830;
          uint64_t v895 = swift_getAssociatedConformanceWitness();
          uint64_t v896 = v1934;
          *(void *)&long long v1845 = v1934;
          *((void *)&v1845 + 1) = v894;
          *(void *)&long long v1846 = v1816;
          *((void *)&v1846 + 1) = v895;
          type metadata accessor for ReconciliationID();
          type metadata accessor for ReconciliationSideMutation();
          v897 = (unsigned char *)(v890 + *(int *)(swift_getTupleTypeMetadata2() + 48));
          (*(void (**)(uint64_t, uint64_t, uint64_t))v1812)(v890, v860 + *(void *)(*(void *)v860 + 576), v896);
          swift_storeEnumTagMultiPayload();
          unsigned char *v897 = 0;
          swift_storeEnumTagMultiPayload();
          uint64_t v898 = v1825;
          swift_storeEnumTagMultiPayload();
          sub_24D907568((uint64_t)v889, v890);
          swift_release();
          (*(void (**)(uint64_t, uint64_t))v1806)(v890, v898);
          uint64_t v899 = (uint64_t)v1804;
          uint64_t v900 = v1813;
          uint64_t v901 = MEMORY[0x253327DC0](v1804, v1813);
          ++v888;
          uint64_t v887 = v900;
          uint64_t v885 = v899;
        }
        while (v1814 != v901);
      }
      swift_bridgeObjectRelease();
      v836 = ItemMetadata;
      v790 = (void (*)(char *))v1819;
      v838 = v1764;
      uint64_t v839 = v1793;
    }
    uint64_t ItemMetadata = v836;
    BOOL v902 = sub_24D8903D0();
    uint64_t v835 = v1784;
    v817 = v1837;
    if (v902)
    {
      uint64_t v1793 = v839;
      uint64_t v903 = v1830;
      uint64_t v904 = swift_getAssociatedConformanceWitness();
      uint64_t v905 = v1934;
      *(void *)&long long v1845 = v1934;
      *((void *)&v1845 + 1) = v903;
      *(void *)&long long v1846 = v1816;
      *((void *)&v1846 + 1) = v904;
      type metadata accessor for ReconciliationID();
      uint64_t v906 = type metadata accessor for ReconciliationSideMutation();
      uint64_t v907 = swift_getTupleTypeMetadata2();
      uint64_t v908 = (uint64_t)v1824;
      v909 = &v1824[*(int *)(v907 + 48)];
      uint64_t v910 = v905;
      v911 = *(void (**)(char *, void (*)(char *), uint64_t))(v1835 + 16);
      v911(v1824, v790, v910);
      swift_storeEnumTagMultiPayload();
      char *v909 = 0;
      uint64_t v1814 = v906;
      swift_storeEnumTagMultiPayload();
      uint64_t v912 = v1825;
      swift_storeEnumTagMultiPayload();
      sub_24D907568((uint64_t)v1831, v908);
      uint64_t v1813 = *(void *)(v1829 + 8);
      uint64_t v913 = ((uint64_t (*)(uint64_t, uint64_t))v1813)(v908, v912);
      uint64_t v914 = v1809(v913);
      if (sub_24D3F0C10(0x4000, v914))
      {
        uint64_t v915 = (uint64_t)v1824;
        v916 = &v1824[*(int *)(v907 + 48)];
        v911(v1824, (void (*)(char *))v1819, v1934);
        swift_storeEnumTagMultiPayload();
        char *v916 = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v917 = v1825;
        swift_storeEnumTagMultiPayload();
        sub_24D907568((uint64_t)v1831, v915);
        ((void (*)(uint64_t, uint64_t))v1813)(v915, v917);
      }
      BOOL v918 = sub_24D3F0C04(8, *(void *)&v1764[v1793]);
      v1812 = (char *)v911;
      if (v918)
      {
        uint64_t v919 = (uint64_t)v1711;
        v790 = (void (*)(char *))v1819;
        v911(v1711, (void (*)(char *))v1819, v1934);
        swift_storeEnumTagMultiPayload();
        char v920 = sub_24D98BCC4((uint64_t)v1837, v1817);
        uint64_t v835 = v1784;
        if (qword_26B199AA0 != -1) {
          swift_once();
        }
        unint64_t v921 = qword_26B1A24C8;
        if ((qword_26B1A24C8 & 8) != 0 && v920 == 1) {
          unint64_t v921 = qword_26B1A24C8 & 0xFFFFFFFFFFFFFFF7;
        }
        v923 = (char *)(v919 + *(int *)(v907 + 48));
        *(void *)v923 = v921;
        uint64_t v924 = v1825;
      }
      else
      {
        uint64_t v919 = (uint64_t)v1824;
        v923 = &v1824[*(int *)(v907 + 48)];
        v790 = (void (*)(char *))v1819;
        v911(v1824, (void (*)(char *))v1819, v1934);
        swift_storeEnumTagMultiPayload();
        uint64_t v925 = sub_24D6B1EC8(0);
        uint64_t v926 = sub_24D3F0DF4(v925);
        swift_bridgeObjectRelease();
        *(void *)v923 = v926;
        uint64_t v924 = v1825;
        uint64_t v835 = v1784;
      }
      uint64_t v927 = v1808;
      *((void *)v923 + 1) = v1807;
      *((void *)v923 + 2) = v927;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_24D907568((uint64_t)v1831, v919);
      ((void (*)(uint64_t, uint64_t))v1813)(v919, v924);
      v817 = v1837;
      char v928 = sub_24D98BCC4((uint64_t)v1837, v1817);
      BOOL v929 = sub_24D5F0188(v928, 1);
      v838 = v1764;
      if (v929 && (sub_24D98BC10((uint64_t)v817, v1817) & 1) == 0 && (*((unsigned char *)v790 + v817[12] + v1797[16]) & 1) == 0)
      {
        *(void *)&long long v1845 = v1839;
        *((void *)&v1845 + 1) = v1836;
        *(void *)&long long v1846 = v1838;
        *((void *)&v1846 + 1) = v1832;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v930 = (uint64_t)v1795;
        ((void (*)(char *, void (*)(char *), uint64_t))v1812)(v1795, v790, v1934);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1941E0);
        uint64_t v931 = swift_allocObject();
        uint64_t v932 = sub_24D719BBC(v931, 2);
        uint64_t *v933 = v835;
        v933[1] = 0x80000000;
        uint64_t v934 = nullsub_1(v932);
        uint64_t v935 = sub_24D3F0DF4(v934);
        swift_bridgeObjectRelease();
        uint64_t v936 = v935;
        v838 = v1764;
        uint64_t v937 = sub_24DC09748(v930, v1807, v1808, v936, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
        (*(void (**)(uint64_t, uint64_t))(v1835 + 8))(v930, v1934);
        sub_24D85246C((uint64_t)v1831, v937);
        swift_release();
      }
    }
    (*(void (**)(char *, int *))(v1802 + 8))(v838, v1805);
    goto LABEL_298;
  }
  uint64_t ItemMetadata = v836;
  (*(void (**)(char *, uint64_t))(v837 + 8))(v838, v840);
  uint64_t v835 = v1784;
  v842 = v1773;
  v817 = v1837;
LABEL_299:
  if (sub_24D3F0C10(0x4000000, v835))
  {
    char v938 = sub_24D98BCC4((uint64_t)v817, v1817);
    if (sub_24D5F0188(v938, 1))
    {
      *(void *)&long long v1845 = v1839;
      *((void *)&v1845 + 1) = v1836;
      *(void *)&long long v1846 = v1838;
      *((void *)&v1846 + 1) = v1832;
      type metadata accessor for Ingestion.FetchChildrenMetadata();
      v939 = v790;
      uint64_t v940 = v1835;
      uint64_t v941 = (uint64_t)v1795;
      uint64_t v942 = v835;
      uint64_t v943 = v1934;
      (*(void (**)(char *, void (*)(char *), uint64_t))(v1835 + 16))(v1795, v939, v1934);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1941E0);
      uint64_t v944 = swift_allocObject();
      uint64_t v945 = sub_24D719BBC(v944, 2);
      uint64_t *v946 = v942;
      v946[1] = 0x1000000000;
      uint64_t v947 = nullsub_1(v945);
      uint64_t v948 = sub_24D3F0DF4(v947);
      swift_bridgeObjectRelease();
      uint64_t v949 = sub_24DC09748(v941, v1807, v1808, v948, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
      uint64_t v950 = v940;
      v790 = v939;
      uint64_t v951 = v941;
      v842 = v1773;
      uint64_t v952 = v943;
      uint64_t v835 = v942;
      v817 = v1837;
      (*(void (**)(uint64_t, uint64_t))(v950 + 8))(v951, v952);
      sub_24D85246C((uint64_t)v1831, v949);
      swift_release();
    }
  }
  int v953 = sub_24D3F0C10(0x1000000000, v835);
  BOOL v954 = sub_24D3F0C10(0x2000000000, v835);
  if (!sub_24D8903D0()) {
    goto LABEL_313;
  }
  char v955 = sub_24D98BCC4((uint64_t)v817, v1817);
  if (!sub_24D5F0188(v955, 1)) {
    goto LABEL_313;
  }
  if (!sub_24D3F0C10(0x100000000000, v1862)) {
    goto LABEL_313;
  }
  v956 = (char *)v790 + v817[12];
  if (v956[v1797[16]]) {
    goto LABEL_313;
  }
  if (v956[v1797[15]] == 1)
  {
    v957 = v1701;
    ((void (*)(char *, char *, uint64_t))v1822)(v1701, (char *)v1798, v1801);
    if (v1818((uint64_t)v957, 1, (uint64_t)v1805) == 1)
    {
      (*(void (**)(char *, uint64_t))(v1800 + 8))(v957, v1801);
      uint64_t v835 = v1784;
      v842 = v1773;
    }
    else
    {
      uint64_t v958 = v1802;
      v959 = v1690;
      uint64_t v960 = (uint64_t)v1805;
      (*(void (**)(char *, char *, int *))(v1802 + 32))(v1690, v957, v1805);
      BOOL v961 = sub_24D3F0C04(16, *(void *)&v959[v1788[9]]);
      (*(void (**)(char *, uint64_t))(v958 + 8))(v959, v960);
      uint64_t v835 = v1784;
      v842 = v1773;
      if (v961) {
        goto LABEL_313;
      }
    }
  }
  int v953 = 1;
LABEL_313:
  if (!sub_24D8903D0() || !sub_24D3F0C10(2, v1862)) {
    goto LABEL_344;
  }
  v962 = v817;
  uint64_t v963 = v1821;
  v964 = (char *)(v1821 + v817[9]);
  v965 = ItemMetadata;
  uint64_t v966 = ((uint64_t (*)(char *, char *))(*v1796)[66])(v964, v1820);
  uint64_t ItemMetadata = v965;
  if (v965)
  {
    v967 = *(void (**)(uint64_t, int *))(v1834 + 8);
    v967(v963, v962);
    v968 = v962;
    goto LABEL_317;
  }
  uint64_t v972 = v966;
  LODWORD(v1787) = v954;
  v1786 = v964;
  uint64_t v973 = v835;
  *(void *)&long long v1845 = v966;
  uint64_t v974 = v1934;
  sub_24DCC9D48();
  swift_getWitnessTable();
  if (sub_24DCC9FE8())
  {
    swift_bridgeObjectRelease();
    if (v953 & v1787)
    {
      char v975 = 1;
      LOBYTE(v953) = 1;
      v790 = (void (*)(char *))v1819;
      uint64_t v835 = v973;
      v842 = v1773;
      v817 = v1837;
      goto LABEL_346;
    }
    v790 = (void (*)(char *))v1819;
    goto LABEL_337;
  }
  if (!MEMORY[0x253327DC0](v972, v974))
  {
LABEL_334:
    swift_bridgeObjectRelease();
    int v953 = 1;
    char v975 = 1;
    v817 = v1837;
    uint64_t v835 = v1784;
    v790 = (void (*)(char *))v1819;
    v842 = v1773;
    if (v1787) {
      goto LABEL_346;
    }
LABEL_337:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1941E0);
    uint64_t v987 = swift_allocObject();
    uint64_t v988 = sub_24D719BBC(v987, 2);
    _OWORD *v989 = xmmword_24DCDE0F0;
    uint64_t v990 = nullsub_1(v988);
    uint64_t v991 = sub_24D3F0DF4(v990);
    swift_bridgeObjectRelease();
    v992 = ItemMetadata;
    uint64_t v993 = ((uint64_t (*)(char *, uint64_t))(*v1796)[56])(v1786, v991);
    uint64_t ItemMetadata = v992;
    if (v992)
    {
      v967 = *(void (**)(uint64_t, int *))(v1834 + 8);
      v968 = v1837;
      v967(v1821, v1837);
LABEL_317:
      v969 = *(void (**)(uint64_t, uint64_t))(v1800 + 8);
      uint64_t v970 = v1801;
      v969(v1798, v1801);
      v969((uint64_t)v1803, v970);
      v971 = (char *)v790;
LABEL_318:
      v967((uint64_t)v971, v968);
      return v284 & 1;
    }
    uint64_t v994 = v993;
    v953 |= sub_24D3F0C10(0x1000000000, v993);
    if (sub_24D3F0C10(0x2000000000, v994))
    {
      char v975 = 1;
      goto LABEL_653;
    }
    v817 = v1837;
    uint64_t v835 = v1784;
    v790 = (void (*)(char *))v1819;
    v842 = v1773;
    BOOL v954 = (int)v1787;
LABEL_344:
    if ((v953 | v954))
    {
      char v975 = v953 ^ 1 | v954;
      goto LABEL_346;
    }
LABEL_350:
    uint64_t v1015 = v1801;
    goto LABEL_351;
  }
  uint64_t v795 = 0;
  uint64_t v976 = *v1815;
  uint64_t v1814 = v1835 + 16;
  v1812 = (char *)(v1835 + 32);
  uint64_t v1793 = v1768 + 48;
  v1791 = (char *)(v1768 + 32);
  v1792 = (char *)(v1768 + 8);
  v1806 = *(char **)(v976 + 160);
  v1804 = (void (*)(char *, char *, uint64_t))(v976 + 160);
  uint64_t v1813 = v1835 + 8;
  v1789 = (unsigned int (**)(char *, uint64_t, uint64_t))(v1702 + 48);
  v1785 = v1702 + 32;
  v1783 = v1702 + 8;
  v1780 = (void (**)(char *, uint64_t))(v1698 + 8);
  v1790 = (void (**)(char *, uint64_t))(v1766 + 8);
  uint64_t v800 = v1934;
  v802 = v1740;
  v797 = v1741;
  v801 = v1749;
  while (1)
  {
    uint64_t v977 = v972;
    v978 = sub_24D4A445C(&v1845, v795, v972, v800);
    (*(void (**)(char *))v1814)(v801);
    ((void (*)(long long *, void))v978)(&v1845, 0);
    uint64_t v803 = v795 + 1;
    if (__OFADD__(v795, 1))
    {
      __break(1u);
LABEL_696:
      swift_once();
LABEL_247:
      BOOL v804 = sub_24DB89D64(qword_26B1A24C8 | 0x10, 0, v803);
      (*((void (**)(char *, uint64_t))v801 + 1))(v802, v803);
      v794 = v1822;
      v790 = (void (*)(char *))v800;
      v796 = (void (*)(void, void, void))v1803;
      if (!v804)
      {
        uint64_t v805 = v1830;
        uint64_t v806 = swift_getAssociatedConformanceWitness();
        uint64_t v807 = v1934;
        *(void *)&long long v1845 = v1934;
        *((void *)&v1845 + 1) = v805;
        *(void *)&long long v1846 = v1816;
        *((void *)&v1846 + 1) = v806;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v808 = swift_getTupleTypeMetadata2();
        uint64_t v809 = (uint64_t)v1824;
        v810 = &v1824[*(int *)(v808 + 48)];
        (*(void (**)(char *, void (*)(char *), uint64_t))(v1835 + 16))(v1824, v790, v807);
        uint64_t v811 = swift_storeEnumTagMultiPayload();
        *(void *)v810 = (*(uint64_t (**)(uint64_t))(*v1841 + 272))(v811);
        uint64_t v795 = v1801;
        v796 = (void (*)(void, void, void))v1803;
        swift_storeEnumTagMultiPayload();
        uint64_t v812 = v1825;
        swift_storeEnumTagMultiPayload();
        sub_24D907568((uint64_t)v1831, v809);
        uint64_t v813 = v812;
        v794 = v1822;
        (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v809, v813);
      }
      goto LABEL_249;
    }
    v979 = v1758;
    (*(void (**)(char *, char *, uint64_t))v1812)(v1758, v801, v800);
    v980 = ItemMetadata;
    ((void (*)(char *))v1806)(v979);
    uint64_t ItemMetadata = v980;
    if (v980) {
      goto LABEL_443;
    }
    uint64_t v981 = v1830;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v1793)(v797, 1, v1830) != 1) {
      break;
    }
    uint64_t v800 = v1934;
    (*(void (**)(char *, uint64_t))v1813)(v1758, v1934);
    (*v1790)(v797, v1770);
LABEL_325:
    uint64_t v972 = v977;
    ++v795;
    if (v803 == MEMORY[0x253327DC0](v977, v800)) {
      goto LABEL_334;
    }
  }
  (*(void (**)(char *, char *, uint64_t))v1791)(v802, v797, v981);
  v982 = v1736;
  v983 = ItemMetadata;
  (*(void (**)(char *, uint64_t))(*(void *)v1841[5] + 240))(v802, 1);
  uint64_t ItemMetadata = v983;
  if (v983)
  {
    (*(void (**)(char *, uint64_t))v1792)(v802, v981);
LABEL_443:
    (*(void (**)(char *, uint64_t))v1813)(v1758, v1934);
    swift_bridgeObjectRelease();
LABEL_444:
    v967 = *(void (**)(uint64_t, int *))(v1834 + 8);
    v968 = v1837;
    v967(v1821, v1837);
    v1206 = *(void (**)(uint64_t, uint64_t))(v1800 + 8);
    uint64_t v1207 = v1801;
    v1206(v1798, v1801);
    v1206((uint64_t)v1803, v1207);
LABEL_661:
    v971 = v1819;
    goto LABEL_318;
  }
  (*(void (**)(char *, uint64_t))v1792)(v802, v981);
  (*(void (**)(char *, uint64_t))v1813)(v1758, v1934);
  uint64_t v984 = v1735;
  if ((*v1789)(v982, 1, v1735) == 1)
  {
    (*v1780)(v982, v1723);
    uint64_t v800 = v1934;
    v802 = v1740;
    v797 = v1741;
    goto LABEL_325;
  }
  v985 = v1722;
  (*(void (**)(char *, char *, uint64_t))v1785)(v1722, v982, v984);
  int v986 = v985[*(int *)(v984 + 48) + v1797[15]];
  (*(void (**)(char *, uint64_t))v1783)(v985, v984);
  v797 = v1741;
  if (v986 != 1)
  {
    uint64_t v800 = v1934;
    v802 = v1740;
    goto LABEL_325;
  }
  swift_bridgeObjectRelease();
  char v975 = 1;
  LOBYTE(v953) = 1;
LABEL_653:
  v817 = v1837;
  uint64_t v835 = v1784;
  v790 = (void (*)(char *))v1819;
  v842 = v1773;
LABEL_346:
  if (!sub_24D8903D0()) {
    goto LABEL_350;
  }
  char v999 = sub_24D98BCC4((uint64_t)v817, v1817);
  if (sub_24D5F0188(v999, 1))
  {
    uint64_t v1000 = sub_24D6B1F9C(0);
    uint64_t v1001 = sub_24D3F0DF4(v1000);
    swift_bridgeObjectRelease();
    v1844[0] = v1001;
    sub_24D98EEC4(0x1000000000, v953 & 1);
    sub_24D98EEC4(0x2000000000, v975 & 1);
    uint64_t v1002 = v1839;
    *(void *)&long long v1845 = v1839;
    v1003 = v1836;
    *((void *)&v1845 + 1) = v1836;
    uint64_t v1004 = v1838;
    *(void *)&long long v1846 = v1838;
    uint64_t v1005 = v1832;
    *((void *)&v1846 + 1) = v1832;
    uint64_t ChildrenMetadata = type metadata accessor for Ingestion.FetchChildrenMetadata();
    uint64_t v1007 = sub_24D7C043C(ChildrenMetadata);
    v1815 = (uint64_t *)v1844[0];
    uint64_t v1009 = sub_24DC09748((uint64_t)v1819, v1007, v1008, v1844[0], (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
    v1010 = v1831;
    sub_24D85246C((uint64_t)v1831, v1009);
    swift_release();
    *(void *)&long long v1845 = v1002;
    v790 = (void (*)(char *))v1819;
    *((void *)&v1845 + 1) = v1003;
    *(void *)&long long v1846 = v1004;
    *((void *)&v1846 + 1) = v1005;
    uint64_t v1011 = type metadata accessor for Ingestion.ReSnapshotChildren();
    uint64_t v1012 = sub_24D7C043C(v1011);
    uint64_t v1014 = sub_24DC0966C((uint64_t)v790, v1012, v1013, (uint64_t)v1815, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.ReSnapshotChildren);
    sub_24D85246C((uint64_t)v1010, v1014);
    swift_release();
    goto LABEL_349;
  }
  uint64_t v1020 = v1801;
  ((void (*)(char *, char *, uint64_t))v1822)(v842, (char *)v1798, v1801);
  uint64_t v1021 = (uint64_t)v1805;
  if (v1818((uint64_t)v842, 1, (uint64_t)v1805) == 1)
  {
    (*(void (**)(char *, uint64_t))(v1800 + 8))(v842, v1020);
    uint64_t v1015 = v1020;
    goto LABEL_379;
  }
  v1058 = v1719;
  (*(void (**)(char *, char *, uint64_t))(v1802 + 32))(v1719, v842, v1021);
  if (sub_24DB86F3C(v1021) && sub_24D3F0CDC(*(void *)&v1058[v1788[9]]))
  {
    if (!sub_24D3F0CDC(*(void *)&v1058[v1805[13] + v1745[9]])) {
      goto LABEL_420;
    }
    if (v953)
    {
      char v1059 = sub_24D98BCC4((uint64_t)v1837, v1817);
      if (sub_24D3F6A28(v1059) && !sub_24D3F0D84(v1819[v1837[12] + v1797[21]], 0))
      {
        uint64_t v1060 = v1830;
        uint64_t v1061 = swift_getAssociatedConformanceWitness();
        uint64_t v1062 = v1934;
        *(void *)&long long v1845 = v1934;
        *((void *)&v1845 + 1) = v1060;
        *(void *)&long long v1846 = v1816;
        *((void *)&v1846 + 1) = v1061;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v1063 = swift_getTupleTypeMetadata2();
        uint64_t v1064 = (uint64_t)v1824;
        v1065 = &v1824[*(int *)(v1063 + 48)];
        (*(void (**)(char *, char *, uint64_t))(v1835 + 16))(v1824, v1819, v1062);
        uint64_t v1066 = swift_storeEnumTagMultiPayload();
        uint64_t v1067 = sub_24D7C043C(v1066);
        *(void *)v1065 = 0x10000;
        *((void *)v1065 + 1) = v1067;
        *((void *)v1065 + 2) = v1068;
        swift_storeEnumTagMultiPayload();
        uint64_t v1069 = v1825;
        swift_storeEnumTagMultiPayload();
        sub_24D907568((uint64_t)v1831, v1064);
        (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1064, v1069);
      }
    }
    if ((v975 & 1) != 0
      && (v1819[v1837[12] + v1797[20]] & 1) == 0
      && (char v1070 = sub_24D98BCC4((uint64_t)v1837, v1817), sub_24DA2530C(v1070)))
    {
      uint64_t v1071 = v1830;
      uint64_t v1072 = swift_getAssociatedConformanceWitness();
      uint64_t v1073 = v1934;
      *(void *)&long long v1845 = v1934;
      *((void *)&v1845 + 1) = v1071;
      *(void *)&long long v1846 = v1816;
      *((void *)&v1846 + 1) = v1072;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v1074 = swift_getTupleTypeMetadata2();
      uint64_t v1075 = (uint64_t)v1824;
      v1076 = &v1824[*(int *)(v1074 + 48)];
      v790 = (void (*)(char *))v1819;
      (*(void (**)(char *, char *, uint64_t))(v1835 + 16))(v1824, v1819, v1073);
      uint64_t v1077 = swift_storeEnumTagMultiPayload();
      uint64_t v1078 = sub_24D7C043C(v1077);
      *(void *)v1076 = 8;
      *((void *)v1076 + 1) = v1078;
      *((void *)v1076 + 2) = v1079;
      swift_storeEnumTagMultiPayload();
      uint64_t v1080 = v1825;
      swift_storeEnumTagMultiPayload();
      sub_24D907568((uint64_t)v1831, v1075);
      (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1075, v1080);
      (*(void (**)(char *, int *))(v1802 + 8))(v1719, v1805);
LABEL_349:
      uint64_t v1015 = v1801;
      uint64_t v835 = v1784;
    }
    else
    {
LABEL_420:
      (*(void (**)(char *, int *))(v1802 + 8))(v1719, v1805);
      uint64_t v1015 = v1801;
      uint64_t v835 = v1784;
      v790 = (void (*)(char *))v1819;
    }
  }
  else
  {
    (*(void (**)(char *, int *))(v1802 + 8))(v1058, v1805);
    uint64_t v1015 = v1801;
LABEL_379:
    uint64_t v835 = v1784;
  }
LABEL_351:
  BOOL v1016 = sub_24D3F0C10(1, v835);
  v1017 = v1822;
  LODWORD(v1814) = v1016;
  if (v1016 && !sub_24D8903D0())
  {
    v1018 = v1742;
    ((void (*)(char *, char *, uint64_t))v1017)(v1742, (char *)v1798, v1015);
    uint64_t v1019 = (uint64_t)v1805;
    if (v1818((uint64_t)v1018, 1, (uint64_t)v1805) == 1)
    {
      (*(void (**)(char *, uint64_t))(v1800 + 8))(v1018, v1015);
    }
    else
    {
      uint64_t v1022 = v1019;
      BOOL v1023 = sub_24DB86F3C(v1019);
      uint64_t v1024 = v1022;
      v1017 = v1822;
      (*(void (**)(char *, uint64_t))(v1802 + 8))(v1018, v1024);
      if (!v1023)
      {
        uint64_t v1025 = v1830;
        uint64_t v1026 = swift_getAssociatedConformanceWitness();
        uint64_t v1027 = v1934;
        *(void *)&long long v1845 = v1934;
        *((void *)&v1845 + 1) = v1025;
        *(void *)&long long v1846 = v1816;
        *((void *)&v1846 + 1) = v1026;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v1028 = swift_getTupleTypeMetadata2();
        uint64_t v1029 = (uint64_t)v1824;
        v1030 = &v1824[*(int *)(v1028 + 48)];
        uint64_t v1031 = v1027;
        uint64_t v1015 = v1801;
        (*(void (**)(char *, void (*)(char *), uint64_t))(v1835 + 16))(v1824, v790, v1031);
        swift_storeEnumTagMultiPayload();
        *(_WORD *)v1030 = 515;
        uint64_t v1032 = v1808;
        *((void *)v1030 + 1) = v1807;
        *((void *)v1030 + 2) = v1032;
        swift_storeEnumTagMultiPayload();
        uint64_t v1033 = v1825;
        swift_storeEnumTagMultiPayload();
        sub_24D907568((uint64_t)v1831, v1029);
        uint64_t v1034 = v1033;
        v1017 = v1822;
        (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1029, v1034);
      }
    }
  }
  if (sub_24D3F0C10(8, v1862))
  {
    v1035 = v1750;
    ((void (*)(char *, char *, uint64_t))v1017)(v1750, (char *)v1798, v1015);
    uint64_t v1036 = (uint64_t)v1805;
    if (v1818((uint64_t)v1035, 1, (uint64_t)v1805) == 1)
    {
      (*(void (**)(char *, uint64_t))(v1800 + 8))(v1035, v1015);
    }
    else
    {
      v1037 = v1782;
      v1038 = v1781;
      v1039 = v1788;
      v1782[2](v1781, v1035, v1788);
      v1040 = *(void (**)(char *, uint64_t))(v1802 + 8);
      v1040(v1035, v1036);
      int v1041 = v1038[v1039[11]];
      v1042 = v1039;
      v1017 = v1822;
      ((void (*)(char *, int *))v1037[1])(v1038, v1042);
      if (v1041 != 3 && sub_24D3F0D84(v1041, 1))
      {
        uint64_t v1043 = v1830;
        uint64_t v1044 = swift_getAssociatedConformanceWitness();
        uint64_t v1045 = v1934;
        *(void *)&long long v1845 = v1934;
        *((void *)&v1845 + 1) = v1043;
        *(void *)&long long v1846 = v1816;
        *((void *)&v1846 + 1) = v1044;
        v1046 = (uint64_t *)type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v1047 = swift_getTupleTypeMetadata2();
        uint64_t v1048 = (uint64_t)v1824;
        v1049 = &v1824[*(int *)(v1047 + 48)];
        v1050 = *(char **)(v1835 + 16);
        uint64_t v1813 = v1835 + 16;
        v1812 = v1050;
        ((void (*)(char *, char *, uint64_t))v1050)(v1824, v1819, v1045);
        v1815 = v1046;
        swift_storeEnumTagMultiPayload();
        *(_WORD *)v1049 = 769;
        uint64_t v1051 = v1808;
        *((void *)v1049 + 1) = v1807;
        *((void *)v1049 + 2) = v1051;
        swift_storeEnumTagMultiPayload();
        uint64_t v1052 = v1825;
        swift_storeEnumTagMultiPayload();
        sub_24D907568((uint64_t)v1831, v1048);
        v1053 = *(void (**)(uint64_t, uint64_t))(v1829 + 8);
        uint64_t v1054 = v1052;
        uint64_t v1055 = v1801;
        v1053(v1048, v1054);
        v1017 = v1822;
        char v1056 = sub_24D98BCC4((uint64_t)v1837, v1817);
        if (sub_24D5F0188(v1056, 0))
        {
          v1057 = v1694;
          ((void (*)(char *, char *, uint64_t))v1017)(v1694, (char *)v1798, v1055);
          if (v1818((uint64_t)v1057, 1, (uint64_t)v1805) == 1)
          {
            (*(void (**)(char *, uint64_t))(v1800 + 8))(v1057, v1055);
          }
          else
          {
            v1081 = v1057;
            uint64_t v1082 = *(void *)&v1057[v1805[19]];
            ((void (*)(char *))v1040)(v1081);
            if (!sub_24D3F0C10(1, v1082))
            {
              sub_24D3F0BA0(v1821 + v1837[13], (uint64_t)v1844, &qword_26B197970);
              sub_24D3F0BA0((uint64_t)v1844, (uint64_t)&v1845, &qword_26B197970);
              if (sub_24D3F0D40((uint64_t)&v1845) != 1)
              {
                long long v1929 = v1857;
                long long v1930 = v1858;
                long long v1931 = v1859;
                long long v1925 = v1853;
                long long v1926 = v1854;
                long long v1927 = v1855;
                long long v1928 = v1856;
                long long v1921 = v1849;
                long long v1922 = v1850;
                long long v1923 = v1851;
                long long v1924 = v1852;
                long long v1917 = v1845;
                long long v1918 = v1846;
                long long v1919 = v1847;
                uint64_t v1932 = v1860;
                long long v1920 = v1848;
                v1083 = *(uint64_t (**)(uint64_t))(*v1841 + 520);
                sub_24D3F0BA0((uint64_t)v1844, (uint64_t)v1843, &qword_26B197970);
                uint64_t v1084 = sub_24D3FBB70((uint64_t)v1843);
                char v1085 = v1083(v1084);
                uint64_t v1086 = sub_24D3FBC64(v1085 & 1, 0, 0);
                sub_24D7334DC(v1844, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
                if (sub_24D5EFCA4(v1086, 501))
                {
                  uint64_t v1087 = swift_getTupleTypeMetadata3();
                  uint64_t v1088 = *(int *)(v1087 + 48);
                  uint64_t v1089 = *(int *)(v1087 + 64);
                  uint64_t v1090 = (uint64_t)v1824;
                  ((void (*)(char *, char *, uint64_t))v1812)(v1824, v1819, v1934);
                  swift_storeEnumTagMultiPayload();
                  *(void *)(v1090 + v1088) = 1;
                  uint64_t v1091 = sub_24D6B1FA8(0);
                  uint64_t v1092 = sub_24D3F0DF4(v1091);
                  swift_bridgeObjectRelease();
                  *(void *)(v1090 + v1089) = v1092;
                  uint64_t v1093 = v1825;
                  swift_storeEnumTagMultiPayload();
                  sub_24D907568((uint64_t)v1831, v1090);
                  v1053(v1090, v1093);
                }
              }
              v1017 = v1822;
            }
          }
        }
      }
    }
  }
  if (v1827)
  {
    uint64_t v1094 = (uint64_t)v1824;
    goto LABEL_387;
  }
  v1097 = v1837;
  uint64_t v860 = v1817;
  char v1098 = sub_24D98BCC4((uint64_t)v1837, v1817);
  BOOL v1099 = sub_24D5F0188(v1098, 0);
  uint64_t v1094 = (uint64_t)v1824;
  v1095 = v1767;
  v1096 = v1760;
  if (!v1099 || !sub_24D3F0C10(8, v1862))
  {
LABEL_392:
    v1017 = v1822;
    goto LABEL_393;
  }
  v1100 = *(void (**)(char *, int *, uint64_t))(*v1796[2] + 512);
  swift_retain();
  v1101 = v1721;
  v1100(v1819, v1097, v860);
  v1102 = v1101;
  swift_release();
  v1815 = *(uint64_t **)(v1835 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v1815)(v1101, 1, v1934) == 1)
  {
    (*(void (**)(char *, uint64_t))(v1774 + 8))(v1101, v1775);
    uint64_t v1094 = (uint64_t)v1824;
    goto LABEL_392;
  }
  uint64_t v1147 = v1835;
  v1148 = *(char **)(v1835 + 32);
  v1149 = v1727;
  uint64_t v1150 = v1934;
  v1812 = (char *)(v1835 + 32);
  v1806 = v1148;
  ((void (*)(char *, char *, uint64_t))v1148)(v1727, v1102, v1934);
  v1151 = *(void (**)(uint64_t, int *, uint64_t))(*v1796[2] + 512);
  swift_retain();
  uint64_t v1817 = v860;
  v1151(v1821, v1837, v860);
  swift_release();
  v1152 = v1720;
  (*(void (**)(char *, char *, uint64_t))(v1147 + 16))(v1720, v1149, v1150);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1147 + 56))(v1152, 0, 1, v1150);
  v1153 = v1725;
  v1154 = (uint8_t *)&v1725[*(int *)(TupleTypeMetadata2 + 48)];
  v1155 = *(void (**)(char *, char *, uint64_t))(v1774 + 16);
  uint64_t v1156 = v1775;
  v1155(v1725, v1731, v1775);
  uint64_t v1813 = (uint64_t)v1154;
  v1155((char *)v1154, v1152, v1156);
  v1157 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v1815;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v1815)(v1153, 1, v1150) != 1)
  {
    v1155(v1706, v1725, v1156);
    if (v1157(v1813, 1, v1150) != 1)
    {
      v1158 = v1795;
      uint64_t v1159 = v1934;
      ((void (*)(char *, uint64_t, uint64_t))v1806)(v1795, v1813, v1934);
      v1160 = v1706;
      char v1161 = sub_24DCC9798();
      v1162 = *(void (**)(char *, uint64_t))(v1835 + 8);
      v1162(v1158, v1159);
      v1163 = *(void (**)(char *, uint64_t))(v1774 + 8);
      uint64_t v1164 = v1775;
      v1163(v1720, v1775);
      v1162(v1160, v1159);
      v1812 = (char *)v1163;
      v1163(v1725, v1164);
      if (v1161) {
        goto LABEL_431;
      }
      goto LABEL_422;
    }
    v1812 = *(char **)(v1774 + 8);
    ((void (*)(char *, uint64_t))v1812)(v1720, v1775);
    (*(void (**)(char *, uint64_t))(v1835 + 8))(v1706, v1934);
LABEL_419:
    (*(void (**)(char *, uint64_t))(v1691 + 8))(v1725, TupleTypeMetadata2);
LABEL_422:
    uint64_t v1165 = v1839;
    *(void *)&long long v1845 = v1839;
    v1166 = v1836;
    *((void *)&v1845 + 1) = v1836;
    uint64_t v1167 = v1838;
    *(void *)&long long v1846 = v1838;
    uint64_t v1168 = v1832;
    *((void *)&v1846 + 1) = v1832;
    uint64_t v1169 = type metadata accessor for ItemJob();
    uint64_t v1170 = swift_getMetatypeMetadata();
    sub_24DA604B8(v1170, v1170);
    swift_allocObject();
    uint64_t v1171 = sub_24DCC9C58();
    *(void *)&long long v1845 = v1165;
    *((void *)&v1845 + 1) = v1166;
    *(void *)&long long v1846 = v1167;
    *((void *)&v1846 + 1) = v1168;
    uint64_t *v1172 = type metadata accessor for Ingestion.TrackTemporaryItem();
    uint64_t v1173 = sub_24D785484(v1171);
    BOOL v1174 = v1663;
    v1175 = ItemMetadata;
    uint64_t v1176 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v1663 + 272))(v1727, v1173);
    uint64_t ItemMetadata = v1175;
    if (!v1175)
    {
      uint64_t v1177 = v1176;
      swift_bridgeObjectRelease();
      if (MEMORY[0x253327DC0](v1177, v1169))
      {
        uint64_t v1178 = 0;
        do
        {
          v1179 = sub_24D4A445C(&v1845, v1178, v1177, v1169);
          uint64_t v1181 = *v1180;
          swift_retain();
          ((void (*)(long long *, void))v1179)(&v1845, 0);
          uint64_t v1182 = v1178 + 1;
          if (__OFADD__(v1178, 1))
          {
            __break(1u);
            goto LABEL_698;
          }
          if (*(unsigned __int8 *)(v1181 + 112) <= 1u)
          {
            v1166 = (void (*)(uint64_t, uint64_t))sub_24D983A48();
            swift_retain();
            BOOL v1174 = (char)v1826;
            sub_24D85246C((uint64_t)v1831, (uint64_t)v1166);
            swift_release();
          }
          swift_release();
          ++v1178;
        }
        while (v1182 != MEMORY[0x253327DC0](v1177, v1169));
      }
      swift_bridgeObjectRelease();
      goto LABEL_431;
    }
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v1812)(v1731, v1775);
    (*(void (**)(char *, uint64_t))(v1835 + 8))(v1727, v1934);
    goto LABEL_444;
  }
  v1812 = *(char **)(v1774 + 8);
  ((void (*)(char *, uint64_t))v1812)(v1720, v1156);
  if (v1157(v1813, 1, v1150) != 1) {
    goto LABEL_419;
  }
  ((void (*)(char *, uint64_t))v1812)(v1725, v1775);
LABEL_431:
  ((void (*)(char *, uint64_t))v1812)(v1731, v1775);
  (*(void (**)(char *, uint64_t))(v1835 + 8))(v1727, v1934);
  uint64_t v1094 = (uint64_t)v1824;
  v1017 = v1822;
LABEL_387:
  uint64_t v860 = v1817;
  v1095 = v1767;
  v1096 = v1760;
LABEL_393:
  BOOL v1103 = sub_24D3F0CDC(v1862);
  uint64_t v1104 = v1801;
  ((void (*)(char *, char *, uint64_t))v1017)(v1095, (char *)v1798, v1801);
  if (v1103)
  {
    ((void (*)(char *, char *, uint64_t))v1017)(v1096, v1095, v1104);
    uint64_t v1105 = (uint64_t)v1805;
    if (v1818((uint64_t)v1096, 1, (uint64_t)v1805) == 1)
    {
      v1106 = *(void (**)(char *, uint64_t))(v1800 + 8);
      v1106(v1095, v1104);
      v1106(v1096, v1104);
LABEL_402:
      uint64_t v1132 = v1830;
      uint64_t v1133 = swift_getAssociatedConformanceWitness();
      uint64_t v321 = (unsigned char *)v1934;
      *(void *)&long long v1845 = v1934;
      *((void *)&v1845 + 1) = v1132;
      uint64_t v1134 = v1816;
      *(void *)&long long v1846 = v1816;
      *((void *)&v1846 + 1) = v1133;
      type metadata accessor for ReconciliationID();
      v1135 = (unint64_t *)(v1094 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      (*(void (**)(uint64_t, char *, unsigned char *))(v1835 + 16))(v1094, v1819, v321);
      swift_storeEnumTagMultiPayload();
      uint64_t v1136 = v1808;
      unint64_t *v1135 = v1807;
      v1135[1] = v1136;
      uint64_t v1137 = v1825;
      swift_storeEnumTagMultiPayload();
      sub_24D907568((uint64_t)v1831, v1094);
      (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1094, v1137);
      v331 = v1803;
      v371 = v1797;
      unsigned int v1138 = v1827;
      goto LABEL_589;
    }
    uint64_t v1126 = v860;
    v1127 = v1782;
    v1128 = v1781;
    v1129 = v1788;
    v1782[2](v1781, v1096, v1788);
    (*(void (**)(char *, uint64_t))(v1802 + 8))(v1096, v1105);
    uint64_t v1130 = *(void *)&v1128[v1129[9]];
    v1131 = v1127;
    uint64_t v860 = v1126;
    ((void (*)(char *, int *))v1131[1])(v1128, v1129);
    LOBYTE(v1130) = sub_24D3F0CDC(v1130);
    v1815 = *(uint64_t **)(v1800 + 8);
    ((void (*)(char *, uint64_t))v1815)(v1767, v1104);
    if (v1130) {
      goto LABEL_402;
    }
  }
  else
  {
    v1815 = *(uint64_t **)(v1800 + 8);
    ((void (*)(char *, uint64_t))v1815)(v1095, v1104);
  }
  uint64_t v1107 = v1816;
  v1108 = v1819;
  uint64_t v1109 = v1934;
  char v1110 = (*(uint64_t (**)(uint64_t, uint64_t))(v1816 + 64))(v1934, v1816);
  uint64_t v1817 = v860;
  if (v1110 & 1) != 0 || ((*(uint64_t (**)(uint64_t, uint64_t))(v1107 + 72))(v1109, v1107))
  {
    uint64_t v1111 = v1862;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1941B0);
    uint64_t v1112 = swift_allocObject();
    uint64_t v1113 = sub_24D719BBC(v1112, 3);
    *(_OWORD *)uint64_t v1114 = xmmword_24DCDB200;
    *(void *)(v1114 + 16) = 256;
    uint64_t v1115 = nullsub_1(v1113);
    uint64_t v1116 = sub_24D3F0DF4(v1115);
    swift_bridgeObjectRelease();
    uint64_t v1117 = sub_24DA25C84(v1116, v1111);
    if (!sub_24D3F0CDC(v1117))
    {
      uint64_t v1118 = v1830;
      uint64_t v1119 = swift_getAssociatedConformanceWitness();
      *(void *)&long long v1845 = v1109;
      *((void *)&v1845 + 1) = v1118;
      *(void *)&long long v1846 = v1816;
      *((void *)&v1846 + 1) = v1119;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v1120 = swift_getTupleTypeMetadata2();
      uint64_t v1121 = (uint64_t)v1824;
      v1122 = v1108;
      v1123 = (uint64_t *)&v1824[*(int *)(v1120 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v1835 + 16))(v1824, v1122, v1109);
      swift_storeEnumTagMultiPayload();
      unint64_t v1124 = v1807;
      uint64_t *v1123 = v1117;
      v1123[1] = v1124;
      v1123[2] = v1808;
      swift_storeEnumTagMultiPayload();
      uint64_t v1125 = v1825;
      swift_storeEnumTagMultiPayload();
      sub_24D907568((uint64_t)v1831, v1121);
      (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1121, v1125);
      goto LABEL_524;
    }
    goto LABEL_523;
  }
  uint64_t v1139 = v1862;
  unint64_t v1861 = v1862;
  if (sub_24D3F0C10(0x200000000000, v1862) && !sub_24D3F0C10(8, v1139)) {
    sub_24D3F0CB8(0x200000000000);
  }
  if (sub_24D3F0C10(16, v1139) && (sub_24D98BC10((uint64_t)v1837, v860) & 1) != 0)
  {
    uint64_t v1140 = v860;
    unsigned __int8 v1141 = sub_24D98BCC4((uint64_t)v1837, v860);
    if (sub_24DA25360(v1141) && ((*(uint64_t (**)(void))(*v1841 + 528))() & 1) != 0)
    {
      *(void *)&long long v1845 = v1839;
      *((void *)&v1845 + 1) = v1836;
      *(void *)&long long v1846 = v1838;
      *((void *)&v1846 + 1) = v1832;
      uint64_t v1142 = type metadata accessor for RemoteVersion.CleanRemoteVersions();
      uint64_t v1143 = sub_24D7C043C(v1142);
      uint64_t v1145 = sub_24D732E08((uint64_t)v1819, v1143, v1144, 2);
      sub_24D85246C((uint64_t)v1831, v1145);
      swift_release();
    }
    if (sub_24D3F0C10(8, v1139))
    {
      v1146 = v1700;
      ((void (*)(char *, char *, uint64_t))v1822)(v1700, (char *)v1798, v1801);
      if (v1818((uint64_t)v1146, 1, (uint64_t)v1805) == 1)
      {
        ((void (*)(char *, uint64_t))v1815)(v1700, v1801);
      }
      else
      {
        uint64_t v1183 = (uint64_t)v1805;
        v1184 = v1700;
        BOOL v1185 = sub_24DB86F3C((uint64_t)v1805);
        (*(void (**)(char *, uint64_t))(v1802 + 8))(v1184, v1183);
        v1186 = v1819;
        if (v1185)
        {
          uint64_t v1187 = v1830;
          uint64_t v1188 = swift_getAssociatedConformanceWitness();
          uint64_t v1189 = v1934;
          *(void *)&long long v1845 = v1934;
          *((void *)&v1845 + 1) = v1187;
          *(void *)&long long v1846 = v1816;
          *((void *)&v1846 + 1) = v1188;
          type metadata accessor for ReconciliationID();
          type metadata accessor for ReconciliationSideMutation();
          uint64_t v1190 = swift_getTupleTypeMetadata2();
          uint64_t v1191 = (uint64_t)v1824;
          v1192 = &v1824[*(int *)(v1190 + 48)];
          (*(void (**)(char *, char *, uint64_t))(v1835 + 16))(v1824, v1186, v1189);
          swift_storeEnumTagMultiPayload();
          v1193 = v1744;
          uint64_t v1194 = swift_getTupleTypeMetadata3();
          uint64_t v1195 = *(int *)(v1194 + 48);
          uint64_t v1196 = *(int *)(v1194 + 64);
          (*(void (**)(char *, char *, int *))(*((void *)v1193 - 1) + 16))(v1192, &v1186[v1837[10]], v1193);
          v1192[v1195] = 1;
          v1192[v1196] = 0;
          swift_storeEnumTagMultiPayload();
          uint64_t v1197 = v1825;
          swift_storeEnumTagMultiPayload();
          sub_24D907568((uint64_t)v1831, v1191);
          (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1191, v1197);
        }
      }
    }
    sub_24D3F0CB8(8);
    uint64_t v860 = v1140;
  }
  if (sub_24D3F0C10(8, v1862))
  {
    uint64_t v1198 = v1837[10];
    v1199 = (uint8_t *)&v1819[v1198];
    uint64_t v610 = v1744[13];
    if (*(void *)&v1819[v1198 + v610])
    {
      *(void *)&long long v1845 = *(void *)&v1819[v1198 + v610];
      sub_24DCC9D48();
      swift_getWitnessTable();
      if (sub_24DCC9B18())
      {
        uint64_t v1813 = (uint64_t)v1199;
        v1200 = v1709;
        ((void (*)(char *, char *, uint64_t))v1822)(v1709, (char *)v1798, v1801);
        if (v1818((uint64_t)v1200, 1, (uint64_t)v1805) == 1)
        {
          ((void (*)(char *, uint64_t))v1815)(v1709, v1801);
          goto LABEL_450;
        }
        v1201 = v1782;
        v1202 = v1678;
        v1203 = v1709;
        v1204 = v1788;
        v1782[2](v1678, v1709, v1788);
        (*(void (**)(char *, int *))(v1802 + 8))(v1203, v1805);
        v1205 = v1692;
        (*(void (**)(char *, char *, uint64_t))(v1696 + 16))(v1692, &v1202[v1204[12]], v1697);
        ((void (*)(char *, int *))v1201[1])(v1202, v1204);
        v1812 = (char *)*((void *)v1744 - 1);
        if ((*((unsigned int (**)(char *, uint64_t))v1812 + 6))(v1205, 1) == 1)
        {
          (*(void (**)(char *, uint64_t))(v1696 + 8))(v1692, v1697);
          goto LABEL_450;
        }
LABEL_446:
        uint64_t v1208 = v1680;
        v1209 = v1677;
        v1210 = v1692;
        uint64_t v1211 = v1712;
        (*(void (**)(char *, char *, uint64_t))(v1680 + 16))(v1677, v1692, v1712);
        (*((void (**)(char *, int *))v1812 + 1))(v1210, v1744);
        (*(void (**)(char *, char *, uint64_t))(v1208 + 32))(v1683, v1209, v1211);
        if (*(void *)(v1813 + v610))
        {
          *(void *)&long long v1845 = *(void *)(v1813 + v610);
          if (sub_24DCC9B18())
          {
            uint64_t v1212 = v1830;
            uint64_t v1213 = swift_getAssociatedConformanceWitness();
            uint64_t v1214 = v1934;
            *(void *)&long long v1845 = v1934;
            *((void *)&v1845 + 1) = v1212;
            *(void *)&long long v1846 = v1816;
            *((void *)&v1846 + 1) = v1213;
            type metadata accessor for ReconciliationID();
            type metadata accessor for ReconciliationSideMutation();
            uint64_t v1215 = swift_getTupleTypeMetadata2();
            uint64_t v1216 = (uint64_t)v1824;
            v1217 = &v1824[*(int *)(v1215 + 48)];
            (*(void (**)(char *, char *, uint64_t))(v1835 + 16))(v1824, v1819, v1214);
            swift_storeEnumTagMultiPayload();
            v1218 = v1744;
            uint64_t v1219 = swift_getTupleTypeMetadata3();
            uint64_t v1220 = *(int *)(v1219 + 48);
            uint64_t v1221 = *(int *)(v1219 + 64);
            (*((void (**)(char *, uint64_t, int *))v1812 + 2))(v1217, v1813, v1218);
            v1217[v1220] = 1;
            v1217[v1221] = 0;
            swift_storeEnumTagMultiPayload();
            uint64_t v1222 = v1825;
            swift_storeEnumTagMultiPayload();
            sub_24D907568((uint64_t)v1831, v1216);
            (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1216, v1222);
          }
        }
        (*(void (**)(char *, uint64_t))(v1680 + 8))(v1683, v1712);
LABEL_450:
        sub_24D3F0CB8(8);
        uint64_t v860 = v1817;
      }
    }
  }
  if (sub_24D3F0C10(0x20000000000, v1862))
  {
    uint64_t v1223 = v1837[10];
    v1224 = (uint8_t *)&v1819[v1223];
    uint64_t v1225 = v1744[15];
    if (*(void *)&v1819[v1223 + v1225])
    {
      *(void *)&long long v1845 = *(void *)&v1819[v1223 + v1225];
      sub_24DCC9D48();
      swift_getWitnessTable();
      if (sub_24DCC9B18())
      {
        uint64_t v1813 = (uint64_t)v1224;
        v1226 = v1710;
        ((void (*)(char *, char *, uint64_t))v1822)(v1710, (char *)v1798, v1801);
        if (v1818((uint64_t)v1226, 1, (uint64_t)v1805) == 1)
        {
          ((void (*)(char *, uint64_t))v1815)(v1710, v1801);
        }
        else
        {
          v1227 = v1782;
          v1228 = v1679;
          v1229 = v1710;
          v1230 = v1788;
          v1782[2](v1679, v1710, v1788);
          (*(void (**)(char *, int *))(v1802 + 8))(v1229, v1805);
          v1231 = v1693;
          (*(void (**)(char *, char *, uint64_t))(v1696 + 16))(v1693, &v1228[v1230[12]], v1697);
          ((void (*)(char *, int *))v1227[1])(v1228, v1230);
          v1812 = (char *)*((void *)v1744 - 1);
          if ((*((unsigned int (**)(char *, uint64_t))v1812 + 6))(v1231, 1) == 1)
          {
            (*(void (**)(char *, uint64_t))(v1696 + 8))(v1693, v1697);
          }
          else
          {
            v1232 = v1744;
            v1233 = v1693;
            uint64_t v1234 = v1682;
            uint64_t v1235 = v1713;
            (*(void (**)(char *, char *, uint64_t))(v1682 + 16))(v1681, &v1693[v1744[14]], v1713);
            (*((void (**)(char *, int *))v1812 + 1))(v1233, v1232);
            (*(void (**)(char *, char *, uint64_t))(v1234 + 32))(v1684, v1681, v1235);
            if (*(void *)(v1813 + v1225))
            {
              *(void *)&long long v1845 = *(void *)(v1813 + v1225);
              if (sub_24DCC9B18())
              {
                uint64_t v1236 = v1830;
                uint64_t v1237 = swift_getAssociatedConformanceWitness();
                uint64_t v1238 = v1934;
                *(void *)&long long v1845 = v1934;
                *((void *)&v1845 + 1) = v1236;
                *(void *)&long long v1846 = v1816;
                *((void *)&v1846 + 1) = v1237;
                type metadata accessor for ReconciliationID();
                type metadata accessor for ReconciliationSideMutation();
                uint64_t v1239 = swift_getTupleTypeMetadata2();
                uint64_t v1240 = (uint64_t)v1824;
                v1241 = &v1824[*(int *)(v1239 + 48)];
                (*(void (**)(char *, char *, uint64_t))(v1835 + 16))(v1824, v1819, v1238);
                swift_storeEnumTagMultiPayload();
                v1242 = v1744;
                uint64_t v1243 = swift_getTupleTypeMetadata3();
                uint64_t v1244 = *(int *)(v1243 + 48);
                uint64_t v1245 = *(int *)(v1243 + 64);
                (*((void (**)(char *, uint64_t, int *))v1812 + 2))(v1241, v1813, v1242);
                v1241[v1244] = 0;
                v1241[v1245] = 1;
                swift_storeEnumTagMultiPayload();
                uint64_t v1246 = v1825;
                swift_storeEnumTagMultiPayload();
                sub_24D907568((uint64_t)v1831, v1240);
                (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1240, v1246);
              }
            }
            (*(void (**)(char *, uint64_t))(v1682 + 8))(v1684, v1713);
          }
        }
        sub_24D3F0CB8(0x20000000000);
        uint64_t v860 = v1817;
      }
    }
  }
  uint64_t v1247 = sub_24DA27C90(0x160000000010000, v1862);
  BOOL v1248 = sub_24D5EFCA4(v1247, 0x20000000000);
  uint64_t v1249 = v1801;
  v1250 = v1822;
  v1251 = v1734;
  if (v1248)
  {
    v1252 = v1718;
    ((void (*)(char *, char *, uint64_t))v1822)(v1718, (char *)v1798, v1801);
    uint64_t v1253 = (uint64_t)v1805;
    if (v1818((uint64_t)v1252, 1, (uint64_t)v1805) == 1)
    {
      ((void (*)(char *, uint64_t))v1815)(v1252, v1249);
    }
    else
    {
      uint64_t v1254 = v1802;
      v1255 = v1704;
      (*(void (**)(void))(v1802 + 32))();
      if (sub_24DB86F3C(v1253)
        && sub_24D82D8CC(0x160000000010000, *(void *)&v1255[v1788[10]])
        && !sub_24DC0F218(*(void *)&v1255[v1788[16]], *(void *)&v1255[v1788[16] + 8], v1255[v1788[16] + 16]))
      {
        v1256 = &v1255[v1805[13] + v1745[16]];
        if (!sub_24DC0F218(*(void *)v1256, *((void *)v1256 + 1), v1256[16]))
        {
          uint64_t v1257 = v1830;
          uint64_t v1258 = swift_getAssociatedConformanceWitness();
          uint64_t v1259 = v1934;
          *(void *)&long long v1845 = v1934;
          *((void *)&v1845 + 1) = v1257;
          *(void *)&long long v1846 = v1816;
          *((void *)&v1846 + 1) = v1258;
          type metadata accessor for ReconciliationID();
          type metadata accessor for ReconciliationSideMutation();
          uint64_t v1260 = swift_getTupleTypeMetadata2();
          uint64_t v1261 = (uint64_t)v1824;
          v1262 = &v1824[*(int *)(v1260 + 48)];
          v1263 = v1819;
          (*(void (**)(char *, char *, uint64_t))(v1835 + 16))(v1824, v1819, v1259);
          swift_storeEnumTagMultiPayload();
          v1264 = v1744;
          uint64_t v1265 = swift_getTupleTypeMetadata3();
          uint64_t v1266 = *(int *)(v1265 + 48);
          uint64_t v1813 = *(int *)(v1265 + 64);
          (*(void (**)(char *, char *, int *))(*((void *)v1264 - 1) + 16))(v1262, &v1263[v1837[10]], v1264);
          v1262[v1266] = 0;
          v1262[v1813] = 1;
          uint64_t v1249 = v1801;
          swift_storeEnumTagMultiPayload();
          uint64_t v1267 = v1825;
          swift_storeEnumTagMultiPayload();
          sub_24D907568((uint64_t)v1831, v1261);
          uint64_t v1268 = v1261;
          v1255 = v1704;
          uint64_t v1254 = v1802;
          uint64_t v1269 = v1267;
          v1250 = v1822;
          (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1268, v1269);
          sub_24D3F0CB8(0x20000000000);
        }
      }
      (*(void (**)(char *, int *))(v1254 + 8))(v1255, v1805);
    }
  }
  if (sub_24DBD5A48((uint64_t)v1796, (uint64_t)v1819, v1862))
  {
    sub_24D3F0CB8(0x10000);
    ((void (*)(char *, char *, uint64_t))v1250)(v1251, (char *)v1798, v1249);
    uint64_t v1270 = (uint64_t)v1805;
    if (v1818((uint64_t)v1251, 1, (uint64_t)v1805) == 1)
    {
      ((void (*)(char *, uint64_t))v1815)(v1251, v1249);
    }
    else
    {
      BOOL v1271 = sub_24DB86F3C(v1270);
      (*(void (**)(char *, uint64_t))(v1802 + 8))(v1251, v1270);
      if (v1271)
      {
        uint64_t v1272 = v1830;
        uint64_t v1273 = swift_getAssociatedConformanceWitness();
        uint64_t v1274 = v1934;
        *(void *)&long long v1845 = v1934;
        *((void *)&v1845 + 1) = v1272;
        *(void *)&long long v1846 = v1816;
        *((void *)&v1846 + 1) = v1273;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v1275 = swift_getTupleTypeMetadata2();
        uint64_t v1276 = (uint64_t)v1824;
        v1277 = &v1824[*(int *)(v1275 + 48)];
        (*(void (**)(char *, char *, uint64_t))(v1835 + 16))(v1824, v1819, v1274);
        swift_storeEnumTagMultiPayload();
        *(void *)v1277 = 0x10000;
        uint64_t v1278 = v1808;
        *((void *)v1277 + 1) = v1807;
        *((void *)v1277 + 2) = v1278;
        swift_storeEnumTagMultiPayload();
        uint64_t v1279 = v1825;
        swift_storeEnumTagMultiPayload();
        sub_24D907568((uint64_t)v1831, v1276);
        (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1276, v1279);
      }
    }
  }
  uint64_t v1280 = v1861;
  if (sub_24D3F0C10(0x2000000, v1861))
  {
    sub_24D3F0C88(&v1845, 0x100000D000000);
    uint64_t v1280 = v1861;
  }
  unint64_t v1281 = sub_24DA25B3C(v1280);
  unint64_t v1861 = v1281;
  uint64_t v1282 = sub_24DA27C90(0x100000000000, v1281);
  BOOL v1283 = sub_24D3F0CDC(v1282);
  uint64_t v1284 = v1934;
  if (!v1283
    || sub_24D3F0C10(0x100000000000, v1281) && v1819[v1837[12] + v1797[15]] != 1
    || sub_24D3F0C10(0x800000, v1862))
  {
    uint64_t v1285 = v1284;
    uint64_t v1286 = v860;
    uint64_t v1287 = v1830;
    uint64_t v1288 = swift_getAssociatedConformanceWitness();
    *(void *)&long long v1845 = v1285;
    *((void *)&v1845 + 1) = v1287;
    *(void *)&long long v1846 = v1816;
    *((void *)&v1846 + 1) = v1288;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v1289 = swift_getTupleTypeMetadata2();
    uint64_t v1290 = (uint64_t)v1824;
    v1291 = &v1824[*(int *)(v1289 + 48)];
    v1292 = v1819;
    (*(void (**)(char *, char *, uint64_t))(v1835 + 16))(v1824, v1819, v1285);
    swift_storeEnumTagMultiPayload();
    v1293 = &v1292[v1837[12]];
    uint64_t v1294 = v1797[16];
    char *v1291 = v1293[v1294];
    swift_storeEnumTagMultiPayload();
    uint64_t v1295 = v1825;
    swift_storeEnumTagMultiPayload();
    sub_24D907568((uint64_t)v1831, v1290);
    (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1290, v1295);
    v1296 = v1728;
    uint64_t v1297 = v1801;
    ((void (*)(char *, char *, uint64_t))v1822)(v1728, (char *)v1798, v1801);
    uint64_t v1298 = (uint64_t)v1805;
    if (v1818((uint64_t)v1296, 1, (uint64_t)v1805) == 1)
    {
      ((void (*)(char *, uint64_t))v1815)(v1296, v1297);
      BOOL v1299 = 0;
    }
    else
    {
      v1300 = v1782;
      v1301 = v1781;
      v1302 = v1296;
      v1303 = v1296;
      v1304 = v1788;
      v1782[2](v1781, v1302, v1788);
      (*(void (**)(char *, uint64_t))(v1802 + 8))(v1303, v1298);
      uint64_t v1305 = *(void *)&v1301[v1304[9]];
      ((void (*)(char *, int *))v1300[1])(v1301, v1304);
      BOOL v1299 = sub_24D3F0C04(16, v1305);
    }
    char v1306 = v1293[v1294];
    uint64_t v860 = v1286;
    char v1307 = sub_24D98BCC4((uint64_t)v1837, v1286);
    BOOL v1308 = sub_24D5F0188(v1307, 1);
    uint64_t v1284 = v1934;
    if (v1308 && v1299 && (v1306 & 1) == 0)
    {
      v1309 = v1795;
      (*(void (**)(uint64_t))(v1816 + 48))(v1934);
      char v1310 = sub_24DCC9798();
      v1311 = *(void (**)(char *, uint64_t))(v1835 + 8);
      v1311(v1309, v1284);
      if ((v1310 & 1) == 0)
      {
        v1312 = v1795;
        (*(void (**)(uint64_t))(v1816 + 56))(v1284);
        char v1313 = sub_24DCC9798();
        v1311(v1312, v1284);
        if ((v1313 & 1) == 0) {
          sub_24D3F0C88(&v1845, 0x100000000000);
        }
      }
    }
  }
  BOOL v1314 = sub_24D3F0C10(0x10000000000000, v1862);
  v1315 = v1837;
  if (v1314 && (v1819[v1837[12] + v1797[18]] & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1941B0);
    uint64_t v1316 = swift_allocObject();
    uint64_t v1317 = sub_24D719BBC(v1316, 3);
    *(_OWORD *)uint64_t v1318 = xmmword_24DCDE120;
    *(void *)(v1318 + 16) = 1;
    uint64_t v1319 = nullsub_1(v1317);
    uint64_t v1320 = sub_24D3F0DF4(v1319);
    swift_bridgeObjectRelease();
    uint64_t v1321 = v1320;
    v1315 = v1837;
    sub_24D3F0C88(&v1845, v1321);
  }
  v1322 = v1841;
  uint64_t v1810 = v1841[5];
  if (!sub_24D8903D0()) {
    goto LABEL_504;
  }
  unsigned __int8 v1323 = sub_24D98BCC4((uint64_t)v1315, v860);
  if (!sub_24DA25360(v1323)) {
    goto LABEL_504;
  }
  char v1324 = (*(uint64_t (**)(void))(*v1322 + 160))();
  if (!sub_24D5FC298(v1324 & 1, 0)) {
    goto LABEL_504;
  }
  if (!sub_24D3F0C10(0x4000000000000, v1862)) {
    goto LABEL_503;
  }
  v1325 = v1688;
  ((void (*)(char *, char *, uint64_t))v1822)(v1688, (char *)v1798, v1801);
  if (v1818((uint64_t)v1325, 1, (uint64_t)v1805) == 1)
  {
    ((void (*)(char *, uint64_t))v1815)(v1688, v1801);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1768 + 56))(v1689, 1, 1, v1830);
    goto LABEL_502;
  }
  uint64_t v1326 = (uint64_t)v1805;
  v1327 = v1688;
  uint64_t v1328 = v1738;
  v1329 = v1737;
  v1330 = v1745;
  (*(void (**)(char *, char *, int *))(v1738 + 16))(v1737, &v1688[v1805[13]], v1745);
  (*(void (**)(char *, uint64_t))(v1802 + 8))(v1327, v1326);
  v1331 = v1689;
  (*(void (**)(char *, char *, uint64_t))(v1766 + 16))(v1689, v1329, v1770);
  (*(void (**)(char *, int *))(v1328 + 8))(v1329, v1330);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1768 + 48))(v1331, 1, v1830) != 1)
  {
    v1596 = v1675;
    (*(void (**)(char *, char *, uint64_t))(v1768 + 32))(v1675, v1689, v1830);
    v1597 = ItemMetadata;
    (*(void (**)(char *, uint64_t))(*(void *)v1810 + 240))(v1596, 1);
    uint64_t ItemMetadata = v1597;
    if (!v1597) {
      goto LABEL_666;
    }
    (*(void (**)(char *, uint64_t))(v1768 + 8))(v1675, v1830);
LABEL_660:
    v967 = *(void (**)(uint64_t, int *))(v1834 + 8);
    v968 = v1837;
    v967(v1821, v1837);
    uint64_t v1601 = v1801;
    v1602 = (void (*)(uint64_t *, uint64_t))v1815;
    ((void (*)(char *, uint64_t))v1815)((char *)v1798, v1801);
    v1602(v1803, v1601);
    goto LABEL_661;
  }
LABEL_502:
  (*(void (**)(char *, uint64_t))(v1766 + 8))(v1689, v1770);
LABEL_503:
  v1315 = v1837;
  uint64_t v1284 = v1934;
LABEL_504:
  uint64_t v1332 = v1830;
  while (2)
  {
    if (sub_24D8903D0())
    {
      unsigned __int8 v1333 = sub_24D98BCC4((uint64_t)v1315, v860);
      if (sub_24DA25360(v1333) && sub_24D3F0C10(16, v1862))
      {
        if (sub_24D98BC10((uint64_t)v1315, v860)) {
          goto LABEL_519;
        }
        v1334 = v1686;
        ((void (*)(char *, char *, uint64_t))v1822)(v1686, (char *)v1798, v1801);
        if (v1818((uint64_t)v1334, 1, (uint64_t)v1805) == 1)
        {
          ((void (*)(char *, uint64_t))v1815)(v1686, v1801);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1768 + 56))(v1687, 1, 1, v1830);
          goto LABEL_518;
        }
        uint64_t v1352 = (uint64_t)v1805;
        v1353 = v1686;
        uint64_t v1354 = v1738;
        v1355 = v1737;
        v1356 = v1745;
        (*(void (**)(char *, char *, int *))(v1738 + 16))(v1737, &v1686[v1805[13]], v1745);
        (*(void (**)(char *, uint64_t))(v1802 + 8))(v1353, v1352);
        v1357 = v1687;
        (*(void (**)(char *, char *, uint64_t))(v1766 + 16))(v1687, v1355, v1770);
        (*(void (**)(char *, int *))(v1354 + 8))(v1355, v1356);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1768 + 48))(v1357, 1, v1830) == 1)
        {
LABEL_518:
          (*(void (**)(char *, uint64_t))(v1766 + 8))(v1687, v1770);
LABEL_519:
          uint64_t v1284 = v1934;
          uint64_t v1332 = v1830;
        }
        else
        {
          uint64_t v1599 = v1676;
          (*(void (**)(uint64_t, char *, uint64_t))(v1768 + 32))(v1676, v1687, v1830);
          v1600 = ItemMetadata;
          (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v1810 + 264))(v1863, v1599);
          uint64_t ItemMetadata = v1600;
          if (v1600)
          {
            (*(void (**)(uint64_t, uint64_t))(v1768 + 8))(v1676, v1830);
            goto LABEL_660;
          }
          sub_24D3F0BA0((uint64_t)v1863, (uint64_t)v1883, &qword_26B197970);
          if (sub_24D3F0D40((uint64_t)v1883) == 1) {
            goto LABEL_675;
          }
          long long v1897 = v1883[12];
          long long v1898 = v1883[13];
          long long v1899 = v1883[14];
          long long v1893 = v1883[8];
          long long v1894 = v1883[9];
          long long v1895 = v1883[10];
          long long v1896 = v1883[11];
          long long v1889 = v1883[4];
          long long v1890 = v1883[5];
          long long v1891 = v1883[6];
          long long v1892 = v1883[7];
          long long v1885 = v1883[0];
          long long v1886 = v1883[1];
          long long v1887 = v1883[2];
          uint64_t v1900 = v1884;
          long long v1888 = v1883[3];
          sub_24D3F0BA0((uint64_t)&v1899, (uint64_t)v1901, &qword_26B19A008);
          sub_24D4C6AE4((uint64_t)v1901);
          sub_24D7334DC(v1863, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
          sub_24D3F0BA0((uint64_t)v1901, (uint64_t)v1933, &qword_26B19A008);
          if (!v1933[0]
            || (BOOL v1611 = sub_24DA11BEC(v1933[0]), sub_24D4C6A78((uint64_t)v1901), v1611)
            || (char v1612 = v1819[v1837[12] + v1797[21]], sub_24D3F0D84(v1612, 3))
            || sub_24D3F0D84(v1612, 2))
          {
LABEL_675:
            uint64_t v1332 = v1830;
            (*(void (**)(uint64_t, uint64_t))(v1768 + 8))(v1676, v1830);
            uint64_t v1284 = v1934;
          }
          else
          {
            *(void *)&long long v1845 = v1836;
            *((void *)&v1845 + 1) = v1839;
            *(void *)&long long v1846 = v1832;
            *((void *)&v1846 + 1) = v1838;
            uint64_t v1653 = type metadata accessor for Conflict.PopulateConflicts();
            uint64_t v1654 = sub_24D7C043C(v1653);
            uint64_t v1655 = v1676;
            uint64_t v1657 = sub_24DC098B0(v1676, v1654, v1656, 1);
            sub_24D855694((uint64_t)v1831, v1657);
            swift_release();
            uint64_t v1332 = v1830;
            (*(void (**)(uint64_t, uint64_t))(v1768 + 8))(v1655, v1830);
            uint64_t v1284 = v1934;
          }
        }
      }
    }
    uint64_t v1335 = swift_getAssociatedConformanceWitness();
    *(void *)&long long v1845 = v1284;
    *((void *)&v1845 + 1) = v1332;
    *(void *)&long long v1846 = v1816;
    *((void *)&v1846 + 1) = v1335;
    v1336 = (uint8_t *)type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v1337 = swift_getTupleTypeMetadata2();
    uint64_t v1338 = (uint64_t)v1824;
    v1339 = (unint64_t *)&v1824[*(int *)(v1337 + 48)];
    v1340 = v1819;
    v1812 = *(char **)(v1835 + 16);
    ((void (*)(char *, char *, uint64_t))v1812)(v1824, v1819, v1284);
    uint64_t v1813 = (uint64_t)v1336;
    swift_storeEnumTagMultiPayload();
    unint64_t v1341 = sub_24DA25B3C(v1861);
    unint64_t v1342 = v1807;
    unint64_t *v1339 = v1341;
    v1339[1] = v1342;
    v1339[2] = v1808;
    swift_storeEnumTagMultiPayload();
    uint64_t v1343 = v1825;
    swift_storeEnumTagMultiPayload();
    sub_24D907568((uint64_t)v1831, v1338);
    uint64_t v1344 = v1343;
    v1345 = v1340;
    v1166 = *(void (**)(uint64_t, uint64_t))(v1829 + 8);
    v1166(v1338, v1344);
    char v1346 = sub_24D98BCC4((uint64_t)v1837, v1817);
    if (sub_24DA2530C(v1346) && sub_24D3F0C10(8, v1862))
    {
      uint64_t v1347 = (uint64_t)v1824;
      v1348 = &v1824[*(int *)(v1337 + 48)];
      ((void (*)(char *, char *, uint64_t))v1812)(v1824, v1345, v1934);
      swift_storeEnumTagMultiPayload();
      *(void *)v1348 = 0;
      *((void *)v1348 + 1) = 0;
      *((void *)v1348 + 2) = 0xB000000000000000;
      *(_OWORD *)(v1348 + 24) = 0u;
      *(_OWORD *)(v1348 + 40) = 0u;
      v1348[56] = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v1349 = v1825;
      swift_storeEnumTagMultiPayload();
      sub_24D907568((uint64_t)v1831, v1347);
      v1166(v1347, v1349);
      if (!sub_24D8903D0())
      {
        char v1350 = sub_24D98BCC4((uint64_t)v1837, v1817);
        if (sub_24DA25290(1, v1350))
        {
          v1351 = v1685;
          ((void (*)(char *, char *, uint64_t))v1822)(v1685, (char *)v1798, v1801);
          if (v1818((uint64_t)v1351, 1, (uint64_t)v1805) == 1)
          {
            ((void (*)(char *, uint64_t))v1815)(v1685, v1801);
            goto LABEL_521;
          }
          v1358 = v1782;
          v1359 = v1781;
          v1360 = v1685;
          v1361 = v1788;
          v1782[2](v1781, v1685, v1788);
          (*(void (**)(char *, int *))(v1802 + 8))(v1360, v1805);
          v1362 = v1358[1];
          LOBYTE(v1358) = v1359[v1361[13]];
          ((void (*)(char *, int *))v1362)(v1359, v1361);
          if (!sub_24D3F0D84((char)v1358, 0))
          {
LABEL_521:
            if (sub_24D3F0D84(v1819[v1837[12] + v1797[21]], 0)) {
              goto LABEL_522;
            }
            uint64_t v1594 = v1821 + v1837[13];
            sub_24D3F0BA0(v1594, (uint64_t)v1844, &qword_26B197970);
            sub_24D3F0BA0((uint64_t)v1844, (uint64_t)&v1845, &qword_26B197970);
            int v1595 = sub_24D3F0D40((uint64_t)&v1845);
            LODWORD(v1806) = v1595 == 1;
            if (v1595 == 1)
            {
              v1804 = 0;
            }
            else
            {
              long long v1913 = v1857;
              long long v1914 = v1858;
              long long v1915 = v1859;
              long long v1909 = v1853;
              long long v1910 = v1854;
              long long v1911 = v1855;
              long long v1912 = v1856;
              long long v1905 = v1849;
              long long v1906 = v1850;
              long long v1907 = v1851;
              long long v1908 = v1852;
              *(_OWORD *)&v1901[8] = v1845;
              long long v1902 = v1846;
              long long v1903 = v1847;
              uint64_t v1916 = v1860;
              long long v1904 = v1848;
              v1603 = *(uint64_t (**)(uint64_t))(*v1841 + 520);
              sub_24D3F0BA0((uint64_t)v1844, (uint64_t)v1843, &qword_26B197970);
              uint64_t v1604 = sub_24D3FBB70((uint64_t)v1843);
              char v1605 = v1603(v1604);
              char v1606 = sub_24D98BCC4((uint64_t)v1837, v1817);
              BOOL v1607 = sub_24D5F0188(v1606, 1);
              v1608 = v1672;
              ((void (*)(char *, char *, uint64_t))v1822)(v1672, (char *)v1798, v1801);
              int v1609 = v1818((uint64_t)v1608, 1, (uint64_t)v1805);
              if (v1609 == 1)
              {
                ((void (*)(char *, uint64_t))v1815)(v1672, v1801);
                BOOL v1610 = 1;
              }
              else
              {
                uint64_t v1613 = *(void *)&v1672[v1805[19]];
                (*(void (**)(void))(v1802 + 8))();
                BOOL v1610 = sub_24D3F0C10(1, v1613);
              }
              v1804 = (void (*)(char *, char *, uint64_t))sub_24D3FBC64(v1605 & 1, v1607, v1610);
              sub_24D7334DC(v1844, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
            }
            if (sub_24D3F0C10(2, v1862))
            {
              sub_24D3F0BA0(v1594, (uint64_t)v1842, &qword_26B197970);
              sub_24D3F0BA0((uint64_t)v1842, (uint64_t)v1843, &qword_26B197970);
              if (sub_24D3F0D40((uint64_t)v1843) != 1 && sub_24D5EFCA4(v1843[26], 0))
              {
                v1614 = ItemMetadata;
                ((void (*)(void *__return_ptr, char *))(*v1796)[33])(v1864, v1820);
                uint64_t ItemMetadata = v1614;
                if (v1614) {
                  goto LABEL_660;
                }
                sub_24D3F0BA0((uint64_t)v1864, (uint64_t)v1865, &qword_26B197970);
                if (sub_24D3F0D40((uint64_t)v1865) != 1)
                {
                  long long v1879 = v1865[12];
                  long long v1880 = v1865[13];
                  long long v1881 = v1865[14];
                  long long v1875 = v1865[8];
                  long long v1876 = v1865[9];
                  long long v1877 = v1865[10];
                  long long v1878 = v1865[11];
                  long long v1871 = v1865[4];
                  long long v1872 = v1865[5];
                  long long v1873 = v1865[6];
                  long long v1874 = v1865[7];
                  long long v1867 = v1865[0];
                  long long v1868 = v1865[1];
                  long long v1869 = v1865[2];
                  uint64_t v1882 = v1866;
                  long long v1870 = v1865[3];
                  LOBYTE(v1178) = (*(uint64_t (**)(void))(*v1841 + 520))();
                  char v1615 = sub_24D98BCC4((uint64_t)v1837, v1817);
                  BOOL v1174 = sub_24D5F0188(v1615, 1);
                  v1616 = v1665;
                  ((void (*)(char *, char *, uint64_t))v1822)(v1665, (char *)v1798, v1801);
                  if (v1818((uint64_t)v1616, 1, (uint64_t)v1805) == 1)
                  {
                    ((void (*)(char *, uint64_t))v1815)(v1665, v1801);
                    BOOL v1617 = 1;
                  }
                  else
                  {
LABEL_698:
                    uint64_t v1637 = *(void *)&v1665[v1805[19]];
                    (*(void (**)(void))(v1802 + 8))();
                    BOOL v1617 = sub_24D3F0C10(1, v1637);
                  }
                  v1804 = (void (*)(char *, char *, uint64_t))sub_24D3FBC64(v1178 & 1, v1174, v1617);
                  sub_24D7334DC(v1864, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
                  LODWORD(v1806) = 0;
                }
              }
            }
            uint64_t v1638 = ((uint64_t (*)(void))v1809)();
            if (sub_24D3F0C10(4096, v1638))
            {
              if (v1806) {
                goto LABEL_522;
              }
              if (sub_24D5EFCA4((uint64_t)v1804, 1003) || sub_24D5EFCA4((uint64_t)v1804, 502))
              {
                v1639 = v1671;
                ((void (*)(char *, char *, uint64_t))v1822)(v1671, (char *)v1798, v1801);
                if (v1818((uint64_t)v1639, 1, (uint64_t)v1805) == 1)
                {
                  ((void (*)(char *, uint64_t))v1815)(v1671, v1801);
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1768 + 56))(v1670, 1, 1, v1830);
                  goto LABEL_709;
                }
                uint64_t v1640 = (uint64_t)v1805;
                v1641 = v1671;
                uint64_t v1642 = v1738;
                v1643 = v1737;
                v1644 = v1745;
                (*(void (**)(char *, char *, int *))(v1738 + 16))(v1737, &v1671[v1805[13]], v1745);
                (*(void (**)(char *, uint64_t))(v1802 + 8))(v1641, v1640);
                v1645 = v1670;
                (*(void (**)(char *, char *, uint64_t))(v1766 + 16))(v1670, v1643, v1770);
                (*(void (**)(char *, int *))(v1642 + 8))(v1643, v1644);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1768 + 48))(v1645, 1, v1830) == 1)
                {
LABEL_709:
                  (*(void (**)(char *, uint64_t))(v1766 + 8))(v1670, v1770);
                  goto LABEL_710;
                }
                v1651 = v1666;
                (*(void (**)(char *, char *, uint64_t))(v1768 + 32))(v1666, v1670, v1830);
                v1652 = ItemMetadata;
                (*(void (**)(char *, uint64_t))(*(void *)v1810 + 240))(v1651, 1);
                uint64_t ItemMetadata = v1652;
                if (v1652)
                {
                  (*(void (**)(char *, uint64_t))(v1768 + 8))(v1666, v1830);
                  goto LABEL_660;
                }
                if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v1702 + 6))(v1667, 1, v1735) == 1)
                {
                  (*(void (**)(char *, uint64_t))(v1698 + 8))(v1667, v1723);
                  (*(void (**)(char *, uint64_t))(v1768 + 8))(v1666, v1830);
                  goto LABEL_710;
                }
                uint64_t v1658 = v1735;
                v1659 = v1667;
                uint64_t v1660 = v1664;
                sub_24D409F80((uint64_t)&v1667[*(int *)(v1735 + 48)], v1664);
                (*((void (**)(char *, uint64_t))v1702 + 1))(v1659, v1658);
                char v1661 = *(unsigned char *)(v1660 + v1797[21]);
                sub_24D409FE4(v1660);
                if (sub_24D3F0D84(v1661, 3))
                {
                  (*(void (**)(char *, uint64_t))(v1768 + 8))(v1666, v1830);
                }
                else
                {
                  BOOL v1662 = sub_24D3F0D84(v1661, 2);
                  (*(void (**)(char *, uint64_t))(v1768 + 8))(v1666, v1830);
                  if (!v1662) {
                    goto LABEL_710;
                  }
                }
LABEL_711:
                type metadata accessor for ReconciliationSideMutation();
                uint64_t v1646 = swift_getTupleTypeMetadata2();
                uint64_t v1647 = (uint64_t)v1824;
                v1648 = &v1824[*(int *)(v1646 + 48)];
                ((void (*)(char *, char *, uint64_t))v1812)(v1824, v1819, v1934);
                swift_storeEnumTagMultiPayload();
                *(_WORD *)v1648 = 259;
                uint64_t v1649 = v1808;
                *((void *)v1648 + 1) = v1807;
                *((void *)v1648 + 2) = v1649;
                swift_storeEnumTagMultiPayload();
                uint64_t v1650 = v1825;
                swift_storeEnumTagMultiPayload();
                sub_24D907568((uint64_t)v1831, v1647);
                v1166(v1647, v1650);
                goto LABEL_522;
              }
            }
            else if (v1806)
            {
              goto LABEL_522;
            }
LABEL_710:
            if (!sub_24D5EFCA4((uint64_t)v1804, 2)) {
              goto LABEL_522;
            }
            goto LABEL_711;
          }
        }
      }
    }
LABEL_522:
    uint64_t v1109 = v1934;
LABEL_523:
    uint64_t v1121 = (uint64_t)v1824;
LABEL_524:
    v1363 = v1755;
    if (sub_24D3F0C10(16, v1862) && (sub_24D98BC10((uint64_t)v1837, v1817) & 1) != 0)
    {
      uint64_t v1364 = v1830;
      uint64_t v1365 = swift_getAssociatedConformanceWitness();
      *(void *)&long long v1845 = v1109;
      *((void *)&v1845 + 1) = v1364;
      *(void *)&long long v1846 = v1816;
      *((void *)&v1846 + 1) = v1365;
      v1366 = (uint8_t *)type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      v1367 = (unsigned char *)(v1121 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      v1368 = *(void (**)(uint64_t, char *, uint64_t))(v1835 + 16);
      v1368(v1121, v1819, v1109);
      swift_storeEnumTagMultiPayload();
      unsigned char *v1367 = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v1369 = v1825;
      swift_storeEnumTagMultiPayload();
      sub_24D907568((uint64_t)v1831, v1121);
      v1820 = *(char **)(v1829 + 8);
      ((void (*)(uint64_t, uint64_t))v1820)(v1121, v1369);
      v1370 = v1732;
      uint64_t v1371 = v1801;
      ((void (*)(char *, char *, uint64_t))v1822)(v1732, (char *)v1798, v1801);
      uint64_t v1372 = (uint64_t)v1805;
      if (v1818((uint64_t)v1370, 1, (uint64_t)v1805) == 1)
      {
        ((void (*)(char *, uint64_t))v1815)(v1370, v1371);
        v1363 = v1755;
      }
      else
      {
        v1812 = (char *)v1368;
        uint64_t v1813 = (uint64_t)v1366;
        uint64_t v1373 = v1109;
        v1374 = v1782;
        v1375 = v1781;
        v1376 = v1370;
        v1377 = v1370;
        v1378 = v1788;
        v1782[2](v1781, v1376, v1788);
        (*(void (**)(char *, uint64_t))(v1802 + 8))(v1377, v1372);
        int v1379 = v1375[v1378[14]];
        ((void (*)(char *, int *))v1374[1])(v1375, v1378);
        v1363 = v1755;
        if (v1379 != 6 && sub_24D3F0D84(v1379, 0) && v1827 != 3)
        {
          type metadata accessor for ReconciliationSideMutation();
          swift_getTupleTypeMetadata2();
          ((void (*)(char *, char *, uint64_t))v1812)(v1824, v1819, v1373);
          swift_storeEnumTagMultiPayload();
          uint64_t v1380 = (uint64_t)v1824;
          swift_storeEnumTagMultiPayload();
          uint64_t v1381 = v1825;
          swift_storeEnumTagMultiPayload();
          sub_24D907568((uint64_t)v1831, v1380);
          ((void (*)(uint64_t, uint64_t))v1820)(v1380, v1381);
        }
      }
    }
    v1382 = v1363;
    BOOL v1383 = sub_24D3F0C10(16, v1862);
    v1384 = v1837;
    v1385 = v1797;
    uint64_t v1386 = v1801;
    v1387 = (void (*)(char *))v1819;
    if (v1383 && (sub_24D98BC10((uint64_t)v1837, v1817) & 1) == 0)
    {
      v1388 = v1733;
      ((void (*)(char *, char *, uint64_t))v1822)(v1733, (char *)v1798, v1386);
      uint64_t v1389 = (uint64_t)v1805;
      if (v1818((uint64_t)v1388, 1, (uint64_t)v1805) == 1)
      {
        ((void (*)(char *, uint64_t))v1815)(v1388, v1386);
      }
      else
      {
        v1390 = v1717;
        (*(void (**)(char *, char *, uint64_t))(v1802 + 32))(v1717, v1388, v1389);
        if (sub_24DB86F3C(v1389))
        {
          if (sub_24DB8B3BC(v1390[*(int *)(v1389 + 52) + v1745[13]]))
          {
            uint64_t v1391 = v1830;
            uint64_t v1392 = swift_getAssociatedConformanceWitness();
            *(void *)&long long v1845 = v1934;
            *((void *)&v1845 + 1) = v1391;
            *(void *)&long long v1846 = v1816;
            *((void *)&v1846 + 1) = v1392;
            type metadata accessor for ReconciliationID();
            type metadata accessor for ReconciliationSideMutation();
            v1393 = &v1824[*(int *)(swift_getTupleTypeMetadata2() + 48)];
            (*(void (**)(char *, void (*)(char *), uint64_t))(v1835 + 16))(v1824, v1387, v1934);
            swift_storeEnumTagMultiPayload();
            char *v1393 = 2;
            uint64_t v1394 = (uint64_t)v1824;
            swift_storeEnumTagMultiPayload();
            uint64_t v1395 = v1825;
            swift_storeEnumTagMultiPayload();
            sub_24D907568((uint64_t)v1831, v1394);
            (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1394, v1395);
          }
          (*(void (**)(char *, uint64_t))(v1802 + 8))(v1390, v1389);
          v1384 = v1837;
          v1385 = v1797;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v1802 + 8))(v1390, v1389);
        }
      }
    }
    if (sub_24D3F0C10(0x2000000000000, v1862))
    {
      char v1396 = sub_24D98BCC4((uint64_t)v1384, v1817);
      BOOL v1397 = sub_24D5F0188(v1396, 0);
      v1398 = (unsigned int (*)(char *, uint64_t, int *))v1818;
      v1399 = v1756;
      if (v1397)
      {
        ((void (*)(char *, char *, uint64_t))v1822)(v1382, (char *)v1798, v1386);
        uint64_t v1400 = (uint64_t)v1805;
        if (v1398(v1382, 1, v1805) == 1)
        {
          ((void (*)(char *, uint64_t))v1815)(v1382, v1386);
          goto LABEL_550;
        }
        v1401 = v1726;
        (*(void (**)(void))(v1802 + 32))();
        if (sub_24DB86F3C(v1400))
        {
          v1402 = &v1401[*(int *)(v1400 + 52)];
          uint64_t v1403 = v1766;
          v1404 = v1699;
          uint64_t v1405 = v1770;
          (*(void (**)(char *, char *, uint64_t))(v1766 + 16))(v1699, v1402, v1770);
          uint64_t v1406 = v1768;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1768 + 48))(v1404, 1, v1830) == 1)
          {
            (*(void (**)(char *, int *))(v1802 + 8))(v1726, v1805);
            (*(void (**)(char *, uint64_t))(v1403 + 8))(v1404, v1405);
            goto LABEL_550;
          }
          (*(void (**)(char *, char *, uint64_t))(v1406 + 32))(v1703, v1404, v1830);
          uint64_t v1442 = (uint64_t)v1387 + v1837[13];
          sub_24D3F0BA0(v1442, (uint64_t)v1844, &qword_26B197970);
          sub_24D3F0BA0((uint64_t)v1844, (uint64_t)&v1845, &qword_26B197970);
          if (sub_24D3F0D40((uint64_t)&v1845) == 1
            || !sub_24D5EFCA4(*(void *)(v1442 + 208), 501)
            || sub_24D3F0C10(1, *(void *)&v1726[v1805[19]]))
          {
LABEL_570:
            (*(void (**)(char *, uint64_t))(v1768 + 8))(v1703, v1830);
            (*(void (**)(char *, int *))(v1802 + 8))(v1726, v1805);
            goto LABEL_571;
          }
          v1598 = ItemMetadata;
          (*(void (**)(char *, uint64_t))(*(void *)v1841[5] + 240))(v1703, 1);
          uint64_t ItemMetadata = v1598;
          if (v1598)
          {
            (*(void (**)(char *, uint64_t))(v1768 + 8))(v1703, v1830);
            (*(void (**)(char *, int *))(v1802 + 8))(v1726, v1805);
            goto LABEL_660;
          }
          if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v1702 + 6))(v1673, 1, v1735) == 1)
          {
            (*(void (**)(char *, uint64_t))(v1768 + 8))(v1703, v1830);
            (*(void (**)(char *, int *))(v1802 + 8))(v1726, v1805);
            (*(void (**)(char *, uint64_t))(v1698 + 8))(v1673, v1723);
LABEL_571:
            v1384 = v1837;
            v1385 = v1797;
            v1387 = (void (*)(char *))v1819;
            v1399 = v1756;
          }
          else
          {
            uint64_t v1625 = v1735;
            (*((void (**)(char *, char *, uint64_t))v1702 + 4))(v1668, v1673, v1735);
            uint64_t v1626 = swift_getWitnessTable();
            if (sub_24D98BC10(v1625, v1626))
            {
              (*((void (**)(char *, uint64_t))v1702 + 1))(v1668, v1735);
              goto LABEL_570;
            }
            uint64_t v1627 = v1830;
            uint64_t v1628 = swift_getAssociatedConformanceWitness();
            uint64_t v1629 = v1934;
            v1843[0] = v1934;
            v1843[1] = v1627;
            v1843[2] = v1816;
            v1843[3] = v1628;
            type metadata accessor for ReconciliationID();
            uint64_t v1630 = swift_getTupleTypeMetadata3();
            uint64_t v1631 = *(int *)(v1630 + 48);
            uint64_t v1632 = *(int *)(v1630 + 64);
            uint64_t v1633 = (uint64_t)v1824;
            v1387 = (void (*)(char *))v1819;
            (*(void (**)(char *, char *, uint64_t))(v1835 + 16))(v1824, v1819, v1629);
            swift_storeEnumTagMultiPayload();
            *(void *)(v1633 + v1631) = 1;
            uint64_t v1634 = sub_24D6B1FA8(0);
            uint64_t v1635 = sub_24D3F0DF4(v1634);
            swift_bridgeObjectRelease();
            *(void *)(v1633 + v1632) = v1635;
            uint64_t v1636 = v1825;
            swift_storeEnumTagMultiPayload();
            sub_24D907568((uint64_t)v1831, v1633);
            (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1633, v1636);
            (*((void (**)(char *, uint64_t))v1702 + 1))(v1668, v1735);
            (*(void (**)(char *, uint64_t))(v1768 + 8))(v1703, v1627);
            (*(void (**)(char *, int *))(v1802 + 8))(v1726, v1805);
            v1384 = v1837;
            v1385 = v1797;
            v1399 = v1756;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v1802 + 8))(v1401, v1400);
LABEL_550:
          v1384 = v1837;
        }
      }
    }
    else
    {
      v1399 = v1756;
    }
    if (sub_24D3F0C10(0x100000000000, v1862))
    {
      v1407 = (char *)v1387 + v1384[12];
      v371 = v1385;
      uint64_t v1408 = v1385[16];
      if (v1407[v1408] == 1)
      {
        uint64_t v1409 = v1830;
        uint64_t v1410 = swift_getAssociatedConformanceWitness();
        uint64_t v1411 = v1934;
        *(void *)&long long v1845 = v1934;
        *((void *)&v1845 + 1) = v1409;
        *(void *)&long long v1846 = v1816;
        *((void *)&v1846 + 1) = v1410;
        uint64_t v1412 = type metadata accessor for ReconciliationID();
        uint64_t v1413 = (uint64_t)v1824;
        v1414 = (uint8_t *)v1412;
        v1415 = (char *)type metadata accessor for ReconciliationSideMutation();
        v1811 = (uint64_t (*)(uint64_t, uint64_t))swift_getTupleTypeMetadata2();
        v1416 = (unsigned char *)(v1413 + *((int *)v1811 + 12));
        v1812 = *(char **)(v1835 + 16);
        ((void (*)(uint64_t, void (*)(char *), uint64_t))v1812)(v1413, v1387, v1411);
        uint64_t v1813 = (uint64_t)v1414;
        swift_storeEnumTagMultiPayload();
        unsigned char *v1416 = 1;
        v1820 = v1415;
        swift_storeEnumTagMultiPayload();
        uint64_t v1417 = v1825;
        swift_storeEnumTagMultiPayload();
        sub_24D907568((uint64_t)v1831, v1413);
        v1418 = *(void (**)(uint64_t, uint64_t))(v1829 + 8);
        v1418(v1413, v1417);
        if (v1407[v1408] == 1)
        {
          *(void *)&long long v1845 = v1839;
          *((void *)&v1845 + 1) = v1836;
          *(void *)&long long v1846 = v1838;
          *((void *)&v1846 + 1) = v1832;
          uint64_t v1419 = type metadata accessor for Materialization.MaterializeIgnoredItem();
          uint64_t v1420 = sub_24D7C043C(v1419);
          v1387 = (void (*)(char *))v1819;
          uint64_t v1422 = sub_24DC1BC80((uint64_t)v1819, v1420, v1421, 0x2000000);
          sub_24D85246C((uint64_t)v1831, v1422);
          swift_release();
          v1423 = v1715;
          uint64_t v1424 = v1801;
          ((void (*)(char *, char *, uint64_t))v1822)(v1715, (char *)v1798, v1801);
          if (v1818((uint64_t)v1423, 1, (uint64_t)v1805) == 1)
          {
            ((void (*)(char *, uint64_t))v1815)(v1423, v1424);
            goto LABEL_563;
          }
          v1430 = v1782;
          v1431 = v1781;
          v1432 = v1788;
          v1782[2](v1781, v1423, v1788);
          (*(void (**)(char *, int *))(v1802 + 8))(v1423, v1805);
          int v1433 = v1431[v1432[14]];
          ((void (*)(char *, int *))v1430[1])(v1431, v1432);
          if (v1433 == 6)
          {
LABEL_563:
            uint64_t v1425 = v1825;
            goto LABEL_566;
          }
          v1443 = ItemMetadata;
          sub_24D76A63C((uint64_t)v1387, v1798, v1807, v1808, v1784, (uint64_t)v1841, (uint64_t)v1831);
          uint64_t ItemMetadata = v1443;
          if (v1443) {
            goto LABEL_660;
          }
          goto LABEL_573;
        }
        char v1426 = sub_24D98BCC4((uint64_t)v1837, v1817);
        if (sub_24D5F0188(v1426, 1))
        {
          *(void *)&long long v1845 = v1839;
          *((void *)&v1845 + 1) = v1836;
          *(void *)&long long v1846 = v1838;
          *((void *)&v1846 + 1) = v1832;
          type metadata accessor for Ingestion.FetchChildrenMetadata();
          uint64_t v1427 = sub_24DC09748((uint64_t)v1819, v1807, v1808, 0x4000000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
          sub_24D85246C((uint64_t)v1831, v1427);
          swift_release();
        }
        v1428 = v1716;
        uint64_t v1429 = v1801;
        ((void (*)(char *, char *, uint64_t))v1822)(v1716, (char *)v1798, v1801);
        if (v1818((uint64_t)v1428, 1, (uint64_t)v1805) == 1)
        {
          ((void (*)(char *, uint64_t))v1815)(v1428, v1429);
          goto LABEL_573;
        }
        v1434 = v1418;
        uint64_t v1435 = (uint64_t)v1805;
        BOOL v1436 = sub_24DB86F3C((uint64_t)v1805);
        (*(void (**)(char *, uint64_t))(v1802 + 8))(v1428, v1435);
        if (v1436)
        {
LABEL_573:
          uint64_t v1425 = v1825;
          v371 = v1797;
          unsigned int v1138 = v1827;
          v1387 = (void (*)(char *))v1819;
        }
        else
        {
          uint64_t v1437 = (uint64_t)v1824;
          v1438 = (uint64_t *)&v1824[*((int *)v1811 + 12)];
          v1439 = (void (*)(char *))v1819;
          ((void (*)(char *, char *, uint64_t))v1812)(v1824, v1819, v1934);
          v1387 = v1439;
          swift_storeEnumTagMultiPayload();
          v1440 = sub_24DA25BB4();
          unint64_t v1441 = v1807;
          uint64_t *v1438 = *v1440;
          v1438[1] = v1441;
          v1438[2] = v1808;
          swift_storeEnumTagMultiPayload();
          uint64_t v1425 = v1825;
          swift_storeEnumTagMultiPayload();
          sub_24D907568((uint64_t)v1831, v1437);
          v1434(v1437, v1425);
LABEL_566:
          v371 = v1797;
          unsigned int v1138 = v1827;
        }
        v331 = v1803;
        v1399 = v1756;
      }
      else
      {
        uint64_t v1425 = v1825;
        unsigned int v1138 = v1827;
        v331 = v1803;
      }
    }
    else
    {
      uint64_t v1425 = v1825;
      unsigned int v1138 = v1827;
      v331 = v1803;
      v371 = v1385;
    }
    if (sub_24D3F0C10(2, v1862))
    {
      uint64_t v1444 = v1801;
      ((void (*)(char *, char *, uint64_t))v1822)(v1399, (char *)v1798, v1801);
      uint64_t v1445 = (uint64_t)v1805;
      if (v1818((uint64_t)v1399, 1, (uint64_t)v1805) == 1)
      {
        (*(void (**)(char *, uint64_t))(v1800 + 8))(v1399, v1444);
        v331 = v1803;
        unsigned int v1138 = v1827;
      }
      else
      {
        v1446 = &v1399[*(int *)(v1445 + 52)];
        v1447 = v1399;
        uint64_t v1448 = v1738;
        v1449 = v1737;
        v1450 = v1745;
        (*(void (**)(char *, char *, int *))(v1738 + 16))(v1737, v1446, v1745);
        (*(void (**)(char *, uint64_t))(v1802 + 8))(v1447, v1445);
        int v1451 = v1449[v1450[11]];
        v371 = v1797;
        (*(void (**)(char *, int *))(v1448 + 8))(v1449, v1450);
        v331 = v1803;
        unsigned int v1138 = v1827;
        if (v1451 != 3 && !(v1814 & 1 | !sub_24D3F0D84(v1451, 2)))
        {
          uint64_t v1452 = v1830;
          uint64_t v1453 = swift_getAssociatedConformanceWitness();
          uint64_t v1454 = v1934;
          *(void *)&long long v1845 = v1934;
          *((void *)&v1845 + 1) = v1452;
          *(void *)&long long v1846 = v1816;
          *((void *)&v1846 + 1) = v1453;
          type metadata accessor for ReconciliationID();
          type metadata accessor for ReconciliationSideMutation();
          v1455 = &v1824[*(int *)(swift_getTupleTypeMetadata2() + 48)];
          (*(void (**)(char *, void (*)(char *), uint64_t))(v1835 + 16))(v1824, v1387, v1454);
          swift_storeEnumTagMultiPayload();
          *(_WORD *)v1455 = 770;
          uint64_t v1456 = v1808;
          *((void *)v1455 + 1) = v1807;
          *((void *)v1455 + 2) = v1456;
          uint64_t v1457 = (uint64_t)v1824;
          v371 = v1797;
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          sub_24D907568((uint64_t)v1831, v1457);
          uint64_t v1458 = v1457;
          unsigned int v1138 = v1827;
          v331 = v1803;
          (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1458, v1425);
        }
      }
    }
    if (!v1138)
    {
      uint64_t v1459 = v1862;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1941B0);
      uint64_t v1460 = swift_allocObject();
      uint64_t v1461 = sub_24D719BBC(v1460, 2);
      _OWORD *v1462 = xmmword_24DCCECE0;
      uint64_t v1463 = nullsub_1(v1461);
      uint64_t v1464 = sub_24D3F0DF4(v1463);
      swift_bridgeObjectRelease();
      if ((sub_24D3F0DAC(v1464, v1459) & 1) == 0)
      {
        id v1465 = ItemMetadata;
        sub_24DBD547C(v1387, v1841, (uint64_t)v1831);
        if (v1465)
        {
          v1466 = v1387;
          uint64_t v1467 = v1800;
          v727 = *(void (**)(uint64_t, int *))(v1834 + 8);
          v728 = v1837;
          v727(v1821, v1837);
          v1468 = *(void (**)(uint64_t, uint64_t))(v1467 + 8);
          uint64_t v1469 = v1801;
          v1468(v1798, v1801);
          v1468((uint64_t)v1803, v1469);
          v1470 = v1466;
          goto LABEL_645;
        }
        uint64_t ItemMetadata = 0;
      }
      v331 = v1803;
      uint64_t v1134 = v1816;
      v371 = v1797;
      unsigned int v1138 = v1827;
      goto LABEL_588;
    }
    uint64_t v1134 = v1816;
LABEL_588:
    uint64_t v321 = (unsigned char *)v1934;
LABEL_589:
    if (((*(uint64_t (**)(unsigned char *, uint64_t))(v1134 + 72))(v321, v1134) & 1) != 0 && sub_24D3F0C10(8, v1862))
    {
      uint64_t v329 = v1805;
      if (v1138 < 2)
      {
        v1471 = v1724;
        uint64_t v1472 = v1801;
        ((void (*)(char *, char *, uint64_t))v1822)(v1724, (char *)v1798, v1801);
        v1473 = (unsigned int (*)(char *, uint64_t, int *))v1818;
        v1474 = v371;
        if (v1818((uint64_t)v1471, 1, (uint64_t)v329) == 1)
        {
          (*(void (**)(char *, uint64_t))(v1800 + 8))(v1471, v1472);
        }
        else
        {
          v1491 = v329;
          BOOL v1492 = sub_24DB86F3C((uint64_t)v329);
          v1493 = v1491;
          v1473 = (unsigned int (*)(char *, uint64_t, int *))v1818;
          (*(void (**)(char *, int *))(v1802 + 8))(v1471, v1493);
          if (v1492)
          {
            uint64_t v1494 = v1830;
            uint64_t v1495 = swift_getAssociatedConformanceWitness();
            uint64_t v1496 = v1934;
            *(void *)&long long v1845 = v1934;
            *((void *)&v1845 + 1) = v1494;
            *(void *)&long long v1846 = v1816;
            *((void *)&v1846 + 1) = v1495;
            type metadata accessor for ReconciliationID();
            type metadata accessor for ReconciliationSideMutation();
            uint64_t v1497 = swift_getTupleTypeMetadata2();
            uint64_t v1498 = (uint64_t)v1824;
            v1499 = &v1824[*(int *)(v1497 + 48)];
            v1500 = v1819;
            (*(void (**)(char *, char *, uint64_t))(v1835 + 16))(v1824, v1819, v1496);
            swift_storeEnumTagMultiPayload();
            v1501 = v1744;
            uint64_t v1502 = swift_getTupleTypeMetadata3();
            uint64_t v1503 = *(int *)(v1502 + 48);
            uint64_t v1504 = *(int *)(v1502 + 64);
            (*(void (**)(char *, char *, int *))(*((void *)v1501 - 1) + 16))(v1499, &v1500[v1837[10]], v1501);
            v1499[v1503] = 1;
            v1499[v1504] = 0;
            uint64_t v1472 = v1801;
            v1474 = v1797;
            v331 = v1803;
            swift_storeEnumTagMultiPayload();
            uint64_t v1505 = v1825;
            swift_storeEnumTagMultiPayload();
            sub_24D907568((uint64_t)v1831, v1498);
            (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1498, v1505);
          }
        }
        v1490 = (void (*)(void, void, void))v331;
        if (sub_24D8903D0())
        {
          uint64_t v1506 = v1839;
          *(void *)&long long v1845 = v1839;
          *((void *)&v1845 + 1) = v1836;
          *(void *)&long long v1846 = v1838;
          *((void *)&v1846 + 1) = v1832;
          type metadata accessor for Ingestion.FetchChildrenMetadata();
          v1507 = v1833;
          uint64_t v1508 = v1807;
          uint64_t v1509 = v1808;
          uint64_t v1510 = sub_24DC09748((uint64_t)v1833, v1807, v1808, 2048, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
          sub_24D85246C((uint64_t)v1831, v1510);
          swift_release();
          *(void *)&long long v1845 = v1506;
          v1474 = v1797;
          *((void *)&v1845 + 1) = v1836;
          v1511 = v1818;
          *(void *)&long long v1846 = v1838;
          *((void *)&v1846 + 1) = v1832;
          type metadata accessor for Ingestion.ReSnapshotChildren();
          uint64_t v1512 = (uint64_t)v1507;
          uint64_t v1472 = v1801;
          uint64_t v1513 = v1509;
          v1473 = (unsigned int (*)(char *, uint64_t, int *))v1511;
          uint64_t v1514 = sub_24DC0966C(v1512, v1508, v1513, 2048, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.ReSnapshotChildren);
          sub_24D85246C((uint64_t)v1831, v1514);
          swift_release();
        }
        uint64_t v329 = v1805;
LABEL_610:
        v1515 = v1754;
        ((void (*)(char *, char *, uint64_t))v1822)(v1754, (char *)v1798, v1472);
        if (v1473(v1515, 1, v329) == 1)
        {
          (*(void (**)(char *, uint64_t))(v1800 + 8))(v1515, v1472);
          v1516 = v1474;
          goto LABEL_622;
        }
        uint64_t v1517 = v1934;
        uint64_t v1518 = v1802;
        uint64_t v1519 = (uint64_t)v1748;
        (*(void (**)(char *, char *, int *))(v1802 + 32))(v1748, v1515, v329);
        BOOL v1520 = sub_24D3F0C10(4, *(void *)(v1519 + v1788[19]));
        v1521 = v329;
        int v1522 = v1819[v1837[12] + v1474[23]];
        if (v1520 == v1522)
        {
          v1516 = v1474;
          (*(void (**)(uint64_t, int *))(v1518 + 8))(v1519, v1521);
          uint64_t v329 = v1521;
          v1490 = (void (*)(void, void, void))v1803;
          v1473 = (unsigned int (*)(char *, uint64_t, int *))v1818;
          goto LABEL_622;
        }
        uint64_t v1523 = v1830;
        uint64_t v1524 = swift_getAssociatedConformanceWitness();
        if (!v1522)
        {
          *(void *)&long long v1845 = v1517;
          *((void *)&v1845 + 1) = v1523;
          *(void *)&long long v1846 = v1816;
          *((void *)&v1846 + 1) = v1524;
          type metadata accessor for ReconciliationID();
          uint64_t v1539 = swift_getTupleTypeMetadata2();
          uint64_t v1540 = (uint64_t)v1824;
          v1541 = &v1824[*(int *)(v1539 + 48)];
          (*(void (**)(char *, char *, uint64_t))(v1835 + 16))(v1824, v1819, v1517);
          swift_storeEnumTagMultiPayload();
          *(void *)v1541 = 4;
          v1541[8] = 1;
          uint64_t v1542 = v1825;
          swift_storeEnumTagMultiPayload();
          sub_24D907568((uint64_t)v1831, v1540);
          (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1540, v1542);
          v1543 = ItemMetadata;
          sub_24D4A78FC(v1519, v1841);
          uint64_t v1544 = v1802;
          uint64_t ItemMetadata = v1543;
          if (!v1543)
          {
            uint64_t v329 = v1805;
            v1473 = (unsigned int (*)(char *, uint64_t, int *))v1818;
            v1516 = v1797;
            uint64_t v1536 = v1519;
            goto LABEL_621;
          }
          (*(void (**)(uint64_t, int *))(v1802 + 8))(v1519, v1805);
          v727 = *(void (**)(uint64_t, int *))(v1834 + 8);
          v728 = v1837;
          v727(v1821, v1837);
          v1545 = *(void (**)(uint64_t, uint64_t))(v1800 + 8);
          uint64_t v1546 = v1801;
          v1545(v1798, v1801);
          v1545((uint64_t)v1803, v1546);
          v1470 = (void (*)(char *))v1819;
          goto LABEL_645;
        }
        uint64_t v1525 = v1517;
        *(void *)&long long v1845 = v1517;
        *((void *)&v1845 + 1) = v1523;
        *(void *)&long long v1846 = v1816;
        *((void *)&v1846 + 1) = v1524;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v1526 = swift_getTupleTypeMetadata2();
        uint64_t v1527 = (uint64_t)v1824;
        v1528 = &v1824[*(int *)(v1526 + 48)];
        v1833 = *(void (**)(void, void, void))(v1835 + 16);
        v1529 = v1819;
        v1833(v1824, v1819, v1525);
        swift_storeEnumTagMultiPayload();
        *(void *)v1528 = 0;
        *((void *)v1528 + 1) = 0;
        *((void *)v1528 + 2) = 0xB000000000000000;
        *(_OWORD *)(v1528 + 24) = 0u;
        *(_OWORD *)(v1528 + 40) = 0u;
        v1528[56] = 0;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        v1530 = v1831;
        sub_24D907568((uint64_t)v1831, v1527);
        v1827 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v1829 + 8);
        ((void (*)(uint64_t, uint64_t))v1827)(v1527, v1825);
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v1531 = v1527 + *(int *)(swift_getTupleTypeMetadata2() + 48);
        v1532 = v1529;
        v1533 = (void (*)(uint64_t, char *, uint64_t))v1833;
        v1833(v1527, v1532, v1934);
        swift_storeEnumTagMultiPayload();
        *(void *)uint64_t v1531 = 0;
        *(void *)(v1531 + 8) = 0;
        *(void *)(v1531 + 16) = 0xB000000000000000;
        *(_OWORD *)(v1531 + 24) = 0u;
        *(_OWORD *)(v1531 + 40) = 0u;
        *(unsigned char *)(v1531 + 56) = 0;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_24D907568((uint64_t)v1530, v1527);
        v1534 = (void (*)(uint64_t, uint64_t))v1827;
        ((void (*)(uint64_t, uint64_t))v1827)(v1527, v1825);
        uint64_t v1535 = v1527 + *(int *)(swift_getTupleTypeMetadata2() + 48);
        v1533(v1527, v1819, v1934);
        uint64_t v1536 = (uint64_t)v1748;
        uint64_t v1537 = v1825;
        swift_storeEnumTagMultiPayload();
        *(void *)uint64_t v1535 = 4;
        *(unsigned char *)(v1535 + 8) = 0;
        swift_storeEnumTagMultiPayload();
        sub_24D907568((uint64_t)v1831, v1527);
        v1534(v1527, v1537);
        id v1538 = ItemMetadata;
        sub_24D4A78FC(v1536, v1841);
        if (v1538)
        {
          (*(void (**)(uint64_t, int *))(v1802 + 8))(v1536, v1805);
          goto LABEL_643;
        }
        uint64_t ItemMetadata = 0;
        v1516 = v1797;
        uint64_t v329 = v1805;
        uint64_t v1544 = v1802;
        v1473 = (unsigned int (*)(char *, uint64_t, int *))v1818;
LABEL_621:
        (*(void (**)(uint64_t, int *))(v1544 + 8))(v1536, v329);
        uint64_t v1472 = v1801;
        v1490 = (void (*)(void, void, void))v1803;
LABEL_622:
        v1547 = v1753;
        ((void (*)(char *, char *, uint64_t))v1822)(v1753, (char *)v1798, v1472);
        if (v1473(v1547, 1, v329) == 1)
        {
          (*(void (**)(char *, uint64_t))(v1800 + 8))(v1547, v1472);
          goto LABEL_630;
        }
        uint64_t v1548 = v1802;
        uint64_t v1549 = (uint64_t)v1743;
        (*(void (**)(char *, char *, int *))(v1802 + 32))(v1743, v1547, v329);
        BOOL v1550 = sub_24D3F0C10(8, *(void *)(v1549 + v1788[19]));
        v1551 = v1819;
        v1552 = v1516;
        int v1553 = v1819[v1837[12] + v1516[24]];
        if (v1550 == v1553)
        {
          (*(void (**)(uint64_t, int *))(v1548 + 8))(v1549, v329);
          v1490 = (void (*)(void, void, void))v1803;
          v1473 = (unsigned int (*)(char *, uint64_t, int *))v1818;
          v1516 = v1552;
        }
        else
        {
          uint64_t v1554 = (uint64_t)v1730;
          uint64_t v1555 = v1934;
          (*(void (**)(char *, char *, uint64_t))(v1835 + 16))(v1730, v1819, v1934);
          uint64_t v1556 = v1830;
          uint64_t v1557 = swift_getAssociatedConformanceWitness();
          *(void *)&long long v1845 = v1555;
          *((void *)&v1845 + 1) = v1556;
          *(void *)&long long v1846 = v1816;
          *((void *)&v1846 + 1) = v1557;
          type metadata accessor for ReconciliationID();
          swift_storeEnumTagMultiPayload();
          uint64_t v1558 = v1554 + *(int *)(swift_getTupleTypeMetadata2() + 48);
          *(void *)uint64_t v1558 = 8;
          *(unsigned char *)(v1558 + 8) = v1553 ^ 1;
          uint64_t v1559 = v1825;
          swift_storeEnumTagMultiPayload();
          sub_24D907568((uint64_t)v1831, v1554);
          (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1554, v1559);
          v1560 = ItemMetadata;
          sub_24D4A78FC(v1549, v1841);
          uint64_t ItemMetadata = v1560;
          if (v1560)
          {
            (*(void (**)(uint64_t, int *))(v1802 + 8))(v1549, v1805);
            v832 = (void (*)(char *))v1551;
            uint64_t v833 = v1800;
            v727 = *(void (**)(uint64_t, int *))(v1834 + 8);
            v728 = v1837;
            v727(v1821, v1837);
LABEL_627:
            v1561 = *(void (**)(uint64_t, uint64_t))(v833 + 8);
            uint64_t v1562 = v1801;
            v1561(v1798, v1801);
            v1561((uint64_t)v1803, v1562);
            v1470 = v832;
LABEL_645:
            v727((uint64_t)v1470, v728);
            return v284 & 1;
          }
          (*(void (**)(uint64_t, int *))(v1802 + 8))(v1549, v1805);
          v1516 = v1797;
          uint64_t v1472 = v1801;
          v1490 = (void (*)(void, void, void))v1803;
          v1473 = (unsigned int (*)(char *, uint64_t, int *))v1818;
        }
LABEL_630:
        if (sub_24D8903D0())
        {
          v1563 = v1739;
          ((void (*)(char *, char *, uint64_t))v1822)(v1739, (char *)v1798, v1472);
          uint64_t v1564 = (uint64_t)v1805;
          if (v1473(v1563, 1, v1805) == 1)
          {
            v1565 = ItemMetadata;
            (*(void (**)(char *, uint64_t))(v1800 + 8))(v1563, v1472);
            int v1566 = 2;
          }
          else
          {
            v1565 = ItemMetadata;
            uint64_t v1569 = v1564;
            uint64_t v1570 = *(void *)&v1563[*(int *)(v1564 + 76)];
            (*(void (**)(char *, uint64_t))(v1802 + 8))(v1563, v1569);
            int v1566 = sub_24D3F0C10(2, v1570);
          }
          uint64_t v1571 = v1934;
          v1568 = v1837;
          BOOL v1572 = sub_24D3F0D84(v1819[v1837[12] + v1516[22]], 2);
          BOOL v1573 = v1572;
          if (v1566 != 2 && ((v1572 ^ (v1566 != 0)) & 1) == 0)
          {
            uint64_t ItemMetadata = v1565;
            goto LABEL_647;
          }
          *(void *)&long long v1845 = v1839;
          *((void *)&v1845 + 1) = v1836;
          *(void *)&long long v1846 = v1838;
          *((void *)&v1846 + 1) = v1832;
          type metadata accessor for ConcreteJobResult();
          v1574 = (void *)sub_24D907530();
          uint64_t v1575 = v1830;
          uint64_t v1576 = swift_getAssociatedConformanceWitness();
          *(void *)&long long v1845 = v1571;
          *((void *)&v1845 + 1) = v1575;
          *(void *)&long long v1846 = v1816;
          *((void *)&v1846 + 1) = v1576;
          type metadata accessor for ReconciliationID();
          uint64_t v1577 = swift_getTupleTypeMetadata3();
          if (v1573)
          {
            uint64_t v1578 = *(int *)(v1577 + 48);
            uint64_t v1579 = *(int *)(v1577 + 64);
            uint64_t v1580 = (uint64_t)v1824;
            (*(void (**)(char *, char *, uint64_t))(v1835 + 16))(v1824, v1819, v1571);
            swift_storeEnumTagMultiPayload();
            *(void *)(v1580 + v1578) = 2;
            uint64_t v1581 = sub_24D6B1FA8(0);
            uint64_t v1582 = sub_24D3F0DF4(v1581);
            swift_bridgeObjectRelease();
            *(void *)(v1580 + v1579) = v1582;
          }
          else
          {
            uint64_t v1583 = *(int *)(v1577 + 48);
            uint64_t v1584 = v1571;
            uint64_t v1585 = *(int *)(v1577 + 64);
            uint64_t v1580 = (uint64_t)v1824;
            (*(void (**)(char *, char *, uint64_t))(v1835 + 16))(v1824, v1819, v1584);
            swift_storeEnumTagMultiPayload();
            uint64_t v1586 = sub_24D6B1FA8(0);
            uint64_t v1587 = sub_24D3F0DF4(v1586);
            swift_bridgeObjectRelease();
            *(void *)(v1580 + v1583) = v1587;
            *(void *)(v1580 + v1585) = 2;
          }
          uint64_t v1588 = v1825;
          swift_storeEnumTagMultiPayload();
          sub_24D907568((uint64_t)v1574, v1580);
          (*(void (**)(uint64_t, uint64_t))(v1829 + 8))(v1580, v1588);
          uint64_t v1589 = sub_24D9ACA64();
          sub_24D9126EC(v1574, v1589);
          if (v1565)
          {
            swift_release();
LABEL_643:
            v727 = *(void (**)(uint64_t, int *))(v1834 + 8);
            v728 = v1837;
            v727(v1821, v1837);
            v730 = *(void (**)(uint64_t, uint64_t))(v1800 + 8);
            uint64_t v729 = v1801;
            v730(v1798, v1801);
            goto LABEL_644;
          }
          uint64_t ItemMetadata = 0;
          swift_release();
          v1568 = v1837;
LABEL_647:
          v1490 = (void (*)(void, void, void))v1803;
          uint64_t v1567 = v1798;
        }
        else
        {
          uint64_t v1567 = v1798;
          v1568 = v1837;
        }
        v1590 = *(void (**)(uint64_t, int *))(v1834 + 8);
        v1590(v1821, v1568);
        v1591 = *(void (**)(uint64_t, uint64_t))(v1800 + 8);
        uint64_t v1592 = v1567;
        uint64_t v1593 = v1801;
        v1591(v1592, v1801);
        v1591((uint64_t)v1490, v1593);
        v1590((uint64_t)v1819, v1568);
LABEL_11:
        char v284 = 0;
        return v284 & 1;
      }
      uint64_t v1472 = v1801;
      if (v1138 != 2)
      {
LABEL_604:
        v1474 = v371;
        v1473 = (unsigned int (*)(char *, uint64_t, int *))v1818;
        v1490 = (void (*)(void, void, void))v331;
        goto LABEL_610;
      }
    }
    else
    {
      uint64_t v1472 = v1801;
      uint64_t v329 = v1805;
      if (v1138 != 2) {
        goto LABEL_604;
      }
    }
    uint64_t v1475 = (uint64_t)v1746;
    v1476 = v1819;
    ((void (*)(char *, char *, int *))v1794)(v1746, v1819, v1837);
    uint64_t Strong = (void *)swift_weakLoadStrong();
    if (!Strong)
    {
      __break(1u);
LABEL_722:

      __break(1u);
      __break(1u);
LABEL_723:

      __break(1u);
      __break(1u);
      goto LABEL_724;
    }
    uint64_t v1478 = (uint64_t)ItemMetadata;
    uint64_t v1479 = sub_24DBD44A4(v1475, Strong);
    uint64_t v1480 = v1832;
    uint64_t v860 = v1478;
    if (!v1478)
    {
      uint64_t v1482 = v1479;
      (*(void (**)(uint64_t, int *))(v1834 + 8))(v1475, v1837);
      swift_release();
      *(void *)&long long v1845 = v1839;
      *((void *)&v1845 + 1) = v1836;
      *(void *)&long long v1846 = v1838;
      *((void *)&v1846 + 1) = v1480;
      uint64_t v1483 = type metadata accessor for Job();
      uint64_t v1484 = MEMORY[0x253327DC0](v1482, v1483);
      uint64_t ItemMetadata = 0;
      if (!v1484)
      {
LABEL_602:
        swift_bridgeObjectRelease();
        v1474 = v1797;
        uint64_t v1472 = v1801;
        uint64_t v329 = v1805;
        v1490 = (void (*)(void, void, void))v1803;
        v1473 = (unsigned int (*)(char *, uint64_t, int *))v1818;
        goto LABEL_610;
      }
      uint64_t v1485 = 0;
      while (1)
      {
        v1486 = sub_24D4A445C(&v1845, v1485, v1482, v1483);
        uint64_t v1488 = *v1487;
        swift_retain();
        ((void (*)(long long *, void))v1486)(&v1845, 0);
        uint64_t v1489 = v1485 + 1;
        if (__OFADD__(v1485, 1)) {
          break;
        }
        sub_24D85246C((uint64_t)v1831, v1488);
        swift_release();
        ++v1485;
        if (v1489 == MEMORY[0x253327DC0](v1482, v1483)) {
          goto LABEL_602;
        }
      }
LABEL_665:
      __break(1u);
LABEL_666:
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v1702 + 6))(v1674, 1, v1735) == 1)
      {
        uint64_t v1332 = v1830;
        (*(void (**)(char *, uint64_t))(v1768 + 8))(v1675, v1830);
        (*(void (**)(char *, uint64_t))(v1698 + 8))(v1674, v1723);
      }
      else
      {
LABEL_686:
        uint64_t v1618 = v1735;
        (*((void (**)(char *, char *, uint64_t))v1702 + 4))(v1669, v1674, v1735);
        uint64_t v1619 = swift_getWitnessTable();
        if ((sub_24D98BC10(v1618, v1619) & 1) == 0)
        {
          char v1620 = v1669[*(int *)(v1735 + 48) + v1797[21]];
          if (!sub_24D3F0D84(v1620, 3) && !sub_24D3F0D84(v1620, 2))
          {
            *(void *)&long long v1845 = v1839;
            *((void *)&v1845 + 1) = v1836;
            *(void *)&long long v1846 = v1838;
            *((void *)&v1846 + 1) = v1832;
            uint64_t v1621 = type metadata accessor for Conflict.PopulateConflicts();
            uint64_t v1622 = sub_24D7C043C(v1621);
            uint64_t v1624 = sub_24DC098B0((uint64_t)v1819, v1622, v1623, 0x8000000);
            sub_24D85246C((uint64_t)v1831, v1624);
            swift_release();
          }
        }
        (*((void (**)(char *, uint64_t))v1702 + 1))(v1669, v1735);
        uint64_t v1332 = v1830;
        (*(void (**)(char *, uint64_t))(v1768 + 8))(v1675, v1830);
      }
      v1315 = v1837;
      uint64_t v1284 = v1934;
      continue;
    }
    break;
  }
  swift_release();
  v777 = *(void (**)(uint64_t, int *))(v1834 + 8);
  uint64_t v1481 = v1475;
  v779 = v1476;
  v778 = v1837;
  v777(v1481, v1837);
  v777(v1821, v778);
LABEL_242:
  v780 = *(void (**)(uint64_t, uint64_t))(v1800 + 8);
  uint64_t v781 = v1801;
  v780(v1798, v1801);
  v780((uint64_t)v1803, v781);
  v777((uint64_t)v779, v778);
  return v284 & 1;
}

uint64_t sub_24DBE4DC4(uint64_t a1)
{
  type metadata accessor for SnapshotItem();
  uint64_t v2 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - v3, a1, v2);
  return sub_24DCC9868();
}

uint64_t sub_24DBE4E9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SnapshotItem();
  uint64_t v3 = sub_24DCCA3F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v11[-v5];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(&v11[-v5], a1, v3);
  uint64_t v7 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v2) == 1)
  {
    char v8 = 4;
  }
  else
  {
    uint64_t WitnessTable = swift_getWitnessTable();
    char v8 = sub_24D98BCC4(v2, WitnessTable);
    uint64_t v4 = v7;
    uint64_t v3 = v2;
  }
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  v11[15] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B196E90);
  return sub_24DCC9868();
}

uint64_t sub_24DBE5040(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(*(void *)a2 + 96);
  long long v20 = *(_OWORD *)(*(void *)a2 + 80);
  long long v21 = v3;
  long long v22 = v20;
  long long v23 = v3;
  uint64_t v17 = type metadata accessor for ItemReconciliation();
  uint64_t v4 = sub_24DCCA3F8();
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v16 - v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v16 - v9;
  if (!sub_24D8903D0()) {
    goto LABEL_5;
  }
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, AssociatedTypeWitness);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
LABEL_5:
    char v13 = 1;
    return v13 & 1;
  }
  char v13 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  if (v13) {
    goto LABEL_5;
  }
  uint64_t v15 = v24;
  sub_24D4759C8(a1, (uint64_t)v6);
  if (!v15)
  {
    char v13 = (*(unsigned int (**)(char *, uint64_t))(*(void *)(v17 - 8) + 48))(v6, 1) != 1;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v19);
  }
  return v13 & 1;
}

unint64_t sub_24DBE533C(uint64_t a1, int a2, void *a3)
{
  LODWORD(v69) = a2;
  uint64_t v76 = a1;
  uint64_t v5 = (void *)*a3;
  uint64_t v6 = sub_24DCC9078();
  uint64_t v66 = *(void *)(v6 - 8);
  uint64_t v67 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v68 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void (*)(char *, uint64_t))v5[11];
  uint64_t v9 = v5[12];
  uint64_t v10 = v5[13];
  unint64_t v77 = v5[10];
  unint64_t v78 = (unint64_t)v8;
  uint64_t v70 = v10;
  uint64_t v71 = v8;
  uint64_t v79 = v9;
  uint64_t v80 = v10;
  uint64_t v11 = type metadata accessor for ItemReconciliation();
  uint64_t v12 = sub_24DCCA3F8();
  uint64_t v72 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v63 - v14;
  uint64_t v75 = v11;
  uint64_t v74 = *(void *)(v11 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v64 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v65 = (char *)&v63 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  long long v22 = (char *)&v63 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v73 = (char *)&v63 - v23;
  if (!sub_24D8903D0()) {
    return 0;
  }
  unint64_t v24 = a3[2];
  sub_24D4759C8(v76, (uint64_t)v15);
  if (!v3)
  {
    uint64_t v25 = v74;
    uint64_t v26 = v75;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v15, 1, v75) == 1)
    {
      unint64_t v24 = 0xD000000000000025;
      (*(void (**)(char *, uint64_t))(v72 + 8))(v15, v12);
      return v24;
    }
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v28 = v25;
    uint64_t v29 = v73;
    v27(v73, v15, v26);
    uint64_t v30 = v29;
    uint64_t v31 = type metadata accessor for ItemReconciliationHalf();
    uint64_t v32 = *(void *)&v29[*(int *)(v31 + 36)];
    if (v32)
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v26);
      return 0xD000000000000022;
    }
    uint64_t v33 = v31;
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    uint64_t v76 = v28 + 16;
    v34(v22, v30, v26);
    if ((v32 & 0x10) != 0)
    {
      BOOL v37 = sub_24DB86F3C(v26);
      uint64_t v38 = v22;
      uint64_t v36 = *(void (**)(char *, uint64_t))(v28 + 8);
      v36(v38, v26);
      if (!v37)
      {
        v36(v73, v26);
        return 0xD000000000000023;
      }
      uint64_t v30 = v73;
    }
    else
    {
      uint64_t v35 = v22;
      uint64_t v36 = *(void (**)(char *, uint64_t))(v28 + 8);
      v36(v35, v26);
    }
    if (v30[*(int *)(v33 + 52)])
    {
      uint64_t v39 = (uint64_t *)v75;
      uint64_t v40 = &v30[*(int *)(v75 + 52)];
      int v41 = v40[*(int *)(type metadata accessor for ItemReconciliationHalf() + 56)];
      if (v41 != 3)
      {
        if (v41 != 4)
        {
          unint64_t v77 = 0;
          unint64_t v78 = 0xE000000000000000;
          uint64_t v39 = (uint64_t *)&v77;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          unint64_t v77 = 0xD000000000000025;
          unint64_t v78 = 0x800000024DD0B190;
          switch(v41)
          {
            case 0:
            case 1:
            case 2:
            case 5:
              sub_24DCC9968();
              swift_bridgeObjectRelease();
              sub_24DCC9968();
              unint64_t v24 = v77;
              v36(v30, v75);
              return v24;
            case 3:
            case 4:
              __break(1u);
              JUMPOUT(0x24DBE5C24);
            default:
              break;
          }
        }
        uint64_t v42 = v30;
        uint64_t v43 = v39;
        goto LABEL_18;
      }
      int v45 = v69;
      v36(v30, (uint64_t)v39);
      if (v45 == 4) {
        return 0;
      }
      else {
        return 0xD00000000000003FLL;
      }
    }
    else
    {
      if (!sub_24D8903D0())
      {
        v36(v30, v75);
        return 0xD00000000000002BLL;
      }
      if (v69 == 4)
      {
        uint64_t v42 = v30;
        uint64_t v43 = (uint64_t *)v75;
LABEL_18:
        v36(v42, (uint64_t)v43);
        return 0;
      }
      if ((v30[*(int *)(v33 + 56)] | 2) == 6)
      {
        uint64_t v71 = v36;
        uint64_t v72 = 0;
        id v46 = (id)fpfs_current_or_default_log();
        uint64_t v47 = v68;
        sub_24DCC9088();
        uint64_t v48 = v65;
        uint64_t v49 = v75;
        v34(v65, v30, v75);
        uint64_t v50 = sub_24DCC9068();
        os_log_type_t v51 = sub_24DCCA138();
        if (os_log_type_enabled(v50, v51))
        {
          uint64_t v52 = v48;
          uint64_t v53 = (uint8_t *)swift_slowAlloc();
          uint64_t v70 = swift_slowAlloc();
          unint64_t v77 = v70;
          uint64_t v69 = v53;
          *(_DWORD *)uint64_t v53 = 136315138;
          uint64_t v63 = v53 + 4;
          uint64_t v54 = v64;
          v34(v64, v52, v49);
          uint64_t v55 = v52;
          uint64_t v56 = v71;
          v71(v55, v49);
          uint64_t v57 = sub_24DB8E8F4(v49);
          unint64_t v59 = v58;
          v56(v54, v49);
          uint64_t v81 = sub_24D418FB4(v57, v59, (uint64_t *)&v77);
          sub_24DCCA428();
          swift_bridgeObjectRelease();
          uint64_t v60 = v69;
          _os_log_impl(&dword_24D3D0000, v50, v51, "🤦🏼‍♂️  inconsistent children status for item %s", v69, 0xCu);
          uint64_t v61 = v70;
          swift_arrayDestroy();
          MEMORY[0x25332B030](v61, -1, -1);
          MEMORY[0x25332B030](v60, -1, -1);

          (*(void (**)(char *, uint64_t))(v66 + 8))(v68, v67);
          v56(v73, v49);
        }
        else
        {
          uint64_t v62 = v71;
          v71(v48, v49);

          (*(void (**)(char *, uint64_t))(v66 + 8))(v47, v67);
          v62(v30, v49);
        }
        return 0;
      }
      else
      {
        v36(v30, v75);
        return 0xD000000000000054;
      }
    }
  }
  return v24;
}

uint64_t sub_24DBE5C3C@<X0>(uint64_t (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, void *a6@<X5>, unint64_t *a7@<X8>)
{
  uint64_t v133 = a5;
  LODWORD(v130) = a4;
  int v132 = a3;
  uint64_t v154 = a2;
  uint64_t v138 = a1;
  uint64_t v140 = a7;
  uint64_t v8 = *a6;
  uint64_t v127 = type metadata accessor for ItemMetadata();
  MEMORY[0x270FA5388](v127);
  uint64_t v128 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(ValueMetadata **)(v8 + 96);
  uint64_t v135 = *(void *)(v8 + 80);
  uint64_t v136 = v10;
  uint64_t v11 = type metadata accessor for SnapshotItem();
  uint64_t v143 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v123 = (char *)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v141 = (char *)&v118 - v14;
  uint64_t v139 = v15;
  uint64_t v144 = sub_24DCCA3F8();
  uint64_t v142 = *(void *)(v144 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v144);
  uint64_t v129 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v137 = (char **)((char *)&v118 - v19);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v126 = (char *)&v118 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  unint64_t v134 = (unint64_t)&v118 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v125 = (char *)&v118 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v124 = (char *)&v118 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v118 - v29;
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v33 = (char *)&v118 - v32;
  uint64_t v34 = MEMORY[0x270FA5388](v31);
  uint64_t v36 = (char *)&v118 - v35;
  uint64_t v37 = MEMORY[0x270FA5388](v34);
  uint64_t v39 = (char *)&v118 - v38;
  MEMORY[0x270FA5388](v37);
  int v41 = (char *)&v118 - v40;
  uint64_t v42 = a6[4];
  uint64_t v43 = v145;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v42 + 240))(v154, 1);
  if (!v43)
  {
    uint64_t v118 = v36;
    uint64_t v119 = v30;
    uint64_t v120 = v33;
    uint64_t v121 = a6;
    uint64_t v145 = 0;
    uint64_t v131 = v41;
    uint64_t v45 = v142;
    uint64_t v47 = v142 + 16;
    id v46 = *(char ***)(v142 + 16);
    ((void (*)(char *, uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v46)(v39, v138, v144);
    uint64_t v48 = v143;
    uint64_t v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v143 + 48);
    uint64_t v50 = v139;
    uint64_t v122 = v143 + 48;
    uint64_t v138 = v49;
    if (v49(v39, 1, v139) == 1)
    {
      os_log_type_t v51 = *(void (**)(char *, uint64_t))(v45 + 8);
      uint64_t v142 = (v45 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v52 = v39;
      uint64_t v53 = v144;
      v51(v52, v144);
      ((void (*)(char **, char *, uint64_t))v46)(v137, v131, v53);
      uint64_t v54 = (uint64_t)v129;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v129, 1, 1, v50);
      BOOL v55 = sub_24D8903D0();
      uint64_t v56 = v136;
      uint64_t v57 = v140;
      unint64_t v58 = (char *)v137;
      uint64_t v59 = v135;
      sub_24DBD3BF0((uint64_t)v137, v54, v154, 0, v55 && (v133 & 0x400000) == 0, 0x6C6564206D657469, 0xEC00000064657465, v135, v140, v117, v136);
      v51((char *)v54, v53);
      v51(v58, v53);
      uint64_t v149 = v59;
      uint64_t v150 = v59;
      uint64_t v151 = v56;
      uint64_t v152 = v56;
      uint64_t v60 = type metadata accessor for ItemChange();
      (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v57, 0, 1, v60);
      return ((uint64_t (*)(char *, uint64_t))v51)(v131, v53);
    }
    uint64_t v137 = v46;
    uint64_t v61 = (uint64_t)v141;
    uint64_t v129 = *(char **)(v48 + 32);
    ((void (*)(char *, char *, uint64_t))v129)(v141, v39, v50);
    if (v130)
    {
      uint64_t v130 = v47;
      uint64_t v62 = v50;
    }
    else
    {
      uint64_t v71 = v145;
      unint64_t v72 = sub_24DBCE294(v61, v61 + *(int *)(v50 + 36), v132, v121);
      if (v71)
      {
        (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v61, v50);
        return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v131, v144);
      }
      uint64_t v74 = v73;
      uint64_t v62 = v50;
      uint64_t v145 = 0;
      if (v73)
      {
        unint64_t v134 = v72;
        if (!sub_24D8903D0()
          || (uint64_t v75 = v118,
              uint64_t v76 = v144,
              ((void (*)(char *, char *, uint64_t))v137)(v118, v131, v144),
              LODWORD(v138) = v138(v75, 1, v50),
              unint64_t v77 = *(void (**)(char *, uint64_t))(v142 + 8),
              v77(v75, v76),
              v138 == 1))
        {
          uint64_t v78 = (uint64_t)v120;
          uint64_t v79 = v144;
          ((void (*)(char *, char *, uint64_t))v137)(v120, v131, v144);
          uint64_t v80 = v143;
          uint64_t v81 = (uint64_t)v119;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v143 + 56))(v119, 1, 1, v62);
          BOOL v82 = sub_24D8903D0();
          uint64_t v83 = v135;
          sub_24DBD3BF0(v78, v81, v154, 0, v82, v134, v74, v135, v140, v117, v136);
          swift_bridgeObjectRelease();
          uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v142 + 8);
          v84(v81, v79);
          v84((uint64_t)v120, v79);
          (*(void (**)(char *, uint64_t))(v80 + 8))(v141, v139);
          uint64_t v149 = v83;
          uint64_t v150 = v83;
          uint64_t v151 = v136;
          uint64_t v152 = v136;
          uint64_t v85 = type metadata accessor for ItemChange();
          (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v140, 0, 1, v85);
          return ((uint64_t (*)(char *, uint64_t))v84)(v131, v79);
        }
        (*(void (**)(char *, uint64_t))(v143 + 8))(v141, v62);
        uint64_t v114 = v140;
        uint64_t v115 = v135;
        *uint64_t v140 = v134;
        v114[1] = v74;
        uint64_t v149 = v115;
        uint64_t v150 = v115;
        uint64_t v151 = v136;
        uint64_t v152 = v136;
        uint64_t v116 = type metadata accessor for ItemChange();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v114, 0, 1, v116);
        uint64_t v112 = v144;
        return ((uint64_t (*)(char *, uint64_t))v77)(v131, v112);
      }
      uint64_t v130 = v47;
    }
    uint64_t v63 = v144;
    uint64_t v64 = v131;
    uint64_t v65 = v134;
    uint64_t v66 = v128;
    sub_24D3F0BA0((uint64_t)&v141[*(int *)(v62 + 52)], (uint64_t)v148, &qword_26B197970);
    sub_24D3F0BA0((uint64_t)v148, (uint64_t)&v149, &qword_26B197970);
    if (sub_24D3F0D40((uint64_t)&v149) != 1)
    {
      uint64_t v67 = v124;
      ((void (*)(char *, char *, uint64_t))v137)(v124, v64, v63);
      int v68 = v138(v67, 1, v62);
      uint64_t v69 = v63;
      uint64_t v70 = *(void (**)(char *, uint64_t))(v142 + 8);
      v70(v67, v69);
      if (v68 != 1
        && (v138(v64, 1, v62)
         || (sub_24D3F0BA0((uint64_t)&v64[*(int *)(v62 + 52)], (uint64_t)v146, &qword_26B197970),
             sub_24D3F0BA0((uint64_t)v146, (uint64_t)v147, &qword_26B197970),
             sub_24D3F0D40((uint64_t)v147) == 1)))
      {
        if (!v138(v64, 1, v62))
        {
          uint64_t v113 = v145;
          (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v42 + 264))(v153, v154);
          uint64_t v145 = v113;
          uint64_t v66 = v128;
          if (v113)
          {
            (*(void (**)(char *, uint64_t))(v143 + 8))(v141, v62);
            return ((uint64_t (*)(char *, uint64_t))v70)(v131, v144);
          }
          sub_24D733474((uint64_t)v153, (uint64_t)&v131[*(int *)(v62 + 52)]);
          uint64_t v63 = v144;
          uint64_t v65 = v134;
          goto LABEL_20;
        }
        uint64_t v63 = v144;
      }
      else
      {
        uint64_t v63 = v144;
      }
      uint64_t v65 = v134;
      uint64_t v66 = v128;
    }
LABEL_20:
    uint64_t v86 = v125;
    ((void (*)(void))v137)();
    int v87 = v138(v86, 1, v62);
    uint64_t v88 = v127;
    uint64_t v89 = v63;
    if (v87 == 1)
    {
      uint64_t v90 = v142;
      uint64_t v91 = v89;
      (*(void (**)(char *, uint64_t))(v142 + 8))(v86, v89);
      uint64_t v92 = v136;
      uint64_t v93 = v143;
      uint64_t v94 = v141;
    }
    else
    {
      uint64_t v95 = (uint64_t)v66;
      uint64_t v91 = v89;
      uint64_t v96 = v86;
      uint64_t v97 = v123;
      ((void (*)(char *, char *, uint64_t))v129)(v123, v96, v62);
      sub_24D409F80((uint64_t)&v97[*(int *)(v62 + 48)], v95);
      uint64_t v93 = v143;
      (*(void (**)(char *, uint64_t))(v143 + 8))(v97, v62);
      uint64_t v98 = v88;
      char v99 = *(unsigned char *)(v95 + *(int *)(v88 + 48));
      sub_24D409FE4(v95);
      uint64_t v90 = v142;
      uint64_t v94 = v141;
      v141[*(int *)(v62 + 48) + *(int *)(v98 + 48)] = v99;
      uint64_t v65 = v134;
      uint64_t v92 = v136;
    }
    ((void (*)(uint64_t, char *, uint64_t))v137)(v65, v131, v91);
    uint64_t v100 = v65;
    uint64_t v101 = (uint64_t)v126;
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v126, v94, v62);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v93 + 56))(v101, 0, 1, v62);
    BOOL v102 = sub_24D8903D0();
    if (v132 == 4) {
      uint64_t v103 = 0x6F7270206D657469;
    }
    else {
      uint64_t v103 = 0x616863206D657469;
    }
    if (v132 == 4) {
      uint64_t v104 = 0xEF64657461676170;
    }
    else {
      uint64_t v104 = 0xEC0000006465676ELL;
    }
    int v105 = v102;
    uint64_t v106 = v100;
    uint64_t v107 = v135;
    sub_24DBD3BF0(v106, v101, v154, (v133 & 0x800400000) != 0, v105, v103, v104, v135, v140, v117, v92);
    swift_bridgeObjectRelease();
    unint64_t v77 = *(void (**)(char *, uint64_t))(v90 + 8);
    uint64_t v108 = v101;
    uint64_t v109 = v62;
    uint64_t v110 = v144;
    v77((char *)v108, v144);
    v77((char *)v134, v110);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v141, v109);
    v147[0] = v107;
    v147[1] = v107;
    v147[2] = v92;
    v147[3] = v92;
    uint64_t v111 = type metadata accessor for ItemChange();
    (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v140, 0, 1, v111);
    uint64_t v112 = v110;
    return ((uint64_t (*)(char *, uint64_t))v77)(v131, v112);
  }
  return result;
}

uint64_t sub_24DBE6988(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for JobLockRule();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v34 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v36 = (char *)&v32 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v32 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v37 = a2;
  if (!a2)
  {
LABEL_14:
    unint64_t v24 = 0xD000000000000016;
    sub_24D903CB0(0xD000000000000016, 0x800000024DD0BB70, 0, 2);
    return v24;
  }
  if (a3) {
    return 0;
  }
  uint64_t v33 = v15;
  swift_retain();
  uint64_t v18 = swift_bridgeObjectRetain();
  if (!MEMORY[0x253327DC0](v18, v6))
  {
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v26 = MEMORY[0x253327DC0](v25, v6);
    uint64_t v27 = v34;
    if (v26)
    {
      uint64_t v28 = 0;
      uint64_t v29 = (void (**)(char *, uint64_t))(v7 + 8);
      while (1)
      {
        char v30 = sub_24DCC9CB8();
        sub_24DCC9C68();
        if (v30)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v36, a1+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v28, v6);
          uint64_t v31 = v28 + 1;
          if (__OFADD__(v28, 1)) {
            goto LABEL_25;
          }
        }
        else
        {
          uint64_t result = sub_24DCCA778();
          if (v33 != 8) {
            goto LABEL_32;
          }
          uint64_t v38 = result;
          (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 16))(v36, &v38, v6);
          swift_unknownObjectRelease();
          uint64_t v31 = v28 + 1;
          if (__OFADD__(v28, 1))
          {
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v27, v36, v6);
        if (sub_24D575748()) {
          break;
        }
        (*v29)(v27, v6);
        ++v28;
        if (v31 == MEMORY[0x253327DC0](a1, v6)) {
          goto LABEL_26;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v38 = 0;
      uint64_t v39 = 0xE000000000000000;
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      swift_release();
      unint64_t v24 = v38;
      (*v29)(v27, v6);
      return v24;
    }
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v19 = 0;
  uint64_t v35 = (void (**)(char *, uint64_t *, uint64_t))(v7 + 16);
  uint64_t v20 = (void (**)(char *, uint64_t))(v7 + 8);
  while (1)
  {
    char v21 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v21)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v17, a1+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v19, v6);
      uint64_t v22 = v19 + 1;
      if (__OFADD__(v19, 1)) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
    uint64_t result = sub_24DCCA778();
    if (v33 != 8) {
      break;
    }
    uint64_t v38 = result;
    (*v35)(v17, &v38, v6);
    swift_unknownObjectRelease();
    uint64_t v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
LABEL_7:
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v17, v6);
    if (sub_24D57562C())
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = 0;
      uint64_t v39 = 0xE000000000000000;
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      unint64_t v24 = v38;
      sub_24D903CB0(v38, v39, 0, 2);
      swift_bridgeObjectRelease();
      swift_release();
      (*v20)(v14, v6);
      return v24;
    }
    (*v20)(v14, v6);
    ++v19;
    if (v22 == MEMORY[0x253327DC0](a1, v6)) {
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_24DBE6F14(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a3;
  uint64_t v43 = a4;
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(*a1 + 80);
  uint64_t v8 = *(void *)(*a1 + 96);
  uint64_t v9 = type metadata accessor for FileTreeWriter.FileTreeChange();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v44 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v38 - v13;
  uint64_t v15 = sub_24DCC9078();
  uint64_t v47 = *(void *)(v15 - 8);
  uint64_t v48 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void (**)(uint64_t))(v6 + 216);
  v6 += 216;
  uint64_t v45 = a1;
  v19(v16);
  sub_24D57A388(a2);
  swift_release();
  uint64_t v20 = *(void *)(v6 - 128);
  uint64_t v21 = *(void *)(v6 - 112);
  v51[0] = v7;
  v51[1] = v20;
  v51[2] = v8;
  v51[3] = v21;
  type metadata accessor for ConcreteJobResult();
  uint64_t v22 = (void *)sub_24D907530();
  id v23 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  unint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v24(v14, v50, v9);
  id v46 = v18;
  uint64_t v25 = sub_24DCC9068();
  os_log_type_t v26 = sub_24DCCA108();
  if (os_log_type_enabled(v25, v26))
  {
    os_log_t v41 = v25;
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    v51[0] = v40;
    uint64_t v42 = v22;
    *(_DWORD *)uint64_t v27 = 136446210;
    v38[1] = v27 + 4;
    uint64_t v39 = v27;
    uint64_t v28 = v44;
    v24(v44, (uint64_t)v14, v9);
    uint64_t v29 = *(void (**)(char *, uint64_t))(v10 + 8);
    v29(v14, v9);
    unint64_t v30 = sub_24D7CEE50(v9);
    unint64_t v32 = v31;
    v29(v28, v9);
    v51[5] = sub_24D418FB4(v30, v32, v51);
    uint64_t v22 = v42;
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    os_log_t v33 = v41;
    uint64_t v34 = v39;
    _os_log_impl(&dword_24D3D0000, v41, v26, "%{public}s", v39, 0xCu);
    uint64_t v35 = v40;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v35, -1, -1);
    MEMORY[0x25332B030](v34, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  }
  (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
  uint64_t v36 = v49;
  sub_24DBD1684(v50, 1, v22, v45);
  if (!v36) {
    sub_24D9126EC(v22, v43);
  }
  return swift_release();
}

uint64_t sub_24DBE7340()
{
  return 0x656D2D6863746566;
}

uint64_t sub_24DBE7364()
{
  if ((*(void *)(v0 + 136) & 0x10000) != 0) {
    return 3;
  }
  else {
    return 2 * ((*(void *)(v0 + 136) & 0x8008) != 0);
  }
}

uint64_t sub_24DBE7388(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v28 = a1;
  uint64_t v6 = type metadata accessor for JobLockRule();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_24DCCA3F8();
  uint64_t v24 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = *(void ***)(a2 + 32);
  uint64_t v14 = *(uint64_t (**)(uint64_t))(*v13[2] + 304);
  uint64_t v15 = swift_retain();
  LOBYTE(v14) = v14(v15);
  swift_release();
  if (v14) {
    return 0;
  }
  uint64_t v17 = (char *)v4 + *(void *)(*v4 + 576);
  uint64_t v16 = (uint64_t)v13;
  ((void (*)(char *))(*v13)[35])(v17);
  if (!v3)
  {
    swift_beginAccess();
    sub_24D73C78C((uint64_t)(v4 + 7), (uint64_t)v27);
    uint64_t v18 = v4[15];
    uint64_t v19 = &v8[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    (*(void (**)(char *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v8, v17, AssociatedTypeWitness);
    uint64_t v20 = v24;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v19, v12, v10);
    uint64_t v21 = v26;
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = sub_24D578CBC((uint64_t)v27, v18, (uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v21);
    sub_24D73C7F4((uint64_t)v27);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v10);
  }
  return v16;
}

uint64_t sub_24DBE76FC(void *a1, uint64_t a2, uint64_t a3, void (**a4)(char *, char *, void *, uint64_t, void, uint64_t (*)(uint64_t a1), void *), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v37 = a3;
  uint64_t v38 = a2;
  uint64_t v8 = *v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v43 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v45 = swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v39 = sub_24DCCA3F8();
  uint64_t v9 = *(void *)(v39 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v39);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v33 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v33 - v16;
  uint64_t v18 = v8;
  uint64_t v19 = (void *)a1[4];
  uint64_t v36 = (void *)v19[2];
  uint64_t v20 = (char *)v6 + *(void *)(v18 + 576);
  (*(void (**)(char *))(*v19 + 616))(v20);
  uint64_t v21 = v15;
  uint64_t v22 = v39;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v21, v39);
  uint64_t v23 = *(uint64_t (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v35 = v12;
  uint64_t v24 = v23(v12, v17, v22);
  uint64_t v25 = (void *)(*(uint64_t (**)(uint64_t))(*a1 + 272))(v24);
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = a1;
  void v26[3] = v6;
  uint64_t v27 = v41;
  v26[4] = v40;
  v26[5] = v27;
  uint64_t v28 = v36;
  v26[6] = v37;
  uint64_t v40 = (void (**)(char *, char *, void *, uint64_t, void, uint64_t (*)(uint64_t), void *))(*v28 + 504);
  uint64_t v34 = *v40;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v29 = v35;
  v34(v20, v35, v25, v38, 0, sub_24DC0D9DC, v26);
  swift_release();

  unint64_t v30 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v31 = v39;
  v30(v29, v39);
  return ((uint64_t (*)(char *, uint64_t))v30)(v17, v31);
}

uint64_t sub_24DBE7B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v37 = a6;
  uint64_t v30 = a5;
  uint64_t v31 = a4;
  uint64_t v32 = a3;
  uint64_t v11 = *(void **)a2;
  uint64_t v33 = *(void *)(*(void *)a2 + 80);
  uint64_t v34 = v11[12];
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v12 = sub_24DCCB058();
  uint64_t v29 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v28 - v15;
  uint64_t v17 = swift_allocObject();
  uint64_t v36 = v17;
  *(void *)(v17 + 16) = a3;
  *(void *)(v17 + 24) = a2;
  uint64_t v18 = swift_allocObject();
  uint64_t v35 = v18;
  *(void *)(v18 + 16) = a4;
  *(void *)(v18 + 24) = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
  unint64_t v19 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = (char *)swift_allocObject();
  *((void *)v23 + 2) = v33;
  *((void *)v23 + 3) = v11[11];
  *((void *)v23 + 4) = v34;
  *((void *)v23 + 5) = v11[13];
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v23[v19], v16, v29);
  uint64_t v24 = &v23[v20];
  uint64_t v25 = v30;
  *(void *)uint64_t v24 = v31;
  *((void *)v24 + 1) = v25;
  *(void *)&v23[v21] = v32;
  *(void *)&v23[v22] = a2;
  *(void *)&v23[(v22 + 15) & 0xFFFFFFFFFFFFFFF8] = v37;
  uint64_t v26 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D73C874, v36, (uint64_t)sub_24D73CC58, v35, (uint64_t)sub_24DC0DBE4, (uint64_t)v23, v26, MEMORY[0x263F8D310]);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24DBE7E24(char *a1, void (*a2)(uint64_t, uint64_t, unint64_t, void *), uint64_t a3, uint64_t *a4, void *a5, uint64_t a6)
{
  uint64_t v295 = a1;
  uint64_t v290 = a6;
  uint64_t v291 = a3;
  uint64_t v286 = a5;
  uint64_t v292 = a2;
  uint64_t v273 = (void *)*a4;
  uint64_t v7 = v273;
  uint64_t v257 = type metadata accessor for ItemMetadata();
  uint64_t v8 = MEMORY[0x270FA5388](v257);
  uint64_t v268 = (uint64_t *)((char *)&v245 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = v273[75];
  uint64_t v301 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v269 = (char *)&v245 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v272 = (char *)&v245 - v13;
  uint64_t v294 = a4;
  uint64_t v14 = v7[77];
  uint64_t v15 = type metadata accessor for FileTreeError();
  uint64_t v274 = sub_24DCCA3F8();
  uint64_t v275 = *(void *)(v274 - 8);
  MEMORY[0x270FA5388](v274);
  uint64_t v276 = (uint64_t)&v245 - v16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v277 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v18 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v256 = (char *)&v245 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v248 = (char *)&v245 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v267 = (char *)&v245 - v22;
  uint64_t v289 = v23;
  uint64_t v24 = sub_24DCCA3F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v250 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v265 = (char *)&v245 - v26;
  uint64_t v260 = v24;
  uint64_t v262 = *(void *)(v24 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v249 = (char *)&v245 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v261 = (char *)&v245 - v30;
  uint64_t v288 = v15;
  unint64_t v281 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v283 = (unsigned int (*)(id *, uint64_t, uint64_t))((char *)&v245 - v31);
  uint64_t v254 = sub_24DCC82A8();
  uint64_t v253 = *(void *)(v254 - 8);
  MEMORY[0x270FA5388](v254);
  uint64_t v252 = (char *)&v245 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_24DCC8288();
  char v284 = *(void (***)(char *, uint64_t))(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v245 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for SnapshotItem();
  uint64_t v279 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v264 = (char *)&v245 - v37;
  uint64_t v280 = v38;
  uint64_t v285 = sub_24DCCA3F8();
  uint64_t v287 = *(char **)(v285 - 8);
  uint64_t v39 = MEMORY[0x270FA5388](v285);
  uint64_t v255 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v245 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v247 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v245 - v42);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v266 = (char *)&v245 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v47 = (char *)&v245 - v46;
  MEMORY[0x270FA5388](v45);
  uint64_t v278 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v245 - v48);
  uint64_t v298 = v14;
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  uint64_t v282 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v49 = sub_24DCCB058();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v258 = (id *)((char *)&v245 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v51);
  uint64_t v54 = (id *)((char *)&v245 - v53);
  uint64_t v297 = sub_24DCCA3F8();
  uint64_t v300 = *(void (***)(char *, uint64_t))(v297 - 8);
  uint64_t v55 = MEMORY[0x270FA5388](v297);
  uint64_t v270 = (char *)&v245 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  uint64_t v271 = (char *)&v245 - v58;
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  uint64_t v61 = (char *)&v245 - v60;
  MEMORY[0x270FA5388](v59);
  uint64_t v62 = *(void (**)(void))(v301 + 56);
  uint64_t v299 = (char *)&v245 - v63;
  uint64_t v293 = v10;
  v62();
  uint64_t v251 = v50;
  uint64_t v64 = *(void (**)(id *, char *, uint64_t))(v50 + 16);
  v64(v54, v295, v49);
  uint64_t v259 = v49;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v77 = swift_retain();
      v292(v77, 0, 0, 0);
      swift_release_n();
      v300[1](v299, v297);
      return;
    }
    uint64_t v246 = v64;
    uint64_t v101 = v293;
    uint64_t v283 = *(unsigned int (**)(id *, uint64_t, uint64_t))(v301 + 48);
    if (v283(v54, 1, v293) == 1)
    {
      uint64_t v102 = v289;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      if ((*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v102, AssociatedConformanceWitness))
      {
        v300[1]((char *)v54, v297);
        uint64_t v104 = v101;
        uint64_t v70 = v298;
        goto LABEL_17;
      }
    }
    uint64_t v115 = v299;
    uint64_t v114 = v300;
    uint64_t v116 = (char *)v300[1];
    uint64_t v117 = v297;
    uint64_t v282 = (uint64_t)(v300 + 1);
    uint64_t v295 = v116;
    ((void (*)(char *, uint64_t))v116)(v299, v297);
    ((void (*)(char *, id *, uint64_t))v114[4])(v115, v54, v117);
    uint64_t v118 = (void (**)(char *, uint64_t))v114[2];
    uint64_t v300 = v114 + 2;
    char v284 = v118;
    ((void (*)(char *, char *, uint64_t))v118)(v61, v115, v117);
    uint64_t v119 = v278;
    sub_24D97D6D0((uint64_t)v61, v101, v298, (uint64_t)v278);
    uint64_t v120 = v287;
    uint64_t v121 = v285;
    (*((void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v287 + 2))(v47, v119, v285);
    uint64_t v122 = v279;
    uint64_t v123 = v280;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v279 + 48))(v47, 1, v280) == 1)
    {
      (*((void (**)(char *, uint64_t))v120 + 1))(v47, v121);
      unint64_t v281 = 0xEA00000000003E6CLL;
      uint64_t v276 = 0x696E3A6D6574693CLL;
    }
    else
    {
      uint64_t v124 = v264;
      (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v264, v47, v123);
      uint64_t v302 = 0;
      unint64_t v303 = 0xE000000000000000;
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      uint64_t v276 = v302;
      unint64_t v281 = v303;
      (*(void (**)(char *, uint64_t))(v122 + 8))(v124, v123);
    }
    uint64_t v125 = v290;
    uint64_t v126 = v272;
    uint64_t v127 = (uint64_t (*)(char *, uint64_t, uint64_t))v283;
    uint64_t v128 = v271;
    ((void (*)(char *, char *, uint64_t))v284)(v271, v299, v117);
    int v129 = v127(v128, 1, v101);
    uint64_t v130 = v298;
    if (v129 == 1)
    {
      ((void (*)(char *, uint64_t))v295)(v128, v117);
      uint64_t v131 = v270;
    }
    else
    {
      uint64_t v132 = v301;
      (*(void (**)(char *, char *, uint64_t))(v301 + 32))(v126, v128, v101);
      uint64_t v133 = *(char **)(v130 + 64);
      uint64_t v134 = v101;
      uint64_t v135 = v267;
      uint64_t v136 = v126;
      uint64_t v274 = v130 + 64;
      uint64_t v271 = v133;
      ((void (*)(uint64_t, uint64_t))v133)(v134, v130);
      uint64_t v137 = v294;
      uint64_t v138 = (uint64_t)v294 + *(void *)(*v294 + 576);
      uint64_t v139 = v289;
      swift_getAssociatedConformanceWitness();
      uint64_t v275 = v138;
      LOBYTE(v138) = sub_24DCC9798();
      uint64_t v266 = *(char **)(v277 + 8);
      ((void (*)(char *, uint64_t))v266)(v135, v139);
      if ((v138 & 1) == 0)
      {
        uint64_t v166 = v255;
        (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v279 + 56))(v255, 1, 1, v280);
        uint64_t v167 = v296;
        sub_24DBCB8D8(v166, v275, 0, 0, 0, v286, v137[15], v137[16], v137[17], v290);
        uint64_t v168 = v287;
        if (v167)
        {
          swift_bridgeObjectRelease();
          uint64_t v169 = (void (*)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))*((void *)v168 + 1);
          uint64_t v170 = v285;
          v169(v166, v285);
          (*(void (**)(char *, uint64_t))(v132 + 8))(v272, v134);
          v169(v278, v170);
        }
        else
        {
          uint64_t v198 = v137;
          uint64_t v199 = (void (**)(char *, uint64_t))*((void *)v287 + 1);
          v287 += 8;
          uint64_t v300 = v199;
          ((void (*)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v199)(v166, v285);
          unint64_t v200 = v273[76];
          uint64_t v201 = v273[78];
          uint64_t v302 = v134;
          unint64_t v303 = v200;
          uint64_t v202 = v298;
          uint64_t v304 = v298;
          uint64_t v305 = v201;
          uint64_t v296 = type metadata accessor for JobResult();
          uint64_t v302 = v134;
          unint64_t v303 = v200;
          uint64_t v304 = v202;
          uint64_t v305 = v201;
          type metadata accessor for Ingestion.FetchItemMetadata();
          uint64_t v203 = (uint64_t)v267;
          ((void (*)(uint64_t, uint64_t))v271)(v134, v202);
          uint64_t v204 = sub_24DC09748(v203, v198[15], v198[16], 2048, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
          uint64_t v205 = v289;
          ((void (*)(uint64_t, uint64_t))v266)(v203, v289);
          sub_24D85246C(v290, v204);
          swift_release();
          swift_getWitnessTable();
          uint64_t v206 = (void *)swift_allocError();
          uint64_t v208 = v207;
          swift_getTupleTypeMetadata2();
          uint64_t v209 = v277;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v277 + 16))(v208, v275, v205);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v209 + 56))(v208, 0, 1, v205);
          uint64_t v210 = v272;
          ((void (*)(uint64_t, uint64_t))v271)(v134, v202);
          swift_storeEnumTagMultiPayload();
          v292(0, v276, v281, v206);

          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v301 + 8))(v210, v134);
          ((void (*)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v300)(v278, v285);
        }
        uint64_t v193 = v299;
        uint64_t v194 = v297;
LABEL_58:
        ((void (*)(char *, uint64_t))v295)(v193, v194);
        return;
      }
      (*(void (**)(char *, uint64_t))(v132 + 8))(v136, v134);
      uint64_t v117 = v297;
      uint64_t v130 = v298;
      uint64_t v101 = v134;
      uint64_t v131 = v270;
      uint64_t v125 = v290;
      uint64_t v127 = (uint64_t (*)(char *, uint64_t, uint64_t))v283;
    }
    ((void (*)(char *, char *, uint64_t))v284)(v131, v299, v117);
    if (v127(v131, 1, v101) == 1)
    {
      ((void (*)(char *, uint64_t))v295)(v131, v117);
      uint64_t v140 = v296;
      uint64_t v141 = v294;
LABEL_43:
      uint64_t v183 = (uint64_t)v141 + *(void *)(*v141 + 576);
      if ((v141[17] & 0x10000) != 0) {
        int v184 = 3;
      }
      else {
        int v184 = 2 * ((v141[17] & 0x8008) != 0);
      }
      uint64_t v185 = v278;
      sub_24DBCB8D8(v278, v183, v184, 0, 0, v286, v141[15], v141[16], v141[17], v125);
      if (v140)
      {
        (*((void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v287 + 1))(v185, v285);
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v295)(v299, v117);
        return;
      }
      uint64_t v186 = v101;
      uint64_t v187 = v141[17];
      if ((v187 & 0x20000) != 0)
      {
        unint64_t v188 = v273[76];
        uint64_t v301 = v273[78];
        uint64_t v302 = v186;
        uint64_t v189 = v186;
        unint64_t v303 = v188;
        uint64_t v304 = v130;
        uint64_t v305 = v301;
        type metadata accessor for JobResult();
        uint64_t v302 = v189;
        unint64_t v303 = v188;
        uint64_t v304 = v130;
        uint64_t v305 = v301;
        uint64_t v117 = v297;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v190 = sub_24DC09748(v183, v141[15], v141[16], v187, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
        sub_24D85246C(v290, v190);
        swift_release();
      }
      v292(0, v276, v281, 0);
      swift_bridgeObjectRelease();
      uint64_t v191 = *(void (**)(uint64_t))(**(void **)(v286[4] + 16) + 848);
      uint64_t v192 = swift_retain();
      v191(v192);
      swift_release();
      (*((void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v287 + 1))(v185, v285);
      uint64_t v193 = v299;
      uint64_t v194 = v117;
      goto LABEL_58;
    }
    (*(void (**)(char *, char *, uint64_t))(v301 + 32))(v269, v131, v101);
    (*(void (**)(uint64_t, uint64_t))(v130 + 104))(v101, v130);
    sub_24DCC8C88();
    uint64_t v140 = v296;
    uint64_t v141 = v294;
    if ((~*(void *)&v142 & 0x7FF0000000000000) != 0)
    {
      if (v142 > -9.22337204e18)
      {
        if (v142 < 9.22337204e18)
        {
          int is_busy_date = fpfs_is_busy_date();
          sub_24D409FE4((uint64_t)v268);
          if (is_busy_date)
          {
            uint64_t v144 = v287;
            swift_getWitnessTable();
            uint64_t v145 = (void *)swift_allocError();
            swift_storeEnumTagMultiPayload();
            v292(0, v276, v281, v145);

            swift_bridgeObjectRelease();
            uint64_t v146 = *(void (**)(uint64_t))(**(void **)(v286[4] + 16) + 848);
            uint64_t v147 = swift_retain();
            v146(v147);
            swift_release();
            (*(void (**)(char *, uint64_t))(v301 + 8))(v269, v293);
            (*((void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v144 + 1))(v278, v285);
            ((void (*)(char *, uint64_t))v295)(v299, v117);
            return;
          }
          uint64_t v101 = v293;
          (*(void (**)(char *, uint64_t))(v301 + 8))(v269, v293);
          goto LABEL_43;
        }
LABEL_75:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_75;
  }
  uint64_t v246 = v64;
  id v65 = *v54;
  id v66 = *v54;
  sub_24DCC8158();
  sub_24DC0B794((unint64_t *)&qword_26B1943D0, MEMORY[0x263F06038]);
  char v67 = sub_24DCC86A8();

  v284[1](v35, v33);
  uint64_t v69 = v293;
  int v68 = v294;
  uint64_t v70 = v298;
  if (v67)
  {
    uint64_t v71 = (uint64_t)v294 + *(void *)(*v294 + 576);
    uint64_t v72 = v289;
    uint64_t v73 = swift_getAssociatedConformanceWitness();
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v73 + 72))(v72, v73))
    {

      uint64_t v74 = (uint64_t (*)(char *, uint64_t, uint64_t))v266;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v279 + 56))(v266, 1, 1, v280);
      uint64_t v75 = v286;
      uint64_t v76 = v296;
      sub_24DBCB8D8(v74, v71, 0, 0, 0, v286, v68[15], v68[16], v68[17], v290);
      (*((void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v287 + 1))(v74, v285);
      if (!v76)
      {
        sub_24DCC8158();
        sub_24D5F77E0(MEMORY[0x263F8EE78]);
        sub_24DC0B794((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
        uint64_t v161 = v252;
        uint64_t v162 = v254;
        sub_24DCC8808();
        uint64_t v163 = (void *)sub_24DCC8128();
        (*(void (**)(char *, uint64_t))(v253 + 8))(v161, v162);
        v292(0, 0, 0, v163);

        uint64_t v164 = *(void (**)(uint64_t))(**(void **)(v75[4] + 16) + 848);
        uint64_t v165 = swift_retain();
        v164(v165);
        swift_release();
      }
      goto LABEL_66;
    }
  }
  id v306 = v65;
  id v78 = v65;
  uint64_t v79 = (char *)v283;
  uint64_t v80 = v288;
  if (!swift_dynamicCast()) {
    goto LABEL_61;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v148 = swift_getAssociatedTypeWitness();
    uint64_t v149 = swift_getAssociatedTypeWitness();
    uint64_t v150 = swift_getAssociatedConformanceWitness();
    uint64_t v151 = swift_getAssociatedConformanceWitness();
    uint64_t v302 = v148;
    unint64_t v303 = v149;
    uint64_t v304 = v150;
    uint64_t v305 = v151;
    type metadata accessor for FileItemVersion();
    uint64_t v152 = sub_24DCCA3F8();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
    uint64_t v153 = v289;
    uint64_t v301 = v152;
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    uint64_t v155 = (char *)v283;
    uint64_t v287 = (char *)v283 + *(int *)(TupleTypeMetadata3 + 48);

    uint64_t v156 = v277;
    uint64_t v157 = v256;
    (*(void (**)(char *, char *, uint64_t))(v277 + 32))(v256, v155, v153);
    uint64_t v158 = swift_getAssociatedConformanceWitness();
    char v159 = sub_24DCC9798();
    (*(void (**)(char *, uint64_t))(v156 + 8))(v157, v153);
    if ((v159 & 1) == 0)
    {
      (*(void (**)(char *))(*(void *)(v301 - 8) + 8))(v287);
      uint64_t v69 = v293;
      int v68 = v294;
      uint64_t v80 = v288;
      goto LABEL_61;
    }
    uint64_t v160 = v301;
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v158 + 64))(v153, v158) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(*(void *)(v160 - 8) + 8))(v287, v160);
      uint64_t v69 = v293;
      uint64_t v80 = v288;
      goto LABEL_60;
    }

    (*(void (**)(char *, uint64_t))(*(void *)(v160 - 8) + 8))(v287, v160);
    uint64_t v104 = v293;
LABEL_17:
    int v105 = v294;
    unint64_t v106 = v273[76];
    uint64_t v107 = v273[78];
    uint64_t v302 = v104;
    unint64_t v303 = v106;
    uint64_t v304 = v70;
    uint64_t v305 = v107;
    type metadata accessor for JobResult();
    uint64_t v302 = v104;
    unint64_t v303 = v106;
    uint64_t v304 = v70;
    uint64_t v305 = v107;
    type metadata accessor for Ingestion.FetchItemMetadata();
    uint64_t v108 = (uint64_t)v105 + *(void *)(*v105 + 576);
    uint64_t v109 = sub_24DC09748(v108, v105[15], v105[16], v105[17], (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
    sub_24D85246C(v290, v109);
    swift_release();
    uint64_t v110 = v258;
    uint64_t v111 = v259;
    v246(v258, v295, v259);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      id v112 = *v110;
      id v113 = *v110;
      v292(0, 0, 0, v112);
    }
    else
    {
      (*(void (**)(id *, uint64_t))(v251 + 8))(v110, v111);
      swift_getWitnessTable();
      uint64_t v301 = swift_allocError();
      uint64_t v172 = v171;
      uint64_t v173 = swift_getAssociatedTypeWitness();
      uint64_t v174 = swift_getAssociatedTypeWitness();
      uint64_t v175 = swift_getAssociatedConformanceWitness();
      uint64_t v176 = swift_getAssociatedConformanceWitness();
      uint64_t v302 = v173;
      unint64_t v303 = v174;
      uint64_t v304 = v175;
      uint64_t v305 = v176;
      uint64_t v177 = type metadata accessor for FileItemVersion();
      sub_24DCCA3F8();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
      uint64_t v178 = v289;
      uint64_t v179 = swift_getTupleTypeMetadata3();
      uint64_t v180 = v172 + *(int *)(v179 + 48);
      uint64_t v181 = *(int *)(v179 + 64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v277 + 16))(v172, v108, v178);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v177 - 8) + 56))(v180, 1, 1, v177);
      *(void *)(v172 + v181) = 0;
      swift_storeEnumTagMultiPayload();
      id v112 = (id)v301;
      v292(0, 0, 0, (void *)v301);
    }
    uint64_t v182 = v112;
    goto LABEL_65;
  }
  if (EnumCaseMultiPayload != 4)
  {
    (*(void (**)(char *, uint64_t))(v281 + 8))(v79, v80);
LABEL_61:

    uint64_t v302 = (uint64_t)v65;
    id v211 = v65;
    uint64_t v212 = v276;
    int v213 = swift_dynamicCast();
    uint64_t v214 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v281 + 56);
    uint64_t v215 = (void (**)(uint64_t, uint64_t))(v275 + 8);
    if (v213)
    {
      v214(v212, 0, 1, v80);
      (*v215)(v212, v274);
      id v216 = v65;
      v292(0, 0, 0, v65);

      uint64_t v217 = *(void (**)(uint64_t))(**(void **)(v286[4] + 16) + 848);
      uint64_t v218 = swift_retain();
      v217(v218);
      swift_release();
    }
    else
    {
      v214(v212, 1, 1, v80);
      (*v215)(v212, v274);
      unint64_t v219 = v273[76];
      uint64_t v220 = v273[78];
      uint64_t v302 = v69;
      unint64_t v303 = v219;
      uint64_t v304 = v70;
      uint64_t v305 = v220;
      type metadata accessor for JobResult();
      uint64_t v302 = v69;
      unint64_t v303 = v219;
      uint64_t v304 = v70;
      uint64_t v305 = v220;
      type metadata accessor for Ingestion.FetchItemMetadata();
      uint64_t v221 = sub_24DC09748((uint64_t)v68 + *(void *)(*v68 + 576), v68[15], v68[16], v68[17], (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
      sub_24D85246C(v290, v221);
      swift_release();
      id v222 = v65;
      v292(0, 0, 0, v65);
    }
    uint64_t v182 = v65;
LABEL_65:

LABEL_66:
    v300[1](v299, v297);
    return;
  }
  uint64_t v82 = v260;
  uint64_t v83 = v289;
  uint64_t v270 = (char *)swift_getTupleTypeMetadata2();
  uint64_t v295 = &v79[*((int *)v270 + 12)];
  uint64_t v84 = v277;
  uint64_t v85 = *(char **)(v277 + 16);
  uint64_t v86 = v261;
  uint64_t v278 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)v68 + *(void *)(*v68 + 576));
  uint64_t v272 = (char *)(v277 + 16);
  uint64_t v271 = v85;
  ((void (*)(char *))v85)(v261);
  int v87 = *(void **)(v84 + 56);
  uint64_t v269 = (char *)(v84 + 56);
  uint64_t v268 = v87;
  ((void (*)(char *, void, uint64_t, uint64_t))v87)(v86, 0, 1, v83);
  uint64_t v88 = v265;
  uint64_t v89 = &v265[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v90 = v262;
  char v284 = *(void (***)(char *, uint64_t))(v262 + 16);
  ((void (*)(char *, char *, uint64_t))v284)(v265, v86, v82);
  uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v90 + 32);
  uint64_t v301 = (uint64_t)v89;
  uint64_t v92 = v89;
  uint64_t v93 = v82;
  uint64_t v94 = v88;
  v91(v92, (char *)v283, v93);
  uint64_t v95 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
  if (v95((uint64_t)v94, 1, v83) != 1)
  {
    uint64_t v195 = v249;
    ((void (*)(char *, char *, uint64_t))v284)(v249, v94, v93);
    uint64_t v196 = v301;
    if (v95(v301, 1, v83) != 1)
    {
      uint64_t v223 = v277;
      uint64_t v224 = v267;
      char v284 = *(void (***)(char *, uint64_t))(v277 + 32);
      ((void (*)(char *, uint64_t, uint64_t))v284)(v267, v196, v83);
      swift_getAssociatedConformanceWitness();
      uint64_t v225 = v83;
      LODWORD(v301) = sub_24DCC9798();
      uint64_t v197 = *(void (**)(char *, uint64_t))(v223 + 8);
      v197(v224, v83);
      uint64_t v226 = v93;
      uint64_t v227 = *(void (**)(char *, uint64_t))(v262 + 8);
      v227(v261, v226);
      v197(v195, v225);
      v227(v265, v226);
      if (v301)
      {

        uint64_t v83 = v289;
        char v99 = v295;
        uint64_t v100 = v284;
        goto LABEL_69;
      }
      uint64_t v83 = v289;
      char v99 = v295;
      goto LABEL_54;
    }
    (*(void (**)(char *, uint64_t))(v262 + 8))(v261, v93);
    uint64_t v98 = v277;
    (*(void (**)(char *, uint64_t))(v277 + 8))(v195, v83);
    char v99 = v295;
LABEL_53:
    (*(void (**)(char *, uint64_t))(v250 + 8))(v265, TupleTypeMetadata2);
    uint64_t v197 = *(void (**)(char *, uint64_t))(v98 + 8);
LABEL_54:
    v197(v99, v83);
    uint64_t v69 = v293;
    uint64_t v80 = v288;
    uint64_t v70 = v298;
LABEL_60:
    int v68 = v294;
    goto LABEL_61;
  }
  uint64_t v96 = *(void (**)(char *, uint64_t))(v90 + 8);
  v96(v86, v93);
  unsigned int v97 = v95(v301, 1, v83);
  uint64_t v98 = v277;
  char v99 = v295;
  if (v97 != 1) {
    goto LABEL_53;
  }
  v96(v265, v93);

  uint64_t v100 = *(void (***)(char *, uint64_t))(v98 + 32);
LABEL_69:
  uint64_t v228 = (uint64_t)v248;
  ((void (*)(char *, char *, uint64_t))v100)(v248, v99, v83);
  uint64_t v229 = v247;
  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v279 + 56))(v247, 1, 1, v280);
  uint64_t v230 = v83;
  uint64_t v231 = v294;
  uint64_t v232 = v290;
  uint64_t v233 = v278;
  uint64_t v234 = v296;
  sub_24DBCB8D8(v229, (uint64_t)v278, 0, 0, 0, v286, v294[15], v294[16], v294[17], v290);
  uint64_t v296 = v234;
  (*((void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v287 + 1))(v229, v285);
  if (!v234)
  {
    unint64_t v235 = v273[76];
    uint64_t v236 = v273[78];
    uint64_t v237 = v293;
    uint64_t v302 = v293;
    unint64_t v303 = v235;
    uint64_t v238 = v298;
    uint64_t v304 = v298;
    uint64_t v305 = v236;
    uint64_t v301 = type metadata accessor for JobResult();
    uint64_t v302 = v237;
    unint64_t v303 = v235;
    uint64_t v304 = v238;
    uint64_t v305 = v236;
    type metadata accessor for Ingestion.FetchItemMetadata();
    uint64_t v239 = sub_24DC09748(v228, v231[15], v231[16], 2048, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
    sub_24D85246C(v232, v239);
    swift_release();
    swift_getWitnessTable();
    uint64_t v240 = (void *)swift_allocError();
    uint64_t v242 = v241;
    uint64_t v243 = v241 + *((int *)v270 + 12);
    uint64_t v244 = (void (*)(uint64_t, uint64_t, uint64_t))v271;
    ((void (*)(uint64_t, uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v271)(v241, v233, v230);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v268)(v242, 0, 1, v230);
    v244(v243, v228, v230);
    swift_storeEnumTagMultiPayload();
    v292(0, 0, 0, v240);
  }
  (*(void (**)(uint64_t, uint64_t))(v277 + 8))(v228, v230);
  v300[1](v299, v297);
}

uint64_t sub_24DBEA630@<X0>(uint64_t a1@<X8>)
{
  return sub_24DC01508(a1);
}

uint64_t type metadata accessor for Ingestion.FetchItemMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24DBEA654()
{
  return 0x6F632D6863746566;
}

uint64_t sub_24DBEA688(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v42 = a1;
  uint64_t v5 = *v2;
  uint64_t v38 = type metadata accessor for JobLockRule();
  uint64_t v41 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)v36 - v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_24DCCA3F8();
  uint64_t v39 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v36 - v9;
  uint64_t v11 = type metadata accessor for SnapshotItem();
  uint64_t v12 = sub_24DCCA3F8();
  uint64_t v37 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v36 - v13;
  uint64_t v15 = v5;
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v17 = (char *)v3 + *(void *)(v15 + 576);
  uint64_t v18 = v44;
  (*(void (**)(char *, uint64_t))(*(void *)v16 + 240))(v17, 1);
  if (!v18)
  {
    v36[0] = v17;
    v36[1] = 0;
    uint64_t v19 = AssociatedTypeWitness;
    uint64_t v44 = v10;
    uint64_t v20 = v38;
    uint64_t v21 = (char *)v3 + *(void *)(*v3 + 632);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v37 + 40))(v21, v14, v12);
    swift_endAccess();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v21, 1, v11))
    {
      uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
      uint64_t v23 = 1;
      uint64_t v24 = v20;
      uint64_t v25 = v8;
      uint64_t v26 = v44;
    }
    else
    {
      uint64_t v27 = &v21[*(int *)(v11 + 36)];
      uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
      uint64_t v26 = v44;
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v44, v27, AssociatedTypeWitness);
      uint64_t v23 = 0;
      uint64_t v24 = v20;
      uint64_t v25 = v8;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v26, v23, 1, v19);
    uint64_t v28 = v26;
    swift_beginAccess();
    sub_24D73C78C((uint64_t)(v3 + 7), (uint64_t)v43);
    uint64_t v29 = v19;
    uint64_t v30 = v3[15];
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v32 = (uint64_t)v40;
    uint64_t v33 = &v40[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, void, uint64_t))(v22 + 16))(v40, v36[0], v29);
    uint64_t v34 = v39;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v33, v28, v25);
    swift_storeEnumTagMultiPayload();
    uint64_t v8 = sub_24D578CBC((uint64_t)v43, v30, v32);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v32, v24);
    sub_24D73C7F4((uint64_t)v43);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v25);
  }
  return v8;
}

uint64_t sub_24DBEAB88(uint64_t a1, int a2, int a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v62 = a6;
  uint64_t v63 = a8;
  uint64_t v66 = a7;
  uint64_t v61 = a4;
  int v64 = a3;
  int v65 = a2;
  uint64_t v57 = a1;
  uint64_t v68 = a11;
  uint64_t v12 = *v11;
  uint64_t v59 = a5;
  uint64_t v60 = v12;
  uint64_t v58 = *(void *)(v12 + 616);
  uint64_t v13 = *(void *)(v12 + 600);
  uint64_t v50 = a10;
  uint64_t v51 = a9;
  uint64_t v54 = v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v70 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v72 = swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v14 = sub_24DCCA3F8();
  uint64_t v48 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v53 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v45 - v16;
  uint64_t v49 = (char *)&v45 - v16;
  swift_getTupleTypeMetadata2();
  uint64_t v18 = sub_24DCCA3F8();
  uint64_t v47 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v45 - v21;
  BOOL v52 = (a9 & 0x4400000000) != 0;
  uint64_t v23 = swift_allocObject();
  uint64_t v56 = v23;
  uint64_t v24 = v66;
  uint64_t v25 = v67;
  *(void *)(v23 + 16) = v67;
  *(void *)(v23 + 24) = v24;
  uint64_t v26 = swift_allocObject();
  uint64_t v55 = v26;
  uint64_t v27 = v68;
  *(void *)(v26 + 16) = a10;
  *(void *)(v26 + 24) = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v57, v18);
  uint64_t v28 = v15;
  uint64_t v46 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v59, v14);
  unint64_t v29 = (*(unsigned __int8 *)(v19 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v30 = (v20 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (*(unsigned __int8 *)(v28 + 80) + v33 + 20) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v35 = (char *)swift_allocObject();
  uint64_t v36 = v60;
  *((void *)v35 + 2) = v54;
  *((void *)v35 + 3) = *(void *)(v36 + 608);
  *((void *)v35 + 4) = v58;
  *((void *)v35 + 5) = *(void *)(v36 + 624);
  *((void *)v35 + 6) = v25;
  uint64_t v37 = v61;
  *((void *)v35 + 7) = v61;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v35[v29], v22, v47);
  uint64_t v38 = v62;
  *(void *)&v35[v30] = v62;
  *(void *)&v35[v31] = v66;
  *(void *)&v35[v32] = v63;
  uint64_t v39 = &v35[v33];
  uint64_t v40 = v68;
  *(void *)uint64_t v39 = v50;
  *((void *)v39 + 1) = v40;
  v39[16] = BYTE3(v51) & 1;
  v39[17] = v52;
  v39[18] = v64;
  v39[19] = v65;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v35[v34], v49, v48);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  id v41 = v37;
  uint64_t v42 = type metadata accessor for Continuation();
  id v43 = v38;
  swift_retain();
  sub_24D6E9F88((uint64_t)"handle(reply:strictVersioning:itemUnchanged:error:lastKnownVersion:request:db:result:reason:completion:)", 104, 2u, (uint64_t)sub_24D73C874, v56, (uint64_t)sub_24D73CC58, v55, (uint64_t)sub_24DC0D1A0, (uint64_t)v35, v42, MEMORY[0x263F8D310]);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24DBEB0B0(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t (*a7)(void, uint64_t, uint64_t, void *), uint64_t a8, char a9, unsigned __int8 a10, unsigned __int8 a11, char a12, uint64_t a13)
{
  uint64_t v622 = a8;
  v632 = a7;
  uint64_t v637 = a6;
  uint64_t v652 = a5;
  id v626 = a4;
  uint64_t v649 = a2;
  uint64_t v650 = a3;
  uint64_t v13 = a1;
  uint64_t v14 = *a1;
  uint64_t v15 = *(void *)(*a1 + 616);
  uint64_t v16 = *(void **)(*a1 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v565 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v18 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  v564 = (char *)&v549 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  char v570 = (char *)&v549 - v21;
  uint64_t v627 = *(v16 - 1);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  unint64_t v562 = (char *)&v549 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v571 = (char *)&v549 - v24;
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  uint64_t v567 = AssociatedTypeWitness;
  uint64_t v656 = AssociatedTypeWitness;
  unint64_t v657 = v25;
  uint64_t v563 = AssociatedConformanceWitness;
  uint64_t v658 = AssociatedConformanceWitness;
  uint64_t v659 = v27;
  uint64_t v28 = type metadata accessor for FileItemVersion();
  uint64_t v591 = sub_24DCCA3F8();
  uint64_t v590 = *(void *)(v591 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v591);
  uint64_t v573 = (char *)&v549 - v30;
  uint64_t v579 = v28;
  uint64_t v577 = *(void *)(v28 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  char v566 = (char *)&v549 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  v576 = (char *)&v549 - v33;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v641 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  int v607 = (_OWORD *)((char *)&v549 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v35);
  uint64_t v612 = (uint64_t *)((char *)&v549 - v37);
  uint64_t v38 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v38 - 8);
  v611 = (char *)&v549 - v39;
  uint64_t v593 = sub_24DCC9078();
  uint64_t v592 = *(void *)(v593 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v593);
  v585 = (char *)&v549 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  v582 = (char *)&v549 - v42;
  id v43 = *(void (**)(void))(v14 + 624);
  unint64_t v44 = *(void *)(v14 + 608);
  uint64_t v45 = swift_getAssociatedTypeWitness();
  uint64_t v602 = *(void *)(v45 - 8);
  uint64_t v46 = MEMORY[0x270FA5388](v45);
  v568 = (char *)&v549 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v561 = v47;
  MEMORY[0x270FA5388](v46);
  uint64_t v572 = (char *)&v549 - v48;
  uint64_t v606 = type metadata accessor for SnapshotItem();
  uint64_t v618 = sub_24DCCA3F8();
  uint64_t v619 = *(void *)(v618 - 8);
  uint64_t v49 = MEMORY[0x270FA5388](v618);
  char v604 = (char *)&v549 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  v625 = (char *)&v549 - v52;
  MEMORY[0x270FA5388](v51);
  uint64_t v578 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v549 - v53);
  uint64_t v54 = swift_getAssociatedTypeWitness();
  uint64_t v55 = sub_24DCCA3F8();
  uint64_t v594 = swift_getTupleTypeMetadata2();
  uint64_t v581 = *(void *)(v594 - 8);
  uint64_t v56 = MEMORY[0x270FA5388](v594);
  uint64_t v620 = (uint64_t)&v549 - v57;
  uint64_t v603 = v55;
  uint64_t v595 = *(void *)(v55 - 8);
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  v580 = (char *)&v549 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  uint64_t v596 = (char *)&v549 - v61;
  uint64_t v644 = v54;
  v643 = *(void (**)(char *, char *, uint64_t))(v54 - 8);
  uint64_t v62 = MEMORY[0x270FA5388](v60);
  uint64_t v583 = (uint64_t)&v549 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = MEMORY[0x270FA5388](v62);
  uint64_t v605 = (char *)&v549 - v65;
  MEMORY[0x270FA5388](v64);
  uint64_t v588 = (char *)&v549 - v66;
  uint64_t v621 = type metadata accessor for FileTreeError();
  uint64_t v587 = *(void *)(v621 - 8);
  MEMORY[0x270FA5388](v621);
  uint64_t v623 = (char *)&v549 - v67;
  uint64_t v634 = v45;
  uint64_t v601 = sub_24DCCA3F8();
  uint64_t v600 = *(void *)(v601 - 8);
  uint64_t v68 = MEMORY[0x270FA5388](v601);
  uint64_t v575 = (char *)&v549 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v68);
  v599 = (char *)&v549 - v70;
  uint64_t v642 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v617 = *(void *)(v642 - 8);
  uint64_t v71 = MEMORY[0x270FA5388](v642);
  uint64_t v598 = (char *)&v549 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v71);
  v608 = (char *)&v549 - v73;
  uint64_t v656 = (uint64_t)v16;
  unint64_t v657 = v44;
  uint64_t v658 = v15;
  uint64_t v659 = (uint64_t)v43;
  uint64_t v629 = type metadata accessor for ReconciliationMutation();
  uint64_t v630 = *(void *)(v629 - 8);
  MEMORY[0x270FA5388](v629);
  v628 = (char *)&v549 - v74;
  uint64_t v615 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v614 = *(void *)(v615 - 8);
  MEMORY[0x270FA5388](v615);
  v616 = (char *)&v549 - v75;
  uint64_t v651 = (void (*)(void, void, void))v16;
  uint64_t v656 = (uint64_t)v16;
  unint64_t v657 = v44;
  unint64_t v639 = v44;
  uint64_t v640 = v43;
  uint64_t v646 = v15;
  uint64_t v658 = v15;
  uint64_t v659 = (uint64_t)v43;
  uint64_t v647 = (void *)type metadata accessor for ItemReconciliation();
  uint64_t v76 = sub_24DCCA3F8();
  uint64_t v77 = *(void *)(v76 - 8);
  uint64_t v78 = MEMORY[0x270FA5388](v76);
  uint64_t v574 = (char *)&v549 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = MEMORY[0x270FA5388](v78);
  char v586 = (char *)&v549 - v81;
  uint64_t v82 = MEMORY[0x270FA5388](v80);
  uint64_t v597 = (char *)&v549 - v83;
  uint64_t v84 = MEMORY[0x270FA5388](v82);
  v631 = (char *)&v549 - v85;
  uint64_t v86 = MEMORY[0x270FA5388](v84);
  v613 = (char *)&v549 - v87;
  uint64_t v88 = MEMORY[0x270FA5388](v86);
  *(void *)&long long v624 = (char *)&v549 - v89;
  uint64_t v90 = MEMORY[0x270FA5388](v88);
  uint64_t v92 = (char *)&v549 - v91;
  MEMORY[0x270FA5388](v90);
  uint64_t v653 = (char *)&v549 - v93;
  uint64_t v645 = TupleTypeMetadata2;
  uint64_t v636 = sub_24DCCA3F8();
  uint64_t v94 = *(void *)(v636 - 8);
  uint64_t v95 = MEMORY[0x270FA5388](v636);
  v589 = (char *)&v549 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = MEMORY[0x270FA5388](v95);
  uint64_t v560 = (char *)&v549 - v98;
  uint64_t v99 = MEMORY[0x270FA5388](v97);
  uint64_t v100 = MEMORY[0x270FA5388](v99);
  uint64_t v584 = (char *)&v549 - v101;
  uint64_t v102 = MEMORY[0x270FA5388](v100);
  uint64_t v104 = (char *)&v549 - v103;
  uint64_t v105 = MEMORY[0x270FA5388](v102);
  uint64_t v610 = (char *)&v549 - v106;
  uint64_t v107 = MEMORY[0x270FA5388](v105);
  uint64_t v609 = (char *)&v549 - v108;
  uint64_t v109 = MEMORY[0x270FA5388](v107);
  uint64_t v111 = (char *)&v549 - v110;
  uint64_t v112 = MEMORY[0x270FA5388](v109);
  uint64_t v114 = (char *)&v549 - v113;
  MEMORY[0x270FA5388](v112);
  uint64_t v116 = (char *)&v549 - v115;
  char v117 = *((unsigned char *)v13 + 136);
  uint64_t v633 = v94;
  uint64_t v569 = v118;
  if ((v117 & 1) == 0) {
    goto LABEL_2;
  }
  if (v649)
  {
    if (v626)
    {
      BOOL v119 = objc_msgSend(v626, sel_requestedExtent) != (id)-1;
      goto LABEL_6;
    }
LABEL_2:
    BOOL v119 = 0;
LABEL_6:
    uint64_t v120 = v652;
    uint64_t v121 = (uint64_t)v653;
    goto LABEL_7;
  }
  uint64_t v556 = v104;
  v557 = v13;
  uint64_t v635 = v76;
  uint64_t v638 = v77;
  uint64_t v134 = v650;
  uint64_t v135 = v636;
  id v626 = *(id *)(v94 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v626)((char *)&v549 - v115, v650, v636);
  uint64_t v559 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v641 + 48);
  if (v559(v116, 1, v645) == 1)
  {
    uint64_t v136 = *(void (**)(char *, uint64_t))(v94 + 8);
    v136(v116, v135);
    ((void (*)(char *, uint64_t, uint64_t))v626)(v114, v134, v135);
LABEL_19:
    uint64_t v77 = v638;
    v136(v114, v135);
    BOOL v119 = 0;
    goto LABEL_20;
  }
  uint64_t v150 = *((void *)v116 + 1);
  unint64_t v151 = *((void *)v116 + 2);
  LODWORD(v558) = v116[40];
  sub_24D416034(v150, v151);
  uint64_t v152 = *(void (**)(void, void))(v627 + 8);
  v152(&v116[*(int *)(v645 + 48)], v651);
  ((void (*)(char *, uint64_t, uint64_t))v626)(v114, v134, v135);
  if (v558 == 1)
  {
    uint64_t v136 = *(void (**)(char *, uint64_t))(v633 + 8);
    goto LABEL_19;
  }
  uint64_t v198 = v152;
  uint64_t v199 = v633;
  (*(void (**)(char *, char *, uint64_t))(v633 + 32))(v111, v114, v135);
  if (v559(v111, 1, v645) != 1)
  {
    uint64_t v222 = *((void *)v111 + 3);
    char v223 = v111[40];
    sub_24D416034(*((void *)v111 + 1), *((void *)v111 + 2));
    v198(&v111[*(int *)(v645 + 48)], v651);
    uint64_t v76 = v635;
    uint64_t v121 = (uint64_t)v653;
    BOOL v119 = (v223 & 1) != 0 || v222 != -1;
    uint64_t v77 = v638;
    goto LABEL_21;
  }
  (*(void (**)(char *, uint64_t))(v199 + 8))(v111, v135);
  BOOL v119 = 1;
  uint64_t v77 = v638;
LABEL_20:
  uint64_t v76 = v635;
  uint64_t v121 = (uint64_t)v653;
LABEL_21:
  uint64_t v13 = v557;
  uint64_t v120 = v652;
  uint64_t v104 = v556;
LABEL_7:
  uint64_t v122 = v648;
  uint64_t v123 = v120[2];
  uint64_t v124 = (uint64_t *)((char *)v13 + *(void *)(*v13 + 576));
  sub_24D4759C8((uint64_t)v124, v121);
  if (v122) {
    return;
  }
  BOOL v552 = v119;
  uint64_t v550 = v123;
  v648 = (void (*)(void, void))v124;
  v557 = v13;
  id v626 = 0;
  int v551 = a10;
  uint64_t v125 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
  uint64_t v126 = v121;
  uint64_t v559 = (unsigned int (*)(char *, uint64_t, uint64_t))(v77 + 16);
  char v558 = v125;
  v125(v92, v121, v76);
  uint64_t v127 = v647;
  uint64_t v128 = *(v647 - 1);
  int v129 = *(unsigned int (**)(char *, uint64_t, void *))(v128 + 48);
  uint64_t v555 = v128 + 48;
  uint64_t v554 = v129;
  unsigned int v130 = v129(v92, 1, v647);
  uint64_t v638 = v77;
  uint64_t v635 = v76;
  uint64_t v556 = v104;
  uint64_t v553 = v128;
  if (v130 == 1)
  {
    (*(void (**)(char *, uint64_t))(v77 + 8))(v92, v76);
    uint64_t v132 = v650;
    uint64_t v131 = (uint64_t)v651;
    uint64_t v133 = (char *)v126;
  }
  else
  {
    uint64_t v137 = v614;
    uint64_t v138 = v76;
    uint64_t v139 = v616;
    uint64_t v140 = v615;
    (*(void (**)(char *, char *, uint64_t))(v614 + 16))(v616, v92, v615);
    (*(void (**)(char *, void *))(v128 + 8))(v92, v127);
    int v141 = v139[*(int *)(v140 + 52)];
    double v142 = v139;
    uint64_t v76 = v138;
    (*(void (**)(char *, uint64_t))(v137 + 8))(v142, v140);
    uint64_t v132 = v650;
    uint64_t v131 = (uint64_t)v651;
    uint64_t v143 = v642;
    uint64_t v133 = (char *)v126;
    if (!v141) {
      goto LABEL_27;
    }
  }
  BOOL v144 = sub_24D8903D0();
  uint64_t v145 = v624;
  uint64_t v146 = v558;
  v558((char *)v624, (uint64_t)v133, v76);
  if (v144)
  {
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v145, v76);
    goto LABEL_25;
  }
  uint64_t v147 = v613;
  v146(v613, v145, v76);
  uint64_t v148 = v647;
  if (v554(v147, 1, v647) == 1)
  {
    uint64_t v149 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
    v149(v145, v76);
    v149((uint64_t)v147, v76);
    uint64_t v132 = v650;
  }
  else
  {
    int v153 = v147[*((int *)v148 + 14)];
    (*(void (**)(char *, void *))(v553 + 8))(v147, v148);
    if (v153 == 4)
    {
      __break(1u);
      goto LABEL_184;
    }
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v145, v76);
    if (v153 == 2) {
      goto LABEL_25;
    }
  }
  if ((v557[17] & 1) == 0)
  {
LABEL_25:
    uint64_t v656 = v131;
    unint64_t v657 = v639;
    uint64_t v658 = v646;
    uint64_t v659 = (uint64_t)v640;
    type metadata accessor for JobResult();
    uint64_t v154 = v644;
    uint64_t v155 = swift_getAssociatedConformanceWitness();
    unint64_t v156 = v634;
    uint64_t v157 = swift_getAssociatedConformanceWitness();
    uint64_t v656 = v154;
    unint64_t v657 = v156;
    uint64_t v658 = v155;
    uint64_t v659 = v157;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v158 = swift_getTupleTypeMetadata2();
    uint64_t v159 = (uint64_t)v628;
    uint64_t v160 = &v628[*(int *)(v158 + 48)];
    (*((void (**)(char *, void (*)(void, void), uint64_t))v643 + 2))(v628, v648, v154);
    swift_storeEnumTagMultiPayload();
    char v161 = 2;
LABEL_26:
    char *v160 = v161;
    swift_storeEnumTagMultiPayload();
    uint64_t v162 = v629;
    swift_storeEnumTagMultiPayload();
    sub_24D907568(v637, v159);
    (*(void (**)(uint64_t, uint64_t))(v630 + 8))(v159, v162);
    uint64_t v133 = v653;
    uint64_t v76 = v635;
    uint64_t v77 = v638;
    uint64_t v132 = v650;
    uint64_t v131 = (uint64_t)v651;
    uint64_t v143 = v642;
LABEL_27:
    uint64_t v163 = (void *)v649;
    uint64_t v164 = v631;
    if (v649) {
      goto LABEL_28;
    }
    goto LABEL_70;
  }
  if (v552)
  {
    uint64_t v656 = v131;
    unint64_t v657 = v639;
    uint64_t v658 = v646;
    uint64_t v659 = (uint64_t)v640;
    type metadata accessor for JobResult();
    uint64_t v193 = v644;
    uint64_t v194 = swift_getAssociatedConformanceWitness();
    unint64_t v195 = v634;
    uint64_t v196 = swift_getAssociatedConformanceWitness();
    uint64_t v656 = v193;
    unint64_t v657 = v195;
    uint64_t v658 = v194;
    uint64_t v659 = v196;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v197 = swift_getTupleTypeMetadata2();
    uint64_t v159 = (uint64_t)v628;
    uint64_t v160 = &v628[*(int *)(v197 + 48)];
    (*((void (**)(char *, void (*)(void, void), uint64_t))v643 + 2))(v628, v648, v193);
    swift_storeEnumTagMultiPayload();
    char v161 = 4;
    goto LABEL_26;
  }
  uint64_t v210 = (void *)v649;
  if (v649)
  {
    uint64_t v656 = v131;
    unint64_t v657 = v639;
    uint64_t v658 = v646;
    uint64_t v659 = (uint64_t)v640;
    uint64_t v650 = type metadata accessor for JobResult();
    uint64_t v211 = v644;
    uint64_t v212 = v131;
    uint64_t v213 = swift_getAssociatedConformanceWitness();
    unint64_t v214 = v634;
    uint64_t v215 = swift_getAssociatedConformanceWitness();
    uint64_t v656 = v211;
    unint64_t v657 = v214;
    uint64_t v658 = v213;
    uint64_t v659 = v215;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v216 = swift_getTupleTypeMetadata2();
    uint64_t v217 = (uint64_t)v628;
    uint64_t v218 = &v628[*(int *)(v216 + 48)];
    (*((void (**)(char *, void (*)(void, void), uint64_t))v643 + 2))(v628, v648, v211);
    swift_storeEnumTagMultiPayload();
    *uint64_t v218 = 0;
    uint64_t v131 = v212;
    uint64_t v163 = v210;
    uint64_t v219 = v638;
    swift_storeEnumTagMultiPayload();
    uint64_t v220 = v629;
    swift_storeEnumTagMultiPayload();
    sub_24D907568(v637, v217);
    uint64_t v221 = v217;
    uint64_t v77 = v219;
    (*(void (**)(uint64_t, uint64_t))(v630 + 8))(v221, v220);
    uint64_t v133 = v653;
    uint64_t v76 = v635;
    uint64_t v143 = v642;
    uint64_t v164 = v631;
LABEL_28:
    v558(v164, (uint64_t)v133, v76);
    uint64_t v165 = v647;
    if (v554(v164, 1, v647) == 1)
    {
      (*(void (**)(char *, uint64_t))(v77 + 8))(v164, v76);
      uint64_t v166 = v632;
      goto LABEL_34;
    }
    uint64_t v167 = v617;
    uint64_t v168 = *(void (**)(char *, char *, uint64_t))(v617 + 16);
    uint64_t v169 = v608;
    v168(v608, &v164[*((int *)v165 + 13)], v143);
    uint64_t v170 = *(void (**)(char *, void *))(v553 + 8);
    v170(v164, v165);
    uint64_t v171 = v165;
    int v172 = v169[*(int *)(v143 + 44)];
    uint64_t v173 = v143;
    uint64_t v176 = *(void (**)(char *, uint64_t))(v167 + 8);
    uint64_t v175 = v167 + 8;
    uint64_t v174 = v176;
    v176(v169, v173);
    if (v172)
    {
      uint64_t v166 = v632;
      uint64_t v76 = v635;
      uint64_t v133 = v653;
      goto LABEL_32;
    }
    uint64_t v617 = v175;
    uint64_t v650 = v652[3];
    unint64_t v200 = v597;
    v558(v597, (uint64_t)v653, v635);
    if (v554(v200, 1, v171) != 1)
    {
      uint64_t v201 = v598;
      uint64_t v202 = v642;
      v168(v598, &v200[*((int *)v171 + 13)], v642);
      v170(v200, v171);
      uint64_t v203 = v599;
      (*(void (**)(char *, char *, uint64_t))(v600 + 16))(v599, v201, v601);
      v174(v201, v202);
      uint64_t v204 = v602;
      unint64_t v205 = v634;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v602 + 48))(v203, 1, v634) != 1)
      {
        uint64_t v656 = v639;
        unint64_t v657 = (unint64_t)v651;
        uint64_t v206 = v646;
        uint64_t v658 = (uint64_t)v640;
        uint64_t v659 = v646;
        uint64_t v207 = type metadata accessor for Materialization.MaterializeItem();
        id v208 = v626;
        char v209 = (*(uint64_t (**)(char *, uint64_t, void))(*(void *)v650 + 280))(v203, v207, 0);
        uint64_t v133 = v653;
        id v626 = v208;
        if (v208)
        {
          (*(void (**)(char *, uint64_t))(v638 + 8))(v653, v635);
          (*(void (**)(char *, unint64_t))(v204 + 8))(v203, v205);
          return;
        }
        char v257 = v209;
        (*(void (**)(char *, unint64_t))(v204 + 8))(v203, v205);
        if ((v257 & 1) == 0)
        {
          int v417 = v651;
          uint64_t v656 = (uint64_t)v651;
          unint64_t v657 = v639;
          uint64_t v658 = v206;
          uint64_t v659 = (uint64_t)v640;
          uint64_t v650 = type metadata accessor for JobResult();
          uint64_t v418 = v644;
          uint64_t v419 = swift_getAssociatedConformanceWitness();
          uint64_t v420 = swift_getAssociatedConformanceWitness();
          uint64_t v656 = v418;
          unint64_t v657 = v205;
          uint64_t v658 = v419;
          uint64_t v659 = v420;
          type metadata accessor for ReconciliationID();
          type metadata accessor for ReconciliationSideMutation();
          uint64_t v421 = swift_getTupleTypeMetadata2();
          uint64_t v422 = (uint64_t)v628;
          v423 = &v628[*(int *)(v421 + 48)];
          (*((void (**)(char *, void (*)(void, void), uint64_t))v643 + 2))(v628, v648, v418);
          swift_storeEnumTagMultiPayload();
          *(_WORD *)v423 = 768;
          *(_OWORD *)(v423 + 8) = *(_OWORD *)(v557 + 15);
          swift_storeEnumTagMultiPayload();
          uint64_t v424 = v629;
          swift_storeEnumTagMultiPayload();
          sub_24D907568(v637, v422);
          (*(void (**)(uint64_t, uint64_t))(v630 + 8))(v422, v424);
          uint64_t v166 = v632;
          uint64_t v76 = v635;
          uint64_t v131 = (uint64_t)v417;
          goto LABEL_33;
        }
        uint64_t v166 = v632;
        uint64_t v76 = v635;
LABEL_32:
        uint64_t v131 = (uint64_t)v651;
LABEL_33:
        uint64_t v163 = (void *)v649;
LABEL_34:
        uint64_t v654 = (uint64_t)v163;
        id v177 = v163;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
        uint64_t v178 = v621;
        int v179 = swift_dynamicCast();
        uint64_t v180 = v620;
        if (v179)
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
              uint64_t v181 = v644;
              uint64_t v182 = v591;
              TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
              int v184 = v623;
              uint64_t v650 = (uint64_t)&v623[*(int *)(TupleTypeMetadata3 + 48)];

              uint64_t v185 = (void (**)(char *, uint64_t))v643;
              uint64_t v186 = v588;
              (*((void (**)(char *, unsigned char *, uint64_t))v643 + 4))(v588, v184, v181);
              uint64_t v187 = v646;
              swift_getAssociatedConformanceWitness();
              unint64_t v188 = v648;
              LOBYTE(v184) = sub_24DCC9798();
              v185[1](v186, v181);
              if (v184)
              {
                uint64_t v189 = v651;
                unint64_t v191 = v639;
                uint64_t v190 = v640;
                uint64_t v656 = (uint64_t)v651;
                unint64_t v657 = v639;
                uint64_t v658 = v187;
                uint64_t v659 = (uint64_t)v640;
                type metadata accessor for JobResult();
                uint64_t v656 = (uint64_t)v189;
                unint64_t v657 = v191;
                uint64_t v658 = v187;
                uint64_t v659 = (uint64_t)v190;
                type metadata accessor for Ingestion.FetchItemMetadata();
                uint64_t v192 = sub_24DC09748((uint64_t)v188, v557[15], v557[16], 0x2000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
                sub_24D85246C(v637, v192);
                swift_release();
                v632(0, 0, 0, (void *)v649);
                (*(void (**)(char *, uint64_t))(v638 + 8))(v653, v76);
                (*(void (**)(uint64_t, uint64_t))(v590 + 8))(v650, v182);
                goto LABEL_160;
              }
              (*(void (**)(uint64_t, uint64_t))(v590 + 8))(v650, v182);
              uint64_t v133 = v653;
              uint64_t v163 = (void *)v649;
              uint64_t v166 = v632;
              uint64_t v131 = (uint64_t)v651;
              break;
            case 4u:
              uint64_t v224 = v603;
              uint64_t v225 = v644;
              uint64_t v647 = &v623[*(int *)(swift_getTupleTypeMetadata2() + 48)];
              uint64_t v226 = v643;
              uint64_t v227 = v596;
              (*((void (**)(char *, void (*)(void, void), uint64_t))v643 + 2))(v596, v648, v225);
              (*((void (**)(char *, void, uint64_t, uint64_t))v226 + 7))(v227, 0, 1, v225);
              uint64_t v228 = v180 + *(int *)(v594 + 48);
              uint64_t v229 = v227;
              uint64_t v230 = v595;
              uint64_t v645 = *(void *)(v595 + 16);
              ((void (*)(uint64_t, char *, uint64_t))v645)(v180, v229, v224);
              uint64_t v231 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v230 + 32);
              uint64_t v650 = v228;
              uint64_t v232 = v224;
              uint64_t v233 = v180;
              v231(v228, v623, v232);
              uint64_t v234 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((void *)v226 + 6);
              if (v234(v233, 1, v225) == 1)
              {
                unint64_t v235 = *(void (**)(char *, uint64_t))(v230 + 8);
                uint64_t v236 = v603;
                v235(v596, v603);
                if (v234(v650, 1, v644) == 1)
                {
                  v235((char *)v620, v236);
                  uint64_t v237 = (void (*)(uint64_t, void *, uint64_t))*((void *)v643 + 4);
                  uint64_t v238 = v647;
LABEL_140:
                  uint64_t v435 = v583;
                  uint64_t v436 = v644;
                  v237(v583, v238, v644);
                  uint64_t v437 = v578;
                  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(*(void *)(v606 - 8) + 56))(v578, 1, 1);
                  uint64_t v438 = v557;
                  uint64_t v439 = v637;
                  id v440 = v626;
                  sub_24DBCB8D8(v437, (uint64_t)v648, 0, 0, 0, v652, v557[15], v557[16], v557[17], v637);
                  uint64_t v441 = v653;
                  id v626 = v440;
                  if (v440)
                  {
                    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v619 + 8))(v437, v618);
                    (*((void (**)(uint64_t, uint64_t))v643 + 1))(v435, v436);
                    v387 = *(void (**)(char *, uint64_t))(v638 + 8);
                    int v388 = v441;
LABEL_119:
                    uint64_t v389 = v76;
LABEL_120:
                    v387(v388, v389);
LABEL_160:

                    return;
                  }
                  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v619 + 8))(v437, v618);
                  v456 = v651;
                  unint64_t v458 = v639;
                  v457 = v640;
                  uint64_t v656 = (uint64_t)v651;
                  unint64_t v657 = v639;
                  uint64_t v459 = v646;
                  uint64_t v658 = v646;
                  uint64_t v659 = (uint64_t)v640;
                  type metadata accessor for JobResult();
                  uint64_t v656 = (uint64_t)v456;
                  unint64_t v657 = v458;
                  uint64_t v658 = v459;
                  uint64_t v659 = (uint64_t)v457;
                  type metadata accessor for Ingestion.FetchItemMetadata();
                  uint64_t v460 = v583;
                  uint64_t v461 = sub_24DC09748(v583, v438[15], v438[16], 2048, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
                  sub_24D85246C(v439, v461);
                  swift_release();
                  v632(0, 0, 0, (void *)v649);
                  (*((void (**)(uint64_t, uint64_t))v643 + 1))(v460, v436);
                  v387 = *(void (**)(char *, uint64_t))(v638 + 8);
                  int v388 = v441;
LABEL_171:
                  uint64_t v389 = v635;
                  goto LABEL_120;
                }
              }
              else
              {
                v354 = v580;
                uint64_t v355 = v603;
                ((void (*)(char *, uint64_t, uint64_t))v645)(v580, v233, v603);
                uint64_t v356 = v650;
                uint64_t v357 = v644;
                if (v234(v650, 1, v644) != 1)
                {
                  unint64_t v432 = v643;
                  v433 = v605;
                  uint64_t v645 = *((void *)v643 + 4);
                  ((void (*)(char *, uint64_t, uint64_t))v645)(v605, v356, v357);
                  swift_getAssociatedConformanceWitness();
                  LODWORD(v650) = sub_24DCC9798();
                  uint64_t v358 = (void (*)(char *, uint64_t))*((void *)v432 + 1);
                  v358(v433, v357);
                  uint64_t v434 = *(void (**)(char *, uint64_t))(v595 + 8);
                  v434(v596, v355);
                  v358(v354, v357);
                  v434((char *)v620, v355);
                  if (v650)
                  {
                    uint64_t v76 = v635;
                    uint64_t v238 = v647;
                    uint64_t v237 = (void (*)(uint64_t, void *, uint64_t))v645;
                    goto LABEL_140;
                  }
                  uint64_t v76 = v635;
LABEL_105:
                  uint64_t v131 = (uint64_t)v651;
                  v358((char *)v647, v644);
                  uint64_t v166 = v632;
                  uint64_t v133 = v653;
                  uint64_t v163 = (void *)v649;
                  break;
                }
                (*(void (**)(char *, uint64_t))(v595 + 8))(v596, v355);
                (*((void (**)(char *, uint64_t))v643 + 1))(v354, v357);
              }
              (*(void (**)(uint64_t, uint64_t))(v581 + 8))(v620, v594);
              uint64_t v358 = (void (*)(char *, uint64_t))*((void *)v643 + 1);
              goto LABEL_105;
            case 5u:
              char v239 = *v623;
              if (sub_24D8903D0())
              {
                uint64_t v240 = v638;
              }
              else
              {
                if ((v239 & a9) == 1)
                {
                  if (v551)
                  {
                    uint64_t v392 = v637;
                    (*(void (**)(unint64_t, unint64_t))(*(void *)v637 + 168))(0xD000000000000053, 0x800000024DD22F20);
                    uint64_t v656 = (uint64_t)v651;
                    unint64_t v657 = v639;
                    uint64_t v658 = v646;
                    uint64_t v659 = (uint64_t)v640;
                    uint64_t v650 = type metadata accessor for JobResult();
                    uint64_t v393 = v76;
                    uint64_t v394 = v644;
                    uint64_t v395 = swift_getAssociatedConformanceWitness();
                    unint64_t v396 = v634;
                    uint64_t v397 = swift_getAssociatedConformanceWitness();
                    uint64_t v656 = v394;
                    unint64_t v657 = v396;
                    uint64_t v658 = v395;
                    uint64_t v659 = v397;
                    type metadata accessor for ReconciliationID();
                    uint64_t v398 = swift_getTupleTypeMetadata3();
                    uint64_t v399 = *(int *)(v398 + 48);
                    uint64_t v400 = *(int *)(v398 + 64);
                    uint64_t v401 = (uint64_t)v628;
                    uint64_t v402 = v394;
                    uint64_t v76 = v393;
                    (*((void (**)(char *, void (*)(void, void), uint64_t))v643 + 2))(v628, v648, v402);
                    swift_storeEnumTagMultiPayload();
                    *(void *)(v401 + v399) = 1;
                    uint64_t v133 = v653;
                    *(void *)(v401 + v400) = 0;
                    uint64_t v403 = v629;
                    swift_storeEnumTagMultiPayload();
                    sub_24D907568(v392, v401);
                    (*(void (**)(uint64_t, uint64_t))(v630 + 8))(v401, v403);
                  }
                  v404 = v575;
                  id v405 = v626;
                  (*(void (**)(void (*)(void, void)))(*(void *)v550 + 160))(v648);
                  id v626 = v405;
                  if (v405)
                  {
LABEL_62:
                    uint64_t v240 = v638;
LABEL_145:
                    (*(void (**)(char *, uint64_t))(v240 + 8))(v133, v76);
                    goto LABEL_160;
                  }
                  uint64_t v406 = v602;
                  unint64_t v407 = v634;
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v602 + 48))(v404, 1, v634) != 1)
                  {
                    uint64_t v499 = *(void (**)(char *, char *, unint64_t))(v406 + 32);
                    uint64_t v647 = (void *)(v406 + 32);
                    uint64_t v650 = (uint64_t)v499;
                    v499(v572, v404, v407);
                    uint64_t v500 = v651;
                    uint64_t v656 = (uint64_t)v651;
                    unint64_t v657 = v639;
                    uint64_t v658 = v646;
                    uint64_t v659 = (uint64_t)v640;
                    uint64_t v645 = type metadata accessor for JobResult();
                    uint64_t v501 = v644;
                    uint64_t v502 = swift_getAssociatedConformanceWitness();
                    uint64_t v503 = swift_getAssociatedConformanceWitness();
                    uint64_t v656 = v501;
                    unint64_t v657 = v407;
                    uint64_t v658 = v502;
                    uint64_t v659 = v503;
                    type metadata accessor for ReconciliationID();
                    uint64_t v504 = swift_getTupleTypeMetadata3();
                    uint64_t v505 = *(int *)(v504 + 48);
                    uint64_t v506 = *(int *)(v504 + 64);
                    uint64_t v507 = (uint64_t)v628;
                    (*((void (**)(char *, void (*)(void, void), uint64_t))v643 + 2))(v628, v648, v501);
                    swift_storeEnumTagMultiPayload();
                    *(void *)(v507 + v505) = 2;
                    *(void *)(v507 + v506) = 0;
                    uint64_t v508 = v629;
                    swift_storeEnumTagMultiPayload();
                    sub_24D907568(v637, v507);
                    (*(void (**)(uint64_t, uint64_t))(v630 + 8))(v507, v508);
                    v648 = *(void (**)(void, void))(v652[5] + 16);
                    uint64_t v509 = v602;
                    uint64_t v510 = v634;
                    (*(void (**)(char *, char *, uint64_t))(v602 + 16))(v568, v572, v634);
                    unint64_t v511 = (*(unsigned __int8 *)(v509 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v509 + 80);
                    unint64_t v512 = (v561 + v511 + 7) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v513 = (v512 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v514 = (v513 + 23) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v515 = v500;
                    unint64_t v516 = (v514 + 15) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v517 = (void *)swift_allocObject();
                    unint64_t v518 = v639;
                    v517[2] = v515;
                    v517[3] = v518;
                    uint64_t v519 = v640;
                    v517[4] = v646;
                    v517[5] = v519;
                    ((void (*)(char *, char *, uint64_t))v650)((char *)v517 + v511, v568, v510);
                    *(void *)((char *)v517 + v512) = v652;
                    uint64_t v520 = (void *)((char *)v517 + v513);
                    uint64_t v521 = v622;
                    *uint64_t v520 = v632;
                    v520[1] = v521;
                    *(void *)((char *)v517 + v514) = v637;
                    *(void *)((char *)v517 + v516) = v557;
                    v523 = v648;
                    v522 = (void *)v649;
                    *(void *)((char *)v517 + ((v516 + 15) & 0xFFFFFFFFFFFFFFF8)) = v649;
                    uint64_t v524 = *(void (**)(char *, uint64_t, uint64_t (*)(void *), void *))(*(void *)v523 + 736);
                    id v525 = v522;
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    int v526 = v572;
                    v524(v572, 2, sub_24DC0D4CC, v517);
                    swift_release();
                    swift_release();
                    (*(void (**)(char *, uint64_t))(v602 + 8))(v526, v634);
                    v387 = *(void (**)(char *, uint64_t))(v638 + 8);
                    int v388 = v653;
                    goto LABEL_171;
                  }
                  (*(void (**)(char *, uint64_t))(v600 + 8))(v404, v601);
                  uint64_t v408 = v640;
                  uint64_t v131 = (uint64_t)v651;
                }
                else
                {
                  uint64_t v408 = v640;
                }
                uint64_t v656 = v131;
                unint64_t v657 = v639;
                uint64_t v658 = v646;
                uint64_t v659 = (uint64_t)v408;
                type metadata accessor for JobResult();
                uint64_t v442 = v644;
                uint64_t v443 = swift_getAssociatedConformanceWitness();
                unint64_t v444 = v634;
                uint64_t v445 = swift_getAssociatedConformanceWitness();
                uint64_t v656 = v442;
                unint64_t v657 = v444;
                uint64_t v658 = v443;
                uint64_t v659 = v445;
                type metadata accessor for ReconciliationID();
                type metadata accessor for ReconciliationSideMutation();
                uint64_t v446 = swift_getTupleTypeMetadata2();
                uint64_t v447 = (uint64_t)v628;
                v448 = &v628[*(int *)(v446 + 48)];
                (*((void (**)(char *, void (*)(void, void), uint64_t))v643 + 2))(v628, v648, v442);
                swift_storeEnumTagMultiPayload();
                *(_WORD *)v448 = 768;
                *(_OWORD *)(v448 + 8) = *(_OWORD *)(v557 + 15);
                swift_storeEnumTagMultiPayload();
                uint64_t v449 = v629;
                swift_storeEnumTagMultiPayload();
                sub_24D907568(v637, v447);
                (*(void (**)(uint64_t, uint64_t))(v630 + 8))(v447, v449);
                uint64_t v166 = v632;
                uint64_t v240 = v638;
                uint64_t v76 = v635;
                uint64_t v163 = (void *)v649;
              }
              v166(0, 0, 0, v163);
              goto LABEL_145;
            case 0x14u:
              if (!sub_24D8903D0() && (v551 & 1) != 0)
              {
                uint64_t v241 = v166;
                id v242 = (id)fpfs_current_or_default_log();
                uint64_t v243 = v582;
                sub_24DCC9088();
                uint64_t v244 = sub_24DCC9068();
                os_log_type_t v245 = sub_24DCCA108();
                if (os_log_type_enabled(v244, v245))
                {
                  uint64_t v246 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v246 = 0;
                  _os_log_impl(&dword_24D3D0000, v244, v245, "download got canceled since we are out of space", v246, 2u);
                  MEMORY[0x25332B030](v246, -1, -1);
                }

                (*(void (**)(char *, uint64_t))(v592 + 8))(v243, v593);
                uint64_t v656 = v131;
                unint64_t v657 = v639;
                uint64_t v658 = v646;
                uint64_t v659 = (uint64_t)v640;
                type metadata accessor for JobResult();
                uint64_t v247 = v644;
                uint64_t v248 = swift_getAssociatedConformanceWitness();
                unint64_t v249 = v634;
                uint64_t v250 = swift_getAssociatedConformanceWitness();
                uint64_t v656 = v247;
                unint64_t v657 = v249;
                uint64_t v658 = v248;
                uint64_t v659 = v250;
                type metadata accessor for ReconciliationID();
                type metadata accessor for ReconciliationSideMutation();
                uint64_t v251 = swift_getTupleTypeMetadata2();
                uint64_t v252 = (uint64_t)v628;
                uint64_t v253 = &v628[*(int *)(v251 + 48)];
                (*((void (**)(char *, void (*)(void, void), uint64_t))v643 + 2))(v628, v648, v247);
                swift_storeEnumTagMultiPayload();
                *(_WORD *)uint64_t v253 = 768;
                *(_OWORD *)(v253 + 8) = *(_OWORD *)(v557 + 15);
                swift_storeEnumTagMultiPayload();
                uint64_t v254 = v629;
                swift_storeEnumTagMultiPayload();
                sub_24D907568(v637, v252);
                (*(void (**)(uint64_t, uint64_t))(v630 + 8))(v252, v254);
                uint64_t v166 = v241;
                uint64_t v133 = v653;
                uint64_t v76 = v635;
                uint64_t v163 = (void *)v649;
              }
              v166(0, 0, 0, v163);
              goto LABEL_62;
            case 0x16u:
              uint64_t v255 = v586;
              v558(v586, (uint64_t)v133, v76);
              uint64_t v256 = (uint64_t)v647;
              if (v554(v255, 1, v647) == 1)
              {
                (*(void (**)(char *, uint64_t))(v638 + 8))(v255, v76);
              }
              else
              {
                BOOL v409 = sub_24DB86F3C(v256);
                v410 = *(void (**)(char *, uint64_t))(v553 + 8);
                v553 += 8;
                v410(v255, v256);
                if (!v409)
                {
                  v450 = v574;
                  v558(v574, (uint64_t)v133, v76);
                  if (v554(v450, 1, (void *)v256) == 1)
                  {
                    (*(void (**)(char *, uint64_t))(v638 + 8))(v450, v76);
                  }
                  else
                  {
                    uint64_t v469 = v614;
                    uint64_t v470 = v615;
                    (*(void (**)(char *, char *, uint64_t))(v614 + 16))(v616, v450, v615);
                    v410(v450, v256);
                    int v471 = v616[*(int *)(v470 + 56)];
                    (*(void (**)(void))(v469 + 8))();
                    if (!v471) {
                      goto LABEL_131;
                    }
                  }
                  uint64_t v656 = v131;
                  unint64_t v657 = v639;
                  uint64_t v658 = v646;
                  uint64_t v659 = (uint64_t)v640;
                  uint64_t v652 = (void *)type metadata accessor for JobResult();
                  uint64_t v472 = v76;
                  uint64_t v473 = v644;
                  uint64_t v474 = swift_getAssociatedConformanceWitness();
                  unint64_t v475 = v634;
                  uint64_t v476 = swift_getAssociatedConformanceWitness();
                  uint64_t v656 = v473;
                  unint64_t v657 = v475;
                  uint64_t v658 = v474;
                  uint64_t v659 = v476;
                  type metadata accessor for ReconciliationID();
                  type metadata accessor for ReconciliationSideMutation();
                  uint64_t v477 = swift_getTupleTypeMetadata2();
                  uint64_t v478 = (uint64_t)v628;
                  uint64_t v479 = &v628[*(int *)(v477 + 48)];
                  uint64_t v480 = v473;
                  uint64_t v76 = v472;
                  uint64_t v481 = v649;
                  (*((void (**)(char *, void (*)(void, void), uint64_t))v643 + 2))(v628, v648, v480);
                  swift_storeEnumTagMultiPayload();
                  *uint64_t v479 = 1;
                  uint64_t v482 = (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))v632;
                  swift_storeEnumTagMultiPayload();
                  uint64_t v483 = v629;
                  swift_storeEnumTagMultiPayload();
                  sub_24D907568(v637, v478);
                  (*(void (**)(uint64_t, uint64_t))(v630 + 8))(v478, v483);
                  v482(0, 0, 0, v481);
LABEL_159:
                  (*(void (**)(char *, uint64_t))(v638 + 8))(v653, v76);
                  goto LABEL_160;
                }
              }
LABEL_131:
              uint64_t v656 = v131;
              uint64_t v411 = v131;
              unint64_t v413 = v639;
              v412 = v640;
              uint64_t v414 = v646;
              unint64_t v657 = v639;
              uint64_t v658 = v646;
              uint64_t v659 = (uint64_t)v640;
              type metadata accessor for JobResult();
              uint64_t v656 = v411;
              unint64_t v657 = v413;
              uint64_t v658 = v414;
              uint64_t v659 = (uint64_t)v412;
              type metadata accessor for Ingestion.FetchItemMetadata();
              uint64_t v415 = sub_24DC09748((uint64_t)v648, v557[15], v557[16], 0x2000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
              sub_24D85246C(v637, v415);
              swift_release();
              v166(0, 0, 0, v163);
              goto LABEL_159;
            default:
              (*(void (**)(unsigned char *, uint64_t))(v587 + 8))(v623, v178);
              break;
          }
        }

        uint64_t v654 = (uint64_t)v163;
        id v359 = v163;
        sub_24D501328();
        if (!swift_dynamicCast())
        {
          uint64_t v368 = v638;
          uint64_t v367 = v166;
LABEL_122:

          v367(0, 0, 0, v163);
          uint64_t v390 = *(void (**)(char *, uint64_t))(v368 + 8);
          uint64_t v391 = v133;
LABEL_123:
          v390(v391, v76);
          return;
        }
        uint64_t v360 = v131;
        id v361 = v660;
        id v362 = objc_msgSend(v660, sel_domain);
        uint64_t v363 = sub_24DCC97E8();
        uint64_t v365 = v364;

        if (v363 == sub_24DCC97E8() && v365 == v366)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v367 = v632;
        }
        else
        {
          char v369 = sub_24DCCAE28();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v367 = v632;
          if ((v369 & 1) == 0)
          {
LABEL_121:

            uint64_t v368 = v638;
            goto LABEL_122;
          }
        }
        id v370 = objc_msgSend(v361, sel_code);
        if (v370 == (id)*MEMORY[0x263F05398])
        {
          if (!sub_24D8903D0() && (v551 & 1) != 0)
          {
            id v371 = (id)fpfs_current_or_default_log();
            uint64_t v372 = v585;
            sub_24DCC9088();
            uint64_t v373 = sub_24DCC9068();
            os_log_type_t v374 = sub_24DCCA108();
            if (os_log_type_enabled(v373, v374))
            {
              uint64_t v375 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v375 = 0;
              _os_log_impl(&dword_24D3D0000, v373, v374, "speculative download got canceled by the provider going to update speculative fulfilled", v375, 2u);
              MEMORY[0x25332B030](v375, -1, -1);
            }

            (*(void (**)(char *, uint64_t))(v592 + 8))(v372, v593);
            uint64_t v656 = v360;
            unint64_t v657 = v639;
            uint64_t v658 = v646;
            uint64_t v659 = (uint64_t)v640;
            type metadata accessor for JobResult();
            uint64_t v376 = v644;
            uint64_t v377 = swift_getAssociatedConformanceWitness();
            unint64_t v378 = v634;
            uint64_t v379 = swift_getAssociatedConformanceWitness();
            uint64_t v656 = v376;
            unint64_t v657 = v378;
            uint64_t v658 = v377;
            uint64_t v659 = v379;
            type metadata accessor for ReconciliationID();
            uint64_t v380 = swift_getTupleTypeMetadata3();
            uint64_t v381 = *(int *)(v380 + 48);
            uint64_t v382 = *(int *)(v380 + 64);
            uint64_t v651 = (void (*)(void, void, void))*((void *)v643 + 2);
            uint64_t v383 = (uint64_t)v628;
            v651(v628, v648, v376);
            swift_storeEnumTagMultiPayload();
            *(void *)(v383 + v381) = 1;
            *(void *)(v383 + v382) = 0;
            uint64_t v384 = v629;
            swift_storeEnumTagMultiPayload();
            sub_24D907568(v637, v383);
            uint64_t v652 = *(void **)(v630 + 8);
            ((void (*)(uint64_t, uint64_t))v652)(v383, v384);
            type metadata accessor for ReconciliationSideMutation();
            uint64_t v385 = v383 + *(int *)(swift_getTupleTypeMetadata2() + 48);
            v651(v383, v648, v644);
            swift_storeEnumTagMultiPayload();
            *(_WORD *)uint64_t v385 = 768;
            *(_OWORD *)(v385 + 8) = *(_OWORD *)(v557 + 15);
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
            sub_24D907568(v637, v383);
            ((void (*)(uint64_t, uint64_t))v652)(v383, v384);
            uint64_t v367 = v632;
            uint64_t v133 = v653;
            uint64_t v76 = v635;
          }
          id v386 = v361;
          v367(0, 0, 0, v361);

          v387 = *(void (**)(char *, uint64_t))(v638 + 8);
          int v388 = v133;
          goto LABEL_119;
        }
        goto LABEL_121;
      }
LABEL_185:
      __break(1u);
      JUMPOUT(0x24DBF049CLL);
    }
LABEL_184:
    __break(1u);
    goto LABEL_185;
  }
  uint64_t v656 = v131;
  unint64_t v657 = v639;
  uint64_t v658 = v646;
  uint64_t v659 = (uint64_t)v640;
  uint64_t v649 = type metadata accessor for JobResult();
  uint64_t v258 = v644;
  uint64_t v259 = swift_getAssociatedConformanceWitness();
  unint64_t v260 = v634;
  uint64_t v261 = swift_getAssociatedConformanceWitness();
  uint64_t v656 = v258;
  unint64_t v657 = v260;
  uint64_t v658 = v259;
  uint64_t v659 = v261;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v262 = swift_getTupleTypeMetadata2();
  uint64_t v263 = (uint64_t)v628;
  uint64_t v264 = &v628[*(int *)(v262 + 48)];
  (*((void (**)(char *, void (*)(void, void), uint64_t))v643 + 2))(v628, v648, v258);
  swift_storeEnumTagMultiPayload();
  *uint64_t v264 = 2;
  swift_storeEnumTagMultiPayload();
  uint64_t v265 = v629;
  swift_storeEnumTagMultiPayload();
  sub_24D907568(v637, v263);
  uint64_t v266 = v263;
  uint64_t v131 = (uint64_t)v651;
  (*(void (**)(uint64_t, uint64_t))(v630 + 8))(v266, v265);
  uint64_t v76 = v635;
LABEL_70:
  uint64_t v267 = v633;
  uint64_t v268 = *(void **)(v633 + 16);
  uint64_t v269 = v609;
  uint64_t v270 = v636;
  uint64_t v649 = v633 + 16;
  uint64_t v647 = v268;
  ((void (*)(char *, uint64_t, uint64_t))v268)(v609, v132, v636);
  uint64_t v271 = *(char **)(v641 + 48);
  uint64_t v272 = v645;
  uint64_t v642 = v641 + 48;
  v631 = v271;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v271)(v269, 1, v645) == 1)
  {
    (*(void (**)(char *, uint64_t))(v267 + 8))(v269, v270);
    uint64_t v273 = 1;
    uint64_t v274 = (uint64_t (*)(char *, uint64_t, uint64_t))v625;
    uint64_t v275 = v627;
    uint64_t v276 = (uint64_t)v611;
  }
  else
  {
    sub_24D416034(*((void *)v269 + 1), *((void *)v269 + 2));
    uint64_t v275 = v627;
    uint64_t v276 = (uint64_t)v611;
    (*(void (**)(char *, char *, uint64_t))(v627 + 32))(v611, &v269[*(int *)(v272 + 48)], v131);
    uint64_t v273 = 0;
    uint64_t v274 = (uint64_t (*)(char *, uint64_t, uint64_t))v625;
  }
  LODWORD(v623) = a11;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v275 + 56))(v276, v273, 1, v131);
  sub_24D97D6D0(v276, v131, v646, (uint64_t)v274);
  uint64_t v277 = v610;
  ((void (*)(char *, uint64_t, uint64_t))v647)(v610, v132, v270);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v631)(v277, 1, v272) == 1)
  {
    (*(void (**)(char *, uint64_t))(v633 + 8))(v277, v270);
    *(void *)&long long v624 = 0xEA00000000003E6CLL;
    uint64_t v620 = 0x696E3A6D6574693CLL;
    uint64_t v278 = v132;
  }
  else
  {
    uint64_t v279 = *(int *)(v272 + 48);
    uint64_t v280 = v612;
    unint64_t v281 = (char *)v612 + v279;
    uint64_t v282 = &v277[v279];
    char v284 = *(void **)v277;
    uint64_t v283 = *((void *)v277 + 1);
    uint64_t v285 = *((void *)v277 + 4);
    char v286 = v277[40];
    uint64_t v287 = *((void *)v277 + 6);
    *uint64_t v612 = *(void *)v277;
    v280[1] = v283;
    long long v624 = *((_OWORD *)v277 + 1);
    *((_OWORD *)v280 + 1) = v624;
    v280[4] = v285;
    *((unsigned char *)v280 + 40) = v286;
    v280[6] = v287;
    (*(void (**)(char *, char *, uint64_t))(v275 + 32))(v281, v282, v131);
    uint64_t v656 = 0;
    unint64_t v657 = 0xE000000000000000;
    unint64_t v288 = v624;
    sub_24D416048(v283, v624);
    sub_24DCCA728();
    sub_24DCC9968();
    uint64_t v289 = v619;
    uint64_t v290 = v604;
    uint64_t v291 = v274;
    uint64_t v292 = v618;
    (*(void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v619 + 16))(v604, v291, v618);
    uint64_t v293 = (int *)v606;
    uint64_t v294 = *(void *)(v606 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v294 + 48))(v290, 1, v606) == 1)
    {
      uint64_t v295 = v290;
      uint64_t v294 = v289;
      uint64_t v296 = (int *)v292;
    }
    else
    {
      sub_24D97A9C4(v293);
      uint64_t v295 = v290;
      uint64_t v296 = v293;
    }
    (*(void (**)(char *, int *))(v294 + 8))(v295, v296);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v654 = 677669222;
    unint64_t v655 = 0xE400000000000000;
    id v660 = v284;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24D416034(v283, v288);
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v620 = v656;
    *(void *)&long long v624 = v657;
    uint64_t v272 = v645;
    (*(void (**)(void *, uint64_t))(v641 + 8))(v612, v645);
    uint64_t v77 = v638;
    uint64_t v76 = v635;
    uint64_t v278 = v650;
    uint64_t v131 = (uint64_t)v651;
    uint64_t v274 = (uint64_t (*)(char *, uint64_t, uint64_t))v625;
    uint64_t v275 = v627;
    uint64_t v270 = v636;
  }
  uint64_t v297 = v556;
  uint64_t v298 = v278;
  ((void (*)(char *))v647)(v556);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v631)(v297, 1, v272) == 1)
  {
    (*(void (**)(char *, uint64_t))(v633 + 8))(v297, v270);
  }
  else
  {
    uint64_t v299 = *(int *)(v272 + 48);
    uint64_t v300 = v297;
    uint64_t v301 = v272;
    uint64_t v302 = v607;
    unint64_t v303 = (char *)v607 + v299;
    uint64_t v304 = &v300[v299];
    uint64_t v305 = *((void *)v300 + 4);
    char v306 = v300[40];
    uint64_t v307 = *((void *)v300 + 6);
    long long v308 = *((_OWORD *)v300 + 1);
    *int v607 = *(_OWORD *)v300;
    v302[1] = v308;
    *((void *)v302 + 4) = v305;
    *((unsigned char *)v302 + 40) = v306;
    *((void *)v302 + 6) = v307;
    (*(void (**)(char *, char *, uint64_t))(v275 + 32))(v303, v304, v131);
    uint64_t v309 = *(void (**)(uint64_t, uint64_t))(v646 + 64);
    uint64_t v310 = v605;
    v309(v131, v646);
    uint64_t v311 = v644;
    swift_getAssociatedConformanceWitness();
    char v312 = sub_24DCC9798();
    uint64_t v313 = (*((uint64_t (**)(char *, uint64_t))v643 + 1))(v310, v311);
    if ((v312 & 1) == 0)
    {
      if (*(void *)v302)
      {
        uint64_t v340 = *(void *)(*(void *)(v652[5] + 16) + 136);
        MEMORY[0x270FA5388](v313);
        *(&v549 - 4) = v340;
        *((_DWORD *)&v549 - 6) = 0;
        uint64_t v548 = v341;
        swift_retain();
        id v342 = v626;
        sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D5DC2F0);
        if (v342)
        {
          uint64_t v343 = v309;

          swift_release();
          id v626 = 0;
        }
        else
        {
          id v626 = 0;
          *(unsigned char *)(v340 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
          uint64_t v343 = v309;
          if (*(void *)(v340 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
          {
            uint64_t ObjectType = swift_getObjectType();
            swift_unknownObjectRetain();
            MEMORY[0x2533283F0](1, ObjectType);
            swift_release();
            swift_unknownObjectRelease();
          }
          else
          {
            swift_release();
          }
        }
      }
      else
      {
        uint64_t v343 = v309;
      }
      swift_getWitnessTable();
      v451 = (void *)swift_allocError();
      uint64_t v453 = v452;
      uint64_t v454 = v644;
      swift_getTupleTypeMetadata2();
      v455 = v643;
      (*((void (**)(uint64_t, void (*)(void, void), uint64_t))v643 + 2))(v453, v648, v454);
      (*((void (**)(uint64_t, void, uint64_t, uint64_t))v455 + 7))(v453, 0, 1, v454);
      v343((uint64_t)v651, v646);
      swift_storeEnumTagMultiPayload();
      v632(0, v620, v624, v451);

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v619 + 8))(v625, v618);
      (*(void (**)(char *, uint64_t))(v638 + 8))(v653, v635);
      (*(void (**)(_OWORD *, uint64_t))(v641 + 8))(v607, v645);
      return;
    }
    (*(void (**)(_OWORD *, uint64_t))(v641 + 8))(v302, v301);
    uint64_t v77 = v638;
    uint64_t v76 = v635;
    uint64_t v274 = (uint64_t (*)(char *, uint64_t, uint64_t))v625;
    uint64_t v272 = v301;
    uint64_t v298 = v650;
  }
  uint64_t v314 = v648;
  id v315 = v626;
  char v316 = (*(uint64_t (**)(void (*)(void, void)))(*(void *)v652[4] + 288))(v648);
  if (v315)
  {
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v619 + 8))(v274, v618);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v653, v76);
    return;
  }
  id v626 = 0;
  if ((v316 & 1) == 0)
  {
    uint64_t v344 = v624;
    uint64_t v345 = v589;
    uint64_t v346 = v636;
    ((void (*)(char *, uint64_t, uint64_t))v647)(v589, v298, v636);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v631)(v345, 1, v272) == 1)
    {
      (*(void (**)(char *, uint64_t))(v633 + 8))(v345, v346);
      uint64_t v347 = v77;
    }
    else
    {
      uint64_t v348 = *(void *)v345;
      uint64_t v349 = *((void *)v345 + 1);
      unint64_t v350 = *((void *)v345 + 2);
      uint64_t v351 = (*(uint64_t (**)(char *, void (*)(void, void, void)))(v627 + 8))(&v345[*(int *)(v272 + 48)], v651);
      uint64_t v352 = *(void *)(*(void *)(v652[5] + 16) + 136);
      if (v348)
      {
        MEMORY[0x270FA5388](v351);
        *(&v549 - 4) = v352;
        *((_DWORD *)&v549 - 6) = 0;
        uint64_t v548 = v348;
        swift_retain();
        id v353 = v626;
        sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D5DC2F0);
        if (v353)
        {

          sub_24D416034(v349, v350);
          swift_release();
          id v626 = 0;
          uint64_t v347 = v77;
        }
        else
        {
          id v626 = 0;
          *(unsigned char *)(v352 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
          uint64_t v347 = v77;
          if (*(void *)(v352 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
          {
            uint64_t v462 = swift_getObjectType();
            swift_unknownObjectRetain();
            MEMORY[0x2533283F0](1, v462);
            swift_unknownObjectRelease();
          }
          sub_24D416034(v349, v350);
          swift_release();
        }
      }
      else
      {
        swift_retain();
        sub_24D416034(v349, v350);
        swift_release();
        uint64_t v347 = v77;
      }
    }
    uint64_t v463 = v618;
    uint64_t v464 = v651;
    unint64_t v466 = v639;
    uint64_t v465 = v640;
    uint64_t v656 = (uint64_t)v651;
    unint64_t v657 = v639;
    uint64_t v467 = v646;
    uint64_t v658 = v646;
    uint64_t v659 = (uint64_t)v640;
    type metadata accessor for JobResult();
    uint64_t v656 = (uint64_t)v464;
    unint64_t v657 = v466;
    uint64_t v658 = v467;
    uint64_t v659 = (uint64_t)v465;
    type metadata accessor for Ingestion.FetchItemMetadata();
    uint64_t v468 = sub_24DC09748((uint64_t)v648, v557[15], v557[16], 0x2000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
    sub_24D85246C(v637, v468);
    swift_release();
    v632(0, v620, v344, 0);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v619 + 8))(v625, v463);
    uint64_t v390 = *(void (**)(char *, uint64_t))(v347 + 8);
    uint64_t v391 = v653;
    goto LABEL_123;
  }
  if (!sub_24D8903D0())
  {
    uint64_t v317 = v646;
    unint64_t v318 = v639;
    if (v551)
    {
      uint64_t v656 = (uint64_t)v651;
      unint64_t v657 = v639;
      uint64_t v658 = v646;
      uint64_t v659 = (uint64_t)v640;
      type metadata accessor for JobResult();
      uint64_t v319 = v644;
      uint64_t v320 = swift_getAssociatedConformanceWitness();
      unint64_t v321 = v634;
      uint64_t v322 = swift_getAssociatedConformanceWitness();
      uint64_t v656 = v319;
      unint64_t v657 = v321;
      uint64_t v658 = v320;
      uint64_t v659 = v322;
      type metadata accessor for ReconciliationID();
      uint64_t v323 = swift_getTupleTypeMetadata3();
      uint64_t v324 = *(int *)(v323 + 48);
      uint64_t v325 = *(int *)(v323 + 64);
      uint64_t v326 = (uint64_t)v628;
      (*((void (**)(char *, void (*)(void, void), uint64_t))v643 + 2))(v628, v648, v319);
      swift_storeEnumTagMultiPayload();
      *(void *)(v326 + v324) = 1;
      *(void *)(v326 + v325) = 0;
      uint64_t v327 = v629;
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v637, v326);
      (*(void (**)(uint64_t, uint64_t))(v630 + 8))(v326, v327);
    }
    uint64_t v656 = (uint64_t)v651;
    unint64_t v657 = v318;
    uint64_t v658 = v317;
    uint64_t v659 = (uint64_t)v640;
    type metadata accessor for JobResult();
    uint64_t v328 = v644;
    uint64_t v329 = swift_getAssociatedConformanceWitness();
    unint64_t v330 = v634;
    uint64_t v331 = swift_getAssociatedConformanceWitness();
    uint64_t v656 = v328;
    unint64_t v657 = v330;
    uint64_t v658 = v329;
    uint64_t v659 = v331;
    type metadata accessor for ReconciliationID();
    uint64_t v332 = swift_getTupleTypeMetadata3();
    uint64_t v333 = *(int *)(v332 + 48);
    uint64_t v334 = *(int *)(v332 + 64);
    uint64_t v335 = (uint64_t)v628;
    uint64_t v336 = v648;
    (*((void (**)(char *, void (*)(void, void), uint64_t))v643 + 2))(v628, v648, v328);
    swift_storeEnumTagMultiPayload();
    *(void *)(v335 + v333) = 0;
    *(void *)(v335 + v334) = 2;
    uint64_t v314 = v336;
    uint64_t v337 = v629;
    swift_storeEnumTagMultiPayload();
    sub_24D907568(v637, v335);
    (*(void (**)(uint64_t, uint64_t))(v630 + 8))(v335, v337);
    uint64_t v77 = v638;
    uint64_t v76 = v635;
    uint64_t v274 = (uint64_t (*)(char *, uint64_t, uint64_t))v625;
    uint64_t v298 = v650;
  }
  uint64_t v338 = v637;
  id v339 = v626;
  sub_24DBCB8D8(v274, (uint64_t)v314, 0, 0, 0, v652, v557[15], v557[16], v557[17], v637);
  id v626 = v339;
  if (v339)
  {
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v619 + 8))(v274, v618);
    swift_bridgeObjectRelease();
LABEL_169:
    (*(void (**)(char *, uint64_t))(v77 + 8))(v653, v76);
    return;
  }
  unint64_t v425 = (unint64_t)v584;
  uint64_t v426 = v636;
  ((void (*)(char *, uint64_t, uint64_t))v647)(v584, v298, v636);
  if ((a12 & 1) == 0)
  {
LABEL_168:
    sub_24DBF0D58(v623 & 1, v425, v338, (uint64_t)v557, (uint64_t (*)(void, uint64_t, uint64_t, void))v632, v622, v620, v624);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v633 + 8))(v425, v426);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v619 + 8))(v274, v618);
    goto LABEL_169;
  }
  uint64_t v427 = v590;
  v428 = v573;
  uint64_t v429 = v591;
  (*(void (**)(char *, uint64_t, uint64_t))(v590 + 16))(v573, a13, v591);
  uint64_t v430 = v577;
  uint64_t v431 = v579;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v577 + 48))(v428, 1, v579) == 1)
  {
    (*(void (**)(char *, uint64_t))(v427 + 8))(v428, v429);
LABEL_166:
    uint64_t v426 = v636;
    goto LABEL_167;
  }
  (*(void (**)(char *, char *, uint64_t))(v430 + 32))(v576, v428, v431);
  uint64_t v484 = v569;
  uint64_t v426 = v636;
  ((void (*)(uint64_t, uint64_t, uint64_t))v647)(v569, v650, v636);
  uint64_t v485 = v645;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v631)(v484, 1, v645) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v633 + 8))(v484, v426);
    (*(void (**)(char *, uint64_t))(v430 + 8))(v576, v579);
LABEL_167:
    unint64_t v425 = (unint64_t)v584;
    goto LABEL_168;
  }
  sub_24D416034(*(void *)(v484 + 8), *(void *)(v484 + 16));
  uint64_t v486 = v484 + *(int *)(v485 + 48);
  uint64_t v487 = *(void (**)(char *, uint64_t, void))(v627 + 32);
  v488 = v562;
  v489 = v651;
  v487(v562, v486, v651);
  v487(v571, (uint64_t)v488, v489);
  uint64_t v490 = v565;
  uint64_t v491 = v565 + 16;
  v492 = *(void (**)(char *, char *, uint64_t))(v565 + 16);
  uint64_t v493 = v567;
  v492(v570, v576, v567);
  uint64_t v494 = v566;
  uint64_t v640 = *(void (**)(void))(v646 + 112);
  uint64_t v641 = v646 + 112;
  v640(v489);
  v495 = v564;
  v643 = v492;
  uint64_t v644 = v491;
  v492(v564, v494, v493);
  uint64_t v496 = v577 + 8;
  v648 = *(void (**)(void, void))(v577 + 8);
  v648(v494, v579);
  BOOL v497 = v570;
  LOBYTE(v494) = sub_24DCC9798();
  v498 = *(void (**)(char *, uint64_t))(v490 + 8);
  v498(v495, v493);
  v498(v497, v493);
  if (v494)
  {
    (*(void (**)(char *, void (*)(void, void, void)))(v627 + 8))(v571, v651);
    v648(v576, v579);
    uint64_t v338 = v637;
    uint64_t v274 = (uint64_t (*)(char *, uint64_t, uint64_t))v625;
    goto LABEL_166;
  }
  uint64_t v577 = v496;
  v527 = *(void (**)(char *, uint64_t))(v633 + 8);
  uint64_t v528 = v636;
  v527(v584, v636);
  uint64_t v529 = v560;
  ((void (*)(char *, uint64_t, uint64_t))v647)(v560, v650, v528);
  uint64_t v530 = v645;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v631)(v529, 1, v645) == 1)
  {
    v527(v529, v528);
  }
  else
  {
    uint64_t v531 = *(void *)v529;
    uint64_t v532 = *((void *)v529 + 1);
    uint64_t v533 = v530;
    unint64_t v534 = *((void *)v529 + 2);
    uint64_t v535 = (*(uint64_t (**)(char *, void (*)(void, void, void)))(v627 + 8))(&v529[*(int *)(v533 + 48)], v651);
    uint64_t v536 = *(void *)(*(void *)(v652[5] + 16) + 136);
    if (v531)
    {
      MEMORY[0x270FA5388](v535);
      *(&v549 - 4) = v536;
      *((_DWORD *)&v549 - 6) = 0;
      uint64_t v548 = v531;
      swift_retain();
      id v537 = v626;
      sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D5DC2F0);
      if (v537)
      {

        sub_24D416034(v532, v534);
        swift_release();
        id v626 = 0;
      }
      else
      {
        id v626 = 0;
        *(unsigned char *)(v536 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
        if (*(void *)(v536 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
        {
          uint64_t v538 = swift_getObjectType();
          swift_unknownObjectRetain();
          MEMORY[0x2533283F0](1, v538);
          swift_unknownObjectRelease();
        }
        sub_24D416034(v532, v534);
        swift_release();
        uint64_t v76 = v635;
      }
    }
    else
    {
      swift_retain();
      sub_24D416034(v532, v534);
      swift_release();
    }
  }
  swift_getWitnessTable();
  uint64_t v652 = (void *)swift_allocError();
  v540 = v539;
  uint64_t v541 = v567;
  v542 = &v539[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  uint64_t v543 = (void (*)(uint64_t, char *, uint64_t))v643;
  v643(v540, v576, v541);
  uint64_t v544 = v566;
  ((void (*)(void (*)(void, void, void), uint64_t))v640)(v651, v646);
  v543((uint64_t)v542, v544, v541);
  uint64_t v545 = v579;
  v546 = (void (*)(char *, uint64_t))v648;
  v648(v544, v579);
  swift_storeEnumTagMultiPayload();
  v547 = v652;
  v632(0, v620, v624, v652);

  swift_bridgeObjectRelease();
  (*(void (**)(char *, void (*)(void, void, void)))(v627 + 8))(v571, v651);
  v546(v576, v545);
  (*(void (**)(char *, uint64_t))(v619 + 8))(v625, v618);
  (*(void (**)(char *, uint64_t))(v638 + 8))(v653, v76);
}

uint64_t sub_24DBF04F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v62 = a6;
  uint64_t v63 = a7;
  uint64_t v60 = a4;
  uint64_t v61 = a5;
  uint64_t v12 = *(void *)(*(void *)a3 + 104);
  uint64_t v58 = *(void *)(*(void *)a3 + 88);
  uint64_t v59 = v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v50 - v18;
  uint64_t v20 = sub_24DCC9078();
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v55 = v21;
    uint64_t v56 = a8;
    uint64_t v57 = a3;
    id v24 = a1;
    id v25 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v26(v19, a2, AssociatedTypeWitness);
    id v27 = a1;
    id v28 = a1;
    uint64_t v29 = sub_24DCC9068();
    os_log_type_t v30 = sub_24DCCA128();
    int v54 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v53 = v20;
      uint64_t v32 = v31;
      uint64_t v51 = (void *)swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      uint64_t v65 = v52;
      *(_DWORD *)uint64_t v32 = 136315394;
      uint64_t v50 = v32 + 4;
      v26(v17, (uint64_t)v19, AssociatedTypeWitness);
      uint64_t v33 = *(void (**)(char *, uint64_t))(v14 + 8);
      v33(v19, AssociatedTypeWitness);
      swift_getAssociatedConformanceWitness();
      unint64_t v34 = v29;
      uint64_t v35 = sub_24DCCAD78();
      unint64_t v37 = v36;
      v33(v17, AssociatedTypeWitness);
      uint64_t v64 = sub_24D418FB4(v35, v37, &v65);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2112;
      id v38 = a1;
      uint64_t v39 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v64 = v39;
      sub_24DCCA428();
      uint64_t v40 = v51;
      *uint64_t v51 = v39;

      _os_log_impl(&dword_24D3D0000, v34, (os_log_type_t)v54, "updateEvictionReason for %s failed with %@", (uint8_t *)v32, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v40, -1, -1);
      uint64_t v41 = v52;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v41, -1, -1);
      MEMORY[0x25332B030](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v23, v53);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, AssociatedTypeWitness);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v23, v20);
    }
    a8 = v56;
  }
  uint64_t v42 = swift_allocObject();
  uint64_t v44 = v60;
  uint64_t v43 = v61;
  *(void *)(v42 + 16) = v60;
  *(void *)(v42 + 24) = v43;
  uint64_t v45 = (void *)swift_allocObject();
  uint64_t v46 = v63;
  v45[2] = v62;
  v45[3] = v46;
  v45[4] = v44;
  v45[5] = v43;
  v45[6] = a8;
  swift_retain_n();
  swift_retain();
  swift_retain();
  id v47 = a8;
  uint64_t v48 = type metadata accessor for Continuation();
  sub_24D6E9F88((uint64_t)"handle(reply:strictVersioning:itemUnchanged:error:lastKnownVersion:request:db:result:reason:completion:)", 104, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D73CC58, v42, (uint64_t)sub_24DC0D5CC, (uint64_t)v45, v48, MEMORY[0x263F8D310]);
  swift_release();
  return swift_release();
}

uint64_t sub_24DBF0A68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a5;
  uint64_t v26 = a4;
  id v27 = a3;
  uint64_t v21 = a2;
  uint64_t v24 = a1;
  uint64_t v5 = *(void *)(*(void *)a1 + 88);
  uint64_t v6 = *(void *)(*(void *)a1 + 96);
  uint64_t v7 = *(void *)(*(void *)a1 + 104);
  uint64_t v28 = *(void *)(*(void *)a1 + 80);
  uint64_t v29 = v5;
  uint64_t v30 = v6;
  uint64_t v31 = v7;
  uint64_t v8 = type metadata accessor for ReconciliationMutation();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v22 = v8;
  uint64_t v23 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v29 = v5;
  uint64_t v30 = v6;
  uint64_t v31 = v7;
  uint64_t v20 = type metadata accessor for JobResult();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v15 = swift_getAssociatedConformanceWitness();
  uint64_t v28 = AssociatedTypeWitness;
  uint64_t v29 = v13;
  uint64_t v30 = AssociatedConformanceWitness;
  uint64_t v31 = v15;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v16 = &v11[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  uint64_t v17 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v11, v21 + *(void *)(*(void *)v21 + 576), AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  *(_WORD *)uint64_t v16 = 768;
  *(_OWORD *)(v16 + 8) = *(_OWORD *)(v17 + 120);
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = v22;
  swift_storeEnumTagMultiPayload();
  sub_24D907568(v24, (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v18);
  return v27(0, 0, 0, v25);
}

uint64_t sub_24DBF0D58(int a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t, void), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v83 = a7;
  uint64_t v84 = a8;
  uint64_t v85 = a6;
  uint64_t v86 = a5;
  unint64_t v89 = a2;
  LODWORD(v80) = a1;
  uint64_t v9 = *(void *)(*(void *)a3 + 80);
  uint64_t v10 = *(void *)(*(void *)a3 + 88);
  uint64_t v11 = *(void *)a3;
  uint64_t v12 = *(void *)(*(void *)a3 + 96);
  uint64_t v91 = a3;
  uint64_t v13 = *(void (**)(void, void))(v11 + 104);
  uint64_t v94 = v9;
  uint64_t v95 = v10;
  uint64_t v92 = v10;
  uint64_t v96 = v12;
  uint64_t v97 = v13;
  uint64_t v14 = v13;
  uint64_t v15 = type metadata accessor for ReconciliationMutation();
  uint64_t v81 = *(void *)(v15 - 8);
  uint64_t v82 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v78 = (char *)&v75 - v19;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v88 = sub_24DCCA3F8();
  uint64_t v93 = *(void *)(v88 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v88);
  uint64_t v79 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v75 - v22;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  uint64_t v94 = AssociatedTypeWitness;
  uint64_t v95 = v25;
  uint64_t v96 = AssociatedConformanceWitness;
  uint64_t v97 = (void (*)(void, void))v27;
  uint64_t v28 = type metadata accessor for FileItemVersion();
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v75 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v90 = v14;
  if (v80)
  {
    uint64_t v76 = (char *)&v75 - v32;
    uint64_t v77 = v33;
    uint64_t v80 = a4;
    unint64_t v34 = v18;
    uint64_t v35 = v88;
    (*(void (**)(char *, unint64_t, uint64_t))(v93 + 16))(v23, v89, v88);
    uint64_t v36 = TupleTypeMetadata2;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v23, 1, TupleTypeMetadata2) != 1)
    {
      sub_24D416034(*((void *)v23 + 1), *((void *)v23 + 2));
      uint64_t v56 = &v23[*(int *)(v36 + 48)];
      (*(void (**)(uint64_t, uint64_t))(v12 + 112))(v9, v12);
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v56, v9);
      (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v76, v31, v28);
      uint64_t v93 = v28;
      uint64_t v94 = v9;
      uint64_t v95 = v92;
      uint64_t v96 = v12;
      uint64_t v97 = v90;
      type metadata accessor for JobResult();
      uint64_t v57 = swift_getAssociatedTypeWitness();
      uint64_t v58 = swift_getAssociatedTypeWitness();
      uint64_t v59 = swift_getAssociatedConformanceWitness();
      uint64_t v60 = swift_getAssociatedConformanceWitness();
      uint64_t v94 = v57;
      uint64_t v95 = v58;
      uint64_t v96 = v59;
      uint64_t v97 = (void (*)(void, void))v60;
      type metadata accessor for ReconciliationID();
      uint64_t v92 = type metadata accessor for ReconciliationSideMutation();
      uint64_t v61 = swift_getTupleTypeMetadata2();
      uint64_t v62 = (uint64_t)v78;
      uint64_t v63 = &v78[*(int *)(v61 + 48)];
      uint64_t v64 = v80 + *(void *)(*(void *)v80 + 576);
      uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16);
      v65(v78, v64, v57);
      swift_storeEnumTagMultiPayload();
      *(void *)uint64_t v63 = 8;
      swift_storeEnumTagMultiPayload();
      uint64_t v66 = v82;
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v91, v62);
      uint64_t v90 = *(void (**)(void, void))(v81 + 8);
      v90(v62, v66);
      uint64_t v67 = v62 + *(int *)(v61 + 48);
      v65((char *)v62, v64, v57);
      swift_storeEnumTagMultiPayload();
      uint64_t v68 = v93;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v70 = *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v71 = *(int *)(TupleTypeMetadata3 + 64);
      uint64_t v72 = v77;
      uint64_t v73 = v76;
      (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v67, v76, v68);
      *(unsigned char *)(v67 + v70) = 1;
      *(unsigned char *)(v67 + v71) = 0;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v91, v62);
      v90(v62, v66);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v68);
      return v86(0, v83, v84, 0);
    }
    (*(void (**)(char *, uint64_t))(v93 + 8))(v23, v35);
    uint64_t v18 = v34;
    a4 = v80;
  }
  uint64_t v37 = a4 + *(void *)(*(void *)a4 + 576);
  uint64_t v38 = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v18, v37, v38);
  uint64_t v39 = swift_getAssociatedTypeWitness();
  uint64_t v80 = v12;
  uint64_t v40 = swift_getAssociatedConformanceWitness();
  uint64_t v41 = swift_getAssociatedConformanceWitness();
  uint64_t v94 = v38;
  uint64_t v95 = v39;
  uint64_t v96 = v40;
  uint64_t v97 = (void (*)(void, void))v41;
  type metadata accessor for ReconciliationID();
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = v79;
  uint64_t v43 = v88;
  (*(void (**)(char *, unint64_t, uint64_t))(v93 + 16))(v79, v89, v88);
  uint64_t v44 = TupleTypeMetadata2;
  BOOL v45 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v42, 1, TupleTypeMetadata2) == 1;
  uint64_t v46 = (uint64_t)v18;
  id v47 = v42;
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v93 + 8))(v42, v43);
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v93 = 0;
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    unint64_t v89 = 0xB000000000000000;
  }
  else
  {
    uint64_t v48 = *(void *)v42;
    uint64_t v49 = *((void *)v42 + 1);
    unint64_t v89 = *((void *)v42 + 2);
    uint64_t v50 = *((void *)v42 + 4);
    uint64_t v93 = *((void *)v42 + 3);
    uint64_t v51 = v42[40];
    uint64_t v52 = *((void *)v42 + 6);
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(&v47[*(int *)(v44 + 48)], v9);
  }
  uint64_t v94 = v9;
  uint64_t v95 = v92;
  uint64_t v96 = v80;
  uint64_t v97 = v90;
  type metadata accessor for JobResult();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v53 = v46 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *(void *)uint64_t v53 = v48;
  *(void *)(v53 + 8) = v49;
  uint64_t v54 = v93;
  *(void *)(v53 + 16) = v89;
  *(void *)(v53 + 24) = v54;
  *(void *)(v53 + 32) = v50;
  *(void *)(v53 + 40) = v51;
  *(void *)(v53 + 48) = v52;
  *(unsigned char *)(v53 + 56) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = v82;
  swift_storeEnumTagMultiPayload();
  sub_24D907568(v91, v46);
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v46, v55);
  return v86(0, v83, v84, 0);
}

uint64_t sub_24DBF174C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v139 = a4;
  uint64_t v140 = a5;
  uint64_t v141 = a3;
  id v144 = a1;
  uint64_t v8 = (void *)*v6;
  uint64_t v9 = *(void *)(*v6 + 600);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v10 = sub_24DCCA3F8();
  uint64_t v134 = *(char **)(v10 - 8);
  uint64_t v135 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v133 = (char *)&v103 - v11;
  uint64_t v12 = v8[76];
  uint64_t v13 = v8[78];
  uint64_t v14 = type metadata accessor for SnapshotItem();
  uint64_t v114 = sub_24DCCA3F8();
  uint64_t v113 = *(void *)(v114 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v114);
  uint64_t v116 = (char *)&v103 - v16;
  uint64_t v130 = v14;
  uint64_t v115 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v112 = (char *)&v103 - v17;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v124 = sub_24DCCA3F8();
  uint64_t v120 = *(void *)(v124 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v124);
  uint64_t v121 = (char *)&v103 - v20;
  uint64_t v122 = AssociatedTypeWitness;
  uint64_t v129 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v19);
  char v117 = (char *)&v103 - v21;
  uint64_t v22 = v8[77];
  uint64_t v145 = v9;
  uint64_t v146 = v12;
  uint64_t v127 = v12;
  uint64_t v147 = v22;
  uint64_t v148 = v13;
  uint64_t v126 = v13;
  uint64_t v23 = type metadata accessor for ItemReconciliation();
  uint64_t v119 = sub_24DCCA3F8();
  uint64_t v118 = *(void *)(v119 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v119);
  uint64_t v128 = (char *)&v103 - v25;
  uint64_t v125 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v123 = (char *)&v103 - v26;
  uint64_t v27 = swift_getAssociatedTypeWitness();
  uint64_t v28 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v30 = swift_getAssociatedConformanceWitness();
  uint64_t v145 = v27;
  uint64_t v146 = v28;
  uint64_t v147 = AssociatedConformanceWitness;
  uint64_t v148 = v30;
  uint64_t v131 = type metadata accessor for FileItemVersion();
  uint64_t v143 = sub_24DCCA3F8();
  uint64_t v138 = *(void *)(v143 - 8);
  uint64_t v31 = *(void *)(v138 + 64);
  uint64_t v32 = MEMORY[0x270FA5388](v143);
  uint64_t v137 = (char *)&v103 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  unint64_t v34 = (char *)&v103 - v33;
  uint64_t v35 = v8;
  uint64_t v36 = v6[17];
  double v142 = (void **)a2;
  uint64_t v37 = *(void *)(a2 + 32);
  uint64_t v38 = v35[72];
  uint64_t v136 = v6;
  uint64_t v39 = (uint64_t)v6 + v38;
  (*(void (**)(char *))(*(void *)v37 + 616))((char *)v6 + v38);
  uint64_t v40 = (uint64_t)v128;
  uint64_t v111 = v36;
  uint64_t v109 = v31;
  uint64_t v107 = v23;
  uint64_t v41 = v129;
  uint64_t v110 = v22;
  uint64_t v108 = v9;
  uint64_t v42 = v130;
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(*(void *)v37 + 624))(v39);
  uint64_t v45 = v37;
  uint64_t v106 = v39;
  if (v44 == 4) {
    unsigned int v46 = 0;
  }
  else {
    unsigned int v46 = v44;
  }
  unsigned int v105 = v46;
  if (v44 == 4) {
    uint64_t v47 = 0;
  }
  else {
    uint64_t v47 = v43;
  }
  BOOL v48 = sub_24D8903D0();
  uint64_t v49 = 0;
  uint64_t v50 = v34;
  if (v48) {
    goto LABEL_14;
  }
  id v51 = v144;
  uint64_t v52 = v111;
  if (!v144) {
    goto LABEL_16;
  }
  id v53 = v144;
  if (objc_msgSend(v53, sel_requestedExtent) == (id)-1)
  {

    uint64_t v49 = 0;
    id v51 = v144;
    goto LABEL_16;
  }
  id v103 = v53;
  uint64_t v54 = v40;
  sub_24D4759C8(v106, v40);
  uint64_t v55 = v125;
  uint64_t v56 = v40;
  uint64_t v57 = v107;
  int v58 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))(v56, 1, v107);
  if (v58 != 1)
  {
    uint64_t v104 = v47;
    uint64_t v84 = v54;
    uint64_t v85 = v123;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v123, v84, v57);
    uint64_t v86 = &v85[*(int *)(v57 + 52)];
    uint64_t v87 = v120;
    uint64_t v88 = v121;
    (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v121, v86, v124);
    uint64_t v89 = v41;
    uint64_t v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
    uint64_t v91 = v122;
    if (v90(v88, 1, v122) == 1)
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v85, v107);

      (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v124);
    }
    else
    {
      uint64_t v92 = v89;
      uint64_t v93 = v117;
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v117, v88, v91);
      uint64_t v94 = v116;
      (*(void (**)(char *, uint64_t))(*v142[5] + 240))(v93, 1);
      uint64_t v95 = v91;
      uint64_t v96 = v92;
      uint64_t v97 = v115;
      uint64_t v98 = v42;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v94, 1, v42) != 1)
      {
        uint64_t v99 = v96;
        uint64_t v100 = v95;
        uint64_t v101 = v112;
        (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v112, v94, v98);

        uint64_t v102 = &v101[*(int *)(v98 + 48)];
        LODWORD(v102) = *(void *)&v102[*(int *)(type metadata accessor for ItemMetadata() + 104)] > 0;
        (*(void (**)(char *, uint64_t))(v97 + 8))(v101, v98);
        (*(void (**)(char *, uint64_t))(v99 + 8))(v117, v100);
        (*(void (**)(char *, uint64_t))(v125 + 8))(v123, v107);
        uint64_t v49 = 8 * v102;
        goto LABEL_26;
      }

      (*(void (**)(char *, uint64_t))(v96 + 8))(v117, v95);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v123, v107);
      (*(void (**)(char *, uint64_t))(v113 + 8))(v94, v114);
    }
    uint64_t v49 = 0;
LABEL_26:
    id v51 = v144;
    uint64_t v47 = v104;
    goto LABEL_15;
  }

  (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v54, v119);
  uint64_t v49 = 0;
LABEL_14:
  id v51 = v144;
LABEL_15:
  uint64_t v52 = v111;
LABEL_16:
  uint64_t v104 = v47;
  uint64_t v60 = v136;
  uint64_t v59 = v137;
  uint64_t v61 = (v136[17] >> 10) & 0x40 | v49;
  if ((v52 & 0x4400000000) != 0) {
    uint64_t v62 = v61 | 0x100;
  }
  else {
    uint64_t v62 = v61;
  }
  if (v51) {
    uint64_t v63 = v61;
  }
  else {
    uint64_t v63 = v62;
  }
  uint64_t v133 = (char *)v63;
  uint64_t v64 = *(void *)(v45 + 16);
  uint64_t v65 = v142;
  uint64_t v66 = (uint64_t (*)(uint64_t))(*v142)[34];
  id v67 = v51;
  uint64_t v68 = swift_retain();
  uint64_t v135 = v66(v68);
  uint64_t v69 = v138;
  uint64_t v70 = v143;
  (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v59, v50, v143);
  unint64_t v71 = (*(unsigned __int8 *)(v69 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  uint64_t v72 = swift_allocObject();
  uint64_t v134 = v50;
  uint64_t v73 = v72;
  uint64_t v74 = v127;
  *(void *)(v72 + 16) = v108;
  *(void *)(v72 + 24) = v74;
  uint64_t v75 = v126;
  *(void *)(v72 + 32) = v110;
  *(void *)(v72 + 40) = v75;
  *(void *)(v72 + 48) = v67;
  *(void *)(v72 + 56) = v60;
  *(unsigned char *)(v72 + 64) = (v63 & 8) != 0;
  uint64_t v77 = v140;
  uint64_t v76 = v141;
  *(void *)(v72 + 72) = v65;
  *(void *)(v72 + 80) = v76;
  *(void *)(v72 + 88) = v139;
  *(void *)(v72 + 96) = v77;
  (*(void (**)(unint64_t, char *, uint64_t))(v69 + 32))(v72 + v71, v59, v70);
  uint64_t v78 = *(void (**)(uint64_t, void, uint64_t, char *, uint64_t, id, char *, uint64_t (*)(uint64_t), uint64_t))(*(void *)v64 + 568);
  id v79 = v144;
  id v80 = v144;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v82 = v134;
  uint64_t v81 = (void *)v135;
  v78(v106, v105, v104, v134, v135, v79, v133, sub_24DC0D828, v73);
  swift_release();
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v82, v143);
}

uint64_t sub_24DBF2624(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v59 = a8;
  uint64_t v60 = a7;
  uint64_t v64 = a6;
  uint64_t v62 = a5;
  int v61 = a4;
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  uint64_t v10 = *(void *)(*(void *)a3 + 600);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v11 = sub_24DCCA3F8();
  uint64_t v53 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v50 = (char *)&v50 - v15;
  uint64_t v63 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v65 = AssociatedTypeWitness;
  uint64_t v66 = v17;
  uint64_t v67 = AssociatedConformanceWitness;
  uint64_t v68 = v19;
  uint64_t v20 = type metadata accessor for FileItemVersion();
  uint64_t v21 = sub_24DCCA3F8();
  uint64_t v51 = *(void *)(v21 - 8);
  uint64_t v52 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v50 - v22;
  uint64_t v24 = swift_getTupleTypeMetadata2();
  uint64_t v25 = sub_24DCCA3F8();
  uint64_t v57 = *(void *)(v25 - 8);
  uint64_t v58 = v25;
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v50 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v50 - v29;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v31 = sub_24DCCB058();
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (void **)((char *)&v50 - v32);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))((char *)&v50 - v32, v55, v31);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v35 = *v33;
    if (v56)
    {
      uint64_t v36 = v56;
      if (objc_msgSend(v36, sel_requestedExtent) != (id)-1) {
        objc_msgSend(v36, sel_setSelectedForMaterialization_, 0);
      }
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v30, 1, 1, v24);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v23, 1, 1, v20);
    uint64_t v37 = *(void *)(v63 + 136);
    id v38 = v35;
    sub_24DBEAB88((uint64_t)v30, v61 & 1, 0, v35, (uint64_t)v23, 0, v62, v64, v37, v60, v59);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v23, v52);
    return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v30, v58);
  }
  else
  {
    uint64_t v40 = v53;
    uint64_t v41 = v50;
    (*(void (**)(char *, void **, uint64_t))(v53 + 32))(v50, v33, v11);
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v14, v41, v11);
    uint64_t v42 = TupleTypeMetadata2;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v14, 1, TupleTypeMetadata2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v11);
      uint64_t v43 = 1;
    }
    else
    {
      uint64_t v44 = *((void *)v14 + 4);
      char v45 = v14[40];
      uint64_t v46 = *((void *)v14 + 6);
      uint64_t v47 = &v14[*(int *)(v42 + 48)];
      BOOL v48 = &v28[*(int *)(v24 + 48)];
      long long v49 = *((_OWORD *)v14 + 1);
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v14;
      *((_OWORD *)v28 + 1) = v49;
      *((void *)v28 + 4) = v44;
      v28[40] = v45;
      *((void *)v28 + 6) = v46;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v48, v47, v10);
      uint64_t v43 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v28, v43, 1, v24);
    sub_24DBEAB88((uint64_t)v28, v61 & 1, 0, 0, a9, v56, v62, v64, *(void *)(v63 + 136), v60, v59);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v28, v58);
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v41, v11);
  }
}

uint64_t sub_24DBF2CFC(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6 = (uint64_t)v5;
  id v201 = a4;
  uint64_t v202 = a5;
  uint64_t v203 = a3;
  uint64_t v204 = a1;
  unint64_t v205 = a2;
  uint64_t v7 = *v5;
  uint64_t v8 = *((void *)*v5 + 76);
  uint64_t v9 = *((void *)*v5 + 78);
  uint64_t v10 = type metadata accessor for SnapshotItem();
  uint64_t v168 = sub_24DCCA3F8();
  uint64_t v167 = *(void *)(v168 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v168);
  uint64_t v166 = (char *)&v148 - v12;
  uint64_t v169 = v10;
  uint64_t v170 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v164 = (char *)&v148 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v165 = (char *)&v148 - v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v178 = (void *)sub_24DCCA3F8();
  unint64_t v177 = *(v178 - 1);
  uint64_t v17 = MEMORY[0x270FA5388](v178);
  uint64_t v176 = (char *)&v148 - v18;
  uint64_t v181 = AssociatedTypeWitness;
  uint64_t v180 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v17);
  int v179 = (char *)&v148 - v19;
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  unint64_t v172 = v20;
  uint64_t v206 = v20;
  uint64_t v207 = v21;
  unint64_t v160 = v21;
  uint64_t v171 = AssociatedConformanceWitness;
  uint64_t v208 = AssociatedConformanceWitness;
  uint64_t v209 = v23;
  uint64_t v159 = v23;
  uint64_t v24 = type metadata accessor for FileItemVersion();
  uint64_t v186 = sub_24DCCA3F8();
  uint64_t v185 = *(void *)(v186 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v186);
  uint64_t v163 = (char *)&v148 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v183 = (char *)&v148 - v28;
  uint64_t v189 = v24;
  unint64_t v184 = *(void *)(v24 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v162 = (char *)&v148 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v175 = (char *)&v148 - v32;
  uint64_t v157 = v33;
  MEMORY[0x270FA5388](v31);
  uint64_t v182 = (char *)&v148 - v34;
  unint64_t v200 = v7;
  uint64_t v35 = *((void *)v7 + 77);
  uint64_t v36 = *((void *)v7 + 75);
  uint64_t v37 = swift_getAssociatedTypeWitness();
  uint64_t v38 = swift_getAssociatedTypeWitness();
  uint64_t v39 = swift_getAssociatedConformanceWitness();
  uint64_t v40 = swift_getAssociatedConformanceWitness();
  uint64_t v174 = v37;
  uint64_t v206 = v37;
  uint64_t v207 = v38;
  uint64_t v173 = (void *)v39;
  uint64_t v208 = v39;
  uint64_t v209 = v40;
  uint64_t v41 = type metadata accessor for FileItemVersion();
  uint64_t v193 = sub_24DCCA3F8();
  unint64_t v191 = *(void (**)(char *, char *, uint64_t))(v193 - 8);
  uint64_t v42 = MEMORY[0x270FA5388](v193);
  uint64_t v192 = (char *)&v148 - v43;
  uint64_t v196 = v41;
  uint64_t v197 = *(void *)(v41 - 8);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  char v161 = (char *)&v148 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = v45;
  MEMORY[0x270FA5388](v44);
  uint64_t v190 = (char *)&v148 - v46;
  uint64_t v194 = v36;
  uint64_t v206 = v36;
  uint64_t v207 = v8;
  uint64_t v188 = v8;
  uint64_t v195 = v35;
  uint64_t v208 = v35;
  uint64_t v209 = v9;
  uint64_t v187 = v9;
  uint64_t v47 = type metadata accessor for ItemReconciliation();
  uint64_t v48 = sub_24DCCA3F8();
  uint64_t v198 = *(char **)(v48 - 8);
  uint64_t v199 = v48;
  uint64_t v49 = MEMORY[0x270FA5388](v48);
  uint64_t v51 = (char *)&v148 - v50;
  uint64_t v52 = *(void *)(v47 - 8);
  uint64_t v53 = *(void *)(v52 + 64);
  uint64_t v54 = MEMORY[0x270FA5388](v49);
  MEMORY[0x270FA5388](v54);
  uint64_t v56 = (char *)&v148 - v55;
  uint64_t v57 = v6 + *((void *)v200 + 72);
  sub_24D4759C8(v57, (uint64_t)v51);
  uint64_t v152 = v57;
  uint64_t v153 = v53;
  unint64_t v200 = (char *)&v148 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = v56;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v51, 1, v47) == 1)
  {
    (*((void (**)(char *, uint64_t))v198 + 1))(v51, v199);
    return sub_24DBF174C(v204, (uint64_t)v205, v203, (uint64_t)v201, v202);
  }
  uint64_t v199 = v6;
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
  uint64_t v60 = v155;
  uint64_t v154 = v47;
  v59(v155, v51, v47);
  uint64_t v61 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v62 = v191;
  uint64_t v63 = v192;
  uint64_t v64 = v193;
  (*((void (**)(char *, char *, uint64_t))v191 + 2))(v192, &v60[*(int *)(v61 + 48)], v193);
  uint64_t v65 = v196;
  uint64_t v66 = v197;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v63, 1, v196) == 1)
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v60, v154);
    (*((void (**)(char *, uint64_t))v62 + 1))(v63, v64);
    return sub_24DBF174C(v204, (uint64_t)v205, v203, (uint64_t)v201, v202);
  }
  uint64_t v193 = v52 + 32;
  uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
  uint64_t v68 = v190;
  unint64_t v191 = v59;
  uint64_t v192 = (char *)(v66 + 32);
  uint64_t v150 = v67;
  v67(v190, v63, v65);
  uint64_t v69 = &v60[*(int *)(v154 + 52)];
  uint64_t v70 = *(int *)(type metadata accessor for ItemReconciliationHalf() + 48);
  uint64_t v198 = v69;
  unint64_t v71 = &v69[v70];
  uint64_t v72 = v185;
  uint64_t v73 = v183;
  uint64_t v74 = v186;
  (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v183, v71, v186);
  unint64_t v75 = v184;
  uint64_t v76 = v189;
  if ((*(unsigned int (**)(char *, uint64_t))(v184 + 48))(v73, 1) == 1)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v68, v65);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v155, v154);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
    return sub_24DBF174C(v204, (uint64_t)v205, v203, (uint64_t)v201, v202);
  }
  uint64_t v151 = v52;
  uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v75 + 32);
  uint64_t v78 = (uint64_t)v182;
  uint64_t v183 = (char *)(v75 + 32);
  uint64_t v149 = v77;
  v77(v182, v73, v76);
  unint64_t v79 = v177;
  id v80 = v176;
  uint64_t v81 = v178;
  (*(void (**)(char *, char *, void *))(v177 + 16))(v176, v198, v178);
  uint64_t v82 = v180;
  uint64_t v83 = v181;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v180 + 48))(v80, 1, v181) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v78, v76);
    (*(void (**)(char *, uint64_t))(v197 + 8))(v190, v65);
    (*(void (**)(char *, uint64_t))(v151 + 8))(v155, v154);
    (*(void (**)(char *, void *))(v79 + 8))(v80, v81);
    return sub_24DBF174C(v204, (uint64_t)v205, v203, (uint64_t)v201, v202);
  }
  uint64_t v84 = v82;
  (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v179, v80, v83);
  uint64_t v85 = v205;
  uint64_t v86 = (void *)v205[5];
  uint64_t v87 = v173;
  uint64_t v88 = (uint64_t (*)(uint64_t, void *))v173[6];
  uint64_t v198 = (char *)v86[2];
  swift_retain();
  char v89 = v88(v174, v87);
  uint64_t v90 = (uint64_t)v182;
  uint64_t v91 = v189;
  char v92 = v89;
  uint64_t v93 = v175;
  uint64_t v178 = *(void **)(v75 + 16);
  ((void (*)(char *, char *, uint64_t))v178)(v175, v182, v189);
  if (v92)
  {
    uint64_t v94 = *(void (**)(char *, uint64_t))(v75 + 8);
    v94(v93, v91);
    uint64_t v95 = v179;
LABEL_14:
    sub_24DBF174C(v204, (uint64_t)v85, v203, (uint64_t)v201, v202);
    swift_release();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v95, v181);
    v94((char *)v90, v91);
LABEL_18:
    (*(void (**)(char *, uint64_t))(v197 + 8))(v190, v196);
    return (*(uint64_t (**)(char *, uint64_t))(v151 + 8))(v155, v154);
  }
  unint64_t v177 = v75 + 16;
  char v96 = (*(uint64_t (**)(unint64_t))(v171 + 48))(v172);
  uint64_t v98 = *(void (**)(char *, uint64_t))(v75 + 8);
  uint64_t v97 = (char *)(v75 + 8);
  uint64_t v94 = v98;
  v98(v93, v91);
  if (v96)
  {
    uint64_t v95 = v179;
    goto LABEL_14;
  }
  uint64_t v176 = v97;
  uint64_t v99 = (void (*)(uint64_t, uint64_t))v94;
  uint64_t v100 = v166;
  uint64_t v101 = v179;
  (*(void (**)(char *, uint64_t))(*v86 + 240))(v179, 1);
  uint64_t v102 = v170;
  uint64_t v103 = v169;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48))(v100, 1, v169) == 1)
  {
    (*(void (**)(char *, uint64_t))(v167 + 8))(v100, v168);
    sub_24DBF174C(v204, (uint64_t)v85, v203, (uint64_t)v201, v202);
    swift_release();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v101, v181);
    uint64_t v104 = v90;
LABEL_17:
    v99(v104, v189);
    goto LABEL_18;
  }
  uint64_t v106 = *(char **)(v102 + 32);
  uint64_t v105 = v102 + 32;
  uint64_t v107 = v165;
  uint64_t v175 = v106;
  ((void (*)(char *, char *, uint64_t))v106)(v165, v100, v103);
  uint64_t WitnessTable = swift_getWitnessTable();
  if ((sub_24D98BC10(v103, WitnessTable) & 1) != 0
    || !sub_24DB33B88((uint64_t)&v107[*(int *)(v103 + 40)], (uint64_t)v182))
  {
    sub_24DBF174C(v204, (uint64_t)v85, v203, (uint64_t)v201, v202);
    swift_release();
    (*(void (**)(char *, uint64_t))(v170 + 8))(v107, v103);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v101, v181);
LABEL_31:
    uint64_t v104 = (uint64_t)v182;
    goto LABEL_17;
  }
  uint64_t v174 = v105;
  uint64_t v109 = (*(uint64_t (**)(uint64_t))(*(void *)v85[4] + 624))(v152);
  LODWORD(v168) = v110 == 4;
  if (v110 == 4) {
    uint64_t v111 = 0;
  }
  else {
    uint64_t v111 = v109;
  }
  uint64_t v167 = v111;
  uint64_t v112 = (uint64_t)v182;
  uint64_t v113 = v154;
  uint64_t v114 = v163;
  uint64_t result = (*(uint64_t (**)(void))(*v205 + 272))();
  uint64_t v173 = (void *)result;
  if (v204) {
    unint64_t v172 = 0;
  }
  else {
    unint64_t v172 = (unint64_t)((*(unsigned char *)(v199 + 140) & 0x44) != 0) << 8;
  }
  uint64_t v115 = v165;
  LODWORD(v171) = v155[*(int *)(v113 + 56)];
  if (v171 != 4)
  {
    uint64_t v116 = v113;
    uint64_t v117 = v103;
    uint64_t v118 = &v165[*(int *)(v103 + 48)];
    uint64_t v166 = *(char **)&v118[*(int *)(type metadata accessor for ItemMetadata() + 100)];
    uint64_t v119 = v189;
    uint64_t v120 = (void (*)(char *, uint64_t, uint64_t))v178;
    ((void (*)(char *, uint64_t))v178)(v114, v112);
    unint64_t v121 = v184 + 56;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v184 + 56))(v114, 0, 1, v119);
    v120(v162, v112, v119);
    uint64_t v122 = v151;
    (*(void (**)(char *, char *, uint64_t))(v151 + 16))(v200, v155, v116);
    uint64_t v123 = v170;
    (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v164, v115, v117);
    uint64_t v124 = v196;
    uint64_t v125 = v197;
    (*(void (**)(char *, char *, uint64_t))(v197 + 16))(v161, v190, v196);
    unint64_t v126 = (*(unsigned __int8 *)(v121 + 24) + 96) & ~(unint64_t)*(unsigned __int8 *)(v121 + 24);
    uint64_t v178 = (void *)((v157 + v126 + 7) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v127 = ((unint64_t)v178 + *(unsigned __int8 *)(v122 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
    unint64_t v177 = (v153 + v127 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v128 = (*(unsigned __int8 *)(v123 + 80) + v177 + 9) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
    unint64_t v160 = (v158 + *(unsigned __int8 *)(v125 + 80) + v128) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80);
    unint64_t v184 = (v156 + v160 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v129 = v124;
    unint64_t v130 = (v184 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v131 = (char *)swift_allocObject();
    uint64_t v132 = v188;
    *((void *)v131 + 2) = v194;
    *((void *)v131 + 3) = v132;
    uint64_t v133 = v187;
    *((void *)v131 + 4) = v195;
    *((void *)v131 + 5) = v133;
    id v134 = v201;
    uint64_t v135 = v202;
    *((void *)v131 + 6) = v205;
    *((void *)v131 + 7) = v134;
    uint64_t v136 = v199;
    *((void *)v131 + 8) = v135;
    *((void *)v131 + 9) = v136;
    uint64_t v137 = &v131[v126];
    uint64_t v138 = v203;
    uint64_t v139 = v204;
    *((void *)v131 + 10) = v204;
    *((void *)v131 + 11) = v138;
    v149(v137, v162, v189);
    uint64_t v140 = v198;
    *(void *)((char *)v178 + (void)v131) = v198;
    v191(&v131[v127], v200, v154);
    uint64_t v141 = &v131[v177];
    *(void *)uint64_t v141 = v167;
    v141[8] = v168;
    ((void (*)(char *, char *, uint64_t))v175)(&v131[v128], v164, v169);
    v150(&v131[v160], v161, v129);
    double v142 = v173;
    *(void *)&v131[v184] = v173;
    unint64_t v143 = v172;
    *(void *)&v131[v130] = v172;
    unint64_t v200 = (char *)(*(void *)v140 + 568);
    id v144 = *(void (**)(char *, void, char *, char *, void *, void *, unint64_t, uint64_t (*)(uint64_t), void *))v200;
    id v201 = v142;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v145 = v139;
    swift_retain();
    uint64_t v146 = v179;
    uint64_t v147 = v163;
    v144(v179, v171, v166, v163, v142, v139, v143, sub_24DC0C7CC, v131);
    swift_release();

    swift_release();
    (*(void (**)(char *, uint64_t))(v185 + 8))(v147, v186);
    (*(void (**)(char *, uint64_t))(v170 + 8))(v165, v169);
    (*(void (**)(char *, uint64_t))(v180 + 8))(v146, v181);
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DBF4308(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v120 = a8;
  uint64_t v124 = a7;
  uint64_t v125 = a6;
  uint64_t v128 = a5;
  uint64_t v122 = a3;
  uint64_t v123 = a4;
  uint64_t v126 = a1;
  uint64_t v17 = *a2;
  uint64_t v18 = *(void *)(*a2 + 88);
  uint64_t v19 = *(void *)(*a2 + 104);
  uint64_t v109 = type metadata accessor for SnapshotItem();
  uint64_t v110 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v108 = (char *)&v102 - v20;
  uint64_t v21 = *(void *)(v17 + 96);
  unint64_t v127 = a2;
  uint64_t v22 = *(void *)(v17 + 80);
  uint64_t v112 = v21;
  uint64_t v111 = v22;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v114 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v113 = (char *)&v102 - v23;
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v129 = v24;
  *((void *)&v129 + 1) = v25;
  uint64_t v118 = v27;
  uint64_t v119 = AssociatedConformanceWitness;
  *(void *)&long long v130 = AssociatedConformanceWitness;
  *((void *)&v130 + 1) = v27;
  uint64_t v28 = type metadata accessor for FileItemVersion();
  uint64_t v116 = *(void *)(v28 - 8);
  uint64_t v117 = v28;
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v102 - v29;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v32 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v33 = *(void *)(v32 + 64);
  uint64_t v34 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v107 = (_OWORD *)((char *)&v102 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v34);
  unint64_t v121 = (_OWORD *)((char *)&v102 - v35);
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v36 = sub_24DCCB058();
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = (char *)&v102 - v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))((char *)&v102 - v37, v126, v36);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

LABEL_4:
    uint64_t v40 = swift_allocObject();
    uint64_t v41 = v122;
    uint64_t v42 = v123;
    *(void *)(v40 + 16) = v122;
    *(void *)(v40 + 24) = v42;
    uint64_t v43 = (void *)swift_allocObject();
    uint64_t v44 = v127;
    uint64_t v46 = v124;
    uint64_t v45 = v125;
    v43[2] = v128;
    void v43[3] = v45;
    v43[4] = v44;
    v43[5] = v46;
    v43[6] = v41;
    v43[7] = v42;
    uint64_t v47 = type metadata accessor for Continuation();
    swift_retain_n();
    swift_retain();
    id v48 = v45;
    swift_retain();
    swift_retain();
    sub_24D6E675C((uint64_t)"provideWithExistingItem(for:db:result:completion:)", 50, 2, (uint64_t)sub_24D73CC58, v40, (uint64_t)sub_24DC0CB38, (uint64_t)v43, v47, MEMORY[0x263F8D310]);
    swift_release();
    return swift_release();
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v38, 1, TupleTypeMetadata2) == 1) {
    goto LABEL_4;
  }
  uint64_t v126 = v32;
  uint64_t v105 = a9;
  uint64_t v106 = TupleTypeMetadata2;
  uint64_t v50 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v51 = v121;
  uint64_t v52 = (char *)v121 + v50;
  uint64_t v53 = &v38[v50];
  uint64_t v54 = *((void *)v38 + 4);
  char v55 = v38[40];
  uint64_t v56 = *((void *)v38 + 6);
  long long v57 = *((_OWORD *)v38 + 1);
  *unint64_t v121 = *(_OWORD *)v38;
  v51[1] = v57;
  *((void *)v51 + 4) = v54;
  *((unsigned char *)v51 + 40) = v55;
  *((void *)v51 + 6) = v56;
  uint64_t v58 = *(void *)(v18 - 8);
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v52, v53, v18);
  uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v19 + 112);
  uint64_t v104 = v52;
  v59(v18, v19);
  BOOL v60 = sub_24DB33B88((uint64_t)v30, v120);
  uint64_t v61 = (*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v30, v117);
  if (v60)
  {
    uint64_t v120 = *(void *)(v127[4] + 16);
    (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v113, v128 + *(void *)(*(void *)v128 + 576), AssociatedTypeWitness);
    *(void *)&long long v129 = v111;
    *((void *)&v129 + 1) = v18;
    *(void *)&long long v130 = v112;
    *((void *)&v130 + 1) = v19;
    uint64_t result = type metadata accessor for ItemReconciliation();
    int v62 = *(unsigned __int8 *)(a10 + *(int *)(result + 56));
    if (v62 == 4)
    {
      __break(1u);
    }
    else
    {
      uint64_t v117 = a15;
      uint64_t v118 = a16;
      uint64_t v63 = v108;
      uint64_t v64 = v109;
      (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v108, a13, v109);
      LODWORD(v119) = v62;
      uint64_t v116 = a14;
      if (a12)
      {
        uint64_t v70 = &v63[*(int *)(v64 + 48)];
        a11 = *(void *)&v70[*(int *)(type metadata accessor for ItemMetadata() + 100)];
      }
      uint64_t v103 = a11;
      unint64_t v71 = v121;
      uint64_t v72 = *(void (**)(char *, uint64_t))(v110 + 8);
      swift_retain();
      v72(v63, v64);
      uint64_t v132 = *((void *)v71 + 6);
      uint64_t v73 = v132;
      long long v74 = v71[1];
      long long v129 = *v71;
      long long v130 = v74;
      long long v131 = v71[2];
      long long v75 = v131;
      uint64_t v76 = v107;
      uint64_t v77 = (char *)v107 + *(int *)(v106 + 48);
      *uint64_t v107 = v129;
      v76[1] = v74;
      v76[2] = v75;
      *((void *)v76 + 6) = v73;
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v77, v104, v18);
      unint64_t v78 = (*(unsigned __int8 *)(v126 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80);
      unint64_t v79 = (v33 + v78 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v80 = (v79 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v81 = (v80 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v82 = (v81 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v83 = (char *)swift_allocObject();
      *((void *)v83 + 2) = v111;
      *((void *)v83 + 3) = v18;
      *((void *)v83 + 4) = v112;
      *((void *)v83 + 5) = v19;
      *((void *)v83 + 6) = v105;
      (*(void (**)(char *, _OWORD *, uint64_t))(v126 + 32))(&v83[v78], v76, v106);
      uint64_t v84 = v125;
      *(void *)&v83[v79] = v125;
      uint64_t v85 = v127;
      *(void *)&v83[v80] = v128;
      *(void *)&v83[v81] = v85;
      *(void *)&v83[v82] = v124;
      uint64_t v86 = &v83[(v82 + 15) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v87 = v123;
      *(void *)uint64_t v86 = v122;
      *((void *)v86 + 1) = v87;
      uint64_t v88 = *(void (**)(char *, void, uint64_t, long long *, uint64_t, uint64_t, void *, uint64_t, void (*)(uint64_t), char *))(*(void *)v120 + 576);
      id v89 = v84;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_24D5D7B80((uint64_t)&v129);
      uint64_t v90 = v113;
      v88(v113, v119, v103, &v129, v116, v117, v84, v118, sub_24DC0CCCC, v83);
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v114 + 8))(v90, AssociatedTypeWitness);
      return (*(uint64_t (**)(_OWORD *, uint64_t))(v126 + 8))(v121, v106);
    }
  }
  else
  {
    uint64_t v66 = v106;
    uint64_t v67 = v126;
    if (*(void *)v51)
    {
      uint64_t v68 = *(void *)(v105 + 136);
      MEMORY[0x270FA5388](v61);
      *(&v102 - 4) = v68;
      *((_DWORD *)&v102 - 6) = 0;
      uint64_t v101 = v69;
      sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D5D7BB0);
      *(unsigned char *)(v68 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
      if (*(void *)(v68 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
      {
        uint64_t ObjectType = swift_getObjectType();
        swift_unknownObjectRetain();
        MEMORY[0x2533283F0](1, ObjectType);
        swift_unknownObjectRelease();
      }
    }
    uint64_t v92 = swift_allocObject();
    uint64_t v93 = v122;
    uint64_t v94 = v123;
    *(void *)(v92 + 16) = v122;
    *(void *)(v92 + 24) = v94;
    uint64_t v95 = (void *)swift_allocObject();
    char v96 = v127;
    uint64_t v98 = v124;
    uint64_t v97 = v125;
    void v95[2] = v128;
    v95[3] = v97;
    v95[4] = v96;
    v95[5] = v98;
    v95[6] = v93;
    v95[7] = v94;
    uint64_t v99 = type metadata accessor for Continuation();
    swift_retain_n();
    swift_retain();
    id v100 = v97;
    swift_retain();
    swift_retain();
    sub_24D6E675C((uint64_t)"provideWithExistingItem(for:db:result:completion:)", 50, 2, (uint64_t)sub_24D73CC58, v92, (uint64_t)sub_24DC0CB38, (uint64_t)v95, v99, MEMORY[0x263F8D310]);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(_OWORD *, uint64_t))(v67 + 8))(v121, v66);
  }
  return result;
}

void sub_24DBF4EC8(uint64_t a1, void *a2, char *a3, uint64_t (*a4)(char *, uint64_t, uint64_t), void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v134 = a8;
  uint64_t v130 = a7;
  uint64_t v136 = a6;
  uint64_t v120 = a4;
  uint64_t v140 = a3;
  uint64_t v137 = a1;
  uint64_t v11 = *a5;
  uint64_t v139 = *(void *)(*a2 + 192);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v13 = (char *)&v108 - v12;
  uint64_t v14 = *(void *)(v11 + 600);
  uint64_t v138 = swift_getTupleTypeMetadata2();
  uint64_t v15 = sub_24DCCA3F8();
  uint64_t v132 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  unint64_t v121 = (char *)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v108 - v19;
  MEMORY[0x270FA5388](v18);
  long long v131 = (char *)&v108 - v21;
  uint64_t v135 = a5;
  uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  id v142 = AssociatedTypeWitness;
  uint64_t v143 = v23;
  uint64_t v144 = AssociatedConformanceWitness;
  uint64_t v145 = v25;
  uint64_t v124 = type metadata accessor for FileItemVersion();
  uint64_t v26 = sub_24DCCA3F8();
  uint64_t v128 = *(void *)(v26 - 8);
  uint64_t v129 = v26;
  MEMORY[0x270FA5388](v26);
  unint64_t v127 = (char *)&v108 - v27;
  uint64_t v122 = v14;
  uint64_t v123 = swift_getTupleTypeMetadata2();
  uint64_t v126 = sub_24DCCA3F8();
  uint64_t v125 = *(void *)(v126 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v126);
  uint64_t v30 = (char *)&v108 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v117 = (char *)&v108 - v31;
  uint64_t v116 = (void (*)(char *, char *, uint64_t))sub_24DCC8E28();
  uint64_t v115 = *((void *)v116 - 1);
  MEMORY[0x270FA5388](v116);
  uint64_t v118 = (char *)&v108 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v133 = v15;
  uint64_t v33 = sub_24DCCB058();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v37 = (void **)((char *)&v108 - v36);
  if (*(void *)v140)
  {
    uint64_t v38 = a2[17];
    MEMORY[0x270FA5388](v35);
    sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D5DC2F0);
    *(unsigned char *)(v38 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(void *)(v38 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      MEMORY[0x2533283F0](1, ObjectType);
      swift_unknownObjectRelease();
    }
  }
  (*(void (**)(void **, uint64_t, uint64_t))(v34 + 16))(v37, v137, v33);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    id v48 = v131;
    uint64_t v47 = v132;
    uint64_t v49 = v37;
    uint64_t v50 = v133;
    (*(void (**)(char *, void **, uint64_t))(v132 + 32))(v131, v49, v133);
    uint64_t v116 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
    uint64_t v117 = (char *)(v47 + 16);
    v116(v20, v48, v50);
    uint64_t v51 = v138;
    uint64_t v52 = *(void *)(v138 - 8);
    uint64_t v120 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
    uint64_t v118 = (char *)(v52 + 48);
    int v53 = v120(v20, 1, v138);
    uint64_t v114 = a9;
    uint64_t v113 = v30;
    if (v53 == 1)
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v20, v50);
      uint64_t v54 = 0;
      uint64_t v115 = 0;
      uint64_t v111 = 0;
      uint64_t v137 = 0;
      uint64_t v110 = 0;
      uint64_t v112 = 0;
      unint64_t v55 = 0xB000000000000000;
    }
    else
    {
      uint64_t v54 = *(void *)v20;
      uint64_t v115 = *((void *)v20 + 1);
      unint64_t v55 = *((void *)v20 + 2);
      uint64_t v111 = *((void *)v20 + 3);
      uint64_t v137 = *((void *)v20 + 4);
      uint64_t v110 = v20[40];
      uint64_t v112 = *((void *)v20 + 6);
      (*(void (**)(char *))(*(void *)(v122 - 8) + 8))(&v20[*(int *)(v51 + 48)]);
    }
    int v62 = &v13[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v63 = v139;
    uint64_t v64 = *(void *)v140;
    uint64_t v65 = *((void *)v140 + 1);
    unint64_t v66 = *((void *)v140 + 2);
    uint64_t v67 = *((void *)v140 + 3);
    uint64_t v68 = *((void *)v140 + 4);
    char v69 = v140[40];
    uint64_t v70 = *((void *)v140 + 6);
    *(void *)uint64_t v13 = *(void *)v140;
    *((void *)v13 + 1) = v65;
    *((void *)v13 + 2) = v66;
    *((void *)v13 + 3) = v67;
    *((void *)v13 + 4) = v68;
    unsigned char v13[40] = v69;
    *((void *)v13 + 6) = v70;
    uint64_t v71 = *(void *)(v63 - 8);
    uint64_t v72 = *(void (**)(void))(v71 + 16);
    uint64_t v140 = v62;
    v72();
    if (v55 >> 60 == 11)
    {
      sub_24D416048(v65, v66);
      sub_24D3E3850(v54, v115, v55);
      uint64_t v73 = v64;
      uint64_t v74 = v65;
      unint64_t v75 = v66;
LABEL_25:
      sub_24D3E3850(v73, v74, v75);
      int v85 = 0;
      uint64_t v78 = v130;
      uint64_t v86 = v131;
      uint64_t v88 = v134;
      uint64_t v87 = v135;
      uint64_t v90 = v132;
      uint64_t v89 = v133;
      uint64_t v76 = v116;
LABEL_26:
      unint64_t v79 = v140;
LABEL_27:
      (*(void (**)(char *, uint64_t))(v71 + 8))(v79, v139);
      uint64_t v91 = v121;
      v76(v121, v86, v89);
      uint64_t v92 = v138;
      if (v120(v91, 1, v138) == 1)
      {
        (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v89);
        uint64_t v93 = 1;
        uint64_t v94 = v123;
        uint64_t v95 = (uint64_t)v113;
      }
      else
      {
        uint64_t v96 = *((void *)v91 + 4);
        char v97 = v91[40];
        uint64_t v98 = *((void *)v91 + 6);
        uint64_t v99 = &v91[*(int *)(v92 + 48)];
        uint64_t v94 = v123;
        uint64_t v95 = (uint64_t)v113;
        id v100 = (char *)v113 + *(int *)(v123 + 48);
        long long v101 = *((_OWORD *)v91 + 1);
        *uint64_t v113 = *(_OWORD *)v91;
        *(_OWORD *)(v95 + 16) = v101;
        *(void *)(v95 + 32) = v96;
        *(unsigned char *)(v95 + 40) = v97;
        *(void *)(v95 + 48) = v98;
        (*(void (**)(char *, char *))(*(void *)(v122 - 8) + 32))(v100, v99);
        uint64_t v93 = 0;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v95, v93, 1, v94);
      uint64_t v102 = (uint64_t)v127;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(v127, 1, 1);
      sub_24DBEAB88(v95, 0, v85, 0, v102, 0, v136, v78, v87[17], v88, v114);
      (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v102, v129);
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v95, v126);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v86, v89);
      return;
    }
    if (v54 != v64)
    {
      uint64_t v73 = v54;
      uint64_t v74 = v115;
      unint64_t v75 = v55;
      goto LABEL_25;
    }
    if (v55 >> 60 == 15)
    {
      uint64_t v76 = v116;
      if (v66 >> 60 == 15)
      {
        sub_24D416048(v65, v66);
        uint64_t v77 = v110;
        sub_24D3E3850(v54, v115, v55);
        uint64_t v78 = v130;
        unint64_t v79 = v140;
LABEL_35:
        if (v77)
        {
          if (v69)
          {
LABEL_42:
            int v85 = 1;
            goto LABEL_43;
          }
        }
        else if ((v69 & 1) == 0 && v111 == v67 && v137 == v68)
        {
          goto LABEL_42;
        }
LABEL_39:
        int v85 = 0;
LABEL_43:
        uint64_t v88 = v134;
        uint64_t v87 = v135;
        uint64_t v90 = v132;
        uint64_t v89 = v133;
        uint64_t v86 = v131;
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v76 = v116;
      if (v66 >> 60 != 15)
      {
        sub_24D416048(v65, v66);
        uint64_t v103 = v54;
        uint64_t v109 = v54;
        uint64_t v104 = v115;
        uint64_t v105 = v110;
        sub_24D3F1CDC(v103, v115, v55);
        LODWORD(TupleTypeMetadata2) = sub_24D401DDC(v104, v55, v65, v66);
        unint64_t v106 = v66;
        uint64_t v77 = v105;
        sub_24D416034(v65, v106);
        uint64_t v107 = v109;
        sub_24D3E3850(v109, v104, v55);
        sub_24D3E3850(v107, v104, v55);
        uint64_t v78 = v130;
        unint64_t v79 = v140;
        if ((TupleTypeMetadata2 & 1) == 0) {
          goto LABEL_39;
        }
        goto LABEL_35;
      }
    }
    sub_24D416048(v65, v66);
    sub_24D416034(v115, v55);
    sub_24D416034(v65, v66);
    int v85 = 0;
    uint64_t v78 = v130;
    uint64_t v86 = v131;
    uint64_t v88 = v134;
    uint64_t v87 = v135;
    uint64_t v90 = v132;
    uint64_t v89 = v133;
    goto LABEL_26;
  }
  uint64_t v40 = *v37;
  uint64_t v42 = v134;
  uint64_t v41 = v135;
  uint64_t v43 = v120;
  uint64_t v44 = v118;
  if (v120)
  {
    uint64_t v45 = v120;
    if (objc_msgSend(v45, sel_requestedExtent) != (id)-1) {
      objc_msgSend(v45, sel_setSelectedForMaterialization_, 0);
    }
  }
  id v142 = v40;
  id v46 = v40;
  type metadata accessor for NSFileProviderError(0);
  if (swift_dynamicCast())
  {

LABEL_15:
    uint64_t v58 = (uint64_t)v117;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56))(v117, 1, 1);
    uint64_t v59 = (uint64_t)v127;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(v127, 1, 1);
    uint64_t v60 = v41[17];
    id v61 = v40;
    sub_24DBEAB88(v58, 0, 0, v40, v59, 0, v136, v130, v60, v42, a9);

    (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v59, v129);
    (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v58, v126);
    return;
  }

  id v142 = v40;
  id v56 = v40;
  long long v57 = v116;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v115 + 8))(v44, v57);
    goto LABEL_15;
  }

  uint64_t v80 = swift_allocObject();
  *(void *)(v80 + 16) = v42;
  *(void *)(v80 + 24) = a9;
  unint64_t v81 = (void *)swift_allocObject();
  v81[2] = v41;
  v81[3] = v43;
  uint64_t v82 = v130;
  v81[4] = v136;
  v81[5] = v82;
  v81[6] = v42;
  v81[7] = a9;
  uint64_t v83 = type metadata accessor for Continuation();
  swift_retain_n();
  uint64_t v84 = v43;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D6E675C((uint64_t)"provideWithExistingItem(for:db:result:completion:)", 50, 2, (uint64_t)sub_24D73CC58, v80, (uint64_t)sub_24DC0CB38, (uint64_t)v81, v83, MEMORY[0x263F8D310]);
  swift_release();
  swift_release();
}

void sub_24DBF5E80(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v16 = a4;
  uint64_t v17 = a5;
  uint64_t v14 = a1;
  uint64_t v15 = a3;
  uint64_t v7 = *(void *)v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for ReconciliationID();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v14 - v10;
  uint64_t v12 = v14;
  (*(void (**)(char *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))((char *)&v14 - v10, &v6[*(void *)(v7 + 576)], AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = (void *)(*(uint64_t (**)(char *))(*v12 + 472))(v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v13) {
    objc_msgSend(v13, sel_setSelectedForMaterialization_, 1);
  }
  if (*(unsigned char *)(v12[4] + 32) == 1) {
    sub_24DBF2CFC(v13, v12, v15, v16, v17);
  }
  else {
    sub_24DBF174C(v13, (uint64_t)v12, v15, (uint64_t)v16, v17);
  }
}

uint64_t sub_24DBF6134@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_24DC0101C(a1, a2);
}

uint64_t sub_24DBF614C@<X0>(uint64_t a1@<X8>)
{
  return sub_24DC01508(a1);
}

uint64_t type metadata accessor for Ingestion.FetchContent()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24DBF6178()
{
  return 0xD000000000000016;
}

uint64_t sub_24DBF6194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void, void, void), uint64_t a5)
{
  uint64_t v76 = a4;
  uint64_t v77 = a5;
  uint64_t v75 = a3;
  uint64_t v73 = (void *)*v5;
  uint64_t v8 = v73[76];
  uint64_t v9 = v73[77];
  uint64_t v10 = v73[78];
  uint64_t v79 = v73[75];
  uint64_t v7 = v79;
  uint64_t v80 = v8;
  uint64_t v81 = v9;
  uint64_t v82 = v10;
  uint64_t v57 = type metadata accessor for PersistenceTrigger();
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  unint64_t v55 = (char *)&v51 - v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = sub_24DCCA3F8();
  uint64_t v53 = *(void *)(v54 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v54);
  uint64_t v64 = (char *)&v51 - v14;
  uint64_t v74 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v59 = (char *)&v51 - v15;
  uint64_t v79 = v7;
  uint64_t v80 = v8;
  uint64_t v81 = v9;
  uint64_t v82 = v10;
  uint64_t v16 = type metadata accessor for ReconciliationMutation();
  uint64_t v78 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v51 - v17;
  uint64_t v58 = a1;
  uint64_t v71 = *(void ***)(a1 + 32);
  uint64_t v79 = v7;
  uint64_t v80 = v8;
  uint64_t v81 = v9;
  uint64_t v82 = v10;
  uint64_t v19 = type metadata accessor for JobResult();
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v62 = v10;
  uint64_t v22 = v16;
  uint64_t v63 = v8;
  uint64_t v23 = v7;
  uint64_t v24 = v72;
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  uint64_t v79 = AssociatedTypeWitness;
  uint64_t v80 = v20;
  uint64_t v81 = AssociatedConformanceWitness;
  uint64_t v82 = v25;
  uint64_t v26 = type metadata accessor for ReconciliationID();
  uint64_t v60 = v23;
  uint64_t v61 = v9;
  uint64_t v27 = type metadata accessor for ReconciliationSideMutation();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v28 = &v18[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v29 = v24 + v73[72];
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  uint64_t v68 = AssociatedTypeWitness;
  char v69 = v30;
  v30(v18, (char *)v29, AssociatedTypeWitness);
  uint64_t v70 = v26;
  swift_storeEnumTagMultiPayload();
  *uint64_t v28 = 0;
  uint64_t v66 = v27;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v73 = (void *)v19;
  uint64_t v31 = v71;
  sub_24D907568(v75, (uint64_t)v18);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v78 + 8);
  uint64_t v67 = v18;
  v78 += 8;
  v32(v18, v22);
  if (((uint64_t (*)(uint64_t))(*v31)[36])(v29))
  {
    if (((uint64_t (*)(uint64_t, uint64_t))(*v31)[46])(v29, 1))
    {
      uint64_t v79 = v60;
      uint64_t v80 = v63;
      uint64_t v81 = v61;
      uint64_t v82 = v62;
      type metadata accessor for Ingestion.FetchItemMetadata();
      uint64_t v33 = sub_24DC09748(v29, *(void *)(v24 + 120), *(void *)(v24 + 128), 16, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
      sub_24D85246C(v75, v33);
      swift_release();
    }
    else
    {
      ((void (*)(uint64_t))(*v31)[35])(v29);
      uint64_t v52 = v29;
      uint64_t v37 = v74;
      uint64_t v38 = v64;
      uint64_t v39 = v68;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v64, 1, v68) == 1)
      {
        (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v54);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v59, v38, v39);
        uint64_t v40 = swift_getTupleTypeMetadata2();
        uint64_t v41 = v55;
        uint64_t v42 = &v55[*(int *)(v40 + 48)];
        uint64_t v43 = v69;
        v69(v55, (char *)v52, v39);
        swift_storeEnumTagMultiPayload();
        v43(v42, v59, v39);
        swift_storeEnumTagMultiPayload();
        uint64_t v44 = v57;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *))(*(void *)v58 + 312))(v41);
        (*(void (**)(char *, uint64_t))(v56 + 8))(v41, v44);
        (*(void (**)(char *, uint64_t))(v74 + 8))(v59, v39);
      }
      if ((*(unsigned char *)(v24 + 139) & 2) == 0)
      {
        uint64_t v45 = (uint64_t)v67;
        id v46 = &v67[*(int *)(TupleTypeMetadata2 + 48)];
        uint64_t v47 = v52;
        v69(v67, (char *)v52, v39);
        swift_storeEnumTagMultiPayload();
        *(_OWORD *)id v46 = *(_OWORD *)(v24 + 120);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        uint64_t v48 = v75;
        sub_24D907568(v75, v45);
        v32((char *)v45, v22);
        uint64_t v79 = v60;
        uint64_t v80 = v63;
        uint64_t v81 = v61;
        uint64_t v82 = v62;
        type metadata accessor for Ingestion.MarkParentDeleted();
        uint64_t v49 = sub_24D732E08(v47, *(void *)(v24 + 120), *(void *)(v24 + 128), *(void *)(v24 + 136));
        sub_24D85246C(v48, v49);
        uint64_t v50 = swift_release();
        (*(void (**)(uint64_t))(*v31[2] + 848))(v50);
      }
    }
  }
  else
  {
    uint64_t v34 = (uint64_t)v67;
    uint64_t v35 = &v67[*(int *)(TupleTypeMetadata2 + 48)];
    v69(v67, (char *)v29, v68);
    swift_storeEnumTagMultiPayload();
    *(_OWORD *)uint64_t v35 = *(_OWORD *)(v24 + 120);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_24D907568(v75, v34);
    v32((char *)v34, v22);
  }
  return v76(0, 0, 0, 0);
}

uint64_t type metadata accessor for Ingestion.DeleteFolderFromSnapshotIfEmpty()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24DBF6B64()
{
  return 0xD000000000000013;
}

uint64_t sub_24DBF6B80(uint64_t a1, void (**a2)(char *, uint64_t *, uint64_t), uint64_t a3, void (*a4)(uint64_t, void, void, void), uint64_t a5)
{
  uint64_t v95 = a4;
  uint64_t v82 = a3;
  uint64_t v89 = a2;
  uint64_t v8 = *v5;
  uint64_t v10 = *(void *)(*v5 + 608);
  uint64_t v11 = *(void *)(*v5 + 616);
  uint64_t v12 = *(void *)(*v5 + 624);
  uint64_t v98 = *(void *)(*v5 + 600);
  uint64_t v9 = v98;
  uint64_t v99 = v10;
  uint64_t v100 = v11;
  uint64_t v101 = v12;
  uint64_t v78 = type metadata accessor for ReconciliationMutation();
  uint64_t v73 = *(void (***)(char *, uint64_t))(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v77 = (char *)&v62 - v13;
  uint64_t v99 = v10;
  uint64_t v80 = v10;
  uint64_t v100 = v11;
  uint64_t v101 = v12;
  uint64_t v79 = v12;
  uint64_t v14 = type metadata accessor for ItemReconciliation();
  uint64_t v86 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  int v85 = (char *)&v62 - v15;
  uint64_t v16 = type metadata accessor for SnapshotItem();
  uint64_t v84 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v92 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v18;
  MEMORY[0x270FA5388](v17);
  char v97 = (char *)&v62 - v19;
  uint64_t v81 = v9;
  uint64_t v76 = v11;
  uint64_t v94 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v20 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v22 = (char *)&v62 - v21;
  uint64_t v93 = sub_24DCCA3F8();
  uint64_t v75 = *(void (***)(uint64_t, uint64_t))(v93 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v93);
  uint64_t v83 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v62 - v25;
  uint64_t v27 = *(void ***)(a1 + 32);
  uint64_t v28 = (uint64_t)v5 + *(void *)(v8 + 576);
  uint64_t v96 = *(void *)(a1 + 16);
  sub_24D4759C8(v28, (uint64_t)&v62 - v25);
  uint64_t v68 = v27;
  uint64_t v71 = a5;
  uint64_t v29 = v86;
  uint64_t v90 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  uint64_t v91 = v86 + 48;
  int v30 = v90(v26, 1, v14);
  uint64_t v74 = v14;
  if (v30 == 1)
  {
    v75[1]((uint64_t)v26, v93);
    uint64_t v70 = 0;
  }
  else
  {
    uint64_t v31 = v94;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v22, v26, v94);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v14);
    unint64_t v32 = *(void *)&v22[*(int *)(v31 + 36)];
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v31);
    uint64_t v70 = (v32 >> 1) & 1;
  }
  uint64_t v33 = ((uint64_t (*)(uint64_t, void (**)(char *, uint64_t *, uint64_t)))(*v68)[59])(v28, v89);
  uint64_t v34 = v74;
  uint64_t v35 = v33;
  uint64_t v63 = v36;
  uint64_t v37 = MEMORY[0x253327DC0](v33, v16);
  uint64_t v39 = v84;
  uint64_t v38 = v85;
  uint64_t v40 = (uint64_t)v92;
  uint64_t v41 = (uint64_t)v83;
  uint64_t v42 = v35;
  if (!v37)
  {
LABEL_18:
    uint64_t v59 = swift_bridgeObjectRelease();
    if (v70)
    {
      uint64_t v60 = v63;
      if (!v63) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v60 = v63;
      if (!v63)
      {
        (*(void (**)(uint64_t))(*v68[2] + 848))(v59);
LABEL_24:
        uint64_t v61 = 0;
        goto LABEL_25;
      }
    }
    uint64_t v61 = v60;
LABEL_25:
    swift_retain();
    v95(v61, 0, 0, 0);
    swift_release();
    return swift_release();
  }
  uint64_t v43 = 0;
  uint64_t v89 = (void (**)(char *, uint64_t *, uint64_t))(v84 + 16);
  uint64_t v87 = (void (**)(uint64_t, char *, uint64_t))(v84 + 32);
  char v69 = (void (**)(char *, uint64_t, uint64_t))(v86 + 32);
  uint64_t v65 = (void (**)(uint64_t, uint64_t))(v73 + 1);
  uint64_t v73 = (void (**)(char *, uint64_t))(v86 + 8);
  uint64_t v86 = v84 + 8;
  ++v75;
  uint64_t v88 = v35;
  uint64_t v64 = v16;
  while (1)
  {
    char v46 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v46)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v97, v42+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v43, v16);
      uint64_t v47 = v43 + 1;
      if (__OFADD__(v43, 1)) {
        goto LABEL_17;
      }
      goto LABEL_10;
    }
    uint64_t result = sub_24DCCA778();
    if (v72 != 8) {
      break;
    }
    uint64_t v98 = result;
    (*v89)(v97, &v98, v16);
    swift_unknownObjectRelease();
    uint64_t v47 = v43 + 1;
    if (__OFADD__(v43, 1))
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_10:
    (*v87)(v40, v97, v16);
    sub_24D4759C8(v40, v41);
    if (v90((char *)v41, 1, v34) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))v86)(v40, v16);
      (*v75)(v41, v93);
    }
    else
    {
      (*v69)(v38, v41, v34);
      if ((v38[*(int *)(v94 + 36)] & 2) != 0)
      {
        uint64_t v98 = v81;
        uint64_t v99 = v80;
        uint64_t v100 = v76;
        uint64_t v101 = v79;
        uint64_t v67 = type metadata accessor for JobResult();
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        uint64_t v49 = swift_getAssociatedTypeWitness();
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v50 = swift_getAssociatedConformanceWitness();
        uint64_t v98 = AssociatedTypeWitness;
        uint64_t v99 = v49;
        uint64_t v100 = AssociatedConformanceWitness;
        uint64_t v101 = v50;
        type metadata accessor for ReconciliationID();
        uint64_t v41 = (uint64_t)v83;
        type metadata accessor for ReconciliationSideMutation();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v52 = (uint64_t)v77;
        uint64_t v53 = &v77[*(int *)(TupleTypeMetadata2 + 48)];
        uint64_t v54 = AssociatedTypeWitness;
        uint64_t v16 = v64;
        (*(void (**)(char *, char *))(*(void *)(v54 - 8) + 16))(v77, v92);
        swift_storeEnumTagMultiPayload();
        char *v53 = v70;
        uint64_t v34 = v74;
        uint64_t v39 = v84;
        uint64_t v55 = v78;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_24D907568(v82, v52);
        uint64_t v56 = v52;
        uint64_t v40 = (uint64_t)v92;
        uint64_t v57 = v55;
        uint64_t v38 = v85;
        (*v65)(v56, v57);
      }
      (*v73)(v38, v34);
      (*(void (**)(uint64_t, uint64_t))v86)(v40, v16);
    }
    uint64_t v44 = v88;
    ++v43;
    BOOL v45 = v47 == MEMORY[0x253327DC0](v88, v16);
    uint64_t v42 = v44;
    if (v45) {
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Ingestion.MarkParentDeleted()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24DBF7654()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_24DCCA3F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_24DBF7708()
{
  return 0xD000000000000017;
}

uint64_t sub_24DBF7724(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = a1;
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 616);
  uint64_t v7 = *(void *)(*v3 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_24DCCA3F8();
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v38 - v14;
  uint64_t v45 = AssociatedTypeWitness;
  uint64_t v47 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v38 - v16;
  uint64_t v18 = *(void *)(a2 + 32);
  uint64_t v19 = (char *)v3 + *(void *)(v5 + 576);
  uint64_t v20 = v49;
  (*(void (**)(char *))(*(void *)v18 + 280))(v19);
  uint64_t v49 = v20;
  if (!v20)
  {
    uint64_t v41 = v19;
    uint64_t v42 = v7;
    uint64_t v43 = v6;
    uint64_t v21 = v17;
    uint64_t v22 = v45;
    uint64_t v23 = v9;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v15, 1, v45) == 1)
    {
      (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v9);
      return 0;
    }
    else
    {
      uint64_t v24 = v47;
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
      uint64_t v40 = v21;
      v25(v21, v15, v22);
      uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
      v39(v12, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v12, 0, 1, v22);
      uint64_t v26 = (uint64_t)v3 + *(void *)(*v3 + 632);
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v46 + 40))(v26, v12, v23);
      swift_endAccess();
      swift_beginAccess();
      sub_24D73C78C((uint64_t)(v3 + 7), (uint64_t)v48);
      uint64_t v27 = type metadata accessor for JobLockRule();
      sub_24DCCAD88();
      uint64_t v28 = *(void *)(*(void *)(v27 - 8) + 72);
      swift_allocObject();
      uint64_t v46 = sub_24DCC9C58();
      int v30 = v29;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      unint64_t v32 = &v30[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v33 = &v30[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v34 = (void (*)(uint64_t, char *, uint64_t))v39;
      v39(v30, v41, v22);
      uint64_t v35 = v32;
      uint64_t v36 = v40;
      v34((uint64_t)v35, v40, v22);
      v34((uint64_t)v33, v36, v22);
      swift_storeEnumTagMultiPayload();
      v34((uint64_t)&v30[v28], v36, v22);
      swift_storeEnumTagMultiPayload();
      sub_24D785484(v46);
      uint64_t v18 = sub_24D5773A8();
      swift_bridgeObjectRelease();
      sub_24D73C7F4((uint64_t)v48);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v22);
    }
  }
  return v18;
}

uint64_t sub_24DBF7C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void, void, void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v59 = a4;
  uint64_t v60 = a5;
  uint64_t v55 = a3;
  uint64_t v8 = *v5;
  uint64_t v9 = type metadata accessor for SnapshotItem();
  uint64_t v54 = sub_24DCCA3F8();
  uint64_t v56 = *(void *)(v54 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v54);
  uint64_t v12 = (char *)&v48 - v11;
  uint64_t v57 = v9;
  uint64_t v58 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v53 = (char *)&v48 - v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  uint64_t v61 = AssociatedTypeWitness;
  uint64_t v62 = v15;
  uint64_t v63 = AssociatedConformanceWitness;
  uint64_t v64 = v17;
  uint64_t v18 = a1;
  uint64_t v19 = type metadata accessor for FileItemVersion();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v48 - v24;
  uint64_t v26 = v8;
  uint64_t v27 = *(void **)(a1 + 32);
  uint64_t v28 = (char *)v6 + *(void *)(v26 + 576);
  (*(void (**)(char *, uint64_t))(*v27 + 240))(v28, 1);
  uint64_t v50 = v28;
  uint64_t v51 = v23;
  uint64_t v29 = v56;
  uint64_t v30 = v57;
  uint64_t v52 = v25;
  uint64_t v31 = v58;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v12, 1, v57) == 1)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v54);
    return v59(0, 0, 0, 0);
  }
  else
  {
    uint64_t v33 = v53;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v53, v12, v30);
    uint64_t v34 = &v33[*(int *)(v30 + 40)];
    uint64_t v49 = v20;
    uint64_t v35 = v18;
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
    uint64_t v37 = v52;
    v36(v52, v34, v19);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    uint64_t v38 = (void *)v27[2];
    uint64_t v39 = v51;
    v36(v51, v37, v19);
    uint64_t v40 = *(uint64_t (**)(uint64_t))(*(void *)v35 + 272);
    uint64_t v41 = swift_retain();
    uint64_t v42 = (void *)v40(v41);
    uint64_t v43 = (void *)swift_allocObject();
    uint64_t v44 = v59;
    uint64_t v45 = v60;
    v43[2] = v35;
    void v43[3] = v44;
    v43[4] = v45;
    v43[5] = v6;
    v43[6] = v55;
    uint64_t v59 = (uint64_t (*)(void, void, void, void))(*v38 + 632);
    uint64_t v46 = *(void (**)(char *, uint64_t, char *, void *, uint64_t (*)(uint64_t), void *))v59;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v46(v50, 1, v39, v42, sub_24DC0B9E8, v43);
    swift_release();
    swift_release();

    uint64_t v47 = *(void (**)(char *, uint64_t))(v49 + 8);
    v47(v39, v19);
    return ((uint64_t (*)(char *, uint64_t))v47)(v52, v19);
  }
}

uint64_t sub_24DBF81A4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v31 = a5;
  uint64_t v32 = a6;
  uint64_t v26 = a4;
  uint64_t v27 = a3;
  uint64_t v30 = *a2;
  uint64_t v10 = v30;
  uint64_t v28 = *(void *)(v30 + 80);
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v11 = sub_24DCCB058();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v16 = swift_allocObject();
  uint64_t v29 = v16;
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, v11);
  unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v18 = (v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v28;
  uint64_t v20 = v31;
  *(_OWORD *)(v19 + 24) = *(_OWORD *)(v30 + 88);
  *(void *)(v19 + 40) = *(void *)(v10 + 104);
  *(void *)(v19 + 48) = v20;
  *(void *)(v19 + 56) = v32;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v19 + v17, v15, v11);
  *(void *)(v19 + v18) = a2;
  uint64_t v21 = (void *)(v19 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v22 = v26;
  void *v21 = v27;
  v21[1] = v22;
  uint64_t v23 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D73CC58, v29, (uint64_t)sub_24DC0BC08, v19, v23, MEMORY[0x263F8D310]);
  swift_release();
  return swift_release();
}

void sub_24DBF8494(void *a1, uint64_t a2, void (*a3)(char *, uint64_t, uint64_t), void *a4, void (*a5)(void, void, void, void *), uint64_t a6)
{
  uint64_t v99 = a6;
  uint64_t v100 = a5;
  uint64_t v96 = a4;
  uint64_t v103 = (void *)*a1;
  uint64_t v8 = v103;
  uint64_t v104 = a3;
  uint64_t v9 = (char *)v103[77];
  uint64_t v10 = v103[75];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v102 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v82 = (uint64_t)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v83 = (char *)&v81 - v14;
  uint64_t v95 = type metadata accessor for FileTreeError();
  uint64_t v84 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  char v97 = (char *)&v81 - v15;
  uint64_t v87 = type metadata accessor for SnapshotMutation();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  int v85 = (char *)&v81 - v16;
  uint64_t v93 = type metadata accessor for SnapshotItem();
  uint64_t v91 = sub_24DCCA3F8();
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v94 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v81 - v17);
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  swift_getTupleTypeMetadata2();
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  unint64_t v106 = (void *)sub_24DCCB058();
  uint64_t v18 = *(v106 - 1);
  MEMORY[0x270FA5388](v106);
  uint64_t v109 = (char *)&v81 - v19;
  uint64_t v20 = v8[76];
  uint64_t v21 = (void *)v8[78];
  uint64_t v112 = v10;
  uint64_t v113 = v20;
  uint64_t v114 = v9;
  uint64_t v115 = v21;
  uint64_t v22 = type metadata accessor for ReconciliationMutation();
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v81 - v24;
  uint64_t v110 = (uint64_t)a1;
  uint64_t v26 = a1[17] & 0xA0;
  uint64_t v107 = v20;
  uint64_t v108 = v23;
  uint64_t v105 = a2;
  uint64_t v101 = v27;
  if (v26)
  {
    uint64_t v112 = v10;
    uint64_t v113 = v20;
    uint64_t v114 = v9;
    uint64_t v115 = v21;
    uint64_t v88 = type metadata accessor for JobResult();
    uint64_t v28 = swift_getAssociatedTypeWitness();
    uint64_t v98 = v18;
    uint64_t v29 = v28;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v89 = (char *)v26;
    uint64_t v31 = AssociatedConformanceWitness;
    uint64_t v32 = swift_getAssociatedConformanceWitness();
    uint64_t v112 = AssociatedTypeWitness;
    uint64_t v113 = v29;
    uint64_t v114 = (char *)v31;
    uint64_t v115 = (void *)v32;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v33 = &v25[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v25, v110 + v103[72], AssociatedTypeWitness);
    swift_storeEnumTagMultiPayload();
    *(_OWORD *)uint64_t v33 = xmmword_24DCD4920;
    char v33[16] = 4;
    a2 = v105;
    uint64_t v26 = (uint64_t)v89;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_24D907568(a2, (uint64_t)v25);
    uint64_t v18 = v98;
    (*(void (**)(char *, uint64_t))(v101 + 8))(v25, v108);
  }
  uint64_t v89 = v25;
  uint64_t v34 = (void **)v109;
  uint64_t v35 = (uint64_t *)v110;
  uint64_t v103 = v21;
  uint64_t v36 = v106;
  (*(void (**)(char *, void, void *))(v18 + 16))(v109, v104, v106);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v37 = *v34;
    id v116 = v37;
    id v38 = v37;
    uint64_t v39 = v97;
    uint64_t v40 = v95;
    int v41 = swift_dynamicCast();
    uint64_t v42 = v103;
    if (v41)
    {
      if (swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(char *, uint64_t))(v84 + 8))(v39, v40);
      }
      else
      {
        uint64_t v89 = (char *)v26;
        uint64_t v60 = swift_getAssociatedTypeWitness();
        uint64_t v61 = swift_getAssociatedTypeWitness();
        uint64_t v109 = (char *)swift_getAssociatedConformanceWitness();
        uint64_t v62 = swift_getAssociatedConformanceWitness();
        uint64_t v112 = v60;
        uint64_t v113 = v61;
        uint64_t v114 = v109;
        uint64_t v115 = (void *)v62;
        type metadata accessor for FileItemVersion();
        uint64_t v63 = sub_24DCCA3F8();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
        uint64_t v109 = (char *)v63;
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v108 = (uint64_t)&v39[*(int *)(TupleTypeMetadata3 + 48)];

        uint64_t v65 = v102;
        uint64_t v66 = v83;
        (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v83, v39, AssociatedTypeWitness);
        uint64_t v67 = (void (*)(char *, uint64_t, uint64_t))((char *)v35 + *(void *)(*v35 + 576));
        swift_getAssociatedConformanceWitness();
        uint64_t v104 = v67;
        LOBYTE(v67) = sub_24DCC9798();
        unint64_t v106 = *(void **)(v65 + 8);
        ((void (*)(char *, uint64_t))v106)(v66, AssociatedTypeWitness);
        if (v67)
        {
          (*(void (**)(uint64_t, void, uint64_t))(v65 + 16))(v82, v104, AssociatedTypeWitness);
          uint64_t v68 = v35[15];
          uint64_t v104 = (void (*)(char *, uint64_t, uint64_t))v35[16];
          uint64_t v69 = v35[17] | 0x100;
          uint64_t v70 = v107;
          uint64_t v112 = v10;
          uint64_t v113 = v107;
          uint64_t v71 = v103;
          uint64_t v114 = v9;
          uint64_t v115 = v103;
          uint64_t v110 = type metadata accessor for JobResult();
          uint64_t v112 = v10;
          uint64_t v113 = v70;
          uint64_t v114 = v9;
          uint64_t v115 = v71;
          type metadata accessor for Ingestion.FetchItemMetadata();
          uint64_t v72 = v82;
          uint64_t v73 = sub_24DC09748(v82, v68, (uint64_t)v104, v69, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
          ((void (*)(uint64_t, uint64_t))v106)(v72, AssociatedTypeWitness);
          sub_24D85246C(v105, v73);
          swift_release();
          (*(void (**)(uint64_t))(*((void *)v109 - 1) + 8))(v108);

LABEL_15:
          id v80 = v37;
          v100(0, 0, 0, v37);

          return;
        }
        (*(void (**)(uint64_t))(*((void *)v109 - 1) + 8))(v108);
        uint64_t v42 = v103;
        uint64_t v26 = (uint64_t)v89;
      }
    }

    if (!v26)
    {
      uint64_t v74 = v107;
      uint64_t v112 = v10;
      uint64_t v113 = v107;
      uint64_t v114 = v9;
      uint64_t v115 = v42;
      type metadata accessor for JobResult();
      uint64_t v112 = v10;
      uint64_t v113 = v74;
      uint64_t v114 = v9;
      uint64_t v115 = v42;
      type metadata accessor for Ingestion.DeleteRejectedItemInTree();
      uint64_t v75 = (uint64_t)v35 + *(void *)(*v35 + 576);
      uint64_t v76 = v35[15];
      uint64_t v77 = v35[16];
      uint64_t v78 = v35[17];
      swift_allocObject();
      uint64_t v79 = sub_24DC09914(v75, v76, v77, v78);
      sub_24D85246C(v105, v79);
      swift_release();
    }
    goto LABEL_15;
  }
  uint64_t v43 = AssociatedTypeWitness;
  uint64_t v44 = v94;
  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(*(void *)(v93 - 8)
                                                                                             + 56))(v94, 1, 1);
  uint64_t v45 = (uint64_t)v35 + *(void *)(*v35 + 576);
  uint64_t v46 = v111;
  sub_24DBCB8D8(v44, v45, 0, 0, 0, v96, v35[15], v35[16], v35[17], a2);
  uint64_t v111 = v46;
  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v90 + 8))(v44, v91);
  if (v46)
  {
    (*(void (**)(char *, void *))(v18 + 8))(v109, v36);
  }
  else
  {
    uint64_t v112 = v10;
    uint64_t v113 = v107;
    uint64_t v114 = v9;
    uint64_t v115 = v103;
    uint64_t v110 = type metadata accessor for JobResult();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DF0);
    uint64_t v47 = v43;
    uint64_t v81 = v43;
    uint64_t v48 = swift_getTupleTypeMetadata3();
    uint64_t v98 = *(int *)(v48 + 48);
    uint64_t v49 = a2;
    uint64_t v50 = (uint64_t)v85;
    uint64_t v51 = &v85[*(int *)(v48 + 64)];
    uint64_t v104 = *(void (**)(char *, uint64_t, uint64_t))(v102 + 16);
    v104(v85, v45, v47);
    *(unsigned char *)(v50 + v98) = 0;
    strcpy(v51, "item rejected");
    *((_WORD *)v51 + 7) = -4864;
    uint64_t v52 = v87;
    swift_storeEnumTagMultiPayload();
    uint64_t v98 = v18;
    sub_24D9075B0(v49, v50);
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v50, v52);
    uint64_t v53 = (uint64_t)v89;
    uint64_t v54 = v45;
    uint64_t v55 = v81;
    v104(v89, v54, v81);
    uint64_t v56 = swift_getAssociatedTypeWitness();
    uint64_t v57 = swift_getAssociatedConformanceWitness();
    uint64_t v58 = swift_getAssociatedConformanceWitness();
    uint64_t v112 = v55;
    uint64_t v113 = v56;
    uint64_t v114 = (char *)v57;
    uint64_t v115 = (void *)v58;
    type metadata accessor for ReconciliationID();
    swift_storeEnumTagMultiPayload();
    uint64_t v59 = v108;
    swift_storeEnumTagMultiPayload();
    sub_24D907568(v105, v53);
    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v53, v59);
    v100(0, 0, 0, 0);
    (*(void (**)(char *, void *))(v98 + 8))(v109, v106);
  }
}

uint64_t sub_24DBF9290()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_24DCCA3F8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_24DBF9350()
{
  uint64_t v0 = sub_24D982504();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_24DBF9418()
{
  return sub_24DBF9430(sub_24DBF9350);
}

uint64_t sub_24DBF9430(uint64_t (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Ingestion.DeleteRejectedItemInTree()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24DBF94A0()
{
  return 0xD000000000000017;
}

uint64_t sub_24DBF94BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v30 = a1;
  uint64_t v5 = *v3;
  uint64_t v6 = type metadata accessor for JobLockRule();
  uint64_t v29 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_24DCCA3F8();
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v32 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = (char *)v3 + *(void *)(v5 + 576);
  uint64_t v17 = v34;
  (*(void (**)(char *))(**(void **)(a2 + 32) + 280))(v16);
  if (!v17)
  {
    uint64_t v18 = v31;
    uint64_t v34 = 0;
    uint64_t v27 = v8;
    uint64_t v28 = v6;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v13, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v10);
      return 0;
    }
    else
    {
      uint64_t v19 = v32;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v15, v13, AssociatedTypeWitness);
      swift_beginAccess();
      sub_24D73C78C((uint64_t)(v3 + 7), (uint64_t)v33);
      uint64_t v31 = v3[15];
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v21 = (uint64_t)v27;
      uint64_t v22 = &v27[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v23 = &v27[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      v24(v27, v16, AssociatedTypeWitness);
      v24(v22, v15, AssociatedTypeWitness);
      v24(v23, v15, AssociatedTypeWitness);
      uint64_t v25 = v28;
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = sub_24D578CBC((uint64_t)v33, v31, v21);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v21, v25);
      sub_24D73C7F4((uint64_t)v33);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v15, AssociatedTypeWitness);
    }
  }
  return v10;
}

uint64_t sub_24DBF98C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = *v5;
  uint64_t v12 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v13 = (char *)v6 + *(void *)(v11 + 576);
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a1;
  v14[3] = a4;
  v14[4] = a5;
  void v14[5] = v6;
  v14[6] = a3;
  uint64_t v15 = *(void (**)(char *, uint64_t (*)(uint64_t), void *))(*(void *)v12 + 720);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v15(v13, sub_24DC0B850, v14);
  swift_release();

  return swift_release();
}

void sub_24DBF99EC(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, void (*a5)(void, unint64_t, unint64_t, void *), uint64_t a6)
{
  uint64_t v100 = a3;
  uint64_t v91 = a6;
  uint64_t v92 = a5;
  uint64_t v95 = a4;
  uint64_t v97 = a1;
  uint64_t v7 = *a2;
  uint64_t v8 = *(void *)(*a2 + 616);
  uint64_t v9 = *(void *)(*a2 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v7 + 624);
  uint64_t v98 = a2;
  uint64_t v86 = *(void *)(v7 + 608);
  uint64_t v87 = v11;
  uint64_t v101 = AssociatedTypeWitness;
  uint64_t v102 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v103 = AssociatedConformanceWitness;
  uint64_t v104 = swift_getAssociatedConformanceWitness();
  type metadata accessor for ThrottlingKey();
  uint64_t v12 = sub_24DCCA3F8();
  uint64_t v84 = *(void *)(v12 - 8);
  uint64_t v85 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v94 = (char *)&v76 - v14;
  uint64_t v82 = AssociatedTypeWitness;
  uint64_t v81 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v79 = (char *)&v76 - v15;
  uint64_t v88 = type metadata accessor for FileTreeError();
  uint64_t v83 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v93 = (char *)&v76 - v16;
  uint64_t v96 = v8;
  uint64_t v17 = type metadata accessor for SnapshotItem();
  uint64_t v18 = sub_24DCCA3F8();
  uint64_t v89 = *(void *)(v18 - 8);
  uint64_t v90 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v78 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v76 - v22);
  uint64_t v24 = *(void *)(v9 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v21);
  uint64_t v27 = (char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v76 - v28;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v30 = sub_24DCCB058();
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (void **)((char *)&v76 - v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))((char *)&v76 - v31, v97, v30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v77 = v17;
    uint64_t v97 = v9;
    uint64_t v34 = *v32;
    id v105 = v34;
    id v35 = v34;
    uint64_t v36 = v93;
    uint64_t v37 = v88;
    int v38 = swift_dynamicCast();
    uint64_t v40 = v99;
    uint64_t v39 = v100;
    int v41 = v98;
    uint64_t v42 = (uint64_t)v94;
    if (v38)
    {
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v43 = v83;
LABEL_13:
        (*(void (**)(char *, uint64_t))(v43 + 8))(v36, v37);
        goto LABEL_14;
      }
      uint64_t v45 = v36;
      uint64_t v46 = swift_getAssociatedTypeWitness();
      uint64_t v47 = swift_getAssociatedTypeWitness();
      uint64_t v48 = swift_getAssociatedConformanceWitness();
      uint64_t v49 = swift_getAssociatedConformanceWitness();
      uint64_t v101 = v46;
      uint64_t v102 = v47;
      uint64_t v103 = v48;
      uint64_t v104 = v49;
      uint64_t v50 = type metadata accessor for FileItemVersion();
      uint64_t v51 = sub_24DCCA3F8();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
      uint64_t v52 = v82;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v54 = &v45[*(int *)(TupleTypeMetadata3 + 48)];

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48))(v54, 1, v50) != 1)
      {
        (*(void (**)(char *, uint64_t))(*(void *)(v51 - 8) + 8))(v54, v51);
        uint64_t v43 = v81;
        uint64_t v37 = v52;
        uint64_t v40 = v99;
        uint64_t v39 = v100;
        uint64_t v36 = v93;
        uint64_t v42 = (uint64_t)v94;
        goto LABEL_13;
      }
      uint64_t v55 = v81;
      uint64_t v56 = v79;
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v79, v93, v52);
      uint64_t v57 = (uint64_t)v41 + *(void *)(*v41 + 576);
      char v58 = sub_24DCC9798();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v52);
      uint64_t v40 = v99;
      uint64_t v39 = v100;
      uint64_t v42 = (uint64_t)v94;
      uint64_t v59 = v95;
      if (v58)
      {
        uint64_t v60 = v78;
        (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v78, 1, 1);
        sub_24DBCB8D8(v60, v57, 0, 0, 0, v39, v41[15], v41[16], v41[17], v59);
        (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v89 + 8))(v60, v90);
        if (!v40)
        {
          id v75 = v34;
          v92(0, 0, 0, v34);
        }
        id v74 = v105;
LABEL_22:

        return;
      }
    }
LABEL_14:

    if ((*((unsigned char *)v41 + 138) & 1) == 0)
    {
      uint64_t v61 = v96;
LABEL_16:
      uint64_t v63 = v86;
      uint64_t v62 = v87;
      uint64_t v64 = v97;
      uint64_t v101 = v97;
      uint64_t v102 = v86;
      uint64_t v103 = v61;
      uint64_t v104 = v87;
      type metadata accessor for JobResult();
      uint64_t v101 = v64;
      uint64_t v102 = v63;
      uint64_t v103 = v61;
      uint64_t v104 = v62;
      type metadata accessor for Ingestion.FaultDirectoryInTree();
      uint64_t v65 = (uint64_t)v41 + *(void *)(*v41 + 576);
      uint64_t v66 = v41[15];
      uint64_t v67 = v41[16];
      uint64_t v68 = v41[17];
      swift_allocObject();
      uint64_t v69 = sub_24D983960(v65, v66, v67, v68);
      sub_24D85246C(v95, v69);
      swift_release();
      id v70 = v34;
      v92(0, 0, 0, v34);

      return;
    }
    sub_24D9826EC(v42);
    BOOL v71 = sub_24D769D8C(v34, v42, (uint64_t)v39);
    if (v40)
    {
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v42, v85);
    }
    else
    {
      BOOL v72 = v71;
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v42, v85);
      uint64_t v61 = v96;
      if (!v72) {
        goto LABEL_16;
      }
      id v73 = v34;
      v92(0, 0xD000000000000020, 0x800000024DD22DA0, v34);
    }
    id v74 = v34;
    goto LABEL_22;
  }
  (*(void (**)(char *, void **, uint64_t))(v24 + 32))(v29, v32, v9);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v27, v29, v9);
  sub_24D97AFF8((uint64_t)v27, v9, v96, (uint64_t)v23);
  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v23, 0, 1, v17);
  uint64_t v44 = v99;
  sub_24DBCB8D8(v23, (uint64_t)v98 + *(void *)(*v98 + 576), 3, 0, 0, v100, v98[15], v98[16], v98[17], v95);
  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v89 + 8))(v23, v90);
  if (!v44) {
    v92(0, 0, 0, 0);
  }
  (*(void (**)(char *, uint64_t))(v24 + 8))(v29, v9);
}

uint64_t type metadata accessor for Ingestion.FaultDirectoryInTree()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24DBFA538()
{
  type metadata accessor for SnapshotItem();
  uint64_t result = sub_24DCCA3F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_24DBFA5DC()
{
  return 0xD000000000000019;
}

uint64_t sub_24DBFA5F8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for SnapshotItem();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 4;
  }
  else {
    return *(unsigned __int8 *)(v1 + *(int *)(v2 + 48));
  }
}

uint64_t sub_24DBFA6D0()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for SnapshotItem();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 2;
  }
  uint64_t v4 = v1 + *(int *)(v2 + 48);
  return *(unsigned __int8 *)(v4 + *(int *)(type metadata accessor for ItemMetadata() + 108));
}

uint64_t sub_24DBFA7B8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for SnapshotItem();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  uint64_t result = 0;
  if (!v3)
  {
    uint64_t v5 = v1 + *(int *)(v2 + 48);
    return *(void *)(v5 + *(int *)(type metadata accessor for ItemMetadata() + 100));
  }
  return result;
}

unint64_t sub_24DBFA8A8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for SnapshotItem();
  unsigned __int8 v3 = 1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2))
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = v1 + *(int *)(v2 + 48);
    uint64_t v4 = *(unsigned int *)(v5 + 4);
    unsigned __int8 v3 = *(unsigned char *)(v5 + 8);
  }
  return v4 | ((unint64_t)v3 << 32);
}

uint64_t sub_24DBFA998@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 632);
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for SnapshotItem();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a1, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v7 = v3 + *(int *)(v4 + 36);
    uint64_t v8 = swift_getAssociatedTypeWitness();
    uint64_t v9 = *(void *)(v8 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a1, v7, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
  }
}

uint64_t sub_24DBFAB68(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v43 = a2;
  uint64_t v41 = a1;
  uint64_t v4 = *v2;
  uint64_t v38 = type metadata accessor for JobLockRule();
  uint64_t v40 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v39 = (char *)&v36 - v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v37 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v42 = type metadata accessor for SnapshotItem();
  uint64_t v12 = sub_24DCCA3F8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = (char *)v3 + *(void *)(v4 + 576);
  uint64_t v17 = v45;
  (*(void (**)(char *, uint64_t))(**((void **)v43 + 4) + 240))(v16, 1);
  if (!v17)
  {
    uint64_t v36 = v16;
    uint64_t v45 = 0;
    uint64_t v43 = v11;
    uint64_t v18 = (char *)v3 + *(void *)(*v3 + 632);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v18, v15, v12);
    swift_endAccess();
    uint64_t v19 = v42;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48))(v18, 1, v42))
    {
      return 0;
    }
    else
    {
      uint64_t v20 = &v18[*(int *)(v19 + 36)];
      uint64_t v21 = v37;
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
      uint64_t v23 = v9;
      uint64_t v24 = v9;
      uint64_t v25 = AssociatedTypeWitness;
      v22(v24, v20, AssociatedTypeWitness);
      uint64_t v26 = v43;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v43, v23, v25);
      swift_beginAccess();
      sub_24D73C78C((uint64_t)(v3 + 7), (uint64_t)v44);
      uint64_t v27 = v3[15];
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v29 = (uint64_t)v39;
      uint64_t v30 = &v39[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v31 = &v39[*(int *)(TupleTypeMetadata3 + 64)];
      v22(v39, v36, v25);
      v22(v30, v26, v25);
      uint64_t v32 = v31;
      uint64_t v33 = v26;
      v22(v32, v26, v25);
      uint64_t v34 = v38;
      swift_storeEnumTagMultiPayload();
      uint64_t AssociatedTypeWitness = sub_24D578CBC((uint64_t)v44, v27, v29);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v29, v34);
      sub_24D73C7F4((uint64_t)v44);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v33, v25);
    }
  }
  return AssociatedTypeWitness;
}

uint64_t sub_24DBFB018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = *v5;
  uint64_t v12 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v13 = (char *)v6 + *(void *)(v11 + 576);
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a1;
  v14[3] = a4;
  v14[4] = a5;
  void v14[5] = v6;
  v14[6] = a3;
  uint64_t v15 = *(void (**)(char *, uint64_t (*)(uint64_t), void *))(*(void *)v12 + 728);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v15(v13, sub_24DC0B7E0, v14);
  swift_release();

  return swift_release();
}

uint64_t sub_24DBFB144(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v39 = a5;
  uint64_t v40 = a6;
  uint64_t v32 = a4;
  uint64_t v33 = a3;
  uint64_t v35 = *a2;
  uint64_t v36 = v35;
  uint64_t v37 = a8;
  uint64_t v34 = *(void *)(v35 + 80);
  uint64_t v41 = a9;
  uint64_t v42 = a10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v14 = sub_24DCCB058();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = swift_allocObject();
  uint64_t v38 = v19;
  *(void *)(v19 + 16) = a3;
  *(void *)(v19 + 24) = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a1, v14);
  unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v21 = (v16 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v35;
  *(void *)(v24 + 16) = v34;
  *(_OWORD *)(v24 + 24) = *(_OWORD *)(v36 + 88);
  *(void *)(v24 + 40) = *(void *)(v25 + 104);
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v24 + v20, v18, v14);
  uint64_t v26 = v40;
  *(void *)(v24 + v21) = v39;
  *(void *)(v24 + v22) = a2;
  *(void *)(v24 + v23) = v26;
  uint64_t v27 = (void *)(v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v28 = v32;
  *uint64_t v27 = v33;
  v27[1] = v28;
  uint64_t v29 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D3F0D64, 0, v41, v38, v42, v24, v29, MEMORY[0x263F8D310]);
  swift_release();
  return swift_release();
}

void sub_24DBFB3F8(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, void (*a5)(void, void, void, void *), uint64_t a6)
{
  uint64_t v75 = a4;
  uint64_t v71 = a6;
  BOOL v72 = a5;
  id v70 = a3;
  uint64_t v77 = a1;
  uint64_t v65 = (void *)*a2;
  uint64_t v7 = v65[77];
  uint64_t v8 = v65[75];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v62 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v63 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v61 = (char *)&v59 - v10;
  uint64_t v66 = type metadata accessor for FileTreeError();
  uint64_t v64 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  id v73 = (char *)&v59 - v11;
  uint64_t v69 = type metadata accessor for SnapshotItem();
  uint64_t v12 = sub_24DCCA3F8();
  uint64_t v67 = *(void *)(v12 - 8);
  uint64_t v68 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v60 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v59 - v16);
  uint64_t v18 = *(void *)(v8 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v15);
  unint64_t v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  id v74 = (char *)&v59 - v22;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v23 = sub_24DCCB058();
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (void **)((char *)&v59 - v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))((char *)&v59 - v24, v77, v23);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = v8;
    uint64_t v28 = *v25;
    id v82 = v28;
    id v29 = v28;
    uint64_t v30 = v73;
    uint64_t v31 = v66;
    if (!swift_dynamicCast()) {
      goto LABEL_14;
    }
    if (swift_getEnumCaseMultiPayload())
    {
      uint64_t v32 = v64;
LABEL_13:
      (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v31);
      goto LABEL_14;
    }
    uint64_t v35 = swift_getAssociatedTypeWitness();
    uint64_t v36 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v77 = v8;
    uint64_t v38 = swift_getAssociatedConformanceWitness();
    uint64_t v78 = v35;
    uint64_t v79 = v36;
    uint64_t v80 = AssociatedConformanceWitness;
    uint64_t v81 = v38;
    uint64_t v39 = type metadata accessor for FileItemVersion();
    uint64_t v40 = sub_24DCCA3F8();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
    uint64_t v31 = v63;
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    uint64_t v42 = &v73[*(int *)(TupleTypeMetadata3 + 48)];

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v42, 1, v39) != 1)
    {
      (*(void (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v42, v40);
      uint64_t v32 = v62;
      uint64_t v30 = v73;
      goto LABEL_13;
    }
    uint64_t v43 = v61;
    uint64_t v44 = v62;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v61, v73, v31);
    uint64_t v45 = (char *)a2 + *(void *)(*a2 + 576);
    swift_getAssociatedConformanceWitness();
    char v46 = sub_24DCC9798();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v31);
    if ((v46 & 1) == 0)
    {
LABEL_14:

      uint64_t v50 = v65[76];
      uint64_t v51 = v65[78];
      uint64_t v78 = v27;
      uint64_t v79 = v50;
      uint64_t v80 = v7;
      uint64_t v81 = v51;
      type metadata accessor for JobResult();
      uint64_t v78 = v27;
      uint64_t v79 = v50;
      uint64_t v80 = v7;
      uint64_t v81 = v51;
      type metadata accessor for Ingestion.UnfaultDirectoryInTree();
      uint64_t v52 = (uint64_t)a2 + *(void *)(*a2 + 576);
      uint64_t v53 = a2[15];
      uint64_t v54 = a2[16];
      uint64_t v55 = a2[17];
      swift_allocObject();
      uint64_t v56 = sub_24DC097D0(v52, v53, v54, v55);
      sub_24D85246C(v75, v56);
      swift_release();
      id v57 = v28;
      v72(0, 0, 0, v28);

      return;
    }
    uint64_t v47 = (uint64_t)v45;
    uint64_t v48 = v60;
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(*(void *)(v69 - 8)
                                                                                               + 56))(v60, 1, 1);
    uint64_t v49 = v76;
    sub_24DBCB8D8(v48, v47, 0, 0, 0, v70, a2[15], a2[16], a2[17], v75);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v67 + 8))(v48, v68);
    if (!v49)
    {
      id v58 = v28;
      v72(0, 0, 0, v28);
    }
  }
  else
  {
    uint64_t v33 = v74;
    (*(void (**)(char *, void **, uint64_t))(v18 + 32))(v74, v25, v8);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v33, v8);
    sub_24D97AFF8((uint64_t)v21, v8, v7, (uint64_t)v17);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t))(*(void *)(v69 - 8)
                                                                                              + 56))(v17, 0, 1);
    uint64_t v34 = v76;
    sub_24DBCB8D8(v17, (uint64_t)a2 + *(void *)(*a2 + 576), 3, 0, 0, v70, a2[15], a2[16], a2[17], v75);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v67 + 8))(v17, v68);
    if (!v34) {
      v72(0, 0, 0, 0);
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v74, v8);
  }
}

uint64_t sub_24DBFBD48()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  type metadata accessor for SnapshotItem();
  uint64_t v2 = sub_24DCCA3F8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_24DBFBDF8()
{
  uint64_t v0 = sub_24D982504();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  type metadata accessor for SnapshotItem();
  uint64_t v2 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_24DBFBEB0()
{
  sub_24DBFBDF8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Ingestion.UnfaultDirectoryInTree()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24DBFBF1C()
{
  return 0xD000000000000013;
}

uint64_t sub_24DBFBF38(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void, void, void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v52 = a5;
  uint64_t v53 = a4;
  uint64_t v68 = a3;
  uint64_t v9 = *(void *)v5;
  uint64_t v71 = v9;
  uint64_t v10 = *(void *)(v9 + 616);
  uint64_t v61 = *(void *)(v9 + 600);
  uint64_t v11 = type metadata accessor for SnapshotItem();
  uint64_t v59 = sub_24DCCA3F8();
  uint64_t v72 = *(void *)(v59 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v59);
  uint64_t v14 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v49 - v13);
  uint64_t v69 = *(void *)(v11 - 8);
  uint64_t v15 = *(void *)(v69 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v12);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v49 - v17;
  uint64_t v19 = v9;
  id v58 = a1;
  uint64_t v20 = a1[4];
  uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v20 + 472))(&v6[*(void *)(v19 + 576)], a2);
  uint64_t v51 = v22;
  uint64_t v66 = v18;
  uint64_t v67 = v15;
  uint64_t v50 = v20;
  id v57 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v14;
  uint64_t v60 = v6;
  uint64_t v23 = MEMORY[0x253327DC0](v21, v11);
  uint64_t v24 = v11;
  uint64_t v25 = v21;
  if (!v23)
  {
    uint64_t v46 = swift_bridgeObjectRelease();
    uint64_t v28 = v60;
LABEL_15:
    uint64_t v47 = v53;
    if (v28[137] < 0)
    {
      if (!v51)
      {
        (*(void (**)(uint64_t))(**(void **)(v50 + 16) + 848))(v46);
LABEL_21:
        uint64_t v48 = 0;
        goto LABEL_22;
      }
    }
    else if (!v51)
    {
      goto LABEL_21;
    }
    uint64_t v48 = v51;
LABEL_22:
    swift_retain();
    v47(v48, 0, 0, 0);
    swift_release();
    return swift_release();
  }
  uint64_t v26 = 0;
  uint64_t v27 = v69;
  id v70 = (void (**)(char *, uint64_t *, uint64_t))(v69 + 16);
  uint64_t v62 = (void (**)(uint64_t, char *, uint64_t))(v69 + 32);
  uint64_t v63 = (void (**)(char *, uint64_t))(v69 + 8);
  uint64_t v54 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v69 + 56);
  uint64_t v55 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v72 + 8);
  uint64_t v28 = v60;
  id v29 = v57;
  uint64_t v64 = v25;
  uint64_t v65 = v24;
  uint64_t v30 = v67;
  while (1)
  {
    char v36 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v36)
    {
      unint64_t v37 = v25
          + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))
          + *(void *)(v27 + 72) * v26;
      uint64_t v38 = *(void (**)(char *, uint64_t *, uint64_t))(v27 + 16);
      uint64_t v39 = v66;
      v38(v66, (uint64_t *)v37, v24);
      uint64_t v40 = v26 + 1;
      if (__OFADD__(v26, 1)) {
        goto LABEL_12;
      }
      goto LABEL_7;
    }
    uint64_t result = sub_24DCCA778();
    if (v30 != 8) {
      break;
    }
    uint64_t v73 = result;
    uint64_t v38 = *v70;
    uint64_t v39 = v66;
    (*v70)(v66, &v73, v24);
    swift_unknownObjectRelease();
    uint64_t v40 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
LABEL_12:
      __break(1u);
LABEL_13:
      uint64_t v46 = swift_bridgeObjectRelease();
      goto LABEL_15;
    }
LABEL_7:
    uint64_t v72 = v40;
    uint64_t v41 = (uint64_t)v29;
    uint64_t v42 = v10;
    (*v62)(v41, v39, v24);
    uint64_t v43 = *((void *)v28 + 17);
    if ((v43 & 0xFFFFFFCFFFFFFFFFLL) != 0)
    {
      uint64_t v31 = *(void *)(v71 + 608);
      uint64_t v32 = *(void *)(v71 + 624);
      uint64_t v33 = v61;
      uint64_t v73 = v61;
      uint64_t v74 = v31;
      uint64_t v75 = v42;
      uint64_t v76 = v32;
      type metadata accessor for JobResult();
      uint64_t v73 = v33;
      uint64_t v74 = v31;
      uint64_t v10 = v42;
      uint64_t v75 = v42;
      uint64_t v76 = v32;
      uint64_t v28 = v60;
      type metadata accessor for Ingestion.FetchItemMetadata();
      uint64_t v34 = sub_24DC09748(v41, *((void *)v28 + 15), *((void *)v28 + 16), v43, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
      sub_24D85246C(v68, v34);
      swift_release();
      id v29 = (char *)v41;
    }
    else
    {
      uint64_t v44 = v56;
      v38((char *)v56, (uint64_t *)v41, v24);
      (*v54)(v44, 0, 1, v24);
      sub_24DBCB8D8(v44, v41, 0, 0, 0, v58, *((void *)v28 + 15), *((void *)v28 + 16), v43, v68);
      (*v55)(v44, v59);
      uint64_t v10 = v42;
      id v29 = v57;
    }
    uint64_t v25 = v64;
    uint64_t v24 = v65;
    (*v63)(v29, v65);
    uint64_t v35 = MEMORY[0x253327DC0](v25, v24);
    ++v26;
    uint64_t v27 = v69;
    uint64_t v30 = v67;
    if (v72 == v35) {
      goto LABEL_13;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Ingestion.ReSnapshotChildren()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24DBFC5E8()
{
  return 0x6465727265666564;
}

uint64_t sub_24DBFC60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void, void, void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v62 = a3;
  uint64_t v63 = a5;
  uint64_t v9 = *(void **)v5;
  uint64_t v67 = sub_24DCC8CE8();
  uint64_t v10 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v9[77];
  uint64_t v14 = v9[75];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v71 = AssociatedTypeWitness;
  uint64_t v72 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v66 = (uint64_t)&v57 - v20;
  uint64_t v21 = *(void *)(a1 + 32);
  uint64_t v22 = v9[76];
  uint64_t v69 = v9[78];
  uint64_t v70 = v14;
  uint64_t v73 = v14;
  uint64_t v74 = v22;
  uint64_t v68 = v22;
  uint64_t v75 = v13;
  uint64_t v76 = v69;
  type metadata accessor for SQLDatabase();
  uint64_t v23 = swift_dynamicCastClass();
  uint64_t v64 = a4;
  uint64_t v61 = v19;
  if (v23)
  {
    uint64_t v58 = v21;
    uint64_t v59 = v12;
    uint64_t v65 = v10;
    uint64_t v60 = *(uint64_t (**)(char *, uint64_t))(*(void *)(sub_24D8F6CF8() + 24) + 64);
    uint64_t v24 = swift_getAssociatedTypeWitness();
    uint64_t v25 = v71;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v27 = swift_getAssociatedConformanceWitness();
    uint64_t v73 = v25;
    uint64_t v74 = v24;
    uint64_t v75 = AssociatedConformanceWitness;
    uint64_t v76 = v27;
    type metadata accessor for ThrottlingKey();
    sub_24DCCAD88();
    swift_allocObject();
    swift_retain();
    swift_retain();
    uint64_t v28 = sub_24DCC9C58();
    uint64_t v57 = v13;
    uint64_t v30 = v29;
    uint64_t v73 = v25;
    uint64_t v74 = v24;
    uint64_t v75 = AssociatedConformanceWitness;
    uint64_t v76 = v27;
    type metadata accessor for ReconciliationID();
    uint64_t v31 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, char *, uint64_t))(v72 + 16))(v30, &v6[*(void *)(*(void *)v6 + 576)], v25);
    swift_storeEnumTagMultiPayload();
    *(unsigned char *)(v30 + v31) = sub_24DB1702C();
    uint64_t v32 = sub_24D785484(v28);
    sub_24D509A34(v32);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v10 = v65;
    uint64_t v12 = v59;
    uint64_t v13 = v57;
    uint64_t v21 = v58;
  }
  (*(void (**)(uint64_t (*)(void), void))(**(void **)(v21 + 16) + 688))(nullsub_1, 0);
  sub_24DBB275C();
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v34 = v33;
  unint64_t v37 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  uint64_t v36 = v10 + 8;
  uint64_t v35 = v37;
  uint64_t result = v37(v12, v67);
  double v39 = v34 * 1000000000.0;
  if ((~COERCE__INT64(v34 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v39 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v39 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v40 = (uint64_t)v39;
  uint64_t v41 = *((void *)v6 + 17) | 0x8000;
  uint64_t v42 = v69;
  uint64_t v43 = v70;
  uint64_t v60 = v35;
  uint64_t v44 = v68;
  uint64_t v73 = v70;
  uint64_t v74 = v68;
  uint64_t v75 = v13;
  uint64_t v76 = v69;
  uint64_t v45 = type metadata accessor for JobResult();
  uint64_t v65 = v36;
  uint64_t v46 = v45;
  uint64_t v73 = v43;
  uint64_t v74 = v44;
  uint64_t v75 = v13;
  uint64_t v76 = v42;
  type metadata accessor for Ingestion.FetchItemMetadata();
  uint64_t v47 = v66;
  uint64_t v48 = sub_24DC09748(v66, 0, v40, v41, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
  uint64_t v49 = v71;
  uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
  v72 += 8;
  v50(v47, v71);
  uint64_t v51 = v62;
  uint64_t v70 = v46;
  sub_24D85246C(v62, v48);
  uint64_t v52 = (uint64_t)v61;
  swift_release();
  sub_24DBB27A0();
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v54 = v53;
  uint64_t result = v60(v12, v67);
  double v55 = v54 * 1000000000.0;
  if ((~COERCE__INT64(v54 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v55 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v55 < 9.22337204e18)
  {
    uint64_t v56 = sub_24DC09748(v52, 0, (uint64_t)v55, *((void *)v6 + 17) | 0x8000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
    v50(v52, v49);
    sub_24D85246C(v51, v56);
    swift_release();
    return v64(0, 0, 0, 0);
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Ingestion.DeferredRescan()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24DBFCD48()
{
  return 0xD000000000000017;
}

uint64_t sub_24DBFCD64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, v3, AssociatedTypeWitness);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(a1, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_24DBFCE70()
{
  if (*(unsigned char *)(v0 + 138)) {
    return 3;
  }
  else {
    return 1;
  }
}

uint64_t sub_24DBFCE84()
{
  uint64_t v1 = type metadata accessor for JobLockRule();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = v11 - v3 + 22;
  swift_beginAccess();
  sub_24D73C78C((uint64_t)(v0 + 7), (uint64_t)v11);
  uint64_t v5 = v0[15];
  uint64_t v6 = (char *)v0 + *(void *)(*v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v4, v6, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = sub_24D578CBC((uint64_t)v11, v5, (uint64_t)v4);
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  sub_24D73C7F4((uint64_t)v11);
  return v8;
}

void sub_24DBFD064(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void, unint64_t, unint64_t, void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v78 = a4;
  uint64_t v79 = a5;
  uint64_t v74 = a2;
  uint64_t v75 = a3;
  uint64_t v81 = a1;
  uint64_t v7 = (void *)*v5;
  uint64_t v8 = v7[77];
  uint64_t v9 = v7[75];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = v7[78];
  uint64_t v12 = v7[76];
  uint64_t v83 = AssociatedTypeWitness;
  uint64_t v84 = swift_getAssociatedTypeWitness();
  uint64_t v13 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v86 = swift_getAssociatedConformanceWitness();
  uint64_t v82 = type metadata accessor for ReconciliationID();
  uint64_t v73 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v80 = (char *)&v59 - v14;
  uint64_t v83 = v9;
  uint64_t v84 = v12;
  uint64_t AssociatedConformanceWitness = v8;
  uint64_t v86 = v11;
  uint64_t v65 = type metadata accessor for ReconciliationMutation();
  uint64_t v67 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v66 = (char *)&v59 - v15;
  uint64_t v83 = v9;
  uint64_t v84 = v12;
  uint64_t v68 = v12;
  uint64_t v69 = v11;
  uint64_t AssociatedConformanceWitness = v8;
  uint64_t v86 = v11;
  uint64_t v16 = type metadata accessor for ItemReconciliation();
  uint64_t v70 = sub_24DCCA3F8();
  uint64_t v72 = *(void **)(v70 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v70);
  uint64_t v76 = (char *)&v59 - v18;
  uint64_t v71 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v59 - v19;
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v9;
  uint64_t v23 = v81;
  uint64_t v24 = v8;
  type metadata accessor for SnapshotItem();
  uint64_t v25 = sub_24DCC9518();
  uint64_t v77 = v21;
  *(void *)(v21 + 16) = v25;
  uint64_t v26 = v23[4];
  char v27 = (*(uint64_t (**)(void))(*v23 + 256))();
  uint64_t v28 = v13;
  uint64_t v29 = v80;
  if ((v27 & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v30 = v72;
  uint64_t v63 = v26;
  uint64_t v31 = v80;
  uint64_t v61 = v20;
  uint64_t v64 = v16;
  uint64_t v62 = v28;
  uint64_t v32 = (uint64_t)v6 + *(void *)(*v6 + 576);
  sub_24D4759C8(v32, (uint64_t)v76);
  uint64_t v60 = v32;
  uint64_t v33 = v71;
  uint64_t v34 = v64;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v76, 1, v64) != 1)
  {
    uint64_t v72 = v6;
    uint64_t v35 = v61;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v61, v76, v34);
    uint64_t v36 = v63;
    if (sub_24D8903D0())
    {
      uint64_t v37 = type metadata accessor for ItemReconciliationHalf();
      if (v35[*(int *)(v37 + 56)] - 3 >= 4)
      {
        if (v35[*(int *)(v37 + 52)] == 1)
        {
          uint64_t v83 = v22;
          uint64_t v84 = v68;
          uint64_t AssociatedConformanceWitness = v24;
          uint64_t v86 = v69;
          type metadata accessor for JobResult();
          type metadata accessor for ReconciliationSideMutation();
          TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
          uint64_t v39 = (uint64_t)v66;
          uint64_t v40 = &v66[*(int *)(TupleTypeMetadata2 + 48)];
          (*(void (**)(char *, uint64_t))(*(void *)(v62 - 8) + 16))(v66, v60);
          uint64_t v35 = v61;
          swift_storeEnumTagMultiPayload();
          *uint64_t v40 = 0;
          uint64_t v34 = v64;
          swift_storeEnumTagMultiPayload();
          uint64_t v41 = v65;
          swift_storeEnumTagMultiPayload();
          sub_24D907568(v75, v39);
          (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v39, v41);
        }
        unint64_t v42 = 0x800000024DD22D00;
        unint64_t v43 = 0xD000000000000036;
LABEL_16:
        v78(0, v43, v42, 0);
        (*(void (**)(char *, uint64_t))(v71 + 8))(v35, v34);
        swift_release();
        return;
      }
    }
    else
    {
      uint64_t v44 = &v35[*(int *)(v34 + 52)];
      if ((v44[*(int *)(type metadata accessor for ItemReconciliationHalf() + 56)] | 2) != 6)
      {
        if (v35[*(int *)(type metadata accessor for ItemReconciliationHalf() + 52)] == 1)
        {
          uint64_t v83 = v22;
          uint64_t v84 = v68;
          uint64_t AssociatedConformanceWitness = v24;
          uint64_t v86 = v69;
          type metadata accessor for JobResult();
          type metadata accessor for ReconciliationSideMutation();
          uint64_t v55 = swift_getTupleTypeMetadata2();
          uint64_t v56 = (uint64_t)v66;
          uint64_t v57 = &v66[*(int *)(v55 + 48)];
          (*(void (**)(char *, uint64_t))(*(void *)(v62 - 8) + 16))(v66, v60);
          uint64_t v35 = v61;
          swift_storeEnumTagMultiPayload();
          *uint64_t v57 = 3;
          uint64_t v34 = v64;
          swift_storeEnumTagMultiPayload();
          uint64_t v58 = v65;
          swift_storeEnumTagMultiPayload();
          sub_24D907568(v75, v56);
          (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v56, v58);
        }
        unint64_t v43 = 0xD000000000000040;
        unint64_t v42 = 0x800000024DD22CB0;
        goto LABEL_16;
      }
    }
    (*(void (**)(char *, uint64_t))(v71 + 8))(v35, v34);
    uint64_t v28 = v62;
    uint64_t v6 = v72;
    uint64_t v29 = v31;
    uint64_t v26 = v36;
    goto LABEL_11;
  }
  ((void (*)(char *, uint64_t))v30[1])(v76, v70);
  uint64_t v28 = v62;
  uint64_t v29 = v31;
  uint64_t v26 = v63;
LABEL_11:
  uint64_t v81 = (void *)((char *)v6 + *(void *)(*v6 + 576));
  (*(void (**)(char *))(*(void *)(v28 - 8) + 16))(v29);
  uint64_t v45 = v82;
  swift_storeEnumTagMultiPayload();
  uint64_t v76 = (char *)(*(uint64_t (**)(char *))(*v23 + 472))(v29);
  uint64_t v46 = (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v29, v45);
  uint64_t v47 = *(void *)(v26 + 16);
  uint64_t v82 = (*(uint64_t (**)(uint64_t))(*v23 + 272))(v46);
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = v77;
  *(void *)(v48 + 16) = v6;
  *(void *)(v48 + 24) = v49;
  uint64_t v50 = (void *)swift_allocObject();
  v50[2] = v23;
  v50[3] = v6;
  uint64_t v51 = v79;
  v50[4] = v78;
  void v50[5] = v51;
  v50[6] = v75;
  v50[7] = v49;
  uint64_t v52 = *(void (**)(void *, uint64_t, uint64_t, char *, uint64_t (*)(uint64_t), uint64_t, void (*)(void *, char), void *))(*(void *)v47 + 144);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  double v53 = (void *)v82;
  double v54 = v76;
  v52(v81, v74, v82, v76, sub_24DC0B4C0, v48, sub_24DC0B524, v50);
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_24DBFDAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)a2 + 600);
  uint64_t v7 = *(void *)(*(void *)a2 + 616);
  uint64_t v40 = type metadata accessor for SnapshotItem();
  uint64_t v8 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v39 = (uint64_t)v35 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v13 = (char *)v35 - v12;
  uint64_t v14 = *(void *)(v6 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v11);
  uint64_t v38 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v35 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v51 = (char *)v35 - v20;
  uint64_t v21 = swift_bridgeObjectRetain();
  if (!MEMORY[0x253327DC0](v21, v6))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  v35[0] = v15;
  uint64_t v22 = 0;
  v35[3] = a3 + 16;
  uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v7 + 72);
  uint64_t v45 = a2 + *(void *)(*(void *)a2 + 576);
  uint64_t v50 = (void (**)(char *, uint64_t *, uint64_t))(v14 + 16);
  unint64_t v43 = (void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v44 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  unint64_t v42 = (void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v47 = v7 + 72;
  id v35[2] = v7 + 64;
  v35[1] = v40 - 8;
  uint64_t v48 = v14;
  uint64_t v49 = v7;
  uint64_t v36 = a1;
  uint64_t v37 = AssociatedTypeWitness;
  while (1)
  {
    char v24 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v24)
    {
      uint64_t v25 = *(void (**)(char *, uint64_t *, uint64_t))(v14 + 16);
      v25(v51, (uint64_t *)(a1+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v22), v6);
      uint64_t v26 = v22 + 1;
      if (__OFADD__(v22, 1)) {
        goto LABEL_11;
      }
      goto LABEL_6;
    }
    uint64_t result = sub_24DCCA778();
    if (v35[0] != 8) {
      break;
    }
    v52[0] = result;
    uint64_t v25 = *v50;
    (*v50)(v51, v52, v6);
    swift_unknownObjectRelease();
    uint64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
LABEL_6:
    (*v44)(v19, v51, v6);
    v46(v6, v7);
    swift_getAssociatedConformanceWitness();
    char v27 = sub_24DCC9798();
    (*v43)(v13, AssociatedTypeWitness);
    if (v27)
    {
      uint64_t v28 = v49;
      (*(void (**)(uint64_t, uint64_t))(v49 + 64))(v6, v49);
      uint64_t v29 = v38;
      v25(v38, (uint64_t *)v19, v6);
      uint64_t v41 = v26;
      uint64_t v30 = v39;
      uint64_t v31 = v40;
      uint64_t v32 = (uint64_t)v29;
      uint64_t v33 = v28;
      a1 = v36;
      uint64_t AssociatedTypeWitness = v37;
      sub_24D97AFF8(v32, v6, v33, v39);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
      swift_beginAccess();
      sub_24DCC9638();
      uint64_t v26 = v41;
      sub_24DCC9668();
      swift_endAccess();
    }
    (*v42)(v19, v6);
    ++v22;
    BOOL v23 = v26 == MEMORY[0x253327DC0](a1, v6);
    uint64_t v14 = v48;
    uint64_t v7 = v49;
    if (v23) {
      goto LABEL_12;
    }
  }
  __break(1u);
  return result;
}

void sub_24DBFE000(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2)
  {
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = a4;
    *(void *)(v36 + 24) = a3;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = a5;
    *(void *)(v37 + 24) = a6;
    uint64_t v38 = (void *)swift_allocObject();
    void v38[2] = a3;
    v38[3] = a4;
    v38[4] = a7;
    v38[5] = a1;
    v38[6] = a5;
    v38[7] = a6;
    sub_24D46C820(a1, 1);
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    sub_24D46C820(a1, 1);
    uint64_t v39 = type metadata accessor for Continuation();
    swift_retain();
    swift_retain();
    sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D73C874, v36, (uint64_t)sub_24D73CC58, v37, (uint64_t)sub_24DC0B73C, (uint64_t)v38, v39, MEMORY[0x263F8D310]);
    swift_release();
    swift_release();
    swift_release();
    sub_24D46C814(a1, 1);
  }
  else
  {
    swift_beginAccess();
    uint64_t v15 = *(void *)(a8 + 16);
    swift_getAssociatedTypeWitness();
    uint64_t v51 = a7;
    uint64_t v16 = type metadata accessor for SnapshotItem();
    swift_getAssociatedConformanceWitness();
    nullsub_1(v15);
    sub_24D46C820(a1, 0);
    sub_24DCC95E8();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t v17 = sub_24DCC9D78();
    uint64_t v18 = MEMORY[0x253327D80](v17, v16);
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = a1;
    v19[3] = a3;
    v19[4] = a4;
    v19[5] = v51;
    v19[6] = a5;
    v19[7] = a6;
    uint64_t v46 = v19;
    unsigned char v19[8] = v17;
    swift_retain();
    swift_retain();
    uint64_t v44 = a1;
    sub_24D46C820(a1, 0);
    uint64_t v45 = a6;
    swift_retain();
    swift_retain();
    uint64_t v20 = swift_bridgeObjectRetain();
    if (MEMORY[0x253327D80](v20, v16) < 1)
    {
LABEL_11:
      swift_bridgeObjectRelease();
      if (v18)
      {
        sub_24D46C814(v44, 0);
      }
      else
      {
        uint64_t v40 = swift_allocObject();
        *(void *)(v40 + 16) = a4;
        *(void *)(v40 + 24) = a3;
        uint64_t v41 = swift_allocObject();
        *(void *)(v41 + 16) = a5;
        *(void *)(v41 + 24) = v45;
        uint64_t v42 = swift_allocObject();
        *(void *)(v42 + 16) = sub_24DC0B5C0;
        *(void *)(v42 + 24) = v46;
        uint64_t v43 = type metadata accessor for Continuation();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D73C874, v40, (uint64_t)sub_24D73CC58, v41, (uint64_t)sub_24D9051A4, v42, v43, MEMORY[0x263F8D310]);
        sub_24D46C814(v44, 0);
        swift_release();
        swift_release();
        swift_release();
      }
      swift_release();
    }
    else
    {
      uint64_t v21 = 0;
      if (v18 >= 50) {
        uint64_t v22 = 50;
      }
      else {
        uint64_t v22 = v18;
      }
      while (v22 >= v21)
      {
        uint64_t v48 = sub_24DCC9D88();
        uint64_t v50 = v24;
        uint64_t v52 = v23;
        uint64_t v26 = v25;
        BOOL v49 = v22 == v18;
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = a4;
        *(void *)(v27 + 24) = a3;
        uint64_t v28 = swift_allocObject();
        *(void *)(v28 + 16) = a5;
        *(void *)(v28 + 24) = v45;
        uint64_t v29 = v18;
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = a4;
        *(void *)(v30 + 24) = v48;
        *(void *)(v30 + 32) = v52;
        *(void *)(v30 + 40) = v26;
        *(void *)(v30 + 48) = v50;
        *(void *)(v30 + 56) = a3;
        *(unsigned char *)(v30 + 64) = v49;
        *(void *)(v30 + 72) = sub_24DC0B5C0;
        *(void *)(v30 + 80) = v46;
        uint64_t v31 = type metadata accessor for Continuation();
        swift_retain_n();
        swift_retain_n();
        swift_retain();
        swift_unknownObjectRetain();
        swift_retain();
        sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D73C874, v27, (uint64_t)sub_24D73CC58, v28, (uint64_t)sub_24DC0B640, v30, v31, MEMORY[0x263F8D310]);
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v32 = v22 + 50;
        if (__OFADD__(v22, 50)) {
          goto LABEL_19;
        }
        if (v29 < v32) {
          uint64_t v32 = v29;
        }
        uint64_t v21 = v22;
        BOOL v33 = v22 < v29;
        uint64_t v22 = v32;
        uint64_t v18 = v29;
        if (!v33) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_19:
      __break(1u);
    }
  }
}

void sub_24DBFE6BC(void *a1, uint64_t *a2, uint64_t a3, void *a4, void (*a5)(void, void, void, id), uint64_t a6)
{
  uint64_t v125 = a6;
  uint64_t v126 = a5;
  id v133 = a4;
  uint64_t v129 = a3;
  uint64_t v8 = (void *)*a1;
  uint64_t v114 = sub_24DCC82A8();
  uint64_t v113 = *(void *)(v114 - 8);
  MEMORY[0x270FA5388](v114);
  uint64_t v112 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v8[10];
  uint64_t v11 = v8[12];
  uint64_t v119 = type metadata accessor for SnapshotItem();
  uint64_t v118 = sub_24DCCA3F8();
  uint64_t v117 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388](v118);
  uint64_t v120 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v107 - v12);
  uint64_t v132 = sub_24DCC8288();
  uint64_t v135 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  uint64_t v136 = (char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v124 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  id v116 = (char *)&v107 - v14;
  uint64_t v130 = type metadata accessor for FileTreeError();
  uint64_t v115 = *(void *)(v130 - 8);
  MEMORY[0x270FA5388](v130);
  long long v131 = (char *)&v107 - v15;
  uint64_t v16 = v8[11];
  uint64_t v17 = v8[13];
  uint64_t v142 = v10;
  uint64_t v143 = v16;
  uint64_t v144 = v11;
  uint64_t v145 = v17;
  uint64_t v123 = type metadata accessor for ReconciliationMutation();
  uint64_t v122 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388](v123);
  unint64_t v121 = (char *)&v107 - v18;
  uint64_t v140 = v10;
  uint64_t v142 = v10;
  uint64_t v143 = v16;
  uint64_t v127 = v16;
  uint64_t v128 = v17;
  uint64_t v144 = v11;
  uint64_t v145 = v17;
  uint64_t v19 = type metadata accessor for ItemReconciliation();
  uint64_t v20 = sub_24DCCA3F8();
  uint64_t v134 = *(char **)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v107 - v22;
  uint64_t v138 = *(void *)(v19 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v107 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v107 - v27;
  uint64_t v29 = *(void *)(*a2 + 576);
  uint64_t v137 = a2;
  uint64_t v30 = (uint64_t)a2 + v29;
  uint64_t v31 = v141;
  sub_24D4759C8(v30, (uint64_t)v23);
  if (v31) {
    return;
  }
  uint64_t v32 = (void (**)(char *, uint64_t))v134;
  uint64_t v107 = v20;
  uint64_t v108 = v26;
  uint64_t v109 = v28;
  uint64_t v141 = v30;
  uint64_t v111 = a1;
  uint64_t v110 = 0;
  uint64_t v33 = v138;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v138 + 48))(v23, 1, v19) != 1)
  {
    uint64_t v34 = v109;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v109, v23, v19);
    uint64_t v35 = &v34[*(int *)(v19 + 52)];
    uint64_t v36 = v127;
    uint64_t v37 = v128;
    uint64_t v38 = type metadata accessor for ItemReconciliationHalf();
    int v39 = v35[*(int *)(v38 + 56)];
    if (v39 == 6)
    {
      uint64_t v40 = v108;
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v108, v34, v19);
    }
    else
    {
      uint64_t v40 = v108;
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v108, v34, v19);
      if (v39 == 4)
      {
        uint64_t v41 = *(char **)(v33 + 8);
        uint64_t v138 = (v33 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        uint64_t v134 = v41;
        ((void (*)(char *, uint64_t))v41)(v40, v19);
        uint64_t v108 = (char *)v19;
LABEL_10:
        uint64_t v142 = v140;
        uint64_t v143 = v36;
        uint64_t v144 = v11;
        uint64_t v145 = v37;
        type metadata accessor for JobResult();
        uint64_t v46 = swift_getAssociatedTypeWitness();
        uint64_t v47 = AssociatedTypeWitness;
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v49 = swift_getAssociatedConformanceWitness();
        uint64_t v142 = v47;
        uint64_t v143 = v46;
        uint64_t v144 = AssociatedConformanceWitness;
        uint64_t v145 = v49;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v51 = (uint64_t)v121;
        uint64_t v52 = &v121[*(int *)(TupleTypeMetadata2 + 48)];
        (*(void (**)(char *, uint64_t, uint64_t))(v124 + 16))(v121, v141, v47);
        swift_storeEnumTagMultiPayload();
        *uint64_t v52 = 3;
        swift_storeEnumTagMultiPayload();
        uint64_t v53 = v123;
        swift_storeEnumTagMultiPayload();
        sub_24D907568(v129, v51);
        (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v51, v53);
        ((void (*)(char *, char *))v134)(v109, v108);
        goto LABEL_14;
      }
    }
    int v42 = v40[*(int *)(v19 + 52) + *(int *)(v38 + 56)];
    uint64_t v45 = *(char **)(v33 + 8);
    uint64_t v44 = v33 + 8;
    uint64_t v43 = v45;
    ((void (*)(char *, uint64_t))v45)(v40, v19);
    if (v42 != 3)
    {
      uint64_t v54 = v140;
      if (v34[*(int *)(type metadata accessor for ItemReconciliationHalf() + 52)] == 1)
      {
        uint64_t v142 = v54;
        uint64_t v143 = v36;
        uint64_t v144 = v11;
        uint64_t v145 = v37;
        type metadata accessor for JobResult();
        uint64_t v134 = v43;
        uint64_t v55 = swift_getAssociatedTypeWitness();
        uint64_t v108 = (char *)v19;
        uint64_t v138 = v44;
        uint64_t v56 = AssociatedTypeWitness;
        uint64_t v57 = swift_getAssociatedConformanceWitness();
        uint64_t v58 = swift_getAssociatedConformanceWitness();
        uint64_t v142 = v56;
        uint64_t v143 = v55;
        uint64_t v144 = v57;
        uint64_t v145 = v58;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v59 = swift_getTupleTypeMetadata2();
        uint64_t v60 = (uint64_t)v121;
        uint64_t v61 = &v121[*(int *)(v59 + 48)];
        (*(void (**)(char *, uint64_t, uint64_t))(v124 + 16))(v121, v141, v56);
        swift_storeEnumTagMultiPayload();
        *uint64_t v61 = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v62 = v123;
        swift_storeEnumTagMultiPayload();
        sub_24D907568(v129, v60);
        (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v60, v62);
        ((void (*)(char *, char *))v134)(v109, v108);
      }
      else
      {
        ((void (*)(char *, uint64_t))v43)(v34, v19);
      }
      goto LABEL_14;
    }
    uint64_t v138 = v44 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v108 = (char *)v19;
    uint64_t v134 = v43;
    goto LABEL_10;
  }
  v32[1](v23, v107);
LABEL_14:
  uint64_t v64 = v132;
  id v63 = v133;
  uint64_t v65 = v136;
  uint64_t v66 = v137;
  uint64_t v67 = v111;
  uint64_t v68 = v135;
  uint64_t v70 = v130;
  uint64_t v69 = v131;
  id v146 = v133;
  id v71 = v133;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
  if (swift_dynamicCast())
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 13)
    {
      uint64_t v88 = v140;
      uint64_t v90 = v127;
      uint64_t v89 = v128;
      uint64_t v142 = v140;
      uint64_t v143 = v127;
      uint64_t v144 = v11;
      uint64_t v145 = v128;
      type metadata accessor for JobResult();
      uint64_t v142 = v88;
      uint64_t v143 = v90;
      uint64_t v144 = v11;
      uint64_t v145 = v89;
      type metadata accessor for Ingestion.FetchChildrenMetadata();
      uint64_t v91 = sub_24DC09748(v141, v66[15], v66[16], v66[17] | 0x2000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
      sub_24D85246C(v129, v91);
      swift_release();
      v126(0, 0, 0, v63);
      goto LABEL_20;
    }
    if (EnumCaseMultiPayload)
    {
      (*(void (**)(char *, uint64_t))(v115 + 8))(v69, v70);
    }
    else
    {
      uint64_t v73 = v140;
      uint64_t v74 = swift_getAssociatedTypeWitness();
      uint64_t v75 = swift_getAssociatedTypeWitness();
      uint64_t v76 = swift_getAssociatedConformanceWitness();
      uint64_t v77 = swift_getAssociatedConformanceWitness();
      uint64_t v142 = v74;
      uint64_t v143 = v75;
      uint64_t v144 = v76;
      uint64_t v145 = v77;
      type metadata accessor for FileItemVersion();
      uint64_t v78 = sub_24DCCA3F8();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
      uint64_t v79 = AssociatedTypeWitness;
      uint64_t v138 = v78;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v134 = &v69[*(int *)(TupleTypeMetadata3 + 48)];

      uint64_t v81 = v124;
      uint64_t v82 = v116;
      (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v116, v69, v79);
      swift_getAssociatedConformanceWitness();
      uint64_t v83 = v141;
      char v84 = sub_24DCC9798();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v79);
      if (v84)
      {
        uint64_t v85 = v127;
        uint64_t v86 = v128;
        uint64_t v142 = v73;
        uint64_t v143 = v127;
        uint64_t v144 = v11;
        uint64_t v145 = v128;
        type metadata accessor for JobResult();
        uint64_t v142 = v73;
        uint64_t v143 = v85;
        uint64_t v144 = v11;
        uint64_t v145 = v86;
        type metadata accessor for Ingestion.FetchItemMetadata();
        uint64_t v87 = sub_24DC09748(v83, v137[15], v137[16], 0x2000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
        sub_24D85246C(v129, v87);
        swift_release();
        v126(0, 0, 0, v63);
        (*(void (**)(char *))(*(void *)(v138 - 8) + 8))(v134);
LABEL_20:

        return;
      }
      (*(void (**)(char *))(*(void *)(v138 - 8) + 8))(v134);
      uint64_t v65 = v136;
      uint64_t v66 = v137;
      uint64_t v67 = v111;
      uint64_t v68 = v135;
    }
  }

  sub_24DCC8158();
  sub_24DC0B794((unint64_t *)&qword_26B1943D0, MEMORY[0x263F06038]);
  char v92 = sub_24DCC86A8();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v65, v64);
  uint64_t v94 = AssociatedTypeWitness;
  uint64_t v93 = v140;
  uint64_t v95 = swift_getAssociatedConformanceWitness();
  uint64_t v96 = v95;
  uint64_t v97 = v141;
  if (v92 & 1) != 0 && ((*(uint64_t (**)(uint64_t, uint64_t))(v95 + 72))(v94, v95))
  {
    uint64_t v98 = v120;
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(*(void *)(v119 - 8)
                                                                                               + 56))(v120, 1, 1);
    uint64_t v99 = v110;
    sub_24DBCB8D8(v98, v97, 0, 0, 0, v67, v66[15], v66[16], v66[17], v129);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v117 + 8))(v98, v118);
    if (!v99)
    {
      sub_24DCC8158();
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24DC0B794((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
      uint64_t v104 = v112;
      uint64_t v105 = v114;
      sub_24DCC8808();
      unint64_t v106 = (void *)sub_24DCC8128();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v104, v105);
      v126(0, 0, 0, v106);
    }
  }
  else
  {
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v96 + 72))(v94, v96) & 1) == 0)
    {
      uint64_t v100 = v66[17];
      if ((v100 & 1) == 0)
      {
        uint64_t v102 = v127;
        uint64_t v101 = v128;
        uint64_t v142 = v93;
        uint64_t v143 = v127;
        uint64_t v144 = v11;
        uint64_t v145 = v128;
        type metadata accessor for JobResult();
        uint64_t v142 = v93;
        uint64_t v143 = v102;
        uint64_t v144 = v11;
        uint64_t v145 = v101;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v103 = sub_24DC09748(v97, v66[15], v66[16], v100, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
        sub_24D85246C(v129, v103);
        swift_release();
      }
    }
    v126(0, 0, 0, v63);
  }
}

uint64_t sub_24DBFF80C(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, unint64_t, void), uint64_t a6, uint64_t a7)
{
  uint64_t v82 = a5;
  uint64_t v78 = a3;
  uint64_t v79 = a7;
  uint64_t v81 = a6;
  uint64_t v77 = a4;
  unint64_t v8 = *(void *)(*(void *)a2 + 88);
  uint64_t v9 = *(void *)(*(void *)a2 + 96);
  uint64_t v10 = *(void *)(*(void *)a2 + 104);
  uint64_t v85 = *(void *)(*(void *)a2 + 80);
  unint64_t v86 = v8;
  uint64_t v87 = v9;
  uint64_t v88 = v10;
  uint64_t v11 = type metadata accessor for ReconciliationMutation();
  uint64_t v76 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v68 - v12;
  uint64_t v84 = v85;
  unint64_t v86 = v8;
  uint64_t v87 = v9;
  uint64_t v14 = v9;
  uint64_t v88 = v10;
  uint64_t v15 = type metadata accessor for ItemReconciliation();
  uint64_t v16 = sub_24DCCA3F8();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v68 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v24 = (char *)&v68 - v23;
  uint64_t v80 = a1;
  if (a1)
  {
    uint64_t v25 = v82;
    uint64_t v26 = v79;
    uint64_t v27 = v80;
LABEL_10:
    uint64_t v85 = 0x6572646C6968633CLL;
    unint64_t v86 = 0xEA00000000003A6ELL;
    uint64_t v49 = type metadata accessor for SnapshotItem();
    uint64_t v89 = MEMORY[0x253327D80](v26, v49);
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    v25(v27, v85, v86, 0);
    return swift_bridgeObjectRelease();
  }
  uint64_t v69 = v22;
  uint64_t v70 = v20;
  uint64_t v71 = (uint64_t)v24;
  uint64_t v72 = v13;
  uint64_t v28 = v21;
  uint64_t v73 = v11;
  uint64_t v74 = v10;
  unint64_t v75 = v8;
  if (sub_24D8903D0() || (v78[136] & 1) == 0)
  {
    uint64_t v29 = v14;
    goto LABEL_6;
  }
  uint64_t v51 = (uint64_t)&v78[*(void *)(*(void *)v78 + 576)];
  uint64_t v52 = v83;
  uint64_t result = sub_24D4759C8(v51, (uint64_t)v19);
  unint64_t v53 = v75;
  if (!v52)
  {
    uint64_t v29 = v14;
    uint64_t v68 = v51;
    uint64_t v54 = v28;
    uint64_t v55 = v15;
    int v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v19, 1, v15);
    uint64_t v83 = 0;
    if (v56 != 1)
    {
      uint64_t v57 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
      uint64_t v58 = v71;
      v57(v71, v19, v15);
      uint64_t v59 = v58 + *(int *)(v15 + 52);
      uint64_t v30 = v74;
      if (*(unsigned char *)(v59 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 44)) == 3)
      {
        uint64_t v85 = v84;
        unint64_t v86 = v53;
        uint64_t v87 = v14;
        uint64_t v88 = v30;
        uint64_t v70 = type metadata accessor for JobResult();
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        uint64_t v61 = swift_getAssociatedTypeWitness();
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v63 = swift_getAssociatedConformanceWitness();
        uint64_t v85 = AssociatedTypeWitness;
        unint64_t v86 = v61;
        uint64_t v87 = AssociatedConformanceWitness;
        uint64_t v88 = v63;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v65 = (uint64_t)v72;
        uint64_t v66 = &v72[*(int *)(TupleTypeMetadata2 + 48)];
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v72, v68, AssociatedTypeWitness);
        swift_storeEnumTagMultiPayload();
        *uint64_t v66 = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v67 = v73;
        swift_storeEnumTagMultiPayload();
        uint64_t v40 = v77;
        sub_24D907568(v77, v65);
        (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v65, v67);
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v71, v55);
        uint64_t v38 = v78;
        uint64_t v41 = *((void *)v78 + 17);
        if ((v41 & 0x80000000) == 0) {
          goto LABEL_9;
        }
        goto LABEL_8;
      }
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v58, v55);
LABEL_7:
      uint64_t v85 = v84;
      unint64_t v86 = v75;
      uint64_t v87 = v29;
      uint64_t v88 = v30;
      uint64_t v71 = type metadata accessor for JobResult();
      uint64_t v31 = swift_getAssociatedTypeWitness();
      uint64_t v32 = swift_getAssociatedTypeWitness();
      uint64_t v33 = swift_getAssociatedConformanceWitness();
      uint64_t v34 = swift_getAssociatedConformanceWitness();
      uint64_t v85 = v31;
      unint64_t v86 = v32;
      uint64_t v87 = v33;
      uint64_t v88 = v34;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v35 = swift_getTupleTypeMetadata2();
      uint64_t v36 = (uint64_t)v72;
      uint64_t v37 = &v72[*(int *)(v35 + 48)];
      uint64_t v38 = v78;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v72, &v38[*(void *)(*(void *)v38 + 576)], v31);
      swift_storeEnumTagMultiPayload();
      *uint64_t v37 = 2;
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = v73;
      swift_storeEnumTagMultiPayload();
      uint64_t v40 = v77;
      sub_24D907568(v77, v36);
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v36, v39);
      uint64_t v41 = *((void *)v38 + 17);
      if ((v41 & 0x80000000) == 0)
      {
LABEL_9:
        uint64_t v25 = v82;
        uint64_t v26 = v79;
        uint64_t v27 = v80;
        goto LABEL_10;
      }
LABEL_8:
      uint64_t v42 = v84;
      uint64_t v44 = v74;
      unint64_t v43 = v75;
      uint64_t v85 = v84;
      unint64_t v86 = v75;
      uint64_t v87 = v29;
      uint64_t v88 = v74;
      type metadata accessor for JobResult();
      uint64_t v85 = v42;
      unint64_t v86 = v43;
      uint64_t v87 = v29;
      uint64_t v88 = v44;
      type metadata accessor for Ingestion.MarkParentDeleted();
      uint64_t v45 = (uint64_t)&v38[*(void *)(*(void *)v38 + 576)];
      uint64_t v46 = *((void *)v38 + 15);
      uint64_t v47 = *((void *)v38 + 16);
      swift_allocObject();
      uint64_t v48 = sub_24D983960(v45, v46, v47, v41);
      sub_24D85246C(v40, v48);
      swift_release();
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v69 + 8))(v19, v70);
LABEL_6:
    uint64_t v30 = v74;
    goto LABEL_7;
  }
  return result;
}

void sub_24DC00030(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void *a6, int a7, void (*a8)(uint64_t))
{
  uint64_t v64 = a8;
  int v68 = a7;
  uint64_t v70 = a3;
  uint64_t v12 = a1;
  uint64_t v73 = (void *)*a1;
  uint64_t v13 = sub_24DCC8CE8();
  uint64_t v66 = *(void *)(v13 - 8);
  uint64_t v67 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v65 = &v59[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = (void (**)(uint64_t, uint64_t))v73[75];
  uint64_t v71 = v73[77];
  uint64_t v72 = v15;
  uint64_t v69 = type metadata accessor for SnapshotItem();
  uint64_t v78 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v77 = &v59[-v16];
  uint64_t v17 = sub_24DCC9078();
  unint64_t v75 = *(void **)(v17 - 8);
  uint64_t v76 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = &v59[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v20 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  id v21 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v74 = a2;
  swift_unknownObjectRetain_n();
  id v22 = v20;
  swift_retain();
  uint64_t v23 = sub_24DCC9068();
  os_log_type_t v24 = sub_24DCCA108();
  int v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v80 = v12;
    uint64_t v27 = v26;
    uint64_t v28 = (void *)swift_slowAlloc();
    uint64_t v61 = v28;
    uint64_t v63 = swift_slowAlloc();
    v83[0] = v63;
    *(_DWORD *)uint64_t v27 = 138412802;
    os_log_t v62 = v23;
    id v29 = objc_msgSend(v22, sel_enter);
    int v60 = v25;
    id v30 = v29;
    uint64_t v82 = (uint64_t)v29;
    uint64_t v79 = a6;
    sub_24DCCA428();
    *uint64_t v28 = v30;

    *(_WORD *)(v27 + 12) = 2082;
    uint64_t v31 = sub_24D982AC4();
    uint64_t v82 = sub_24D418FB4(v31, v32, v83);
    sub_24DCCA428();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 22) = 2050;
    uint64_t v33 = sub_24DCCA558();
    swift_unknownObjectRelease();
    uint64_t v82 = v33;
    a6 = v79;
    sub_24DCCA428();
    swift_unknownObjectRelease();
    os_log_t v34 = v62;
    _os_log_impl(&dword_24D3D0000, v62, (os_log_type_t)v60, "%@ processing item batch %{public}s -> <items:%{public}ld>", (uint8_t *)v27, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    uint64_t v35 = v61;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v35, -1, -1);
    uint64_t v36 = v63;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v36, -1, -1);
    uint64_t v37 = v27;
    uint64_t v12 = v80;
    MEMORY[0x25332B030](v37, -1, -1);
  }
  else
  {

    swift_release();
    swift_unknownObjectRelease_n();
  }
  ((void (*)(unsigned char *, uint64_t))v75[1])(v19, v76);
  if ((v12[17] & 0x10000) != 0) {
    int v38 = 3;
  }
  else {
    int v38 = 1;
  }
  uint64_t v39 = v81;
  unint64_t v40 = sub_24DBE533C((uint64_t)v12 + *(void *)(*v12 + 576), v38, a6);
  if (v39)
  {
LABEL_23:
    sub_24DC00808(v22);

    return;
  }
  uint64_t v80 = v12;
  uint64_t v81 = 0;
  uint64_t v74 = v40;
  uint64_t v76 = v41;
  uint64_t v63 = (uint64_t)v22;
  uint64_t v79 = a6;
  uint64_t v42 = v73[76];
  uint64_t v43 = v73[78];
  v83[0] = (uint64_t)v72;
  v83[1] = v42;
  v83[2] = v71;
  v83[3] = v43;
  type metadata accessor for ConcreteJobResult();
  unint64_t v75 = (void *)sub_24D907530();
  swift_unknownObjectRetain();
  uint64_t v44 = v69;
  uint64_t v45 = v70;
  uint64_t v46 = sub_24DCCA538();
  if (v46 != sub_24DCCA568())
  {
    uint64_t v47 = (uint64_t)v77;
    uint64_t v71 = v78 + 16;
    uint64_t v72 = (void (**)(uint64_t, uint64_t))(v78 + 8);
    uint64_t v73 = (void *)(a5 >> 1);
    uint64_t v48 = v46;
    while (1)
    {
      sub_24DCCA548();
      if (v46 < a4 || (uint64_t)v73 <= v48) {
        break;
      }
      uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v47, v45 + *(void *)(v78 + 72) * v48, v44);
      uint64_t v50 = (void *)MEMORY[0x253329610](v49);
      uint64_t v51 = v81;
      sub_24DC00A0C(v74, v76, v47, v79, v80, (uint64_t)v75);
      uint64_t v81 = v51;
      if (v51)
      {
        swift_release();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        (*v72)(v47, v44);
        id v22 = (id)v63;
        goto LABEL_23;
      }
      ++v48;
      (*v72)(v47, v44);
      if (v48 == sub_24DCCA568()) {
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
LABEL_14:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v52 = v65;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v54 = v53;
  (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v52, v67);
  double v55 = v54 * 1000000000.0;
  char v56 = v68;
  if ((~COERCE__INT64(v54 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v55 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v55 < 9.22337204e18)
  {
    uint64_t v57 = v81;
    uint64_t v58 = sub_24D9126EC(v75, (uint64_t)v55);
    if (v57)
    {
      swift_release();
      id v22 = (id)v63;
    }
    else
    {
      id v22 = (id)v63;
      if (v56) {
        v64(v58);
      }
      swift_release();
    }
    goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_24DC00808(void *a1)
{
  uint64_t v2 = sub_24DCC9078();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v7 = a1;
  unint64_t v8 = sub_24DCC9068();
  os_log_type_t v9 = sub_24DCCA108();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    v16[0] = v2;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    id v13 = [v7 leave];
    v16[1] = v13;
    sub_24DCCA428();
    *uint64_t v12 = v13;

    _os_log_impl(&dword_24D3D0000, v8, v9, "%@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v12, -1, -1);
    uint64_t v14 = v11;
    uint64_t v2 = v16[0];
    MEMORY[0x25332B030](v14, -1, -1);
  }
  else
  {

    unint64_t v8 = v7;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_24DC00A0C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v57 = a6;
  char v56 = a5;
  uint64_t v51 = (void *)*a4;
  os_log_type_t v9 = (void *)v51[10];
  uint64_t v10 = v51[12];
  uint64_t v48 = type metadata accessor for FileTreeError();
  uint64_t v46 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v47 = (char *)&v45 - v11;
  uint64_t v12 = type metadata accessor for SnapshotItem();
  uint64_t v13 = sub_24DCCA3F8();
  uint64_t v52 = *(void *)(v13 - 8);
  unint64_t v53 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v45 - v14);
  uint64_t v16 = sub_24DCC8CE8();
  uint64_t v49 = *(void *)(v16 - 8);
  uint64_t v50 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v55 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  id v21 = (char *)&v45 - v20;
  if (a2)
  {
    id v22 = v58;
    char v23 = sub_24DBE5040(a3, (uint64_t)a4);
    os_log_type_t v24 = v22;
    if (v22 || (v23 & 1) == 0) {
      return;
    }
  }
  else
  {
    os_log_type_t v24 = v58;
  }
  int v25 = (uint64_t *)(a3 + *(int *)(v12 + 68));
  unint64_t v26 = v25[1];
  if (!(v26 >> 62)) {
    return;
  }
  if (v26 >> 62 == 1)
  {
    uint64_t v58 = v24;
    id v59 = v9;
    uint64_t v52 = *v25;
    unint64_t v53 = v26;
    uint64_t v27 = v26 & 0x3FFFFFFFFFFFFFFFLL;
    uint64_t v28 = v51[11];
    uint64_t v29 = v51[13];
    uint64_t v60 = v28;
    uint64_t v61 = v10;
    uint64_t v62 = v29;
    type metadata accessor for Ingestion.TrackTemporaryItem();
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v21, a3, v55);
    swift_retain();
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v31 = v30;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v50);
    double v32 = v31 * 1000000000.0;
    if ((~COERCE__INT64(v31 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v32 > -9.22337204e18)
      {
        if (v32 < 9.22337204e18)
        {
          uint64_t v33 = (uint64_t)v32;
          uint64_t v34 = v56[17];
          swift_allocObject();
          uint64_t v35 = sub_24D983960((uint64_t)v21, 0x2000000000000000, v33, v34);
          (*(void (**)(char *, uint64_t))(v54 + 8))(v21, v55);
          uint64_t v37 = *(void **)(v35 + 96);
          uint64_t v36 = *(void **)(v35 + 104);
          *(void *)(v35 + 96) = 256;
          *(void *)(v35 + 104) = v27;
          char v38 = *(unsigned char *)(v35 + 112);
          *(unsigned char *)(v35 + 112) = 0;
          swift_retain();
          sub_24D3E380C(v37, v36, v38);
          id v59 = v9;
          uint64_t v60 = v28;
          uint64_t v61 = v10;
          uint64_t v62 = v29;
          type metadata accessor for JobResult();
          sub_24D85246C(v57, v35);
          swift_release();
          sub_24D466534(v52, v53);
          return;
        }
        goto LABEL_25;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_25:
    __break(1u);
    return;
  }
  uint64_t v39 = *(void *)(v12 - 8);
  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(v39 + 16))(v15, a3, v12);
  (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v39 + 56))(v15, 0, 1, v12);
  uint64_t v44 = v56[17];
  if ((v44 & 0x10000) != 0) {
    int v40 = 3;
  }
  else {
    int v40 = 1;
  }
  sub_24DBCB8D8(v15, a3, v40, 1, 0, a4, v56[15], v56[16], v44, v57);
  if (v24)
  {
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), unint64_t))(v52 + 8))(v15, v53);
    id v59 = v24;
    id v41 = v24;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    uint64_t v43 = v47;
    uint64_t v42 = v48;
    if (swift_dynamicCast())
    {
      if (swift_getEnumCaseMultiPayload() == 14)
      {

        return;
      }
      (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v42);
    }
  }
  else
  {
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), unint64_t))(v52 + 8))(v15, v53);
  }
}

uint64_t sub_24DC0101C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v35 = a2;
  uint64_t v5 = *(void *)(*(void *)v3 + 608);
  uint64_t v34 = *(void *)(*(void *)v3 + 624);
  uint64_t v36 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_24DCCA3F8();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v31 - v12;
  if (sub_24D8903D0())
  {
    uint64_t v14 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v16 = swift_getAssociatedConformanceWitness();
    uint64_t v37 = v14;
    uint64_t v38 = AssociatedTypeWitness;
    uint64_t v39 = AssociatedConformanceWitness;
    uint64_t v40 = v16;
    uint64_t v17 = type metadata accessor for ReconciliationID();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v35, 1, 1, v17);
  }
  else
  {
    uint64_t v31 = v7;
    uint64_t v32 = v11;
    uint64_t v19 = v41;
    uint64_t result = (*(uint64_t (**)(uint64_t))(**(void **)(a1 + 16) + 160))(v3 + *(void *)(*(void *)v3 + 576));
    if (!v19)
    {
      uint64_t v20 = v32;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v10, 1, AssociatedTypeWitness) == 1)
      {
        (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v31);
        uint64_t v21 = swift_getAssociatedTypeWitness();
        uint64_t v22 = swift_getAssociatedConformanceWitness();
        uint64_t v23 = swift_getAssociatedConformanceWitness();
        uint64_t v37 = v21;
        uint64_t v38 = AssociatedTypeWitness;
        uint64_t v39 = v22;
        uint64_t v40 = v23;
        uint64_t v24 = type metadata accessor for ReconciliationID();
        return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v35, 1, 1, v24);
      }
      else
      {
        int v25 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
        v25(v13, v10, AssociatedTypeWitness);
        unint64_t v26 = v35;
        v25(v35, v13, AssociatedTypeWitness);
        uint64_t v27 = swift_getAssociatedTypeWitness();
        uint64_t v28 = swift_getAssociatedConformanceWitness();
        uint64_t v29 = swift_getAssociatedConformanceWitness();
        uint64_t v37 = v27;
        uint64_t v38 = AssociatedTypeWitness;
        uint64_t v39 = v28;
        uint64_t v40 = v29;
        uint64_t v30 = type metadata accessor for ReconciliationID();
        swift_storeEnumTagMultiPayload();
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v26, 0, 1, v30);
      }
    }
  }
  return result;
}

uint64_t sub_24DC01500@<X0>(uint64_t a1@<X8>)
{
  return sub_24DC01508(a1);
}

uint64_t sub_24DC01508@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v3, AssociatedTypeWitness);
  type metadata accessor for DirectionalTestingOperation();
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = type metadata accessor for TestingOperation();
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, 0, 1, v5);
}

uint64_t type metadata accessor for Ingestion.FetchChildrenMetadata()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24DC016A8()
{
  return 0xD000000000000012;
}

uint64_t sub_24DC016C4()
{
  return 9;
}

uint64_t sub_24DC016CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for JobLockRule();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = v15 - v7 + 22;
  uint64_t v9 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(a2 + 32) + 16) + 304);
  uint64_t v10 = swift_retain();
  LOBYTE(v9) = v9(v10);
  swift_release();
  if (v9) {
    return 0;
  }
  swift_beginAccess();
  sub_24D73C78C(v3 + 56, (uint64_t)v15);
  uint64_t v12 = *(void *)(v3 + 120);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = sub_24D578CBC((uint64_t)v15, v12, (uint64_t)v8);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  sub_24D73C7F4((uint64_t)v15);
  return v11;
}

void sub_24DC0189C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  (*(void (**)(void))(*a1 + 216))();
  uint64_t v10 = sub_24D57BD24();
  swift_release();
  uint64_t v11 = *(void *)(a1[4] + 16);
  uint64_t v12 = *(uint64_t (**)(uint64_t))(*a1 + 272);
  uint64_t v13 = swift_retain();
  id v16 = (id)v12(v13);
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a1;
  v14[3] = v5;
  v14[4] = a4;
  void v14[5] = a5;
  v14[6] = a3;
  v14[7] = v10;
  uint64_t v15 = *(void (**)(id, uint64_t (*)(uint64_t, uint64_t), void *))(*(void *)v11 + 664);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v15(v16, sub_24DC0B360, v14);
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_24DC01A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  *(void *)(v14 + 24) = a3;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a5;
  *(void *)(v15 + 24) = a6;
  id v16 = (void *)swift_allocObject();
  void v16[2] = a3;
  v16[3] = a2;
  type metadata accessor for FileTreeWriter.EventStreamBatch();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v17 = sub_24DCCB058();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16 + 4, a1, v17);
  v16[9] = a7;
  v16[10] = a4;
  v16[11] = a5;
  v16[12] = a6;
  v16[13] = a8;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_24DC0B444(a1, (void (*)(void, void, void, void, void))sub_24D4C6B10);
  uint64_t v18 = type metadata accessor for Continuation();
  swift_retain();
  swift_retain();
  sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D73C874, v14, (uint64_t)sub_24D73CC58, v15, (uint64_t)sub_24DC0B3E4, (uint64_t)v16, v18, MEMORY[0x263F8D310]);
  swift_release();
  swift_release();

  return swift_release();
}

void sub_24DC01C9C(void *a1, uint64_t a2, void (**a3)(void, void), void *a4, void *a5, void (*a6)(void, uint64_t, unint64_t, uint64_t), uint64_t a7, objc_class *a8)
{
  uint64_t v216 = a8;
  uint64_t v204 = a7;
  unint64_t v205 = a6;
  uint64_t v229 = a4;
  uint64_t v206 = (void *)*a1;
  uint64_t v13 = (void *)v206[10];
  uint64_t v14 = v206[12];
  type metadata accessor for FileTreeWriter.EventStreamBatch();
  uint64_t v209 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v15 = sub_24DCCB058();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(void, void))(v16 + 32);
  uint64_t v230 = a3;
  uint64_t v226 = v15;
  char v223 = (void (*)(void *, void (**)(void, void), uint64_t))v17;
  int64_t v222 = v16 + 32;
  v17(&v242, a3);
  id v202 = v242;
  uint64_t v208 = type metadata accessor for FileTreeError();
  uint64_t v199 = *(void *)(v208 - 8);
  MEMORY[0x270FA5388](v208);
  uint64_t v207 = (char *)&v195 - v18;
  uint64_t v19 = sub_24DCCA3F8();
  uint64_t v217 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v211 = (char *)&v195 - v20;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v213 = sub_24DCCA3F8();
  uint64_t v200 = *(void *)(v213 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v213);
  uint64_t v215 = (char *)&v195 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v212 = (char *)&v195 - v24;
  uint64_t v236 = v19;
  uint64_t v25 = sub_24DCCA3F8();
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v232 = (char *)&v195 - v27;
  uint64_t v225 = *(v13 - 1);
  uint64_t v198 = *(void *)(v225 + 64);
  MEMORY[0x270FA5388](v26);
  uint64_t v233 = (char *)&v195 - v28;
  uint64_t v29 = sub_24DCC8CE8();
  uint64_t v219 = *(void *)(v29 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v221 = (char *)&v195 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v228 = AssociatedTypeWitness;
  uint64_t v227 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v210 = (char *)&v195 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v231 = (char *)&v195 - v35;
  uint64_t v197 = v36;
  uint64_t v37 = MEMORY[0x270FA5388](v34);
  uint64_t v234 = (uint64_t *)((char *)&v195 - v38);
  uint64_t v39 = *(uint64_t (**)(uint64_t))(*a1 + 152);
  uint64_t v218 = a1;
  uint64_t v40 = v39(v37);
  unint64_t v235 = v13;
  uint64_t v203 = v40;
  uint64_t v220 = (void (**)(void, void, void, void))v29;
  if ((v40 & 0x40) != 0) {
    goto LABEL_8;
  }
  uint64_t v41 = a2;
  uint64_t v42 = *(void *)(a2 + 16);
  if (!v42)
  {
    a2 = v41;
LABEL_8:
    uint64_t v51 = a5;
    uint64_t v50 = v229;
    goto LABEL_9;
  }
  uint64_t v196 = a5;
  uint64_t v224 = v14;
  uint64_t v43 = v218[7];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 8);
  uint64_t v46 = *(void *)(type metadata accessor for SyncState() - 8);
  uint64_t v47 = v41 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
  uint64_t v48 = v41;
  uint64_t v49 = *(void *)(v46 + 72);
  uint64_t v201 = v48;
  swift_bridgeObjectRetain();
  do
  {
    v45(v47, ObjectType, v43);
    if (v8) {
      goto LABEL_97;
    }
    v47 += v49;
    --v42;
  }
  while (v42);
  a2 = v201;
  swift_bridgeObjectRelease();
  uint64_t v13 = v235;
  uint64_t v14 = v224;
  uint64_t v50 = v229;
  uint64_t v51 = v196;
LABEL_9:
  v223(v243, v230, v226);
  uint64_t v52 = v243[0];
  uint64_t v226 = v243[0];
  if (v246 == 1)
  {
    _s3__C4CodeOMa_1(0);
    uint64_t v237 = -1002;
    id v53 = v202;
    id v54 = v202;
    sub_24DC0B794((unint64_t *)&qword_26B194040, _s3__C4CodeOMa_1);
    char v55 = sub_24DCC86A8();
    sub_24DC0B444((uint64_t)v230, (void (*)(void, void, void, void, void))sub_24D4C6B9C);
    if (v55)
    {
      char v56 = v229;
      if ((v203 & 0x40) != 0)
      {
        uint64_t v172 = *(void *)(v218[4] + 16);
        uint64_t v173 = *(void (**)(void))(v172 + 16);
        if (v173)
        {
          uint64_t v236 = *(void *)(v172 + 24);
          type metadata accessor for FileTreeWriter.FileTreeChange();
          uint64_t v201 = a2;
          sub_24DCCAD88();
          swift_allocObject();
          swift_retain();
          uint64_t v174 = v51;
          uint64_t v175 = sub_24DCC9C58();
          *(unsigned char *)uint64_t v176 = 0;
          *(void *)(v176 + 8) = 7;
          *(unsigned char *)(v176 + 16) = 1;
          swift_storeEnumTagMultiPayload();
          uint64_t v177 = v175;
          uint64_t v51 = v174;
          sub_24D785484(v177);
          v173();
          sub_24D43DD74((uint64_t)v173);
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        uint64_t v196 = v51;
        id v202 = v8;
        unint64_t v57 = v206[11];
        uint64_t v58 = v206[13];
        uint64_t v237 = (uint64_t)v13;
        unint64_t v238 = v57;
        uint64_t v239 = v14;
        uint64_t v240 = v58;
        uint64_t v236 = type metadata accessor for JobResult();
        uint64_t v237 = (uint64_t)v13;
        unint64_t v238 = v57;
        uint64_t v239 = v14;
        uint64_t v224 = v14;
        uint64_t v240 = v58;
        uint64_t ItemMetadata = type metadata accessor for Ingestion.FetchItemMetadata();
        sub_24DBB275C();
        uint64_t v60 = v221;
        sub_24DCC8CD8();
        sub_24DCC8C88();
        double v62 = v61;
        uint64_t v63 = *(void (**)(void, void))(v219 + 8);
        uint64_t v64 = v220;
        v63(v60, v220);
        double v65 = v62 * 1000000000.0;
        if ((~COERCE__INT64(v62 * 1000000000.0) & 0x7FF0000000000000) == 0) {
          goto LABEL_112;
        }
        if (v65 <= -9.22337204e18) {
          goto LABEL_113;
        }
        if (v65 >= 9.22337204e18) {
          goto LABEL_114;
        }
        uint64_t v66 = (uint64_t)v56;
        uint64_t v67 = (uint64_t)v234;
        uint64_t v233 = (char *)ItemMetadata;
        uint64_t v68 = sub_24DC09748((uint64_t)v234, 0, (uint64_t)v65, 0x8000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
        uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v227 + 8);
        v227 += 8;
        v69(v67, v228);
        sub_24D85246C(v66, v68);
        swift_release();
        sub_24DBB27A0();
        uint64_t v70 = v221;
        sub_24DCC8CD8();
        sub_24DCC8C88();
        double v72 = v71;
        v63(v70, v64);
        double v73 = v72 * 1000000000.0;
        if ((~COERCE__INT64(v72 * 1000000000.0) & 0x7FF0000000000000) == 0) {
          goto LABEL_115;
        }
        uint64_t v14 = v224;
        uint64_t v51 = v196;
        if (v73 <= -9.22337204e18) {
          goto LABEL_116;
        }
        uint64_t v13 = v235;
        if (v73 >= 9.22337204e18) {
          goto LABEL_117;
        }
        char v56 = (void *)v66;
        uint64_t v74 = (uint64_t)v234;
        uint64_t v75 = sub_24DC09748((uint64_t)v234, 0, (uint64_t)v73, 0x8000, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
        v69(v74, v228);
        sub_24D85246C((uint64_t)v56, v75);
        swift_release();
      }
      unint64_t v178 = v206[11];
      uint64_t v179 = v206[13];
      uint64_t v237 = (uint64_t)v13;
      unint64_t v238 = v178;
      uint64_t v239 = v14;
      uint64_t v240 = v179;
      type metadata accessor for JobResult();
      uint64_t v237 = (uint64_t)v13;
      unint64_t v238 = v178;
      uint64_t v239 = v14;
      uint64_t v240 = v179;
      type metadata accessor for Ingestion.FetchEventStream();
      uint64_t v180 = v51;
      uint64_t v181 = *(void *)(*v51 + 576);
      uint64_t v182 = v221;
      sub_24DCC8CD8();
      sub_24DCC8C88();
      double v184 = v183;
      (*(void (**)(char *, void (**)(void, void, void, void)))(v219 + 8))(v182, v220);
      double v185 = v184 * 1000000000.0;
      if ((~COERCE__INT64(v184 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v185 > -9.22337204e18)
        {
          if (v185 < 9.22337204e18)
          {
            uint64_t v186 = (uint64_t)v180 + v181;
            uint64_t v187 = (uint64_t)v185;
            uint64_t v188 = v180[17];
            swift_allocObject();
            uint64_t v189 = sub_24DC096F0(v186, 0x2000000000000000, v187, v188, 0x80000);
            sub_24D85246C((uint64_t)v56, v189);
            swift_release();
            type metadata accessor for NSFileProviderError(0);
            uint64_t v247 = -1002;
            sub_24D5F77E0(MEMORY[0x263F8EE78]);
            sub_24DC0B794(&qword_26B193F20, type metadata accessor for NSFileProviderError);
            sub_24DCC8808();
            id v190 = (id)v237;
            v205(0, 0, 0, v237);

            return;
          }
LABEL_110:
          __break(1u);
          goto LABEL_111;
        }
LABEL_109:
        __break(1u);
        goto LABEL_110;
      }
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    unint64_t v145 = v206[11];
    uint64_t v146 = v206[13];
    uint64_t v237 = (uint64_t)v13;
    unint64_t v238 = v145;
    uint64_t v239 = v14;
    uint64_t v240 = v146;
    type metadata accessor for JobResult();
    uint64_t v237 = (uint64_t)v13;
    unint64_t v238 = v145;
    uint64_t v239 = v14;
    uint64_t v240 = v146;
    type metadata accessor for Ingestion.FetchEventStream();
    uint64_t v147 = v51;
    uint64_t v148 = *(void *)(*v51 + 576);
    id v149 = v53;
    uint64_t v150 = v221;
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v152 = v151;
    (*(void (**)(char *, void (**)(void, void, void, void)))(v219 + 8))(v150, v220);
    double v153 = v152 * 1000000000.0;
    if ((~COERCE__INT64(v152 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v153 > -9.22337204e18)
      {
        if (v153 < 9.22337204e18)
        {
          uint64_t v154 = (uint64_t)v147 + v148;
          uint64_t v155 = (uint64_t)v153;
          uint64_t v156 = v147[17];
          swift_allocObject();
          uint64_t v157 = sub_24DC096F0(v154, 0x2000000000000000, v155, v156, 0x80000);
          sub_24D85246C((uint64_t)v229, v157);
          swift_release();
          id v158 = v53;
          v205(0, 0, 0, v226);
          uint64_t v159 = v230;
          sub_24DC0B444((uint64_t)v230, (void (*)(void, void, void, void, void))sub_24D4C6B9C);
          sub_24DC0B444((uint64_t)v159, (void (*)(void, void, void, void, void))sub_24D4C6B9C);
          return;
        }
        goto LABEL_107;
      }
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
      goto LABEL_108;
    }
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  uint64_t v201 = a2;
  char v223 = (void (*)(void *, void (**)(void, void), uint64_t))v243[1];
  double v76 = v245;
  LODWORD(v196) = v244;
  if (v244)
  {
    unint64_t v77 = v206[11];
    uint64_t v78 = v206[13];
    uint64_t v237 = (uint64_t)v13;
    unint64_t v238 = v77;
    uint64_t v239 = v14;
    uint64_t v240 = v78;
    uint64_t v230 = (void (**)(void, void))type metadata accessor for JobResult();
    uint64_t v237 = (uint64_t)v13;
    unint64_t v238 = v77;
    uint64_t v239 = v14;
    uint64_t v240 = v78;
    type metadata accessor for Ingestion.FetchEventStream();
    uint64_t v79 = *(void *)(*v51 + 576);
    uint64_t v80 = v221;
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v82 = v81;
    (*(void (**)(char *, void (**)(void, void, void, void)))(v219 + 8))(v80, v220);
    double v83 = v82 * 1000000000.0;
    if ((~COERCE__INT64(v82 * 1000000000.0) & 0x7FF0000000000000) == 0)
    {
LABEL_102:
      __break(1u);
      goto LABEL_103;
    }
    if (v83 <= -9.22337204e18)
    {
LABEL_103:
      __break(1u);
      goto LABEL_104;
    }
    uint64_t v52 = v226;
    if (v83 >= 9.22337204e18)
    {
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
    uint64_t v84 = (uint64_t)v51 + v79;
    uint64_t v85 = (uint64_t)v83;
    uint64_t v86 = v51[17];
    swift_allocObject();
    uint64_t v87 = sub_24DC096F0(v84, 0x2000000000000000, v85, v86, 0x80000);
    sub_24D85246C((uint64_t)v50, v87);
    swift_release();
    uint64_t v13 = v235;
  }
  id v202 = v8;
  swift_getTupleTypeMetadata2();
  sub_24DCC9C98();
  uint64_t v230 = *(void (***)(void, void))(swift_getAssociatedConformanceWitness() + 32);
  uint64_t v247 = sub_24DCC95B8();
  uint64_t v88 = swift_bridgeObjectRetain();
  uint64_t v89 = MEMORY[0x253327DC0](v88, v13);
  uint64_t v224 = v14;
  if (!v89) {
    goto LABEL_34;
  }
  uint64_t v90 = 0;
  uint64_t v221 = *(char **)(v14 + 64);
  int64_t v222 = v14 + 64;
  uint64_t v229 = (void *)(v225 + 16);
  uint64_t v220 = (void (**)(void, void, void, void))(v225 + 56);
  uint64_t v219 = v217 + 56;
  uint64_t v91 = (void (**)(char *, void *))(v225 + 8);
  char v92 = v233;
  uint64_t v93 = v232;
  while (1)
  {
    char v94 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if ((v94 & 1) == 0) {
      break;
    }
    unint64_t v95 = v52
        + ((*(unsigned __int8 *)(v225 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v225 + 80))
        + *(void *)(v225 + 72) * v90;
    uint64_t v96 = *(void (**)(char *, unint64_t, void *))(v225 + 16);
    v96(v233, v95, v13);
    uint64_t v97 = v90 + 1;
    if (__OFADD__(v90, 1)) {
      goto LABEL_33;
    }
LABEL_28:
    uint64_t v13 = v235;
    ((void (*)(void *, uint64_t))v221)(v235, v224);
    v96(v93, (unint64_t)v92, v13);
    (*v220)(v93, 0, 1, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))v219)(v93, 0, 1, v236);
    sub_24DCC9638();
    sub_24DCC9668();
    (*v91)(v92, v13);
    uint64_t v52 = v226;
    ++v90;
    if (v97 == MEMORY[0x253327DC0](v226, v13)) {
      goto LABEL_34;
    }
  }
  uint64_t v98 = sub_24DCCA778();
  if (v198 != 8) {
    goto LABEL_118;
  }
  uint64_t v237 = v98;
  uint64_t v96 = (void (*)(char *, unint64_t, void *))*v229;
  ((void (*)(char *, uint64_t *, void *))*v229)(v233, &v237, v13);
  swift_unknownObjectRelease();
  uint64_t v97 = v90 + 1;
  if (!__OFADD__(v90, 1)) {
    goto LABEL_28;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  swift_bridgeObjectRelease();
  uint64_t v99 = (void (*)(void, void, void))v223;
  uint64_t v100 = swift_bridgeObjectRetain();
  uint64_t v101 = v228;
  if (!MEMORY[0x253327DC0](v100, v228)) {
    goto LABEL_45;
  }
  uint64_t v102 = 0;
  uint64_t v233 = (char *)(v227 + 16);
  uint64_t v103 = (void (**)(uint64_t, char *, uint64_t))(v227 + 32);
  uint64_t v104 = (void (**)(char *, uint64_t, uint64_t, void *))(v225 + 56);
  uint64_t v105 = (void (**)(char *, void, uint64_t, uint64_t))(v217 + 56);
  uint64_t v106 = (uint64_t)v234;
  uint64_t v107 = v232;
  while (2)
  {
    char v108 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v108)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v227 + 16))(v231, (unint64_t)v99+ ((*(unsigned __int8 *)(v227 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v227 + 80))+ *(void *)(v227 + 72) * v102, v101);
      uint64_t v109 = v102 + 1;
      if (__OFADD__(v102, 1)) {
        break;
      }
      goto LABEL_38;
    }
    uint64_t v112 = sub_24DCCA778();
    if (v197 != 8) {
      goto LABEL_119;
    }
    uint64_t v237 = v112;
    (*(void (**)(char *, uint64_t *, uint64_t))v233)(v231, &v237, v101);
    swift_unknownObjectRelease();
    uint64_t v109 = v102 + 1;
    if (!__OFADD__(v102, 1))
    {
LABEL_38:
      (*v103)(v106, v231, v101);
      (*v104)(v107, 1, 1, v235);
      (*v105)(v107, 0, 1, v236);
      sub_24DCC9638();
      sub_24DCC9668();
      uint64_t v110 = (void (*)(void, void, void))v223;
      ++v102;
      BOOL v111 = v109 == MEMORY[0x253327DC0](v223, v101);
      uint64_t v99 = v110;
      if (v111) {
        goto LABEL_45;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_45:
  uint64_t v113 = swift_bridgeObjectRelease();
  if ((v203 & 0x40) != 0)
  {
    unint64_t v160 = *(void (**)(uint64_t, uint64_t, void, void))(*(void *)(v218[4] + 16) + 16);
    if (v160)
    {
      uint64_t v234 = &v195;
      uint64_t v237 = v247;
      uint64_t v161 = MEMORY[0x270FA5388](v113);
      uint64_t v162 = v206[13];
      *(&v195 - 4) = v206[11];
      *(&v195 - 3) = v162;
      *(&v195 - 2) = (uint64_t)v216;
      MEMORY[0x270FA5388](v161);
      uint64_t v163 = v235;
      *(&v195 - 6) = (uint64_t)v235;
      *(&v195 - 5) = v164;
      *(&v195 - 4) = v224;
      *(&v195 - 3) = v165;
      *(&v195 - 2) = (uint64_t)sub_24DC0B410;
      *(&v195 - 1) = v166;
      sub_24D3EBEF0((uint64_t)v160);
      uint64_t v167 = sub_24DCC9638();
      uint64_t v168 = type metadata accessor for FileTreeWriter.FileTreeChange();
      swift_bridgeObjectRetain();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v171 = sub_24D7854B0((void (*)(char *, char *))sub_24DC0B41C, (uint64_t)(&v195 - 8), v167, v168, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v170);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v160(v171, v201, 0, 0);
      sub_24D43DD74((uint64_t)v160);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
LABEL_92:
      uint64_t v163 = v235;
    }
    if (v76 >= 30.0)
    {
      sub_24D5129BC();
      unint64_t v191 = (void *)swift_allocError();
      *(void *)uint64_t v192 = 0;
      *(void *)(v192 + 8) = 0;
      *(unsigned char *)(v192 + 16) = -4;
    }
    else
    {
      unint64_t v191 = 0;
    }
    uint64_t v193 = v228;
    uint64_t v237 = 0;
    unint64_t v238 = 0xE000000000000000;
    id v194 = v191;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    uint64_t v237 = 0x646574616470753CLL;
    unint64_t v238 = 0xE90000000000003ALL;
    uint64_t v241 = MEMORY[0x253327D80](v226, v163);
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v241 = MEMORY[0x253327D80](v223, v193);
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    v205(0, v237, v238, (uint64_t)v191);

LABEL_97:
    swift_bridgeObjectRelease();
    return;
  }
  int64_t v114 = 0;
  uint64_t v115 = *(void *)(v247 + 64);
  uint64_t v221 = (char *)(v247 + 64);
  uint64_t v229 = (void *)v247;
  uint64_t v116 = 1 << *(unsigned char *)(v247 + 32);
  uint64_t v117 = -1;
  if (v116 < 64) {
    uint64_t v117 = ~(-1 << v116);
  }
  unint64_t v118 = v117 & v115;
  uint64_t v119 = TupleTypeMetadata2;
  uint64_t v234 = (uint64_t *)(TupleTypeMetadata2 - 8);
  uint64_t v225 = v227 + 16;
  uint64_t v224 = v217 + 16;
  uint64_t v120 = (void (**)(void))(v200 + 32);
  uint64_t v233 = (char *)(v217 + 32);
  uint64_t v232 = (char *)(v227 + 32);
  uint64_t v231 = (char *)(v217 + 8);
  uint64_t v230 = (void (**)(void, void))(v227 + 8);
  int64_t v222 = (unint64_t)(v116 + 63) >> 6;
  uint64_t v220 = (void (**)(void, void, void, void))(v222 - 1);
  id v121 = v202;
  while (2)
  {
    uint64_t v122 = v215;
    if (v118)
    {
      unint64_t v123 = __clz(__rbit64(v118));
      v118 &= v118 - 1;
      int64_t v124 = v114;
      unint64_t v125 = v123 | (v114 << 6);
      uint64_t v126 = v236;
      goto LABEL_53;
    }
    int64_t v129 = v114 + 1;
    uint64_t v126 = v236;
    if (__OFADD__(v114, 1))
    {
      __break(1u);
      goto LABEL_102;
    }
    if (v129 >= v222)
    {
      int64_t v124 = v114;
      goto LABEL_59;
    }
    unint64_t v130 = *(void *)&v221[8 * v129];
    if (v130)
    {
LABEL_57:
      unint64_t v118 = (v130 - 1) & v130;
      unint64_t v125 = __clz(__rbit64(v130)) + (v129 << 6);
      int64_t v124 = v129;
LABEL_53:
      uint64_t v127 = v229;
      (*(void (**)(char *, unint64_t, uint64_t))(v227 + 16))(v215, v229[6] + *(void *)(v227 + 72) * v125, v228);
      (*(void (**)(char *, unint64_t, uint64_t))(v217 + 16))(&v122[*(int *)(v119 + 48)], v127[7] + *(void *)(v217 + 72) * v125, v126);
      uint64_t v128 = 0;
LABEL_60:
      uint64_t v131 = *(void *)(v119 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v131 + 56))(v122, v128, 1, v119);
      uint64_t v132 = v212;
      (*v120)();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48))(v132, 1, v119) == 1)
      {
        swift_release();
        goto LABEL_92;
      }
      id v133 = &v132[*(int *)(v119 + 48)];
      uint64_t v134 = (uint64_t)v211;
      (*(void (**)(char *, char *, uint64_t))v233)(v211, v133, v126);
      uint64_t v135 = (uint64_t)v210;
      uint64_t v136 = v132;
      uint64_t v137 = v126;
      uint64_t v138 = v228;
      uint64_t v139 = (*(uint64_t (**)(char *, char *, uint64_t))v232)(v210, v136, v228);
      uint64_t v140 = (void *)MEMORY[0x253329610](v139);
      sub_24DC03D68(v135, v134, v216, v218);
      if (v121)
      {
        (*(void (**)(uint64_t, uint64_t))v231)(v134, v137);
        (*v230)(v135, v138);
        uint64_t v237 = (uint64_t)v121;
        id v141 = v121;
        uint64_t v142 = v207;
        uint64_t v143 = v208;
        if (swift_dynamicCast())
        {
          if (swift_getEnumCaseMultiPayload() == 14)
          {

            id v121 = 0;
            goto LABEL_50;
          }
          swift_release();
          (*(void (**)(char *, uint64_t))(v199 + 8))(v142, v143);
        }
        else
        {
          swift_release();
        }

        return;
      }
      (*(void (**)(uint64_t, uint64_t))v231)(v134, v137);
      (*v230)(v135, v138);
LABEL_50:
      uint64_t v119 = TupleTypeMetadata2;
      int64_t v114 = v124;
      continue;
    }
    break;
  }
  int64_t v124 = v114 + 2;
  if (v114 + 2 >= v222)
  {
    unint64_t v118 = 0;
    uint64_t v128 = 1;
    int64_t v124 = v114 + 1;
    goto LABEL_60;
  }
  unint64_t v130 = *(void *)&v221[8 * v124];
  if (v130)
  {
    int64_t v129 = v114 + 2;
    goto LABEL_57;
  }
  uint64_t v144 = v114 + 3;
  if (v114 + 3 >= v222)
  {
LABEL_59:
    unint64_t v118 = 0;
    uint64_t v128 = 1;
    goto LABEL_60;
  }
  unint64_t v130 = *(void *)&v221[8 * v144];
  if (v130)
  {
    int64_t v129 = v114 + 3;
    goto LABEL_57;
  }
  while (1)
  {
    int64_t v129 = v144 + 1;
    if (__OFADD__(v144, 1)) {
      break;
    }
    if (v129 >= v222)
    {
      unint64_t v118 = 0;
      uint64_t v128 = 1;
      int64_t v124 = (int64_t)v220;
      goto LABEL_60;
    }
    unint64_t v130 = *(void *)&v221[8 * v129];
    ++v144;
    if (v130) {
      goto LABEL_57;
    }
  }
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
}

uint64_t sub_24DC03B04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_24DCCA3F8();
  sub_24DCCA3F8();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v11 = a4 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v12 = *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a4, a1, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v11, a2, v9);
  *(void *)(a4 + v12) = a3;
  type metadata accessor for FileTreeWriter.FileTreeChange();
  swift_storeEnumTagMultiPayload();

  return swift_retain();
}

uint64_t sub_24DC03CB0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  swift_getAssociatedTypeWitness();
  sub_24DCCA3F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_24DC03D68(uint64_t a1, uint64_t a2, objc_class *a3, void *a4)
{
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v6 = *(void *)a3;
  uint64_t v7 = *a4;
  uint64_t v8 = sub_24DCC8CE8();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v31 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v6 + 80);
  uint64_t v11 = *(void *)(v6 + 88);
  uint64_t v12 = type metadata accessor for FileTreeWriter.FileTreeChange();
  uint64_t v36 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = ((char *)&v30 - v13);
  uint64_t v15 = *(void *)(v7 + 88);
  uint64_t v16 = *(void *)(v7 + 104);
  uint64_t v38 = v10;
  uint64_t v39 = v15;
  uint64_t v40 = v11;
  uint64_t v41 = v16;
  type metadata accessor for ConcreteJobResult();
  uint64_t v17 = sub_24D907530();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = sub_24DCCA3F8();
  type metadata accessor for JobLockAggregator();
  sub_24DCCA3F8();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v21 = (char *)v14 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v22 = *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(NSObject *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v14, v34, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v21, v35, v19);
  *(Class *)((char *)&v14->isa + v22) = a3;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  uint64_t v23 = v37;
  sub_24DBD1684(v14, 0, v17, a4);
  if (v23)
  {
    swift_release();
    return (*(uint64_t (**)(NSObject *, uint64_t))(v36 + 8))(v14, v12);
  }
  (*(void (**)(NSObject *, uint64_t))(v36 + 8))(v14, v12);
  uint64_t v25 = v31;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v27 = v26;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v25, v33);
  double v28 = v27 * 1000000000.0;
  if ((~COERCE__INT64(v27 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v28 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v28 < 9.22337204e18)
  {
    uint64_t v29 = sub_24D9126EC(v17, (uint64_t)v28);
    (*(void (**)(uint64_t))(*a4 + 552))(v29);
    return swift_release();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Ingestion.FetchEventStream()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24DC04188()
{
  return 0xD000000000000014;
}

uint64_t sub_24DC041A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v10 = v5 + *(void *)(*(void *)v5 + 576);
  uint64_t v11 = (void *)swift_allocObject();
  _OWORD v11[2] = a1;
  v11[3] = a4;
  v11[4] = a5;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t (*)(), void *))(*(void *)v9 + 584);
  swift_retain();
  swift_retain();
  swift_retain();
  v12(v10, sub_24DC0B310, v11);
  swift_release();

  return swift_release();
}

uint64_t sub_24DC042B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v7 = type metadata accessor for Continuation();
  swift_retain_n();
  sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D73CC58, v5, (uint64_t)sub_24DC0B31C, v6, v7, MEMORY[0x263F8D310]);
  swift_release();

  return swift_release();
}

uint64_t type metadata accessor for Ingestion.CancelFetchFileContent()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24DC043DC()
{
  return swift_initClassMetadata2();
}

unint64_t sub_24DC04420()
{
  return 0xD000000000000018;
}

uint64_t sub_24DC0443C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 144) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 160) = v5;
  *(_OWORD *)(v4 + 176) = *(_OWORD *)(a1 + 32);
  *(void *)(v4 + 192) = *(void *)(a1 + 48);
  return sub_24D983344(a2, a3, a4);
}

uint64_t sub_24DC04464()
{
  return 979659110;
}

uint64_t sub_24DC044D0@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ReconciliationID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_24DC0463C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 16);
  long long v10 = *(_OWORD *)(v5 + 160);
  v14[0] = *(_OWORD *)(v5 + 144);
  v14[1] = v10;
  _OWORD v14[2] = *(_OWORD *)(v5 + 176);
  uint64_t v15 = *(void *)(v5 + 192);
  uint64_t v11 = (void *)swift_allocObject();
  _OWORD v11[2] = a1;
  v11[3] = a4;
  v11[4] = a5;
  uint64_t v12 = *(void (**)(_OWORD *, uint64_t (*)(void *), void *))(*(void *)v9 + 696);
  swift_retain();
  swift_retain();
  swift_retain();
  v12(v14, sub_24DC0B298, v11);
  swift_release();

  return swift_release();
}

uint64_t sub_24DC04750(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = a3;
  v8[3] = a4;
  v8[4] = a1;
  swift_retain_n();
  id v9 = a1;
  uint64_t v10 = type metadata accessor for Continuation();
  sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D73CC58, v7, (uint64_t)sub_24D7B484C, (uint64_t)v8, v10, MEMORY[0x263F8D310]);
  swift_release();

  return swift_release();
}

uint64_t sub_24DC04870()
{
  return sub_24D416034(*(void *)(v0 + 152), *(void *)(v0 + 160));
}

uint64_t sub_24DC04878()
{
  uint64_t v0 = sub_24D98339C();
  sub_24D416034(*(void *)(v0 + 152), *(void *)(v0 + 160));
  return v0;
}

uint64_t sub_24DC048AC()
{
  uint64_t v0 = sub_24D98339C();
  sub_24D416034(*(void *)(v0 + 152), *(void *)(v0 + 160));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Ingestion.CollectCapturedContent()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24DC04910()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24DC049B8()
{
  return 0x74692D656772656DLL;
}

uint64_t sub_24DC049D8()
{
  return 0;
}

uint64_t sub_24DC04AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v41 = a1;
  uint64_t v6 = *(void *)v4;
  uint64_t v7 = *(void *)(*(void *)v4 + 560);
  uint64_t v8 = *(void *)(*(void *)v4 + 544);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_24DCCA3F8();
  uint64_t v42 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v37 - v12;
  uint64_t v43 = AssociatedTypeWitness;
  uint64_t v45 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v37 - v14;
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v17 = &v4[*(void *)(v6 + 576)];
  (*(void (**)(char *))(*(void *)v16 + 280))(v17);
  if (!v3)
  {
    uint64_t v18 = v42;
    uint64_t v38 = v8;
    uint64_t v39 = v7;
    uint64_t v19 = v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v13, 1, v43) == 1)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v10);
      return 0;
    }
    else
    {
      uint64_t v20 = v45;
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
      uint64_t v22 = v19;
      uint64_t v40 = v19;
      uint64_t v23 = v43;
      v21(v22, v13, v43);
      swift_beginAccess();
      sub_24D73C78C((uint64_t)(v4 + 56), (uint64_t)v44);
      v37[1] = *((void *)v4 + 15);
      uint64_t v24 = type metadata accessor for JobLockRule();
      uint64_t v42 = v24;
      sub_24DCCAD88();
      uint64_t v38 = *(void *)(*(void *)(v24 - 8) + 72);
      swift_allocObject();
      uint64_t v39 = sub_24DCC9C58();
      uint64_t v26 = v25;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v28 = v26 + *(int *)(TupleTypeMetadata3 + 48);
      v37[0] = v26 + *(int *)(TupleTypeMetadata3 + 64);
      uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v20 + 16);
      v29(v26, v17, v23);
      uint64_t v30 = v28;
      uint64_t v31 = v40;
      v29(v30, v40, v23);
      v29(v37[0], v31, v23);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = v26 + v38;
      uint64_t v33 = v26 + v38 + *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v34 = v26 + v38 + *(int *)(TupleTypeMetadata3 + 64);
      v29(v32, &v4[*(void *)(*(void *)v4 + 584)], v23);
      uint64_t v35 = v40;
      v29(v33, v40, v23);
      v29(v34, v35, v23);
      swift_storeEnumTagMultiPayload();
      sub_24D785484(v39);
      uint64_t v16 = sub_24D5773A8();
      swift_bridgeObjectRelease();
      sub_24D73C7F4((uint64_t)v44);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v23);
    }
  }
  return v16;
}

void sub_24DC04FB0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, void *), uint64_t a5)
{
  uint64_t v148 = a4;
  uint64_t v149 = a5;
  uint64_t v145 = a3;
  uint64_t v147 = a1;
  uint64_t v6 = *(char **)v5;
  uint64_t v7 = *(void *)(*(void *)v5 + 568);
  uint64_t v8 = *(void *)(*(void *)v5 + 552);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v127 = sub_24DCCA3F8();
  uint64_t v126 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127);
  uint64_t v134 = (char *)&v111 - v9;
  uint64_t v144 = v6;
  uint64_t v10 = *((void *)v6 + 68);
  uint64_t v11 = *((void *)v6 + 70);
  uint64_t v12 = type metadata accessor for SnapshotItem();
  uint64_t v129 = sub_24DCCA3F8();
  uint64_t v128 = *(void *)(v129 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v129);
  unint64_t v125 = (char *)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v150 = (char *)&v111 - v16;
  uint64_t v139 = v12;
  uint64_t v140 = *(void *)(v12 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v122 = (char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v137 = (char *)&v111 - v19;
  uint64_t v151 = v10;
  uint64_t v152 = v8;
  uint64_t v153 = v11;
  uint64_t v154 = v7;
  uint64_t v20 = type metadata accessor for ReconciliationMutation();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v142 = v20;
  uint64_t v143 = v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v111 - v22;
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  uint64_t v151 = v24;
  uint64_t v152 = v25;
  uint64_t v153 = AssociatedConformanceWitness;
  uint64_t v154 = v27;
  uint64_t v28 = type metadata accessor for FileItemVersion();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v135 = v28;
  uint64_t v136 = v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  id v121 = (char *)&v111 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  unint64_t v123 = (char *)&v111 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v138 = (char *)&v111 - v35;
  MEMORY[0x270FA5388](v34);
  int64_t v124 = (char *)&v111 - v36;
  uint64_t v151 = v10;
  uint64_t v152 = v8;
  uint64_t v153 = v11;
  uint64_t v154 = v7;
  uint64_t v141 = type metadata accessor for JobResult();
  uint64_t v37 = swift_getAssociatedTypeWitness();
  uint64_t v38 = swift_getAssociatedConformanceWitness();
  uint64_t v133 = v7;
  uint64_t v132 = v8;
  uint64_t v39 = AssociatedTypeWitness;
  uint64_t v40 = swift_getAssociatedConformanceWitness();
  uint64_t v151 = v37;
  uint64_t v152 = v39;
  uint64_t v153 = v38;
  uint64_t v154 = v40;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v41 = &v23[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  uint64_t v42 = *((void *)v144 + 73);
  uint64_t v144 = v5;
  uint64_t v43 = &v5[v42];
  uint64_t v44 = *(void *)(v37 - 8);
  uint64_t v131 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  uint64_t v130 = v44 + 16;
  v131(v23, &v5[v42], v37);
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)uint64_t v41 = xmmword_24DCD4920;
  v41[16] = 4;
  uint64_t v45 = v145;
  swift_storeEnumTagMultiPayload();
  uint64_t v46 = v142;
  swift_storeEnumTagMultiPayload();
  sub_24D907568(v45, (uint64_t)v23);
  (*(void (**)(char *, uint64_t))(v143 + 8))(v23, v46);
  uint64_t v47 = *(void *)(v147 + 32);
  uint64_t v48 = *(void (**)(char *, uint64_t))(*(void *)v47 + 240);
  uint64_t v49 = *(void *)v47 + 240;
  v48(v43, 1);
  uint64_t v119 = v49;
  uint64_t v120 = v48;
  uint64_t v50 = v137;
  uint64_t v142 = v10;
  uint64_t v143 = v11;
  unint64_t v118 = v43;
  uint64_t v141 = v37;
  uint64_t v51 = v139;
  uint64_t v52 = v140;
  id v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48);
  if (v53(v150, 1, v139) == 1)
  {
    (*(void (**)(char *, uint64_t))(v128 + 8))(v150, v129);
    uint64_t v151 = v142;
    uint64_t v152 = v132;
    uint64_t v153 = v143;
    uint64_t v154 = v133;
    type metadata accessor for Propagation.PropagationError();
    swift_getWitnessTable();
    id v54 = (void *)swift_allocError();
    char v56 = v55;
    uint64_t v57 = v141;
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    id v59 = &v56[*(int *)(TupleTypeMetadata2 + 48)];
    v131(v56, &v144[*(void *)(*(void *)v144 + 576)], v57);
    *(void *)id v59 = 0xD000000000000013;
    *((void *)v59 + 1) = 0x800000024DD22BE0;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v56, 0, 1, TupleTypeMetadata2);
    swift_willThrow();
    uint64_t v60 = v148;
    id v61 = v54;
    v60(0, 0, 0, v54);

    return;
  }
  uint64_t v116 = v53;
  uint64_t v117 = v47;
  uint64_t v115 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
  v115(v50, v150, v51);
  double v62 = &v50[*(int *)(v51 + 40)];
  uint64_t v63 = v136 + 16;
  uint64_t v150 = *(char **)(v136 + 16);
  ((void (*)(char *, char *, uint64_t))v150)(v138, v62, v135);
  uint64_t WitnessTable = swift_getWitnessTable();
  int v114 = sub_24D98BCC4(v51, WitnessTable);
  double v65 = *(void (**)(char *, uint64_t))(v52 + 8);
  uint64_t v140 = v52 + 8;
  v65(v50, v51);
  uint64_t v66 = &v144[*(void *)(*(void *)v144 + 576)];
  (*(void (**)(char *))(**(void **)(v147 + 16) + 160))(v66);
  uint64_t v68 = v142;
  uint64_t v67 = v143;
  uint64_t v111 = WitnessTable;
  uint64_t v112 = v65;
  uint64_t v113 = v63;
  uint64_t v137 = v66;
  uint64_t v69 = v150;
  uint64_t v70 = v134;
  int v71 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v134, 1);
  (*(void (**)(char *, uint64_t))(v126 + 8))(v70, v127);
  if (v71 != 1)
  {
    uint64_t v151 = v68;
    uint64_t v152 = v132;
    uint64_t v153 = v67;
    uint64_t v154 = v133;
    type metadata accessor for Propagation.PropagationError();
    swift_getWitnessTable();
    uint64_t v75 = (void *)swift_allocError();
    unint64_t v77 = v76;
    uint64_t v78 = v141;
    uint64_t v79 = swift_getTupleTypeMetadata2();
    uint64_t v80 = &v77[*(int *)(v79 + 48)];
    v131(v77, v137, v78);
    *(void *)uint64_t v80 = 0xD000000000000019;
    *((void *)v80 + 1) = 0x800000024DD22C30;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v77, 0, 1, v79);
    swift_willThrow();
    double v81 = v148;
    uint64_t v82 = v135;
    goto LABEL_6;
  }
  uint64_t v72 = v68;
  uint64_t v73 = v67;
  uint64_t v74 = v125;
  v120(v137, 1);
  uint64_t v86 = v139;
  if (v116(v74, 1, v139) == 1)
  {
    (*(void (**)(char *, uint64_t))(v128 + 8))(v74, v129);
    double v81 = v148;
    uint64_t v82 = v135;
    if (v114 == 1)
    {
      v148(0, 0, 0, 0);
      (*(void (**)(char *, uint64_t))(v136 + 8))(v138, v82);
      return;
    }
    uint64_t v151 = v72;
    uint64_t v152 = v132;
    uint64_t v153 = v73;
    uint64_t v154 = v133;
    type metadata accessor for Propagation.PropagationError();
    swift_getWitnessTable();
    uint64_t v75 = (void *)swift_allocError();
    uint64_t v102 = v101;
    uint64_t v103 = v141;
    uint64_t v104 = swift_getTupleTypeMetadata2();
    uint64_t v105 = &v102[*(int *)(v104 + 48)];
    v131(v102, v137, v103);
    *(void *)uint64_t v105 = 0xD00000000000002DLL;
    *((void *)v105 + 1) = 0x800000024DD22C00;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v102, 0, 1, v104);
    swift_willThrow();
LABEL_6:
    uint64_t v83 = v136;
    uint64_t v84 = v138;
    id v85 = v75;
    v81(0, 0, 0, v75);

    (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v82);
    return;
  }
  uint64_t v87 = v122;
  v115(v122, v74, v86);
  int v88 = sub_24D98BCC4(v86, v111);
  uint64_t v89 = v124;
  uint64_t v90 = v135;
  ((void (*)(char *, char *, uint64_t))v69)(v124, &v87[*(int *)(v86 + 40)], v135);
  v112(v87, v86);
  uint64_t v91 = *(void *)(v117 + 16);
  BOOL v92 = v88 == 1;
  uint64_t v93 = (void (*)(void, void, void, void))v148;
  uint64_t v94 = v149;
  uint64_t v95 = v136;
  uint64_t v96 = v144;
  uint64_t v97 = v147;
  if (v92)
  {
    uint64_t v98 = (void *)swift_allocObject();
    v98[2] = v97;
    v98[3] = v93;
    uint64_t v99 = v145;
    v98[4] = v94;
    v98[5] = v99;
    v98[6] = v96;
    uint64_t v100 = *(void (**)(char *, char *, uint64_t (*)(uint64_t), void *))(*(void *)v91 + 640);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v100(v137, v118, sub_24DC0B188, v98);
    swift_release();
    swift_release();
    uint64_t v110 = *(void (**)(char *, uint64_t))(v95 + 8);
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v69)(v123, v89, v90);
    uint64_t v106 = v121;
    ((void (*)(char *, char *, uint64_t))v69)(v121, v138, v90);
    uint64_t v107 = (void *)swift_allocObject();
    v107[2] = v97;
    v107[3] = v96;
    v107[4] = v93;
    v107[5] = v94;
    v107[6] = v145;
    char v108 = *(void (**)(char *, char *, char *, char *, uint64_t (*)(uint64_t), void *))(*(void *)v91 + 648);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v109 = v123;
    v108(v137, v123, v118, v106, sub_24DC0B16C, v107);
    swift_release();
    swift_release();
    uint64_t v110 = *(void (**)(char *, uint64_t))(v95 + 8);
    v110(v106, v90);
    v110(v109, v90);
  }
  v110(v138, v90);
  v110(v124, v90);
}

uint64_t sub_24DC06030(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a4;
  uint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = a1;
  v13[3] = a5;
  v13[4] = a6;
  v13[5] = a2;
  v13[6] = a3;
  v13[7] = a4;
  swift_retain_n();
  id v14 = a1;
  uint64_t v15 = type metadata accessor for Continuation();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D73CC58, v12, (uint64_t)sub_24DC0B1F8, (uint64_t)v13, v15, MEMORY[0x263F8D310]);
  swift_release();

  return swift_release();
}

void sub_24DC06180(void *a1, uint64_t a2, uint64_t *a3, void *a4, void (*a5)(void, void, void, id), uint64_t a6)
{
  uint64_t v60 = a4;
  uint64_t v58 = a6;
  id v59 = a5;
  id v66 = a1;
  uint64_t v9 = *(void *)(*(void *)a2 + 88);
  uint64_t v10 = *(void *)(*(void *)a2 + 96);
  uint64_t v11 = *(void *)(*(void *)a2 + 104);
  uint64_t v62 = *(void *)(*(void *)a2 + 80);
  uint64_t v8 = v62;
  uint64_t v63 = v9;
  uint64_t v64 = v10;
  uint64_t v65 = v11;
  uint64_t v12 = type metadata accessor for ReconciliationMutation();
  uint64_t v51 = *(void *)(v12 - 8);
  uint64_t v52 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v50 = (char *)&v48 - v13;
  uint64_t v63 = v9;
  uint64_t v64 = v10;
  uint64_t v65 = v11;
  uint64_t v14 = type metadata accessor for ItemReconciliation();
  uint64_t v15 = sub_24DCCA3F8();
  uint64_t v53 = *(void *)(v15 - 8);
  uint64_t v54 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v48 - v17;
  uint64_t v56 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v16);
  char v55 = (char *)&v48 - v19;
  uint64_t v20 = type metadata accessor for SnapshotItem();
  uint64_t v21 = sub_24DCCA3F8();
  uint64_t v22 = (void *)MEMORY[0x270FA5388](v21);
  uint64_t v57 = (char *)&v48 - v24;
  if (v66)
  {
    uint64_t v48 = v11;
    uint64_t v49 = a2;
    uint64_t v57 = (char *)v14;
    uint64_t v25 = (uint64_t)a3 + *(void *)(*a3 + 576);
    id v26 = v66;
    id v27 = v66;
    uint64_t v28 = v61;
    sub_24D4759C8(v25, (uint64_t)v18);
    if (v28)
    {
LABEL_5:

      return;
    }
    uint64_t v61 = v25;
    uint64_t v30 = v56;
    uint64_t v29 = (uint64_t)v57;
    if ((*(unsigned int (**)(char *, uint64_t, char *))(v56 + 48))(v18, 1, v57) == 1)
    {
      (*(void (**)(char *, uint64_t))(v53 + 8))(v18, v54);
      id v31 = v26;
      v59(0, 0, 0, v26);

      goto LABEL_5;
    }
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    uint64_t v36 = v55;
    v35(v55, v18, v29);
    if (sub_24DB86F3C(v29) || *(void *)&v36[*(int *)(type metadata accessor for ItemReconciliationHalf() + 36)])
    {
      id v37 = v26;
      v59(0, 0, 0, v26);

      (*(void (**)(char *, char *))(v56 + 8))(v36, v57);
    }
    else
    {
      uint64_t v54 = 0;
      uint64_t v62 = v8;
      uint64_t v63 = v9;
      uint64_t v64 = v10;
      uint64_t v65 = v48;
      uint64_t v60 = (void *)type metadata accessor for JobResult();
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v39 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v41 = swift_getAssociatedConformanceWitness();
      uint64_t v62 = AssociatedTypeWitness;
      uint64_t v63 = v39;
      uint64_t v64 = AssociatedConformanceWitness;
      uint64_t v65 = v41;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v43 = (uint64_t)v50;
      uint64_t v44 = &v50[*(int *)(TupleTypeMetadata2 + 48)];
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v50, v61, AssociatedTypeWitness);
      swift_storeEnumTagMultiPayload();
      if (qword_26B199AA0 != -1) {
        swift_once();
      }
      *(void *)uint64_t v44 = qword_26B1A24C8;
      *(_OWORD *)(v44 + 8) = *(_OWORD *)(a3 + 15);
      swift_storeEnumTagMultiPayload();
      uint64_t v45 = v52;
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v49, v43);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v43, v45);
      id v46 = v66;
      id v47 = v66;
      v59(0, 0, 0, v46);

      (*(void (**)(char *, char *))(v56 + 8))(v36, v57);
    }
  }
  else
  {
    uint64_t v56 = v23;
    id v66 = v22;
    uint64_t v62 = v8;
    uint64_t v63 = v9;
    uint64_t v64 = v10;
    uint64_t v65 = v11;
    type metadata accessor for JobResult();
    uint64_t v62 = v8;
    uint64_t v63 = v9;
    uint64_t v64 = v10;
    uint64_t v65 = v11;
    type metadata accessor for Ingestion.FetchChildrenMetadata();
    uint64_t v32 = sub_24DC09748((uint64_t)a3 + *(void *)(*a3 + 584), a3[15], a3[16], a3[17] | 0x800, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
    sub_24D85246C(a2, v32);
    swift_release();
    uint64_t v33 = (uint64_t (*)(char *, uint64_t, uint64_t))v57;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v57, 1, 1, v20);
    uint64_t v34 = v61;
    sub_24DBCB8D8(v33, (uint64_t)a3 + *(void *)(*a3 + 576), 0, 0, 0, v60, a3[15], a3[16], a3[17] | 0x400, a2);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), id))(v56 + 8))(v33, v66);
    if (!v34) {
      v59(0, 0, 0, 0);
    }
  }
}

uint64_t sub_24DC06940(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a4;
  *(void *)(v13 + 24) = a5;
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a6;
  _OWORD v14[3] = a3;
  v14[4] = a1;
  void v14[5] = a2;
  v14[6] = a4;
  v14[7] = a5;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  id v15 = a1;
  uint64_t v16 = type metadata accessor for Continuation();
  sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D73C874, v12, (uint64_t)sub_24D73CC58, v13, (uint64_t)sub_24DC0B268, (uint64_t)v14, v16, MEMORY[0x263F8D310]);
  swift_release();
  swift_release();

  return swift_release();
}

void sub_24DC06AC0(uint64_t a1, uint64_t *a2, void *a3, void *a4, void (*a5)(void, void, void, void *), uint64_t a6)
{
  uint64_t v54 = a6;
  char v55 = a5;
  uint64_t v44 = a4;
  uint64_t v53 = a3;
  uint64_t v49 = a2;
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(*(void *)a1 + 80);
  uint64_t v8 = *(void *)(*(void *)a1 + 96);
  uint64_t v42 = type metadata accessor for SnapshotItem();
  uint64_t v10 = sub_24DCCA3F8();
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v41 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v43 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v39 - v11);
  uint64_t v51 = a1;
  uint64_t v12 = *(void *)(v6 + 88);
  uint64_t v13 = *(void *)(v6 + 104);
  uint64_t v56 = v7;
  uint64_t v57 = v12;
  uint64_t v58 = v8;
  uint64_t v59 = v13;
  uint64_t v50 = type metadata accessor for ReconciliationMutation();
  uint64_t v52 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  id v15 = (char *)&v39 - v14;
  uint64_t v56 = v7;
  uint64_t v57 = v12;
  uint64_t v58 = v8;
  uint64_t v59 = v13;
  uint64_t v47 = type metadata accessor for JobResult();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v45 = v13;
  uint64_t v46 = v12;
  uint64_t v19 = v8;
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  uint64_t v56 = AssociatedTypeWitness;
  uint64_t v57 = v17;
  uint64_t v21 = v49;
  uint64_t v58 = AssociatedConformanceWitness;
  uint64_t v59 = v20;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v22 = &v15[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  uint64_t v23 = *(void (**)(char *))(*(void *)(AssociatedTypeWitness - 8) + 16);
  uint64_t v48 = (uint64_t)v21 + *(void *)(*v21 + 576);
  v23(v15);
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)uint64_t v22 = xmmword_24DCD4920;
  unsigned char v22[16] = 4;
  uint64_t v24 = v51;
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = v50;
  swift_storeEnumTagMultiPayload();
  sub_24D907568(v24, (uint64_t)v15);
  id v26 = v15;
  id v27 = v53;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v26, v25);
  if (v27)
  {
    uint64_t v56 = v7;
    uint64_t v57 = v46;
    uint64_t v58 = v19;
    uint64_t v59 = v45;
    type metadata accessor for Ingestion.FetchItemMetadata();
    uint64_t v28 = v21[15];
    uint64_t v29 = v21[16];
    uint64_t v30 = v21[17] | 0x800;
    id v31 = v27;
    uint64_t v32 = sub_24DC09748(v48, v28, v29, v30, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
    sub_24D85246C(v24, v32);
    swift_release();
    id v33 = v27;
    v55(0, 0, 0, v27);
  }
  else
  {
    uint64_t v35 = v40;
    uint64_t v34 = v41;
    uint64_t v36 = (void (*)(void, void, void, void))v55;
    id v37 = v43;
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(*(void *)(v42 - 8)
                                                                                               + 56))(v43, 1, 1);
    uint64_t v38 = v60;
    sub_24DBCB8D8(v37, v48, 0, 0, 0, v44, v21[15], v21[16], v21[17] | 0x400, v24);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v35 + 8))(v37, v34);
    if (!v38) {
      v36(0, 0, 0, 0);
    }
  }
}

uint64_t sub_24DC06FC4()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v5)((void *)(AssociatedTypeWitness - 8), v1, AssociatedTypeWitness);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 584);

  return v5(v3, AssociatedTypeWitness);
}

uint64_t sub_24DC070C0()
{
  uint64_t v0 = sub_24D98339C();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  v3(v1, AssociatedTypeWitness);
  v3(v0 + *(void *)(*(void *)v0 + 584), AssociatedTypeWitness);
  return v0;
}

uint64_t sub_24DC071B0()
{
  return sub_24DBF9430(sub_24DC070C0);
}

uint64_t type metadata accessor for Ingestion.MergeItems()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24DC071E0()
{
  return 0xD000000000000014;
}

uint64_t sub_24DC071FC()
{
  uint64_t v1 = type metadata accessor for JobLockRule();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = v13 - v3 + 22;
  swift_beginAccess();
  sub_24D73C78C((uint64_t)(v0 + 7), (uint64_t)v13);
  uint64_t v5 = v0[15];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24DCCA3F8();
  uint64_t v7 = &v4[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  uint64_t v8 = (char *)v0 + *(void *)(*v0 + 576);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unsigned char *, char *, uint64_t))(v9 + 16))(v4, v8, AssociatedTypeWitness);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = sub_24D578CBC((uint64_t)v13, v5, (uint64_t)v4);
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  sub_24D73C7F4((uint64_t)v13);
  return v10;
}

uint64_t sub_24DC07444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v9 = v8;
  uint64_t v108 = a4;
  uint64_t v109 = a6;
  LODWORD(v101) = a5;
  uint64_t v105 = a8;
  uint64_t v106 = a2;
  uint64_t v12 = *v9;
  uint64_t v13 = *v9;
  uint64_t v102 = a3;
  uint64_t v103 = v13;
  uint64_t v104 = *(void *)(*(void *)(v12 + 600) - 8);
  unint64_t v14 = *(void *)(v104 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](a1);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v94 - v16;
  uint64_t v19 = *(void *)(v18 + 616);
  uint64_t v107 = v20;
  uint64_t v21 = type metadata accessor for FileTreeWriter.ItemOrContinuation();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v22 = sub_24DCCB058();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (void **)((char *)&v94 - v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))((char *)&v94 - v23, a1, v22);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    unint64_t v97 = v14;
    uint64_t v98 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v99 = v19;
    uint64_t v100 = v17;
    uint64_t v33 = v106;
    uint64_t v32 = v107;
    uint64_t v34 = v109;
    uint64_t v35 = v104;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(void **, uint64_t))(*(void *)(v21 - 8) + 8))(v24, v21);
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v34;
      *(void *)(v36 + 24) = a7;
      id v37 = (void *)swift_allocObject();
      void v37[2] = v34;
      v37[3] = a7;
      v37[4] = v33;
      uint64_t v38 = type metadata accessor for Continuation();
      swift_retain_n();
      swift_retain();
      sub_24D6E9F88((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D73CC58, v36, (uint64_t)sub_24DC0ACE4, (uint64_t)v37, v38, MEMORY[0x263F8D310]);
      swift_release();
      swift_release();
      type metadata accessor for TrackingContinuation();
      goto LABEL_16;
    }
    uint64_t v39 = v35;
    uint64_t v40 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v35 + 48);
    uint64_t v41 = v32;
    if (v40(v24, 1, v32) == 1)
    {
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v34;
      *(void *)(v42 + 24) = a7;
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = v34;
      *(void *)(v43 + 24) = a7;
      uint64_t v44 = type metadata accessor for Continuation();
      swift_retain_n();
      sub_24D6E9F88((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D73CC58, v42, (uint64_t)sub_24DC0AC84, v43, v44, MEMORY[0x263F8D310]);
      swift_release();
      swift_release();
LABEL_15:
      type metadata accessor for TrackingContinuation();
      goto LABEL_16;
    }
    uint64_t v45 = v100;
    uint64_t v95 = *(void (**)(char *, void **, uint64_t))(v39 + 32);
    uint64_t v96 = v39 + 32;
    v95(v100, v24, v32);
    (*(void (**)(uint64_t))(v99 + 144))(v32);
    uint64_t v47 = v46;
    if (v46 >> 62)
    {
      uint64_t v48 = v98;
      if (v46 >> 62 != 1)
      {
        uint64_t v76 = v108;
        uint64_t v77 = swift_allocObject();
        uint64_t v106 = v77;
        *(void *)(v77 + 16) = v34;
        *(void *)(v77 + 24) = a7;
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v48, v45, v41);
        unint64_t v78 = (*(unsigned __int8 *)(v39 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
        unint64_t v97 = (v97 + v78 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v79 = (v97 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v80 = a7;
        unint64_t v81 = (v79 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v82 = swift_allocObject();
        *(void *)(v82 + 16) = v41;
        uint64_t v83 = v103;
        uint64_t v84 = v98;
        uint64_t v85 = v99;
        *(void *)(v82 + 24) = *(void *)(v103 + 608);
        *(void *)(v82 + 32) = v85;
        *(void *)(v82 + 40) = *(void *)(v83 + 624);
        *(unsigned char *)(v82 + 48) = v101 & 1;
        v95((char *)(v82 + v78), (void **)v84, v41);
        *(void *)(v82 + v97) = v76;
        *(void *)(v82 + v79) = v9;
        *(void *)(v82 + v81) = v102;
        uint64_t v86 = (void *)(v82 + ((v81 + 15) & 0xFFFFFFFFFFFFFFF8));
        void *v86 = v109;
        v86[1] = v80;
        uint64_t v87 = v39;
        uint64_t v88 = type metadata accessor for Continuation();
        swift_retain_n();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_24D6E9F88((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D73CC58, v106, (uint64_t)sub_24DC0ABA4, v82, v88, MEMORY[0x263F8D310]);
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v87 + 8))(v100, v41);
        goto LABEL_15;
      }
      uint64_t v47 = v46 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v49 = v34;
      if (v33)
      {
LABEL_10:
        uint64_t v50 = v49;
        uint64_t v51 = *(uint64_t (**)(uint64_t))(*(void *)v47 + 112);
        uint64_t v52 = swift_retain();
        uint64_t v53 = v51(v52);
        if (!v54)
        {
          swift_release();
          type metadata accessor for TrackingContinuation();
          TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
          uint64_t v92 = *(int *)(TupleTypeMetadata2 + 48);
          uint64_t v93 = v105;
          v95(v105, (void **)v100, v41);
          *(void *)&v93[v92] = v47;
          return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v93, 0, 1, TupleTypeMetadata2);
        }
        uint64_t v55 = v54;
        uint64_t v101 = v53;
        uint64_t v56 = swift_allocObject();
        uint64_t v102 = v56;
        uint64_t v57 = v50;
        *(void *)(v56 + 16) = v50;
        *(void *)(v56 + 24) = a7;
        uint64_t v58 = v98;
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v98, v100, v41);
        unint64_t v59 = (*(unsigned __int8 *)(v39 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
        uint64_t v60 = (char *)swift_allocObject();
        *((void *)v60 + 2) = v41;
        uint64_t v61 = v103;
        uint64_t v62 = v99;
        *((void *)v60 + 3) = *(void *)(v103 + 608);
        *((void *)v60 + 4) = v62;
        *((void *)v60 + 5) = *(void *)(v61 + 624);
        *((void *)v60 + 6) = v57;
        *((void *)v60 + 7) = a7;
        *((void *)v60 + 8) = v47;
        *((void *)v60 + 9) = v101;
        *((void *)v60 + 10) = v55;
        v95(&v60[v59], (void **)v58, v41);
        uint64_t v63 = v39;
        uint64_t v64 = type metadata accessor for Continuation();
        swift_retain_n();
        sub_24D6E9F88((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D73CC58, v102, (uint64_t)sub_24DC0AA54, (uint64_t)v60, v64, MEMORY[0x263F8D310]);
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v100, v41);
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v49 = v34;
      uint64_t v48 = v98;
      if (v33) {
        goto LABEL_10;
      }
    }
    uint64_t v65 = v49;
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = v65;
    *(void *)(v66 + 24) = a7;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v48, v45, v41);
    uint64_t v67 = v45;
    unint64_t v68 = (*(unsigned __int8 *)(v39 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v69 = (char *)swift_allocObject();
    uint64_t v70 = v48;
    uint64_t v71 = (uint64_t)v69;
    *((void *)v69 + 2) = v41;
    uint64_t v72 = v103;
    uint64_t v73 = v99;
    *((void *)v69 + 3) = *(void *)(v103 + 608);
    *((void *)v69 + 4) = v73;
    *((void *)v69 + 5) = *(void *)(v72 + 624);
    *((void *)v69 + 6) = v65;
    *((void *)v69 + 7) = a7;
    *((void *)v69 + 8) = v47;
    v95(&v69[v68], (void **)v70, v41);
    uint64_t v74 = v39;
    uint64_t v75 = type metadata accessor for Continuation();
    swift_retain_n();
    sub_24D6E9F88((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D73CC58, v66, (uint64_t)sub_24DC0A8EC, v71, v75, MEMORY[0x263F8D310]);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v67, v41);
    goto LABEL_15;
  }
  id v26 = *v24;
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = v109;
  *(void *)(v27 + 16) = v109;
  *(void *)(v27 + 24) = a7;
  uint64_t v29 = (void *)swift_allocObject();
  v29[2] = v9;
  v29[3] = v26;
  v29[4] = v106;
  v29[5] = v28;
  v29[6] = a7;
  swift_retain_n();
  swift_retain();
  id v30 = v26;
  uint64_t v31 = type metadata accessor for Continuation();
  swift_retain();
  sub_24D6E9F88((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D73CC58, v27, (uint64_t)sub_24DC0AD54, (uint64_t)v29, v31, MEMORY[0x263F8D310]);

  swift_release();
  swift_release();
  type metadata accessor for TrackingContinuation();
LABEL_16:
  uint64_t v89 = swift_getTupleTypeMetadata2();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v105, 1, 1, v89);
}

void sub_24DC08008(void (*a1)(uint64_t, void, void, void *), uint64_t a2, uint64_t a3)
{
  sub_24DC0B120((uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
  sub_24D7C42C4();
  uint64_t v5 = (void *)swift_allocError();
  sub_24D3F0BA0((uint64_t)v7, v6, (uint64_t *)&unk_26B192A40);
  a1(a3, 0, 0, v5);
}

uint64_t sub_24DC080B8(int a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t a5, void (*a6)(void, uint64_t, unint64_t, void), uint64_t a7)
{
  uint64_t v40 = a5;
  uint64_t v36 = a7;
  id v37 = a6;
  uint64_t v39 = a4;
  uint64_t v46 = a2;
  LODWORD(v38) = a1;
  uint64_t v33 = (void *)*a3;
  uint64_t v8 = v33[12];
  uint64_t v9 = v33[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v35 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v13 = type metadata accessor for SnapshotItem();
  uint64_t v14 = sub_24DCCA3F8();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v32 - v16);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v32 - v19;
  uint64_t v21 = *(void *)(v13 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v18);
  id v26 = (char *)&v32 - v25;
  if (v38)
  {
    uint64_t v35 = v24;
    uint64_t v38 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v20, v46, v9);
    sub_24D97AFF8((uint64_t)v20, v9, v8, (uint64_t)v26);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), char *, uint64_t))(v21 + 16))(v17, v26, v13);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v13);
    uint64_t v27 = v41;
    sub_24DBCB8D8(v17, (uint64_t)v26, 0, 0, 0, a3, v39[15], v39[16], v39[17], v40);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v35 + 8))(v17, v38);
    if (!v27)
    {
      uint64_t v42 = 0;
      unint64_t v43 = 0xE000000000000000;
      sub_24DCC9968();
      sub_24DCCADC8();
      v37(0, v42, v43, 0);
      swift_bridgeObjectRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v26, v13);
  }
  else
  {
    unint64_t v28 = v33[11];
    uint64_t v29 = v33[13];
    uint64_t v42 = v9;
    unint64_t v43 = v28;
    uint64_t v44 = v8;
    uint64_t v45 = v29;
    type metadata accessor for JobResult();
    uint64_t v42 = v9;
    unint64_t v43 = v28;
    uint64_t v44 = v8;
    uint64_t v45 = v29;
    type metadata accessor for Ingestion.FetchItemMetadata();
    (*(void (**)(uint64_t, uint64_t))(v8 + 64))(v9, v8);
    uint64_t v30 = sub_24DC09748((uint64_t)v12, v39[15], v39[16], 2048, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v35);
    sub_24D85246C(v40, v30);
    swift_release();
    uint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    sub_24DCCA728();
    sub_24DCC9968();
    sub_24DCCADC8();
    v37(0, v42, v43, 0);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24DC085F4(void (*a1)(uint64_t, void, unint64_t, void), uint64_t a2, uint64_t a3)
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24DC086B8(void (*a1)(uint64_t, void, unint64_t, void), uint64_t a2, uint64_t a3)
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24DC08774(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v26 = a3;
  uint64_t v22 = *v5;
  uint64_t v23 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v30 = swift_getAssociatedConformanceWitness();
  uint64_t v9 = type metadata accessor for FileItemVersion();
  uint64_t v10 = sub_24DCCA3F8();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v24 = v15;
  uint64_t v25 = v11;
  if (a2)
  {
    type metadata accessor for TrackingContinuation();
    uint64_t v16 = swift_dynamicCastClass();
    if (v16) {
      swift_retain();
    }
  }
  else
  {
    uint64_t v16 = 0;
  }
  uint64_t v17 = v23;
  uint64_t v23 = (char *)v5 + *(void *)(v22 + 576);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v13, 1, 1, v9);
  uint64_t v18 = (void *)swift_allocObject();
  _OWORD v18[2] = v5;
  v18[3] = v16;
  v18[4] = v26;
  v18[5] = a1;
  v18[6] = v17;
  v18[7] = a5;
  v18[8] = v14;
  uint64_t v19 = *(void (**)(char *, char *, void, void, uint64_t, uint64_t (*)(uint64_t), void *))(*(void *)v14 + 504);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain_n();
  swift_retain();
  v19(v23, v13, 0, 0, 2048, sub_24DC0A740, v18);
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v13, v25);
}

uint64_t sub_24DC08AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v35 = a8;
  uint64_t v36 = a1;
  uint64_t v38 = a5;
  uint64_t v39 = a7;
  uint64_t v37 = a6;
  uint64_t v11 = *(void *)(*(void *)a2 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v41 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v43 = swift_getAssociatedConformanceWitness();
  uint64_t v12 = type metadata accessor for FileItemVersion();
  uint64_t v13 = sub_24DCCA3F8();
  uint64_t v32 = *(void *)(v13 - 8);
  uint64_t v33 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v30 - v14;
  type metadata accessor for TrackingContinuation();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v17 = sub_24DCCA3F8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v30 - v19;
  uint64_t v21 = v36;
  uint64_t v34 = a3;
  uint64_t v36 = a4;
  sub_24DC07444(v21, a3, a4, v38, 0, v37, v39, (char *)&v30 - v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v20, 1, TupleTypeMetadata2) == 1)return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17); {
  uint64_t v23 = *(void *)&v20[*(int *)(TupleTypeMetadata2 + 48)];
  }
  (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v20, v11);
  uint64_t v31 = a2 + *(void *)(*(void *)a2 + 576);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v15, 1, 1, v12);
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = a2;
  uint64_t v25 = v35;
  v24[3] = v34;
  _OWORD v24[4] = v23;
  uint64_t v26 = v37;
  uint64_t v28 = v38;
  uint64_t v27 = v39;
  v24[5] = v36;
  v24[6] = v28;
  v24[7] = v26;
  v24[8] = v27;
  uint64_t v29 = *(void (**)(uint64_t, char *, void, void, uint64_t, uint64_t (*)(uint64_t), void *))(*(void *)v25 + 504);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v29(v31, v15, 0, 0, 3072, sub_24DC0A7B8, v24);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v15, v33);
}

uint64_t sub_24DC08ED4(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(char *, char *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v44 = a7;
  uint64_t v45 = a8;
  uint64_t v42 = a1;
  uint64_t v43 = a5;
  uint64_t v36 = a4;
  uint64_t v39 = *a2;
  uint64_t v10 = *(void *)(v39 + 600);
  type metadata accessor for TrackingContinuation();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = sub_24DCCA3F8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v38 = v10;
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v17 = *(void *)(v40 + 64);
  uint64_t v18 = MEMORY[0x270FA5388](v14);
  uint64_t v37 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v41 = (char *)&v36 - v19;
  uint64_t v20 = a3;
  if (!a3)
  {
    uint64_t v20 = (uint64_t)v36;
    swift_retain();
  }
  swift_retain();
  uint64_t v21 = v44;
  uint64_t v22 = v45;
  sub_24DC07444(v42, v20, v43, a6, 1, v44, v45, v16);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v16, 1, TupleTypeMetadata2) == 1)return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12); {
  uint64_t v42 = *(void *)&v16[*(int *)(TupleTypeMetadata2 + 48)];
  }
  uint64_t v43 = a6;
  uint64_t v25 = v40;
  uint64_t v24 = v41;
  uint64_t v26 = v22;
  uint64_t v27 = v21;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  uint64_t v28 = v38;
  v36(v41, v16, v38);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v27;
  *(void *)(v29 + 24) = v26;
  uint64_t v30 = v37;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v37, v24, v28);
  unint64_t v31 = (*(unsigned __int8 *)(v25 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v28;
  uint64_t v33 = v39;
  *(_OWORD *)(v32 + 24) = *(_OWORD *)(v39 + 608);
  *(void *)(v32 + 40) = *(void *)(v33 + 624);
  *(void *)(v32 + 48) = v27;
  uint64_t v34 = v42;
  *(void *)(v32 + 56) = v26;
  *(void *)(v32 + 64) = v34;
  v36((char *)(v32 + v31), v30, v28);
  uint64_t v35 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain();
  sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D732EF0, v29, (uint64_t)sub_24DC0A7F0, v32, v35, MEMORY[0x263F8D310]);
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v41, v28);
}

uint64_t sub_24DC092E4(void (*a1)(uint64_t, void, unint64_t, void *), uint64_t a2, uint64_t a3)
{
  sub_24DCC9968();
  sub_24DCCADC8();
  type metadata accessor for FileTreeError();
  swift_getWitnessTable();
  uint64_t v5 = (void *)swift_allocError();
  swift_storeEnumTagMultiPayload();
  a1(a3, 0, 0xE000000000000000, v5);

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for Ingestion.TrackTemporaryItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24DC09420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = v5 + *(void *)(*(void *)v5 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  v13(v11, a1, AssociatedTypeWitness);
  v13(v5 + *(void *)(*(void *)v5 + 584), a2, AssociatedTypeWitness);

  return sub_24D983344(a3, a4, a5);
}

uint64_t sub_24DC0954C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24DC09420(a1, a2, a3, a4, a5);
}

uint64_t sub_24DC095BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DC0966C(a1, a2, a3, a4, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.DeferredRescan);
}

uint64_t sub_24DC095D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DC096F0(a1, a2, a3, a4, 0x80000);
}

uint64_t sub_24DC0963C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DC09748(a1, a2, a3, a4, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
}

uint64_t sub_24DC09654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DC0966C(a1, a2, a3, a4, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.ReSnapshotChildren);
}

uint64_t sub_24DC0966C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, _OWORD *))
{
  long long v10 = *(_OWORD *)(v5 + 616);
  v12[0] = *(_OWORD *)(v5 + 600);
  v12[1] = v10;
  a5(0, v12);
  swift_allocObject();
  return sub_24D983960(a1, a2, a3, a4);
}

uint64_t sub_24DC096F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_24D983960(a1, a2, a3, a4);
  swift_retain();
  sub_24D8F94C4(a5);
  swift_release();
  return v6;
}

uint64_t sub_24DC09730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DC09748(a1, a2, a3, a4, (void (*)(void, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
}

uint64_t sub_24DC09748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, _OWORD *))
{
  long long v10 = *(_OWORD *)(v5 + 616);
  v12[0] = *(_OWORD *)(v5 + 600);
  v12[1] = v10;
  a5(0, v12);
  swift_allocObject();
  return sub_24DC096F0(a1, a2, a3, a4, 0x2000);
}

uint64_t sub_24DC097D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4 + *(void *)(*(void *)v4 + 632);
  uint64_t v10 = type metadata accessor for SnapshotItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);

  return sub_24D983960(a1, a2, a3, a4);
}

uint64_t sub_24DC098B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DC097D0(a1, a2, a3, a4);
}

uint64_t sub_24DC09914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4 + *(void *)(*(void *)v4 + 632);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v9, 1, 1, AssociatedTypeWitness);

  return sub_24D983960(a1, a2, a3, a4);
}

uint64_t sub_24DC09A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DC09914(a1, a2, a3, a4);
}

uint64_t sub_24DC09A70()
{
  return swift_deallocObject();
}

uint64_t sub_24DC09A80()
{
  return swift_deallocObject();
}

uint64_t sub_24DC09A94()
{
  type metadata accessor for SnapshotItem();
  uint64_t v1 = *(void *)(sub_24DCCA3F8() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_24DBE4E9C(v2);
}

uint64_t sub_24DC09B38()
{
  return swift_deallocObject();
}

uint64_t sub_24DC09B48()
{
  return swift_deallocObject();
}

uint64_t objectdestroyTm_5()
{
  uint64_t v1 = (int *)type metadata accessor for SnapshotItem();
  uint64_t v2 = *(void *)(sub_24DCCA3F8() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v1 - 1) + 48))(v3, 1, v1))
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
    v5(v3, AssociatedTypeWitness);
    v5(v3 + v1[9], AssociatedTypeWitness);
    uint64_t v6 = v3 + v1[10];
    uint64_t v7 = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    uint64_t v21 = swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t v8 = type metadata accessor for FileItemVersion();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v6 + *(int *)(v8 + 56), v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v3 + v1[12];
    uint64_t v10 = (int *)type metadata accessor for ItemMetadata();
    uint64_t v11 = v9 + v10[7];
    uint64_t v12 = sub_24DCC8CE8();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v14(v11, v12);
    v14(v9 + v10[8], v12);
    swift_bridgeObjectRelease();
    uint64_t v15 = v9 + v10[29];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v12)) {
      v14(v15, v12);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = (uint64_t *)(v9 + v10[33]);
    unint64_t v17 = v16[1];
    if (v17 >> 60 != 15) {
      sub_24D400DCC(*v16, v17);
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = v3 + v1[13];
    uint64_t v19 = *(void **)(v18 + 16);
    if (v19 != (void *)1)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v18 + 192))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24D466534(*(void *)(v3 + v1[17]), *(void *)(v3 + v1[17] + 8));
  }
  return swift_deallocObject();
}

uint64_t sub_24DC09FD0()
{
  type metadata accessor for SnapshotItem();
  uint64_t v1 = *(void *)(sub_24DCCA3F8() - 8);
  return sub_24DBE4DC4(v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_24DC0A068()
{
  return swift_deallocObject();
}

uint64_t sub_24DC0A078()
{
  return swift_deallocObject();
}

uint64_t sub_24DC0A088(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
    case 1:
    case 2:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24DC0A0DC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for JobLockRule() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for FileTreeWriter.FileTreeChange() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();
  uint64_t v7 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v7, AssociatedTypeWitness);
      break;
    case 1u:
      uint64_t v15 = swift_getAssociatedTypeWitness();
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
      v16(v7, v15);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      v16(v7 + *(int *)(TupleTypeMetadata3 + 48), v15);
      v16(v7 + *(int *)(TupleTypeMetadata3 + 64), v15);
      break;
    case 2u:
      uint64_t v18 = swift_getAssociatedTypeWitness();
      unint64_t v23 = v6;
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v22(v7, v18);
      sub_24DCCA3F8();
      uint64_t v20 = v7 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v20, 1, v18);
      unint64_t v6 = v23;
      if (!v21) {
        v22(v20, v18);
      }
      break;
    default:
      break;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = swift_getAssociatedTypeWitness();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v0 + v6, v13);
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v10 = swift_getAssociatedTypeWitness();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v6, v10);
    sub_24DCCA3F8();
    type metadata accessor for JobLockAggregator();
    sub_24DCCA3F8();
    unint64_t v11 = v0 + v6 + *(int *)(swift_getTupleTypeMetadata3() + 48);
    uint64_t v12 = *(void *)(v1 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(v11, 1, v1)) {
      (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v11, v1);
    }
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_24DC0A610()
{
  uint64_t v1 = *(void *)(type metadata accessor for JobLockRule() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for FileTreeWriter.FileTreeChange() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return sub_24DBE6F14(*(uint64_t **)(v0 + 48), v0 + v2, v0 + v5, *(void *)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24DC0A728()
{
  return objectdestroy_70Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24DC0A740(uint64_t a1)
{
  return sub_24DC0A7D0(a1, sub_24DC08AA8);
}

uint64_t sub_24DC0A758()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DC0A7B8(uint64_t a1)
{
  return sub_24DC0A7D0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_24DC08ED4);
}

uint64_t sub_24DC0A7D0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t sub_24DC0A7F0()
{
  return sub_24DC0A918((uint64_t (*)(void, void, void, char *))sub_24DC092E4);
}

uint64_t objectdestroy_79Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_24DC0A8EC()
{
  return sub_24DC0A918((uint64_t (*)(void, void, void, char *))sub_24DC085F4);
}

uint64_t sub_24DC0A918(uint64_t (*a1)(void, void, void, char *))
{
  return a1(*((void *)v1 + 6), *((void *)v1 + 7), *((void *)v1 + 8), &v1[(*(unsigned __int8 *)(*(void *)(*((void *)v1 + 2) - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*((void *)v1 + 2) - 8) + 80)]);
}

uint64_t sub_24DC0A980()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_24DC0AA54()
{
  return sub_24DC086B8(*(void (**)(uint64_t, void, unint64_t, void))(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_24DC0AAC4()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DC0ABA4()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80);
  unint64_t v2 = (*(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64) + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v3 = (v2 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_24DC080B8(*(unsigned __int8 *)(v0 + 48), v0 + v1, *(void **)(v0 + v2), *(uint64_t **)(v0 + v3), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(void, uint64_t, unint64_t, void))(v0+ ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24DC0AC4C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DC0AC84()
{
  return (*(uint64_t (**)(void, uint64_t, unint64_t, void))(v0 + 16))(0, 0x3E6C696E3CLL, 0xE500000000000000, 0);
}

uint64_t sub_24DC0ACCC()
{
  return objectdestroy_114Tm(MEMORY[0x263F8EED8]);
}

void sub_24DC0ACE4()
{
  sub_24DC08008(*(void (**)(uint64_t, void, void, void *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_24DC0AD04()
{
  swift_release();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DC0AD54()
{
  return sub_24DC0ADDC(*(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_24DC0ADDC(void *a1, uint64_t a2, uint64_t a3)
{
  v23[0] = a3;
  uint64_t v5 = type metadata accessor for FileTreeError();
  uint64_t v6 = sub_24DCCA3F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v23 - v8;
  v23[5] = a1;
  id v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
  int v11 = swift_dynamicCast();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  if (!v11)
  {
    v12(v9, 1, 1, v5);
    uint64_t v13 = v7;
    uint64_t v5 = v6;
    goto LABEL_5;
  }
  uint64_t v13 = *(void *)(v5 - 8);
  v12(v9, 0, 1, v5);
  if (swift_getEnumCaseMultiPayload())
  {
LABEL_5:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v5);
    return ((uint64_t (*)(uint64_t, void, void, void *))v23[0])(a2, 0, 0, a1);
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  v23[1] = v15;
  v23[2] = v16;
  v23[3] = AssociatedConformanceWitness;
  _OWORD v23[4] = v18;
  type metadata accessor for FileItemVersion();
  uint64_t v19 = sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  int v21 = &v9[*(int *)(TupleTypeMetadata3 + 48)];

  (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v21, v19);
  (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v9, AssociatedTypeWitness);
  a2 = 0;
  return ((uint64_t (*)(uint64_t, void, void, void *))v23[0])(a2, 0, 0, a1);
}

double sub_24DC0B120(uint64_t a1)
{
  *(void *)a1 = 11;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(unsigned char *)(a1 + 120) = 10;
  return result;
}

uint64_t sub_24DC0B154()
{
  return objectdestroy_124Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24DC0B16C(uint64_t a1)
{
  return sub_24DC0B1A0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24DC06940);
}

uint64_t sub_24DC0B188(uint64_t a1)
{
  return sub_24DC0B1A0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24DC06030);
}

uint64_t sub_24DC0B1A0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_24DC0B1B8()
{
  return objectdestroy_134Tm(MEMORY[0x263F8EEB0], MEMORY[0x263F8EED8], MEMORY[0x263F8EED8]);
}

uint64_t sub_24DC0B1F8()
{
  return sub_24DC0B768((uint64_t (*)(void, void, void, void, void, void))sub_24DC06180);
}

uint64_t sub_24DC0B228()
{
  return objectdestroy_134Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EEB0], MEMORY[0x263F8EED8]);
}

uint64_t sub_24DC0B268()
{
  return sub_24DC0B768((uint64_t (*)(void, void, void, void, void, void))sub_24DC06AC0);
}

uint64_t sub_24DC0B298(void *a1)
{
  return sub_24DC04750(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24DC0B2A4()
{
  return objectdestroy_114Tm(MEMORY[0x263F8EEB0]);
}

uint64_t objectdestroy_114Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return swift_deallocObject();
}

uint64_t sub_24DC0B310()
{
  return sub_24DC042B0(v0[2], v0[3], v0[4]);
}

uint64_t sub_24DC0B31C()
{
  return (*(uint64_t (**)(void, void, void, void))(v0 + 16))(0, 0, 0, 0);
}

uint64_t sub_24DC0B360(uint64_t a1, uint64_t a2)
{
  return sub_24DC01A50(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_24DC0B374()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_24D4C6B9C(*(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24DC0B3E4()
{
  sub_24DC01C9C(*(void **)(v0 + 16), *(void *)(v0 + 24), (void (**)(void, void))(v0 + 32), *(void **)(v0 + 72), *(void **)(v0 + 80), *(void (**)(void, uint64_t, unint64_t, uint64_t))(v0 + 88), *(void *)(v0 + 96), *(objc_class **)(v0 + 104));
}

uint64_t sub_24DC0B410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24DC03B04(a1, a2, *(void *)(v3 + 32), a3);
}

uint64_t sub_24DC0B41C(uint64_t a1)
{
  return sub_24DC03CB0(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 48));
}

uint64_t sub_24DC0B444(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_24DC0B484()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24DC0B4C0(uint64_t a1)
{
  return sub_24DBFDAC0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t objectdestroy_167Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24DC0B524(void *a1, char a2)
{
  sub_24DBFE000(a1, a2 & 1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_24DC0B538()
{
  return objectdestroy_70Tm(MEMORY[0x263F8EEA0]);
}

uint64_t objectdestroy_70Tm(void (*a1)(void))
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  a1(*(void *)(v1 + 64));

  return swift_deallocObject();
}

uint64_t sub_24DC0B5C0()
{
  return sub_24DBFF80C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char **)(v0 + 32), *(void *)(v0 + 40), *(void (**)(uint64_t, uint64_t, unint64_t, void))(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_24DC0B5F0()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24DC0B640()
{
  sub_24DC00030(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(unsigned __int8 *)(v0 + 64), *(void (**)(uint64_t))(v0 + 72));
}

uint64_t sub_24DC0B67C()
{
  return objectdestroy_134Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EED8], MEMORY[0x263F8EEB0]);
}

uint64_t objectdestroy_134Tm(void (*a1)(void), void (*a2)(void), void (*a3)(void))
{
  a1(v3[2]);
  swift_release();
  a2(v3[4]);
  a3(v3[5]);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DC0B73C()
{
  return sub_24DC0B768((uint64_t (*)(void, void, void, void, void, void))sub_24DBFE6BC);
}

uint64_t sub_24DC0B768(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_24DC0B794(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24DC0B7E0(uint64_t a1)
{
  return sub_24DC0B88C(a1, (uint64_t)&unk_26FFD97C8, (uint64_t)&unk_26FFD97F0, (uint64_t)sub_24D73CC58, (uint64_t)sub_24DC0B820);
}

uint64_t sub_24DC0B820()
{
  return sub_24DC0B8FC((uint64_t (*)(unint64_t, void, void, void, void, void))sub_24DBFB3F8);
}

uint64_t sub_24DC0B850(uint64_t a1)
{
  return sub_24DC0B88C(a1, (uint64_t)&unk_26FFD9840, (uint64_t)&unk_26FFD9868, (uint64_t)sub_24D73CC58, (uint64_t)sub_24DC0B8D0);
}

uint64_t sub_24DC0B88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24DBFB144(a1, *(uint64_t **)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), a2, a3, a4, a5);
}

uint64_t sub_24DC0B8D0()
{
  return sub_24DC0B8FC((uint64_t (*)(unint64_t, void, void, void, void, void))sub_24DBF99EC);
}

uint64_t sub_24DC0B8FC(uint64_t (*a1)(unint64_t, void, void, void, void, void))
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v3 = *(void *)(sub_24DCCB058() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a1(v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1+ ((((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1+ ((((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8));
}

uint64_t sub_24DC0B9E8(uint64_t a1)
{
  return sub_24DC0BA00(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24DBF81A4);
}

uint64_t sub_24DC0BA00(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_24DC0BA18()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v3 = *(void *)(sub_24DCCB058() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  swift_release();
  unint64_t v5 = (id *)(v0 + v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    uint64_t v6 = *(void *)(v1 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v4, 1, v1)) {
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v4, v1);
    }
  }
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24DC0BC08()
{
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v1 = *(void *)(sub_24DCCB058() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_24DBF8494(*(void **)(v0 + 48), *(void *)(v0 + 56), (void (*)(char *, uint64_t, uint64_t))(v0 + v2), *(void **)(v0 + v3), *(void (**)(void, void, void, void *))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24DC0BD00()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = type metadata accessor for FileItemVersion();
  uint64_t v41 = *(void *)(v3 - 8);
  unint64_t v47 = (*(unsigned __int8 *)(v41 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  unint64_t v4 = (*(void *)(v41 + 64) + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v51 = type metadata accessor for ItemReconciliation();
  uint64_t v45 = *(unsigned __int8 *)(*(void *)(v51 - 8) + 80);
  uint64_t v38 = (v4 + v45 + 8) & ~v45;
  uint64_t v39 = *(void *)(*(void *)(v51 - 8) + 64) + v38;
  uint64_t v53 = (int *)type metadata accessor for SnapshotItem();
  uint64_t v54 = *(unsigned __int8 *)(*((void *)v53 - 1) + 80);
  uint64_t v44 = *(void *)(*((void *)v53 - 1) + 64);
  uint64_t v49 = swift_getAssociatedTypeWitness();
  uint64_t v50 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v52 = type metadata accessor for FileItemVersion();
  uint64_t v5 = *(void *)(v52 - 8);
  uint64_t v43 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v42 = *(void *)(v5 + 64);
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v6 = v0 + v47;
  uint64_t v40 = *(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  v40(v0 + v47, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  uint64_t v48 = v2;
  uint64_t v46 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v46(v6 + *(int *)(v3 + 56), v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = v0 + v38;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v38, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  id v10 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v11 = v7 + v10[12];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v11, 1, v52))
  {
    (*(void (**)(uint64_t))(*(void *)(v49 - 8) + 8))(v11);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(void *)(v50 - 8) + 8))(v11 + *(int *)(v52 + 56));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_24D3E380C(*(void **)(v7 + v10[16]), *(id *)(v7 + v10[16] + 8), *(unsigned char *)(v7 + v10[16] + 16));
  uint64_t v12 = v7 + v10[17];
  unint64_t v13 = *(void *)(v12 + 16);
  if (v13 >> 60 != 11 && v13 >> 60 != 15) {
    sub_24D400DCC(*(void *)(v12 + 8), v13);
  }

  uint64_t v14 = v7 + *(int *)(v51 + 52);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  unint64_t v17 = (int *)type metadata accessor for ItemReconciliationHalf();
  unint64_t v18 = v14 + v17[12];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v41 + 48))(v18, 1, v3))
  {
    v40(v18, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    v46(v18 + *(int *)(v3 + 56), v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v19 = (((v39 + 7) & 0xFFFFFFFFFFFFFFF8) + v54 + 9) & ~v54;
  sub_24D3E380C(*(void **)(v14 + v17[16]), *(id *)(v14 + v17[16] + 8), *(unsigned char *)(v14 + v17[16] + 16));
  uint64_t v20 = v14 + v17[17];
  unint64_t v21 = *(void *)(v20 + 16);
  if (v21 >> 60 != 11 && v21 >> 60 != 15) {
    sub_24D400DCC(*(void *)(v20 + 8), v21);
  }

  swift_bridgeObjectRelease();
  uint64_t v22 = v0 + v19;
  unint64_t v23 = *(void (**)(unint64_t, uint64_t))(v16 + 8);
  v23(v0 + v19, v15);
  v23(v0 + v19 + v53[9], v15);
  unint64_t v24 = v0 + v19 + v53[10];
  v40(v24, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  v46(v24 + *(int *)(v3 + 56), v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v25 = v0 + v19 + v53[12];
  uint64_t v26 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v27 = v25 + v26[7];
  uint64_t v28 = sub_24DCC8CE8();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void (**)(unint64_t, uint64_t))(v29 + 8);
  v30(v27, v28);
  v30(v25 + v26[8], v28);
  swift_bridgeObjectRelease();
  unint64_t v31 = v25 + v26[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v29 + 48))(v31, 1, v28)) {
    v30(v31, v28);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = (uint64_t *)(v25 + v26[33]);
  unint64_t v33 = v32[1];
  if (v33 >> 60 != 15) {
    sub_24D400DCC(*v32, v33);
  }
  swift_bridgeObjectRelease();
  uint64_t v34 = v22 + v53[13];
  uint64_t v35 = *(void **)(v34 + 16);
  if (v35 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v34 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v36 = (v19 + v44 + v43) & ~v43;
  sub_24D466534(*(void *)(v22 + v53[17]), *(void *)(v22 + v53[17] + 8));
  (*(void (**)(unint64_t))(*(void *)(v49 - 8) + 8))(v0 + v36);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(v50 - 8) + 8))(v0 + v36 + *(int *)(v52 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24DC0C7CC(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v2 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v3 = (*(void *)(v2 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(type metadata accessor for ItemReconciliation() - 8);
  unint64_t v13 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v5 = (*(void *)(v4 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(type metadata accessor for SnapshotItem() - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24DBF4308(a1, *(uint64_t **)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void **)(v1 + 80), *(void *)(v1 + 88), v1 + v14, *(void *)(v1 + v3), v1 + v13, *(void *)(v1 + v5), *(unsigned char *)(v1 + v5 + 8), v1 + v7, v1 + v10, *(void *)(v1 + v11), *(void *)(v1 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24DC0CB3C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(TupleTypeMetadata2 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(TupleTypeMetadata2 - 8) + 80);
  uint64_t v4 = *(void *)(*(void *)(TupleTypeMetadata2 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  unint64_t v6 = *(void *)(v0 + v3 + 16);
  if (v6 >> 60 != 15) {
    sub_24D400DCC(*(void *)(v5 + 8), v6);
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v5 + *(int *)(TupleTypeMetadata2 + 48), v1);

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24DC0CCCC(uint64_t a1)
{
  uint64_t v3 = *(void *)(swift_getTupleTypeMetadata2() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_24DBF4EC8(a1, *(void **)(v1 + 48), (char *)(v1 + v4), *(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + v5), *(void **)(v1 + v6), *(void *)(v1 + v7), *(void *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24DC0CDBC()
{
  return sub_24DBF174C(*(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_24DC0CDF0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v3 = *(void *)(sub_24DCCA3F8() - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v15 = (*(void *)(v3 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for FileItemVersion();
  uint64_t v5 = *(void *)(sub_24DCCA3F8() - 8);
  unint64_t v6 = (((((((v15 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + *(unsigned __int8 *)(v5 + 80)
      + 20) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();

  uint64_t v7 = v0 + v14;
  int v8 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v0 + v14, 1, TupleTypeMetadata2);
  unint64_t v9 = v15;
  if (!v8)
  {
    unint64_t v10 = *(void *)(v7 + 16);
    if (v10 >> 60 != 15) {
      sub_24D400DCC(*(void *)(v7 + 8), v10);
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v7 + *(int *)(TupleTypeMetadata2 + 48), v1);
    unint64_t v9 = v15;
  }

  swift_release();
  swift_release();
  swift_release();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v0 + v6, 1, v4))
  {
    (*(void (**)(unint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v6);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t))(*(void *)(v13 - 8) + 8))(v0 + v6 + *(int *)(v4 + 56));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

void sub_24DC0D1A0()
{
  swift_getTupleTypeMetadata2();
  uint64_t v1 = *(void *)(sub_24DCCA3F8() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v6 = (*(void *)(v1 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v2 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v3 = (v2 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v4 = *(void *)(sub_24DCCA3F8() - 8);
  sub_24DBEB0B0(*(uint64_t **)(v0 + 48), *(void *)(v0 + 56), v0 + v7, *(void **)(v0 + v6), *(void **)(v0 + v5), *(void *)(v0 + v2), *(uint64_t (**)(void, uint64_t, uint64_t, void *))(v0 + v3), *(void *)(v0 + v3 + 8), *(unsigned char *)(v0 + v3 + 16), *(unsigned char *)(v0 + v3 + 17), *(unsigned char *)(v0 + v3 + 18), *(unsigned char *)(v0 + v3 + 19), v0 + ((v3 + *(unsigned __int8 *)(v4 + 80) + 20) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
}

uint64_t sub_24DC0D3BC()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((((((((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DC0D4CC(void *a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v1 + v5);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = *(void *)(v1 + v7);
  uint64_t v13 = *(void *)(v1 + v8);
  unint64_t v14 = *(void **)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_24DBF04F8(a1, v1 + v4, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_24DC0D5B4()
{
  return objectdestroy_124Tm(MEMORY[0x263F8EEB0]);
}

uint64_t sub_24DC0D5CC()
{
  return sub_24DBF0A68(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(void, void, void, uint64_t))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_24DC0D5F0()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = type metadata accessor for FileItemVersion();
  uint64_t v4 = *(void *)(sub_24DCCA3F8() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v0 + v5, 1, v3))
  {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v5, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v0 + v5 + *(int *)(v3 + 56), v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_24DC0D828(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v3 = *(void *)(sub_24DCCA3F8() - 8);
  return sub_24DBF2624(a1, *(void **)(v1 + 48), *(void *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), v1 + ((*(unsigned __int8 *)(v3 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_24DC0D964()
{
  return objectdestroy_124Tm(MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_124Tm(void (*a1)(void))
{
  swift_release();
  swift_release();
  swift_release();
  a1(*(void *)(v1 + 48));

  return swift_deallocObject();
}

uint64_t sub_24DC0D9DC(uint64_t a1)
{
  return sub_24DC0BA00(a1, sub_24DBE7B08);
}

uint64_t sub_24DC0D9F8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v2 = *(void *)(sub_24DCCB058() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
  }
  else
  {
    uint64_t v4 = *(void *)(v1 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v3, 1, v1)) {
      (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v3, v1);
    }
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24DC0DBE4()
{
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v1 = *(void *)(sub_24DCCB058() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_24DBE7E24((char *)(v0 + v2), *(void (**)(uint64_t, uint64_t, unint64_t, void *))(v0 + v3), *(void *)(v0 + v3 + 8), *(uint64_t **)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t type metadata accessor for Ingestion()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24DC0DD64()
{
  type metadata accessor for FPDNetworkMonitor();
  swift_allocObject();
  uint64_t result = sub_24DC0DDA0();
  qword_26B1A2298 = result;
  return result;
}

uint64_t sub_24DC0DDA0()
{
  uint64_t v0 = sub_24DCCA1F8();
  uint64_t v21 = *(void *)(v0 - 8);
  uint64_t v22 = v0;
  MEMORY[0x270FA5388](v0);
  unint64_t v2 = (char *)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24DCCA188();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v20 - v8;
  v20[0] = sub_24DCC9398();
  uint64_t v10 = *(void *)(v20[0] - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v20[0]);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v15 = (char *)v20 - v14;
  v20[1] = sub_24D7395D0();
  sub_24DCC9348();
  uint64_t v24 = MEMORY[0x263F8EE78];
  sub_24D739610();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B199DE0);
  sub_24D739668();
  sub_24DCCA5B8();
  uint64_t v16 = v20[0];
  (*(void (**)(char *, char *, void))(v10 + 16))(v13, v15, v20[0]);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v2, *MEMORY[0x263F8F138], v22);
  uint64_t v17 = sub_24DCCA228();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v16);
  uint64_t v18 = v23;
  *(void *)(v23 + 16) = v17;
  sub_24DCC92B8();
  swift_allocObject();
  *(void *)(v18 + 24) = sub_24DCC92A8();
  sub_24D3EBEF0((uint64_t)sub_24DC0E120);
  sub_24DCC9288();
  sub_24DCC9298();
  return v18;
}

uint64_t sub_24DC0E120(uint64_t a1)
{
  uint64_t v2 = sub_24DCC92D8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v28 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = sub_24DCC9078();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v13(v7, a1, v2);
  uint64_t v14 = sub_24DCC9068();
  os_log_type_t v15 = sub_24DCCA108();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v27 = v8;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v30 = v25;
    uint64_t v26 = v9;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v23 = v17 + 4;
    uint64_t v24 = v17;
    v13(v28, (uint64_t)v7, v2);
    uint64_t v18 = sub_24DCC9888();
    uint64_t v29 = sub_24D418FB4(v18, v19, &v30);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
    uint64_t v20 = v24;
    _os_log_impl(&dword_24D3D0000, v14, v15, "Network path update %s", v24, 0xCu);
    uint64_t v21 = v25;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v21, -1, -1);
    MEMORY[0x25332B030](v20, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v11, v27);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_24DC0E440@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v1 = sub_24DCC9268();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24DCC92D8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DCC9278();
  uint64_t v9 = *MEMORY[0x263F14190];
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v21(v4, v9, v1);
  char v10 = sub_24DCC92C8();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v4, v1);
  if (v10)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = 0x74656E7265687465;
    unint64_t v14 = 0xE800000000000000;
  }
  else
  {
    uint64_t v20 = v5;
    os_log_type_t v15 = v21;
    v21(v4, *MEMORY[0x263F14198], v1);
    char v16 = sub_24DCC92C8();
    v11(v4, v1);
    if (v16)
    {
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v20);
      uint64_t v13 = 1768319351;
      unint64_t v14 = 0xE400000000000000;
    }
    else
    {
      v15(v4, *MEMORY[0x263F141A8], v1);
      char v17 = sub_24DCC92C8();
      v11(v4, v1);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v20);
      if (v17)
      {
        uint64_t v13 = 0x72616C756C6C6563;
        unint64_t v14 = 0xE800000000000000;
      }
      else
      {
        uint64_t v13 = 0x726568746FLL;
        unint64_t v14 = 0xE500000000000000;
      }
    }
  }
  uint64_t v18 = v22;
  uint64_t *v22 = v13;
  v18[1] = v14;
  return result;
}

uint64_t sub_24DC0E720()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FPDNetworkMonitor()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for FileTreeSide(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24DC0E850);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileTreeSide()
{
  return &type metadata for FileTreeSide;
}

uint64_t sub_24DC0E888()
{
  if (*v0) {
    return 20550;
  }
  else {
    return 21318;
  }
}

void sub_24DC0E8A4(void *a1@<X8>)
{
  *a1 = &unk_26FFA1040;
}

uint64_t sub_24DC0E8B4()
{
  return sub_24DCC9BD8();
}

unint64_t sub_24DC0E918()
{
  unint64_t result = qword_269870F40;
  if (!qword_269870F40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269870F48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870F40);
  }
  return result;
}

unint64_t sub_24DC0E978()
{
  unint64_t result = qword_269870F50;
  if (!qword_269870F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870F50);
  }
  return result;
}

uint64_t sub_24DC0E9CC()
{
  return sub_24DCC9B68();
}

unint64_t sub_24DC0EA1C()
{
  unint64_t result = qword_269870F58[0];
  if (!qword_269870F58[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269870F58);
  }
  return result;
}

uint64_t sub_24DC0EA70(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24DCCADA8();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24DCC8CE8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v36 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v39 = (char *)&v34 - v15;
  MEMORY[0x270FA5388](v14);
  char v17 = (char *)&v34 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990A8);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_24D502A50(v2, (uint64_t)v21);
  sub_24D502A50(a1, v22);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(a1) = v23(v21, 1, v7);
  int v24 = v23((char *)v22, 1, v7);
  if (a1 == 1)
  {
    if (v24 == 1)
    {
      return 1;
    }
    else
    {
      sub_24D419088(v22);
      return 0;
    }
  }
  else if (v24 == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v21, v7);
    return 0;
  }
  else
  {
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v26(v17, v21, v7);
    v26(v39, (char *)v22, v7);
    unsigned int v35 = *MEMORY[0x263F8E1F8];
    uint64_t v27 = v37;
    uint64_t v28 = v38;
    uint64_t v34 = *(void (**)(char *))(v37 + 104);
    v34(v6);
    sub_24DC0EE4C((uint64_t)v6);
    uint64_t v29 = *(void (**)(char *, uint64_t))(v27 + 8);
    v29(v6, v28);
    ((void (*)(char *, void, uint64_t))v34)(v6, v35, v28);
    uint64_t v30 = v36;
    sub_24DC0EE4C((uint64_t)v6);
    v29(v6, v28);
    uint64_t v31 = sub_24DCC8CC8();
    uint64_t v32 = *(void (**)(char *, uint64_t))(v8 + 8);
    v32(v30, v7);
    v32(v13, v7);
    BOOL v25 = v31 == 0;
    v32(v39, v7);
    v32(v17, v7);
  }
  return v25;
}

uint64_t sub_24DC0EE4C(uint64_t a1)
{
  uint64_t v2 = sub_24DCCADA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DCC8C88();
  v9[1] = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v7 != *MEMORY[0x263F8E210]
    && v7 != *MEMORY[0x263F8E208]
    && v7 != *MEMORY[0x263F8E218]
    && v7 != *MEMORY[0x263F8E220]
    && v7 != *MEMORY[0x263F8E1F8]
    && v7 != *MEMORY[0x263F8E200])
  {
    sub_24DCC9E48();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_24DCC8C78();
}

void destroy for JobSchedulingState(uint64_t a1)
{
}

uint64_t _s9libfssync18JobSchedulingStateOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24D3F1C98(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for JobSchedulingState(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24D3F1C98(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  int v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24D3E380C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for JobSchedulingState(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24D3E380C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for JobSchedulingState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JobSchedulingState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24DC0F1C4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_24DC0F1DC(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)unint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for JobSchedulingState()
{
  return &type metadata for JobSchedulingState;
}

BOOL sub_24DC0F204(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (a1 & ~a2) == 0 && a4 == 0;
}

BOOL sub_24DC0F218(uint64_t a1, uint64_t a2, char a3)
{
  return a3 == 2;
}

uint64_t sub_24DC0F228(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:
      if (a2)
      {
        uint64_t v15 = 0;
        swift_retain();
        sub_24DCC9968();
        type metadata accessor for Continuation();
        sub_24DCCA948();
        sub_24DCC9968();
        sub_24D97BA50((unint64_t)a1);
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        int v7 = a1;
        id v8 = a2;
        char v9 = 0;
        goto LABEL_11;
      }
      uint64_t v15 = 32;
      sub_24D97BA50((unint64_t)a1);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 1:
    case 2:
      if (a1)
      {
        uint64_t v15 = 0;
        sub_24D3F1C98(a1, a2, a3);
        sub_24DCC9968();
        type metadata accessor for Continuation();
        sub_24DCCA948();
        sub_24D3E380C(a1, a2, a3);
        sub_24DCC9968();
        goto LABEL_13;
      }
      uint64_t result = 0;
      break;
    case 3:
      id v10 = a1;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
      char v11 = swift_dynamicCast();

      if (v11)
      {
        uint64_t result = 0xD000000000000017;
      }
      else
      {
        uint64_t v15 = 0x3C3A726F72726520;
        swift_getErrorValue();
        sub_24D3F1C98(a1, a2, 3);
        id v12 = sub_24DBA2828(v14);
        id v13 = objc_msgSend(v12, sel_description);
        sub_24DCC97E8();

        sub_24DCC9968();
        swift_bridgeObjectRelease();
        sub_24DCC9968();
        int v7 = a1;
        id v8 = a2;
        char v9 = 3;
LABEL_11:
        sub_24D3E380C(v7, v8, v9);
LABEL_13:
        uint64_t result = v15;
      }
      break;
    default:
      return 0;
  }
  return result;
}

BOOL sub_24DC0F524(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return a2 != 0;
  }
  BOOL v3 = a1 != 0;
  if (a3 != 2) {
    BOOL v3 = 0;
  }
  if (a3 == 1) {
    return a1 != 0;
  }
  else {
    return v3;
  }
}

BOOL sub_24DC0F558(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 2 < 2) {
    return 1;
  }
  return a3 == 4 && a1 == 1 && !a2;
}

uint64_t sub_24DC0F594()
{
  uint64_t result = 0x208FB8EFBC80E2;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      if (*(void *)v0) {
        uint64_t result = 548966370;
      }
      else {
        uint64_t result = 548376546;
      }
      break;
    case 2:
      uint64_t result = 0x208FB8EFB696E2;
      break;
    case 3:
      return result;
    case 4:
      if (*(_OWORD *)v0 == 0) {
        uint64_t result = 0x208FB8EFB49CE2;
      }
      else {
        uint64_t result = 545627362;
      }
      break;
    default:
      uint64_t result = 548638690;
      break;
  }
  return result;
}

uint64_t sub_24DC0F660(uint64_t a1, uint64_t a2)
{
  return sub_24DC0F67C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_24DC0F67C(unint64_t a1, unint64_t a2, char a3, unint64_t a4, unint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        goto LABEL_20;
      }
      goto LABEL_19;
    case 2:
      if (a6 != 2) {
        goto LABEL_20;
      }
      goto LABEL_19;
    case 3:
      if (a6 != 3) {
        goto LABEL_20;
      }
      sub_24D3F1C98((id)a1, (id)a2, 3);
      sub_24D3F1C98((id)a1, (id)a2, 3);
      sub_24D3F1C98((id)a4, (id)a5, 3);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
      uint64_t v11 = sub_24DCC9868();
      uint64_t v13 = v12;
      id v14 = (id)a4;
      if (v11 == sub_24DCC9868() && v13 == v15) {
        char v10 = 1;
      }
      else {
        char v10 = sub_24DCCAE28();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24D3E380C((void *)a4, (id)a5, 3);
      sub_24D3E380C((void *)a1, (id)a2, 3);
      return v10 & 1;
    case 4:
      if (!(a1 | a2))
      {
        if (a6 != 4 || a5 | a4) {
          goto LABEL_20;
        }
LABEL_19:
        char v10 = 1;
        return v10 & 1;
      }
      if (a6 == 4 && a4 == 1 && !a5) {
        goto LABEL_19;
      }
LABEL_20:
      char v10 = 0;
      return v10 & 1;
    default:
      if (a6) {
        goto LABEL_20;
      }
      char v10 = a1 == a4;
      return v10 & 1;
  }
}

uint64_t sub_24DC0F868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void **a5, uint64_t a6, uint64_t a7)
{
  uint64_t v116 = a7;
  uint64_t v108 = a6;
  uint64_t v109 = a4;
  uint64_t v100 = a2;
  uint64_t v101 = a3;
  uint64_t v124 = a1;
  id v8 = *a5;
  uint64_t v9 = (*a5)[13];
  uint64_t v10 = (*a5)[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_24DCCA3F8();
  uint64_t v103 = *(void *)(v12 - 8);
  uint64_t v104 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v102 = (char *)&v91 - v14;
  uint64_t v111 = AssociatedTypeWitness;
  uint64_t v106 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v98 = (char *)&v91 - v15;
  uint64_t v17 = v8[12];
  uint64_t v118 = v8[10];
  uint64_t v16 = v118;
  uint64_t v119 = v10;
  uint64_t v120 = v17;
  uint64_t v121 = v9;
  uint64_t v107 = type metadata accessor for ReconciliationMutation();
  uint64_t v110 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  uint64_t v105 = (char *)&v91 - v18;
  uint64_t v113 = v16;
  uint64_t v114 = v9;
  uint64_t v118 = v16;
  uint64_t v119 = v10;
  uint64_t v115 = v10;
  uint64_t v120 = v17;
  uint64_t v121 = v9;
  uint64_t v19 = type metadata accessor for ItemReconciliation();
  uint64_t v20 = sub_24DCCA3F8();
  uint64_t v99 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v91 - v22;
  uint64_t v112 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v21);
  BOOL v25 = (char *)&v91 - v24;
  uint64_t v26 = v124;
  uint64_t v27 = v117;
  uint64_t result = sub_24D4759C8(v124, (uint64_t)v23);
  uint64_t v117 = v27;
  if (v27) {
    return result;
  }
  uint64_t v29 = v109;
  uint64_t v95 = a5;
  uint64_t v96 = v17;
  unint64_t v97 = v25;
  uint64_t v30 = v26;
  uint64_t v31 = v116;
  uint64_t v32 = v112;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v23, 1, v19) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v23, v20);
  }
  uint64_t v99 = v29 | 1;
  unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  uint64_t v34 = v97;
  uint64_t v94 = (int *)v19;
  v33(v97, v23, v19);
  if (v108)
  {
    uint64_t v109 = v108;
  }
  else
  {
    swift_retain();
    uint64_t v109 = v31;
  }
  uint64_t v35 = v30;
  uint64_t v37 = v114;
  uint64_t v36 = v115;
  uint64_t v38 = v113;
  uint64_t v39 = v96;
  uint64_t v40 = type metadata accessor for ItemReconciliationHalf();
  int v41 = v34[*(int *)(v40 + 56)];
  uint64_t v93 = v40;
  if (v41 == 2)
  {
    uint64_t v118 = v38;
    uint64_t v119 = v36;
    uint64_t v120 = v39;
    uint64_t v121 = v37;
    uint64_t v92 = type metadata accessor for JobResult();
    uint64_t v43 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v45 = v111;
    uint64_t v46 = swift_getAssociatedConformanceWitness();
    uint64_t v118 = v43;
    uint64_t v119 = v45;
    uint64_t v120 = AssociatedConformanceWitness;
    uint64_t v121 = v46;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v42 = (uint64_t)v105;
    uint64_t v48 = &v105[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v105, v35, v43);
    swift_storeEnumTagMultiPayload();
    *(_WORD *)uint64_t v48 = 3;
    uint64_t v38 = v113;
    uint64_t v37 = v114;
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = v107;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    uint64_t v36 = v115;
    sub_24D907568(v116, v42);
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v42, v49);
  }
  else
  {
    swift_retain();
    uint64_t v42 = (uint64_t)v105;
  }
  uint64_t v118 = v38;
  uint64_t v119 = v36;
  uint64_t v120 = v39;
  uint64_t v121 = v37;
  uint64_t v108 = type metadata accessor for JobResult();
  uint64_t v50 = swift_getAssociatedTypeWitness();
  uint64_t v51 = swift_getAssociatedConformanceWitness();
  uint64_t v52 = v111;
  uint64_t v53 = swift_getAssociatedConformanceWitness();
  uint64_t v118 = v50;
  uint64_t v119 = v52;
  uint64_t v120 = v51;
  uint64_t v121 = v53;
  uint64_t v54 = type metadata accessor for ReconciliationID();
  uint64_t v55 = v113;
  uint64_t v56 = v39;
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v57 = v42 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v42, v124, v50);
  uint64_t v92 = v54;
  swift_storeEnumTagMultiPayload();
  *(_WORD *)uint64_t v57 = 3;
  uint64_t v59 = v100;
  uint64_t v58 = v101;
  *(void *)(v57 + 8) = v100;
  *(void *)(v57 + 16) = v58;
  swift_storeEnumTagMultiPayload();
  uint64_t v60 = v107;
  swift_storeEnumTagMultiPayload();
  sub_24D907568(v109, v42);
  uint64_t v61 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
  v110 += 8;
  uint64_t v91 = v61;
  v61(v42, v60);
  uint64_t v118 = v55;
  uint64_t v119 = v115;
  uint64_t v120 = v56;
  uint64_t v121 = v114;
  type metadata accessor for Materialization.MaterializeItem();
  swift_allocObject();
  uint64_t v62 = sub_24DC096F0(v124, v59, v58, v99, 32);
  uint64_t v63 = v116;
  sub_24D85246C(v116, v62);
  swift_release();
  uint64_t v64 = v94;
  uint64_t v65 = v97;
  uint64_t v66 = v102;
  uint64_t v67 = v103;
  unint64_t v68 = *(void (**)(char *))(v103 + 16);
  uint64_t v101 = (uint64_t)&v97[v94[13]];
  uint64_t v69 = v104;
  v68(v102);
  uint64_t v70 = v106;
  uint64_t v71 = v111;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v66, 1, v111) == 1)
  {
    (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v69);
    char v72 = 0;
    uint64_t v73 = v96;
    goto LABEL_24;
  }
  uint64_t v74 = v98;
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v98, v66, v71);
  uint64_t v75 = v117;
  (*(void (**)(void *__return_ptr, char *))(*v95[5] + 264))(v122, v74);
  uint64_t v117 = v75;
  if (v75)
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v74, v71);
    return (*(uint64_t (**)(char *, int *))(v112 + 8))(v65, v64);
  }
  sub_24D5013B0((uint64_t)v122, (uint64_t)v123);
  if (sub_24D3F0D40((uint64_t)v123) == 1)
  {
    (*(void (**)(char *, uint64_t))(v70 + 8))(v74, v71);
    char v72 = 0;
    uint64_t v73 = v96;
  }
  else
  {
    uint64_t v76 = v65;
    uint64_t v77 = v123[26];
    uint64_t v78 = v123[27];
    char v79 = ((uint64_t (*)(void))(*v95)[65])();
    uint64_t v80 = sub_24D3FB354(v77, v78, 0, v79 & 1, v76[v64[14]] == 1, *(_DWORD *)&v76[v64[19]] & 1);
    if ((unint64_t)(v80 - 500) < 2 || v80 == 3)
    {
      uint64_t v81 = type metadata accessor for ItemReconciliationHalf();
      uint64_t v82 = v111;
      if (*(unsigned char *)(v101 + *(int *)(v81 + 52)) == 4)
      {
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v83 = swift_getTupleTypeMetadata2();
        uint64_t v84 = (uint64_t)v105;
        uint64_t v85 = v106;
        uint64_t v86 = &v105[*(int *)(v83 + 48)];
        (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v105, v98, v82);
        char v72 = 1;
        swift_storeEnumTagMultiPayload();
        char *v86 = 1;
        swift_storeEnumTagMultiPayload();
        uint64_t v87 = v107;
        swift_storeEnumTagMultiPayload();
        uint64_t v88 = v116;
        sub_24D907568(v116, v84);
        sub_24D472A7C((uint64_t)v122);
        v91(v84, v87);
        (*(void (**)(char *, uint64_t))(v85 + 8))(v98, v111);
        uint64_t v63 = v88;
        uint64_t v73 = v96;
        uint64_t v65 = v97;
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v106 + 8))(v98, v111);
      sub_24D472A7C((uint64_t)v122);
      char v72 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v106 + 8))(v98, v111);
      sub_24D472A7C((uint64_t)v122);
      char v72 = 0;
    }
    uint64_t v73 = v96;
    uint64_t v65 = v97;
  }
  uint64_t v63 = v116;
LABEL_24:
  if (!v65[*(int *)(v93 + 44)])
  {
LABEL_27:
    (*(void (**)(char *, int *))(v112 + 8))(v65, v64);
    return swift_release();
  }
  uint64_t v89 = v114;
  if (*(unsigned char *)(v101 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 64) + 16) != 2)
  {
    swift_release();
    return (*(uint64_t (**)(char *, int *))(v112 + 8))(v65, v64);
  }
  if (v72) {
    goto LABEL_27;
  }
  uint64_t v118 = v115;
  uint64_t v119 = v113;
  uint64_t v120 = v89;
  uint64_t v121 = v73;
  type metadata accessor for Propagation.CancelUpdate();
  uint64_t v90 = sub_24D732E04(v124, *(void *)&v65[v64[16]], *(void *)&v65[v64[16] + 8], v99);
  sub_24D85246C(v63, v90);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, int *))(v112 + 8))(v65, v64);
}

uint64_t sub_24DC1046C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, void **a6, int a7, uint64_t a8)
{
  uint64_t v158 = a1;
  uint64_t v138 = a8;
  int v142 = a7;
  uint64_t v130 = a5;
  uint64_t v133 = a4;
  uint64_t v141 = a3;
  int v155 = a2;
  uint64_t v10 = (*a6)[11];
  uint64_t v11 = (*a6)[12];
  uint64_t v12 = (*a6)[13];
  uint64_t v159 = (*a6)[10];
  uint64_t v9 = v159;
  uint64_t v160 = v10;
  uint64_t v161 = v11;
  uint64_t v162 = v12;
  uint64_t v134 = type metadata accessor for ReconciliationMutation();
  uint64_t v132 = *(void *)(v134 - 8);
  MEMORY[0x270FA5388](v134);
  uint64_t v131 = (char *)&v122 - v13;
  uint64_t v160 = v10;
  uint64_t v161 = v11;
  uint64_t v162 = v12;
  uint64_t v14 = type metadata accessor for PersistenceTrigger();
  uint64_t v128 = *(void *)(v14 - 8);
  uint64_t v129 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v127 = (char *)&v122 - v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v139 = sub_24DCCA3F8();
  uint64_t v137 = *(void *)(v139 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v139);
  uint64_t v136 = (char *)&v122 - v18;
  uint64_t v143 = AssociatedTypeWitness;
  uint64_t v140 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v135 = (char *)&v122 - v19;
  uint64_t v159 = v9;
  uint64_t v160 = v10;
  uint64_t v144 = v12;
  uint64_t v145 = v10;
  uint64_t v161 = v11;
  uint64_t v162 = v12;
  uint64_t v20 = type metadata accessor for ItemReconciliation();
  uint64_t v21 = sub_24DCCA3F8();
  uint64_t v146 = *(void *)(v21 - 8);
  uint64_t v147 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v153 = (uint64_t)&v122 - v23;
  uint64_t v151 = (int *)v20;
  uint64_t v152 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v148 = v9;
  uint64_t v149 = (char *)&v122 - v24;
  uint64_t v150 = v11;
  uint64_t v25 = type metadata accessor for SnapshotItem();
  uint64_t v26 = sub_24DCCA3F8();
  uint64_t v154 = *(void *)(v26 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v122 - v28;
  uint64_t v156 = *(void *)(v25 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v32 = (char *)&v122 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  uint64_t v35 = (uint64_t (*)(char *, uint64_t))((char *)&v122 - v34);
  MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)&v122 - v36;
  uint64_t v38 = v157;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*a6[4] + 240))(v158, 1);
  uint64_t v40 = v38;
  if (!v38)
  {
    unint64_t v125 = a6;
    uint64_t v126 = v35;
    uint64_t v157 = v37;
    uint64_t v41 = v156;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v156 + 48))(v29, 1, v25) == 1) {
      return (*(uint64_t (**)(char *, uint64_t))(v154 + 8))(v29, v26);
    }
    uint64_t v154 = (uint64_t)v32;
    uint64_t v42 = v157;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v157, v29, v25);
    uint64_t v43 = *(void (**)(void (*)(void, void), char *, uint64_t))(v41 + 16);
    uint64_t v44 = v126;
    v43((void (*)(void, void))v126, v42, v25);
    int v45 = v155;
    if (v155 == 4)
    {
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v40 = 0;
      int v45 = sub_24D98BCC4(v25, WitnessTable);
    }
    unint64_t v47 = (char *)v44;
    uint64_t v50 = *(uint64_t (**)(char *, uint64_t))(v41 + 8);
    uint64_t v48 = v41 + 8;
    uint64_t v49 = v50;
    v50(v47, v25);
    if (v45 == 2) {
      return v49(v42, v25);
    }
    uint64_t v156 = v48;
    int v155 = v45;
    uint64_t v126 = v49;
    uint64_t v124 = v40;
    uint64_t v51 = v25;
    uint64_t v52 = &v42[*(int *)(v25 + 48)];
    uint64_t v53 = type metadata accessor for ItemMetadata();
    LOBYTE(v52) = v52[*(int *)(v53 + 64)];
    uint64_t v54 = v154;
    v43((void (*)(void, void))v154, v42, v51);
    if (v52)
    {
      uint64_t v55 = v126;
      v126((char *)v54, v51);
      return v55(v157, v51);
    }
    char v56 = *(unsigned char *)(v54 + *(int *)(v51 + 48) + *(int *)(v53 + 68));
    uint64_t v57 = v126;
    v126((char *)v54, v51);
    uint64_t v58 = v51;
    if ((v56 & 1) == 0)
    {
      uint64_t v59 = v124;
      uint64_t v60 = v125;
      uint64_t v61 = v153;
      sub_24D4759C8(v158, v153);
      if (v59) {
        return v126(v157, v58);
      }
      uint64_t v63 = v151;
      uint64_t v62 = v152;
      if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v152 + 48))(v61, 1, v151) == 1)
      {
        v126(v157, v58);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v146 + 8))(v61, v147);
      }
      uint64_t v64 = v149;
      (*(void (**)(char *, uint64_t, int *))(v62 + 32))(v149, v61, v63);
      uint64_t v65 = v148;
      uint64_t v66 = type metadata accessor for ItemReconciliationHalf();
      if ((v64[*(int *)(v66 + 36)] & 0x10) == 0)
      {
        uint64_t v67 = &v64[*(int *)(v66 + 64)];
        if (v67[16] || (v67[2] & 4) == 0)
        {
          uint64_t v124 = 0;
          if (v142 == 2)
          {
            uint64_t v123 = v58;
            uint64_t v154 = 0x20000000002;
LABEL_26:
            uint64_t v71 = v60[3];
            uint64_t v72 = v144;
            uint64_t v73 = v145;
            uint64_t v159 = v65;
            uint64_t v160 = v145;
            uint64_t v74 = v150;
            uint64_t v161 = v150;
            uint64_t v162 = v144;
            uint64_t v153 = type metadata accessor for ItemJob();
            uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
            sub_24DA604B8(MetatypeMetadata, MetatypeMetadata);
            swift_allocObject();
            uint64_t v76 = sub_24DCC9C58();
            uint64_t v77 = v65;
            char v79 = v78;
            uint64_t v159 = v77;
            uint64_t v160 = v73;
            uint64_t v161 = v74;
            uint64_t v162 = v72;
            uint64_t v80 = type metadata accessor for Materialization.EvictItem();
            *char v79 = v80;
            uint64_t v81 = sub_24D785484(v76);
            uint64_t v82 = v124;
            uint64_t v83 = (*(uint64_t (**)(uint64_t, uint64_t))(*v71 + 272))(v158, v81);
            if (v82)
            {
              swift_bridgeObjectRelease();
              (*(void (**)(char *, int *))(v152 + 8))(v149, v63);
              uint64_t v58 = v123;
              return v126(v157, v58);
            }
            uint64_t v84 = v83;
            uint64_t v147 = v80;
            uint64_t v124 = 0;
            uint64_t v85 = v154 | v130;
            swift_bridgeObjectRelease();
            v164[33] = v84;
            sub_24DCC9D48();
            swift_getWitnessTable();
            sub_24DCC9FD8();
            swift_bridgeObjectRelease();
            if (v159)
            {
              uint64_t v86 = v158;
              uint64_t v87 = v138;
              uint64_t v88 = v145;
              if (*(unsigned char *)(v159 + 112) == 1)
              {
                uint64_t v159 = v148;
                uint64_t v160 = v145;
                uint64_t v161 = v150;
                uint64_t v162 = v144;
                type metadata accessor for JobResult();
                uint64_t v89 = sub_24D983A48();
                swift_retain();
                sub_24D85246C(v87, v89);
                uint64_t v88 = v145;
                swift_release();
              }
              swift_release();
              uint64_t v90 = v141;
              uint64_t v91 = v86;
            }
            else
            {
              uint64_t v91 = v158;
              uint64_t v87 = v138;
              uint64_t v90 = v141;
              uint64_t v88 = v145;
            }
            uint64_t v94 = v148;
            uint64_t v159 = v148;
            uint64_t v160 = v88;
            uint64_t v95 = v150;
            uint64_t v161 = v150;
            uint64_t v162 = v144;
            uint64_t v96 = type metadata accessor for JobResult();
            uint64_t v97 = v91;
            uint64_t v98 = v133;
            uint64_t v99 = sub_24DC1BC88(v97, v90, v133, v85, 64);
            uint64_t v154 = v96;
            sub_24D85246C(v87, v99);
            swift_release();
            if (v155 == 1)
            {
              uint64_t v159 = v94;
              uint64_t v160 = v145;
              uint64_t v161 = v95;
              uint64_t v162 = v144;
              type metadata accessor for Materialization.EvictChildren();
              uint64_t v100 = sub_24D732E08(v158, v141, v98, v85);
              sub_24D85246C(v87, v100);
              swift_release();
            }
            uint64_t v101 = swift_getAssociatedTypeWitness();
            uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
            uint64_t v103 = v143;
            uint64_t v104 = swift_getAssociatedConformanceWitness();
            uint64_t v159 = v101;
            uint64_t v160 = v103;
            uint64_t v161 = AssociatedConformanceWitness;
            uint64_t v162 = v104;
            type metadata accessor for ReconciliationID();
            type metadata accessor for ReconciliationSideMutation();
            TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
            uint64_t v106 = (uint64_t)v131;
            uint64_t v107 = &v131[*(int *)(TupleTypeMetadata2 + 48)];
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v101 - 8) + 16))(v131, v158, v101);
            swift_storeEnumTagMultiPayload();
            *(_WORD *)uint64_t v107 = 259;
            *((void *)v107 + 1) = v141;
            *((void *)v107 + 2) = v98;
            swift_storeEnumTagMultiPayload();
            uint64_t v108 = v134;
            swift_storeEnumTagMultiPayload();
            sub_24D907568(v138, v106);
            (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v106, v108);
            goto LABEL_39;
          }
          unint64_t v68 = v136;
          uint64_t v69 = v137;
          (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v136, &v64[v63[13]], v139);
          uint64_t v70 = v140;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))(v68, 1, v143) == 1)
          {
            uint64_t v123 = v58;
            (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v139);
            goto LABEL_24;
          }
          uint64_t v92 = v135;
          (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v135, v68, v143);
          uint64_t v93 = v124;
          (*(void (**)(void *__return_ptr, char *))(*v125[5] + 264))(v163, v92);
          if (!v93)
          {
            uint64_t v109 = v143;
            uint64_t v124 = 0;
            sub_24D5013B0((uint64_t)v163, (uint64_t)v164);
            int v110 = sub_24D3F0D40((uint64_t)v164);
            uint64_t v123 = v58;
            if (v110 != 1)
            {
              uint64_t v111 = v164[26];
              uint64_t v112 = v164[27];
              char v113 = ((uint64_t (*)(void))(*v125)[65])();
              unsigned __int8 v114 = 0;
              switch(v64[v63[14]])
              {
                case 1:
                  unsigned __int8 v114 = 1;
                  break;
                case 4:
                  __break(1u);
                  JUMPOUT(0x24DC1150CLL);
                default:
                  break;
              }
              if (sub_24D3FB354(v111, v112, 0, v113 & 1, v114, v64[v63[19]] & 1) == 3)
              {
                uint64_t v115 = swift_getAssociatedTypeWitness();
                uint64_t v116 = swift_getAssociatedConformanceWitness();
                uint64_t v117 = v143;
                uint64_t v118 = swift_getAssociatedConformanceWitness();
                uint64_t v159 = v115;
                uint64_t v160 = v117;
                uint64_t v161 = v116;
                uint64_t v162 = v118;
                type metadata accessor for ReconciliationID();
                __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
                uint64_t v119 = *(int *)(swift_getTupleTypeMetadata2() + 48);
                uint64_t v120 = v127;
                (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v115 - 8) + 16))(v127, v158, v115);
                swift_storeEnumTagMultiPayload();
                type metadata accessor for FileTreeError();
                swift_getWitnessTable();
                *(void *)&v120[v119] = swift_allocError();
                swift_storeEnumTagMultiPayload();
                uint64_t v121 = v129;
                swift_storeEnumTagMultiPayload();
                ((void (*)(char *))(*v125)[39])(v120);
                sub_24D472A7C((uint64_t)v163);
                (*(void (**)(char *, uint64_t))(v128 + 8))(v120, v121);
                (*(void (**)(char *, uint64_t))(v140 + 8))(v135, v117);
LABEL_39:
                (*(void (**)(char *, int *))(v152 + 8))(v149, v151);
                return v126(v157, v123);
              }
              (*(void (**)(char *, uint64_t))(v140 + 8))(v135, v143);
              sub_24D472A7C((uint64_t)v163);
              uint64_t v154 = 2;
              uint64_t v63 = v151;
              uint64_t v65 = v148;
              goto LABEL_25;
            }
            (*(void (**)(char *, uint64_t))(v140 + 8))(v135, v109);
LABEL_24:
            uint64_t v154 = 2;
LABEL_25:
            uint64_t v60 = v125;
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v140 + 8))(v92, v143);
        }
      }
      (*(void (**)(char *, int *))(v62 + 8))(v64, v63);
      return v126(v157, v58);
    }
    return v57(v157, v51);
  }
  return result;
}

uint64_t sub_24DC11520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DC15764(a1, a2, a3, a4, 0x10000);
}

uint64_t sub_24DC11528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DC15764(a1, a2, a3, a4, 32);
}

uint64_t sub_24DC11530(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v168 = a1;
  uint64_t v154 = a3;
  uint64_t v5 = *(void *)(*a2 + 88);
  uint64_t v6 = *(void *)(*a2 + 96);
  uint64_t v7 = *(void *)(*a2 + 104);
  uint64_t v170 = *(void *)(*a2 + 80);
  uint64_t v4 = v170;
  uint64_t v171 = v5;
  uint64_t v172 = v6;
  uint64_t v173 = v7;
  uint64_t v150 = type metadata accessor for ReconciliationMutation();
  uint64_t v149 = *(void *)(v150 - 8);
  MEMORY[0x270FA5388](v150);
  uint64_t v152 = (char *)&v143 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v146 = sub_24DCCA3F8();
  uint64_t v166 = *(void *)(v146 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v146);
  uint64_t v165 = (char *)&v143 - v11;
  uint64_t v158 = AssociatedTypeWitness;
  uint64_t v148 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v147 = (char *)&v143 - v12;
  uint64_t v170 = v4;
  uint64_t v171 = v5;
  uint64_t v172 = v6;
  uint64_t v173 = v7;
  uint64_t v13 = type metadata accessor for ItemReconciliation();
  uint64_t v14 = sub_24DCCA3F8();
  uint64_t v163 = *(void *)(v14 - 8);
  uint64_t v164 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v162 = (uint64_t *)((char *)&v143 - v16);
  uint64_t v157 = v13;
  uint64_t v156 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v151 = (char *)&v143 - v17;
  uint64_t v18 = sub_24DCC9078();
  uint64_t v160 = *(void *)(v18 - 8);
  uint64_t v161 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v159 = (char *)&v143 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a2[3];
  uint64_t v170 = v4;
  uint64_t v171 = v5;
  uint64_t v172 = v6;
  uint64_t v173 = v7;
  uint64_t v167 = type metadata accessor for ItemJob();
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
  sub_24DA604B8(MetatypeMetadata, MetatypeMetadata);
  swift_allocObject();
  uint64_t v22 = sub_24DCC9C58();
  uint64_t v153 = v4;
  uint64_t v170 = v4;
  uint64_t v171 = v5;
  uint64_t v155 = v6;
  uint64_t v172 = v6;
  uint64_t v173 = v7;
  *uint64_t v23 = type metadata accessor for Materialization.MaterializeItem();
  uint64_t v24 = sub_24D785484(v22);
  uint64_t v25 = v169;
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v20 + 272))(v168, v24);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v169 = v25;
  if (v25) {
    return result;
  }
  uint64_t v143 = v20;
  uint64_t v144 = v7;
  uint64_t v145 = v5;
  uint64_t v174 = v26;
  sub_24DCC9D48();
  swift_getWitnessTable();
  sub_24DCC9FD8();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v28 = v170;
  if (!v170) {
    return result;
  }
  uint64_t v29 = *(void *)(v170 + 136);
  if ((v29 & 0x10000) != 0 || (v29 & 0x20000) != 0) {
    return swift_release();
  }
  id v30 = (id)fpfs_current_or_default_log();
  uint64_t v31 = v159;
  sub_24DCC9088();
  swift_retain();
  uint64_t v32 = sub_24DCC9068();
  os_log_type_t v33 = sub_24DCCA148();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v167 = swift_slowAlloc();
    uint64_t v170 = v167;
    *(_DWORD *)uint64_t v34 = 136446210;
    uint64_t v35 = sub_24D982AC4();
    uint64_t v174 = sub_24D418FB4(v35, v36, &v170);
    sub_24DCCA428();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D3D0000, v32, v33, "✴️  cancelling materialization %{public}s", v34, 0xCu);
    uint64_t v37 = v167;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v37, -1, -1);
    MEMORY[0x25332B030](v34, -1, -1);
  }
  else
  {

    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v160 + 8))(v31, v161);
  uint64_t v39 = v168;
  uint64_t v38 = v169;
  uint64_t v40 = v165;
  uint64_t v41 = v166;
  uint64_t v42 = v162;
  sub_24D4759C8(v168, (uint64_t)v162);
  uint64_t v44 = v163;
  uint64_t v43 = v164;
  uint64_t v169 = v38;
  if (v38) {
    return swift_release();
  }
  uint64_t v167 = v28;
  uint64_t v46 = v156;
  uint64_t v45 = v157;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v156 + 48))(v42, 1, v157) == 1)
  {
    (*(void (**)(void *, uint64_t))(v44 + 8))(v42, v43);
LABEL_15:
    uint64_t v170 = v153;
    uint64_t v171 = v145;
    uint64_t v172 = v155;
    uint64_t v173 = v144;
    uint64_t v168 = type metadata accessor for JobResult();
    uint64_t v53 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v55 = v158;
    uint64_t v56 = swift_getAssociatedConformanceWitness();
    uint64_t v170 = v53;
    uint64_t v171 = v55;
    uint64_t v172 = AssociatedConformanceWitness;
    uint64_t v173 = v56;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v58 = (uint64_t)v152;
    uint64_t v59 = &v152[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v152, v39, v53);
    swift_storeEnumTagMultiPayload();
    long long v60 = *(_OWORD *)(v167 + 120);
    *(_WORD *)uint64_t v59 = 768;
    *(_OWORD *)(v59 + 8) = v60;
    swift_storeEnumTagMultiPayload();
    uint64_t v61 = v150;
    swift_storeEnumTagMultiPayload();
    sub_24D907568(v154, v58);
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v149 + 8))(v58, v61);
  }
  unint64_t v47 = v151;
  (*(void (**)(char *, void *, uint64_t))(v46 + 32))(v151, v42, v45);
  uint64_t v48 = *(void (**)(char *))(v41 + 16);
  uint64_t v166 = (uint64_t)&v47[*(int *)(v45 + 52)];
  uint64_t v49 = v146;
  v48(v40);
  uint64_t v50 = v41;
  uint64_t v51 = v148;
  uint64_t v52 = v158;
  if ((*(unsigned int (**)(char *, uint64_t))(v148 + 48))(v40, 1) == 1)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v45);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v40, v49);
    goto LABEL_15;
  }
  uint64_t v62 = v51;
  uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
  uint64_t v64 = v147;
  v63(v147, v40, v52);
  uint64_t v65 = v145;
  uint64_t v66 = v144;
  uint64_t result = type metadata accessor for ItemReconciliationHalf();
  uint64_t v67 = v154;
  if (*(unsigned char *)(v166 + *(int *)(result + 52)) != 1)
  {
    uint64_t v170 = v153;
    uint64_t v171 = v65;
    uint64_t v172 = v155;
    uint64_t v173 = v66;
    type metadata accessor for JobResult();
    uint64_t v84 = sub_24D983A48();
    swift_retain();
    sub_24D85246C(v67, v84);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v52);
    return (*(uint64_t (**)(char *, uint64_t))(v156 + 8))(v151, v157);
  }
  int v68 = v151[*(int *)(v157 + 56)];
  if (v68 == 1)
  {
    uint64_t v85 = v145;
    uint64_t v86 = v153;
    uint64_t v170 = v145;
    uint64_t v171 = v153;
    uint64_t v87 = v155;
    uint64_t v172 = v66;
    uint64_t v173 = v155;
    type metadata accessor for ItemJob();
    uint64_t v88 = swift_getMetatypeMetadata();
    sub_24DA604B8(v88, v88);
    swift_allocObject();
    uint64_t v89 = sub_24DCC9C58();
    uint64_t v90 = v66;
    uint64_t v91 = v89;
    uint64_t v170 = v85;
    uint64_t v171 = v86;
    uint64_t v172 = v90;
    uint64_t v173 = v87;
    *uint64_t v92 = type metadata accessor for Ingestion.FetchChildrenMetadata();
    uint64_t v93 = sub_24D785484(v91);
    uint64_t v94 = v147;
    uint64_t v95 = v169;
    uint64_t v96 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v143 + 264))(v147, v93);
    uint64_t v97 = v168;
    uint64_t v169 = v95;
    if (!v95) {
      goto LABEL_39;
    }
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  uint64_t v69 = v147;
  uint64_t v70 = v153;
  uint64_t v71 = v155;
  uint64_t v72 = v143;
  if (v68 == 4)
  {
    __break(1u);
    return result;
  }
  uint64_t v73 = v145;
  uint64_t v170 = v145;
  uint64_t v171 = v153;
  uint64_t v172 = v66;
  uint64_t v173 = v155;
  uint64_t v164 = type metadata accessor for ItemJob();
  uint64_t v74 = swift_getMetatypeMetadata();
  sub_24DA604B8(v74, v74);
  swift_allocObject();
  uint64_t v75 = sub_24DCC9C58();
  uint64_t v77 = v76;
  uint64_t v170 = v73;
  uint64_t v171 = v70;
  uint64_t v172 = v66;
  uint64_t v173 = v71;
  uint64_t Content = type metadata accessor for Ingestion.FetchContent();
  *uint64_t v77 = Content;
  uint64_t v79 = sub_24D785484(v75);
  uint64_t v80 = v169;
  uint64_t v81 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v72 + 264))(v69, v79);
  uint64_t v82 = v148;
  uint64_t v83 = v149;
  uint64_t v169 = v80;
  if (v80)
  {
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v69, v158);
    return (*(uint64_t (**)(char *, uint64_t))(v156 + 8))(v151, v157);
  }
  uint64_t v98 = v81;
  swift_bridgeObjectRelease();
  uint64_t v94 = (char *)v164;
  if (!MEMORY[0x253327DC0](v98, v164))
  {
LABEL_44:
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v148 + 8))(v147, v158);
    return (*(uint64_t (**)(char *, uint64_t))(v156 + 8))(v151, v157);
  }
  uint64_t v162 = (void *)(v83 + 8);
  uint64_t v149 = v148 + 16;
  uint64_t v99 = 4;
  uint64_t v163 = Content;
  uint64_t v166 = v98;
  while (1)
  {
    uint64_t v100 = v99 - 4;
    char v101 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if ((v101 & 1) == 0) {
      break;
    }
    uint64_t v97 = *(void *)(v98 + 8 * v99);
    uint64_t v96 = swift_retain();
    uint64_t v102 = v99 - 3;
    if (__OFADD__(v100, 1)) {
      goto LABEL_38;
    }
LABEL_31:
    if (*(unsigned char *)(v97 + 136))
    {
      uint64_t v103 = swift_dynamicCastClassUnconditional();
      if (*(unsigned char *)(v103 + 112) == 2)
      {
        uint64_t v105 = *(void **)(v103 + 96);
        uint64_t v104 = *(void **)(v103 + 104);
        uint64_t v106 = v153;
        uint64_t v107 = v145;
        uint64_t v170 = v153;
        uint64_t v171 = v145;
        uint64_t v108 = v155;
        uint64_t v172 = v155;
        uint64_t v173 = v66;
        uint64_t v165 = (char *)type metadata accessor for JobResult();
        uint64_t v170 = v107;
        uint64_t v171 = v106;
        uint64_t v172 = v66;
        uint64_t v173 = v108;
        type metadata accessor for Ingestion.CancelFetchFileContent();
        uint64_t v110 = *(void *)(v97 + 120);
        uint64_t v109 = *(void *)(v97 + 128);
        swift_retain();
        sub_24D3F1C98(v105, v104, 2);
        uint64_t v111 = sub_24D732E04(v147, v110, v109, 0x80000);
        sub_24D855694(v154, v111);
        uint64_t v66 = v144;
        swift_release();
        swift_release_n();
        sub_24D3E380C(v105, v104, 2);
      }
      else
      {
        uint64_t v170 = v153;
        uint64_t v171 = v145;
        uint64_t v160 = v102;
        uint64_t v161 = v103;
        uint64_t v172 = v155;
        uint64_t v173 = v66;
        uint64_t v165 = (char *)type metadata accessor for JobResult();
        uint64_t v112 = swift_getAssociatedTypeWitness();
        uint64_t v113 = swift_getAssociatedConformanceWitness();
        uint64_t v102 = v160;
        uint64_t v114 = v158;
        uint64_t v115 = swift_getAssociatedConformanceWitness();
        uint64_t v170 = v112;
        uint64_t v171 = v114;
        uint64_t v172 = v113;
        uint64_t v173 = v115;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v116 = swift_getTupleTypeMetadata2();
        uint64_t v117 = (uint64_t)v152;
        uint64_t v118 = &v152[*(int *)(v116 + 48)];
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v112 - 8) + 16))(v152, v168, v112);
        swift_storeEnumTagMultiPayload();
        long long v119 = *(_OWORD *)(v167 + 120);
        *(_WORD *)uint64_t v118 = 768;
        *(_OWORD *)(v118 + 8) = v119;
        swift_storeEnumTagMultiPayload();
        uint64_t v120 = v150;
        swift_storeEnumTagMultiPayload();
        swift_retain();
        uint64_t v121 = v154;
        sub_24D907568(v154, v117);
        uint64_t v159 = (char *)*v162;
        ((void (*)(uint64_t, uint64_t))v159)(v117, v120);
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v122 = (unsigned char *)(v117 + *(int *)(swift_getTupleTypeMetadata2() + 48));
        (*(void (**)(uint64_t, char *, uint64_t))v149)(v117, v147, v158);
        swift_storeEnumTagMultiPayload();
        unsigned char *v122 = 0;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_24D907568(v121, v117);
        ((void (*)(uint64_t, uint64_t))v159)(v117, v120);
        uint64_t v123 = sub_24D983A48();
        swift_retain();
        sub_24D855694(v121, v123);
        swift_release();
        uint64_t v124 = sub_24D983A48();
        swift_retain();
        sub_24D85246C(v121, v124);
        uint64_t v66 = v144;
        swift_release();
        swift_release_n();
      }
      uint64_t v94 = (char *)v164;
    }
    else
    {
      swift_release();
    }
    uint64_t v98 = v166;
    ++v99;
    if (v102 == MEMORY[0x253327DC0](v166, v94)) {
      goto LABEL_44;
    }
  }
  uint64_t v96 = sub_24DCCA778();
  uint64_t v97 = v96;
  uint64_t v102 = v99 - 3;
  if (!__OFADD__(v100, 1)) {
    goto LABEL_31;
  }
LABEL_38:
  __break(1u);
LABEL_39:
  uint64_t v125 = v96;
  swift_bridgeObjectRelease();
  uint64_t v174 = v125;
  sub_24DCC9D48();
  swift_getWitnessTable();
  sub_24DCC9FD8();
  swift_bridgeObjectRelease();
  uint64_t v126 = v170;
  if (!v170)
  {
    swift_release();
    goto LABEL_24;
  }
  int v127 = *(unsigned __int8 *)(v170 + 112);
  if (!*(unsigned char *)(v170 + 112))
  {
    uint64_t v128 = (uint64_t)v152;
    uint64_t v129 = v155;
    if (*(void *)(v170 + 104)) {
      goto LABEL_49;
    }
LABEL_43:
    uint64_t v170 = v153;
    uint64_t v171 = v145;
    uint64_t v172 = v129;
    uint64_t v173 = v144;
    uint64_t v166 = v126;
    uint64_t v165 = (char *)type metadata accessor for JobResult();
    uint64_t v130 = swift_getAssociatedTypeWitness();
    uint64_t v131 = swift_getAssociatedConformanceWitness();
    uint64_t v132 = v158;
    uint64_t v133 = swift_getAssociatedConformanceWitness();
    uint64_t v170 = v130;
    uint64_t v171 = v132;
    uint64_t v172 = v131;
    uint64_t v173 = v133;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v134 = v128 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v97, v130);
    swift_storeEnumTagMultiPayload();
    long long v135 = *(_OWORD *)(v167 + 120);
    *(_WORD *)uint64_t v134 = 768;
    *(_OWORD *)(v134 + 8) = v135;
    swift_storeEnumTagMultiPayload();
    uint64_t v136 = v150;
    swift_storeEnumTagMultiPayload();
    sub_24D907568(v154, v128);
    uint64_t v137 = *(void (**)(uint64_t, uint64_t))(v149 + 8);
    v137(v128, v136);
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v138 = (unsigned char *)(v128 + *(int *)(swift_getTupleTypeMetadata2() + 48));
    uint64_t v139 = v148;
    (*(void (**)(uint64_t, char *, uint64_t))(v148 + 16))(v128, v147, v158);
    swift_storeEnumTagMultiPayload();
    *uint64_t v138 = 0;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v140 = v154;
    sub_24D907568(v154, v128);
    v137(v128, v136);
    uint64_t v141 = sub_24D983A48();
    swift_retain();
    sub_24D855694(v140, v141);
    swift_release();
    uint64_t v142 = sub_24D983A48();
    swift_retain();
    sub_24D85246C(v140, v142);
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v139 + 8))(v147, v158);
    return (*(uint64_t (**)(char *, uint64_t))(v156 + 8))(v151, v157);
  }
  uint64_t v128 = (uint64_t)v152;
  uint64_t v129 = v155;
  if (v127 == 1)
  {
    if (*(void *)(v170 + 96)) {
      goto LABEL_49;
    }
    goto LABEL_43;
  }
  if (v127 != 2) {
    goto LABEL_43;
  }
LABEL_49:
  swift_release();
  swift_release();
LABEL_24:
  (*(void (**)(char *, uint64_t))(v148 + 8))(v94, v158);
  return (*(uint64_t (**)(char *, uint64_t))(v156 + 8))(v151, v157);
}

uint64_t sub_24DC12A54(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v51 = a3;
  uint64_t v6 = *(void *)(*a2 + 88);
  uint64_t v7 = *(void *)(*a2 + 96);
  uint64_t v8 = *(void *)(*a2 + 104);
  uint64_t v55 = *(void *)(*a2 + 80);
  uint64_t v5 = v55;
  uint64_t v56 = v6;
  uint64_t v57 = v7;
  uint64_t v58 = v8;
  uint64_t v48 = type metadata accessor for ReconciliationMutation();
  uint64_t v50 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v49 = (char *)&v41 - v9;
  uint64_t v10 = sub_24DCC9078();
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v47 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v53 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a2[3];
  uint64_t v55 = v5;
  uint64_t v56 = v6;
  uint64_t v57 = v7;
  uint64_t v58 = v8;
  uint64_t v52 = type metadata accessor for ItemJob();
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
  sub_24DA604B8(MetatypeMetadata, MetatypeMetadata);
  swift_allocObject();
  uint64_t v14 = sub_24DCC9C58();
  uint64_t v55 = v5;
  uint64_t v56 = v6;
  uint64_t v57 = v7;
  uint64_t v58 = v8;
  uint64_t *v15 = type metadata accessor for Materialization.EvictItem();
  uint64_t v16 = sub_24D785484(v14);
  uint64_t v17 = v54;
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v12 + 272))(a1, v16);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v17)
  {
    uint64_t v20 = v53;
    uint64_t v54 = 0;
    uint64_t v43 = v8;
    uint64_t v44 = v6;
    uint64_t v45 = v7;
    uint64_t v41 = a1;
    uint64_t v42 = v5;
    uint64_t v59 = v18;
    sub_24DCC9D48();
    swift_getWitnessTable();
    sub_24DCC9FD8();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = v55;
    if (v55)
    {
      id v22 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      swift_retain();
      uint64_t v23 = sub_24DCC9068();
      os_log_type_t v24 = sub_24DCCA148();
      BOOL v25 = os_log_type_enabled(v23, v24);
      uint64_t v52 = v21;
      if (v25)
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        uint64_t v55 = v27;
        *(_DWORD *)uint64_t v26 = 136446210;
        uint64_t v28 = sub_24D982AC4();
        uint64_t v59 = sub_24D418FB4(v28, v29, &v55);
        sub_24DCCA428();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24D3D0000, v23, v24, "✴️  cancelling eviction %{public}s", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v27, -1, -1);
        MEMORY[0x25332B030](v26, -1, -1);
      }
      else
      {

        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v47);
      uint64_t v55 = v42;
      uint64_t v56 = v44;
      uint64_t v57 = v45;
      uint64_t v58 = v43;
      uint64_t v53 = (char *)type metadata accessor for JobResult();
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v31 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v33 = swift_getAssociatedConformanceWitness();
      uint64_t v55 = AssociatedTypeWitness;
      uint64_t v56 = v31;
      uint64_t v57 = AssociatedConformanceWitness;
      uint64_t v58 = v33;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v35 = (uint64_t)v49;
      unint64_t v36 = &v49[*(int *)(TupleTypeMetadata2 + 48)];
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v49, v41, AssociatedTypeWitness);
      swift_storeEnumTagMultiPayload();
      long long v37 = *(_OWORD *)(v52 + 120);
      *(_WORD *)unint64_t v36 = 769;
      *(_OWORD *)(v36 + 8) = v37;
      swift_storeEnumTagMultiPayload();
      uint64_t v38 = v48;
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = v51;
      sub_24D907568(v51, v35);
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v35, v38);
      uint64_t v40 = sub_24D983A48();
      swift_retain();
      sub_24D85246C(v39, v40);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_24DC1305C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DC15764(a1, a2, a3, a4, 0x400000);
}

uint64_t sub_24DC13064()
{
  return 0x6C6169726574616DLL;
}

uint64_t sub_24DC13088(void **a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, void *), uint64_t a5)
{
  uint64_t v6 = v5;
  long long v308 = a4;
  uint64_t v309 = a5;
  uint64_t v294 = a3;
  uint64_t v310 = a1;
  uint64_t v307 = *(char **)v5;
  uint64_t v8 = *((void *)v307 + 76);
  uint64_t v9 = *((void *)v307 + 77);
  uint64_t v10 = (void (*)(void, void, void))*((void *)v307 + 78);
  uint64_t v311 = *((void *)v307 + 75);
  uint64_t v7 = (uint64_t (*)(void, void))v311;
  uint64_t v312 = v8;
  uint64_t v313 = v9;
  uint64_t v314 = v10;
  uint64_t v270 = type metadata accessor for PersistenceTrigger();
  uint64_t v269 = *(void *)(v270 - 8);
  MEMORY[0x270FA5388](v270);
  uint64_t v268 = (char *)&v243 - v11;
  uint64_t v312 = v8;
  uint64_t v313 = v9;
  uint64_t v314 = v10;
  uint64_t v278 = type metadata accessor for ReconciliationMutation();
  uint64_t v279 = *(void *)(v278 - 8);
  MEMORY[0x270FA5388](v278);
  uint64_t v282 = (char *)&v243 - v12;
  uint64_t v267 = sub_24DCC8CE8();
  uint64_t v266 = *(void *)(v267 - 8);
  MEMORY[0x270FA5388](v267);
  uint64_t v265 = (char *)&v243 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v253 = sub_24DCC8288();
  uint64_t v252 = *(void *)(v253 - 8);
  MEMORY[0x270FA5388](v253);
  uint64_t v251 = (char *)&v243 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v311 = AssociatedTypeWitness;
  uint64_t v312 = v16;
  uint64_t v296 = v16;
  uint64_t v287 = AssociatedConformanceWitness;
  uint64_t v313 = AssociatedConformanceWitness;
  uint64_t v314 = (void (*)(void, void, void))v18;
  uint64_t v281 = v18;
  uint64_t v256 = type metadata accessor for ThrottlingKey();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v255 = sub_24DCCA3F8();
  uint64_t v254 = *(void *)(v255 - 8);
  MEMORY[0x270FA5388](v255);
  char v257 = (char *)&v243 - v19;
  uint64_t v274 = sub_24DCCA3F8();
  uint64_t v273 = *(void *)(v274 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v274);
  uint64_t v272 = (char *)&v243 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v263 = (char *)&v243 - v23;
  uint64_t v293 = AssociatedTypeWitness;
  uint64_t v276 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v261 = (char *)&v243 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v259 = (char *)&v243 - v26;
  uint64_t v285 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v288 = *(void *)(v285 - 8);
  MEMORY[0x270FA5388](v285);
  uint64_t v283 = (char *)&v243 - v27;
  uint64_t v292 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v291 = *(void *)(v292 - 8);
  MEMORY[0x270FA5388](v292);
  char v286 = (char *)&v243 - v28;
  uint64_t v29 = type metadata accessor for SnapshotItem();
  uint64_t v290 = (unsigned int (*)(char *, uint64_t, uint64_t))sub_24DCCA3F8();
  uint64_t v289 = *((void *)v290 - 1);
  uint64_t v30 = MEMORY[0x270FA5388](v290);
  uint64_t v303 = v29;
  uint64_t v304 = (char *)&v243 - v31;
  uint64_t v302 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v300 = v10;
  uint64_t v301 = (char *)&v243 - v32;
  uint64_t v298 = v7;
  uint64_t v299 = v8;
  uint64_t v311 = (uint64_t)v7;
  uint64_t v312 = v8;
  uint64_t v297 = v9;
  uint64_t v313 = v9;
  uint64_t v314 = v10;
  uint64_t v295 = type metadata accessor for ItemReconciliation();
  uint64_t v33 = sub_24DCCA3F8();
  uint64_t v305 = *(void *)(v33 - 8);
  uint64_t v306 = v33;
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  unint64_t v260 = (char *)&v243 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v271 = (char *)&v243 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v262 = (char *)&v243 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v264 = (char *)&v243 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v275 = (char *)&v243 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v277 = (char *)&v243 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v280 = (char *)&v243 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v50 = (char *)&v243 - v49;
  uint64_t v51 = MEMORY[0x270FA5388](v48);
  uint64_t v53 = (char *)&v243 - v52;
  uint64_t v54 = MEMORY[0x270FA5388](v51);
  uint64_t v56 = (char *)&v243 - v55;
  uint64_t v57 = MEMORY[0x270FA5388](v54);
  uint64_t v59 = (char *)&v243 - v58;
  uint64_t v60 = MEMORY[0x270FA5388](v57);
  uint64_t v62 = (char *)&v243 - v61;
  uint64_t v63 = MEMORY[0x270FA5388](v60);
  uint64_t v65 = (char *)&v243 - v64;
  MEMORY[0x270FA5388](v63);
  uint64_t v67 = (char *)&v243 - v66;
  uint64_t v68 = *((void *)v307 + 72);
  uint64_t v307 = v6;
  uint64_t v69 = (uint64_t)&v6[v68];
  sub_24D4759C8(v69, (uint64_t)&v243 - v66);
  uint64_t v250 = v65;
  char v246 = v62;
  uint64_t v247 = v59;
  uint64_t v248 = v56;
  unint64_t v249 = v53;
  double v245 = v50;
  char v284 = v67;
  uint64_t v70 = v304;
  (*(void (**)(uint64_t, uint64_t))(*v310[4] + 240))(v69, 1);
  uint64_t v71 = v302;
  uint64_t v72 = v303;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v302 + 48))(v70, 1, v303) == 1)
  {
    (*(void (**)(char *, unsigned int (*)(char *, uint64_t, uint64_t)))(v289 + 8))(v70, v290);
LABEL_3:
    uint64_t v73 = v307;
    uint64_t v75 = v299;
    uint64_t v74 = v300;
    uint64_t v76 = v297;
    uint64_t v77 = v298;
    if ((v307[138] & 2) != 0)
    {
      uint64_t v311 = (uint64_t)v298;
      uint64_t v312 = v299;
      uint64_t v313 = v297;
      uint64_t v314 = v300;
      type metadata accessor for JobResult();
      uint64_t v311 = (uint64_t)v77;
      uint64_t v312 = v75;
      uint64_t v313 = v76;
      uint64_t v314 = v74;
      type metadata accessor for DiskImport.MarkDirectorDiskImportAsDone();
      uint64_t v78 = sub_24D732E04(v69, *((void *)v73 + 15), *((void *)v73 + 16), 0x20000);
      sub_24D85246C(v294, v78);
      swift_release();
    }
    type metadata accessor for FileTreeError();
    swift_getWitnessTable();
    uint64_t v79 = (void *)swift_allocError();
    uint64_t v81 = v80;
    uint64_t v82 = v69;
    uint64_t v83 = swift_getAssociatedTypeWitness();
    uint64_t v84 = swift_getAssociatedTypeWitness();
    uint64_t v85 = swift_getAssociatedConformanceWitness();
    uint64_t v86 = swift_getAssociatedConformanceWitness();
    uint64_t v311 = v83;
    uint64_t v312 = v84;
    uint64_t v313 = v85;
    uint64_t v314 = (void (*)(void, void, void))v86;
    uint64_t v87 = type metadata accessor for FileItemVersion();
    sub_24DCCA3F8();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
    uint64_t v88 = v296;
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    uint64_t v90 = v81 + *(int *)(TupleTypeMetadata3 + 48);
    uint64_t v91 = *(int *)(TupleTypeMetadata3 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 16))(v81, v82, v88);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v90, 1, 1, v87);
    *(void *)(v81 + v91) = 0;
    swift_storeEnumTagMultiPayload();
    v308(0, 0, 0, v79);

    return (*(uint64_t (**)(char *, uint64_t))(v305 + 8))(v284, v306);
  }
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v301, v70, v72);
  uint64_t v93 = v305;
  uint64_t v94 = v306;
  uint64_t v95 = v305 + 16;
  uint64_t v96 = (uint64_t)v250;
  uint64_t v289 = *(void *)(v305 + 16);
  ((void (*)(char *, char *, uint64_t))v289)(v250, v284, v306);
  uint64_t v97 = v295;
  uint64_t v98 = *(void *)(v295 - 8);
  uint64_t v99 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48);
  uint64_t v304 = (char *)(v98 + 48);
  uint64_t v290 = v99;
  if (v99((char *)v96, 1, v295) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v96, v94);
    uint64_t v100 = v292;
    uint64_t v101 = v291;
  }
  else
  {
    uint64_t v101 = v291;
    uint64_t v102 = v286;
    uint64_t v100 = v292;
    (*(void (**)(char *, uint64_t, uint64_t))(v291 + 16))(v286, v96, v292);
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v96, v97);
    uint64_t v103 = *(void *)&v102[*(int *)(v100 + 36)];
    (*(void (**)(char *, uint64_t))(v101 + 8))(v102, v100);
    if (v103)
    {
      (*(void (**)(char *, uint64_t))(v302 + 8))(v301, v72);
      goto LABEL_3;
    }
  }
  uint64_t v250 = (char *)v69;
  uint64_t v104 = v246;
  uint64_t v105 = v306;
  uint64_t v106 = (void (*)(char *, char *, uint64_t))v289;
  ((void (*)(char *, char *, uint64_t))v289)(v246, v284, v306);
  uint64_t v107 = v97;
  if (v290(v104, 1, v97) == 1)
  {
    uint64_t v108 = v305;
    (*(void (**)(char *, uint64_t))(v305 + 8))(v104, v105);
    LODWORD(v292) = 6;
  }
  else
  {
    uint64_t v109 = v104;
    uint64_t v110 = v286;
    (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v286, v109, v100);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v109, v107);
    LODWORD(v292) = v110[*(int *)(v100 + 56)];
    (*(void (**)(char *, uint64_t))(v101 + 8))(v110, v100);
    uint64_t v108 = v305;
  }
  uint64_t v111 = v247;
  v106(v247, v284, v105);
  if (v290(v111, 1, v107) == 1)
  {
    (*(void (**)(char *, uint64_t))(v108 + 8))(v111, v105);
    LODWORD(v291) = 0;
  }
  else
  {
    uint64_t v112 = &v111[*(int *)(v107 + 52)];
    uint64_t v113 = v95;
    uint64_t v114 = v288;
    uint64_t v115 = v98;
    uint64_t v116 = v283;
    uint64_t v117 = v107;
    uint64_t v118 = v285;
    (*(void (**)(char *, char *, uint64_t))(v288 + 16))(v283, v112, v285);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v111, v117);
    LODWORD(v117) = v116[*(int *)(v118 + 52)];
    uint64_t v119 = v114;
    uint64_t v95 = v113;
    uint64_t v120 = v116;
    uint64_t v98 = v115;
    uint64_t v106 = (void (*)(char *, char *, uint64_t))v289;
    (*(void (**)(char *, uint64_t))(v119 + 8))(v120, v118);
    LODWORD(v291) = v117 == 4;
  }
  uint64_t v121 = v249;
  uint64_t v122 = v248;
  int v123 = v292;
  if (v292 == 4)
  {
    v106(v248, v284, v105);
    uint64_t v124 = v105;
  }
  else
  {
    v106(v248, v284, v105);
    uint64_t v124 = v105;
    if (v123 != 6)
    {
      uint64_t v133 = *(void (**)(char *, uint64_t))(v108 + 8);
      v133(v122, v105);
      uint64_t v134 = v280;
      v106(v280, v284, v124);
      goto LABEL_28;
    }
  }
  uint64_t v125 = v122;
  uint64_t v126 = *(void (**)(char *, char *, uint64_t))(v108 + 32);
  v126(v121, v125, v124);
  if (v123 == 4)
  {
    uint64_t v244 = v98;
    int v127 = v245;
    v126(v245, v121, v124);
    uint64_t v128 = v295;
    if (v290(v127, 1, v295) == 1)
    {
      uint64_t v129 = v127;
      uint64_t v130 = *(void (**)(char *, uint64_t))(v108 + 8);
      v130(v129, v124);
      uint64_t v98 = v244;
      goto LABEL_22;
    }
    long long v135 = &v127[*(int *)(v128 + 52)];
    uint64_t v243 = v95;
    uint64_t v136 = v288;
    uint64_t v137 = v283;
    uint64_t v138 = v127;
    uint64_t v139 = v285;
    (*(void (**)(char *, char *, uint64_t))(v288 + 16))(v283, v135, v285);
    (*(void (**)(char *, uint64_t))(v244 + 8))(v138, v128);
    LODWORD(v138) = v137[*(int *)(v139 + 52)];
    uint64_t v140 = v136;
    uint64_t v95 = v243;
    (*(void (**)(char *, uint64_t))(v140 + 8))(v137, v139);
    uint64_t v134 = v280;
    ((void (*)(char *, char *, uint64_t))v289)(v280, v284, v124);
    if (v138 != 3)
    {
      uint64_t v132 = v277;
      v126(v277, v134, v124);
      uint64_t v98 = v244;
      goto LABEL_30;
    }
    uint64_t v133 = *(void (**)(char *, uint64_t))(v108 + 8);
    uint64_t v98 = v244;
LABEL_28:
    char v141 = v291;
    v133(v134, v124);
    BOOL v142 = 1;
    uint64_t v143 = v124;
    uint64_t v144 = v303;
    uint64_t v145 = (void (*)(void, void, void))v287;
    goto LABEL_35;
  }
  uint64_t v130 = *(void (**)(char *, uint64_t))(v108 + 8);
  v130(v121, v124);
LABEL_22:
  uint64_t v131 = v280;
  v106(v280, v284, v124);
  uint64_t v132 = v277;
  v126(v277, v131, v124);
  if (v292 != 4)
  {
    v130(v132, v124);
    goto LABEL_32;
  }
LABEL_30:
  uint64_t v146 = v132;
  uint64_t v147 = v275;
  v126(v275, v146, v124);
  uint64_t v148 = v295;
  unsigned int v149 = v290(v147, 1, v295);
  uint64_t v150 = v288;
  if (v149 != 1)
  {
    uint64_t v151 = v283;
    uint64_t v152 = v285;
    (*(void (**)(char *, char *, uint64_t))(v288 + 16))(v283, &v147[*(int *)(v148 + 52)], v285);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v147, v148);
    uint64_t v153 = v150;
    int v154 = v151[*(int *)(v152 + 52)];
    (*(void (**)(char *, uint64_t))(v153 + 8))(v151, v152);
    BOOL v142 = v154 == 1;
    goto LABEL_34;
  }
  (*(void (**)(char *, uint64_t))(v108 + 8))(v147, v124);
LABEL_32:
  BOOL v142 = 0;
LABEL_34:
  uint64_t v143 = v124;
  uint64_t v144 = v303;
  uint64_t v145 = (void (*)(void, void, void))v287;
  char v141 = v291;
LABEL_35:
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v156 = v144;
  uint64_t v157 = v301;
  if (!(v141 & 1 | (((sub_24D98BC10(v156, WitnessTable) | v142) & 1) == 0)))
  {
    uint64_t v170 = v307;
    uint64_t v171 = v282;
    uint64_t v172 = v293;
    if ((v307[138] & 2) == 0)
    {
LABEL_39:
      uint64_t v244 = v98;
      uint64_t v243 = v95;
      uint64_t v311 = (uint64_t)v298;
      uint64_t v312 = v299;
      uint64_t v313 = v297;
      uint64_t v314 = v300;
      type metadata accessor for JobResult();
      uint64_t v173 = v296;
      uint64_t v311 = v296;
      uint64_t v312 = v172;
      uint64_t v313 = v281;
      uint64_t v314 = (void (*)(void, void, void))v287;
      uint64_t v174 = (void **)type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v175 = (uint64_t)v171;
      uint64_t v176 = &v171[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v173 - 8) + 16))(v175, v250, v173);
      uint64_t v310 = v174;
      swift_storeEnumTagMultiPayload();
      *(_WORD *)uint64_t v176 = 768;
      *(_OWORD *)(v176 + 8) = *(_OWORD *)(v170 + 120);
      swift_storeEnumTagMultiPayload();
      uint64_t v177 = v278;
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v294, v175);
      uint64_t v179 = v279 + 8;
      unint64_t v178 = *(void (**)(uint64_t, uint64_t))(v279 + 8);
      v178(v175, v177);
      uint64_t v180 = v271;
      ((void (*)(char *, char *, uint64_t))v289)(v271, v284, v143);
      uint64_t v181 = v295;
      if (v290(v180, 1, v295) == 1)
      {
        (*(void (**)(char *, uint64_t))(v108 + 8))(v180, v143);
        uint64_t v182 = v272;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v276 + 56))(v272, 1, 1, v293);
        double v183 = v308;
        uint64_t v184 = v274;
        uint64_t v185 = v273;
LABEL_47:
        (*(void (**)(char *, uint64_t))(v185 + 8))(v182, v184);
        uint64_t v200 = v305;
LABEL_48:
        uint64_t v201 = v284;
LABEL_49:
        sub_24D472A28();
        id v202 = (void *)swift_allocError();
        unsigned char *v203 = 3;
        v183(0, 0, 0, v202);

        (*(void (**)(char *, uint64_t))(v302 + 8))(v301, v303);
        return (*(uint64_t (**)(char *, uint64_t))(v200 + 8))(v201, v143);
      }
      uint64_t v307 = (char *)v178;
      uint64_t v279 = v179;
      uint64_t v192 = v288;
      uint64_t v193 = v244;
      id v194 = v283;
      uint64_t v195 = v285;
      (*(void (**)(char *, char *, uint64_t))(v288 + 16))(v283, &v180[*(int *)(v181 + 52)], v285);
      uint64_t v196 = *(void (**)(void, void))(v193 + 8);
      uint64_t v244 = v193 + 8;
      uint64_t v298 = (uint64_t (*)(void, void))v196;
      v196(v180, v181);
      uint64_t v185 = v273;
      uint64_t v182 = v272;
      uint64_t v184 = v274;
      (*(void (**)(char *, char *, uint64_t))(v273 + 16))(v272, v194, v274);
      (*(void (**)(char *, uint64_t))(v192 + 8))(v194, v195);
      uint64_t v197 = v276;
      uint64_t v198 = v293;
      int v199 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v276 + 48))(v182, 1, v293);
      double v183 = v308;
      if (v199 == 1) {
        goto LABEL_47;
      }
      uint64_t v204 = v261;
      (*(void (**)(char *, char *, uint64_t))(v197 + 32))(v261, v182, v198);
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v299 = swift_getTupleTypeMetadata2();
      uint64_t v205 = (uint64_t)v282;
      uint64_t v206 = &v282[*(int *)(v299 + 48)];
      uint64_t v300 = *(void (**)(void, void, void))(v197 + 16);
      v300(v282, v204, v198);
      swift_storeEnumTagMultiPayload();
      char *v206 = 0;
      uint64_t v207 = v306;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v294, v205);
      ((void (*)(uint64_t, uint64_t))v307)(v205, v177);
      uint64_t v208 = v260;
      ((void (*)(char *, char *, uint64_t))v289)(v260, v284, v207);
      uint64_t v209 = v295;
      if (v290(v208, 1, v295) == 1)
      {
        uint64_t v200 = v305;
        (*(void (**)(char *, uint64_t))(v305 + 8))(v208, v207);
LABEL_64:
        (*(void (**)(char *, uint64_t))(v197 + 8))(v204, v293);
        double v183 = v308;
        uint64_t v143 = v306;
        goto LABEL_48;
      }
      int v232 = v208[*(int *)(v209 + 56)];
      uint64_t result = v298(v208, v209);
      uint64_t v200 = v305;
      if (v232 == 1) {
        goto LABEL_64;
      }
      uint64_t v201 = v284;
      if (v232 != 4)
      {
        uint64_t v233 = (uint64_t)v282;
        uint64_t v234 = &v282[*(int *)(v299 + 48)];
        v300(v282, v204, v293);
        swift_storeEnumTagMultiPayload();
        *(void *)uint64_t v234 = 0;
        *((void *)v234 + 1) = 0;
        *((void *)v234 + 2) = 0xB000000000000000;
        *(_OWORD *)(v234 + 24) = 0u;
        *(_OWORD *)(v234 + 40) = 0u;
        v234[56] = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v235 = v278;
        swift_storeEnumTagMultiPayload();
        sub_24D907568(v294, v233);
        ((void (*)(uint64_t, uint64_t))v307)(v233, v235);
        (*(void (**)(char *, uint64_t))(v276 + 8))(v204, v293);
        double v183 = v308;
        uint64_t v143 = v306;
        goto LABEL_49;
      }
LABEL_75:
      __break(1u);
      return result;
    }
    if ((*(uint64_t (**)(uint64_t))(v281 + 72))(v296))
    {
      uint64_t v187 = v264;
      ((void (*)(char *, char *, uint64_t))v289)(v264, v284, v143);
      uint64_t v188 = v295;
      unsigned int v189 = v290(v187, 1, v295);
      uint64_t v244 = v98;
      if (v189 == 1)
      {
        (*(void (**)(char *, uint64_t))(v108 + 8))(v187, v143);
        uint64_t v190 = v276;
        uint64_t v191 = v285;
      }
      else
      {
        uint64_t v210 = &v187[*(int *)(v188 + 52)];
        uint64_t v211 = v288;
        uint64_t v212 = v98;
        uint64_t v213 = v283;
        unint64_t v214 = v187;
        uint64_t v191 = v285;
        (*(void (**)(char *, char *, uint64_t))(v288 + 16))(v283, v210, v285);
        uint64_t v215 = v214;
        uint64_t v172 = v293;
        (*(void (**)(char *, uint64_t))(v212 + 8))(v215, v188);
        LODWORD(v212) = v213[*(int *)(v191 + 52)];
        (*(void (**)(char *, uint64_t))(v211 + 8))(v213, v191);
        BOOL v216 = v212 == 2;
        uint64_t v157 = v301;
        uint64_t v190 = v276;
        if (v216) {
          goto LABEL_57;
        }
      }
      uint64_t v217 = v262;
      ((void (*)(char *, char *, uint64_t))v289)(v262, v284, v143);
      if (v290(v217, 1, v188) == 1)
      {
        (*(void (**)(char *, uint64_t))(v108 + 8))(v217, v143);
        uint64_t v218 = v263;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v190 + 56))(v263, 1, 1, v172);
LABEL_56:
        (*(void (**)(char *, uint64_t))(v273 + 8))(v218, v274);
        goto LABEL_57;
      }
      uint64_t v243 = v95;
      uint64_t v219 = &v217[*(int *)(v188 + 52)];
      uint64_t v220 = v288;
      uint64_t v221 = v217;
      int64_t v222 = v283;
      (*(void (**)(char *, char *, uint64_t))(v288 + 16))(v283, v219, v191);
      char v223 = v221;
      uint64_t v224 = v276;
      (*(void (**)(char *, uint64_t))(v244 + 8))(v223, v188);
      uint64_t v218 = v263;
      (*(void (**)(char *, char *, uint64_t))(v273 + 16))(v263, v222, v274);
      (*(void (**)(char *, uint64_t))(v220 + 8))(v222, v191);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v224 + 48))(v218, 1, v172) == 1) {
        goto LABEL_56;
      }
      uint64_t v236 = v259;
      (*(void (**)(char *, char *, uint64_t))(v224 + 32))(v259, v218, v172);
      uint64_t v311 = (*(uint64_t (**)(char *, uint64_t))(*v310[3] + 336))(v236, 6);
      uint64_t v237 = TupleTypeMetadata2;
      sub_24DCC9D48();
      swift_getWitnessTable();
      unint64_t v238 = v257;
      sub_24DCC9FD8();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v237 - 8) + 48))(v238, 1, v237) == 1)
      {
        (*(void (**)(char *, uint64_t))(v254 + 8))(v238, v255);
LABEL_71:
        (*(void (**)(char *, uint64_t))(v224 + 8))(v259, v172);
        uint64_t v157 = v301;
        goto LABEL_57;
      }
      uint64_t v239 = *(void **)&v238[*(int *)(v237 + 48) + 40];
      (*(void (**)(char *))(*(void *)(v256 - 8) + 8))(v238);
      if (!v239)
      {

        swift_bridgeObjectRelease();
        goto LABEL_71;
      }
      id v240 = v239;
      uint64_t v241 = v251;
      sub_24DCC8158();
      sub_24D7B896C();
      uint64_t v242 = v253;
      LODWORD(v292) = sub_24DCC86A8();

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v252 + 8))(v241, v242);
      (*(void (**)(char *, uint64_t))(v224 + 8))(v259, v172);
      uint64_t v157 = v301;
      uint64_t v171 = v282;
      uint64_t v170 = v307;
      uint64_t v98 = v244;
      uint64_t v95 = v243;
      if (v292) {
        goto LABEL_39;
      }
    }
LABEL_57:
    uint64_t v225 = v265;
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v227 = v226;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v266 + 8))(v225, v267);
    double v228 = v227 * 1000000000.0;
    if ((~COERCE__INT64(v227 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v228 > -9.22337204e18)
      {
        if (v228 < 9.22337204e18)
        {
          sub_24DC0F868((uint64_t)v250, 0x2000000000000000, (uint64_t)v228, 0x20000, v310, 0, v294);
          sub_24D472A28();
          uint64_t v229 = v157;
          uint64_t v230 = (void *)swift_allocError();
          *uint64_t v231 = 5;
          v308(0, 0, 0, v230);

          (*(void (**)(char *, uint64_t))(v302 + 8))(v229, v303);
          return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v284, v143);
        }
        goto LABEL_74;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  uint64_t v311 = (uint64_t)v298;
  uint64_t v312 = v299;
  uint64_t v313 = v297;
  uint64_t v314 = v300;
  uint64_t v158 = type metadata accessor for JobResult();
  uint64_t v159 = v296;
  uint64_t v311 = v296;
  uint64_t v312 = v293;
  uint64_t v313 = v281;
  uint64_t v314 = v145;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v160 = swift_getTupleTypeMetadata2();
  uint64_t v161 = (uint64_t)v282;
  uint64_t v162 = &v282[*(int *)(v160 + 48)];
  uint64_t v163 = *(void *)(v159 - 8);
  uint64_t v164 = (uint64_t)v250;
  uint64_t v304 = *(char **)(v163 + 16);
  uint64_t v295 = v163 + 16;
  ((void (*)(char *, char *, uint64_t))v304)(v282, v250, v159);
  swift_storeEnumTagMultiPayload();
  *(_WORD *)uint64_t v162 = 768;
  uint64_t v165 = v307;
  *(_OWORD *)(v162 + 8) = *(_OWORD *)(v307 + 120);
  swift_storeEnumTagMultiPayload();
  uint64_t v166 = v278;
  swift_storeEnumTagMultiPayload();
  uint64_t v167 = v294;
  uint64_t v305 = v158;
  sub_24D907568(v294, v161);
  (*(void (**)(uint64_t, uint64_t))(v279 + 8))(v161, v166);
  if ((v165[138] & 2) != 0)
  {
    uint64_t v311 = (uint64_t)v298;
    uint64_t v312 = v299;
    uint64_t v313 = v297;
    uint64_t v314 = v300;
    type metadata accessor for DiskImport.MarkDirectorDiskImportAsDone();
    uint64_t v186 = sub_24D732E04(v164, *((void *)v165 + 15), *((void *)v165 + 16), 0x20000);
    sub_24D85246C(v167, v186);
    swift_release();
  }
  else
  {
    uint64_t v168 = v268;
    ((void (*)(char *, uint64_t, uint64_t))v304)(v268, v164, v159);
    swift_storeEnumTagMultiPayload();
    uint64_t v169 = v270;
    swift_storeEnumTagMultiPayload();
    ((void (*)(char *))(*v310)[39])(v168);
    (*(void (**)(char *, uint64_t))(v269 + 8))(v168, v169);
  }
  v308(0, 0, 0, 0);
  (*(void (**)(char *, uint64_t))(v302 + 8))(v301, v303);
  return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v284, v306);
}

uint64_t type metadata accessor for Materialization.MaterializeItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24DC15748()
{
  return 0x7463697665;
}

uint64_t sub_24DC1575C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DC15764(a1, a2, a3, a4, 64);
}

uint64_t sub_24DC15764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_24DC1BC88(a1, a2, a3, a4, a5);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v6;
}

uint64_t sub_24DC157E8@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ThrottlingKey();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

void sub_24DC15954(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, void *), uint64_t a5)
{
  uint64_t v38 = a5;
  uint64_t v39 = a4;
  uint64_t v45 = a3;
  uint64_t v46 = a1;
  uint64_t v6 = *v5;
  uint64_t v7 = *(void *)(*v5 + 600);
  uint64_t v8 = *(void *)(*v5 + 616);
  uint64_t v37 = type metadata accessor for SnapshotItem();
  uint64_t v9 = sub_24DCCA3F8();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v40 = (char *)&v34 - v10;
  uint64_t v41 = v6;
  uint64_t v11 = *(void *)(v6 + 608);
  uint64_t v12 = *(void *)(v6 + 624);
  uint64_t v47 = v7;
  uint64_t v48 = v11;
  uint64_t v49 = v8;
  uint64_t v50 = v12;
  uint64_t v13 = type metadata accessor for ReconciliationMutation();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v43 = v13;
  uint64_t v44 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v34 - v15;
  uint64_t v47 = v7;
  uint64_t v48 = v11;
  uint64_t v49 = v8;
  uint64_t v50 = v12;
  uint64_t v42 = type metadata accessor for JobResult();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v20 = v40;
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  uint64_t v47 = AssociatedTypeWitness;
  uint64_t v48 = v18;
  uint64_t v49 = AssociatedConformanceWitness;
  uint64_t v50 = v21;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v22 = &v16[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  uint64_t v23 = (uint64_t)v5 + *(void *)(v41 + 576);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v16, v23, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  *(_WORD *)uint64_t v22 = 769;
  *(_OWORD *)(v22 + 8) = *(_OWORD *)(v5 + 15);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = v43;
  swift_storeEnumTagMultiPayload();
  sub_24D907568(v45, (uint64_t)v16);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v24);
  (*(void (**)(uint64_t, uint64_t))(**(void **)(v46 + 32) + 240))(v23, 1);
  uint64_t v26 = v35;
  uint64_t v25 = v36;
  uint64_t v27 = v39;
  uint64_t v28 = v37;
  uint64_t v29 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v20, 1, v37) == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v25);
  }
  else
  {
    uint64_t WitnessTable = swift_getWitnessTable();
    char v31 = sub_24D98BC10(v28, WitnessTable);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v28);
    if ((v31 & 1) == 0)
    {
      sub_24D472A28();
      uint64_t v32 = (void *)swift_allocError();
      *uint64_t v33 = 4;
      v27(0, 0, 0, v32);

      return;
    }
  }
  v27(0, 0, 0, 0);
}

uint64_t type metadata accessor for Materialization.EvictItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24DC15E78()
{
  return 0x68632D7463697665;
}

uint64_t sub_24DC15E9C(void **a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void, void, void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v37 = a4;
  uint64_t v41 = a3;
  uint64_t v10 = *v5;
  uint64_t v11 = type metadata accessor for SnapshotItem();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v34 - v16;
  uint64_t v40 = a1;
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(*a1[4] + 472))((char *)v6 + *(void *)(v10 + 576), a2);
  uint64_t v19 = v18;
  uint64_t v20 = v37;
  uint64_t v45 = v17;
  uint64_t v35 = v13;
  uint64_t v36 = v21;
  if ((v6[17] & 0x20000000000) != 0) {
    int v22 = 2;
  }
  else {
    int v22 = 4;
  }
  int v39 = v22;
  if (MEMORY[0x253327DC0](v18, v11))
  {
    uint64_t v38 = v6;
    uint64_t v23 = 0;
    uint64_t v43 = (void (**)(char *, char *, uint64_t))(v12 + 32);
    uint64_t v44 = (void (**)(char *, uint64_t *, uint64_t))(v12 + 16);
    uint64_t v42 = (void (**)(char *, uint64_t))(v12 + 8);
    while (1)
    {
      char v24 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v24)
      {
        uint64_t v25 = v45;
        (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v45, v19+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v23, v11);
        uint64_t v26 = v23 + 1;
        if (__OFADD__(v23, 1)) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t result = sub_24DCCA778();
        if (v35 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v46 = result;
        char v31 = v45;
        (*v44)(v45, &v46, v11);
        uint64_t v25 = v31;
        swift_unknownObjectRelease();
        uint64_t v26 = v23 + 1;
        if (__OFADD__(v23, 1))
        {
LABEL_14:
          __break(1u);
LABEL_15:
          swift_bridgeObjectRelease();
          uint64_t v32 = v37;
          goto LABEL_17;
        }
      }
      uint64_t v27 = a5;
      (*v43)(v15, v25, v11);
      uint64_t WitnessTable = swift_getWitnessTable();
      if (sub_24D98BCC4(v11, WitnessTable) != 2)
      {
        int v29 = sub_24D98BCC4(v11, WitnessTable);
        sub_24DC1046C((uint64_t)v15, v29, v38[15], v38[16], v38[17], v40, v39, v41);
      }
      a5 = v27;
      (*v42)(v15, v11);
      ++v23;
      if (v26 == MEMORY[0x253327DC0](v19, v11)) {
        goto LABEL_15;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v32 = v20;
LABEL_17:
  uint64_t v33 = swift_retain();
  v32(v33, 0, 0, 0);
  return swift_release_n();
}

uint64_t type metadata accessor for Materialization.EvictChildren()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24DC162DC()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_24DC162F8(char a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = v2;
  swift_retain();
  swift_retain();
  sub_24D6E6088((uint64_t)"requestCompleted(isIgnored:db:)", 31, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_24DC1C698, v5);

  return swift_release();
}

uint64_t sub_24DC163D0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)a2 + 88);
  uint64_t v7 = *(void *)(*(void *)a2 + 96);
  uint64_t v8 = *(void *)(*(void *)a2 + 104);
  uint64_t v27 = *(void *)(*(void *)a2 + 80);
  uint64_t v28 = v6;
  uint64_t v29 = v7;
  uint64_t v30 = v8;
  uint64_t v9 = type metadata accessor for PersistenceTrigger();
  uint64_t v31 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v24 - v10;
  if (a1)
  {
    uint64_t v12 = a3 + *(void *)(*(void *)a3 + 576);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v24 = v9;
    uint64_t v14 = AssociatedTypeWitness;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v11, v12, AssociatedTypeWitness);
    uint64_t v15 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v25 = a3;
    uint64_t v17 = AssociatedConformanceWitness;
    uint64_t v18 = swift_getAssociatedConformanceWitness();
    uint64_t v27 = v14;
    uint64_t v28 = v15;
    uint64_t v26 = v15;
    uint64_t v29 = v17;
    uint64_t v30 = v18;
    uint64_t v19 = v24;
    a3 = v25;
    type metadata accessor for ReconciliationID();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unsigned char *))(*(void *)a2 + 312))(v11);
    (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v11, v19);
  }
  else
  {
    uint64_t v26 = swift_getAssociatedTypeWitness();
    uint64_t v18 = swift_getAssociatedConformanceWitness();
    uint64_t v19 = v9;
  }
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  uint64_t v27 = v20;
  uint64_t v28 = v26;
  uint64_t v29 = v21;
  uint64_t v30 = v18;
  type metadata accessor for ReconciliationID();
  int v22 = &v11[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  *uint64_t v11 = sub_24DB1702C();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v22, a3 + *(void *)(*(void *)a3 + 576), v20);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned char *))(*(void *)a2 + 312))(v11);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v31 + 8))(v11, v19);
}

uint64_t sub_24DC16828(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v99 = a5;
  uint64_t v100 = a4;
  uint64_t v83 = a3;
  uint64_t v95 = a2;
  uint64_t v98 = a1;
  uint64_t v82 = (void *)*v5;
  uint64_t v6 = v82;
  uint64_t v7 = v82[76];
  uint64_t v97 = v82[78];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = v82[77];
  uint64_t v10 = v82[75];
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = swift_getAssociatedConformanceWitness();
  uint64_t v87 = type metadata accessor for ReconciliationID();
  MEMORY[0x270FA5388](v87);
  uint64_t v85 = (char *)&v79 - v14;
  uint64_t v90 = AssociatedTypeWitness;
  uint64_t v91 = v11;
  uint64_t v101 = v11;
  uint64_t v102 = AssociatedTypeWitness;
  uint64_t v15 = v5;
  uint64_t v88 = v13;
  uint64_t v89 = AssociatedConformanceWitness;
  uint64_t v103 = v13;
  uint64_t v104 = AssociatedConformanceWitness;
  uint64_t v86 = type metadata accessor for ReconciliationID();
  MEMORY[0x270FA5388](v86);
  uint64_t v84 = (char *)&v79 - v16;
  uint64_t v81 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v80 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  uint64_t v79 = (char *)&v79 - v17;
  uint64_t v92 = v10;
  uint64_t v93 = v9;
  uint64_t v101 = v10;
  uint64_t v102 = v7;
  uint64_t v94 = v7;
  uint64_t v103 = v9;
  uint64_t v104 = v97;
  uint64_t v18 = type metadata accessor for ItemReconciliation();
  uint64_t v19 = sub_24DCCA3F8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v96 = (uint64_t)&v79 - v24;
  uint64_t v25 = v98[4];
  uint64_t v26 = (uint64_t)v15 + v6[72];
  if (((*(uint64_t (**)(uint64_t))(*(void *)v25 + 424))(v26) & 1) == 0
    && ((*(uint64_t (**)(uint64_t))(*(void *)v25 + 432))(v26) & 1) == 0)
  {
    return ((uint64_t (*)(void, unint64_t, unint64_t, void))v100)(0, 0xD000000000000017, 0x800000024DD23100, 0);
  }
  if (v95)
  {
    sub_24D4759C8(v26, v96);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, v96, v19);
    uint64_t v27 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v23, 1, v18) == 1)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
    }
    else
    {
      uint64_t v61 = v80;
      uint64_t v62 = v79;
      uint64_t v63 = v81;
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v79, v23, v81);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v18);
      int v64 = v62[*(int *)(v63 + 52)];
      (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v63);
      if (v64 == 2)
      {
        ((void (*)(void, void, void, void))v100)(0, 0, 0, 0);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v96, v19);
      }
    }
    uint64_t v66 = v92;
    uint64_t v65 = v93;
    uint64_t v67 = v94;
    uint64_t v101 = v92;
    uint64_t v102 = v94;
    uint64_t v68 = v97;
    uint64_t v103 = v93;
    uint64_t v104 = v97;
    type metadata accessor for JobResult();
    uint64_t v101 = v66;
    uint64_t v102 = v67;
    uint64_t v103 = v65;
    uint64_t v104 = v68;
    type metadata accessor for Ingestion.ReSnapshotChildren();
    uint64_t v69 = sub_24DC09654(v26, v15[15], v15[16], v15[17]);
    uint64_t v70 = v19;
    uint64_t v71 = v83;
    sub_24D85246C(v83, v69);
    swift_release();
    uint64_t v72 = v15[15];
    uint64_t v73 = v15[16];
    uint64_t v74 = v26;
    uint64_t v75 = v15[17];
    swift_allocObject();
    uint64_t v76 = sub_24D983960(v74, v72, v73, v75);
    sub_24D85246C(v71, v76);
    swift_release();
    sub_24D472A28();
    uint64_t v77 = (void *)swift_allocError();
    *uint64_t v78 = 3;
    ((void (*)(void, void, void, void *))v100)(0, 0, 0, v77);

    return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v96, v70);
  }
  else
  {
    if (sub_24D8903D0())
    {
      uint64_t v101 = v92;
      uint64_t v102 = v94;
      uint64_t v103 = v93;
      uint64_t v104 = v97;
      type metadata accessor for ConcreteDatabase();
      uint64_t v29 = v98;
      uint64_t v97 = swift_dynamicCastClassUnconditional();
      uint64_t v30 = v91;
      uint64_t v101 = v91;
      uint64_t v102 = v90;
      uint64_t v103 = v88;
      uint64_t v104 = v89;
      type metadata accessor for FPFSID();
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
      uint64_t v32 = (uint64_t)v84;
      v31(v84, v26, v30);
      swift_storeEnumTagMultiPayload();
      uint64_t v33 = sub_24D9BE5CC(v32);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v35 = swift_allocBox();
      uint64_t v37 = v36;
      uint64_t v38 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v39 = v30;
      uint64_t v40 = v33;
      uint64_t v41 = v35;
      v31(v36, v26, v39);
      swift_storeEnumTagMultiPayload();
      *(void *)&v37[v38] = v15[15];
      id v42 = objc_allocWithZone(MEMORY[0x263F08AB8]);
      swift_retain();
      id v43 = objc_msgSend(v42, sel_init);
      uint64_t v44 = (void *)swift_allocObject();
      v44[2] = v97;
      v44[3] = v15;
      v44[4] = v29;
      swift_retain_n();
      swift_retain();
      sub_24D44E248(v40, 0, 0, 1, v41 | 0x5000000000000002, v43, (uint64_t)sub_24DC1C63C, (uint64_t)v44);
    }
    else
    {
      uint64_t v45 = v26;
      uint64_t v46 = v98;
      uint64_t v96 = (*(uint64_t (**)(void))(*v98 + 176))();
      uint64_t v101 = v94;
      uint64_t v102 = v92;
      uint64_t v103 = v97;
      uint64_t v104 = v93;
      type metadata accessor for ConcreteDatabase();
      uint64_t v97 = swift_dynamicCastClassUnconditional();
      uint64_t v47 = v91;
      uint64_t v101 = v90;
      uint64_t v102 = v91;
      uint64_t v103 = v89;
      uint64_t v104 = v88;
      type metadata accessor for FPFSID();
      uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16);
      uint64_t v49 = (uint64_t)v85;
      v48(v85, v45, v47);
      swift_storeEnumTagMultiPayload();
      uint64_t v50 = sub_24D9BE5CC(v49);
      uint64_t v51 = swift_getTupleTypeMetadata2();
      uint64_t v52 = swift_allocBox();
      uint64_t v54 = v53;
      uint64_t v55 = *(int *)(v51 + 48);
      uint64_t v56 = v47;
      uint64_t v57 = v50;
      uint64_t v58 = v52;
      v48(v53, v45, v56);
      swift_storeEnumTagMultiPayload();
      *(void *)&v54[v55] = v15[15];
      id v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AB8]), sel_init);
      uint64_t v59 = swift_allocObject();
      *(void *)(v59 + 16) = v15;
      *(void *)(v59 + 24) = v46;
      swift_retain();
      swift_retain();
      sub_24D44E248(v57, 0, 0, 1, v58 | 0x5000000000000002, v43, (uint64_t)sub_24DC1C5C4, v59);
    }
    swift_release();
    uint64_t v60 = v100;
    swift_release();
    swift_release();

    swift_release();
    type metadata accessor for RequestContinuation();
    swift_allocObject();
    v60();
    return swift_release();
  }
}

uint64_t sub_24DC17388(uint64_t a1, uint64_t *a2, char *a3, uint64_t a4)
{
  uint64_t v36 = a4;
  uint64_t v7 = *a2;
  uint64_t v8 = *(void *)(*a2 + 576);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v31 - v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v12 = sub_24DCCB058();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v31 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v31 - v14, a1, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return sub_24DC162F8(0, v36);
  }
  else
  {
    uint64_t v33 = v9;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v35 = v11;
    v17(v11, v15, v8);
    uint64_t v18 = *(void *)(v7 + 592);
    uint64_t v34 = a2;
    uint64_t v32 = v18;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v20 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v22 = swift_getAssociatedConformanceWitness();
    uint64_t v37 = AssociatedTypeWitness;
    uint64_t v38 = v20;
    uint64_t v39 = AssociatedConformanceWitness;
    uint64_t v40 = v22;
    type metadata accessor for ReconciliationID();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v24 = swift_allocBox();
    uint64_t v26 = v25;
    uint64_t v27 = *(int *)(TupleTypeMetadata2 + 48);
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v25, &a3[*(void *)(*(void *)a3 + 576)], AssociatedTypeWitness);
    swift_storeEnumTagMultiPayload();
    *(void *)(v26 + v27) = *((void *)a3 + 15);
    uint64_t v28 = swift_allocObject();
    uint64_t v29 = v36;
    *(void *)(v28 + 16) = a3;
    *(void *)(v28 + 24) = v29;
    swift_retain();
    swift_retain();
    uint64_t v30 = (uint64_t)v35;
    sub_24D457C70((uint64_t)v35, v24 | 0x5000000000000002, (uint64_t (*)(uint64_t, void))sub_24DC1C64C, v28, v8, v32);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v30, v8);
  }
}

uint64_t sub_24DC17780(char a1, char a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    swift_willThrowTypedImpl();
    char v5 = 0;
  }
  else
  {
    char v5 = a1 & 1;
  }
  return sub_24DC162F8(v5, a4);
}

uint64_t type metadata accessor for Materialization.MaterializeParentHierarchy()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24DC17800()
{
  return 0xD000000000000027;
}

uint64_t sub_24DC1781C(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  unint64_t v29 = a4;
  uint64_t v11 = (void *)*v7;
  uint64_t v12 = (void *)*a1;
  uint64_t v26 = sub_24DCCA3F8();
  uint64_t v13 = *(void *)(v26 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v26);
  uint64_t v16 = (char *)&v24 - v15;
  (*(void (**)(char *, uint64_t))(v13 + 16))((char *)&v24 - v15, a2);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v25 = (v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = v11[75];
  *((void *)v19 + 3) = v11[76];
  *((void *)v19 + 4) = v12[72];
  *((void *)v19 + 5) = v12[73];
  *((void *)v19 + 6) = v11[77];
  *((void *)v19 + 7) = v11[78];
  *((void *)v19 + 8) = v12[74];
  *((void *)v19 + 9) = v12[75];
  *((void *)v19 + 10) = a1;
  uint64_t v20 = v27;
  uint64_t v21 = v28;
  *((void *)v19 + 11) = a3;
  *((void *)v19 + 12) = v20;
  *((void *)v19 + 13) = v21;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v19[v17], v16, v26);
  *(void *)&v19[v25] = v7;
  unint64_t v22 = v29;
  *(void *)&v19[v18] = v29;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D40B3C8(v22);
  sub_24D454420(a3, v22, (uint64_t)sub_24DC1C0B8, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_24DC17AB4(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, unint64_t a8)
{
  uint64_t v43 = a5;
  unint64_t v44 = a8;
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  unint64_t v35 = a1;
  uint64_t v11 = (void *)*a2;
  uint64_t v39 = (void *)*a7;
  uint64_t v40 = v11;
  uint64_t v12 = sub_24DCCA3F8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v38 = (char *)&v33 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v37 = v12;
  uint64_t v36 = sub_24DCCB058();
  uint64_t v17 = *(void *)(v36 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v36);
  uint64_t v20 = (char *)&v33 - v19;
  (*(void (**)(char *, unint64_t))(v17 + 16))((char *)&v33 - v19, v35);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a6, v12);
  unint64_t v21 = (*(unsigned __int8 *)(v17 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v35 = (v18 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (*(unsigned __int8 *)(v13 + 80) + v23 + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v34 = (v14 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (char *)swift_allocObject();
  uint64_t v27 = v39;
  uint64_t v26 = v40;
  *((void *)v25 + 2) = v39[75];
  *((void *)v25 + 3) = v27[76];
  *((void *)v25 + 4) = v26[72];
  *((void *)v25 + 5) = v26[73];
  *((void *)v25 + 6) = v27[77];
  *((void *)v25 + 7) = v27[78];
  *((void *)v25 + 8) = v26[74];
  *((void *)v25 + 9) = v26[75];
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v25[v21], v20, v36);
  uint64_t v28 = v42;
  *(void *)&v25[v35] = v41;
  *(void *)&v25[v22] = a2;
  unint64_t v29 = &v25[v23];
  uint64_t v30 = v43;
  *(void *)unint64_t v29 = v28;
  *((void *)v29 + 1) = v30;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v25[v24], v38, v37);
  *(void *)&v25[v34] = a7;
  unint64_t v31 = v44;
  *(void *)&v25[v33] = v44;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D40B3C8(v31);
  sub_24D6E6088((uint64_t)"backgroundMaterialize(concreteDB:lastMaterializedLevel:id:request:requestCompleted:)", 84, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_24DC1C45C, (uint64_t)v25);
  return swift_release();
}

uint64_t sub_24DC17EB0(char *a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, char *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v104 = a8;
  uint64_t v108 = a7;
  uint64_t v109 = a6;
  uint64_t v118 = a4;
  uint64_t v119 = a5;
  uint64_t v113 = a3;
  uint64_t v120 = a1;
  uint64_t v9 = *a2;
  uint64_t v10 = *a2;
  uint64_t v11 = *(void *)(*a2 + 80);
  uint64_t v12 = sub_24DCCA3F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v103 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v112 = (char *)&v93 - v14;
  uint64_t v114 = *(void *)(v12 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v107 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v102 = (char *)&v93 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v110 = (char *)&v93 - v19;
  uint64_t v20 = *(void *)(v9 + 88);
  uint64_t v121 = v11;
  uint64_t v122 = v20;
  long long v101 = *(_OWORD *)(v10 + 96);
  long long v123 = v101;
  uint64_t v115 = type metadata accessor for ReconciliationID();
  uint64_t v21 = sub_24DCCA3F8();
  unint64_t v22 = *(void **)(v21 - 8);
  uint64_t v105 = v21;
  uint64_t v106 = v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  unint64_t v25 = (char *)&v93 - v24;
  uint64_t v117 = v11;
  uint64_t v116 = *(void **)(v11 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  unint64_t v31 = (char *)&v93 - v30;
  MEMORY[0x270FA5388](v29);
  unint64_t v33 = (char *)&v93 - v32;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v34 = sub_24DCCB058();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v37 = (char *)&v93 - v36;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))((char *)&v93 - v36, v120, v34);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v38 = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    return v118(v38);
  }
  uint64_t v98 = v31;
  uint64_t v39 = v115;
  uint64_t v99 = v28;
  uint64_t v120 = v33;
  uint64_t v100 = a2;
  uint64_t v41 = v116;
  uint64_t v40 = v117;
  uint64_t v42 = (uint64_t (*)(char *, uint64_t, uint64_t))v116[6];
  uint64_t v38 = v42(v37, 1, v117);
  if (v38 == 1) {
    return v118(v38);
  }
  unint64_t v44 = (void (*)(void, void, void))v41[4];
  uint64_t v45 = v37;
  uint64_t v46 = v40;
  uint64_t v95 = v41 + 4;
  uint64_t v94 = v44;
  v44(v120, v45, v40);
  uint64_t v47 = v25;
  uint64_t v48 = v124;
  sub_24D9BE738(v113, 1, (uint64_t)v25);
  uint64_t v97 = (unsigned int (*)(char *, uint64_t))v42;
  if (v48)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v25, 1, 1, v39);
    uint64_t v124 = 0;
    uint64_t v39 = v105;
    uint64_t v49 = v106;
LABEL_8:
    uint64_t v105 = v12;
    uint64_t v51 = v46;
    uint64_t v52 = v114;
    uint64_t v54 = v110;
    uint64_t v53 = TupleTypeMetadata2;
    uint64_t v55 = v47;
    uint64_t v56 = v120;
    ((void (*)(char *, uint64_t))v49[1])(v55, v39);
    goto LABEL_9;
  }
  uint64_t v49 = *(void **)(v39 - 8);
  ((void (*)(char *, void, uint64_t, uint64_t))v49[7])(v47, 0, 1, v39);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v124 = 0;
  if (EnumCaseMultiPayload == 1) {
    goto LABEL_8;
  }
  uint64_t v84 = v98;
  uint64_t v85 = v46;
  v94(v98, v47, v46);
  uint64_t v86 = v120;
  char v87 = sub_24DCC9798();
  uint64_t v88 = v86;
  LOBYTE(v86) = v87;
  uint64_t v89 = (uint64_t (*)(char *, uint64_t))v41[1];
  uint64_t v90 = v84;
  uint64_t v91 = v88;
  uint64_t v92 = v89(v90, v85);
  if ((v86 & 1) == 0)
  {
    uint64_t v105 = v12;
    uint64_t v51 = v85;
    uint64_t v52 = v114;
    uint64_t v56 = v91;
    uint64_t v54 = v110;
    uint64_t v53 = TupleTypeMetadata2;
LABEL_9:
    uint64_t v57 = (void (*)(char *, char *, uint64_t))v41[2];
    uint64_t v106 = v41 + 2;
    uint64_t v96 = v57;
    v57(v54, v56, v51);
    uint64_t v58 = (void (*)(void, void, void, void))v41[7];
    uint64_t v115 = (uint64_t)(v41 + 7);
    uint64_t v98 = (char *)v58;
    v58(v54, 0, 1, v51);
    uint64_t v59 = v112;
    uint64_t v60 = &v112[*(int *)(v53 + 48)];
    uint64_t v61 = v54;
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
    uint64_t v63 = v105;
    v62(v112, v61, v105);
    v62(v60, v109, v63);
    uint64_t v64 = v51;
    uint64_t v65 = v97;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v97)(v59, 1, v64) == 1)
    {
      uint64_t v66 = *(void (**)(char *, uint64_t))(v52 + 8);
      v66(v61, v63);
      uint64_t v67 = v117;
      if (v65(v60, 1) == 1)
      {
        uint64_t v68 = ((uint64_t (*)(char *, uint64_t))v66)(v112, v63);
        uint64_t v69 = v116;
        uint64_t v70 = v67;
        v118(v68);
        return ((uint64_t (*)(char *, uint64_t))v69[1])(v120, v70);
      }
      uint64_t v73 = v118;
      uint64_t v74 = v107;
      uint64_t v75 = v112;
      uint64_t v69 = v116;
    }
    else
    {
      uint64_t v71 = v102;
      v62(v102, v59, v63);
      uint64_t v67 = v117;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v65)(v60, 1, v117) != 1)
      {
        uint64_t v77 = v99;
        v94(v99, v60, v67);
        LODWORD(TupleTypeMetadata2) = sub_24DCC9798();
        uint64_t v70 = v67;
        uint64_t v78 = v71;
        uint64_t v79 = v116;
        uint64_t v80 = (void (*)(char *, uint64_t))v116[1];
        v80(v77, v70);
        uint64_t v66 = *(void (**)(char *, uint64_t))(v114 + 8);
        v66(v110, v63);
        v80(v78, v70);
        uint64_t v81 = v59;
        uint64_t v69 = v79;
        uint64_t v82 = ((uint64_t (*)(char *, uint64_t))v66)(v81, v63);
        uint64_t v73 = v118;
        uint64_t v76 = v119;
        uint64_t v74 = v107;
        if (TupleTypeMetadata2)
        {
          v118(v82);
          return ((uint64_t (*)(char *, void))v69[1])(v120, v70);
        }
        goto LABEL_19;
      }
      uint64_t v66 = *(void (**)(char *, uint64_t))(v114 + 8);
      v66(v110, v63);
      uint64_t v72 = v116;
      ((void (*)(char *, uint64_t))v116[1])(v71, v67);
      uint64_t v73 = v118;
      uint64_t v74 = v107;
      uint64_t v75 = v59;
      uint64_t v69 = v72;
    }
    uint64_t v70 = v67;
    (*(void (**)(char *, uint64_t))(v103 + 8))(v75, TupleTypeMetadata2);
    uint64_t v76 = v119;
LABEL_19:
    uint64_t v83 = v120;
    v96(v74, v120, v70);
    ((void (*)(char *, void, uint64_t, uint64_t))v98)(v74, 0, 1, v70);
    sub_24DC1781C(v113, v74, v100, v104, v73, v76);
    v66(v74, v105);
    return ((uint64_t (*)(char *, uint64_t))v69[1])(v83, v70);
  }
  v118(v92);
  return v89(v91, v85);
}

uint64_t sub_24DC188F0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, unint64_t, unint64_t, void), uint64_t a5)
{
  uint64_t v99 = a5;
  uint64_t v100 = a4;
  uint64_t v75 = a3;
  uint64_t v95 = a2;
  uint64_t v98 = a1;
  uint64_t v74 = (void *)*v5;
  uint64_t v6 = v74;
  uint64_t v7 = v74[76];
  uint64_t v97 = (void *)v74[78];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = (void *)v74[77];
  uint64_t v10 = v74[75];
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = swift_getAssociatedConformanceWitness();
  uint64_t v101 = AssociatedTypeWitness;
  uint64_t v102 = v11;
  uint64_t v103 = (void *)AssociatedConformanceWitness;
  uint64_t v104 = (void *)v13;
  uint64_t v81 = type metadata accessor for ReconciliationID();
  MEMORY[0x270FA5388](v81);
  uint64_t v78 = (char *)&v69 - v14;
  uint64_t v83 = sub_24DCCA3F8();
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  char v87 = (void *)v13;
  uint64_t v88 = (uint64_t)&v69 - v15;
  uint64_t v101 = v11;
  uint64_t v102 = AssociatedTypeWitness;
  uint64_t v89 = (void *)AssociatedConformanceWitness;
  uint64_t v90 = AssociatedTypeWitness;
  uint64_t v16 = v5;
  uint64_t v103 = (void *)v13;
  uint64_t v104 = (void *)AssociatedConformanceWitness;
  uint64_t v77 = type metadata accessor for ReconciliationID();
  MEMORY[0x270FA5388](v77);
  uint64_t v76 = (char *)&v69 - v17;
  uint64_t v91 = v11;
  uint64_t v80 = sub_24DCCA3F8();
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v86 = (uint64_t)&v69 - v18;
  uint64_t v73 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v71 = (char *)&v69 - v19;
  uint64_t v92 = v10;
  uint64_t v93 = v9;
  uint64_t v101 = v10;
  uint64_t v102 = v7;
  uint64_t v94 = v7;
  uint64_t v103 = v9;
  uint64_t v104 = v97;
  uint64_t v84 = type metadata accessor for ItemReconciliation();
  uint64_t v20 = sub_24DCCA3F8();
  uint64_t v85 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v96 = (uint64_t)&v69 - v24;
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v98;
  *(void *)(v25 + 16) = v98;
  *(void *)(v25 + 24) = v5;
  uint64_t v27 = *(void *)(v26 + 32);
  uint64_t v28 = (uint64_t)v16 + v6[72];
  uint64_t v29 = *(uint64_t (**)(uint64_t))(*(void *)v27 + 424);
  swift_retain();
  swift_retain();
  char v30 = v29(v28);
  uint64_t v70 = v25;
  if ((v30 & 1) == 0
    && ((*(uint64_t (**)(uint64_t))(*(void *)v27 + 432))(v28) & 1) == 0
    && (*((unsigned char *)v16 + 140) & 0x40) == 0)
  {
    v100(0, 0xD000000000000017, 0x800000024DD23100, 0);
    return swift_release();
  }
  if (!v95)
  {
    if (sub_24D8903D0())
    {
      uint64_t v101 = v92;
      uint64_t v102 = v94;
      uint64_t v103 = v93;
      uint64_t v104 = v97;
      type metadata accessor for ConcreteDatabase();
      uint64_t v97 = (void *)swift_dynamicCastClassUnconditional();
      uint64_t v35 = v91;
      uint64_t v36 = *(void *)(v91 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v86, 1, 1, v91);
      uint64_t v101 = v35;
      uint64_t v102 = v90;
      uint64_t v103 = v87;
      uint64_t v104 = v89;
      type metadata accessor for FPFSID();
      uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
      uint64_t v38 = (uint64_t)v76;
      v37(v76, v28, v35);
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = sub_24D9BE5CC(v38);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v41 = swift_allocBox();
      uint64_t v43 = v42;
      uint64_t v44 = *(int *)(TupleTypeMetadata2 + 48);
      v37(v42, v28, v35);
      swift_storeEnumTagMultiPayload();
      *(void *)&v43[v44] = v16[15];
      swift_retain();
      uint64_t v45 = v86;
      sub_24DC1781C(v97, v86, v39, v41 | 0x8000000000000004, (uint64_t)sub_24DC1BE4C, v70);
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v45, v80);
    }
    else
    {
      uint64_t v98 = (*(uint64_t (**)(void))(*(void *)v98 + 176))();
      uint64_t v101 = v94;
      uint64_t v102 = v92;
      uint64_t v103 = v97;
      uint64_t v104 = v93;
      type metadata accessor for ConcreteDatabase();
      uint64_t v97 = (void *)swift_dynamicCastClassUnconditional();
      uint64_t v46 = v90;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v88, 1, 1, v90);
      uint64_t v47 = v91;
      uint64_t v101 = v46;
      uint64_t v102 = v91;
      uint64_t v103 = v89;
      uint64_t v104 = v87;
      type metadata accessor for FPFSID();
      uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16);
      uint64_t v49 = (uint64_t)v78;
      v48(v78, v28, v47);
      swift_storeEnumTagMultiPayload();
      uint64_t v50 = sub_24D9BE5CC(v49);
      uint64_t v51 = swift_getTupleTypeMetadata2();
      uint64_t v52 = swift_allocBox();
      uint64_t v54 = v53;
      uint64_t v55 = *(int *)(v51 + 48);
      v48(v53, v28, v47);
      swift_storeEnumTagMultiPayload();
      *(void *)&v54[v55] = v16[15];
      uint64_t v56 = v88;
      sub_24DC1781C(v97, v88, v50, v52 | 0x8000000000000004, (uint64_t)sub_24DC1BE4C, v70);
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v56, v83);
    }
    uint64_t v57 = v100;
    type metadata accessor for RequestContinuation();
    uint64_t v58 = swift_allocObject();
    v57(v58, 0, 0, 0);
    swift_release();
    return swift_release();
  }
  sub_24D4759C8(v28, v96);
  uint64_t v32 = v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v23, v96, v20);
  uint64_t v33 = v84;
  uint64_t v34 = *(void *)(v84 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v23, 1, v84) == 1)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v20);
  }
  else
  {
    uint64_t v59 = v72;
    uint64_t v60 = v71;
    uint64_t v61 = v73;
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v71, v23, v73);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v33);
    int v62 = v60[*(int *)(v61 + 52)];
    (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
    if (v62 == 2)
    {
      v100(0, 0, 0, 0);
      swift_release();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v96, v20);
    }
  }
  uint64_t v101 = v92;
  uint64_t v102 = v94;
  uint64_t v103 = v93;
  uint64_t v104 = v97;
  type metadata accessor for JobResult();
  uint64_t v63 = v16[15];
  uint64_t v64 = v16[16];
  uint64_t v65 = v16[17];
  swift_allocObject();
  uint64_t v66 = sub_24DC096F0(v28, v63, v64, v65, 0x400000);
  sub_24D85246C(v75, v66);
  swift_release();
  sub_24D472A28();
  uint64_t v67 = (void *)swift_allocError();
  *uint64_t v68 = 3;
  v100(0, 0, 0, v67);
  swift_release();

  return (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v96, v20);
}

uint64_t sub_24DC195A8(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v3 = *(void *)(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 96);
  uint64_t v5 = *(void *)(*(void *)a1 + 104);
  uint64_t v22 = *(void *)(*(void *)a1 + 80);
  uint64_t v23 = v3;
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  uint64_t v6 = type metadata accessor for PersistenceTrigger();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v20 = v6;
  uint64_t v21 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = swift_getAssociatedConformanceWitness();
  uint64_t v22 = AssociatedTypeWitness;
  uint64_t v23 = v11;
  uint64_t v24 = AssociatedConformanceWitness;
  uint64_t v25 = v13;
  type metadata accessor for ReconciliationID();
  uint64_t v14 = &v9[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  uint64_t v15 = v19;
  *uint64_t v9 = sub_24DB1702C();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v14, v15 + *(void *)(*(void *)v15 + 576), AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = v20;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned char *))(*(void *)a1 + 312))(v9);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v21 + 8))(v9, v16);
}

uint64_t type metadata accessor for Materialization.BackgroundMaterializeParentHierarchy()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24DC19870()
{
  return 0xD000000000000018;
}

void sub_24DC1988C(uint64_t a1, uint64_t a2, void (*a3)(void, void), void (*a4)(void, unint64_t, unint64_t, id), uint64_t a5)
{
  uint64_t v226 = a5;
  double v227 = a4;
  uint64_t v213 = a3;
  uint64_t v207 = a2;
  uint64_t v224 = (void (*)(char *, uint64_t))*v5;
  uint64_t v7 = *((void *)v224 + 77);
  uint64_t v8 = *((void *)v224 + 75);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *((void *)v224 + 78);
  uint64_t v225 = v5;
  unint64_t v11 = *((void *)v224 + 76);
  uint64_t v12 = v10;
  uint64_t v13 = a1;
  uint64_t v228 = AssociatedTypeWitness;
  uint64_t v229 = swift_getAssociatedTypeWitness();
  uint64_t v205 = v229;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v230 = AssociatedConformanceWitness;
  uint64_t v231 = swift_getAssociatedConformanceWitness();
  uint64_t v203 = v231;
  uint64_t v189 = type metadata accessor for ThrottlingKey();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v188 = sub_24DCCA3F8();
  uint64_t v187 = *(void *)(v188 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v188);
  uint64_t v186 = (char *)v181 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v191 = (char *)v181 - v17;
  uint64_t v209 = AssociatedTypeWitness;
  uint64_t v208 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v193 = (char *)v181 - v18;
  uint64_t v201 = sub_24DCC8CE8();
  uint64_t v200 = *(void *)(v201 - 8);
  MEMORY[0x270FA5388](v201);
  uint64_t v206 = (char *)v181 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = type metadata accessor for SnapshotMutation();
  uint64_t v198 = *(void *)(v199 - 8);
  MEMORY[0x270FA5388](v199);
  uint64_t v197 = (char *)v181 - v20;
  uint64_t v228 = v8;
  uint64_t v229 = v11;
  uint64_t v230 = v7;
  uint64_t v231 = v12;
  uint64_t v21 = v12;
  uint64_t v195 = type metadata accessor for ReconciliationMutation();
  uint64_t v196 = *(void *)(v195 - 8);
  MEMORY[0x270FA5388](v195);
  id v194 = (char *)v181 - v22;
  uint64_t v23 = type metadata accessor for SnapshotItem();
  uint64_t v211 = sub_24DCCA3F8();
  uint64_t v210 = *(void *)(v211 - 8);
  MEMORY[0x270FA5388](v211);
  uint64_t v219 = (char *)v181 - v24;
  uint64_t v228 = v8;
  uint64_t v229 = v11;
  uint64_t v230 = v7;
  uint64_t v231 = v21;
  uint64_t v25 = type metadata accessor for ItemReconciliation();
  uint64_t v26 = sub_24DCCA3F8();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  char v30 = (char *)v181 - v29;
  uint64_t v223 = v25;
  uint64_t v222 = *(void *)(v25 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v212 = (char *)v181 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)v181 - v34;
  uint64_t v218 = *(void *)(v23 - 8);
  uint64_t v36 = MEMORY[0x270FA5388](v33);
  uint64_t v202 = (uint64_t)v181 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v190 = (char *)v181 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  BOOL v216 = (char *)v181 - v41;
  MEMORY[0x270FA5388](v40);
  uint64_t v217 = (char *)v181 - v42;
  uint64_t v220 = v8;
  uint64_t v221 = v7;
  uint64_t v228 = v8;
  uint64_t v229 = v11;
  unint64_t v214 = v11;
  uint64_t v215 = v21;
  uint64_t v230 = v7;
  uint64_t v231 = v21;
  type metadata accessor for ConcreteDatabase();
  uint64_t v43 = swift_dynamicCastClass();
  if (!v43)
  {
    id v46 = (id)FPNotSupportedError();
    v227(0, 0xD000000000000013, 0x800000024DD22FE0, v46);

    return;
  }
  uint64_t v44 = v43;
  uint64_t v185 = v35;
  uint64_t v184 = v23;
  uint64_t v45 = (uint64_t)v225 + *((void *)v224 + 72);
  swift_retain();
  sub_24D4759C8(v45, (uint64_t)v30);
  uint64_t v183 = v13;
  uint64_t v47 = v222;
  uint64_t v48 = v223;
  int v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v222 + 48))(v30, 1, v223);
  if (v49 == 1)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v26);
    v227(0, 0xD00000000000001BLL, 0x800000024DD23000, 0);
    swift_release();
    return;
  }
  uint64_t v182 = v45;
  uint64_t v50 = v185;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v185, v30, v48);
  uint64_t v51 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v52 = (void (*)(void, unint64_t, unint64_t, void))v227;
  if ((v50[*(int *)(v51 + 36)] & 0x10) == 0)
  {
    v227(0, 0xD00000000000001BLL, 0x800000024DD23020, 0);
    swift_release();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v48);
    return;
  }
  uint64_t v53 = *(void *)(v183 + 32);
  uint64_t v54 = v182;
  uint64_t v55 = (*(uint64_t (**)(uint64_t))(*(void *)v53 + 312))(v182);
  if (v56) {
    goto LABEL_11;
  }
  uint64_t v57 = v55;
  (*(void (**)(uint64_t, uint64_t))(*(void *)v53 + 240))(v54, 1);
  uint64_t v58 = v57;
  v181[1] = v53;
  uint64_t v59 = v218;
  uint64_t v60 = v219;
  uint64_t v61 = v184;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v218 + 48))(v219, 1, v184) == 1)
  {
    (*(void (**)(char *, uint64_t))(v210 + 8))(v60, v211);
LABEL_11:
    v52(0, 0xD00000000000001BLL, 0x800000024DD23000, 0);
    swift_release();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v185, v48);
    return;
  }
  uint64_t v211 = v44;
  int v62 = v216;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v216, v60, v61);
  uint64_t v219 = *(char **)(v59 + 16);
  v181[0] = v59 + 16;
  ((void (*)(char *, char *, uint64_t))v219)(v217, v62, v61);
  uint64_t v63 = &v62[*(int *)(v61 + 48)];
  uint64_t v210 = type metadata accessor for ItemMetadata();
  LODWORD(v63) = v63[*(int *)(v210 + 60)];
  uint64_t v64 = v212;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v212, v185, v48);
  if (v63 == 1)
  {
    BOOL v65 = sub_24DB86F3C(v48);
    uint64_t v66 = *(void (**)(char *, uint64_t))(v47 + 8);
    v66(v64, v48);
    if (!v65 && !v58)
    {
      uint64_t v222 = v47 + 8;
      uint64_t v224 = v66;
      uint64_t v228 = v220;
      uint64_t v229 = v214;
      uint64_t v230 = v221;
      uint64_t v231 = v215;
      type metadata accessor for JobResult();
      uint64_t v67 = v209;
      uint64_t v228 = v209;
      uint64_t v229 = v205;
      uint64_t v230 = AssociatedConformanceWitness;
      uint64_t v231 = v203;
      type metadata accessor for ReconciliationID();
      uint64_t v68 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t))(v208 + 16);
      uint64_t v70 = (uint64_t)v194;
      uint64_t v71 = v182;
      v69(v194, v182, v67);
      swift_storeEnumTagMultiPayload();
      *(void *)(v70 + v68) = 3;
      uint64_t v72 = v195;
      swift_storeEnumTagMultiPayload();
      uint64_t v73 = v213;
      sub_24D907568((uint64_t)v213, v70);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v70, v72);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v75 = *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v76 = (uint64_t)v197;
      uint64_t v77 = &v197[*(int *)(TupleTypeMetadata3 + 64)];
      v69(v197, v71, v67);
      *(unsigned char *)(v76 + v75) = 1;
      *(void *)uint64_t v77 = 0xD000000000000029;
      *((void *)v77 + 1) = 0x800000024DD230B0;
      uint64_t v78 = v199;
      swift_storeEnumTagMultiPayload();
      sub_24D9075B0((uint64_t)v73, v76);
      (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v76, v78);
      uint64_t v228 = v220;
      uint64_t v229 = v214;
      uint64_t v230 = v221;
      uint64_t v231 = v215;
      type metadata accessor for Maintenance.IgnoreChildrenOfIgnoredHierarchy();
      uint64_t v79 = v206;
      sub_24DCC8CD8();
      sub_24DCC8C88();
      double v81 = v80;
      uint64_t v82 = *(void (**)(char *, uint64_t))(v200 + 8);
      uint64_t v83 = v201;
      v82(v79, v201);
      double v84 = v81 * 1000000000.0;
      if ((~COERCE__INT64(v81 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v84 > -9.22337204e18)
        {
          if (v84 < 9.22337204e18)
          {
            uint64_t v85 = sub_24D732E04(v182, 0, (uint64_t)v84, 0);
            sub_24D85246C((uint64_t)v213, v85);
            swift_release();
            uint64_t v86 = v225[17];
            if ((v86 & 0x4000) == 0) {
              v225[17] = v86 | 0x4000;
            }
            uint64_t v228 = v220;
            uint64_t v229 = v214;
            uint64_t v230 = v221;
            uint64_t v231 = v215;
            type metadata accessor for DiskImport.ContinueDiskImport();
            char v87 = v193;
            sub_24DBB275C();
            uint64_t v88 = v206;
            sub_24DCC8CD8();
            sub_24DCC8C88();
            double v90 = v89;
            v82(v88, v83);
            double v91 = v90 * 1000000000.0;
            if ((~COERCE__INT64(v90 * 1000000000.0) & 0x7FF0000000000000) != 0)
            {
              uint64_t v92 = v224;
              if (v91 > -9.22337204e18)
              {
                if (v91 < 9.22337204e18)
                {
                  uint64_t v93 = sub_24D732E04(v87, 0x2000000000000000, (uint64_t)v91, 0x4000);
                  (*(void (**)(char *, uint64_t))(v208 + 8))(v87, v209);
                  sub_24D85246C((uint64_t)v213, v93);
                  swift_release();
                  v227(0, 0x6C6169726574616DuLL, 0xEC00000064657A69, 0);
                  swift_release();
                  uint64_t v94 = *(void (**)(char *, uint64_t))(v218 + 8);
                  uint64_t v95 = v184;
                  v94(v216, v184);
                  v92(v185, v223);
LABEL_41:
                  v94(v217, v95);
                  return;
                }
                goto LABEL_63;
              }
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
              goto LABEL_64;
            }
LABEL_61:
            __break(1u);
            goto LABEL_62;
          }
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_60;
    }
    uint64_t v61 = v184;
    uint64_t v59 = v218;
  }
  else
  {
    uint64_t v66 = *(void (**)(char *, uint64_t))(v47 + 8);
    v66(v64, v48);
  }
  if (v207)
  {
    if (v58)
    {
      uint64_t v228 = v220;
      uint64_t v229 = v214;
      uint64_t v230 = v221;
      uint64_t v231 = v215;
      type metadata accessor for JobResult();
      uint64_t v96 = sub_24DC1BC88(v182, v225[15], v225[16], v225[17], 0x10000);
      sub_24D85246C((uint64_t)v213, v96);
      swift_release();
      sub_24D472A28();
      uint64_t v97 = (void *)swift_allocError();
      *uint64_t v98 = 3;
      v227(0, 0xD000000000000023, 0x800000024DD23040, v97);

      swift_release();
      uint64_t v99 = *(void (**)(char *, uint64_t))(v59 + 8);
      uint64_t v100 = v184;
      v99(v216, v184);
      v66(v185, v223);
      v99(v217, v100);
      return;
    }
    uint64_t v109 = v223;
    uint64_t v110 = v185;
    BOOL v111 = sub_24DB86F3C(v223);
    uint64_t v112 = (void (*)(void, uint64_t, unint64_t, void))v227;
    if (!v111)
    {
      uint64_t v224 = v66;
      uint64_t v228 = v220;
      uint64_t v229 = v214;
      uint64_t v230 = v221;
      uint64_t v231 = v215;
      uint64_t v113 = type metadata accessor for JobResult();
      uint64_t v114 = v209;
      uint64_t v228 = v209;
      uint64_t v229 = v205;
      uint64_t v230 = AssociatedConformanceWitness;
      uint64_t v231 = v203;
      type metadata accessor for ReconciliationID();
      uint64_t v115 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v116 = *(void (**)(char *, uint64_t, uint64_t))(v208 + 16);
      uint64_t v117 = (uint64_t)v194;
      uint64_t v118 = v182;
      v116(v194, v182, v114);
      swift_storeEnumTagMultiPayload();
      *(void *)(v117 + v115) = 3;
      uint64_t v119 = v195;
      swift_storeEnumTagMultiPayload();
      uint64_t v120 = v213;
      sub_24D907568((uint64_t)v213, v117);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v117, v119);
      uint64_t v121 = swift_getTupleTypeMetadata3();
      uint64_t v122 = *(int *)(v121 + 48);
      uint64_t v123 = (uint64_t)v197;
      uint64_t v124 = &v197[*(int *)(v121 + 64)];
      v116(v197, v118, v114);
      *(unsigned char *)(v123 + v122) = 1;
      *(void *)uint64_t v124 = 0xD000000000000036;
      *((void *)v124 + 1) = 0x800000024DD23070;
      uint64_t v125 = v199;
      swift_storeEnumTagMultiPayload();
      sub_24D9075B0((uint64_t)v120, v123);
      (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v123, v125);
      uint64_t v228 = v220;
      uint64_t v229 = v214;
      uint64_t v230 = v221;
      uint64_t v231 = v215;
      type metadata accessor for Maintenance.IgnoreChildrenOfIgnoredHierarchy();
      uint64_t v126 = v206;
      sub_24DCC8CD8();
      sub_24DCC8C88();
      double v128 = v127;
      uint64_t v129 = *(void (**)(char *, uint64_t))(v200 + 8);
      uint64_t v130 = v201;
      v129(v126, v201);
      double v131 = v128 * 1000000000.0;
      if ((~COERCE__INT64(v128 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      if (v131 <= -9.22337204e18)
      {
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
      uint64_t v109 = v223;
      uint64_t v66 = v224;
      uint64_t v110 = v185;
      if (v131 >= 9.22337204e18)
      {
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }
      uint64_t v132 = sub_24D732E04(v182, 0, (uint64_t)v131, 0);
      uint64_t v219 = (char *)v113;
      sub_24D85246C((uint64_t)v213, v132);
      swift_release();
      uint64_t v133 = v225[17];
      if ((v133 & 0x4000) == 0) {
        v225[17] = v133 | 0x4000;
      }
      uint64_t v228 = v220;
      uint64_t v229 = v214;
      uint64_t v230 = v221;
      uint64_t v231 = v215;
      type metadata accessor for DiskImport.ContinueDiskImport();
      uint64_t v134 = v193;
      sub_24DBB275C();
      long long v135 = v206;
      sub_24DCC8CD8();
      sub_24DCC8C88();
      double v137 = v136;
      v129(v135, v130);
      double v138 = v137 * 1000000000.0;
      if ((~COERCE__INT64(v137 * 1000000000.0) & 0x7FF0000000000000) == 0) {
        goto LABEL_67;
      }
      if (v138 <= -9.22337204e18)
      {
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      if (v138 >= 9.22337204e18)
      {
LABEL_69:
        __break(1u);
        return;
      }
      uint64_t v139 = sub_24D732E04(v134, 0x2000000000000000, (uint64_t)v138, 0x4000);
      (*(void (**)(char *, uint64_t))(v208 + 8))(v134, v209);
      sub_24D85246C((uint64_t)v213, v139);
      swift_release();
      uint64_t v112 = (void (*)(void, uint64_t, unint64_t, void))v227;
    }
    v112(0, 0x6C6169726574616DLL, 0xEC00000064657A69, 0);
    swift_release();
    uint64_t v94 = *(void (**)(char *, uint64_t))(v218 + 8);
    uint64_t v95 = v184;
    v94(v216, v184);
    v66(v110, v109);
    goto LABEL_41;
  }
  uint64_t v101 = *(void (**)(void, void))(v59 + 8);
  uint64_t v218 = v59 + 8;
  uint64_t v213 = v101;
  v101(v216, v61);
  v66(v185, v223);
  uint64_t v102 = v209;
  uint64_t v228 = v209;
  uint64_t v229 = v205;
  uint64_t v230 = AssociatedConformanceWitness;
  uint64_t v231 = v203;
  type metadata accessor for ReconciliationID();
  sub_24D469DDC();
  uint64_t v103 = swift_getTupleTypeMetadata2();
  uint64_t v104 = swift_allocBox();
  uint64_t v106 = v105;
  uint64_t v107 = *(int *)(v103 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v208 + 16))(v105, v182, v102);
  swift_storeEnumTagMultiPayload();
  *(void *)(v106 + v107) = objc_msgSend(self, sel_requestForSelf);
  unint64_t v214 = v104 | 0x4000000000000000;
  uint64_t v215 = v104;
  uint64_t v108 = *(uint64_t (**)(char *, uint64_t))(**(void **)(v183 + 24) + 344);
  uint64_t v228 = v108(v217, 1);
  uint64_t v140 = TupleTypeMetadata2;
  uint64_t v141 = sub_24DCC9D48();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v143 = v191;
  uint64_t v212 = (char *)v141;
  uint64_t v209 = WitnessTable;
  sub_24DCC9FD8();
  swift_bridgeObjectRelease();
  uint64_t v144 = *(void *)(v140 - 8);
  uint64_t v208 = *(void *)(v144 + 48);
  uint64_t v207 = v144 + 48;
  int v145 = ((uint64_t (*)(char *, uint64_t, uint64_t))v208)(v143, 1, v140);
  if (v145 == 1)
  {
    (*(void (**)(char *, uint64_t))(v187 + 8))(v143, v188);
    uint64_t v146 = v190;
    ((void (*)(char *, char *, uint64_t))v219)(v190, v217, v184);
    uint64_t v147 = v213;
    goto LABEL_46;
  }
  uint64_t v148 = &v143[*(int *)(TupleTypeMetadata2 + 48)];
  unsigned int v149 = v143;
  unsigned int v150 = *v148;
  uint64_t v152 = (void (*)(void, void))*((void *)v148 + 1);
  uint64_t v151 = *((void *)v148 + 2);
  uint64_t v222 = *((void *)v148 + 3);
  uint64_t v223 = v151;
  uint64_t v153 = *((void *)v148 + 4);
  int v154 = (void (*)(char *, uint64_t))*((void *)v148 + 5);
  int v155 = v148[48];
  uint64_t v157 = *((void *)v148 + 7);
  uint64_t v156 = (char *)*((void *)v148 + 8);
  uint64_t v220 = v157;
  uint64_t v221 = v153;
  BOOL v216 = v156;
  (*(void (**)(char *))(*(void *)(v189 - 8) + 8))(v149);
  uint64_t v146 = v190;
  ((void (*)(char *, char *, uint64_t))v219)(v190, v217, v184);
  uint64_t v224 = v154;
  BOOL v172 = v154 == (void (*)(char *, uint64_t))1;
  uint64_t v147 = v213;
  if (v172)
  {
LABEL_46:
    uint64_t v228 = v108(v146, 0);
    uint64_t v158 = v186;
    sub_24DCC9FD8();
    swift_bridgeObjectRelease();
    uint64_t v159 = v147;
    v147((uint64_t)v146, v184);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v208)(v158, 1, TupleTypeMetadata2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v187 + 8))(v158, v188);
      unsigned int v150 = 0;
      uint64_t v152 = 0;
      uint64_t v222 = 0;
      uint64_t v223 = 0;
      uint64_t v220 = 0;
      uint64_t v221 = 0;
      int v155 = 0;
      BOOL v216 = 0;
      uint64_t v160 = 1;
    }
    else
    {
      uint64_t v161 = &v158[*(int *)(TupleTypeMetadata2 + 48)];
      unsigned int v150 = *v161;
      uint64_t v152 = (void (*)(void, void))*((void *)v161 + 1);
      uint64_t v162 = *((void *)v161 + 2);
      uint64_t v222 = *((void *)v161 + 3);
      uint64_t v223 = v162;
      uint64_t v163 = *((void *)v161 + 4);
      uint64_t v160 = *((void *)v161 + 5);
      int v155 = v161[48];
      uint64_t v165 = *((void *)v161 + 7);
      uint64_t v164 = (char *)*((void *)v161 + 8);
      uint64_t v220 = v165;
      uint64_t v221 = v163;
      BOOL v216 = v164;
      (*(void (**)(char *))(*(void *)(v189 - 8) + 8))(v158);
    }
    goto LABEL_49;
  }
  uint64_t v159 = v213;
  v213(v146, v184);
  uint64_t v160 = (uint64_t)v224;
LABEL_49:
  int v166 = v155;
  uint64_t v167 = (char *)v150;
  uint64_t v168 = v217;
  uint64_t v169 = v184;
  ((void (*)(uint64_t, char *, uint64_t))v219)(v202, v217, v184);
  char v170 = v168[*(int *)(v169 + 48) + *(int *)(v210 + 64)];
  uint64_t v213 = v152;
  uint64_t v212 = v167;
  uint64_t v224 = (void (*)(char *, uint64_t))v160;
  if (v170)
  {
    int v171 = 1;
  }
  else
  {
    BOOL v172 = v160 != 1 && v166 == 6;
    int v171 = v172;
  }
  uint64_t v173 = (void (*)(void))v227;
  uint64_t v174 = v225;
  BOOL v175 = v225[17] == 0x40000000;
  uint64_t v176 = (void *)swift_allocObject();
  uint64_t v177 = v183;
  v176[2] = v211;
  v176[3] = v177;
  v176[4] = v174;
  swift_retain_n();
  swift_retain();
  uint64_t v178 = v184;
  uint64_t v179 = swift_getWitnessTable();
  uint64_t v180 = v202;
  sub_24D45719C(v202, v171, v175, v214, (uint64_t)sub_24DC1BD00, (uint64_t)v176, v178, v179);
  swift_release();
  v159(v180, v178);
  type metadata accessor for RequestContinuation();
  swift_allocObject();
  v173();
  swift_release();
  swift_release();
  sub_24DC1BD0C((int)v212, (int)v213, v223, v222, v221, v224);
  swift_release();
  v159((uint64_t)v217, v178);
}

uint64_t sub_24DC1B5D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(*(void *)(a2 + 32) + 16);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a3;
  v9[3] = a2;
  v9[4] = a1;
  v9[5] = a4;
  uint64_t v10 = *(void (**)(uint64_t (*)(), void *))(*(void *)v8 + 672);
  swift_retain();
  swift_retain();
  swift_retain();
  id v11 = a1;
  swift_retain();
  v10(sub_24DC1BD80, v9);
  swift_release();

  return swift_release();
}

uint64_t sub_24DC1B6DC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = a2;
  v8[3] = a3;
  v8[4] = a1;
  v8[5] = a4;
  swift_retain();
  id v9 = a3;
  swift_retain();
  swift_retain();
  sub_24D6E6088((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_24DC1BE28, (uint64_t)v8);

  return swift_release();
}

void sub_24DC1B7D4(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v8 = *(void *)(*(void *)a1 + 576);
  uint64_t v9 = *(void *)(*(void *)a1 + 584);
  uint64_t v10 = *(void *)(*(void *)a1 + 600);
  uint64_t v35 = *(void *)(*(void *)a1 + 592);
  uint64_t v36 = v8;
  uint64_t v42 = v8;
  uint64_t v43 = v9;
  uint64_t v37 = v10;
  uint64_t v38 = v9;
  uint64_t v44 = v35;
  uint64_t v45 = v10;
  uint64_t v11 = type metadata accessor for PersistenceTrigger();
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v39 = (char *)&v32 - v12;
  uint64_t v13 = sub_24DCC8CE8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DA2F61C();
  if (!v4)
  {
    if (!a2)
    {
LABEL_7:
      uint64_t v32 = a3;
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v25 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v27 = swift_getAssociatedConformanceWitness();
      uint64_t v42 = AssociatedTypeWitness;
      uint64_t v43 = v25;
      uint64_t v44 = AssociatedConformanceWitness;
      uint64_t v45 = v27;
      type metadata accessor for ReconciliationID();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v29 = v39;
      char v30 = &v39[*(int *)(TupleTypeMetadata2 + 48)];
      *uint64_t v29 = sub_24DB1702C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v30, &a4[*(void *)(*(void *)a4 + 576)], AssociatedTypeWitness);
      swift_storeEnumTagMultiPayload();
      uint64_t v31 = v41;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *))(*(void *)v32 + 312))(v29);
      (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v29, v31);
      return;
    }
    uint64_t v17 = (uint64_t)&a4[*(void *)(*(void *)a4 + 576)];
    uint64_t v19 = *((void *)a4 + 15);
    uint64_t v18 = *((void *)a4 + 16);
    uint64_t v33 = *((void *)a4 + 17);
    uint64_t v34 = v18;
    swift_allocObject();
    uint64_t v20 = sub_24DC096F0(v17, v19, v34, v33, 0x10000);
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v22 = v21;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    double v23 = v22 * 1000000000.0;
    if ((~COERCE__INT64(v22 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v23 > -9.22337204e18)
      {
        if (v23 < 9.22337204e18)
        {
          sub_24D912448(v20);
          swift_release();
          goto LABEL_7;
        }
LABEL_11:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
}

uint64_t type metadata accessor for Materialization.MaterializeIgnoredItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24DC1BC78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DC1BC88(a1, a2, a3, a4, 32);
}

uint64_t sub_24DC1BC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DC1BC88(a1, a2, a3, a4, 0x10000);
}

uint64_t sub_24DC1BC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24DC096F0(a1, a2, a3, a4, a5);
}

uint64_t sub_24DC1BCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DC1BC88(a1, a2, a3, a4, 0x400000);
}

uint64_t sub_24DC1BD00(void *a1)
{
  return sub_24DC1B5D8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24DC1BD0C(int a1, int a2, int a3, int a4, int a5, id a6)
{
  if (a6 != (id)1)
  {

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24DC1BD54()
{
  return objectdestroy_7Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EEB0]);
}

uint64_t sub_24DC1BD80()
{
  return sub_24DC1B6DC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_24DC1BD8C()
{
  return objectdestroy_7Tm(MEMORY[0x263F8EEB0], MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_7Tm(void (*a1)(void), void (*a2)(void))
{
  swift_release();
  a1(*(void *)(v2 + 24));
  a2(*(void *)(v2 + 32));
  swift_release();

  return swift_deallocObject();
}

void sub_24DC1BE28()
{
  sub_24DC1B7D4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(char **)(v0 + 40));
}

uint64_t sub_24DC1BE4C()
{
  return sub_24DC195A8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24DC1BE54()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(sub_24DCCA3F8() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v3, AssociatedTypeWitness); {
  swift_release();
  }
  sub_24DC1BFD0(*(void *)(v0 + ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));

  return swift_deallocObject();
}

unint64_t sub_24DC1BFD0(unint64_t result)
{
  switch((result >> 58) & 0x3C | (result >> 1) & 3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x20uLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24DC1C0B8(unint64_t a1)
{
  swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(sub_24DCCA3F8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = (void *)v1[10];
  uint64_t v7 = v1[11];
  uint64_t v8 = v1[12];
  uint64_t v9 = v1[13];
  uint64_t v10 = *(void **)((char *)v1 + v5);
  unint64_t v11 = *(void *)((char *)v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_24DC17AB4(a1, v6, v7, v8, v9, (uint64_t)v1 + v4, v10, v11);
}

uint64_t sub_24DC1C18C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v3 = *(void *)(sub_24DCCB058() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)
      + ((((((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v10 = *(void *)(*(void *)(v2 - 8) + 64);
  uint64_t v6 = (id *)(v0 + v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
    if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v7 + 48))(v6, 1, AssociatedTypeWitness)) {
      (*(void (**)(id *, uint64_t))(v7 + 8))(v6, AssociatedTypeWitness);
    }
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v5, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v5, AssociatedTypeWitness); {
  swift_release();
  }
  sub_24DC1BFD0(*(void *)(v0 + ((((v10 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));

  return swift_deallocObject();
}

uint64_t sub_24DC1C45C()
{
  swift_getAssociatedTypeWitness();
  uint64_t v1 = sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v2 = *(void *)(sub_24DCCB058() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + v6 + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  unint64_t v8 = (*(void *)(*(void *)(v1 - 8) + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24DC17EB0((char *)(v0 + v3), *(uint64_t **)(v0 + v4), *(void *)(v0 + v5), *(uint64_t (**)(uint64_t))(v0 + v6), *(void *)(v0 + v6 + 8), (char *)(v0 + v7), *(void *)(v0 + v8), *(void *)(v0 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24DC1C5C4()
{
  return sub_24DC162F8(0, *(void *)(v0 + 24));
}

uint64_t objectdestroyTm_6()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DC1C63C(uint64_t a1)
{
  return sub_24DC17388(a1, *(uint64_t **)(v1 + 16), *(char **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24DC1C64C(char a1, char a2)
{
  return sub_24DC17780(a1, a2 & 1, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_24DC1C658()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DC1C698()
{
  return sub_24DC163D0(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t type metadata accessor for Materialization()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24DC1C6D0()
{
  return sub_24DCCA688();
}

unint64_t sub_24DC1C724()
{
  return 0xD000000000000155;
}

unint64_t sub_24DC1C744()
{
  return 0xD000000000000077;
}

unint64_t sub_24DC1C760()
{
  return 0xD000000000000058;
}

unint64_t sub_24DC1C77C()
{
  return 0xD000000000000038;
}

unint64_t sub_24DC1C798()
{
  return 0xD0000000000000C5;
}

unint64_t sub_24DC1C7B4()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_24DC1C7D0()
{
  return 0xD000000000000019;
}

uint64_t sub_24DC1C7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  id v19 = 0;
  char v18 = 2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = &v18;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = &v19;
  *(_DWORD *)(v8 + 48) = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_24DC2A1AC;
  *(void *)(v9 + 24) = v8;
  v17[4] = sub_24DC2A350;
  v17[5] = v9;
  v17[0] = MEMORY[0x263EF8330];
  v17[1] = 1107296256;
  void v17[2] = sub_24DC1D6AC;
  v17[3] = &block_descriptor_326;
  uint64_t v10 = _Block_copy(v17);
  swift_retain();
  swift_release();
  unsigned int v11 = objc_msgSend(v4, sel_performWithFlags_action_, a1, v10);
  _Block_release(v10);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a1)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v19) {
    unsigned int v13 = 0;
  }
  else {
    unsigned int v13 = v11;
  }
  if (v13 == 1)
  {
    char v14 = v18;
    if (v18 != 2)
    {
      swift_release();
      char v15 = v14 & 1;
      return v15 & 1;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    id v16 = v19;
    swift_willThrow();

    swift_release();
    return v15 & 1;
  }
LABEL_13:
  __break(1u);
  return result;
}

unint64_t sub_24DC1C9D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  id v20 = 0;
  unsigned int v18 = 0;
  __int16 v19 = 256;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = &v18;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = &v20;
  *(_DWORD *)(v8 + 48) = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_24DC29EA4;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_24DC2A350;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24DC1D6AC;
  aBlock[3] = &block_descriptor_195;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  unsigned int v11 = objc_msgSend(v4, sel_performWithFlags_action_, a1, v10);
  _Block_release(v10);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  unint64_t result = swift_release();
  if (a1)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v20) {
    unsigned int v13 = 0;
  }
  else {
    unsigned int v13 = v11;
  }
  if (v13 == 1)
  {
    if ((v19 & 0x100) == 0)
    {
      uint64_t v14 = v18;
      char v15 = v19;
      swift_release();
      return v14 | ((unint64_t)(v15 & 1) << 32);
    }
    goto LABEL_11;
  }
  if (v20)
  {
    id v16 = v20;
    swift_willThrow();

    return swift_release();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_24DC1CBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  id v18 = 0;
  id v16 = 0;
  char v17 = 1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = &v16;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = &v18;
  *(_DWORD *)(v8 + 48) = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_24DC29ED4;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_24DC2A350;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24DC1D6AC;
  aBlock[3] = &block_descriptor_205_0;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v11 = objc_msgSend(v4, sel_performWithFlags_action_, a1, v10);
  _Block_release(v10);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v18) {
    int v13 = 0;
  }
  else {
    int v13 = (int)v11;
  }
  if (v13 == 1)
  {
    if ((v17 & 1) == 0)
    {
      id v11 = v16;
      swift_release();
      return (uint64_t)v11;
    }
    goto LABEL_12;
  }
  if (v18)
  {
    id v14 = v18;
    swift_willThrow();

    swift_release();
    return (uint64_t)v11;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_24DC1CDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  id v19 = 0;
  id v16 = 0;
  unsigned __int8 v18 = 2;
  unsigned int v17 = 0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = &v16;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = &v19;
  *(_DWORD *)(v8 + 48) = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_24DC2A088;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_24DC2A350;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24DC1D6AC;
  aBlock[3] = &block_descriptor_265_0;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v11 = objc_msgSend(v4, sel_performWithFlags_action_, a1, v10);
  _Block_release(v10);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v19) {
    int v13 = 0;
  }
  else {
    int v13 = (int)v11;
  }
  if (v13 == 1)
  {
    if (((v17 | ((unint64_t)v18 << 32)) & 0xFF00000000) != 0x200000000)
    {
      id v11 = v16;
      swift_release();
      return (uint64_t)v11;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    id v14 = v19;
    swift_willThrow();

    swift_release();
    return (uint64_t)v11;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_24DC1CFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  id v19 = 0;
  id v16 = 0;
  uint64_t v17 = 0;
  int v18 = 0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = &v16;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = &v19;
  *(_DWORD *)(v8 + 48) = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_24DC2A1FC;
  *(void *)(v9 + 24) = v8;
  v15[4] = sub_24DC2A350;
  v15[5] = v9;
  v15[0] = MEMORY[0x263EF8330];
  v15[1] = 1107296256;
  void v15[2] = sub_24DC1D6AC;
  v15[3] = &block_descriptor_336;
  uint64_t v10 = _Block_copy(v15);
  swift_retain();
  swift_release();
  unsigned int v11 = objc_msgSend(v4, sel_performWithFlags_action_, a1, v10);
  _Block_release(v10);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v19) {
    unsigned int v13 = 0;
  }
  else {
    unsigned int v13 = v11;
  }
  if (v13 == 1)
  {
    if (v17)
    {
      uint64_t v10 = v16;
      swift_release();
      return (uint64_t)v10;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    id v14 = v19;
    swift_willThrow();
    swift_bridgeObjectRelease();

    swift_release();
    return (uint64_t)v10;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_24DC1D194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  id v17 = 0;
  char v16 = 1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = &v16;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = &v17;
  *(_DWORD *)(v8 + 48) = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_24DC29AE4;
  *(void *)(v9 + 24) = v8;
  v15[4] = sub_24DC2A350;
  v15[5] = v9;
  v15[0] = MEMORY[0x263EF8330];
  v15[1] = 1107296256;
  void v15[2] = sub_24DC1D6AC;
  v15[3] = &block_descriptor_128;
  uint64_t v10 = _Block_copy(v15);
  swift_retain();
  swift_release();
  unsigned int v11 = objc_msgSend(v4, sel_performWithFlags_action_, a1, v10);
  _Block_release(v10);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a1)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v17) {
    unsigned int v13 = 0;
  }
  else {
    unsigned int v13 = v11;
  }
  if (v13 == 1)
  {
    if ((v16 & 1) == 0) {
      return swift_release();
    }
    goto LABEL_11;
  }
  if (v17)
  {
    id v14 = v17;
    swift_willThrow();

    return swift_release();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_24DC1D36C(uint64_t a1, unsigned char *a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v5);
  *a2 = v5;
  return 1;
}

uint64_t sub_24DC1D3E8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v6);
  int v4 = v6;
  *(unsigned char *)(a2 + 4) = BYTE4(v6);
  *(_DWORD *)a2 = v4;
  *(unsigned char *)(a2 + 5) = 0;
  return 1;
}

uint64_t sub_24DC1D470(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v5);
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = 0;
  return 1;
}

uint64_t sub_24DC1D4F0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v7);
  int v4 = v8;
  char v5 = v9;
  *(void *)a2 = v7;
  *(unsigned char *)(a2 + 12) = v5;
  *(_DWORD *)(a2 + 8) = v4;
  return 1;
}

uint64_t sub_24DC1D57C(uint64_t a1, uint64_t a2, void (*a3)(long long *__return_ptr))
{
  a3(&v6);
  int v4 = v7;
  *(_OWORD *)a2 = v6;
  *(_DWORD *)(a2 + 16) = v4;
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_24DC1D608(uint64_t a1, unsigned char *a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v5);
  *a2 = 0;
  return 1;
}

uint64_t sub_24DC1D680(uint64_t a1, uint64_t (*a2)(void))
{
  return a2() & 1;
}

uint64_t sub_24DC1D6AC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 32);
  id v3 = a2;
  char v4 = v2();

  return v4 & 1;
}

id sub_24DC1D6F0(char *a1)
{
  v71[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = sub_24DCC9078();
  uint64_t v64 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v63 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24DCC8A58();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  int v62 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v53 - v9;
  unsigned int v11 = &v1[OBJC_IVAR____TtC9libfssync20FPFSSQLRestoreEngine_userURL];
  uint64_t v12 = *(void (**)(char *, uint64_t))(v6 + 16);
  uint64_t v65 = v13;
  v12(&v1[OBJC_IVAR____TtC9libfssync20FPFSSQLRestoreEngine_userURL], (uint64_t)a1);
  uint64_t v70 = MEMORY[0x263F8EE78];
  id v14 = v1;
  sub_24DCC8978();
  id v15 = objc_msgSend(self, sel_defaultManager);
  uint64_t v66 = v10;
  char v16 = (void *)sub_24DCC8948();
  v71[0] = 0;
  id v17 = objc_msgSend(v15, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v16, 0, 1, v71);

  id v18 = v71[0];
  if (v17)
  {
    uint64_t v19 = v65;
    uint64_t v20 = sub_24DCC9C28();
    id v21 = v18;

    unint64_t v22 = sub_24DC27B0C(v20, 0x6573616261746164, 0xEB0000000062642FLL);
    swift_bridgeObjectRelease();
    sub_24D785BA8(v22);
    double v23 = *(void (**)(char *, uint64_t))(v6 + 8);
    v23(v66, v19);
    *(void *)&v14[OBJC_IVAR____TtC9libfssync20FPFSSQLRestoreEngine_fpDatabaseURLs] = v70;

    uint64_t v24 = (objc_class *)type metadata accessor for FPFSSQLRestoreEngine(0);
    v67.receiver = v14;
    v67.super_class = v24;
    id v25 = objc_msgSendSuper2(&v67, sel_init);
    v23(a1, v19);
  }
  else
  {
    uint64_t v59 = v11;
    uint64_t v60 = v3;
    uint64_t v58 = v14;
    uint64_t v61 = a1;
    id v26 = v71[0];
    uint64_t v27 = (void *)sub_24DCC8828();

    swift_willThrow();
    id v28 = (id)fpfs_current_or_default_log();
    uint64_t v29 = v63;
    sub_24DCC9088();
    char v30 = v62;
    uint64_t v31 = v65;
    uint64_t v32 = v66;
    ((void (*)(char *, char *, uint64_t))v12)(v62, v66, v65);
    id v33 = v27;
    id v34 = v27;
    uint64_t v35 = sub_24DCC9068();
    os_log_type_t v36 = sub_24DCCA148();
    int v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v38 = swift_slowAlloc();
      char v56 = (void *)swift_slowAlloc();
      uint64_t v57 = (void *)swift_slowAlloc();
      v71[0] = v57;
      *(_DWORD *)uint64_t v38 = 136315394;
      uint64_t v53 = v38 + 4;
      os_log_t v55 = v35;
      uint64_t v39 = (void *)sub_24DCC8948();
      id v40 = objc_msgSend(v39, sel_fp_shortDescription);
      int v54 = v37;
      uint64_t v41 = v30;
      id v42 = v40;

      uint64_t v43 = sub_24DCC97E8();
      unint64_t v45 = v44;

      uint64_t v69 = sub_24D418FB4(v43, v45, (uint64_t *)v71);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      id v46 = *(void (**)(char *, uint64_t))(v6 + 8);
      v46(v41, v31);
      *(_WORD *)(v38 + 12) = 2112;
      swift_getErrorValue();
      id v47 = sub_24DBA2828(v68);
      uint64_t v69 = (uint64_t)v47;
      sub_24DCCA428();
      uint64_t v48 = v56;
      *char v56 = v47;

      os_log_t v49 = v55;
      _os_log_impl(&dword_24D3D0000, v55, (os_log_type_t)v54, "Failed to enumerate %s: %@", (uint8_t *)v38, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v48, -1, -1);
      uint64_t v50 = v57;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v50, -1, -1);
      MEMORY[0x25332B030](v38, -1, -1);

      v46(v61, v31);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v29, v60);
      v46(v66, v31);
      v46(v59, v31);
    }
    else
    {

      uint64_t v51 = *(void (**)(char *, uint64_t))(v6 + 8);
      v51(v30, v31);

      v51(v61, v31);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v29, v60);
      v51(v32, v31);
      v51(v59, v31);
    }

    type metadata accessor for FPFSSQLRestoreEngine(0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v25;
}

uint64_t sub_24DC1DE78(uint64_t a1, uint64_t a2)
{
  uint64_t v159 = a2;
  uint64_t v161 = a1;
  uint64_t v2 = sub_24DCC8A58();
  uint64_t v149 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v145 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v160 = (char *)v145 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v163 = (char *)v145 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  BOOL v175 = (char *)v145 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v14 = (char *)v145 - v13;
  uint64_t v177 = v15;
  MEMORY[0x270FA5388](v12);
  uint64_t v186 = (void *)((char *)v145 - v16);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v167 = (char *)v145 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  id v21 = (char *)v145 - v20;
  uint64_t v185 = sub_24DCC9078();
  uint64_t v22 = *(void *)(v185 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v185);
  v145[1] = (char *)v145 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)v145 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v165 = (char *)v145 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  BOOL v172 = (char *)v145 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  int v171 = (char *)v145 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v162 = (char *)v145 - v35;
  MEMORY[0x270FA5388](v34);
  int v37 = (char *)v145 - v36;
  id v38 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v39 = sub_24DCC9068();
  os_log_type_t v40 = sub_24DCCA148();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 0;
    _os_log_impl(&dword_24D3D0000, v39, v40, "Checking if provider is iCloud Drive on FPFS", v41, 2u);
    MEMORY[0x25332B030](v41, -1, -1);
  }

  id v42 = *(void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v183 = v22 + 8;
  uint64_t v182 = v42;
  v42(v37, v185);
  uint64_t v43 = *(NSObject **)(v161 + 16);
  uint64_t v178 = v14;
  uint64_t v146 = v27;
  v145[0] = v5;
  if (v43)
  {
    uint64_t v188 = *(void (**)(char *, uint64_t, uint64_t))(v149 + 16);
    unint64_t v44 = v43;
    uint64_t v45 = v161 + ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80));
    uint64_t v181 = *(void *)(v149 + 72);
    unint64_t v46 = v149 + 56;
    id v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48);
    uint64_t v48 = (void (**)(void *, char *, uint64_t))(v149 + 32);
    uint64_t v187 = (void (*)(char *, uint64_t, uint64_t))(v149 + 16);
    os_log_t v49 = (void (**)(void *, uint64_t))(v149 + 8);
    swift_bridgeObjectRetain();
    uint64_t v180 = (void (**)(char *, uint64_t))(v46 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
    os_log_t v184 = v44;
    uint64_t v50 = v186;
    while (1)
    {
      v188(v21, v45, v2);
      uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v46;
      (*(void (**)(char *, void, uint64_t, uint64_t))v46)(v21, 0, 1, v2);
      if ((*v47)(v21, 1, v2) == 1) {
        break;
      }
      (*v48)(v50, v21, v2);
      sub_24DC1FC94();
      (*v49)(v50, v2);
      v45 += v181;
      unint64_t v44 = ((char *)v44 - 1);
      if (!v44)
      {
        uint64_t v52 = (uint64_t)v178;
        uint64_t v53 = v167;
        uint64_t v43 = v184;
        goto LABEL_9;
      }
    }
    uint64_t v52 = (uint64_t)v178;
    uint64_t v53 = v167;
    uint64_t v43 = v184;
  }
  else
  {
    uint64_t v52 = (uint64_t)v14;
    uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v149 + 56);
    swift_bridgeObjectRetain();
    uint64_t v53 = v167;
LABEL_9:
    v51(v21, 1, 1, v2);
  }
  uint64_t v54 = v161;
  swift_bridgeObjectRelease();
  if (v43)
  {
    uint64_t v187 = *(void (**)(char *, uint64_t, uint64_t))(v149 + 16);
    uint64_t v55 = *(unsigned __int8 *)(v149 + 80);
    uint64_t v56 = v54 + ((v55 + 32) & ~v55);
    uint64_t v169 = *(void *)(v149 + 72);
    uint64_t v174 = v149 + 56;
    uint64_t v173 = (unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48);
    uint64_t v179 = (void (**)(uint64_t, char *, uint64_t))(v149 + 32);
    uint64_t v188 = (void (*)(char *, uint64_t, uint64_t))(v149 + 16);
    uint64_t v180 = (void (**)(char *, uint64_t))(v149 + 8);
    uint64_t v148 = &v193;
    uint64_t v156 = v55 | 7;
    uint64_t v157 = (v55 + 24) & ~v55;
    unint64_t v155 = ((unint64_t)v177 + v157 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v154 = (v155 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v153 = (v154 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v152 = v153 + 8;
    uint64_t v151 = v190;
    swift_bridgeObjectRetain();
    uint64_t v177 = 0;
    uint64_t v176 = 0;
    char v170 = 0;
    *(void *)&long long v57 = 136315138;
    long long v158 = v57;
    uint64_t v147 = MEMORY[0x263F8EE58] + 8;
    unint64_t v150 = 0x800000024DD23390;
    uint64_t v58 = v165;
    uint64_t v168 = v51;
    while (1)
    {
      v187(v53, v56, v2);
      v51(v53, 0, 1, v2);
      if ((*v173)(v53, 1, v2) == 1) {
        break;
      }
      os_log_t v184 = v43;
      uint64_t v60 = *v179;
      (*v179)(v52, v53, v2);
      id v61 = objc_msgSend(self, sel_defaultManager, v145[0]);
      sub_24DCC8A18();
      int v62 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      unsigned int v63 = objc_msgSend(v61, sel_fileExistsAtPath_, v62);

      id v64 = (id)fpfs_current_or_default_log();
      uint64_t v181 = v56;
      if (v63)
      {
        uint64_t v164 = v60;
        uint64_t v65 = v162;
        sub_24DCC9088();
        uint64_t v66 = v175;
        v187(v175, v52, v2);
        objc_super v67 = sub_24DCC9068();
        os_log_type_t v68 = sub_24DCCA148();
        if (os_log_type_enabled(v67, v68))
        {
          uint64_t v69 = (uint8_t *)swift_slowAlloc();
          uint64_t v70 = swift_slowAlloc();
          aBlock[0] = v70;
          *(_DWORD *)uint64_t v69 = v158;
          uint64_t v71 = (void *)sub_24DCC8948();
          id v72 = objc_msgSend(v71, sel_fp_shortDescription);

          uint64_t v73 = sub_24DCC97E8();
          uint64_t v74 = v2;
          unint64_t v76 = v75;

          uint64_t v192 = sub_24D418FB4(v73, v76, aBlock);
          uint64_t v77 = v170;
          sub_24DCCA428();
          uint64_t v2 = v74;
          swift_bridgeObjectRelease();
          int v166 = *v180;
          v166(v175, v74);
          _os_log_impl(&dword_24D3D0000, v67, v68, "Patching database at %s", v69, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25332B030](v70, -1, -1);
          uint64_t v52 = (uint64_t)v178;
          MEMORY[0x25332B030](v69, -1, -1);

          v182(v162, v185);
          uint64_t v78 = v160;
        }
        else
        {
          int v166 = *v180;
          v166(v66, v2);

          v182(v65, v185);
          uint64_t v78 = v160;
          uint64_t v77 = v170;
        }
        uint64_t v92 = swift_allocObject();
        strcpy((char *)(v92 + 16), "openDatabase");
        *(unsigned char *)(v92 + 29) = 0;
        *(_WORD *)(v92 + 30) = -5120;
        uint64_t v93 = sub_24DC20E80(v52);
        if (v77)
        {
          swift_bridgeObjectRelease();
          id v116 = (id)fpfs_current_or_default_log();
          uint64_t v117 = v146;
          sub_24DCC9088();
          v187(v78, v52, v2);
          id v118 = v77;
          swift_retain();
          id v119 = v77;
          uint64_t v120 = sub_24DCC9068();
          os_log_type_t v121 = sub_24DCCA128();
          int v122 = v121;
          if (os_log_type_enabled(v120, v121))
          {
            uint64_t v123 = swift_slowAlloc();
            uint64_t v188 = (void (*)(char *, uint64_t, uint64_t))v2;
            uint64_t v124 = v123;
            uint64_t v186 = (void *)swift_slowAlloc();
            uint64_t v187 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
            aBlock[0] = (uint64_t)v187;
            *(_DWORD *)uint64_t v124 = 136315650;
            os_log_t v184 = v120;
            swift_beginAccess();
            uint64_t v125 = v77;
            uint64_t v126 = *(void *)(v92 + 16);
            unint64_t v127 = *(void *)(v92 + 24);
            swift_bridgeObjectRetain();
            uint64_t v191 = sub_24D418FB4(v126, v127, aBlock);
            LODWORD(v181) = v122;
            sub_24DCCA428();
            swift_release();
            swift_bridgeObjectRelease();
            *(_WORD *)(v124 + 12) = 2080;
            double v128 = (void *)sub_24DCC8948();
            id v129 = objc_msgSend(v128, sel_fp_shortDescription);

            uint64_t v130 = sub_24DCC97E8();
            unint64_t v132 = v131;

            uint64_t v191 = sub_24D418FB4(v130, v132, aBlock);
            sub_24DCCA428();
            swift_bridgeObjectRelease();
            uint64_t v133 = (void (*)(uint64_t, uint64_t))v166;
            v166(v78, (uint64_t)v188);
            *(_WORD *)(v124 + 22) = 2112;
            swift_getErrorValue();
            id v134 = sub_24DBA2828(v190[8]);
            uint64_t v191 = (uint64_t)v134;
            sub_24DCCA428();
            long long v135 = v186;
            *uint64_t v186 = v134;

            os_log_t v136 = v184;
            _os_log_impl(&dword_24D3D0000, v184, (os_log_type_t)v181, "[%s] Failed to open database at %s: %@", (uint8_t *)v124, 0x20u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
            swift_arrayDestroy();
            MEMORY[0x25332B030](v135, -1, -1);
            double v137 = v187;
            swift_arrayDestroy();
            MEMORY[0x25332B030](v137, -1, -1);
            uint64_t v138 = v124;
            uint64_t v2 = (uint64_t)v188;
            MEMORY[0x25332B030](v138, -1, -1);

            v182(v146, v185);
          }
          else
          {
            swift_release();
            uint64_t v133 = (void (*)(uint64_t, uint64_t))v166;
            v166(v78, v2);

            v182(v117, v185);
            uint64_t v125 = v77;
          }
          swift_beginAccess();
          uint64_t v141 = *(void *)(v92 + 16);
          uint64_t v142 = *(void *)(v92 + 24);
          id v143 = v125;
          swift_bridgeObjectRetain();
          uint64_t v144 = (uint64_t)v178;
          sub_24DC201A0((uint64_t)v178, v125, -1, v141, v142);
          swift_bridgeObjectRelease();

          v133(v144, v2);
          uint64_t v115 = *(void *)(v92 + 16);
          swift_bridgeObjectRetain();
          swift_release();
          sub_24D43DD74((uint64_t)v177);
          return v115;
        }
        uint64_t v94 = v93;
        uint64_t v95 = v52;
        uint64_t v96 = qword_26B1A27B0;
        uint64_t v97 = *(void **)((char *)v93 + qword_26B1A27B0);
        swift_beginAccess();
        *(void *)(v92 + 16) = 0xD000000000000010;
        *(void *)(v92 + 24) = v150;
        swift_retain();
        uint64_t v98 = v97;
        swift_bridgeObjectRelease();
        uint64_t v192 = -1;
        uint64_t v99 = (char *)v186;
        v187((char *)v186, v95, v2);
        uint64_t v100 = swift_allocObject();
        *(void *)(v100 + 16) = v92;
        v164(v100 + v157, v99, v2);
        *(void *)(v100 + v155) = v94;
        *(void *)(v100 + v154) = v159;
        *(void *)(v100 + v153) = &v192;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_24D43DD74((uint64_t)v177);
        uint64_t v101 = swift_allocObject();
        *(void *)(v101 + 16) = sub_24DC2998C;
        *(void *)(v101 + 24) = v100;
        v190[2] = sub_24DC29A54;
        v190[3] = v101;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        v190[0] = sub_24DC1D6AC;
        v190[1] = &block_descriptor_42;
        uint64_t v102 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        uint64_t v177 = v98;
        unsigned __int8 v103 = objc_msgSend(v98, sel_performWithFlags_action_, 9, v102);
        _Block_release(v102);
        LOBYTE(v102) = swift_isEscapingClosureAtFileLocation();
        uint64_t result = swift_release();
        if (v102)
        {
          __break(1u);
          return result;
        }
        if ((v103 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v115 = *(void *)(v92 + 16);
          uint64_t v139 = v192;
          sub_24DC29A80();
          swift_allocError();
          *uint64_t v140 = v139;
          swift_bridgeObjectRetain();

          sub_24D805554();
          swift_release_n();
          v166(v178, v2);
          swift_release();
          swift_release();
          return v115;
        }
        id v105 = (id)fpfs_current_or_default_log();
        sub_24DCC9088();
        uint64_t v106 = sub_24DCC9068();
        os_log_type_t v107 = sub_24DCCA148();
        if (os_log_type_enabled(v106, v107))
        {
          uint64_t v108 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v108 = 0;
          _os_log_impl(&dword_24D3D0000, v106, v107, "Marking domain as needs-reindexing", v108, 2u);
          MEMORY[0x25332B030](v108, -1, -1);
        }

        v182(v171, v185);
        sub_24DC20554((uint64_t)v178);
        id v109 = (id)fpfs_current_or_default_log();
        sub_24DCC9088();
        uint64_t v110 = sub_24DCC9068();
        os_log_type_t v111 = sub_24DCCA118();
        if (os_log_type_enabled(v110, v111))
        {
          uint64_t v112 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v112 = 0;
          _os_log_impl(&dword_24D3D0000, v110, v111, "Flushing database...", v112, 2u);
          MEMORY[0x25332B030](v112, -1, -1);
        }

        v182(v172, v185);
        strcpy((char *)(v92 + 16), "flushDatabase");
        *(_WORD *)(v92 + 30) = -4864;
        swift_bridgeObjectRelease();
        id v113 = *(id *)((char *)v94 + v96);
        sub_24DC1D194(5, (uint64_t)sub_24DC24578, 0);
        char v170 = 0;

        uint64_t v52 = (uint64_t)v178;
        sub_24DC201A0((uint64_t)v178, 0, 0, 1701736292, 0xE400000000000000);

        sub_24D805554();
        swift_release_n();
        v166((char *)v52, v2);
        swift_release();
        uint64_t v177 = sub_24DC2998C;
        uint64_t v176 = v100;
        uint64_t v53 = v167;
        uint64_t v58 = v165;
      }
      else
      {
        sub_24DCC9088();
        uint64_t v79 = v163;
        v187(v163, v52, v2);
        double v80 = sub_24DCC9068();
        os_log_type_t v81 = sub_24DCCA148();
        if (os_log_type_enabled(v80, v81))
        {
          uint64_t v82 = swift_slowAlloc();
          uint64_t v83 = swift_slowAlloc();
          aBlock[0] = v83;
          *(_DWORD *)uint64_t v82 = v158;
          double v84 = (void *)sub_24DCC8948();
          id v85 = objc_msgSend(v84, sel_fp_shortDescription);

          uint64_t v86 = sub_24DCC97E8();
          uint64_t v87 = v2;
          uint64_t v88 = v52;
          unint64_t v90 = v89;

          *(void *)(v82 + 4) = sub_24D418FB4(v86, v90, aBlock);
          uint64_t v52 = v88;
          uint64_t v2 = v87;
          uint64_t v58 = v165;
          swift_bridgeObjectRelease();
          uint64_t v59 = *v180;
          (*v180)(v163, v2);
          _os_log_impl(&dword_24D3D0000, v80, v81, "No file at %s, so no need to patch.", (uint8_t *)v82, 0xCu);
          swift_arrayDestroy();
          uint64_t v91 = v83;
          uint64_t v53 = v167;
          MEMORY[0x25332B030](v91, -1, -1);
          MEMORY[0x25332B030](v82, -1, -1);
        }
        else
        {

          uint64_t v59 = *v180;
          (*v180)(v79, v2);
        }
        v182(v58, v185);
        v59((char *)v52, v2);
      }
      uint64_t v51 = v168;
      uint64_t v56 = v181 + v169;
      uint64_t v43 = (os_log_t)((char *)v184 - 1);
      if (v184 == (os_log_t)1) {
        goto LABEL_32;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v177 = 0;
    uint64_t v176 = 0;
LABEL_32:
    v51(v53, 1, 1, v2);
  }
  uint64_t v114 = v177;
  swift_bridgeObjectRelease();
  sub_24D43DD74((uint64_t)v114);
  return 0;
}

id sub_24DC1FB18()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FPFSSQLRestoreEngine(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24DC1FBD0()
{
  return type metadata accessor for FPFSSQLRestoreEngine(0);
}

uint64_t type metadata accessor for FPFSSQLRestoreEngine(uint64_t a1)
{
  return sub_24D3FC810(a1, (uint64_t *)&unk_269870FF0);
}

uint64_t sub_24DC1FBF8()
{
  uint64_t result = sub_24DCC8A58();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_24DC1FC94()
{
  uint64_t v0 = sub_24DCC9078();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24DCC8A58();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v38 - v9;
  sub_24DCC89A8();
  sub_24DCC89A8();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v8, v4);
  uint64_t v12 = sub_24D4FF88C((uint64_t)v10, 0);
  v11(v10, v4);
  if (!v12) {
    return;
  }
  uint64_t v13 = (void *)sub_24D4F0070();
  uint64_t v14 = sub_24DCC97E8();
  uint64_t v16 = v15;

  if (v14 != 0xD00000000000002BLL || v16 != 0x800000024DCFC5D0)
  {
    char v17 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_6;
    }
    uint64_t v33 = (void *)sub_24D4F0070();
    uint64_t v34 = sub_24DCC97E8();
    uint64_t v36 = v35;

    if (v34 != 0xD000000000000032 || v36 != 0x800000024DCFC600)
    {
      char v37 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0)
      {

        return;
      }
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
LABEL_6:
  id v18 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  id v19 = v12;
  uint64_t v20 = sub_24DCC9068();
  os_log_type_t v21 = sub_24DCCA118();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v42 = v39;
    *(_DWORD *)uint64_t v22 = 136315138;
    id v38 = v22 + 4;
    uint64_t v23 = (void *)sub_24D4F0070();
    uint64_t v24 = sub_24DCC97E8();
    uint64_t v40 = v1;
    unint64_t v26 = v25;

    uint64_t v41 = sub_24D418FB4(v24, v26, &v42);
    sub_24DCCA428();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D3D0000, v20, v21, "Importing domain in provider %s. Turning on iCloud Drive on FPFS.", v22, 0xCu);
    uint64_t v27 = v39;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v27, -1, -1);
    MEMORY[0x25332B030](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v3, v0);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  sub_24DCC97E8();
  id v28 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v29 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(v28, sel_initWithSuiteName_, v29);

  if (v30)
  {
    uint64_t v31 = (void *)*MEMORY[0x263F05310];
    if ((objc_msgSend(v30, sel_BOOLForKey_, *MEMORY[0x263F05310]) & 1) == 0)
    {
      objc_msgSend(v30, sel_setInteger_forKey_, 0, *MEMORY[0x263F05318]);
      id v32 = v31;
      objc_msgSend(v30, sel_setBool_forKey_, 1, v32);
    }
  }
}

void sub_24DC201A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_24DCC8A58();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v25 - v14;
  sub_24DCC89A8();
  sub_24DCC89A8();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v13, v9);
  id v18 = sub_24D4FF88C((uint64_t)v15, 0);
  v16(v15, v9);
  if (v18)
  {
    id v19 = (void *)sub_24D4F0070();
    sub_24DCC97E8();

    strcpy((char *)v25, "d2d_restore_");
    BYTE1(v25[3]) = 0;
    HIWORD(v25[3]) = -5120;
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    char v17 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v17 = (void *)sub_24DCC97B8();
  }
  id v20 = objc_msgSend(self, sel_defaultManager);
  id v21 = objc_msgSend(v20, sel_sessionForProviderID_version_, v17, 0);

  if (v21)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197F00);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24DCCECD0;
    strcpy((char *)v25, "operationType");
    HIWORD(v25[3]) = -4864;
    uint64_t v23 = MEMORY[0x263F8D310];
    sub_24DCCA688();
    *(void *)(inited + 96) = v23;
    *(void *)(inited + 72) = a4;
    *(void *)(inited + 80) = a5;
    strcpy((char *)v25, "missedItems");
    v25[3] = -352321536;
    swift_bridgeObjectRetain();
    sub_24DCCA688();
    *(void *)(inited + 168) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 144) = a3;
    sub_24D4290BC(inited);
    uint64_t v24 = (void *)sub_24DCC9558();
    swift_bridgeObjectRelease();
    if (a2) {
      a2 = (void *)sub_24DCC8818();
    }
    objc_msgSend(v21, sel_postReportWithCategory_type_payload_error_, 1, 1, v24, a2);
  }
}

uint64_t sub_24DC20554(uint64_t a1)
{
  uint64_t v2 = sub_24DCC9078();
  uint64_t v75 = *(void *)(v2 - 8);
  uint64_t v76 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v69 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v71 = (char *)&v64 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v74 = (void (*)(char *, uint64_t))((char *)&v64 - v7);
  uint64_t v8 = sub_24DCC8A58();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  os_log_type_t v68 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v70 = (char *)&v64 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  id v72 = (char *)&v64 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  id v18 = (char *)&v64 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  id v21 = (char *)&v64 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v64 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v64 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v64 - v28;
  uint64_t v73 = a1;
  sub_24DCC89A8();
  sub_24DCC89A8();
  id v30 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v31 = v8;
  v30(v27, v8);
  id v32 = (void (*)(char *, uint64_t))sub_24D4FF88C((uint64_t)v29, 0);
  uint64_t v66 = v18;
  uint64_t v67 = v9;
  uint64_t v65 = v24;
  uint64_t v74 = v32;
  v30(v29, v8);
  uint64_t v33 = v9 + 8;
  if (v74)
  {
    uint64_t v34 = (char *)objc_msgSend(self, sel_defaultManager);
    uint64_t v35 = v30;
    sub_24DCC89A8();
    sub_24DCC89A8();
    v30(v21, v8);
    uint64_t v36 = v65;
    sub_24DCC89A8();
    v30(v27, v8);
    sub_24DCC97E8();
    char v37 = v66;
    sub_24DCC8978();
    swift_bridgeObjectRelease();
    id v38 = v72;
    sub_24DCC8978();
    sub_24DCC8A18();
    uint64_t v39 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    uint64_t v69 = v34;
    objc_msgSend(v34, sel_fp_createPathIfNeeded_, v39);

    id v40 = (id)fpfs_current_or_default_log();
    uint64_t v41 = v71;
    sub_24DCC9088();
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
    uint64_t v73 = v33;
    uint64_t v43 = v70;
    v42(v70, v38, v31);
    unint64_t v44 = sub_24DCC9068();
    os_log_type_t v45 = sub_24DCCA148();
    if (os_log_type_enabled(v44, v45))
    {
      unint64_t v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      v78[0] = v47;
      *(_DWORD *)unint64_t v46 = 136315138;
      uint64_t v48 = sub_24DCC8A18();
      uint64_t v77 = sub_24D418FB4(v48, v49, v78);
      char v37 = v66;
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      v30(v43, v31);
      _os_log_impl(&dword_24D3D0000, v44, v45, "Marking domain as needing reindexing at %s", v46, 0xCu);
      swift_arrayDestroy();
      uint64_t v50 = v47;
      uint64_t v36 = v65;
      MEMORY[0x25332B030](v50, -1, -1);
      uint64_t v51 = v46;
      id v38 = v72;
      MEMORY[0x25332B030](v51, -1, -1);

      (*(void (**)(char *, uint64_t))(v75 + 8))(v71, v76);
    }
    else
    {
      v30(v43, v31);

      (*(void (**)(char *, uint64_t))(v75 + 8))(v41, v76);
    }
    id v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF8F8]), sel_init);
    int v62 = (void *)sub_24DCC8948();
    objc_msgSend(v61, sel_writeToURL_atomically_, v62, 0);

    v35(v38, v31);
    v35(v37, v31);
    return ((uint64_t (*)(char *, uint64_t))v35)(v36, v31);
  }
  else
  {
    uint64_t v74 = v30;
    id v52 = (id)fpfs_current_or_default_log();
    uint64_t v53 = v69;
    sub_24DCC9088();
    uint64_t v54 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v68, v73, v8);
    uint64_t v55 = sub_24DCC9068();
    os_log_type_t v56 = sub_24DCCA128();
    if (os_log_type_enabled(v55, v56))
    {
      long long v57 = (uint8_t *)swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      v78[0] = v58;
      uint64_t v73 = v33;
      *(_DWORD *)long long v57 = 136315138;
      sub_24DC29B0C();
      uint64_t v59 = sub_24DCCAD78();
      uint64_t v77 = sub_24D418FB4(v59, v60, v78);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      v74(v54, v31);
      _os_log_impl(&dword_24D3D0000, v55, v56, "No providerID found for url %s", v57, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v58, -1, -1);
      MEMORY[0x25332B030](v57, -1, -1);
    }
    else
    {
      v74(v54, v31);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v53, v76);
  }
}

void *sub_24DC20E80(uint64_t a1)
{
  uint64_t v66 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197780);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v70 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24DCC8A58();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v60 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v71 = (char *)&v60 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v60 - v14;
  MEMORY[0x270FA5388](v13);
  id v72 = (char *)&v60 - v16;
  sub_24DCC88E8();
  uint64_t v67 = v15;
  sub_24DCC8978();
  sub_24DCC8978();
  aBlock[4] = sub_24DA6F80C;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24D3E122C;
  aBlock[3] = &block_descriptor_316_1;
  uint64_t v74 = _Block_copy(aBlock);
  sub_24DCC89A8();
  uint64_t v65 = v10;
  sub_24DCC89A8();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v7, v3);
  os_log_type_t v68 = v17;
  uint64_t v69 = v4 + 8;
  uint64_t v18 = sub_24DCC8918();
  unint64_t v20 = v19;
  uint64_t v62 = v3;
  v17(v10, v3);
  id v21 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v63 = v4 + 16;
  uint64_t v64 = v21;
  v21(v7, (uint64_t)v15, v3);
  type metadata accessor for DocumentWharf();
  swift_allocObject();
  uint64_t v22 = v74;
  _Block_copy(v74);
  uint64_t v23 = sub_24DCABAEC(v18, v20, (uint64_t)v7, v22, 0x100000000uLL, 0, 0);
  uint64_t v24 = self;
  swift_retain();
  id v25 = objc_msgSend(v24, sel_defaultStore);
  uint64_t v26 = (int)objc_msgSend(v25, sel_softConcurrentOperationLimit);
  LODWORD(v7) = objc_msgSend(v25, sel_hardConcurrentOperationLimit);

  type metadata accessor for JobLimit();
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = 0;
  v27[3] = v26;
  v27[4] = v26;
  v27[5] = (int)v7;
  id v28 = objc_msgSend(v24, byte_265308198);
  uint64_t v29 = (int)objc_msgSend(v28, sel_softConcurrentContentUpdateLimit);
  LODWORD(v26) = objc_msgSend(v28, sel_hardConcurrentContentUpdateLimit);

  id v30 = (void *)swift_allocObject();
  v30[2] = 0;
  v30[3] = v29;
  v30[4] = v29;
  v30[5] = (int)v26;
  id v31 = objc_msgSend(v24, byte_265308198);
  uint64_t v32 = (int)objc_msgSend(v31, sel_softConcurrentMetadataOnlyUpdateLimit);
  LODWORD(v29) = objc_msgSend(v31, sel_hardConcurrentMetadataOnlyUpdateLimit);

  uint64_t v33 = (void *)swift_allocObject();
  v33[2] = 0;
  void v33[3] = v32;
  v33[4] = v32;
  v33[5] = (int)v29;
  id v34 = objc_msgSend(v24, byte_265308198);
  uint64_t v35 = (int)objc_msgSend(v34, sel_softConcurrentProvideFileLimit);
  LODWORD(v32) = objc_msgSend(v34, sel_hardConcurrentProvideFileLimit);

  uint64_t v36 = (void *)swift_allocObject();
  void v36[2] = 0;
  v36[3] = v35;
  v36[4] = v35;
  v36[5] = (int)v32;
  type metadata accessor for RestoreUpgradeSchemaVFSFileTree(0);
  swift_allocObject();
  uint64_t v61 = v23;
  char v37 = (void *)sub_24DC339D4(v23, (uint64_t)v27, (uint64_t)v30, (uint64_t)v33, (uint64_t)v36);
  swift_retain();
  id v38 = objc_msgSend(v24, sel_defaultStore);
  uint64_t v39 = (int)objc_msgSend(v38, sel_softConcurrentOperationLimit);
  LODWORD(v33) = objc_msgSend(v38, sel_hardConcurrentOperationLimit);

  id v40 = (void *)swift_allocObject();
  void v40[2] = 0;
  v40[3] = v39;
  v40[4] = v39;
  void v40[5] = (int)v33;
  id v41 = objc_msgSend(v24, sel_defaultStore);
  uint64_t v42 = (int)objc_msgSend(v41, sel_softConcurrentContentUpdateLimit);
  LODWORD(v36) = objc_msgSend(v41, sel_hardConcurrentContentUpdateLimit);

  uint64_t v43 = (void *)swift_allocObject();
  v43[2] = 0;
  void v43[3] = v42;
  v43[4] = v42;
  v43[5] = (int)v36;
  id v44 = objc_msgSend(v24, sel_defaultStore);
  uint64_t v45 = (int)objc_msgSend(v44, sel_softConcurrentMetadataOnlyUpdateLimit);
  LODWORD(v32) = objc_msgSend(v44, sel_hardConcurrentMetadataOnlyUpdateLimit);

  unint64_t v46 = (void *)swift_allocObject();
  v46[2] = 0;
  v46[3] = v45;
  v46[4] = v45;
  v46[5] = (int)v32;
  id v47 = objc_msgSend(v24, sel_defaultStore);
  uint64_t v48 = (int)objc_msgSend(v47, sel_softConcurrentProvideFileLimit);
  LODWORD(v32) = objc_msgSend(v47, sel_hardConcurrentProvideFileLimit);

  unint64_t v49 = (void *)swift_allocObject();
  v49[2] = 0;
  v49[3] = v48;
  v49[4] = v48;
  v49[5] = (int)v32;
  type metadata accessor for RestoreUpgradeSchemaFPFileTree(0);
  swift_allocObject();
  uint64_t v50 = sub_24DC339A0(v61, (uint64_t)v40, (uint64_t)v43, (uint64_t)v46, (uint64_t)v49);
  uint64_t v51 = (uint64_t)v65;
  uint64_t v52 = v62;
  v64(v65, v66, v62);
  uint64_t v53 = type metadata accessor for TelemetrySignposter(0);
  uint64_t v54 = (uint64_t)v70;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v70, 1, 1, v53);
  swift_retain();
  swift_retain();
  uint64_t v55 = (void *)sub_24DCC97B8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1992E0);
  uint64_t v56 = swift_allocObject();
  long long v57 = sub_24D871048(v51, v37, v50, v54, 0, (void *)0x65726F74736572, 0xE700000000000000, 0xD000000000000019, 0x800000024DD23CB0, v55, 0, v56);
  swift_release();
  swift_release();
  swift_release();
  _Block_release(v74);
  uint64_t v58 = v68;
  v68(v71, v52);
  v58(v67, v52);
  v58(v72, v52);
  return v57;
}

uint64_t sub_24DC216D4(char *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v218 = a5;
  uint64_t v219 = a6;
  uint64_t v221 = a4;
  uint64_t v223 = a3;
  aBlock[9] = *(id *)MEMORY[0x263EF8340];
  uint64_t v228 = sub_24DCC9078();
  uint64_t v8 = *(void *)(v228 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v228);
  uint64_t v210 = (char *)&v206 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v212 = (char *)&v206 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v215 = (char *)&v206 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v217 = (char *)&v206 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v220 = (char *)&v206 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v222 = (char *)&v206 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v206 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v208 = (char *)&v206 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v207 = (char *)&v206 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v209 = (char *)&v206 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v211 = (char *)&v206 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v213 = (char *)&v206 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  unint64_t v214 = (char *)&v206 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  BOOL v216 = (char *)&v206 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  id v40 = (char *)&v206 - v39;
  uint64_t v41 = MEMORY[0x270FA5388](v38);
  uint64_t v43 = (char *)&v206 - v42;
  MEMORY[0x270FA5388](v41);
  uint64_t v45 = (char *)&v206 - v44;
  uint64_t v227 = a2 + 16;
  id v46 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  id v47 = sub_24DCC9068();
  os_log_type_t v48 = sub_24DCCA118();
  BOOL v49 = os_log_type_enabled(v47, v48);
  uint64_t v225 = a2;
  if (v49)
  {
    uint64_t v50 = a1;
    uint64_t v51 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v51 = 0;
    _os_log_impl(&dword_24D3D0000, v47, v48, "Disabling foreign keys...", v51, 2u);
    uint64_t v52 = v51;
    a1 = v50;
    a2 = v225;
    MEMORY[0x25332B030](v52, -1, -1);
  }

  uint64_t v53 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v224 = v8 + 8;
  uint64_t v226 = v53;
  v53(v45, v228);
  swift_beginAccess();
  *(void *)(a2 + 16) = 0xD000000000000012;
  *(void *)(a2 + 24) = 0x800000024DD233B0;
  swift_bridgeObjectRelease();
  aBlock[4] = sub_24DC1C7D0;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  uint64_t aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_131_1;
  uint64_t v54 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  uint64_t v55 = objc_msgSend(a1, sel_executeSwift_error_, v54, aBlock);
  _Block_release(v54);
  id v56 = aBlock[0];
  id v57 = aBlock[0];
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
    goto LABEL_44;
  }
  if (!v55)
  {
    uint64_t v62 = (void *)sub_24DCC8828();

    swift_willThrow();
    id v63 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    swift_retain();
    id v64 = v62;
    uint64_t v65 = sub_24DCC9068();
    os_log_type_t v66 = sub_24DCCA128();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = swift_slowAlloc();
      os_log_type_t v68 = (void *)swift_slowAlloc();
      uint64_t v222 = (char *)swift_slowAlloc();
      aBlock[0] = v222;
      *(_DWORD *)uint64_t v67 = 136315394;
      swift_beginAccess();
      uint64_t v69 = *(void *)(a2 + 16);
      unint64_t v70 = *(void *)(v225 + 24);
      swift_bridgeObjectRetain();
      v241[0] = (id)sub_24D418FB4(v69, v70, (uint64_t *)aBlock);
      sub_24DCCA428();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v67 + 12) = 2112;
      swift_getErrorValue();
      id v71 = sub_24DBA2828(v234);
      v241[0] = v71;
      a2 = v225;
      sub_24DCCA428();
      *os_log_type_t v68 = v71;

      _os_log_impl(&dword_24D3D0000, v65, v66, "[%s] Failed to disable foreign keys: %@", (uint8_t *)v67, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v68, -1, -1);
      id v72 = v222;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v72, -1, -1);
      MEMORY[0x25332B030](v67, -1, -1);
    }
    else
    {
      swift_release();
    }
    v226(v23, v228);
    swift_beginAccess();
    uint64_t v73 = *(void *)(a2 + 16);
    uint64_t v74 = *(void *)(a2 + 24);
    id v75 = v62;
    swift_bridgeObjectRetain();
    sub_24DC201A0(v223, v62, -1, v73, v74);

    swift_bridgeObjectRelease();
    return 0;
  }
  id v58 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v59 = sub_24DCC9068();
  os_log_type_t v60 = sub_24DCCA118();
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v61 = 0;
    _os_log_impl(&dword_24D3D0000, v59, v60, "Updating history table...", v61, 2u);
    MEMORY[0x25332B030](v61, -1, -1);
  }

  v226(v43, v228);
  swift_beginAccess();
  *(void *)(a2 + 16) = 0xD000000000000014;
  *(void *)(a2 + 24) = 0x800000024DD233D0;
  swift_bridgeObjectRelease();
  sub_24DC23B4C((uint64_t)v221);
  id v76 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v77 = sub_24DCC9068();
  os_log_type_t v78 = sub_24DCCA118();
  if (os_log_type_enabled(v77, v78))
  {
    double v80 = a1;
    os_log_type_t v81 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v81 = 0;
    _os_log_impl(&dword_24D3D0000, v77, v78, "Patching reconciliation table...", v81, 2u);
    uint64_t v82 = v81;
    a1 = v80;
    a2 = v225;
    MEMORY[0x25332B030](v82, -1, -1);
  }

  v226(v40, v228);
  swift_beginAccess();
  *(void *)(a2 + 16) = 0xD000000000000018;
  *(void *)(a2 + 24) = 0x800000024DD233F0;
  swift_bridgeObjectRelease();
  uint64_t v83 = v218;
  sub_24DC23C94(a1, v218);
  uint64_t v85 = v84;
  if (v84 >= 1)
  {
    *uint64_t v219 = v84;
    sub_24DC29A80();
    uint64_t v86 = (void *)swift_allocError();
    uint64_t *v87 = v85;
    swift_willThrow();
    uint64_t v88 = v225;
    id v89 = (id)fpfs_current_or_default_log();
    unint64_t v90 = v220;
    sub_24DCC9088();
    swift_retain();
    id v91 = v86;
    uint64_t v92 = sub_24DCC9068();
    os_log_type_t v93 = sub_24DCCA128();
    if (os_log_type_enabled(v92, v93))
    {
      uint64_t v94 = swift_slowAlloc();
      uint64_t v95 = (void *)swift_slowAlloc();
      uint64_t v225 = swift_slowAlloc();
      v241[0] = (id)v225;
      *(_DWORD *)uint64_t v94 = 136315394;
      swift_beginAccess();
      uint64_t v222 = a1;
      uint64_t v96 = *(void *)(v88 + 16);
      unint64_t v97 = *(void *)(v88 + 24);
      swift_bridgeObjectRetain();
      v239[0] = (id)sub_24D418FB4(v96, v97, (uint64_t *)v241);
      sub_24DCCA428();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v94 + 12) = 2112;
      swift_getErrorValue();
      id v98 = sub_24DBA2828(v233);
      v239[0] = v98;
      a1 = v222;
      sub_24DCCA428();
      *uint64_t v95 = v98;

      _os_log_impl(&dword_24D3D0000, v92, v93, "[%s] Failed to patch the reconciliation_table table: %@", (uint8_t *)v94, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v95, -1, -1);
      uint64_t v99 = v225;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v99, -1, -1);
      MEMORY[0x25332B030](v94, -1, -1);

      uint64_t v100 = v220;
    }
    else
    {
      swift_release();

      uint64_t v100 = v90;
    }
    v226(v100, v228);
    uint64_t v101 = *v219;
    swift_beginAccess();
    uint64_t v102 = *(void *)(v88 + 16);
    uint64_t v103 = *(void *)(v88 + 24);
    id v104 = v86;
    swift_bridgeObjectRetain();
    sub_24DC201A0(v223, v86, v101, v102, v103);

    swift_bridgeObjectRelease();
    id v105 = v86;
    goto LABEL_19;
  }
  id v108 = (id)fpfs_current_or_default_log();
  id v109 = v216;
  sub_24DCC9088();
  uint64_t v110 = sub_24DCC9068();
  os_log_type_t v111 = sub_24DCCA118();
  if (os_log_type_enabled(v110, v111))
  {
    uint64_t v112 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v112 = 0;
    _os_log_impl(&dword_24D3D0000, v110, v111, "Patching FSSnapshot table...", v112, 2u);
    id v113 = v112;
    uint64_t v83 = v218;
    MEMORY[0x25332B030](v113, -1, -1);
  }

  v226(v109, v228);
  swift_beginAccess();
  uint64_t v114 = v225;
  *(void *)(v225 + 16) = 0xD000000000000014;
  *(void *)(v114 + 24) = 0x800000024DD23410;
  swift_bridgeObjectRelease();
  sub_24DC23F44(a1, v83);
  id v116 = v217;
  uint64_t v117 = v115;
  if (v115 >= 1)
  {
    *uint64_t v219 = v115;
    sub_24DC29A80();
    id v56 = (id)swift_allocError();
    *id v118 = v117;
    swift_willThrow();
    uint64_t v119 = v225;
    id v120 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    swift_retain();
    id v121 = v56;
    int v122 = v116;
    uint64_t v123 = sub_24DCC9068();
    os_log_type_t v124 = sub_24DCCA128();
    if (os_log_type_enabled(v123, v124))
    {
      uint64_t v125 = swift_slowAlloc();
      uint64_t v126 = (void *)swift_slowAlloc();
      uint64_t v127 = swift_slowAlloc();
      v240[0] = v127;
      *(_DWORD *)uint64_t v125 = 136315394;
      swift_beginAccess();
      uint64_t v222 = a1;
      uint64_t v128 = *(void *)(v225 + 16);
      unint64_t v129 = *(void *)(v225 + 24);
      swift_bridgeObjectRetain();
      v238[0] = (id)sub_24D418FB4(v128, v129, v240);
      sub_24DCCA428();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v125 + 12) = 2112;
      swift_getErrorValue();
      id v130 = sub_24DBA2828(v232);
      v238[0] = v130;
      a1 = v222;
      sub_24DCCA428();
      *uint64_t v126 = v130;

      _os_log_impl(&dword_24D3D0000, v123, v124, "[%s] Failed to patch the fs_snapshot table: %@", (uint8_t *)v125, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v126, -1, -1);
      swift_arrayDestroy();
      uint64_t v131 = v127;
      a2 = v225;
      MEMORY[0x25332B030](v131, -1, -1);
      MEMORY[0x25332B030](v125, -1, -1);

      v226(v217, v228);
    }
    else
    {
      a2 = v119;
      swift_release();

      v226(v122, v228);
    }
    uint64_t v132 = *v219;
    goto LABEL_30;
  }
  id v136 = (id)fpfs_current_or_default_log();
  double v137 = v214;
  sub_24DCC9088();
  uint64_t v138 = sub_24DCC9068();
  os_log_type_t v139 = sub_24DCCA118();
  if (os_log_type_enabled(v138, v139))
  {
    uint64_t v140 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v140 = 0;
    _os_log_impl(&dword_24D3D0000, v138, v139, "Patching FSItemJobs table...", v140, 2u);
    MEMORY[0x25332B030](v140, -1, -1);
  }

  v226(v137, v228);
  swift_beginAccess();
  a2 = v225;
  *(void *)(v225 + 16) = 0xD000000000000014;
  *(void *)(a2 + 24) = 0x800000024DD23430;
  swift_bridgeObjectRelease();
  sub_24DC243AC(a1, v218, sub_24DC1C760, &block_descriptor_233, 543, sub_24DC25B34);
  uint64_t v142 = v215;
  uint64_t v143 = v141;
  if (v141 >= 1)
  {
    *uint64_t v219 = v141;
    sub_24DC29A80();
    id v56 = (id)swift_allocError();
    uint64_t *v144 = v143;
    swift_willThrow();
    id v145 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    swift_retain();
    id v146 = v56;
    uint64_t v147 = sub_24DCC9068();
    os_log_type_t v148 = sub_24DCCA128();
    if (os_log_type_enabled(v147, v148))
    {
      uint64_t v149 = swift_slowAlloc();
      unint64_t v150 = (void *)swift_slowAlloc();
      uint64_t v151 = swift_slowAlloc();
      v239[0] = (id)v151;
      *(_DWORD *)uint64_t v149 = 136315394;
      swift_beginAccess();
      uint64_t v222 = a1;
      uint64_t v152 = *(void *)(v225 + 16);
      unint64_t v153 = *(void *)(v225 + 24);
      swift_bridgeObjectRetain();
      v237[0] = (id)sub_24D418FB4(v152, v153, (uint64_t *)v239);
      sub_24DCCA428();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v149 + 12) = 2112;
      swift_getErrorValue();
      id v154 = sub_24DBA2828(v231);
      v237[0] = v154;
      a1 = v222;
      sub_24DCCA428();
      *unint64_t v150 = v154;

      _os_log_impl(&dword_24D3D0000, v147, v148, "[%s] Failed to patch the fs_item_jobs table: %@", (uint8_t *)v149, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v150, -1, -1);
      swift_arrayDestroy();
      uint64_t v155 = v151;
      a2 = v225;
      MEMORY[0x25332B030](v155, -1, -1);
      MEMORY[0x25332B030](v149, -1, -1);

      v226(v215, v228);
    }
    else
    {
      swift_release();

      v226(v142, v228);
    }
    uint64_t v132 = *v219;
    goto LABEL_30;
  }
  id v156 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v157 = sub_24DCC9068();
  os_log_type_t v158 = sub_24DCCA118();
  if (os_log_type_enabled(v157, v158))
  {
    uint64_t v159 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v159 = 0;
    _os_log_impl(&dword_24D3D0000, v157, v158, "Patching FSThrottle table...", v159, 2u);
    MEMORY[0x25332B030](v159, -1, -1);
  }

  v226(v213, v228);
  swift_beginAccess();
  *(void *)(a2 + 16) = 0xD000000000000014;
  *(void *)(a2 + 24) = 0x800000024DD23450;
  swift_bridgeObjectRelease();
  uint64_t v160 = sub_24DC241F4(a1, v218);
  id v40 = v212;
  uint64_t v161 = v160;
  if (v160 >= 1)
  {
    *uint64_t v219 = v160;
    sub_24DC29A80();
    id v56 = (id)swift_allocError();
    *uint64_t v162 = v161;
    swift_willThrow();
    id v163 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    swift_retain();
    id v164 = v56;
    uint64_t v55 = sub_24DCC9068();
    os_log_type_t v165 = sub_24DCCA128();
    if (os_log_type_enabled(v55, v165))
    {
      uint64_t v166 = swift_slowAlloc();
      uint64_t v167 = (void *)swift_slowAlloc();
      uint64_t v168 = swift_slowAlloc();
      v238[0] = (id)v168;
      *(_DWORD *)uint64_t v166 = 136315394;
      swift_beginAccess();
      uint64_t v222 = a1;
      uint64_t v169 = *(void *)(v225 + 16);
      unint64_t v170 = *(void *)(v225 + 24);
      swift_bridgeObjectRetain();
      uint64_t v236 = sub_24D418FB4(v169, v170, (uint64_t *)v238);
      sub_24DCCA428();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v166 + 12) = 2112;
      swift_getErrorValue();
      id v171 = sub_24DBA2828(v230);
      uint64_t v236 = (uint64_t)v171;
      a1 = v222;
      sub_24DCCA428();
      *uint64_t v167 = v171;

      _os_log_impl(&dword_24D3D0000, v55, v165, "[%s] Failed to patch the fs_throttle table: %@", (uint8_t *)v166, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v167, -1, -1);
      swift_arrayDestroy();
      uint64_t v172 = v168;
      a2 = v225;
      MEMORY[0x25332B030](v172, -1, -1);
      MEMORY[0x25332B030](v166, -1, -1);

      v226(v212, v228);
LABEL_45:
      uint64_t v132 = *v219;
LABEL_30:
      swift_beginAccess();
      uint64_t v133 = *(void *)(a2 + 16);
      uint64_t v134 = *(void *)(a2 + 24);
      id v135 = v56;
      swift_bridgeObjectRetain();
      sub_24DC201A0(v223, v56, v132, v133, v134);

      swift_bridgeObjectRelease();
      id v105 = v56;
LABEL_19:

      uint64_t v106 = a1;
LABEL_20:
      sub_24DC2375C(v106);
      return 0;
    }
LABEL_44:
    swift_release();

    v226(v40, v228);
    goto LABEL_45;
  }
  id v173 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v174 = sub_24DCC9068();
  os_log_type_t v175 = sub_24DCCA118();
  if (os_log_type_enabled(v174, v175))
  {
    uint64_t v176 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v176 = 0;
    _os_log_impl(&dword_24D3D0000, v174, v175, "Patching Jobs table...", v176, 2u);
    MEMORY[0x25332B030](v176, -1, -1);
  }

  v226(v211, v228);
  swift_beginAccess();
  strcpy((char *)(a2 + 16), "patchJobsTable");
  *(unsigned char *)(a2 + 31) = -18;
  swift_bridgeObjectRelease();
  uint64_t v222 = a1;
  sub_24DC243AC(a1, v218, sub_24DC1C798, &block_descriptor_137_0, 632, sub_24DC26700);
  uint64_t v178 = v177;
  if (v177 >= 1)
  {
    *uint64_t v219 = v177;
    sub_24DC29A80();
    uint64_t v179 = (void *)swift_allocError();
    *uint64_t v180 = v178;
    swift_willThrow();
    uint64_t v181 = v225;
    id v182 = (id)fpfs_current_or_default_log();
    uint64_t v183 = v210;
    sub_24DCC9088();
    swift_retain();
    id v184 = v179;
    uint64_t v185 = sub_24DCC9068();
    os_log_type_t v186 = sub_24DCCA128();
    if (os_log_type_enabled(v185, v186))
    {
      uint64_t v187 = swift_slowAlloc();
      uint64_t v221 = (void *)swift_slowAlloc();
      uint64_t v225 = swift_slowAlloc();
      v237[0] = (id)v225;
      *(_DWORD *)uint64_t v187 = 136315394;
      swift_beginAccess();
      uint64_t v188 = *(void *)(v181 + 16);
      unint64_t v189 = *(void *)(v181 + 24);
      swift_bridgeObjectRetain();
      uint64_t v235 = sub_24D418FB4(v188, v189, (uint64_t *)v237);
      sub_24DCCA428();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v187 + 12) = 2112;
      swift_getErrorValue();
      id v190 = sub_24DBA2828(v229);
      uint64_t v235 = (uint64_t)v190;
      sub_24DCCA428();
      uint64_t v191 = v221;
      void *v221 = v190;

      _os_log_impl(&dword_24D3D0000, v185, v186, "[%s] Failed to patch the jobs table: %@", (uint8_t *)v187, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v191, -1, -1);
      uint64_t v192 = v225;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v192, -1, -1);
      MEMORY[0x25332B030](v187, -1, -1);
    }
    else
    {
      swift_release();
    }
    v226(v183, v228);
    uint64_t v193 = *v219;
    swift_beginAccess();
    uint64_t v194 = *(void *)(v181 + 16);
    uint64_t v195 = *(void *)(v181 + 24);
    id v196 = v179;
    swift_bridgeObjectRetain();
    sub_24DC201A0(v223, v179, v193, v194, v195);

    swift_bridgeObjectRelease();
    uint64_t v106 = v222;
    goto LABEL_20;
  }
  id v197 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v198 = sub_24DCC9068();
  os_log_type_t v199 = sub_24DCCA118();
  if (os_log_type_enabled(v198, v199))
  {
    uint64_t v200 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v200 = 0;
    _os_log_impl(&dword_24D3D0000, v198, v199, "Patching Tombstone table...", v200, 2u);
    MEMORY[0x25332B030](v200, -1, -1);
  }

  v226(v209, v228);
  swift_beginAccess();
  uint64_t v201 = v225;
  *(void *)(v225 + 16) = 0xD000000000000013;
  *(void *)(v201 + 24) = 0x800000024DD23470;
  swift_bridgeObjectRelease();
  sub_24DC29B64(v222);
  id v202 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v203 = sub_24DCC9068();
  os_log_type_t v204 = sub_24DCCA118();
  if (os_log_type_enabled(v203, v204))
  {
    uint64_t v205 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v205 = 0;
    _os_log_impl(&dword_24D3D0000, v203, v204, "Database was updated successfully, commiting changes...", v205, 2u);
    MEMORY[0x25332B030](v205, -1, -1);
  }

  v226(v207, v228);
  sub_24DC2375C(v222);
  return 1;
}

uint64_t sub_24DC2375C(void *a1)
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_24DCC9078();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v32 - v7;
  id v9 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v10 = sub_24DCC9068();
  os_log_type_t v11 = sub_24DCCA118();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_24D3D0000, v10, v11, "Reenabling foreign keys...", v12, 2u);
    MEMORY[0x25332B030](v12, -1, -1);
  }

  uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v8, v2);
  aBlock[4] = sub_24D82F56C;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  uint64_t aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_313;
  uint64_t v14 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  unsigned int v15 = objc_msgSend(a1, sel_executeSwift_error_, v14, aBlock);
  _Block_release(v14);
  id v16 = aBlock[0];
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    __break(1u);
  }
  if (!v15)
  {
    uint64_t v18 = (void *)sub_24DCC8828();

    swift_willThrow();
    id v19 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v20 = v18;
    uint64_t v21 = sub_24DCC9068();
    os_log_type_t v22 = sub_24DCCA128();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v32 = v13;
      uint64_t v24 = (uint8_t *)v23;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v33 = v2;
      uint64_t v26 = (void *)v25;
      *(_DWORD *)uint64_t v24 = 138412290;
      swift_getErrorValue();
      id v27 = sub_24DBA2828(v34);
      aBlock[0] = v27;
      sub_24DCCA428();
      *uint64_t v26 = v27;

      _os_log_impl(&dword_24D3D0000, v21, v22, "Failed to enable foreign keys: %@", v24, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      uint64_t v28 = v26;
      uint64_t v29 = v33;
      MEMORY[0x25332B030](v28, -1, -1);
      uint64_t v30 = v24;
      uint64_t v31 = (uint64_t (*)(char *, uint64_t))v32;
      MEMORY[0x25332B030](v30, -1, -1);

      return v31(v6, v29);
    }
    else
    {

      return ((uint64_t (*)(char *, uint64_t))v13)(v6, v2);
    }
  }
  return result;
}

id sub_24DC23B4C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t ObjectType = swift_getObjectType();
  id result = (id)sub_24D90E884(ObjectType, v3);
  if (!v1)
  {
    uint64_t v6 = (uint64_t)result;
    uint64_t v7 = *(void *)(a1 + qword_26B1A24F0);
    swift_retain();
    id result = (id)FPVersion();
    if (result)
    {
      uint64_t v8 = result;
      uint64_t v9 = sub_24DCC97E8();
      uint64_t v11 = v10;
      swift_release();

      uint64_t v12 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(a1 + 40) + 16) + 120);
      uint64_t v13 = swift_retain();
      uint64_t v14 = v12(v13);
      uint64_t v16 = v15;
      swift_release();
      sub_24DA10648(590088, v6, v9, v11, v14, v16, *(void *)(v7 + 24), *(void *)(v7 + 32), 1);
      swift_bridgeObjectRelease();
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_24DC23C94(void *a1, uint64_t a2)
{
  v18[1] = *MEMORY[0x263EF8340];
  uint64_t v17 = 0;
  v18[0] = 0;
  uint64_t v16 = (unint64_t (*)())sub_24DC1C720;
  id v12 = (id)MEMORY[0x263EF8330];
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_24D3E38DC;
  uint64_t v15 = &block_descriptor_290;
  uint64_t v5 = _Block_copy(&v12);
  swift_release();
  id v12 = 0;
  unsigned int v6 = objc_msgSend(a1, sel_executeSwift_error_, v5, &v12);
  _Block_release(v5);
  id v7 = v12;
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
    goto LABEL_15;
  }
  if (!v6)
  {
    sub_24DCC8828();

LABEL_11:
    swift_willThrow();
    return;
  }
  uint64_t v16 = sub_24DC1C724;
  uint64_t v17 = 0;
  id v12 = (id)MEMORY[0x263EF8330];
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_24D3E38DC;
  uint64_t v15 = &block_descriptor_293;
  uint64_t v8 = _Block_copy(&v12);
  swift_release();
  id v12 = 0;
  id v9 = objc_msgSend(a1, sel_fetchSwift_error_, v8, &v12);
  _Block_release(v8);
  id v10 = v12;
  if (swift_isEscapingClosureAtFileLocation()) {
LABEL_15:
  }
    __break(1u);
  if (!v9)
  {
    sub_24DCC8828();

    goto LABEL_11;
  }
  if (objc_msgSend(v9, sel_next))
  {
    while (1)
    {
      uint64_t v11 = (void *)MEMORY[0x253329610]();
      sub_24DC245D8(v9, a2, v18, a1);
      if (v2) {
        break;
      }
      if ((objc_msgSend(v9, sel_next) & 1) == 0) {
        goto LABEL_8;
      }
    }
  }
  else
  {
LABEL_8:
  }
}

void sub_24DC23F44(void *a1, uint64_t a2)
{
  v18[1] = *MEMORY[0x263EF8340];
  uint64_t v17 = 0;
  v18[0] = 0;
  uint64_t v16 = (unint64_t (*)())sub_24DC1C740;
  id v12 = (id)MEMORY[0x263EF8330];
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_24D3E38DC;
  uint64_t v15 = &block_descriptor_268;
  uint64_t v5 = _Block_copy(&v12);
  swift_release();
  id v12 = 0;
  unsigned int v6 = objc_msgSend(a1, sel_executeSwift_error_, v5, &v12);
  _Block_release(v5);
  id v7 = v12;
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
    goto LABEL_15;
  }
  if (!v6)
  {
    sub_24DCC8828();

LABEL_11:
    swift_willThrow();
    return;
  }
  uint64_t v16 = sub_24DC1C744;
  uint64_t v17 = 0;
  id v12 = (id)MEMORY[0x263EF8330];
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_24D3E38DC;
  uint64_t v15 = &block_descriptor_271_0;
  uint64_t v8 = _Block_copy(&v12);
  swift_release();
  id v12 = 0;
  id v9 = objc_msgSend(a1, sel_fetchSwift_error_, v8, &v12);
  _Block_release(v8);
  id v10 = v12;
  if (swift_isEscapingClosureAtFileLocation()) {
LABEL_15:
  }
    __break(1u);
  if (!v9)
  {
    sub_24DCC8828();

    goto LABEL_11;
  }
  if (objc_msgSend(v9, sel_next))
  {
    while (1)
    {
      uint64_t v11 = (void *)MEMORY[0x253329610]();
      sub_24DC25194(v9, a2, v18, a1);
      if (v2) {
        break;
      }
      if ((objc_msgSend(v9, sel_next) & 1) == 0) {
        goto LABEL_8;
      }
    }
  }
  else
  {
LABEL_8:
  }
}

uint64_t sub_24DC241F4(void *a1, uint64_t a2)
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  aBlock[4] = sub_24DC1C77C;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  uint64_t aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_208_1;
  uint64_t v5 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  id v6 = objc_msgSend(a1, sel_fetchSwift_error_, v5, aBlock);
  _Block_release(v5);
  id v7 = aBlock[0];
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
  if (v6)
  {
    if (objc_msgSend(v6, sel_next))
    {
      while (1)
      {
        uint64_t v8 = (void *)MEMORY[0x253329610]();
        sub_24DC26114(v6, a2, a1);
        if (v2) {
          break;
        }
        if ((objc_msgSend(v6, sel_next) & 1) == 0) {
          goto LABEL_9;
        }
      }
    }
LABEL_9:
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  return 0;
}

void sub_24DC243AC(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, uint64_t, void *, void *))
{
  v15[1] = *MEMORY[0x263EF8340];
  void v14[5] = 0;
  v15[0] = 0;
  _OWORD v14[3] = a4;
  v14[4] = a3;
  v14[0] = (id)MEMORY[0x263EF8330];
  v14[1] = (id)1107296256;
  _OWORD v14[2] = sub_24D3E38DC;
  id v10 = _Block_copy(v14);
  swift_release();
  v14[0] = 0;
  id v11 = objc_msgSend(a1, sel_fetchSwift_error_, v10, v14);
  _Block_release(v10);
  id v12 = v14[0];
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
  if (v11)
  {
    if (objc_msgSend(v11, sel_next))
    {
      while (1)
      {
        uint64_t v13 = (void *)MEMORY[0x253329610]();
        a6(v11, a2, v15, a1);
        if (v6) {
          break;
        }
        if ((objc_msgSend(v11, sel_next) & 1) == 0) {
          goto LABEL_6;
        }
      }
    }
    else
    {
LABEL_6:
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
}

id sub_24DC24578(void *a1)
{
  return objc_msgSend(a1, sel_flush);
}

void sub_24DC245BC()
{
}

void sub_24DC245D8(void *a1, uint64_t a2, uint64_t *a3, void *a4)
{
  id v52 = a4;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v8 = &selRef_createIndexerWithExtension_enabled_error_;
  id v51 = objc_msgSend(a1, sel_longAtIndex_, 0);
  unsigned __int8 v9 = objc_msgSend(a1, sel_isNullAtIndex_, 1);
  if (v9)
  {
    int v10 = 0;
    uint64_t v50 = 0;
  }
  else
  {
    uint64_t v12 = (uint64_t)objc_msgSend(a1, sel_longAtIndex_, 1);
    id v13 = objc_msgSend(a1, sel_unsignedIntAtIndex_, 2);
    if (v12 < 0)
    {
      LODWORD(v43) = 0;
      uint64_t v42 = 3451;
      LOBYTE(v41) = 2;
LABEL_53:
      sub_24DCCA968();
      __break(1u);
      return;
    }
    uint64_t v41 = a2;
    uint64_t v42 = v12;
    LODWORD(v43) = MEMORY[0x270FA5388](v13);
    uint64_t v14 = sub_24DC1CDA0(5, (uint64_t)sub_24DC2A338, (uint64_t)&v40);
    if (v4) {
      return;
    }
    int v10 = v15;
    if ((v15 & 0x100000000) == 0)
    {
      uint64_t v19 = *a3 + 1;
      if (__OFADD__(*a3, 1)) {
        goto LABEL_50;
      }
      goto LABEL_14;
    }
    uint64_t v50 = v14;
    uint64_t v8 = &selRef_createIndexerWithExtension_enabled_error_;
  }
  if (objc_msgSend(a1, sel_isNullAtIndex_, 3))
  {
    unint64_t v11 = 0;
    int v49 = 255;
    goto LABEL_5;
  }
  id v16 = a1;
  unint64_t v17 = sub_24D98B6AC(v16, 3);
  if (v4)
  {

    return;
  }
  unint64_t v11 = v17;
  int v49 = v18;

  if ((_BYTE)v49)
  {
    if (v49 == 1)
    {
      MEMORY[0x270FA5388](v33);
      uint64_t v43 = a2;
      unint64_t v44 = v11;
      uint64_t v34 = sub_24DC1CBBC(5, (uint64_t)sub_24DC2A29C, (uint64_t)&v41);
      int v49 = 1;
      unint64_t v11 = v34;
    }
    goto LABEL_37;
  }
  MEMORY[0x270FA5388](v33);
  uint64_t v43 = a2;
  LODWORD(v44) = v38;
  unint64_t v39 = sub_24DC1C9D0(5, (uint64_t)sub_24DC2A2B4, (uint64_t)&v41);
  if ((v39 & 0x100000000) != 0)
  {
    uint64_t v19 = *a3 + 1;
    if (__OFADD__(*a3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
LABEL_14:
    *a3 = v19;
    return;
  }
  int v49 = 0;
  unint64_t v11 = v39;
LABEL_37:
  uint64_t v8 = &selRef_createIndexerWithExtension_enabled_error_;
LABEL_5:
  unsigned int v47 = objc_msgSend(a1, sel_isNullAtIndex_, 4);
  unint64_t v48 = v11;
  if (v47)
  {
    uint64_t v46 = 0;
  }
  else
  {
    unint64_t v20 = (unint64_t)objc_msgSend(a1, v8[183], 4);
    if ((v20 & 0x8000000000000000) != 0)
    {
LABEL_52:
      LODWORD(v43) = 0;
      uint64_t v42 = 3451;
      LOBYTE(v41) = 2;
      goto LABEL_53;
    }
    uint64_t v21 = MEMORY[0x270FA5388](v20);
    uint64_t v43 = a2;
    unint64_t v44 = v21;
    uint64_t v46 = sub_24DC1CBBC(5, (uint64_t)sub_24DC2A29C, (uint64_t)&v41);
    if (v4) {
      return;
    }
  }
  LOBYTE(a3) = objc_msgSend(a1, sel_isNullAtIndex_, 5);
  if (a3)
  {
    uint64_t v45 = 0;
    goto LABEL_21;
  }
  unint64_t v22 = (unint64_t)objc_msgSend(a1, v8[183], 5);
  if ((v22 & 0x8000000000000000) != 0) {
    goto LABEL_52;
  }
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v43 = a2;
  unint64_t v44 = v23;
  uint64_t v45 = sub_24DC1CBBC(5, (uint64_t)sub_24DC2A29C, (uint64_t)&v41);
  if (v4) {
    return;
  }
LABEL_21:
  if (objc_msgSend(a1, sel_isNullAtIndex_, 6))
  {
    unint64_t v24 = 0;
    char v25 = -1;
    goto LABEL_23;
  }
  id v35 = a1;
  unint64_t v24 = sub_24D3FAE2C(v35, 6);
  char v25 = v36;

  if (v4) {
    return;
  }
  if (!v25)
  {
    MEMORY[0x270FA5388](v37);
    uint64_t v43 = a2;
    LODWORD(v44) = v24;
    unint64_t v39 = sub_24DC1C9D0(5, (uint64_t)sub_24DC2A2B4, (uint64_t)&v41);
LABEL_43:
    if ((v39 & 0x100000000) != 0) {
      unint64_t v24 = 0;
    }
    else {
      unint64_t v24 = v39;
    }
    if ((v39 & 0x100000000) != 0) {
      char v25 = -1;
    }
    else {
      char v25 = 0;
    }
    goto LABEL_23;
  }
  if (v25 == 1)
  {
    MEMORY[0x270FA5388](v37);
    uint64_t v43 = a2;
    unint64_t v44 = v24;
    unint64_t v24 = sub_24DC1CBBC(5, (uint64_t)sub_24DC2A29C, (uint64_t)&v41);
    char v25 = 1;
  }
LABEL_23:
  unint64_t v26 = v48;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v50;
  *(unsigned char *)(v27 + 24) = v9;
  *(_DWORD *)(v27 + 28) = v10;
  *(unsigned char *)(v27 + 32) = v9;
  *(void *)(v27 + 40) = v26;
  *(unsigned char *)(v27 + 48) = v49;
  *(void *)(v27 + 56) = v46;
  *(unsigned char *)(v27 + 64) = v47;
  *(void *)(v27 + 72) = v45;
  *(unsigned char *)(v27 + 80) = (_BYTE)a3;
  *(void *)(v27 + 88) = v24;
  *(unsigned char *)(v27 + 96) = v25;
  *(void *)(v27 + 104) = v51;
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = sub_24DC2A118;
  v28[3] = v27;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v28;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  uint64_t aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_306_0;
  uint64_t v29 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned int v30 = objc_msgSend(v52, sel_executeSwift_error_, v29, aBlock);
  _Block_release(v29);
  id v31 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_50:
    __break(1u);
  }
  if (!v30)
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  swift_release();
}

uint64_t sub_24DC24D00(void *a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, unsigned __int8 a6, uint64_t a7, char a8, uint64_t a9, char a10, unint64_t a11, unsigned __int8 a12, uint64_t a13)
{
  sub_24DCCA728();
  sub_24DCC9968();
  uint64_t v19 = 0;
  if ((a3 & 1) == 0) {
    uint64_t v19 = sub_24DCCB088();
  }
  id v20 = objc_msgSend(a1, sel_bindObjectParameter_, v19, 0, 0xE000000000000000);
  swift_unknownObjectRelease();
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if ((a4 & 0x100000000) != 0) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = sub_24DCCB078();
  }
  id v22 = objc_msgSend(a1, sel_bindObjectParameter_, v21);
  swift_unknownObjectRelease();
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if (a6 > 1u)
  {
    if (a6 == 255)
    {
      id v23 = objc_msgSend(a1, sel_bindObjectParameter_, 0);
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (a6)
  {
    if ((a5 & 0x8000000000000000) == 0) {
      goto LABEL_14;
    }
    __break(1u);
LABEL_13:
    a5 = (unint64_t)(a5 != 0) << 63;
    goto LABEL_14;
  }
  a5 = -(uint64_t)a5;
LABEL_14:
  id v23 = objc_msgSend(a1, sel_bindLongParameter_, a5);
LABEL_15:
  id v24 = v23;
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if (a8) {
    uint64_t v25 = 0;
  }
  else {
    uint64_t v25 = sub_24DCCB088();
  }
  id v26 = objc_msgSend(a1, sel_bindObjectParameter_, v25);
  swift_unknownObjectRelease();
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if (a10) {
    uint64_t v27 = 0;
  }
  else {
    uint64_t v27 = sub_24DCCB088();
  }
  unint64_t v28 = a11;
  id v29 = objc_msgSend(a1, sel_bindObjectParameter_, v27);
  swift_unknownObjectRelease();
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if (a12 <= 1u)
  {
    if (!a12)
    {
      unint64_t v28 = -(uint64_t)a11;
LABEL_29:
      id v30 = objc_msgSend(a1, sel_bindLongParameter_, v28);
      goto LABEL_30;
    }
    if ((a11 & 0x8000000000000000) == 0) {
      goto LABEL_29;
    }
    __break(1u);
LABEL_28:
    unint64_t v28 = (unint64_t)(a11 != 0) << 63;
    goto LABEL_29;
  }
  if (a12 != 255) {
    goto LABEL_28;
  }
  id v30 = objc_msgSend(a1, sel_bindObjectParameter_, 0);
LABEL_30:
  id v31 = v30;
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  id v32 = objc_msgSend(a1, sel_bindLongParameter_, a13);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return v34;
}

void sub_24DC25194(void *a1, uint64_t a2, uint64_t *a3, void *a4)
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  id v9 = objc_msgSend(a1, sel_longAtIndex_, 0);
  uint64_t v10 = (uint64_t)objc_msgSend(a1, sel_longAtIndex_, 1);
  unint64_t v11 = (unint64_t)objc_msgSend(a1, sel_longAtIndex_, 4);
  if (v10 < 0 || (v11 & 0x8000000000000000) != 0) {
    goto LABEL_33;
  }
  id v47 = v9;
  id v48 = a4;
  if (HIDWORD(v11))
  {
    LODWORD(v40) = 0;
    uint64_t v39 = 3455;
    LOBYTE(v38) = 2;
    goto LABEL_35;
  }
  uint64_t v38 = a2;
  uint64_t v39 = v10;
  LODWORD(v40) = MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_24DC1CDA0(5, (uint64_t)sub_24DC2A338, (uint64_t)&v37);
  if (v4) {
    return;
  }
  int v14 = v13;
  if ((v13 & 0x100000000) == 0)
  {
    uint64_t v15 = *a3 + 1;
    if (!__OFADD__(*a3, 1))
    {
LABEL_7:
      *a3 = v15;
      return;
    }
    goto LABEL_31;
  }
  uint64_t v16 = v12;
  id v17 = a1;
  unint64_t v46 = sub_24D98B6AC(v17, 2);
  int v19 = v18;

  if ((_BYTE)v19)
  {
    if (v19 == 1)
    {
      int v45 = v19;
      MEMORY[0x270FA5388](v20);
      uint64_t v40 = a2;
      unint64_t v41 = v46;
      unint64_t v46 = sub_24DC1CBBC(5, (uint64_t)sub_24DC2A29C, (uint64_t)&v38);
      int v19 = v45;
    }
  }
  else
  {
    int v45 = v19;
    MEMORY[0x270FA5388](v20);
    uint64_t v40 = a2;
    LODWORD(v41) = v46;
    unint64_t v21 = sub_24DC1C9D0(5, (uint64_t)sub_24DC2A2B4, (uint64_t)&v38);
    if ((v21 & 0x100000000) != 0)
    {
      uint64_t v15 = *a3 + 1;
      if (!__OFADD__(*a3, 1)) {
        goto LABEL_7;
      }
      __break(1u);
      goto LABEL_28;
    }
    unint64_t v46 = v21;
    int v19 = v45;
  }
  id v22 = v17;
  unint64_t v44 = sub_24D3FAE2C(v22, 3);
  int v43 = v23;
  id v42 = v22;

  char v25 = v43;
  if (!(_BYTE)v43)
  {
    int v45 = v19;
    MEMORY[0x270FA5388](v24);
    uint64_t v40 = a2;
    LODWORD(v41) = v44;
    unint64_t v26 = sub_24DC1C9D0(5, (uint64_t)sub_24DC2A2B4, (uint64_t)&v38);
    if ((v26 & 0x100000000) == 0)
    {
      unint64_t v44 = v26;
      LOBYTE(v19) = v45;
      goto LABEL_20;
    }
LABEL_28:
    uint64_t v15 = *a3 + 1;
    if (!__OFADD__(*a3, 1)) {
      goto LABEL_7;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  if (v43 == 1)
  {
    MEMORY[0x270FA5388](v24);
    uint64_t v40 = a2;
    unint64_t v41 = v44;
    unint64_t v44 = sub_24DC1CBBC(5, (uint64_t)sub_24DC2A29C, (uint64_t)&v38);
  }
LABEL_20:
  unint64_t v27 = (unint64_t)objc_msgSend(v42, sel_longAtIndex_, 5);
  if ((v27 & 0x8000000000000000) != 0)
  {
LABEL_33:
    LODWORD(v40) = 0;
    uint64_t v39 = 3451;
    LOBYTE(v38) = 2;
LABEL_35:
    sub_24DCCA968();
    __break(1u);
    return;
  }
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v40 = a2;
  unint64_t v41 = v28;
  uint64_t v29 = sub_24DC1CBBC(5, (uint64_t)sub_24DC2A29C, (uint64_t)&v38);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v16;
  *(_DWORD *)(v30 + 24) = v14;
  *(void *)(v30 + 32) = v46;
  *(unsigned char *)(v30 + 40) = v19;
  *(void *)(v30 + 48) = v44;
  *(unsigned char *)(v30 + 56) = v25;
  id v31 = v47;
  *(void *)(v30 + 64) = v29;
  *(void *)(v30 + 72) = v31;
  id v32 = (void *)swift_allocObject();
  id v32[2] = sub_24DC2A0B8;
  v32[3] = v30;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v32;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  uint64_t aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_283_0;
  uint64_t v33 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned int v34 = objc_msgSend(v48, sel_executeSwift_error_, v33, aBlock);
  _Block_release(v33);
  id v35 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    goto LABEL_32;
  }
  if (!v34)
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  swift_release();
}

uint64_t sub_24DC257A8(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, char a5, unint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  sub_24DCCA728();
  sub_24DCC9968();
  uint64_t v15 = (void *)sub_24DCCB088();
  id v16 = objc_msgSend(a1, sel_bindObjectParameter_, v15);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  id v17 = objc_msgSend(a1, sel_bindUnsignedIntegerParameter_, a3);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if (!a5)
  {
LABEL_5:
    a4 = -(uint64_t)a4;
    goto LABEL_7;
  }
  if (a5 == 1)
  {
    if ((a4 & 0x8000000000000000) == 0) {
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_5;
  }
  a4 = (unint64_t)(a4 != 0) << 63;
LABEL_7:
  id v18 = objc_msgSend(a1, sel_bindLongParameter_, a4);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if (!a7)
  {
LABEL_11:
    a6 = -(uint64_t)a6;
    goto LABEL_13;
  }
  if (a7 != 1)
  {
    a6 = (unint64_t)(a6 != 0) << 63;
    goto LABEL_13;
  }
  if ((a6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
LABEL_13:
  id v19 = objc_msgSend(a1, sel_bindLongParameter_, a6);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v20 = (void *)sub_24DCCB088();
  id v21 = objc_msgSend(a1, sel_bindObjectParameter_, v20);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  id v22 = objc_msgSend(a1, sel_bindLongParameter_, a9);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_24DC25B34(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  id v9 = objc_msgSend(a1, sel_longAtIndex_, 0);
  id v10 = a1;
  unint64_t v11 = sub_24D3FAE2C(v10, 1);
  if (v4)
  {

    return;
  }
  uint64_t v13 = v11;
  char v14 = v12;

  unint64_t v44 = a3;
  if (v14)
  {
    if (v14 != 1) {
      goto LABEL_9;
    }
    id v16 = a4;
    MEMORY[0x270FA5388](v15);
    uint64_t v40 = a2;
    uint64_t v41 = v13;
    uint64_t v13 = sub_24DC1CBBC(5, (uint64_t)sub_24DC2A29C, (uint64_t)v39);
  }
  else
  {
    id v16 = a4;
    MEMORY[0x270FA5388](v15);
    uint64_t v40 = a2;
    LODWORD(v41) = v13;
    unint64_t v17 = sub_24DC1C9D0(5, (uint64_t)sub_24DC2A2B4, (uint64_t)v39);
    if ((v17 & 0x100000000) != 0)
    {
      if (!__OFADD__(*v44, 1))
      {
        ++*v44;
        return;
      }
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
    }
    uint64_t v13 = v17;
  }
  a4 = v16;
LABEL_9:
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v13;
  *(unsigned char *)(v18 + 24) = v14;
  *(void *)(v18 + 32) = v9;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_24DC29F9C;
  *(void *)(v19 + 24) = v18;
  uint64_t v43 = v18;
  int v49 = sub_24D3E3980;
  uint64_t v50 = v19;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v46 = 1107296256;
  id v47 = sub_24D3E38DC;
  id v48 = &block_descriptor_243;
  uint64_t v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v42 = a4;
  unsigned int v21 = objc_msgSend(a4, sel_executeSwift_error_, v20, &aBlock);
  _Block_release(v20);
  id v22 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (!v21)
  {
    sub_24DCC8828();

    swift_willThrow();
    goto LABEL_15;
  }
  if (objc_msgSend(v10, sel_isNullAtIndex_, 2))
  {
LABEL_15:
    swift_release();
    return;
  }
  sub_24D5F2810(2);
  type metadata accessor for VFSDirectoryLister(0);
  uint64_t v24 = swift_dynamicCastClass();
  if (!v24)
  {
    swift_release();
    goto LABEL_15;
  }
  uint64_t v25 = v24;
  uint64_t v26 = swift_beginAccess();
  MEMORY[0x270FA5388](v26);
  v39[0] = a2;
  v39[1] = v27;
  LODWORD(v40) = v28;
  swift_retain_n();
  uint64_t v29 = sub_24DC1CDA0(5, (uint64_t)sub_24DC29FFC, (uint64_t)&v38);
  uint64_t v31 = v30;
  *(void *)(v25 + 24) = v29;
  *(_DWORD *)(v25 + 32) = v30;
  swift_release();
  if ((v31 & 0x100000000) == 0)
  {
    swift_release_n();
    if (!__OFADD__(*v44, 1))
    {
      ++*v44;
      goto LABEL_15;
    }
    goto LABEL_28;
  }
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v25;
  *(void *)(v32 + 24) = v9;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_24DC2A01C;
  *(void *)(v33 + 24) = v32;
  int v49 = sub_24D3E3980;
  uint64_t v50 = v33;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v46 = 1107296256;
  id v47 = sub_24D3E38DC;
  id v48 = &block_descriptor_253_0;
  unsigned int v34 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v35 = objc_msgSend(v42, sel_executeSwift_error_, v34, &aBlock);
  _Block_release(v34);
  id v36 = aBlock;
  char v37 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v37) {
    goto LABEL_29;
  }
  if (!v35)
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  swift_release();
  swift_release();
  swift_release_n();
}

void sub_24DC26114(void *a1, uint64_t a2, void *a3)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  uint64_t v7 = sub_24DCC9078();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v34 = objc_msgSend(a1, sel_longAtIndex_, 0);
  id v11 = a1;
  unint64_t v12 = sub_24D3FAE2C(v11, 1);
  char v14 = v13;

  if (v3) {
    return;
  }
  id v33 = a3;
  if (v14)
  {
    if (v14 == 1)
    {
      MEMORY[0x270FA5388](v15);
      *(&v32 - 2) = a2;
      *(&v32 - 1) = v12;
      unint64_t v12 = sub_24DC1CBBC(5, (uint64_t)sub_24DC2A29C, (uint64_t)(&v32 - 4));
    }
  }
  else
  {
    MEMORY[0x270FA5388](v15);
    *(&v32 - 2) = a2;
    *((_DWORD *)&v32 - 2) = v12;
    unint64_t v16 = sub_24DC1C9D0(5, (uint64_t)sub_24DC2A2B4, (uint64_t)(&v32 - 4));
    if ((v16 & 0x100000000) != 0)
    {
      id v24 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      uint64_t v25 = sub_24DCC9068();
      os_log_type_t v26 = sub_24DCCA118();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v27 = 0;
        _os_log_impl(&dword_24D3D0000, v25, v26, "item not found in fs throttle, removing row", v27, 2u);
        MEMORY[0x25332B030](v27, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v34;
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = sub_24DC29F74;
      *(void *)(v29 + 24) = v28;
      uint64_t v39 = sub_24D3E3980;
      uint64_t v40 = v29;
      id aBlock = (id)MEMORY[0x263EF8330];
      uint64_t v36 = 1107296256;
      char v37 = sub_24D3E38DC;
      uint64_t v38 = &block_descriptor_230_0;
      uint64_t v30 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      id aBlock = 0;
      unsigned __int8 v21 = objc_msgSend(v33, sel_executeSwift_error_, v30, &aBlock);
      _Block_release(v30);
      id v22 = aBlock;
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0) {
        goto LABEL_8;
      }
      __break(1u);
LABEL_16:
      __break(1u);
    }
    unint64_t v12 = v16;
  }
  id v17 = v34;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v12;
  *(unsigned char *)(v18 + 24) = v14;
  *(void *)(v18 + 32) = v17;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_24DC29F04;
  *(void *)(v19 + 24) = v18;
  uint64_t v39 = sub_24D3E3980;
  uint64_t v40 = v19;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v36 = 1107296256;
  char v37 = sub_24D3E38DC;
  uint64_t v38 = &block_descriptor_218;
  uint64_t v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned __int8 v21 = objc_msgSend(v33, sel_executeSwift_error_, v20, &aBlock);
  _Block_release(v20);
  id v22 = aBlock;
  char v23 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v23) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v21 & 1) == 0)
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  swift_release();
}

unint64_t sub_24DC26648(void *a1, uint64_t a2)
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(a1, sel_bindLongParameter_, a2);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0xD000000000000026;
}

void sub_24DC26700(void *a1, uint64_t a2, uint64_t *a3, void *a4)
{
  uint64_t v8 = a1;
  uint64_t v93 = *MEMORY[0x263EF8340];
  id v86 = objc_msgSend(a1, sel_longAtIndex_, 0);
  id v9 = objc_msgSend(v8, sel_longAtIndex_, 1);
  id v10 = v9;
  if (v9 == (id)1) {
    int v11 = 1;
  }
  else {
    int v11 = 2;
  }
  if (v9) {
    int v12 = v11;
  }
  else {
    int v12 = 0;
  }
  unsigned __int8 v13 = sub_24DB1B818((uint64_t)objc_msgSend(v8, sel_longAtIndex_, 2));
  if (v12 != 2)
  {
    if (v10)
    {
      if (((v13 < 0x17u) & (0x400007u >> v13)) != 0)
      {
LABEL_10:
        id v14 = v8;
        unint64_t v15 = sub_24D98B6AC(v14, 3);
        if (v4)
        {

          return;
        }
        uint64_t v20 = v15;
        char v34 = v16;

        if (v34)
        {
          if (v34 == 1)
          {
            MEMORY[0x270FA5388](v35);
            uint64_t v78 = a2;
            unint64_t v79 = v20;
            uint64_t v20 = sub_24DC1CBBC(5, (uint64_t)sub_24DC2A29C, (uint64_t)v77);
          }
          id v85 = a4;
LABEL_58:
          uint64_t v52 = swift_allocObject();
          *(void *)(v52 + 16) = v20;
          *(unsigned char *)(v52 + 24) = v34;
          *(void *)(v52 + 32) = v86;
          uint64_t v53 = swift_allocObject();
          *(void *)(v53 + 16) = sub_24DC29E34;
          *(void *)(v53 + 24) = v52;
          id v91 = (uint64_t (*)(uint64_t))sub_24D3E3980;
          uint64_t v92 = v53;
          id aBlock = (id)MEMORY[0x263EF8330];
          uint64_t v88 = 1107296256;
          id v89 = sub_24D3E38DC;
          unint64_t v90 = &block_descriptor_183;
          uint64_t v54 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          id aBlock = 0;
          unsigned int v55 = objc_msgSend(v85, sel_executeSwift_error_, v54, &aBlock);
          _Block_release(v54);
          id v47 = aBlock;
          char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((isEscapingClosureAtFileLocation & 1) == 0)
          {
            if (v55)
            {
              unsigned __int8 v21 = 0;
              uint64_t v22 = 0;
              char v23 = 0;
              uint64_t v20 = (uint64_t)sub_24DC29E34;
              goto LABEL_25;
            }
LABEL_83:
            sub_24DCC8828();

            swift_willThrow();
            swift_release();
            return;
          }
          goto LABEL_92;
        }
        MEMORY[0x270FA5388](v35);
        uint64_t v78 = a2;
        LODWORD(v79) = v20;
        unint64_t v51 = sub_24DC1C9D0(5, (uint64_t)sub_24DC2A2B4, (uint64_t)v77);
        if ((v51 & 0x100000000) == 0)
        {
          id v85 = a4;
          uint64_t v20 = v51;
          goto LABEL_58;
        }
LABEL_68:
        uint64_t v64 = *a3 + 1;
        if (__OFADD__(*a3, 1))
        {
          __break(1u);
          goto LABEL_71;
        }
        goto LABEL_82;
      }
    }
    else if (((v13 < 0x17u) & (0x400007u >> v13)) == 0)
    {
      goto LABEL_10;
    }
  }
  if (v13 != 70 && v12 != 2 && v13 == 20 && (v12 & 1) == 0)
  {
    id v29 = v8;
    unint64_t v30 = sub_24D98B6AC(v29, 3);
    if (v4)
    {

      return;
    }
    uint64_t v36 = v30;
    char v37 = v31;

    id v85 = a4;
    if (v37)
    {
      if (v37 == 1)
      {
        MEMORY[0x270FA5388](v38);
        uint64_t v78 = a2;
        unint64_t v79 = v36;
        uint64_t v36 = sub_24DC1CBBC(5, (uint64_t)sub_24DC2A29C, (uint64_t)v77);
      }
    }
    else
    {
      MEMORY[0x270FA5388](v38);
      uint64_t v78 = a2;
      LODWORD(v79) = v36;
      unint64_t v49 = sub_24DC1C9D0(5, (uint64_t)sub_24DC2A2B4, (uint64_t)v77);
      if ((v49 & 0x100000000) != 0)
      {
        uint64_t v64 = *a3 + 1;
        if (__OFADD__(*a3, 1))
        {
LABEL_94:
          __break(1u);
          goto LABEL_95;
        }
LABEL_82:
        *a3 = v64;
        return;
      }
      uint64_t v36 = v49;
    }
    id v57 = v29;
    unint64_t v58 = sub_24D98B6AC(v57, 4);
    int v60 = v59;

    if ((_BYTE)v60)
    {
      if (v60 != 1)
      {
        id v63 = v85;
LABEL_78:
        uint64_t v67 = swift_allocObject();
        *(void *)(v67 + 16) = v36;
        *(unsigned char *)(v67 + 24) = v37;
        *(void *)(v67 + 32) = v58;
        *(unsigned char *)(v67 + 40) = v60;
        *(void *)(v67 + 48) = v86;
        uint64_t v68 = swift_allocObject();
        *(void *)(v68 + 16) = sub_24DC29DFC;
        *(void *)(v68 + 24) = v67;
        uint64_t v84 = v67;
        id v91 = (uint64_t (*)(uint64_t))sub_24D3E3980;
        uint64_t v92 = v68;
        id aBlock = (id)MEMORY[0x263EF8330];
        uint64_t v88 = 1107296256;
        id v89 = sub_24D3E38DC;
        unint64_t v90 = &block_descriptor_169_0;
        uint64_t v69 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        id aBlock = 0;
        unsigned int v70 = objc_msgSend(v63, sel_executeSwift_error_, v69, &aBlock);
        _Block_release(v69);
        id v47 = aBlock;
        char v71 = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v71 & 1) == 0)
        {
          if (v70)
          {
            uint64_t v20 = 0;
            char v23 = 0;
            unsigned __int8 v21 = sub_24DC29DFC;
            uint64_t v22 = v84;
            goto LABEL_25;
          }
          goto LABEL_83;
        }
        goto LABEL_93;
      }
      LODWORD(v84) = v60;
      MEMORY[0x270FA5388](v61);
      uint64_t v78 = a2;
      unint64_t v79 = v58;
      uint64_t v62 = sub_24DC1CBBC(5, (uint64_t)sub_24DC2A29C, (uint64_t)v77);
      id v63 = v85;
      unint64_t v58 = v62;
    }
    else
    {
      LODWORD(v84) = v60;
      MEMORY[0x270FA5388](v61);
      uint64_t v78 = a2;
      LODWORD(v79) = v58;
      unint64_t v66 = sub_24DC1C9D0(5, (uint64_t)sub_24DC2A2B4, (uint64_t)v77);
      if ((v66 & 0x100000000) != 0)
      {
        uint64_t v64 = *a3 + 1;
        if (!__OFADD__(*a3, 1)) {
          goto LABEL_82;
        }
        __break(1u);
        goto LABEL_91;
      }
      unint64_t v58 = v66;
      id v63 = v85;
    }
    LOBYTE(v60) = v84;
    goto LABEL_78;
  }
  if (objc_msgSend(v8, sel_isNullAtIndex_, 4))
  {
    id v85 = a4;
    uint64_t v20 = 0;
    unsigned __int8 v21 = 0;
    uint64_t v22 = 0;
    char v23 = 0;
    goto LABEL_25;
  }
  id v25 = v8;
  uint64_t v20 = sub_24D98B6AC(v25, 4);
  char v27 = v26;

  if (v4) {
    return;
  }
  if (v27)
  {
    if (v27 == 1)
    {
      MEMORY[0x270FA5388](v28);
      uint64_t v78 = a2;
      unint64_t v79 = v20;
      uint64_t v20 = sub_24DC1CBBC(5, (uint64_t)sub_24DC2A29C, (uint64_t)v77);
    }
  }
  else
  {
    MEMORY[0x270FA5388](v28);
    uint64_t v78 = a2;
    LODWORD(v79) = v20;
    unint64_t v51 = sub_24DC1C9D0(5, (uint64_t)sub_24DC2A2B4, (uint64_t)v77);
    if ((v51 & 0x100000000) != 0)
    {
      uint64_t v64 = *a3 + 1;
      if (!__OFADD__(*a3, 1)) {
        goto LABEL_82;
      }
      __break(1u);
      goto LABEL_68;
    }
    uint64_t v20 = v51;
  }
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v20;
  *(unsigned char *)(v43 + 24) = v27;
  *(void *)(v43 + 32) = v86;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_24DC29CBC;
  *(void *)(v44 + 24) = v43;
  id v91 = sub_24D3E3974;
  uint64_t v92 = v44;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v88 = 1107296256;
  id v89 = sub_24D3E38DC;
  unint64_t v90 = &block_descriptor_146;
  int v45 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v85 = a4;
  unsigned int v46 = objc_msgSend(a4, sel_executeSwift_error_, v45, &aBlock);
  _Block_release(v45);
  id v47 = aBlock;
  char v48 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v48)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  if (!v46) {
    goto LABEL_83;
  }
  uint64_t v20 = 0;
  unsigned __int8 v21 = 0;
  uint64_t v22 = 0;
  char v23 = sub_24DC29CBC;
LABEL_25:
  if (objc_msgSend(v8, sel_isNullAtIndex_, 5))
  {
    sub_24D43DD74(v20);
    uint64_t v24 = (uint64_t)v21;
LABEL_35:
    sub_24D43DD74(v24);
    sub_24D43DD74((uint64_t)v23);
    return;
  }
  uint64_t v83 = v21;
  uint64_t v84 = v22;
  uint64_t v32 = (void *)a2;
  uint64_t v33 = sub_24D5F2810(5);
  if (v4)
  {
LABEL_34:
    sub_24D43DD74(v20);
    uint64_t v24 = (uint64_t)v83;
    goto LABEL_35;
  }
  uint64_t v39 = v33;
  type metadata accessor for VFSStagedContext();
  uint64_t v40 = swift_dynamicCastClass();
  if (!v40)
  {
    swift_release();
    goto LABEL_34;
  }
  uint64_t v81 = v40;
  uint64_t v82 = &v80;
  MEMORY[0x270FA5388](v40);
  uint64_t v78 = (uint64_t)v32;
  unint64_t v79 = v41;
  swift_retain();
  uint64_t v42 = sub_24DC1CBBC(5, (uint64_t)sub_24DC29D1C, (uint64_t)v77);
  uint64_t v80 = v39;
  a2 = v81;
  uint64_t v82 = v77;
  *(void *)(v81 + 16) = v42;
  MEMORY[0x270FA5388](v42);
  *(void *)&v77[-16] = v32;
  *(_DWORD *)&v77[-8] = v50;
  unint64_t v51 = sub_24DC1C9D0(5, (uint64_t)sub_24DC29D38, (uint64_t)&v77[-32]);
  uint64_t v8 = v32;
  a3 = (uint64_t *)v23;
LABEL_71:
  if ((v51 & 0x100000000) == 0) {
    *(_DWORD *)(a2 + 32) = v51;
  }
  MEMORY[0x270FA5388](v51);
  *(void *)&v77[-16] = v8;
  *(void *)&v77[-8] = v65;
  *(void *)(a2 + 24) = sub_24DC1CBBC(5, (uint64_t)sub_24DC2A29C, (uint64_t)&v77[-32]);
  uint64_t v72 = swift_allocObject();
  id v73 = v86;
  *(void *)(v72 + 16) = a2;
  *(void *)(v72 + 24) = v73;
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = sub_24DC29D90;
  *(void *)(v74 + 24) = v72;
  uint64_t v82 = (unsigned char *)v72;
  id v91 = (uint64_t (*)(uint64_t))sub_24D3E3980;
  uint64_t v92 = v74;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v88 = 1107296256;
  id v89 = sub_24D3E38DC;
  unint64_t v90 = &block_descriptor_157_1;
  id v75 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  LODWORD(v86) = objc_msgSend(v85, sel_executeSwift_error_, v75, &aBlock);
  _Block_release(v75);
  id v76 = aBlock;
  LOBYTE(v72) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v72) {
LABEL_95:
  }
    __break(1u);
  if ((v86 & 1) == 0)
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  swift_release_n();
  sub_24D43DD74(v20);
  sub_24D43DD74((uint64_t)v83);
  sub_24D43DD74((uint64_t)a3);
  swift_release();
}